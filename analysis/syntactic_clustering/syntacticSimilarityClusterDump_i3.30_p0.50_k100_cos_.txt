Cluster stats:

nClusters: 479
TotalPatterns: 1399
totalnProjects: 736
suffix: _i3.30_p0.50_k100_cos_


cluster 0 stats:
nPatterns: 69.0
nProjects: 150
shortest: \w*
Features:

1: LIT|a literal character | 6.579710144927536
2: KLE|zero-or-more repetition | 3.1594202898550723
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.8405797101449277
4: CG|a capture group | 1.3043478260869565
5: ADD|one-or-more repetition | 0.7971014492753623
6: ANY|any non-newline char | 0.6086956521739131
7: STR|start-of-line | 0.3188405797101449
8: END|end-of-line | 0.30434782608695654
9: CCC|custom character class | 0.2753623188405797
10: WRD|[a-zA-Z0-9\_] | 0.2608695652173913
11: NCCC|negated CCC | 0.2028985507246377
12: DEC|any of: 0123456789 | 0.15942028985507245
13: NWSP|any non-whitespace | 0.15942028985507245
14: OR|logical or | 0.15942028985507245
15: LZY|as few reps as possible | 0.14492753623188406
16: QST|zero-or-one repetition | 0.13043478260869565
17: PNG|named capture group | 0.10144927536231885
18: NCG|group without capturing | 0.057971014492753624
19: RNG|chars within a range | 0.028985507246376812
20: LKB|matching sequence precedes | 0.014492753623188406


0000 | 0054 | '\\s*,\\s*'
0001 | 0017 | '\\s*#?\\s*$'
0002 | 0016 | 'hg\\s*pull\\s*(.*)\\s*'
0003 | 0015 | '^\\s*\\n'
0004 | 0015 | '^\\s*=\\s*([^\\s;,]*)'
0005 | 0013 | '^(\\s*)(\\w*)'
0006 | 0009 | '\\s*([^: ]*)\\s*:(.*)'
0007 | 0009 | '^def\\s*(\\w+)\\s*=(.*)$'
0008 | 0006 | '\\s*>$'
0009 | 0006 | '^\\s*\\((.*)\\)\\s*$'
0010 | 0006 | 'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0011 | 0006 | '^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$'
0012 | 0005 | '/\\*\\*'
0013 | 0004 | u'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0014 | 0004 | u'^\\s*([-\\w]+\\s*:[^:;]*(;\\s*|$))*$'
0015 | 0003 | u'\\w*'
0016 | 0003 | u'<(/?)\\s*b\\s*>'
0017 | 0003 | '(\\s*\\=)|(\\s*\\:)'
0018 | 0003 | '\\s*\\#\\s*include\\s+<cxxtest/'
0019 | 0003 | 'label(\\s*)=(\\s*)"\\s%tmp(.\\w*)*(\\s*)"'
0020 | 0003 | 'DOCTYPE\\s+(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'
0021 | 0002 | '\\s*\\[.*$'
0022 | 0002 | '^\\s*\\*+/'
0023 | 0002 | '\\s*\\{\\s*'
0024 | 0002 | u'\\s*,?\\s*'
0025 | 0002 | '^\\s*//\\s*$'
0026 | 0002 | '->\\s*(\\S+)$'
0027 | 0002 | '\\s*\n\\s*\n\\s*'
0028 | 0002 | '\\s+|(?:\\s*,\\s*)'
0029 | 0002 | '\\s*modtime:\\s*(.*)'
0030 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0031 | 0002 | '\\s*#*\\s*pylint:(.*)'
0032 | 0002 | '^(\\w+)\\s*=\\s*(.+)$'
0033 | 0002 | '\\[tag:\\s*([\\S]+)\\s*]'
0034 | 0002 | '^\\s+:template:\\s*(.*?)\\s*$'
0035 | 0002 | '#\\s*-\\*-\\s+coding:\\s+(\\w+)\\s+-\\*-'
0036 | 0002 | '^(\\s+\\(return-type\\s+)([^\\s]+)(\\s*\\))$'
0037 | 0002 | '(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*%(?P<cmd>.*)'
0038 | 0001 | '\\s*(;)'
0039 | 0001 | '\\s*(<!>=)'
0040 | 0001 | '\\s*(\\n|$)'
0041 | 0001 | '\\s*<p>\\s*'
0042 | 0001 | '^\\s*(\\s?>)+'
0043 | 0001 | '\\s*\\(\\s*\\('
0044 | 0001 | '(\\S+):\\s*(.*)'
0045 | 0001 | '\\s*(?P<a>,|:)\\s*'
0046 | 0001 | '(?<=\\()\\w*\\,?\\s*'
0047 | 0001 | 'MINOR\\s*=\\s*(\\d+)'
0048 | 0001 | '##\\s*(\\S+)\\s+(\\S*)'
0049 | 0001 | '^.*<\\s*html(\\s*|>).*$'
0050 | 0001 | '\\s*(\\S+)\\s+/(.*)/\\s*$'
0051 | 0001 | '^\\s*Version\\s*:\\s*(\\S+)'
0052 | 0001 | 'from\\s*(.*?)\\s*import\\s*(.+)'
0053 | 0001 | '.*\\((.*)(\\s*Format*\\s*)\\).*?'
0054 | 0001 | '(#\trenamed:\\s+)(.*?)\\s->\\s(.*)'
0055 | 0001 | '(\\S+)\\s*[.]\\s*type\\s*[(]\\s*[)]'
0056 | 0001 | '(\\S+\\s*)[.]shape\\s*=[^=]\\s*(.+)'
0057 | 0001 | '<\\s*(\\w[\\w\\d]*)\\s*=\\s*(.*?)\\s*>'
0058 | 0001 | '^(.*)(\\stime\\selapsed:\\s*)(.*)\\s*$'
0059 | 0001 | '^(\\w+):\\s.*<(.*)>\\smtu\\s(\\d+)\\s.*'
0060 | 0001 | '^\\s*([^\\s]+)(?:(?:\\s*=\\s*)|\\s+)(.+)$'
0061 | 0001 | '(\\S+\\s*[(].+),\\s*savespace\\s*=.+\\s*[)]'
0062 | 0001 | '\\s*bytes\\s*=\\s*(\\d+)\\s*-\\s*(\\d+)\\s*'
0063 | 0001 | '\\$\\(call\\s+moa_load\\s*,\\s*(\\S*)\\s*\\)'
0064 | 0001 | '^\\s*class\\s+([a-zA-Z_]\\w*)\\s*(\\([\\s\\w.,]*\\))?:\\s*$'
0065 | 0001 | 'Stream\\s*(.*?)[,|:|\\(|\\[].*?\\s*Video:\\s*(.*?),\\s*(\\d*)x(\\d*)'
0066 | 0001 | '\\s*(((if|while)\\s*\\(|else\\s*|else\\s+if\\s*\\(|for\\s*\\(.*\\))[^{;]*)'
0067 | 0001 | '^\\s*vtk(Abstract)?Type(Revision)*Macro\\s*\\(\\s*(vtk[^ ,]+)\\s*,\\s*(vtk[^ \\)]+)\\s*\\)\\s*'
0068 | 0001 | '#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'



cluster 1 stats:
nPatterns: 103.0
nProjects: 148
shortest: [A-Z_]+
Features:

1: LIT|a literal character | 12.805825242718447
2: RNG|chars within a range | 4.330097087378641
3: CCC|custom character class | 2.0485436893203883
4: CG|a capture group | 0.883495145631068
5: ADD|one-or-more repetition | 0.6213592233009708
6: KLE|zero-or-more repetition | 0.5922330097087378
7: END|end-of-line | 0.4368932038834951
8: STR|start-of-line | 0.4174757281553398
9: SNG|exactly n repetition | 0.3592233009708738
10: NCCC|negated CCC | 0.23300970873786409
11: OR|logical or | 0.14563106796116504
12: QST|zero-or-one repetition | 0.14563106796116504
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1262135922330097
14: DBB|$n\le x \le m$ repetition | 0.0970873786407767
15: ANY|any non-newline char | 0.08737864077669903
16: PNG|named capture group | 0.04854368932038835
17: DEC|any of: 0123456789 | 0.038834951456310676
18: NCG|group without capturing | 0.038834951456310676
19: WNW|word/non-word boundary | 0.038834951456310676
20: WRD|[a-zA-Z0-9\_] | 0.038834951456310676
21: LWB|at least n repetition | 0.02912621359223301
22: LZY|as few reps as possible | 0.019417475728155338
23: NWSP|any non-whitespace | 0.019417475728155338
24: ENDZ|absolute end of string | 0.009708737864077669
25: NLKA|sequence doesn't follow  | 0.009708737864077669
26: OPT|options wrapper | 0.009708737864077669


0000 | 0022 | '^[ -~]{0,200}[!-~]$'
0001 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0002 | 0013 | '^[a-zA-Z_][a-zA-Z_0-9]*(\\.[a-zA-Z_][a-zA-Z_0-9]*)*$'
0003 | 0010 | '0x([0-9a-fA-F]+)L?'
0004 | 0010 | '[^A-Za-z0-9]Q_OBJECT[^A-Za-z0-9]'
0005 | 0010 | '/[*] #undef ([A-Z][A-Za-z0-9_]+) [*]/\n'
0006 | 0010 | '^[ \\t]*(def|class)[ \\t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \\t]*[:\\(]'
0007 | 0009 | '^([A-Z]+)([1-9][0-9]*)$'
0008 | 0009 | '\\s*def\\s+(p_[a-zA-Z_0-9]*)\\('
0009 | 0009 | '^\\$([_a-zA-Z]\\w*|{[_a-zA-Z]\\w*})$'
0010 | 0008 | '^([a-zA-F0-9_-]*)[\\.]?.*$'
0011 | 0007 | '[a-zA-Z]'
0012 | 0007 | '^[a-zA-Z_]\\w*'
0013 | 0007 | '&#?[A-Za-z0-9]+?;'
0014 | 0007 | 'md5=[0-9a-f]{32}$'
0015 | 0006 | "[^A-Za-z0-9\\-_.~!*'();:@&=+$,/?%#[\\]]"
0016 | 0006 | '([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)'
0017 | 0005 | "(?:[-a-zA-Z0-9!$&'\\(\\)\\*+,;=._~]|%[a-zA-Z0-9]{2})+$"
0018 | 0004 | u'[^A-Za-z0-9.]+'
0019 | 0004 | '^[a-zA-Z0-9-]{1,100}$'
0020 | 0004 | '([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*'
0021 | 0004 | '\\$\\{?[a-zA-Z_][a-zA-Z0-9_]*(\\([^)]*\\))?(\\.[a-zA-Z0-9_]+(\\([^)]*\\))?)*\\}?'
0022 | 0003 | '([A-Z][a-z]+)'
0023 | 0003 | '([a-zA-Z0-9]*)$'
0024 | 0003 | '^#[0-9A-Fa-f]{6}$'
0025 | 0003 | '^[+/0-9A-Za-z]*=*$'
0026 | 0003 | '^[0-9A-Za-z._-]{0,100}$'
0027 | 0003 | 'md[0-9]$|sd[a-z]+$|xvd[a-z]+$'
0028 | 0003 | '&#([xX]?[0-9a-fA-F]+)[^0-9a-fA-F]'
0029 | 0002 | '[A-Za-z]'
0030 | 0002 | '^[0-9]{2}$'
0031 | 0002 | '^[-_A-Za-z0-9]+$'
0032 | 0002 | '^\\s*@([a-zA-Z]+)'
0033 | 0002 | '^\\#([0-9a-fA-F]{6})$'
0034 | 0002 | '^([a-zA-Z0-9_]+):( |$)'
0035 | 0002 | '<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'
0036 | 0002 | '@%\\(([a-zA-Z][a-zA-Z0-9_-]*)\\)s'
0037 | 0002 | 'SNIPPET::([A-Za-z0-9_\\-\\/\\.]+)'
0038 | 0002 | '\\\\x([0-9a-fA-F]{2}|[0-9a-fA-F])'
0039 | 0002 | '\\s*#define\\s+([a-zA-Z][a-zA-Z_0-9]*)\\s+([a-zA-Z_0-9]+)'
0040 | 0001 | '[A-Z_]+'
0041 | 0001 | '[^0-9.]'
0042 | 0001 | '^[a-zA-Z]*$'
0043 | 0001 | '^[a-zA-Z]+='
0044 | 0001 | '[0-9a-f]{32}'
0045 | 0001 | '^[^A-Za-z_]$'
0046 | 0001 | '^[a-z0-9-]+$'
0047 | 0001 | '[0-9a-fA-F]{6}'
0048 | 0001 | '^[0-9a-f]{32}$'
0049 | 0001 | '#[0-9a-fA-F]{6}'
0050 | 0001 | '([^a-zA-Z_0-9])'
0051 | 0001 | '[^a-zA-Z0-9_ -]'
0052 | 0001 | '^0x([0-9a-z]+)$'
0053 | 0001 | '^@[A-Z0-9\\_]+$'
0054 | 0001 | '^[a-z|A-Z]\\w*$'
0055 | 0001 | '[^a-zA-Z0-9_\\.]'
0056 | 0001 | "(^[A-Za-z\\' ]+$)"
0057 | 0001 | '[a-zA-Z]:(/|\\\\)'
0058 | 0001 | '[a-zA-Z0-9_]{2,10}'
0059 | 0001 | '[a-zA-Z]+://[\\S]+'
0060 | 0001 | '([^A-Za-z0-9\\._-])'
0061 | 0001 | '^([a-fA-F0-9]{64})$'
0062 | 0001 | '[^a-z]([a-z]+)[^a-z]'
0063 | 0001 | u'[^A-Za-z0-9_\\.\\-]'
0064 | 0001 | '[$]([A-Z_][A-Z0-9_]*)'
0065 | 0001 | '^([a-zA-Z0-9_]*) *=.*$'
0066 | 0001 | ' at 0x[0-9a-f]{6,}(>+)$'
0067 | 0001 | u'[^0-9]([0-9]{4})[^0-9]'
0068 | 0001 | '(?:[.~]|/[a-zA-Z_0-9]+)/'
0069 | 0001 | '([a-zA-Z_][a-zA-Z0-9_]*)'
0070 | 0001 | '/gs/[a-z0-9\\.\\-_]{3,}$'
0071 | 0001 | '\\$\\{([a-zA-Z0-9_-]+)\\}'
0072 | 0001 | '\\b[A-Z](\\.[A-Za-z])+\\b'
0073 | 0001 | '(?i)<[a-z\\.&_0-9\\@\\-]+>'
0074 | 0001 | '\\?[a-zA-Z_][a-zA-Z0-9_]*$'
0075 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,4}$'
0076 | 0001 | '^[a-z0-9][a-z0-9\\.\\-]{2,}$'
0077 | 0001 | '([A-Z]{2}[0-9]{2,3}-[0-9]{2})'
0078 | 0001 | '^&[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0079 | 0001 | '[ _\\.-]+cd[ _\\.-]*([0-9a-d]+)'
0080 | 0001 | '^[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]$'
0081 | 0001 | '(^[^a-zA-Z\\._]+)|([^a-zA-Z\\._0-9]+)'
0082 | 0001 | '[- \n\t\ra-zA-Z0-9()+,./:=?;!*#@$_%]*'
0083 | 0001 | '^([_A-Za-z][_A-Za-z0-9]*|\\.|\\.\\.)$'
0084 | 0001 | '\\s+(([0-9A-F]{2}:){5}[0-9A-F]{2})\\s+'
0085 | 0001 | '--[0-9]+-- ([^(:]*) \\((0x[0-9a-f]+)\\)'
0086 | 0001 | '^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$'
0087 | 0001 | '\\b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\\b'
0088 | 0001 | '^([0-9a-fA-F]{1,2}:){5}[0-9a-fA-F]{1,2}$'
0089 | 0001 | '^[0-9x]+ [0-9xA-F]+ .* [A-Z][A-Z] [0-9].*$'
0090 | 0001 | '([^a-zA-Z0-9]*)([a-zA-Z0-9]+)([^a-zA-Z0-9]*)'
0091 | 0001 | '([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'
0092 | 0001 | '([a-zA-Z][a-zA-Z]|[iIxX]-([a-zA-Z])+)(-[a-zA-Z])*'
0093 | 0001 | '[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?'
0094 | 0001 | '^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$'
0095 | 0001 | '.*(?P<code1>[sS][0-9]{2}[eE][0-9]{2})(-(?P<code2>[0-9]{2}))?.*'
0096 | 0001 | '^([0-9]{4})-([0-1][0-9])-([0-3][0-9])(-([0-2][0-9])-([0-5][0-9]))? +(.*)$'
0097 | 0001 | '^(?P<username>[A-Za-z0-9_\\.-]+@)?(?P<hostname>[A-Za-z0-9_\\.-]+):(?P<path>.*)'
0098 | 0001 | '\\A#([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])\\Z'
0099 | 0001 | '^([A-Za-z0-9 .#(),_/-]+) +\\(([0-9A-F]+), ?([0-9A-F]+)\\) ([A-Z][A-Z]) ([0-9]+)$'
0100 | 0001 | '^([-_./a-zA-Z0-9]+)\\s+(\\d+)\\s+(\\S+?)((?:\\s+[-_./a-zA-Z0-9]+=[-_./a-zA-Z0-9]+)*)$'
0101 | 0001 | '([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])'
0102 | 0001 | '^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$'



cluster 2 stats:
nPatterns: 34.0
nProjects: 109
shortest: [^+0-9]
Features:

1: LIT|a literal character | 9.441176470588236
2: CCC|custom character class | 2.5
3: RNG|chars within a range | 2.5
4: CG|a capture group | 1.6176470588235294
5: ADD|one-or-more repetition | 1.4411764705882353
6: KLE|zero-or-more repetition | 0.8235294117647058
7: ANY|any non-newline char | 0.4117647058823529
8: STR|start-of-line | 0.35294117647058826
9: QST|zero-or-one repetition | 0.3235294117647059
10: END|end-of-line | 0.29411764705882354
11: NCCC|negated CCC | 0.2647058823529412
12: OR|logical or | 0.2647058823529412
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2647058823529412
14: NCG|group without capturing | 0.08823529411764706
15: LWB|at least n repetition | 0.058823529411764705
16: LZY|as few reps as possible | 0.058823529411764705
17: SNG|exactly n repetition | 0.058823529411764705
18: DBB|$n\le x \le m$ repetition | 0.029411764705882353
19: NLKA|sequence doesn't follow  | 0.029411764705882353
20: WRD|[a-zA-Z0-9\_] | 0.029411764705882353


0000 | 0057 | '<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'
0001 | 0013 | '([0-9]+)'
0002 | 0006 | '[0-9]+,[0-9]+'
0003 | 0003 | '^(\\w+)=([a-f0-9]+)'
0004 | 0003 | '\\\\([0-3][0-7][0-7])'
0005 | 0003 | '^(.*)~([+-][0-9]{2})00$'
0006 | 0003 | '^@@ -([0-9]*),([0-9]*) \\+([0-9]*),([0-9]*) @@'
0007 | 0002 | '%([0-9]+)'
0008 | 0002 | '[^0-9:\\.]'
0009 | 0002 | '^v([0-9]+|[0-9]+\\.[0-9]+)(/.*|$)'
0010 | 0002 | '^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'
0011 | 0002 | '^(\\+[3-9]{1,}|\\+{3,}|\\+[1-9][0-9]+)$'
0012 | 0002 | '([^:]*):\\s+scsi([0-9]+)\\s+channel=([0-9]+)\\s+id=([0-9]+)\\s+lun=([0-9]+)'
0013 | 0001 | '[^+0-9]'
0014 | 0001 | "([0-9]+)'"
0015 | 0001 | ' - [0-9]+'
0016 | 0001 | '[0-9]+\\.'
0017 | 0001 | '(.*): [0-9]'
0018 | 0001 | 'w[0-9]*[nN]'
0019 | 0001 | '([0-9]+)\\s+min'
0020 | 0001 | 'N=10: ([.0-9]+)'
0021 | 0001 | '(0|[1-9][0-9]*):'
0022 | 0001 | '^([0-9]+)-.+/.+$'
0023 | 0001 | '([1-9][0-9]*)*(.*)'
0024 | 0001 | '\\s*([a-f0-9]+):.*'
0025 | 0001 | '^([A-Z]+)([0-9]+)$'
0026 | 0001 | '.*[0-9]_srcCol[0-9].*'
0027 | 0001 | '^(-?[0-9\\.]+)\\s*cm$'
0028 | 0001 | '(.+):([0-9]+)[:]{0,1}.*'
0029 | 0001 | '^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'
0030 | 0001 | '^(.+?)[ \\._\\-]\\[?([0-9]+)x([0-9]+)[^\\/]*$'
0031 | 0001 | '^((?:[^-]+|-(?![0-9]))+)-([0-9][^-]*)(?:-(.*))?$'
0032 | 0001 | '==[0-9]+==\\s*[#0-9]+\\s*([0-9A-Fa-fx]+):(?:[^ ]* )*([^ :\n]+)'
0033 | 0001 | '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'



cluster 3 stats:
nPatterns: 57.0
nProjects: 86
shortest: >(\d+)$
Features:

1: LIT|a literal character | 5.771929824561403
2: DEC|any of: 0123456789 | 3.3508771929824563
3: CG|a capture group | 2.5789473684210527
4: ADD|one-or-more repetition | 2.43859649122807
5: KLE|zero-or-more repetition | 0.5789473684210527
6: QST|zero-or-one repetition | 0.49122807017543857
7: CCC|custom character class | 0.47368421052631576
8: ANY|any non-newline char | 0.40350877192982454
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333
10: STR|start-of-line | 0.2631578947368421
11: END|end-of-line | 0.24561403508771928
12: WRD|[a-zA-Z0-9\_] | 0.24561403508771928
13: NCG|group without capturing | 0.17543859649122806
14: NWSP|any non-whitespace | 0.10526315789473684
15: RNG|chars within a range | 0.08771929824561403
16: LZY|as few reps as possible | 0.07017543859649122
17: OR|logical or | 0.07017543859649122
18: NCCC|negated CCC | 0.05263157894736842
19: ENDZ|absolute end of string | 0.03508771929824561
20: NDEC|any non-decimal | 0.03508771929824561
21: NWRD|non-word chars | 0.03508771929824561
22: PNG|named capture group | 0.03508771929824561
23: DBB|$n\le x \le m$ repetition | 0.017543859649122806
24: LWB|at least n repetition | 0.017543859649122806
25: NLKA|sequence doesn't follow  | 0.017543859649122806
26: SNG|exactly n repetition | 0.017543859649122806
27: WNW|word/non-word boundary | 0.017543859649122806


0000 | 0016 | '\\S+ (\\d+)\\.(\\d+)\\.?(\\d+)?'
0001 | 0012 | '(\\d+\\.\\d+\\.\\d+)'
0002 | 0005 | '\\b0+(\\d+)(?!\\d)'
0003 | 0004 | 'bytes=(\\d+)-(\\d+)'
0004 | 0004 | '(\\d+)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)'
0005 | 0004 | '^#define SQLITE_VERSION\\D*(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?\\D*'
0006 | 0003 | '\\d+ (\\d+):'
0007 | 0003 | u'^\\d+(\\.\\d+)*$'
0008 | 0003 | '<path\\[(\\d+)\\]>(.*)'
0009 | 0003 | '\\[SQLCode\\: (\\d+)\\]'
0010 | 0003 | '(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0011 | 0003 | '^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0012 | 0003 | '(\\d+):(\\d+):(\\d+)(?:\\.(\\d{0,6}))?'
0013 | 0003 | '([\\d.]+) ([\\d.]+) ([\\d.]+) (\\d+)/(\\d+)'
0014 | 0003 | '(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)'
0015 | 0002 | '\\d+(\\.\\d*)?'
0016 | 0002 | '(\\s*)(\\\\.+?)(\\s+)$'
0017 | 0002 | '\\(CVS\\) ([\\d\\.]+) '
0018 | 0002 | '(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'
0019 | 0002 | '^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'
0020 | 0001 | '>(\\d+)$'
0021 | 0001 | '(\\{.+\\})'
0022 | 0001 | '{(\\d+)\\}'
0023 | 0001 | '([\\w\\d]+)'
0024 | 0001 | '^(\\d+)\\s(.*)$'
0025 | 0001 | '([^*]+)\\*(\\d+)'
0026 | 0001 | '(-?\\d+):(-?\\d+)'
0027 | 0001 | '\\s+\\(\\d{4}\\)$'
0028 | 0001 | '(\\d+):(\\d\\d)\\Z'
0029 | 0001 | '^\\d+(\\.\\d+){1,}$'
0030 | 0001 | ' \\d+.\\d+ tb\\(r\\)'
0031 | 0001 | '^ (\\S+) (\\d+)/(\\d+)'
0032 | 0001 | '^queryCid(\\(.+\\))\\s*$'
0033 | 0001 | '^(\\d+\\.x-)?(\\d+)\\..*$'
0034 | 0001 | '^GNU gdb [^\\d]*(\\d+)\\.'
0035 | 0001 | '.\\d+\\.\\d+\\.\\d+\\.\\d+'
0036 | 0001 | 'NUMA node\\(s\\):\\s+(\\d+)'
0037 | 0001 | '^HTTP/\\d\\.\\d\\s+\\d+\\s*'
0038 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)(\\w?)'
0039 | 0001 | '^([\\.\\/\\w]+\\.tex)(:\\d+:.*)'
0040 | 0001 | '^.*(\\d+){(\\d+),(\\d+),(.)}.*$'
0041 | 0001 | '(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)'
0042 | 0001 | 'H(F)(DTE)(\\d\\d)(\\d\\d)(\\d\\d)\\Z'
0043 | 0001 | '^(\\S+)\\t(\\S+)\\t(\\S+)\\t(.+)\\n$'
0044 | 0001 | '^(\\d+)\\W(\\w+)\\W(\\w+)[ \t]+(.*)$'
0045 | 0001 | 'mass .*?(\\d+\\.\\d+).*?(\\d+\\.\\d+)'
0046 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'
0047 | 0001 | '#loadfactor(\\s+(\\S+))?\\s+(\\d+\\.?\\d*)'
0048 | 0001 | '(\\d+\\.\\d+\\.\\d+)[T\\.](\\d+(\\.\\d+)*)$'
0049 | 0001 | 'TOTAL\\s+(\\d+)\\s+[\\-\\d\\.]+\\%\\s+(\\d+)'
0050 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0051 | 0001 | '[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'
0052 | 0001 | '([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'
0053 | 0001 | 'pip \\d(\\.[\\d])+(\\.(pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'
0054 | 0001 | '[^\\d]+ (\\d+)\\.(\\d+)\\.(\\d+)\\s*\\((?P<datetime>.+?)\\)\\s*(?P<type>[a-z]+)?'
0055 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>'
0056 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'



cluster 4 stats:
nPatterns: 44.0
nProjects: 84
shortest: \.|\\
Features:

1: LIT|a literal character | 7.318181818181818
2: CG|a capture group | 1.2045454545454546
3: KLE|zero-or-more repetition | 0.8863636363636364
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6363636363636364
5: CCC|custom character class | 0.6136363636363636
6: ADD|one-or-more repetition | 0.5909090909090909
7: NCCC|negated CCC | 0.4318181818181818
8: OR|logical or | 0.4318181818181818
9: WRD|[a-zA-Z0-9\_] | 0.29545454545454547
10: NCG|group without capturing | 0.25
11: ANY|any non-newline char | 0.20454545454545456
12: QST|zero-or-one repetition | 0.20454545454545456
13: WNW|word/non-word boundary | 0.18181818181818182
14: LZY|as few reps as possible | 0.13636363636363635
15: STR|start-of-line | 0.13636363636363635
16: END|end-of-line | 0.11363636363636363
17: NWSP|any non-whitespace | 0.11363636363636363
18: SNG|exactly n repetition | 0.09090909090909091
19: LKA|matching sequence follows | 0.06818181818181818
20: BKR|match the $i^{th}$ CG | 0.045454545454545456
21: DEC|any of: 0123456789 | 0.045454545454545456
22: LWB|at least n repetition | 0.045454545454545456
23: NLKB|sequence doesn't precede | 0.045454545454545456
24: NWRD|non-word chars | 0.045454545454545456
25: RNG|chars within a range | 0.045454545454545456
26: LKB|matching sequence precedes | 0.022727272727272728
27: PNG|named capture group | 0.022727272727272728


0000 | 0026 | '[ \\(\\)<>@,;:\\\\"/\\[\\]\\?=]'
0001 | 0019 | '\\$(\\w+|\\{[^}]*\\})'
0002 | 0008 | '(?:;\\s*|\\s+)(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*;|(?:\\(|\\[|;)\\s*(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*(?:\\]|\\)|;)'
0003 | 0006 | '("(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'(?:[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|[^\\s]+)'
0004 | 0004 | '([\\\\()\\r\\n])'
0005 | 0004 | '(?<!\\\\)((\\\\\\\\)*)\\\\n'
0006 | 0004 | '(^|\\})(([^\\{\\:])+\\:)+([^\\{]*\\{)'
0007 | 0004 | '(\\s+|[^\\s\\w]*\\w+[^0-9\\W]-(?=\\w+[^0-9\\W])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'
0008 | 0003 | '\\.|\\\\'
0009 | 0003 | u'[\\-\\s]'
0010 | 0003 | '([\\s\\\\])'
0011 | 0003 | '(?:\\s*|((?:\\\\\\\\)+))\\\\\\n\\s*'
0012 | 0002 | '"(\\\\\\\\|\\\\"|[^"])*"'
0013 | 0002 | '(.*?)([\\\\\\{\\}\\[\\]])(.*)'
0014 | 0002 | '\\s*([^\\s\\(\\)"\\\'=,\\[\\]/\\?]+)\\s*'
0015 | 0002 | '^\\s*(>>> )?(\\.\\.\\. )?raise(\\s+(\\\'|\\")|\\s*(\\(\\s*)+(\\\'|\\"))'
0016 | 0001 | '(\\\\")'
0017 | 0001 | '(\\\\*)\n'
0018 | 0001 | "[\\s'\\\\]"
0019 | 0001 | '([\\t\\n])'
0020 | 0001 | '([\\{\\}])'
0021 | 0001 | '[/\\\\?\\*:]'
0022 | 0001 | '[\\(\\)\\s,]+'
0023 | 0001 | '\\([\\d,]+\\)'
0024 | 0001 | '\\\\.|\\(\\?P='
0025 | 0001 | '\\[\\[(.*?)\\]\\]'
0026 | 0001 | '(\\$\\([^\\)]*\\))'
0027 | 0001 | u'[_.,\\[\\]\\(\\):]'
0028 | 0001 | '[ \\t]*\\n([^\\r\\n])'
0029 | 0001 | '(?<!\\\\)[^"\\]\\[\\$]+'
0030 | 0001 | '[,;:\\(\\)\\[\\]\\{\\}<>]+'
0031 | 0001 | '\\<(\\w+?)\\>\\s*\\</\\1\\>'
0032 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'
0033 | 0001 | 'rgba?\\(([\\d, \\%\\.]+)\\)'
0034 | 0001 | '[^\\(\\)]*\\((.*?)\\)[^\\(\\)]'
0035 | 0001 | '\\-\\s*\\[\\[(?P<t>\\S+)\\]\\]'
0036 | 0001 | '([\\|\\{\\}\\\\\\.\\+\\[\\]\\(\\)])'
0037 | 0001 | "(\\\\*)(['`:*~\\\\[\\]{}@\\$+\\-.#])"
0038 | 0001 | '[uU]?[rR]?(\\"\\"\\"|\\\'\\\'\\\'|\\"|\\\')'
0039 | 0001 | '\\s*(([\\\'"])(.*?[^\\\\])\\2)\\s*([},=]|$)'
0040 | 0001 | '^\\(\\[(\\S+)\\],\\[(\\S+)\\],\\[(\\S+)\\]\\)$'
0041 | 0001 | '([\\$\\^\\*\\+\\.\\?\\{\\}\\[\\]\\(\\)\\|\\\\])'
0042 | 0001 | '^(\\s*(\\[\\[image((\\(.*\\))|())\\]\\])\\s*)+$'
0043 | 0001 | '^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)'



cluster 5 stats:
nPatterns: 47.0
nProjects: 70
shortest:   
Features:

1: LIT|a literal character | 179.25531914893617
2: CCC|custom character class | 2.234042553191489
3: KLE|zero-or-more repetition | 2.0
4: ANY|any non-newline char | 1.702127659574468
5: ADD|one-or-more repetition | 1.6595744680851063
6: CG|a capture group | 1.4893617021276595
7: RNG|chars within a range | 1.4680851063829787
8: QST|zero-or-one repetition | 1.446808510638298
9: NCG|group without capturing | 1.1063829787234043
10: OR|logical or | 0.7659574468085106
11: DEC|any of: 0123456789 | 0.7446808510638298
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6170212765957447
13: PNG|named capture group | 0.40425531914893614
14: LZY|as few reps as possible | 0.3191489361702128
15: NCCC|negated CCC | 0.3191489361702128
16: STR|start-of-line | 0.3191489361702128
17: DBB|$n\le x \le m$ repetition | 0.2553191489361702
18: END|end-of-line | 0.19148936170212766
19: NWSP|any non-whitespace | 0.1702127659574468
20: SNG|exactly n repetition | 0.1276595744680851
21: BKR|match the $i^{th}$ CG | 0.10638297872340426
22: LKB|matching sequence precedes | 0.0851063829787234
23: NLKA|sequence doesn't follow  | 0.0851063829787234
24: NLKB|sequence doesn't precede | 0.0851063829787234
25: OPT|options wrapper | 0.0851063829787234
26: WRD|[a-zA-Z0-9\_] | 0.06382978723404255
27: LKA|matching sequence follows | 0.0425531914893617
28: WNW|word/non-word boundary | 0.0425531914893617
29: ENDZ|absolute end of string | 0.02127659574468085
30: LWB|at least n repetition | 0.02127659574468085


0000 | 0013 | '^ *\n'
0001 | 0013 | '\n    \\""" [^"\\\\]* (?:\n                     (?: \\\\. | "(?!"") )\n                     [^"\\\\]*\n                 )*\n    (?: \\""" )?\n\n|   " [^"\\\\\\n]* (?: \\\\. [^"\\\\\\n]* )* "?\n\n|   \'\'\' [^\'\\\\]* (?:\n                   (?: \\\\. | \'(?!\'\') )\n                   [^\'\\\\]*\n                )*\n    (?: \'\'\' )?\n\n|   \' [^\'\\\\\\n]* (?: \\\\. [^\'\\\\\\n]* )* \'?\n'
0002 | 0007 | '^columns .* are not unique$'
0003 | 0006 | '\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  (?=[ \\t]|$)           # whitespace or the end of the string\n  '
0004 | 0005 | "\n        ^(\\#{1,6})  # \\1 = string of #'s\n        [ \\t]*\n        (.+?)       # \\2 = Header text\n        [ \\t]*\n        (?<!\\\\)     # ensure not an escaped trailing '#'\n        \\#*         # optional closing #'s (not counted)\n        \\n+\n        "
0005 | 0004 | '\\s*# SOURCE LINE (\\d+)'
0006 | 0003 | '  '
0007 | 0003 | '^ *(.*) *( *) *$'
0008 | 0003 | '.*OOM max count: (\\d+).*'
0009 | 0003 | '(^\\s+Invalid write of size )\\d+'
0010 | 0003 | "Success: created profile .* at '([^']+)'"
0011 | 0003 | 'Change \\d+ by (?P<who>\\S+)@\\S+ on (?P<when>.+)$'
0012 | 0003 | '\n      ^\\s*   # Start of a new line and whitespace\n      /\\*    # Opening "/*"\n      .*?    # Non greedy match of any characters (including newlines)\n      \\*/    # Closing "*/'
0013 | 0003 | '\n    (\n        (?:".*?")|              # double quotes\n        (?:\'.*?\')|              # single quotes\n        (?:[^\'",\\s=][^,=]*?)       # unquoted\n    )\n    (?:\n    (?:\\s*,\\s*)|(?:\\s*$)            # comma\n    )\n'
0014 | 0003 | '        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)              # ...a number (with at least one digit)\n        (?P<int>\\d*)             # having a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'
0015 | 0002 | 'Last Changed Rev: (\\d+)'
0016 | 0002 | '(?sm)\\s*Type X to quit.*'
0017 | 0002 | 'the LaTeX files are in (.*)\\.'
0018 | 0002 | 'This is file for test of tar-in.'
0019 | 0002 | '^(Win|PPC Mac OS X|Linux(?! x86_64))'
0020 | 0002 | '\\[0\\:0\\] -A .* -j ACCEPT -p icmp -s 192.168.11.0/24'
0021 | 0002 | '<\\?xml\n            (   # strict ordering is reqd but we\'ll be liberal here\n                \\s+version=[\'"](?P<ver>.*?)[\'"]\n            |   \\s+encoding=[\'"](?P<enc>.*?)[\'"]\n            )+\n            .*? # other possible junk\n            \\s*\\?>\n        '
0022 | 0002 | '\n        <!DOCTYPE\n        \\s+(?P<name>[a-zA-Z_:][\\w:.-]*)\n        \\s+(?:\n            SYSTEM\\s+(["\'])(?P<system_id_a>.*?)\\2\n            |\n            PUBLIC\n            \\s+(["\'])(?P<public_id_b>.*?)\\4\n            # HTML 3.2 and 2.0 doctypes don\'t include a system-id.\n            (?:\\s+(["\'])(?P<system_id_b>.*?)\\6)?\n        )\n        (\\s*\\[.*?\\])?        \n        \\s*>\n        '
0023 | 0002 | "\n        ^\n        \\s*\n        (?P<operator>(~=|==|!=|<=|>=|<|>|===))\n        (?P<version>\n            (?:\n                # The identity operators allow for an escape hatch that will\n                # do an exact string match of the version you wish to install.\n                # This will not be parsed by PEP 440 and we cannot determine\n                # any semantic meaning from it. This operator is discouraged\n                # but included entirely as an escape hatch.\n                (?<====)  # Only match for the identity operator\n                \\s*\n                [^\\s]*    # We just match everything, except for whitespace\n                          # since we are only testing for strict identity.\n            )\n            |\n            (?:\n                # The (non)equality operators allow for wild card and local\n                # versions to be specified so we have to define these two\n                # operators separately to enable that.\n                (?<===|!=)            # Only match for equals and not equals\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n\n                # You cannot use a wild card and a dev or local version\n                # together so group them with a | and make them optional.\n                (?:\n                    (?:[-_\\.]?dev[-_\\.]?[0-9]*)?         # dev release\n                    (?:\\+[a-z0-9]+(?:[-_\\.][a-z0-9]+)*)? # local\n                    |\n                    \\.\\*  # Wild card syntax of .*\n                )?\n            )\n            |\n            (?:\n                # The compatible operator requires at least two digits in the\n                # release segment.\n                (?<=~=)               # Only match for the compatible operator\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)+   # release  (We have a + instead of a *)\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n            |\n            (?:\n                # All other operators only allow a sub set of what the\n                # (non)equality operators do. Specifically they do not allow\n                # local versions to be specified nor do they allow the prefix\n                # matching wild cards.\n                (?<!==|!=|~=)         # We have special cases for these\n                                      # operators so we want to make sure they\n                                      # don't match here.\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n        )\n        \\s*\n        $\n        "
0024 | 0001 | ' ( +)|^ '
0025 | 0001 | ' at -?0x[^>]+'
0026 | 0001 | 'iax2 peers \\['
0027 | 0001 | 'total = [0-9]+'
0028 | 0001 | '(?<= line )\\d+'
0029 | 0001 | '^New Revision: (\\d+)'
0030 | 0001 | 'diff --git .* b/(.*)\n'
0031 | 0001 | 'Job <(\\d+)> is not found'
0032 | 0001 | '^height.should be ([0-9]+)'
0033 | 0001 | u'(?x) \\( [^()]* \\b few \\b'
0034 | 0001 | '^"I\'m fine" \\(es to en, .*\\)$'
0035 | 0001 | '        Log text 1 \\(issue 321\\).'
0036 | 0001 | "Warning--I didn't find a database entry"
0037 | 0001 | '\\s+src set ".*" \\(([0-9.]+) docs, \\d+ segs\\)'
0038 | 0001 | "This module \\'\\w+\\' is auto-generated with f2py"
0039 | 0001 | '(?x)\n            [\\r\\n]+(\\S+)\n            [\\r\\n]+(\\S+)\n            [\\r\\n]+.+[\\r\\n]+(\\S+)\n'
0040 | 0001 | '(NIST|BLEU) score using\\s+\\d+-grams = ([0-9.]+) for system "(.*)" on document "(.*)" \\((\\d+) segments, (\\d+) words\\)'
0041 | 0001 | 'FooDeathTest\\.\n  Test1\nFoo\\.\n  Bar1\n  Bar2\n  DISABLED_Bar3\nFooBar\\.\n  Baz\nFooTest\\.\n  Test1\n  DISABLED_Test2\n  Test3\n'
0042 | 0001 | '<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>The status of this EDM is (CLOSED|SUSPENDED).&nbsp;&nbsp;Reason: (.*?).</B></font>'
0043 | 0001 | '(?x)\n            [\\r\\n]+(\\S+)\\ \n            (\\S+)\\ +!\\ Time\\ domain.\\ *[\\r\\n]+\n            (\\S+)\\ +!\\ Number\\ of\\ tiers.\\ *[\\r\\n]+"\n'
0044 | 0001 | '\n            (?:^[ \\t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        '
0045 | 0001 | "\n        ^(?!\\.)                            # name may not begin with a dot\n        (\n          [-a-z0-9!\\#$%&'*+/=?^_`{|}~]     # all legal characters except dot\n          |\n          (?<!\\.)\\.                        # single dots only\n        )+\n        (?<!\\.)                            # name may not end with a dot\n        @\n        (\n          localhost\n          |\n          (\n            [a-z0-9]                         # [sub]domain begins with alphanumeric\n            (\n              [-\\w]*                         # alphanumeric, underscore, dot, hyphen\n              [a-z0-9]                       # ending alphanumeric\n            )?\n          \\.                               # ending dot\n          )+\n          [a-z]{2,}                        # TLD alpha-only\n       )$\n    "
0046 | 0001 | "\n        ^\n        (?:\n          # Dotted variants:\n          (?:\n            # Decimal 1-255 (no leading 0's)\n            [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n          |\n            0x0*[0-9a-f]{1,2}  # Hexadecimal 0x0 - 0xFF (possible leading 0's)\n          |\n            0+[1-3]?[0-7]{0,2} # Octal 0 - 0377 (possible leading 0's)\n          )\n          (?:                  # Repeat 0-3 times, separated by a dot\n            \\.\n            (?:\n              [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n            |\n              0x0*[0-9a-f]{1,2}\n            |\n              0+[1-3]?[0-7]{0,2}\n            )\n          ){0,3}\n        |\n          0x0*[0-9a-f]{1,8}    # Hexadecimal notation, 0x0 - 0xffffffff\n        |\n          0+[0-3]?[0-7]{0,10}  # Octal notation, 0 - 037777777777\n        |\n          # Decimal notation, 1-4294967295:\n          429496729[0-5]|42949672[0-8]\\d|4294967[01]\\d\\d|429496[0-6]\\d{3}|\n          42949[0-5]\\d{4}|4294[0-8]\\d{5}|429[0-3]\\d{6}|42[0-8]\\d{7}|\n          4[01]\\d{8}|[1-3]\\d{0,9}|[4-9]\\d{0,8}\n        )\n        $\n    "



cluster 6 stats:
nPatterns: 45.0
nProjects: 68
shortest: (?P<a>x)
Features:

1: LIT|a literal character | 8.577777777777778
2: PNG|named capture group | 3.1333333333333333
3: ADD|one-or-more repetition | 1.9333333333333333
4: DEC|any of: 0123456789 | 1.711111111111111
5: QST|zero-or-one repetition | 1.2
6: KLE|zero-or-more repetition | 1.1777777777777778
7: CCC|custom character class | 0.9333333333333333
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.8888888888888888
9: CG|a capture group | 0.8
10: RNG|chars within a range | 0.6666666666666666
11: NCG|group without capturing | 0.6222222222222222
12: ANY|any non-newline char | 0.5777777777777777
13: SNG|exactly n repetition | 0.4666666666666667
14: STR|start-of-line | 0.4444444444444444
15: END|end-of-line | 0.4222222222222222
16: WRD|[a-zA-Z0-9\_] | 0.3333333333333333
17: OR|logical or | 0.28888888888888886
18: LZY|as few reps as possible | 0.24444444444444444
19: NCCC|negated CCC | 0.2
20: DBB|$n\le x \le m$ repetition | 0.15555555555555556
21: NWSP|any non-whitespace | 0.08888888888888889
22: BKRN|references NCG | 0.022222222222222223
23: ENDZ|absolute end of string | 0.022222222222222223
24: LWB|at least n repetition | 0.022222222222222223


0000 | 0012 | '.*{(?P<size>\\d+)}$'
0001 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0002 | 0011 | '^(?P<initial>\\d{1})(?P<yy>\\d\\d)(?P<mm>\\d\\d)(?P<dd>\\d\\d)(?P<mid>\\d{4})(?P<checksum>\\d{1})'
0003 | 0009 | '(?P<name>(.+))\\s+(?P<hexrgb>#[0-9a-fA-F]{6})'
0004 | 0008 | '(?P<a>x)'
0005 | 0008 | '(?P<unk>x)'
0006 | 0007 | '(?P<replace>(?P<type><(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'
0007 | 0005 | '^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<subminor>\\d+))((rc(?P<release_candidate>\\d+))|dev)?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'
0008 | 0003 | u'^(?P<number>\\d{7})(?P<check>\\d)$'
0009 | 0003 | u'^(?P<number>\\d{1,8})-?(?P<check>\\d)$'
0010 | 0003 | '^\\s+(?P<conn>\\d+)\\s+(?P<acc>\\d+)\\s+(?P<req>\\d+)'
0011 | 0003 | '%(?:(?P<cn>[0-9]+)\\$)?(?P<width>[0-9]+)?(?:.(?P<pres>[0-9]+))?(?P<size>[hL]|(?:ll?))?(?P<type>[dciouxXefgpCSsn])'
0012 | 0003 | u'^(?P<residence>\\d{10})(?P<origin>\\w{1,3})[-\\ ]?(?P<birthday>\\d{7})[-\\ ]?(?P<validity>\\d{7})[-\\ ]?(?P<checksum>\\d{1})$'
0013 | 0003 | '^(?:\\s*)([0-9]+):(?:\\s*)(?P<rx_bytes>\\d+)(?:\\s*)(?P<rx_packets>\\w+)(?:\\s*)(?P<rx_errors>\\d+)(?:\\s*)(?P<rx_drop>\\d+)(?:\\s*)(?P<rx_fifo>\\d+)(?:\\s*)(?P<rx_frame>\\d+)(?:\\s*)(?P<rx_compressed>\\d+)(?:\\s*)(?P<rx_multicast>\\d+)(?:\\s*)(?P<tx_bytes>\\d+)(?:\\s*)(?P<tx_packets>\\w+)(?:\\s*)(?P<tx_errors>\\d+)(?:\\s*)(?P<tx_drop>\\d+)(?:\\s*)(?P<tx_fifo>\\d+)(?:\\s*)(?P<tx_frame>\\d+)(?:\\s*)(?P<tx_compressed>\\d+)(?:\\s*)(?P<tx_multicast>\\d+)(?:.*)$'
0014 | 0002 | '(</?(?:ul|li)[^>]*>)'
0015 | 0002 | '^\\s*@return\\s+(?P<type>\\w+)(?:\\s+(?P<doc>.*))?'
0016 | 0002 | '^(?P<date>\\d{4}-\\d{2}-\\d{2})\\s+(?P<name>.+?)\\s+<(?P<email>[^<>]+)>$'
0017 | 0002 | '(WARNING|ERROR|INFO) \\(l.(?P<line>[0-9]+), c.(?P<column>[0-9]+)\\): (?P<rest>.*)'
0018 | 0002 | '(?P<year>[0-9]{4})(-(?P<month>[0-9]{1,2})(-(?P<day>[0-9]{1,2})((?P<separator>.)(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2})(:(?P<second>[0-9]{2})(\\.(?P<fraction>[0-9]+))?)?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?'
0019 | 0001 | ' *\\)(?P<comma>,?)'
0020 | 0001 | 'TX\\s+bytes:?\\s*(?P<c>\\d+)'
0021 | 0001 | '(?P<clause>\\d+)_(?P<field>.+)$'
0022 | 0001 | '^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'
0023 | 0001 | '^(?P<bytes>\\d+)(?P<unit>[gmkb]?)$'
0024 | 0001 | '(?P<argkey>[^=]+)=(?P<argvalue>[^&]*)'
0025 | 0001 | '(?P<whitespace>[ \n]*)(?P<entry>[^ \n]+)'
0026 | 0001 | '(?P<protocol>[a-z]+)://(?P<token>[0-9:]+)'
0027 | 0001 | '(?P<name>[a-zA-Z0-9_*]+)(?P<default>=.*?)?, '
0028 | 0001 | '^/?(?P<a>\\w+)(/(?P<c>\\w+)(/(?P<f>\\w+))?)?$'
0029 | 0001 | '#\\s*define\\s+(?P<key>\\w+)(?P<value>\\s+[\\w"]*)?'
0030 | 0001 | '(?P<intDigits>\\d*)(?P<dot>\\.)(?P<fracDigits>\\d+)'
0031 | 0001 | '^R(?P<reps>\\d+)?/(?P<start>[^P][^/]*)/(?P<intv>P.+)$'
0032 | 0001 | '(<pre.+?>(<code>)?\\s?!(\\w+?)\\n(.*?)(</code>)?</pre>)'
0033 | 0001 | '(--(?P<key>\\S*)[=](?P<value>\\S*))|(--(?P<option>\\S*))'
0034 | 0001 | '^(?P<neg>-?)---(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0035 | 0001 | '(?P<heading>^\\s*(?P<hmarker>=+)(\\s)*.*(\\s)*(?P=hmarker)( )*$)'
0036 | 0001 | '^(?P<area>1\\d1|11\\d|8\\d\\d)(?P<area2>\\d{3})(?P<station>\\d+)$'
0037 | 0001 | '^(?P<user>[ugo]{0,3})(?P<action>[\\+\\-])(?P<value>[rwxst]{1,3})$'
0038 | 0001 | '^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0039 | 0001 | '(?P<integer>[-+]?[0-9]+)(?P<decimal>\\.[0-9]+)?(?P<exponent>e[-+]?[0-9]+)?'
0040 | 0001 | '[Ee]rr(or)?: (?P<error>.+?(Could not match (?P<near>.+?))?) at /.+?:(?P<line>\\d+)?'
0041 | 0001 | '<COREF\\s+[^>]*?ID="(?P<id>\\w+)"(\\s+TYPE="(?P<type>\\w+)")?(\\s+REF="(?P<ref>\\w+)")?'
0042 | 0001 | '(?P<protocol>PYROLOC|PYROLOCSSL)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<name>\\S*)'
0043 | 0001 | '\\A(?P<head>.*?)(?P<escape>\\\\*)(?P<symbol>\\$\\{(?P<name>[A-z_]\\w*)\\})(?P<tail>.*)\\Z'
0044 | 0001 | '(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'



cluster 7 stats:
nPatterns: 16.0
nProjects: 65
shortest: ()
Features:

1: LIT|a literal character | 3.125
2: CG|a capture group | 1.625
3: KLE|zero-or-more repetition | 1.625
4: ANY|any non-newline char | 1.4375
5: STR|start-of-line | 0.5
6: END|end-of-line | 0.375
7: LZY|as few reps as possible | 0.25
8: CCC|custom character class | 0.125
9: NCCC|negated CCC | 0.125
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125
11: ADD|one-or-more repetition | 0.0625
12: OR|logical or | 0.0625
13: QST|zero-or-one repetition | 0.0625
14: WRD|[a-zA-Z0-9\_] | 0.0625


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0015 | '()'
0002 | 0008 | '(:*)'
0003 | 0008 | '^([^:]*): *(.*)'
0004 | 0006 | '(.*?)(#)(.*)'
0005 | 0002 | '%(.)'
0006 | 0002 | '(Y=.*)'
0007 | 0002 | '^\\s*(>>>|...) (.*)$'
0008 | 0001 | u'(x*)'
0009 | 0001 | '^-(.*)$'
0010 | 0001 | '(.*?)[,(:].*'
0011 | 0001 | '([^:]*):(.*)'
0012 | 0001 | '^(.*?) - (.*?)$'
0013 | 0001 | '^(.*)#{(\\w+)}(.*)$'
0014 | 0001 | '^(.*)PS 3.6-2007(.*)$'
0015 | 0001 | "^(FFLAGS\\s*=').*-m64 (.*)"



cluster 8 stats:
nPatterns: 2.0
nProjects: 61
shortest: ([+-]?\d+)
Features:

1: LIT|a literal character | 6.5
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 2.0
4: CCC|custom character class | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0
6: DEC|any of: 0123456789 | 0.5
7: LZY|as few reps as possible | 0.5
8: NCCC|negated CCC | 0.5
9: QST|zero-or-one repetition | 0.5
10: RNG|chars within a range | 0.5


0000 | 0060 | '[^]]+?\\] +([0-9.]+): (\\w+) <-(\\w+)'
0001 | 0001 | '([+-]?\\d+)'



cluster 9 stats:
nPatterns: 37.0
nProjects: 59
shortest: /$
Features:

1: LIT|a literal character | 11.783783783783784
2: CG|a capture group | 0.6756756756756757
3: ADD|one-or-more repetition | 0.4594594594594595
4: ANY|any non-newline char | 0.4594594594594595
5: QST|zero-or-one repetition | 0.4594594594594595
6: KLE|zero-or-more repetition | 0.43243243243243246
7: NCCC|negated CCC | 0.35135135135135137
8: STR|start-of-line | 0.35135135135135137
9: END|end-of-line | 0.32432432432432434
10: LZY|as few reps as possible | 0.13513513513513514
11: OR|logical or | 0.13513513513513514
12: DEC|any of: 0123456789 | 0.05405405405405406
13: NCG|group without capturing | 0.05405405405405406
14: WRD|[a-zA-Z0-9\_] | 0.05405405405405406
15: CCC|custom character class | 0.02702702702702703
16: DBB|$n\le x \le m$ repetition | 0.02702702702702703
17: NWSP|any non-whitespace | 0.02702702702702703
18: RNG|chars within a range | 0.02702702702702703
19: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.02702702702702703


0000 | 0013 | '^http://'
0001 | 0004 | '/$'
0002 | 0004 | '^https?://bitbucket.org/'
0003 | 0003 | '//+'
0004 | 0003 | '^/dev/'
0005 | 0003 | 'unit(?:2|test2?/)'
0006 | 0002 | '  http://'
0007 | 0002 | '/\\.svn/?'
0008 | 0002 | '(.*//.*?/)'
0009 | 0002 | '^http(s)?://'
0010 | 0002 | 'projects/([^/]+)/?$'
0011 | 0002 | '/(developers/)?apps/'
0012 | 0002 | 'http://([^/]+)(/\\S*)\\s*'
0013 | 0001 | '//.*$'
0014 | 0001 | '^//(.*)'
0015 | 0001 | ':(?://)?'
0016 | 0001 | '/\\.[^/]*$'
0017 | 0001 | '^/cgi-bin/'
0018 | 0001 | '/testing/.*'
0019 | 0001 | '(/s/https?:)/+'
0020 | 0001 | '^(http|https)://'
0021 | 0001 | '^/var/log/[^/]+$'
0022 | 0001 | '^platform/(.*?)/'
0023 | 0001 | 'http://[^/]*(.*)'
0024 | 0001 | u'/data[^ ]*/hphp'
0025 | 0001 | '^/static/[a-z./-]+$'
0026 | 0001 | '/vote/(up|down)/(.*)'
0027 | 0001 | '^(https?|ftp):\\/\\/'
0028 | 0001 | '^/v2/images/([^\\/]+)$'
0029 | 0001 | 'https?://([^/]*?)(/.*)?'
0030 | 0001 | '//\\w+\\.4chan\\.org/\\w+/src/'
0031 | 0001 | '/lib(64)?/(.+/)?lib[^/]+\\.so$'
0032 | 0001 | '/(en-US|es-ES)/firefox/addon/(\\d+)/$'
0033 | 0001 | '^https?://bitbucket.org/([^/]+/[^/]+)/?$'
0034 | 0001 | 'https?://github.com/([^/]+/[^/]+)/tags/?$'
0035 | 0001 | ' xmlns:xi="http://www.w3.org/2001/XInclude"'
0036 | 0001 | '.*?/video/tv/(.+?)/season (\\d{1,2})/extras$'



cluster 10 stats:
nPatterns: 12.0
nProjects: 57
shortest: "
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 0.5833333333333334
3: KLE|zero-or-more repetition | 0.5833333333333334
4: ANY|any non-newline char | 0.5
5: LZY|as few reps as possible | 0.3333333333333333
6: ADD|one-or-more repetition | 0.25
7: NCCC|negated CCC | 0.25
8: END|end-of-line | 0.16666666666666666
9: CCC|custom character class | 0.08333333333333333
10: PNG|named capture group | 0.08333333333333333
11: RNG|chars within a range | 0.08333333333333333
12: STR|start-of-line | 0.08333333333333333


0000 | 0024 | '"'
0001 | 0018 | 'url="([^"]+)"'
0002 | 0011 | '".*"$'
0003 | 0003 | '"(.*?)"'
0004 | 0002 | 'timestamp="[^"]+"'
0005 | 0001 | u'"}'
0006 | 0001 | '^(.*)"""$'
0007 | 0001 | 'href="(.*?)"'
0008 | 0001 | 'Href="(.*?)">'
0009 | 0001 | '"title":"(.*?)",'
0010 | 0001 | '={"pv" : "(?P<n>[0-9]+)"}'
0011 | 0001 | 'id="__VIEWSTATE" value="([^"]*)"'



cluster 11 stats:
nPatterns: 7.0
nProjects: 48
shortest: \W+
Features:

1: ADD|one-or-more repetition | 1.1428571428571428
2: STR|start-of-line | 0.5714285714285714
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5714285714285714
4: LIT|a literal character | 0.2857142857142857
5: NWRD|non-word chars | 0.2857142857142857
6: NWSP|any non-whitespace | 0.2857142857142857
7: END|end-of-line | 0.14285714285714285


0000 | 0026 | '\\W+'
0001 | 0014 | '^\\s+$'
0002 | 0006 | '^\\W+'
0003 | 0002 | '^\\S+\\s+'
0004 | 0001 | '\\s+}'
0005 | 0001 | '^\\S+'
0006 | 0001 | '}\\s+'



cluster 12 stats:
nPatterns: 14.0
nProjects: 47
shortest: \|
Features:

1: LIT|a literal character | 11.642857142857142
2: OR|logical or | 0.7857142857142857
3: CG|a capture group | 0.5
4: ADD|one-or-more repetition | 0.35714285714285715
5: NCCC|negated CCC | 0.35714285714285715
6: CCC|custom character class | 0.21428571428571427
7: END|end-of-line | 0.21428571428571427
8: RNG|chars within a range | 0.21428571428571427
9: STR|start-of-line | 0.21428571428571427
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.21428571428571427
11: ANY|any non-newline char | 0.14285714285714285
12: DEC|any of: 0123456789 | 0.14285714285714285
13: ENDZ|absolute end of string | 0.07142857142857142
14: KLE|zero-or-more repetition | 0.07142857142857142
15: NLKA|sequence doesn't follow  | 0.07142857142857142
16: NWSP|any non-whitespace | 0.07142857142857142
17: QST|zero-or-one repetition | 0.07142857142857142


0000 | 0015 | '<(/|\\Z)'
0001 | 0007 | '\\|'
0002 | 0006 | '[\\\'|"|#|\\\\|\\[|\\]|\\{|\\}|\\(|\\)]'
0003 | 0004 | ' |\\('
0004 | 0004 | '\\\\|\\/|\\||\\:|\\?|\\*|"|<|>|[\x00-\x1f\x7f-\x9f]/'
0005 | 0003 | '"|\\\\'
0006 | 0003 | u'(\\.|\\s|/|-)'
0007 | 0002 | '\\|(\\S+)\\|'
0008 | 0002 | ':|\\*|\\?|"|<|>|\\|'
0009 | 0002 | '(\\\\|\\*|\\+|\\?|\\||\\{|\\}|\\[|\\]|\\(|\\)|\\^|\\$|\\.|\\#|\\ )'
0010 | 0001 | '\\.|-'
0011 | 0001 | ' |,|"|=|[|]'
0012 | 0001 | '^(?!^(PRN|AUX|CLOCK\\$|NUL|CON|COM\\d|LPT\\d|\\..*)(\\..+)?$)[^\\x00-\\x1f\\\\?*:\\";|/]+$'
0013 | 0001 | '^[^\\(\\[]+[^\\s](\\+|\\-|\\*|/|%|\\^|&|\\||=|<|>|>>|<<|\\+=|\\-=|\\*=|/=|%=|\\^=|&=|\\|=|==|<=|>=|>>=|<<=|!=|<>)[^\\s][^\\)\\]]+$'



cluster 13 stats:
nPatterns: 11.0
nProjects: 46
shortest: _{2,}
Features:

1: LIT|a literal character | 2.1818181818181817
2: DEC|any of: 0123456789 | 1.8181818181818181
3: DBB|$n\le x \le m$ repetition | 1.4545454545454546
4: SNG|exactly n repetition | 0.6363636363636364
5: END|end-of-line | 0.45454545454545453
6: STR|start-of-line | 0.45454545454545453
7: KLE|zero-or-more repetition | 0.2727272727272727
8: LWB|at least n repetition | 0.2727272727272727
9: ANY|any non-newline char | 0.18181818181818182
10: CG|a capture group | 0.18181818181818182
11: NCG|group without capturing | 0.18181818181818182
12: LKA|matching sequence follows | 0.09090909090909091
13: LZY|as few reps as possible | 0.09090909090909091
14: OR|logical or | 0.09090909090909091


0000 | 0026 | '\\n{2,}'
0001 | 0008 | '^x{1,2}$'
0002 | 0004 | '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'
0003 | 0002 | '(?:\\d{1,3}\\.){3}\\d{1,3}'
0004 | 0001 | '_{2,}'
0005 | 0001 | '^/{2,}'
0006 | 0001 | u'^ur\\d{7,8}$'
0007 | 0001 | '/{1,2}.*?(?=/{1,2}|$)'
0008 | 0001 | '^\\d{4}\\.\\d{2}\\.\\d{2}$'
0009 | 0001 | '(?:\\d{2}:\\d{2}:\\d{2}) (.*)'
0010 | 0001 | '^(\\d{4,4}-\\d{2,2}-\\d{2,2}T\\d{2,2}:\\d{2,2}:\\d{2,2})\\.\\d*Z$'



cluster 14 stats:
nPatterns: 10.0
nProjects: 45
shortest: ^.const
Features:

1: LIT|a literal character | 16.4
2: KLE|zero-or-more repetition | 0.9
3: ANY|any non-newline char | 0.8
4: END|end-of-line | 0.6
5: STR|start-of-line | 0.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2
7: CG|a capture group | 0.1
8: OR|logical or | 0.1


0000 | 0038 | 'stop_session\\)\\('
0001 | 0001 | '^.const'
0002 | 0001 | 'tests\\.py$'
0003 | 0001 | '^subject=\\s*'
0004 | 0001 | 'test_(.*)\\.js$'
0005 | 0001 | '^.*RLELossless.*$'
0006 | 0001 | '^.*JPEGLossless.*$'
0007 | 0001 | 'suppressions.*\\.txt$'
0008 | 0001 | '^#synchronous_standby_names\\s*=.*$'
0009 | 0001 | 'jobfailures\\.jsp|jobtracker\\.jsp|jobdetails\\.jsp|jobtasks\\.jsp'



cluster 15 stats:
nPatterns: 18.0
nProjects: 44
shortest: \).*$
Features:

1: LIT|a literal character | 3.1666666666666665
2: KLE|zero-or-more repetition | 1.9444444444444444
3: ANY|any non-newline char | 1.6666666666666667
4: CG|a capture group | 1.5555555555555556
5: END|end-of-line | 0.4444444444444444
6: STR|start-of-line | 0.3333333333333333
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2777777777777778
8: ADD|one-or-more repetition | 0.2222222222222222
9: CCC|custom character class | 0.1111111111111111
10: DEC|any of: 0123456789 | 0.1111111111111111
11: LZY|as few reps as possible | 0.1111111111111111
12: NWSP|any non-whitespace | 0.1111111111111111
13: QST|zero-or-one repetition | 0.1111111111111111
14: WRD|[a-zA-Z0-9\_] | 0.1111111111111111
15: NCCC|negated CCC | 0.05555555555555555
16: OR|logical or | 0.05555555555555555


0000 | 0017 | '([.\\w-]+)\\s*(.*)$'
0001 | 0006 | '@(\\w*)(.*)'
0002 | 0003 | '(\\S+);.*'
0003 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0004 | 0002 | '(!\\S*)(.*)'
0005 | 0002 | ':\\s*(#.*)?$'
0006 | 0002 | 'tag:.*\\[(.*)\\]'
0007 | 0002 | '^(.*?)([\\[\\*\\?].*)$'
0008 | 0001 | '\\).*$'
0009 | 0001 | '\\) (.*)'
0010 | 0001 | '^(\\:)(.*)$'
0011 | 0001 | '^\\s*##(.*)$'
0012 | 0001 | '(.*?)\\s+<(.*)>'
0013 | 0001 | '.*(\\d).*(\\d).*'
0014 | 0001 | '^\\* (.*): (.*)\n$'
0015 | 0001 | '(\\\\.|[^#])*(#.*)?'
0016 | 0001 | '.*PKGINST:\\s+(.*)\\n'
0017 | 0001 | '^\\+.*VTK_LEGACY\\((.*)\\).*\n'



cluster 16 stats:
nPatterns: 23.0
nProjects: 44
shortest: WIN_VIRTIO
Features:

1: LIT|a literal character | 20.130434782608695
2: CG|a capture group | 0.4782608695652174
3: ADD|one-or-more repetition | 0.34782608695652173
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.34782608695652173
5: OR|logical or | 0.2608695652173913
6: STR|start-of-line | 0.21739130434782608
7: CCC|custom character class | 0.17391304347826086
8: KLE|zero-or-more repetition | 0.17391304347826086
9: RNG|chars within a range | 0.17391304347826086
10: ANY|any non-newline char | 0.13043478260869565
11: NCG|group without capturing | 0.13043478260869565
12: WRD|[a-zA-Z0-9\_] | 0.13043478260869565
13: DEC|any of: 0123456789 | 0.08695652173913043
14: QST|zero-or-one repetition | 0.08695652173913043
15: WNW|word/non-word boundary | 0.08695652173913043
16: END|end-of-line | 0.043478260869565216
17: LKB|matching sequence precedes | 0.043478260869565216
18: LZY|as few reps as possible | 0.043478260869565216
19: NCCC|negated CCC | 0.043478260869565216
20: NWSP|any non-whitespace | 0.043478260869565216


0000 | 0008 | 'SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE'
0001 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'
0002 | 0004 | '@@PACKAGE_REVISION@@'
0003 | 0004 | '(?<=^TARGET_BUILD_VARIANT=).*'
0004 | 0004 | '^(DISTRIB_(?:ID|RELEASE|CODENAME|DESCRIPTION))=(?:\'|")?([\\w\\s\\.-_]+)(?:\'|")?'
0005 | 0003 | '_F2PY_STRING_CONSTANT_\\d+_'
0006 | 0002 | 'WIN_VIRTIO'
0007 | 0002 | 'G_CONST_RETURN |const '
0008 | 0001 | '^SEQLENGTH'
0009 | 0001 | '_CONTACT\\w'
0010 | 0001 | 'GATEWAY=(\\S+)'
0011 | 0001 | 'CONFIGEDITORHERE'
0012 | 0001 | 'METASPLOIT_PATH='
0013 | 0001 | 'SUBDATASET_(\\d+)_'
0014 | 0001 | '^START TIME:\\s(.*)$'
0015 | 0001 | '\\bLCOV_EXCL_START\\b'
0016 | 0001 | '<TITLE>([^<]*)</TITLE>'
0017 | 0001 | 'LL_VERSION_BUILD\\s=\\s([0-9]+)'
0018 | 0001 | 'IMP_VERSION_MAJOR\\s=\\s([0-9]+)'
0019 | 0001 | 'IMP_VERSION_PATCH\\s=\\s([0-9]+)'
0020 | 0001 | '<FRAME SRC="(.*?)" NAME="CONTENT"'
0021 | 0001 | 'KVM_TEST_VIRTIO_NETWORK_INSTALLER'
0022 | 0001 | '^RUNTIME_FUNCTION\\(Runtime_(\\w+)'



cluster 17 stats:
nPatterns: 40.0
nProjects: 41
shortest: xvd
Features:

1: LIT|a literal character | 18.225
2: CG|a capture group | 0.475
3: RNG|chars within a range | 0.4
4: OR|logical or | 0.375
5: CCC|custom character class | 0.275
6: DEC|any of: 0123456789 | 0.15
7: NWRD|non-word chars | 0.15
8: ANY|any non-newline char | 0.125
9: KLE|zero-or-more repetition | 0.1
10: ADD|one-or-more repetition | 0.075
11: STR|start-of-line | 0.05
12: WNW|word/non-word boundary | 0.05
13: DBB|$n\le x \le m$ repetition | 0.025
14: ENDZ|absolute end of string | 0.025
15: END|end-of-line | 0.025
16: NCG|group without capturing | 0.025
17: SNG|exactly n repetition | 0.025
18: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.025


0000 | 0009 | '([\\x00-\\x7F])+'
0001 | 0007 | '[\\x00-\\x20]'
0002 | 0005 | '\\A[\\x00-\\x7f]*\\Z'
0003 | 0004 | u'[`\x00- \x7f-\xa0\\s]+'
0004 | 0003 | 'xvd'
0005 | 0003 | '[\\x00-\\x1f]'
0006 | 0002 | '\\xf6'
0007 | 0002 | '[=\x7f-\xff]'
0008 | 0001 | u'[\\000-\\037]'
0009 | 0001 | '\x1b\\[[0]{0,1}m'
0010 | 0001 | '\\\\end{tabularx}'
0011 | 0001 | '\xc5\x9b|\xc5\x9a'
0012 | 0001 | '\\b(?:20|19)\\d{2}\\b'
0013 | 0001 | '\\W\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0014 | 0001 | '^[\\d\\.]+ meV\xe2\x80\xbd .* \\- .*$'
0015 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0016 | 0001 | '\\W\xd1\x81\xd0\xb7\xd0\xb0\xd0\xbe\\W'
0017 | 0001 | '\xe1\xf9\xf2\xe4&nbsp;(\\d\\d):(\\d\\d)'
0018 | 0001 | '[\\-a-zA-Z0-9\\x80-\\xff_\\.\\@\\!\\#\\%\\:]'
0019 | 0001 | '[\\x00-\\x08\\x0B-\\x0C\\x0E-\\x1F\\x7F-\\xFF]'
0020 | 0001 | '(\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0021 | 0001 | '\xd0\xb0\xd0\xbb\xd1\x82\xd1\x83\xd1\x84\xd1\x8c\xd0\xb5\xd0\xb2\xd0\xbe'
0022 | 0001 | '\xd0\xb2\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe'
0023 | 0001 | '(\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0024 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xbe\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0025 | 0001 | '\xd1\x82\xd1\x83\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0026 | 0001 | '\xd0\x98\xd0\xb7\xd0\xb1\xd1\x80\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \\((.*)\\)<\\/a>'
0027 | 0001 | '\xd0\xbc\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0028 | 0001 | '\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x86\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xbe\xd1\x81\xd1\x82'
0029 | 0001 | '\xd1\x84\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xba'
0030 | 0001 | '\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0031 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xb0\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0032 | 0001 | '\xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0033 | 0001 | '\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0034 | 0001 | '\xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd1\x8c\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0'
0035 | 0001 | '(\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\\.)'
0036 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0037 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe-\xd1\x80\xd0\xb0\xd0\xb7\xd1\x83\xd0\xbc\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0038 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd1\x81\xd1\x82\xd0\xb0\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0039 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



cluster 18 stats:
nPatterns: 18.0
nProjects: 39
shortest: (\W+)
Features:

1: ADD|one-or-more repetition | 2.888888888888889
2: LIT|a literal character | 2.1666666666666665
3: CG|a capture group | 1.5555555555555556
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.2777777777777777
5: NWSP|any non-whitespace | 1.0
6: DEC|any of: 0123456789 | 0.3333333333333333
7: END|end-of-line | 0.3333333333333333
8: KLE|zero-or-more repetition | 0.2777777777777778
9: STR|start-of-line | 0.2777777777777778
10: WRD|[a-zA-Z0-9\_] | 0.2777777777777778
11: ANY|any non-newline char | 0.2222222222222222
12: OR|logical or | 0.16666666666666666
13: NCCC|negated CCC | 0.05555555555555555
14: NWRD|non-word chars | 0.05555555555555555


0000 | 0009 | '(\\W+)'
0001 | 0009 | '^(\\s+)'
0002 | 0005 | '\\s+(\\d+),$'
0003 | 0005 | '(\\S+)\\s+(\\S+)'
0004 | 0003 | '(\\S+): (\\S+)'
0005 | 0002 | '(\\s|,)+'
0006 | 0002 | 'image:\\s+(\\S+)'
0007 | 0002 | 'MemFree:\\s+(.\\d+)\\s+(\\w+)'
0008 | 0001 | '(\\s|_)+'
0009 | 0001 | '^(\\s+)\\S+'
0010 | 0001 | '^\\+\\+\\+ (.*)$'
0011 | 0001 | '^(\\S+ +\\S+)\\s*$'
0012 | 0001 | '^\\S+ (\\S+)@(\\S+)$'
0013 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'
0014 | 0001 | '(\\d+)\\s+\\w+\\s+(\\w+).*'
0015 | 0001 | '(\\S+)\\s+(\\d)\\s+\\d+\\s+\\S+$'
0016 | 0001 | '\\s+(\\w+)\\s+"(&#\\w+;|[^&"]*)"'
0017 | 0001 | '\\S+\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)%'



cluster 19 stats:
nPatterns: 7.0
nProjects: 37
shortest: ["]
Features:

1: LIT|a literal character | 2.7142857142857144
2: CCC|custom character class | 1.1428571428571428


0000 | 0024 | '[*?[]'
0001 | 0022 | '[&<]'
0002 | 0002 | '[kK]'
0003 | 0001 | '["]'
0004 | 0001 | '[Yy]'
0005 | 0001 | '[x+]'
0006 | 0001 | '<[Bb][Rr]/>'



cluster 20 stats:
nPatterns: 13.0
nProjects: 36
shortest: \r
Features:

1: LIT|a literal character | 5.615384615384615
2: CCC|custom character class | 0.7692307692307693
3: KLE|zero-or-more repetition | 0.6923076923076923
4: ADD|one-or-more repetition | 0.6153846153846154
5: NCCC|negated CCC | 0.6153846153846154
6: CG|a capture group | 0.38461538461538464
7: END|end-of-line | 0.15384615384615385
8: ANY|any non-newline char | 0.07692307692307693
9: OR|logical or | 0.07692307692307693
10: QST|zero-or-one repetition | 0.07692307692307693
11: STR|start-of-line | 0.07692307692307693


0000 | 0013 | '\\r'
0001 | 0006 | '[\\r\\n]+'
0002 | 0004 | '[\n\r]'
0003 | 0003 | '[\n ]+$'
0004 | 0002 | '\\n\\r?[\\t ]*$'
0005 | 0001 | '[ \\t]+\\n'
0006 | 0001 | '[ \r\n\t]+'
0007 | 0001 | '[\n\r\t ]+'
0008 | 0001 | '^[ \\t\\n\\r]'
0009 | 0001 | '(,\\n|[^\\n-])+'
0010 | 0001 | '[\\r\\n\\t ]+[\\r\\n]+'
0011 | 0001 | 'In \\[\\{\\\\color\\{incolor\\}(.*)\\}\\]:'
0012 | 0001 | '[^\\t]*\\t([^\\t]*)\\t([^\\t]*)\\t[^\\t]*\\t[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\n'



cluster 21 stats:
nPatterns: 9.0
nProjects: 33
shortest: [<>\'"]
Features:

1: LIT|a literal character | 6.666666666666667
2: NCCC|negated CCC | 1.0
3: KLE|zero-or-more repetition | 0.5555555555555556
4: ADD|one-or-more repetition | 0.4444444444444444
5: LZY|as few reps as possible | 0.3333333333333333
6: CG|a capture group | 0.2222222222222222
7: NLKA|sequence doesn't follow  | 0.2222222222222222
8: ANY|any non-newline char | 0.1111111111111111
9: CCC|custom character class | 0.1111111111111111
10: OPT|options wrapper | 0.1111111111111111
11: QST|zero-or-one repetition | 0.1111111111111111


0000 | 0019 | '<[^>]*?>'
0001 | 0007 | '[<>\'"]'
0002 | 0002 | '<![^>]*>'
0003 | 0001 | '<(?!!)[^>]+>'
0004 | 0001 | '<[^!][^>]*?>'
0005 | 0001 | '(?i)<br[^>]*>'
0006 | 0001 | '<(?!/?TEXT)[^>]+>'
0007 | 0001 | '<h1[^>]*>(.+?)</h1>'
0008 | 0001 | '<WebEnv>([^>]+)</WebEnv>'



cluster 22 stats:
nPatterns: 3.0
nProjects: 31
shortest: ,
Features:

1: LIT|a literal character | 1.3333333333333333
2: ADD|one-or-more repetition | 0.3333333333333333
3: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0030 | ','
0001 | 0005 | ',\\S'
0002 | 0001 | u',,+'



cluster 23 stats:
nPatterns: 5.0
nProjects: 30
shortest: ^(?:=)$
Features:

1: LIT|a literal character | 4.2
2: CG|a capture group | 2.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 0.8
5: NCG|group without capturing | 0.6
6: OR|logical or | 0.6
7: ADD|one-or-more repetition | 0.2
8: BKR|match the $i^{th}$ CG | 0.2
9: DEC|any of: 0123456789 | 0.2
10: QST|zero-or-one repetition | 0.2


0000 | 0021 | u'^(?:=)$'
0001 | 0008 | '^(?:(a)|c)(\\1)$'
0002 | 0003 | '^(?:=)$'
0003 | 0001 | '^(R|RR)(_(\\d+))?$'
0004 | 0001 | '\\.((dll)|(DLL)|(drv)|(DRV))$'



cluster 24 stats:
nPatterns: 8.0
nProjects: 30
shortest: \\n
Features:

1: LIT|a literal character | 2.875
2: OR|logical or | 0.25
3: QST|zero-or-one repetition | 0.25
4: CG|a capture group | 0.125
5: KLE|zero-or-more repetition | 0.125
6: STR|start-of-line | 0.125


0000 | 0011 | '^\\r?\\n\\r?\\n'
0001 | 0006 | '\\\\n'
0002 | 0005 | '\\\\\\n'
0003 | 0003 | "\\\\'"
0004 | 0003 | '\\\\*\\#'
0005 | 0002 | '\r|\n|\r\n'
0006 | 0002 | '(\\r\\n|\\n|\\r)'
0007 | 0001 | '\\n:\\n'



cluster 25 stats:
nPatterns: 1.0
nProjects: 28
shortest: ^<\?.*encoding=[\'"](.*?)[\'"].*\?>
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 3.0
4: CCC|custom character class | 2.0
5: CG|a capture group | 1.0
6: LZY|as few reps as possible | 1.0
7: STR|start-of-line | 1.0


0000 | 0028 | '^<\\?.*encoding=[\'"](.*?)[\'"].*\\?>'



cluster 26 stats:
nPatterns: 3.0
nProjects: 28
shortest: \w+
Features:

1: WRD|[a-zA-Z0-9\_] | 2.6666666666666665
2: LIT|a literal character | 1.3333333333333333
3: ADD|one-or-more repetition | 0.6666666666666666
4: END|end-of-line | 0.3333333333333333
5: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0021 | '&#?\\w+;'
0001 | 0005 | '#\\w\\w\\w\\w\\w\\w$'
0002 | 0001 | u'\\w+'



cluster 27 stats:
nPatterns: 4.0
nProjects: 26
shortest: ^\d+$
Features:

1: ADD|one-or-more repetition | 1.0
2: END|end-of-line | 1.0
3: DEC|any of: 0123456789 | 0.75
4: LIT|a literal character | 0.75
5: STR|start-of-line | 0.5
6: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0015 | u'^\\d+$'
0001 | 0009 | ':\\d+$'
0002 | 0001 | 'p\\d+$'
0003 | 0001 | '^@\\w+$'



cluster 28 stats:
nPatterns: 10.0
nProjects: 26
shortest: --
Features:

1: LIT|a literal character | 12.6
2: ADD|one-or-more repetition | 0.2
3: ANY|any non-newline char | 0.2
4: CG|a capture group | 0.2
5: KLE|zero-or-more repetition | 0.2
6: LZY|as few reps as possible | 0.2
7: OR|logical or | 0.2
8: NCCC|negated CCC | 0.1


0000 | 0017 | '--'
0001 | 0013 | 'Key-'
0002 | 0002 | '--.*?--'
0003 | 0001 | u'-h'
0004 | 0001 | u'--+'
0005 | 0001 | '(--|/)'
0006 | 0001 | '<!--[^>]*-->|<!>'
0007 | 0001 | '<!-- REPORTBUGCOL -->'
0008 | 0001 | '<!-- SUMMARYENDHEAD -->'
0009 | 0001 | '(-----BEGIN CERTIFICATE-----\\n.+?\\n-----END CERTIFICATE-----)'



cluster 29 stats:
nPatterns: 1.0
nProjects: 24
shortest: release_cmd_to_pool
Features:

1: LIT|a literal character | 19.0


0000 | 0024 | 'release_cmd_to_pool'



cluster 30 stats:
nPatterns: 3.0
nProjects: 22
shortest: /\*
Features:

1: LIT|a literal character | 1.3333333333333333
2: ANY|any non-newline char | 0.6666666666666666
3: KLE|zero-or-more repetition | 0.6666666666666666
4: STR|start-of-line | 0.3333333333333333


0000 | 0019 | '/\\*'
0001 | 0002 | '^.*\\/'
0002 | 0001 | '\\/.*'



cluster 31 stats:
nPatterns: 9.0
nProjects: 22
shortest: (\D)[.]
Features:

1: LIT|a literal character | 5.666666666666667
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.5555555555555556
4: CCC|custom character class | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NCCC|negated CCC | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.7777777777777778
8: QST|zero-or-one repetition | 0.5555555555555556
9: WRD|[a-zA-Z0-9\_] | 0.5555555555555556
10: NWSP|any non-whitespace | 0.2222222222222222
11: OR|logical or | 0.2222222222222222
12: ANY|any non-newline char | 0.1111111111111111
13: END|end-of-line | 0.1111111111111111
14: LZY|as few reps as possible | 0.1111111111111111
15: NCG|group without capturing | 0.1111111111111111
16: NDEC|any non-decimal | 0.1111111111111111
17: STR|start-of-line | 0.1111111111111111
18: WNW|word/non-word boundary | 0.1111111111111111


0000 | 0006 | '\\([^()]*\\b(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'
0001 | 0005 | '([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'
0002 | 0004 | '(\\D)[.]'
0003 | 0002 | '\\[([^:]+?)\\]'
0004 | 0001 | '([$`\\\\])'
0005 | 0001 | '[RL]\\{(.+)\\}'
0006 | 0001 | '(\\[\\[)([^$]+)(\\]\\])'
0007 | 0001 | '^([+\\-])?\\$([^\\$\\{\\}]+)$'
0008 | 0001 | '[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*'



cluster 32 stats:
nPatterns: 1.0
nProjects: 21
shortest: \(.*?\)
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0


0000 | 0021 | '\\(.*?\\)'



cluster 33 stats:
nPatterns: 2.0
nProjects: 20
shortest: \Z(?ms)
Features:

1: LIT|a literal character | 8.5
2: OPT|options wrapper | 1.5
3: ADD|one-or-more repetition | 1.0
4: STR|start-of-line | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: ENDZ|absolute end of string | 0.5
7: OR|logical or | 0.5


0000 | 0018 | '\\Z(?ms)'
0001 | 0002 | '(?m)^alias\\s+scsi|(?m)^alias\\s+eth'



cluster 34 stats:
nPatterns: 4.0
nProjects: 20
shortest: {version}
Features:

1: LIT|a literal character | 13.25
2: ANY|any non-newline char | 0.75
3: ADD|one-or-more repetition | 0.5
4: CG|a capture group | 0.25
5: PNG|named capture group | 0.25


0000 | 0017 | 'Revision: (.+)'
0001 | 0001 | '{version}'
0002 | 0001 | 'novoebenevo.ru'
0003 | 0001 | 'developmentRegion = (?P<region>.+);'



cluster 35 stats:
nPatterns: 2.0
nProjects: 19
shortest: `(.+?)`
Features:

1: LIT|a literal character | 3.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: ANY|any non-newline char | 0.5
6: NCCC|negated CCC | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0016 | '``([^`\\s]+?)``'
0001 | 0003 | '`(.+?)`'



cluster 36 stats:
nPatterns: 3.0
nProjects: 18
shortest: #
Features:

1: LIT|a literal character | 5.0
2: OR|logical or | 0.3333333333333333


0000 | 0017 | '#'
0001 | 0001 | '%|&#'
0002 | 0001 | '##VERSION##'



cluster 37 stats:
nPatterns: 13.0
nProjects: 18
shortest: a.*
Features:

1: LIT|a literal character | 4.384615384615385
2: ANY|any non-newline char | 1.6153846153846154
3: KLE|zero-or-more repetition | 1.5384615384615385
4: END|end-of-line | 0.3076923076923077
5: STR|start-of-line | 0.23076923076923078
6: CG|a capture group | 0.07692307692307693
7: LZY|as few reps as possible | 0.07692307692307693
8: NLKA|sequence doesn't follow  | 0.07692307692307693
9: OR|logical or | 0.07692307692307693


0000 | 0004 | '.*@.*\\..*'
0001 | 0003 | '.*\\.dmg'
0002 | 0003 | '.*\\.exe'
0003 | 0002 | 'a.*'
0004 | 0002 | '#.*?$'
0005 | 0002 | '.*foo.*bar'
0006 | 0002 | '\\A#!.*node.*$'
0007 | 0002 | '\\A#!.*python(?!3).*$'
0008 | 0001 | 'SD.*'
0009 | 0001 | '.*\\.fw'
0010 | 0001 | '.*minimr.*'
0011 | 0001 | '^.*\\.img.gz$'
0012 | 0001 | '.*(dev|HEAD).*'



cluster 38 stats:
nPatterns: 1.0
nProjects: 17
shortest: (\(|\)|\s+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: OR|logical or | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0017 | '(\\(|\\)|\\s+)'



cluster 39 stats:
nPatterns: 6.0
nProjects: 17
shortest: name\s+"(.*)",
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 1.3333333333333333
3: KLE|zero-or-more repetition | 1.3333333333333333
4: CG|a capture group | 1.0
5: ADD|one-or-more repetition | 0.5
6: END|end-of-line | 0.5
7: STR|start-of-line | 0.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
9: LZY|as few reps as possible | 0.3333333333333333
10: PNG|named capture group | 0.3333333333333333


0000 | 0012 | '^name="(.*)"\\s+certificate="(.*)"\\s+private_key="(.*)"$'
0001 | 0002 | '<map id="(.*?)"'
0002 | 0001 | 'name\\s+"(.*)",'
0003 | 0001 | '^"(?P<data>.*)"$'
0004 | 0001 | '<link href="(.*?)"'
0005 | 0001 | '^#~ msgid "(?P<data>.*)"$'



cluster 40 stats:
nPatterns: 14.0
nProjects: 17
shortest: \([A-Z]\) 
Features:

1: LIT|a literal character | 18.428571428571427
2: CCC|custom character class | 3.7857142857142856
3: CG|a capture group | 3.5
4: RNG|chars within a range | 3.5
5: ADD|one-or-more repetition | 2.4285714285714284
6: KLE|zero-or-more repetition | 2.2142857142857144
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.8571428571428571
8: DEC|any of: 0123456789 | 0.5714285714285714
9: ANY|any non-newline char | 0.35714285714285715
10: END|end-of-line | 0.14285714285714285
11: STR|start-of-line | 0.14285714285714285
12: LZY|as few reps as possible | 0.07142857142857142
13: QST|zero-or-one repetition | 0.07142857142857142


0000 | 0008 | '[ \t]*([A-Z0-9a-z_]+)[ \t]*=[ \t]*([-0-9]+)[, \t]*'
0001 | 0002 | '\\*\\*([0-9]+)'
0002 | 0001 | '\\([A-Z]\\) '
0003 | 0001 | '\\[ip:([0-9_]*)\\]'
0004 | 0001 | '([a-z ]+)(\\([0-9]+\\))?'
0005 | 0001 | '([a-zA-Z-]+)\\s*\\((.*)\\)'
0006 | 0001 | '#define Py_([a-z_]+) ([0-9]+)'
0007 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*)[\\s\t]*([0-9:, -]+)'
0008 | 0001 | '([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+)[\\s\t]*([0-9:, -]+)'
0009 | 0001 | '^(.*)(\\([0-9A-Fx]+,[0-9A-F]+\\))\\s+([1-3C]+)\\s+(.*)\\s*$'
0010 | 0001 | '([# ]*?)([a-zA-Z0-9_]+)( +)([a-zA-Z0-9_\\?\\!<>\\+=\\.]+)(.*)'
0011 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'
0012 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'
0013 | 0001 | '^\\s*([A-Za-z0-9()> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+Value Representation = ([A-Z][A-Z]), Multiplicity = ([0-9n-]+)(.*)\\s*$'



cluster 41 stats:
nPatterns: 6.0
nProjects: 16
shortest: ^-*\n
Features:

1: LIT|a literal character | 4.833333333333333
2: KLE|zero-or-more repetition | 1.1666666666666667
3: ANY|any non-newline char | 1.0
4: LZY|as few reps as possible | 0.6666666666666666
5: QST|zero-or-one repetition | 0.3333333333333333
6: STR|start-of-line | 0.16666666666666666
7: WNW|word/non-word boundary | 0.16666666666666666


0000 | 0012 | '^-*\n'
0001 | 0012 | '.*?\\n'
0002 | 0001 | '.*\\n?'
0003 | 0001 | '<div.*?>\\n'
0004 | 0001 | 'Warning\\\\?:.*'
0005 | 0001 | '.*?Pentium.*?MMX\\b'



cluster 42 stats:
nPatterns: 1.0
nProjects: 15
shortest: ^([^=]*)=(.*)$
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 2.0
3: LIT|a literal character | 2.0
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0
7: STR|start-of-line | 1.0


0000 | 0015 | '^([^=]*)=(.*)$'



cluster 43 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^(\d{10})$
Features:

1: CG|a capture group | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 1.0
4: SNG|exactly n repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0012 | '^(\\d{10})$'
0001 | 0003 | u'^(\\d{10})$'



cluster 44 stats:
nPatterns: 8.0
nProjects: 15
shortest: '(.*)'
Features:

1: LIT|a literal character | 4.5
2: CG|a capture group | 0.875
3: ANY|any non-newline char | 0.625
4: KLE|zero-or-more repetition | 0.625
5: ADD|one-or-more repetition | 0.375
6: END|end-of-line | 0.375
7: LZY|as few reps as possible | 0.25
8: NCCC|negated CCC | 0.25
9: STR|start-of-line | 0.25
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125


0000 | 0005 | "^'(.*)'$"
0001 | 0003 | "(''')\\s*$"
0002 | 0002 | "title:'([^']+?)'"
0003 | 0001 | "'(.*)'"
0004 | 0001 | "'(.*)'$"
0005 | 0001 | "^'(.+)'@"
0006 | 0001 | "arch='.*'"
0007 | 0001 | "'([^']+?)' \\(qv\\)"



cluster 45 stats:
nPatterns: 3.0
nProjects: 14
shortest: ^
Features:

1: LIT|a literal character | 1.3333333333333333
2: STR|start-of-line | 1.0


0000 | 0002 | '^'
0001 | 0001 | '^p'
0002 | 0001 | '^cm_'



cluster 46 stats:
nPatterns: 1.0
nProjects: 14
shortest: (.*/|)([^/]+\.[a-z]+:\d+):(\d+:)? warning:
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 4.0
3: CG|a capture group | 3.0
4: DEC|any of: 0123456789 | 2.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NCCC|negated CCC | 1.0
9: OR|logical or | 1.0
10: QST|zero-or-one repetition | 1.0
11: RNG|chars within a range | 1.0


0000 | 0014 | '(.*/|)([^/]+\\.[a-z]+:\\d+):(\\d+:)? warning:'



cluster 47 stats:
nPatterns: 2.0
nProjects: 14
shortest: (\033|~{)
Features:

1: LIT|a literal character | 5.0
2: OR|logical or | 1.5
3: CG|a capture group | 1.0
4: NCG|group without capturing | 1.0
5: DBB|$n\le x \le m$ repetition | 0.5
6: DEC|any of: 0123456789 | 0.5
7: END|end-of-line | 0.5
8: STR|start-of-line | 0.5


0000 | 0009 | '(\\033|~{)'
0001 | 0005 | '^(?:(?:00|\\+)386|0)(\\d{7,8})$'



cluster 48 stats:
nPatterns: 3.0
nProjects: 14
shortest: [\t ]+
Features:

1: LIT|a literal character | 9.0
2: CCC|custom character class | 2.0
3: ADD|one-or-more repetition | 1.3333333333333333
4: RNG|chars within a range | 1.3333333333333333
5: CG|a capture group | 0.6666666666666666
6: KLE|zero-or-more repetition | 0.6666666666666666
7: NCCC|negated CCC | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0010 | '^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)[\t ]+'
0001 | 0003 | u'([^\\t -~])'
0002 | 0001 | '[\t ]+'



cluster 49 stats:
nPatterns: 4.0
nProjects: 14
shortest: [EWN]\d{3}
Features:

1: LIT|a literal character | 8.5
2: SNG|exactly n repetition | 3.5
3: DEC|any of: 0123456789 | 3.25
4: CCC|custom character class | 1.25
5: CG|a capture group | 1.25
6: RNG|chars within a range | 1.0
7: END|end-of-line | 0.75
8: STR|start-of-line | 0.75
9: QST|zero-or-one repetition | 0.5


0000 | 0011 | '^[1-9]\\d{2} ?\\d{2}$'
0001 | 0005 | '^\\d{15}(\\d{2}[0-9xX])?$'
0002 | 0002 | '[EWN]\\d{3}'
0003 | 0001 | '^timestamp: [a-zA-Z]{3} (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}) ([-+])(\\d{2})(\\d{2})$'



cluster 50 stats:
nPatterns: 1.0
nProjects: 13
shortest: coding[:=]\s*([-\w_.]+)
Features:

1: LIT|a literal character | 11.0
2: CCC|custom character class | 2.0
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0013 | 'coding[:=]\\s*([-\\w_.]+)'



cluster 51 stats:
nPatterns: 3.0
nProjects: 13
shortest: \{\}
Features:

1: LIT|a literal character | 5.666666666666667
2: ANY|any non-newline char | 0.3333333333333333
3: KLE|zero-or-more repetition | 0.3333333333333333
4: LZY|as few reps as possible | 0.3333333333333333


0000 | 0011 | '\\{\\{.*?\\}\\}'
0001 | 0001 | '\\{\\}'
0002 | 0001 | '\\{\\{PACKAGE\\}\\}'



cluster 52 stats:
nPatterns: 4.0
nProjects: 13
shortest: \[.*\]
Features:

1: LIT|a literal character | 2.75
2: ANY|any non-newline char | 0.75
3: KLE|zero-or-more repetition | 0.75
4: STR|start-of-line | 0.5
5: CCC|custom character class | 0.25
6: END|end-of-line | 0.25


0000 | 0006 | '^\\[.*\\]$'
0001 | 0003 | '\\[.*\\]'
0002 | 0003 | '^\\[.*\\]'
0003 | 0002 | "[$^#\\\\']"



cluster 53 stats:
nPatterns: 8.0
nProjects: 13
shortest: tree=
Features:

1: LIT|a literal character | 27.0
2: CG|a capture group | 0.5
3: ADD|one-or-more repetition | 0.375
4: END|end-of-line | 0.375
5: OR|logical or | 0.375
6: QST|zero-or-one repetition | 0.375
7: RNG|chars within a range | 0.375
8: STR|start-of-line | 0.375
9: CCC|custom character class | 0.25
10: DEC|any of: 0123456789 | 0.25
11: KLE|zero-or-more repetition | 0.125
12: NCCC|negated CCC | 0.125


0000 | 0004 | '^http://testserver/somewhere/else/\\?c=\\d+#baz$'
0001 | 0004 | '^http://testserver/somewhere/else/\\?foo=bar&c=\\d+#baz$'
0002 | 0003 | 'Accelerate'
0003 | 0002 | '[^%]+%testing[.](expect-failure|expect-success)'
0004 | 0001 | 'tree='
0005 | 0001 | 'Present|Absent'
0006 | 0001 | '^/etc/(g?shadow-?|securetty)$'
0007 | 0001 | 'membase-server-enterprise_x86(_64)?_([.a-zA-Z0-9]*)'



cluster 54 stats:
nPatterns: 13.0
nProjects: 13
shortest: idle
Features:

1: LIT|a literal character | 17.615384615384617
2: QST|zero-or-one repetition | 0.07692307692307693
3: STR|start-of-line | 0.07692307692307693


0000 | 0002 | 'idle'
0001 | 0002 | 'files? changed'
0002 | 0002 | '/usr/bin/qemu-system-x86_64 -machine accel=kvm'
0003 | 0001 | 'Species'
0004 | 0001 | '^new file'
0005 | 0001 | 'wireless='
0006 | 0001 | 'Privilege:'
0007 | 0001 | 'externalip='
0008 | 0001 | 'This is makeindex'
0009 | 0001 | 'exe not registered'
0010 | 0001 | '\nRock Ridge signatures'
0011 | 0001 | 'Sparse is better than dense'
0012 | 0001 | '/\\* Begin PBXFileReference section \\*/\n'



cluster 55 stats:
nPatterns: 1.0
nProjects: 12
shortest: \-+
Features:

1: ADD|one-or-more repetition | 1.0
2: LIT|a literal character | 1.0


0000 | 0011 | '\\-+'



cluster 56 stats:
nPatterns: 1.0
nProjects: 12
shortest: (?m)^\.
Features:

1: LIT|a literal character | 1.0
2: OPT|options wrapper | 1.0
3: STR|start-of-line | 1.0


0000 | 0012 | '(?m)^\\.'



cluster 57 stats:
nPatterns: 1.0
nProjects: 12
shortest: .*?\b(as)\b
Features:

1: LIT|a literal character | 2.0
2: WNW|word/non-word boundary | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: LZY|as few reps as possible | 1.0


0000 | 0006 | '.*?\\b(as)\\b'



cluster 58 stats:
nPatterns: 2.0
nProjects: 12
shortest: $(\w+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: WRD|[a-zA-Z0-9\_] | 1.0
4: END|end-of-line | 0.5
5: LIT|a literal character | 0.5


0000 | 0008 | '$(\\w+)'
0001 | 0004 | '\\$(\\w+)'



cluster 59 stats:
nPatterns: 4.0
nProjects: 12
shortest: \B(b.)\B
Features:

1: LIT|a literal character | 4.0
2: WNW|word/non-word boundary | 2.0
3: ANY|any non-newline char | 1.0
4: KLE|zero-or-more repetition | 0.5
5: NWNW|negated WNW | 0.5
6: ADD|one-or-more repetition | 0.25
7: CG|a capture group | 0.25
8: LZY|as few reps as possible | 0.25
9: NLKA|sequence doesn't follow  | 0.25


0000 | 0008 | '\\B(b.)\\B'
0001 | 0002 | '\\bratsimp\\b'
0002 | 0001 | '.*?\\bpni\\b'
0003 | 0001 | '.*\\bin\\b(?!\\b.+ing\\b)'



cluster 60 stats:
nPatterns: 6.0
nProjects: 12
shortest: =[^,)]+\)$
Features:

1: LIT|a literal character | 4.666666666666667
2: NCCC|negated CCC | 1.5
3: ADD|one-or-more repetition | 1.0
4: KLE|zero-or-more repetition | 1.0
5: QST|zero-or-one repetition | 1.0
6: CG|a capture group | 0.8333333333333334
7: END|end-of-line | 0.6666666666666666
8: PNG|named capture group | 0.5
9: STR|start-of-line | 0.5
10: CCC|custom character class | 0.3333333333333333
11: WRD|[a-zA-Z0-9\_] | 0.3333333333333333
12: ANY|any non-newline char | 0.16666666666666666
13: NCG|group without capturing | 0.16666666666666666
14: OPT|options wrapper | 0.16666666666666666
15: OR|logical or | 0.16666666666666666
16: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.16666666666666666


0000 | 0005 | '=[^,)]+\\)$'
0001 | 0003 | '^([^<]+)[<]?(.*)[>]?$'
0002 | 0001 | '<[^/?!]?\\w+'
0003 | 0001 | u'(?s)<[^>]*>|&#?\\w+;'
0004 | 0001 | '^([^<,]+)\\s*(?:<([^>,]+)>)?$'
0005 | 0001 | '^(?P<_1>[^|]*)\\|(?P<_2>[^|]*)(\\|(?P<_3>[^|]*))?$'



cluster 61 stats:
nPatterns: 1.0
nProjects: 11
shortest: [\s.]
Features:

1: CCC|custom character class | 1.0
2: LIT|a literal character | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0011 | '[\\s.]'



cluster 62 stats:
nPatterns: 3.0
nProjects: 11
shortest: (\$\((.*?)\))
Features:

1: LIT|a literal character | 9.666666666666666
2: CG|a capture group | 2.6666666666666665
3: KLE|zero-or-more repetition | 2.3333333333333335
4: ANY|any non-newline char | 1.3333333333333333
5: END|end-of-line | 0.6666666666666666
6: LZY|as few reps as possible | 0.6666666666666666
7: DEC|any of: 0123456789 | 0.3333333333333333
8: NCCC|negated CCC | 0.3333333333333333
9: NCG|group without capturing | 0.3333333333333333
10: NWSP|any non-whitespace | 0.3333333333333333
11: QST|zero-or-one repetition | 0.3333333333333333
12: WNW|word/non-word boundary | 0.3333333333333333


0000 | 0009 | '(function\\b[^(]*)\\((.*)\\)\\{$'
0001 | 0008 | '(\\$\\((.*?)\\))'
0002 | 0001 | '(.*)@(.*?)(?: -> (file\\:\\/\\/\\/\\S*))?\\:(\\d*)$'



cluster 63 stats:
nPatterns: 2.0
nProjects: 10
shortest: \\.|.
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 1.0
3: OR|logical or | 1.0
4: STR|start-of-line | 1.0
5: END|end-of-line | 0.5


0000 | 0008 | '\\\\.|.'
0001 | 0002 | '\\.\\.|^\\./|\\.$|/\\./|^-'



cluster 64 stats:
nPatterns: 1.0
nProjects: 10
shortest: <!ENTITY +(\w+) +CDATA +"([^"]+)" +-- +((?:.|\n)+?) *-->
Features:

1: LIT|a literal character | 28.0
2: ADD|one-or-more repetition | 8.0
3: CG|a capture group | 3.0
4: ANY|any non-newline char | 1.0
5: KLE|zero-or-more repetition | 1.0
6: LZY|as few reps as possible | 1.0
7: NCCC|negated CCC | 1.0
8: NCG|group without capturing | 1.0
9: OR|logical or | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0010 | '<!ENTITY +(\\w+) +CDATA +"([^"]+)" +-- +((?:.|\n)+?) *-->'



cluster 65 stats:
nPatterns: 5.0
nProjects: 10
shortest: layer
Features:

1: LIT|a literal character | 18.8
2: CG|a capture group | 1.2
3: OR|logical or | 0.8
4: END|end-of-line | 0.6
5: CCC|custom character class | 0.4
6: KLE|zero-or-more repetition | 0.4
7: STR|start-of-line | 0.4
8: NCCC|negated CCC | 0.2
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0004 | '([=!]=)\\s*(None|False|True)'
0001 | 0002 | '[&?]requestPayment($|=|&)'
0002 | 0002 | '^/(artist|release|track|label|release-group)/([^/]*)$'
0003 | 0001 | 'layer'
0004 | 0001 | '^(test|xen|kvm|vmware)$'



cluster 66 stats:
nPatterns: 8.0
nProjects: 10
shortest: :month
Features:

1: LIT|a literal character | 19.375
2: OR|logical or | 0.5
3: ANY|any non-newline char | 0.375
4: CG|a capture group | 0.25
5: KLE|zero-or-more repetition | 0.25
6: CCC|custom character class | 0.125
7: END|end-of-line | 0.125
8: NCG|group without capturing | 0.125
9: STR|start-of-line | 0.125


0000 | 0003 | ':month'
0001 | 0002 | '^(Mozilla.*(Gecko|KHTML|MSIE|Presto|Trident)|Opera).*$'
0002 | 0001 | '\nJoliet'
0003 | 0001 | 'common.py'
0004 | 0001 | 'method=post'
0005 | 0001 | 'mozilla\\.[com|net|org]'
0006 | 0001 | '@(?:end|implementation|protocol)'
0007 | 0001 | 'Chrome|Gecko|Microsoft|Mozilla|Safari|WebKit'



cluster 67 stats:
nPatterns: 2.0
nProjects: 9
shortest: biltxt
Features:

1: LIT|a literal character | 10.5
2: ANY|any non-newline char | 0.5
3: CG|a capture group | 0.5
4: KLE|zero-or-more repetition | 0.5
5: LZY|as few reps as possible | 0.5


0000 | 0007 | '<title>(.*?)</title>'
0001 | 0002 | 'biltxt'



cluster 68 stats:
nPatterns: 1.0
nProjects: 9
shortest: \\begin{(?:long)?table([iv]+)}
Features:

1: LIT|a literal character | 19.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: NCG|group without capturing | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0009 | '\\\\begin{(?:long)?table([iv]+)}'



cluster 69 stats:
nPatterns: 4.0
nProjects: 9
shortest: (.{60})
Features:

1: ANY|any non-newline char | 2.0
2: CG|a capture group | 2.0
3: SNG|exactly n repetition | 1.5
4: LIT|a literal character | 1.0
5: KLE|zero-or-more repetition | 0.5
6: END|end-of-line | 0.25
7: LZY|as few reps as possible | 0.25


0000 | 0005 | '(.{60})'
0001 | 0001 | '{(.*)}$'
0002 | 0001 | '{(.*?)}'
0003 | 0001 | '(.{8})(.{4})(.{4})(.{4})(.{12})'



cluster 70 stats:
nPatterns: 1.0
nProjects: 8
shortest: (?i)b+
Features:

1: ADD|one-or-more repetition | 1.0
2: LIT|a literal character | 1.0
3: OPT|options wrapper | 1.0


0000 | 0008 | '(?i)b+'



cluster 71 stats:
nPatterns: 1.0
nProjects: 8
shortest: ^DYNAMIC SYMBOL TABLE
Features:

1: LIT|a literal character | 20.0
2: STR|start-of-line | 1.0


0000 | 0008 | '^DYNAMIC SYMBOL TABLE'



cluster 72 stats:
nPatterns: 1.0
nProjects: 8
shortest: \{%\s*(block|extends)
Features:

1: LIT|a literal character | 14.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: OR|logical or | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0008 | '\\{%\\s*(block|extends)'



cluster 73 stats:
nPatterns: 1.0
nProjects: 8
shortest: \{include\s+file=.*?\}
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0008 | '\\{include\\s+file=.*?\\}'



cluster 74 stats:
nPatterns: 2.0
nProjects: 8
shortest: (\w+)(.*)
Features:

1: CG|a capture group | 3.0
2: KLE|zero-or-more repetition | 1.5
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 0.5
6: NWSP|any non-whitespace | 0.5
7: STR|start-of-line | 0.5
8: WRD|[a-zA-Z0-9\_] | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0005 | '(\\w+)(.*)'
0001 | 0003 | '^(\\s*)()(\\S+)(.*$)'



cluster 75 stats:
nPatterns: 2.0
nProjects: 8
shortest: (?:(?:\n\r?)|^)( *)\S
Features:

1: LIT|a literal character | 3.5
2: NCG|group without capturing | 2.0
3: OR|logical or | 1.0
4: CG|a capture group | 0.5
5: KLE|zero-or-more repetition | 0.5
6: NLKA|sequence doesn't follow  | 0.5
7: NLKB|sequence doesn't precede | 0.5
8: NWSP|any non-whitespace | 0.5
9: QST|zero-or-one repetition | 0.5
10: STR|start-of-line | 0.5


0000 | 0007 | '(?:(?<!\\r)\\n)|(?:\\r(?!\\n))'
0001 | 0001 | u'(?:(?:\n\r?)|^)( *)\\S'



cluster 76 stats:
nPatterns: 1.0
nProjects: 8
shortest: ^([a-f0-9]+)\s(.{7})\s(\S+)\s+([a-f0-9]+)\s+(?:\.hidden\s+)?(.*)$
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 6.0
3: CG|a capture group | 5.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
5: RNG|chars within a range | 4.0
6: ANY|any non-newline char | 2.0
7: CCC|custom character class | 2.0
8: END|end-of-line | 1.0
9: KLE|zero-or-more repetition | 1.0
10: NCG|group without capturing | 1.0
11: NWSP|any non-whitespace | 1.0
12: QST|zero-or-one repetition | 1.0
13: SNG|exactly n repetition | 1.0
14: STR|start-of-line | 1.0


0000 | 0008 | '^([a-f0-9]+)\\s(.{7})\\s(\\S+)\\s+([a-f0-9]+)\\s+(?:\\.hidden\\s+)?(.*)$'



cluster 77 stats:
nPatterns: 4.0
nProjects: 8
shortest: [./\\]
Features:

1: LIT|a literal character | 3.75
2: CCC|custom character class | 0.5
3: KLE|zero-or-more repetition | 0.5
4: NCCC|negated CCC | 0.5
5: STR|start-of-line | 0.5
6: WRD|[a-zA-Z0-9\_] | 0.5
7: END|end-of-line | 0.25


0000 | 0003 | '[./\\\\]'
0001 | 0003 | '^[\\w\\.\\-\\/]*$'
0002 | 0001 | '[^\\w\\-]'
0003 | 0001 | '^file\\:\\/\\/[^\\?]*'



cluster 78 stats:
nPatterns: 3.0
nProjects: 8
shortest: &(?!\#)
Features:

1: LIT|a literal character | 6.333333333333333
2: NLKA|sequence doesn't follow  | 1.0
3: NLKB|sequence doesn't precede | 1.0
4: ADD|one-or-more repetition | 0.3333333333333333
5: ANY|any non-newline char | 0.3333333333333333
6: CCC|custom character class | 0.3333333333333333
7: CG|a capture group | 0.3333333333333333
8: NCG|group without capturing | 0.3333333333333333
9: OR|logical or | 0.3333333333333333
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0004 | '&(?!\\#)'
0001 | 0004 | u'(?<!%)%(?!%)'
0002 | 0001 | '(.+)(?:(?<!<br>)|(?<!<br />))\\n(?![#*\\s|])'



cluster 79 stats:
nPatterns: 1.0
nProjects: 7
shortest: (a)(b)?b
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 2.0
3: QST|zero-or-one repetition | 1.0


0000 | 0007 | '(a)(b)?b'



cluster 80 stats:
nPatterns: 1.0
nProjects: 7
shortest: ([\t ]+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0


0000 | 0007 | '([\\t ]+)'



cluster 81 stats:
nPatterns: 1.0
nProjects: 7
shortest: ^([^@]*@)?([^:]*)(:.*)?
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 3.0
3: KLE|zero-or-more repetition | 3.0
4: NCCC|negated CCC | 2.0
5: QST|zero-or-one repetition | 2.0
6: ANY|any non-newline char | 1.0
7: STR|start-of-line | 1.0


0000 | 0007 | '^([^@]*@)?([^:]*)(:.*)?'



cluster 82 stats:
nPatterns: 1.0
nProjects: 7
shortest: \\hackscore\s*{[^}]*}
Features:

1: LIT|a literal character | 13.0
2: KLE|zero-or-more repetition | 2.0
3: NCCC|negated CCC | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0007 | '\\\\hackscore\\s*{[^}]*}'



cluster 83 stats:
nPatterns: 1.0
nProjects: 7
shortest: ^[ ]{4,7}((\d+\.)|[*+-])[ ].*
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 3.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: DBB|$n\le x \le m$ repetition | 1.0
7: DEC|any of: 0123456789 | 1.0
8: KLE|zero-or-more repetition | 1.0
9: OR|logical or | 1.0
10: STR|start-of-line | 1.0


0000 | 0007 | '^[ ]{4,7}((\\d+\\.)|[*+-])[ ].*'



cluster 84 stats:
nPatterns: 1.0
nProjects: 7
shortest: [\\]([a-zA-Z]+[*]?) ?({|\s*\n?)
Features:

1: LIT|a literal character | 9.0
2: CCC|custom character class | 3.0
3: QST|zero-or-one repetition | 3.0
4: CG|a capture group | 2.0
5: RNG|chars within a range | 2.0
6: ADD|one-or-more repetition | 1.0
7: KLE|zero-or-more repetition | 1.0
8: OR|logical or | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0007 | '[\\\\]([a-zA-Z]+[*]?) ?({|\\s*\\n?)'



cluster 85 stats:
nPatterns: 3.0
nProjects: 7
shortest: coord =
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 0.6666666666666666
3: KLE|zero-or-more repetition | 0.6666666666666666


0000 | 0003 | 'coord ='
0001 | 0002 | 'foo.*bar'
0002 | 0002 | 'from django.*import'



cluster 86 stats:
nPatterns: 1.0
nProjects: 7
shortest: ^(acc|borland|como|cw|dmc|darwin|gcc|hp_cxx|intel|kylix|vc|mgw|qcc|sun|vacpp)\d*$
Features:

1: LIT|a literal character | 60.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: STR|start-of-line | 1.0


0000 | 0007 | '^(acc|borland|como|cw|dmc|darwin|gcc|hp_cxx|intel|kylix|vc|mgw|qcc|sun|vacpp)\\d*$'



cluster 87 stats:
nPatterns: 4.0
nProjects: 7
shortest: </p>
Features:

1: LIT|a literal character | 12.25
2: ANY|any non-newline char | 1.25
3: KLE|zero-or-more repetition | 0.75
4: ADD|one-or-more repetition | 0.5
5: LZY|as few reps as possible | 0.5
6: PNG|named capture group | 0.25


0000 | 0003 | '<key>.*?</key>'
0001 | 0002 | '</p>'
0002 | 0001 | '<.+>(?P<content>.*)</.+>'
0003 | 0001 | '<h5>also known as:</h5>.*?</div>'



cluster 88 stats:
nPatterns: 7.0
nProjects: 7
shortest: User:
Features:

1: LIT|a literal character | 12.428571428571429
2: STR|start-of-line | 0.7142857142857143
3: END|end-of-line | 0.5714285714285714
4: ANY|any non-newline char | 0.42857142857142855
5: KLE|zero-or-more repetition | 0.42857142857142855
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0002 | '^Vendor:'
0001 | 0001 | 'User:'
0002 | 0001 | 'Address:'
0003 | 0001 | '^folder.jpg$'
0004 | 0001 | '^removed:\\s*$'
0005 | 0001 | '^std::__debug::deque<.*>$'
0006 | 0001 | '^std::__debug::unordered_map<.*>$'



cluster 89 stats:
nPatterns: 8.0
nProjects: 7
shortest: DEFAULT
Features:

1: LIT|a literal character | 13.875
2: ADD|one-or-more repetition | 0.125
3: ANY|any non-newline char | 0.125
4: DEC|any of: 0123456789 | 0.125


0000 | 0002 | 'DEFAULT'
0001 | 0002 | 'EXAMPLE'
0002 | 0001 | 'PEM_SERVER='
0003 | 0001 | 'MVI_\\d+.AVI'
0004 | 0001 | 'EMAIL_PROVIDER='
0005 | 0001 | 'REPLACEHEREDUDE'
0006 | 0001 | 'DBAPI2_PLACEHOLDER'
0007 | 0001 | 'LINUX_METERPRETER_MULTI_SCRIPT='



cluster 90 stats:
nPatterns: 5.0
nProjects: 7
shortest: \d.\d.\d
Features:

1: DEC|any of: 0123456789 | 6.8
2: LIT|a literal character | 2.8
3: WRD|[a-zA-Z0-9\_] | 0.6
4: ANY|any non-newline char | 0.4
5: STR|start-of-line | 0.4
6: CG|a capture group | 0.2
7: DBB|$n\le x \le m$ repetition | 0.2
8: END|end-of-line | 0.2
9: KLE|zero-or-more repetition | 0.2
10: NDEC|any non-decimal | 0.2
11: NWRD|non-word chars | 0.2
12: OR|logical or | 0.2
13: SNG|exactly n repetition | 0.2


0000 | 0004 | '^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$'
0001 | 0001 | '\\d.\\d.\\d'
0002 | 0001 | '\\d\\d-\\w\\w\\w-\\d\\d'
0003 | 0001 | '(\\D|^)\\d{1,2}\\W*\\d00'
0004 | 0001 | '\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d'



cluster 91 stats:
nPatterns: 1.0
nProjects: 6
shortest: [^.]*
Features:

1: KLE|zero-or-more repetition | 1.0
2: LIT|a literal character | 1.0
3: NCCC|negated CCC | 1.0


0000 | 0006 | '[^.]*'



cluster 92 stats:
nPatterns: 1.0
nProjects: 6
shortest: <root>([^<]*)</root>
Features:

1: LIT|a literal character | 14.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0006 | '<root>([^<]*)</root>'



cluster 93 stats:
nPatterns: 1.0
nProjects: 6
shortest: -isysroot\s+\S+(\s|$)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: NWSP|any non-whitespace | 1.0
7: OR|logical or | 1.0


0000 | 0006 | '-isysroot\\s+\\S+(\\s|$)'



cluster 94 stats:
nPatterns: 2.0
nProjects: 6
shortest: (?<!\\),
Features:

1: LIT|a literal character | 2.0
2: NLKB|sequence doesn't precede | 1.0


0000 | 0005 | '(?<!\\\\),'
0001 | 0001 | '(?<!\\\\)%'



cluster 95 stats:
nPatterns: 2.0
nProjects: 6
shortest: \.exe$
Features:

1: LIT|a literal character | 5.5
2: ADD|one-or-more repetition | 0.5
3: DEC|any of: 0123456789 | 0.5
4: END|end-of-line | 0.5


0000 | 0004 | '\\.exe$'
0001 | 0002 | '\\.repeat\\d+'



cluster 96 stats:
nPatterns: 2.0
nProjects: 6
shortest: (final|stable)$
Features:

1: LIT|a literal character | 15.0
2: CG|a capture group | 0.5
3: END|end-of-line | 0.5
4: OR|logical or | 0.5


0000 | 0005 | '(final|stable)$'
0001 | 0001 | u'amazon-affiliates""'



cluster 97 stats:
nPatterns: 1.0
nProjects: 6
shortest: Cookie\:.+\@([!-\xff]+).*?(.+\@[!-\xff]+\.txt)
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 4.0
3: ANY|any non-newline char | 3.0
4: CCC|custom character class | 2.0
5: CG|a capture group | 2.0
6: RNG|chars within a range | 2.0
7: KLE|zero-or-more repetition | 1.0
8: LZY|as few reps as possible | 1.0


0000 | 0006 | 'Cookie\\:.+\\@([!-\xff]+).*?(.+\\@[!-\xff]+\\.txt)'



cluster 98 stats:
nPatterns: 4.0
nProjects: 6
shortest: and
Features:

1: LIT|a literal character | 8.25
2: OR|logical or | 0.25


0000 | 0003 | 'and'
0001 | 0001 | 'abcd'
0002 | 0001 | 'vcard'
0003 | 0001 | '%20Mac%20|mac_valgrind'



cluster 99 stats:
nPatterns: 2.0
nProjects: 6
shortest: ^%[%!\w]([^:]*)[ \t]*$
Features:

1: LIT|a literal character | 8.5
2: KLE|zero-or-more repetition | 2.0
3: CG|a capture group | 1.5
4: NCCC|negated CCC | 1.5
5: CCC|custom character class | 1.0
6: END|end-of-line | 0.5
7: STR|start-of-line | 0.5
8: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0005 | '^%[%!\\w]([^:]*)[ \\t]*$'
0001 | 0001 | '\\[\\[([^]|[:]*)\\|([^][]*)\\]\\]'



cluster 100 stats:
nPatterns: 4.0
nProjects: 6
shortest: (\w+;)
Features:

1: LIT|a literal character | 2.25
2: CG|a capture group | 2.0
3: WRD|[a-zA-Z0-9\_] | 1.75
4: ADD|one-or-more repetition | 1.5
5: ANY|any non-newline char | 0.25
6: KLE|zero-or-more repetition | 0.25


0000 | 0003 | '(\\w+)-(\\w+)\\ : (.*)'
0001 | 0001 | '(\\w+;)'
0002 | 0001 | ':(\\w+)'
0003 | 0001 | '(\\w+) (\\w)\\. (\\w+)'



cluster 101 stats:
nPatterns: 5.0
nProjects: 6
shortest: /\d+
Features:

1: ADD|one-or-more repetition | 1.8
2: DEC|any of: 0123456789 | 1.8
3: LIT|a literal character | 1.8
4: STR|start-of-line | 0.4
5: END|end-of-line | 0.2


0000 | 0002 | 'CPU\\d+:'
0001 | 0001 | '/\\d+'
0002 | 0001 | '\\d+:\\d+'
0003 | 0001 | '^\\d+-\\d+'
0004 | 0001 | '^\\d+\\-\\d+\\-\\d+$'



cluster 102 stats:
nPatterns: 6.0
nProjects: 6
shortest: st_
Features:

1: LIT|a literal character | 11.333333333333334
2: END|end-of-line | 0.6666666666666666
3: STR|start-of-line | 0.6666666666666666
4: ANY|any non-newline char | 0.5
5: KLE|zero-or-more repetition | 0.5


0000 | 0001 | 'st_'
0001 | 0001 | '.*stderr$'
0002 | 0001 | '^private_'
0003 | 0001 | '^Note :.*$'
0004 | 0001 | '^parrot_string_t$'
0005 | 0001 | '^std::_Rb_tree_const_iterator<.*>$'



cluster 103 stats:
nPatterns: 6.0
nProjects: 6
shortest: ERROR FAIL
Features:

1: LIT|a literal character | 15.333333333333334
2: ANY|any non-newline char | 0.16666666666666666
3: OR|logical or | 0.16666666666666666


0000 | 0002 | 'ERROR FAIL'
0001 | 0002 | 'ERROR TODO WORKED'
0002 | 0001 | 'ERROR in BUILD'
0003 | 0001 | 'Error: |ERROR: '
0004 | 0001 | '# TBPL WARNING #'
0005 | 0001 | 'REMARK   2 RESOLUTION.'



cluster 104 stats:
nPatterns: 4.0
nProjects: 6
shortest: UNSEEN\s+(\d+)
Features:

1: LIT|a literal character | 18.75
2: ADD|one-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 0.75
5: DEC|any of: 0123456789 | 0.75
6: RNG|chars within a range | 0.75
7: KLE|zero-or-more repetition | 0.5
8: ANY|any non-newline char | 0.25
9: CCC|custom character class | 0.25
10: STR|start-of-line | 0.25


0000 | 0003 | '^\\s*#\\s*define\\s+OPENSSL_VERSION_NUMBER\\s+(0x[0-9a-fA-F]+)'
0001 | 0001 | 'UNSEEN\\s+(\\d+)'
0002 | 0001 | 'Disp. SEDE:\\s\\d+'
0003 | 0001 | '#define\\swxMAJOR_VERSION\\s+(\\d+)'



cluster 105 stats:
nPatterns: 1.0
nProjects: 5
shortest: \S
Features:

1: NWSP|any non-whitespace | 1.0


0000 | 0005 | u'\\S'



cluster 106 stats:
nPatterns: 1.0
nProjects: 5
shortest: (.+)\!$
Features:

1: ADD|one-or-more repetition | 1.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: LIT|a literal character | 1.0


0000 | 0005 | '(.+)\\!$'



cluster 107 stats:
nPatterns: 1.0
nProjects: 5
shortest: #define NODE_MAJOR_VERSION
Features:

1: LIT|a literal character | 26.0


0000 | 0005 | '#define NODE_MAJOR_VERSION'



cluster 108 stats:
nPatterns: 1.0
nProjects: 5
shortest: ([^*{}\s]@|[^*{}@\s]|\*(?!/))+
Features:

1: LIT|a literal character | 10.0
2: NCCC|negated CCC | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NLKA|sequence doesn't follow  | 1.0
7: OR|logical or | 1.0


0000 | 0005 | '([^*{}\\s]@|[^*{}@\\s]|\\*(?!/))+'



cluster 109 stats:
nPatterns: 4.0
nProjects: 5
shortest: :<
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 0.25
3: END|end-of-line | 0.25
4: KLE|zero-or-more repetition | 0.25
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0003 | ':<'
0001 | 0001 | '<='
0002 | 0001 | '>='
0003 | 0001 | '======+\\s*$'



cluster 110 stats:
nPatterns: 3.0
nProjects: 5
shortest: guibg=#*(\w+)
Features:

1: LIT|a literal character | 13.0
2: CG|a capture group | 1.3333333333333333
3: KLE|zero-or-more repetition | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: ADD|one-or-more repetition | 0.6666666666666666
6: ANY|any non-newline char | 0.3333333333333333


0000 | 0004 | '(tag:blogger.com,1999:blog-)(\\w*)'
0001 | 0001 | 'guibg=#*(\\w+)'
0002 | 0001 | 'guifg=#*(\\w+)'



cluster 111 stats:
nPatterns: 5.0
nProjects: 5
shortest: facet
Features:

1: LIT|a literal character | 9.2
2: STR|start-of-line | 0.4
3: ANY|any non-newline char | 0.2
4: END|end-of-line | 0.2


0000 | 0001 | 'facet'
0001 | 0001 | '^Tracks'
0002 | 0001 | '^.htaccess$'
0003 | 0001 | 'create_tasks'
0004 | 0001 | '%search_string%'



cluster 112 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^[\'"](.*)[\'"]$
Features:

1: LIT|a literal character | 7.666666666666667
2: CCC|custom character class | 1.3333333333333333
3: CG|a capture group | 1.3333333333333333
4: KLE|zero-or-more repetition | 1.3333333333333333
5: ANY|any non-newline char | 0.6666666666666666
6: LZY|as few reps as possible | 0.6666666666666666
7: NCCC|negated CCC | 0.6666666666666666
8: END|end-of-line | 0.3333333333333333
9: OR|logical or | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333


0000 | 0003 | '^[\'"](.*)[\'"]$'
0001 | 0001 | 'var-bind=[\'"](.*)["\']'
0002 | 0001 | '("[^"]*?")|(\'[^\']*?\')'



cluster 113 stats:
nPatterns: 3.0
nProjects: 5
shortest: "([^"]+)"|(\S+)
Features:

1: LIT|a literal character | 5.666666666666667
2: ADD|one-or-more repetition | 2.3333333333333335
3: CG|a capture group | 1.6666666666666667
4: NCCC|negated CCC | 1.6666666666666667
5: QST|zero-or-one repetition | 1.0
6: OR|logical or | 0.6666666666666666
7: KLE|zero-or-more repetition | 0.3333333333333333
8: NCG|group without capturing | 0.3333333333333333
9: NWSP|any non-whitespace | 0.3333333333333333
10: WNW|word/non-word boundary | 0.3333333333333333
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0003 | '"([^"]+)"|(\\S+)'
0001 | 0001 | '(\\b[^ ,=]+)="?([^",]+)"?'
0002 | 0001 | '((?:"[^"]+"|[^,"]+)+)\\s*,?'



cluster 114 stats:
nPatterns: 5.0
nProjects: 5
shortest: ^\..*
Features:

1: LIT|a literal character | 4.8
2: ANY|any non-newline char | 2.6
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 0.6
5: END|end-of-line | 0.4
6: ADD|one-or-more repetition | 0.2
7: CG|a capture group | 0.2
8: NCCC|negated CCC | 0.2
9: WRD|[a-zA-Z0-9\_] | 0.2


0000 | 0001 | '^\\..*'
0001 | 0001 | '.*/(\\w+).kcm'
0002 | 0001 | '[^.]*\\.\\..*'
0003 | 0001 | '^\\..*\\.swp$'
0004 | 0001 | '^....:17EF:6009\\.....$'



cluster 115 stats:
nPatterns: 7.0
nProjects: 5
shortest: state=
Features:

1: LIT|a literal character | 13.857142857142858
2: END|end-of-line | 0.14285714285714285
3: OR|logical or | 0.14285714285714285


0000 | 0002 | 'test_file_commit1'
0001 | 0002 | 'test_file_commit2'
0002 | 0001 | 'state='
0003 | 0001 | 'template='
0004 | 0001 | 'smtp_relay='
0005 | 0001 | 'AuthContext$'
0006 | 0001 | 'event_teamlist|matchresults'



cluster 116 stats:
nPatterns: 5.0
nProjects: 5
shortest: ^[ ]{0,3}:[ ]{1,3}(.*)$
Features:

1: LIT|a literal character | 5.8
2: RNG|chars within a range | 2.2
3: CCC|custom character class | 1.8
4: SNG|exactly n repetition | 1.6
5: CG|a capture group | 1.2
6: DBB|$n\le x \le m$ repetition | 1.2
7: END|end-of-line | 1.0
8: STR|start-of-line | 0.8
9: OR|logical or | 0.4
10: ADD|one-or-more repetition | 0.2
11: ANY|any non-newline char | 0.2
12: KLE|zero-or-more repetition | 0.2
13: NCG|group without capturing | 0.2


0000 | 0001 | '^[ ]{0,3}:[ ]{1,3}(.*)$'
0001 | 0001 | '^([A-Fa-f0-9]{2,2}){3,4}$'
0002 | 0001 | '^([0-9a-fA-F]{2}(:|$)){6}$'
0003 | 0001 | '(([0-9]{1,3}\\.){3}[0-9]{1,3})'
0004 | 0001 | '^(?:[A-Z]{1}\\.{1}|[A-Z]{1}\\.{1}[A-Z]{1})+$'



cluster 117 stats:
nPatterns: 1.0
nProjects: 4
shortest: [ ]+
Features:

1: ADD|one-or-more repetition | 1.0
2: CCC|custom character class | 1.0
3: LIT|a literal character | 1.0


0000 | 0004 | '[ ]+'



cluster 118 stats:
nPatterns: 1.0
nProjects: 4
shortest: [-.]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0


0000 | 0004 | '[-.]'



cluster 119 stats:
nPatterns: 1.0
nProjects: 4
shortest: \\(.)
Features:

1: ANY|any non-newline char | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0


0000 | 0004 | u'\\\\(.)'



cluster 120 stats:
nPatterns: 1.0
nProjects: 4
shortest: [-T:/.]|\s+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: OR|logical or | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0004 | '[-T:/.]|\\s+'



cluster 121 stats:
nPatterns: 1.0
nProjects: 4
shortest: &(?!(\w+|#\d+);)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: NLKA|sequence doesn't follow  | 1.0
6: OR|logical or | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0004 | u'&(?!(\\w+|#\\d+);)'



cluster 122 stats:
nPatterns: 1.0
nProjects: 4
shortest: \[(\d?\d?\d?)%\]
Features:

1: DEC|any of: 0123456789 | 3.0
2: LIT|a literal character | 3.0
3: QST|zero-or-one repetition | 3.0
4: CG|a capture group | 1.0


0000 | 0004 | '\\[(\\d?\\d?\\d?)%\\]'



cluster 123 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^quit.*
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0


0000 | 0003 | '^quit.*'
0001 | 0001 | '^timeout.*/'



cluster 124 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^(\s*)(def .+:|class .+:)
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 2.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: STR|start-of-line | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0004 | '^(\\s*)(def .+:|class .+:)'



cluster 125 stats:
nPatterns: 2.0
nProjects: 4
shortest: .{1,2047}
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 0.5
3: DBB|$n\le x \le m$ repetition | 0.5


0000 | 0003 | u'.{1,2047}'
0001 | 0001 | '1234567890'



cluster 126 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^<\?xml.*?encoding=["\\']*(.+?)["\\'>]
Features:

1: LIT|a literal character | 21.0
2: ANY|any non-newline char | 2.0
3: CCC|custom character class | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 2.0
6: ADD|one-or-more repetition | 1.0
7: CG|a capture group | 1.0
8: STR|start-of-line | 1.0


0000 | 0004 | '^<\\?xml.*?encoding=["\\\']*(.+?)["\\\'>]'



cluster 127 stats:
nPatterns: 2.0
nProjects: 4
shortest: #\{?if\}?\(.+?\).*?#\{?end\}?
Features:

1: LIT|a literal character | 14.5
2: QST|zero-or-one repetition | 4.0
3: ANY|any non-newline char | 2.0
4: LZY|as few reps as possible | 2.0
5: KLE|zero-or-more repetition | 1.5
6: ADD|one-or-more repetition | 0.5


0000 | 0004 | '#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'
0001 | 0004 | '#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'



cluster 128 stats:
nPatterns: 3.0
nProjects: 4
shortest: Name=([\w\.]+)
Features:

1: LIT|a literal character | 6.333333333333333
2: CCC|custom character class | 2.0
3: CG|a capture group | 2.0
4: WRD|[a-zA-Z0-9\_] | 1.6666666666666667
5: ADD|one-or-more repetition | 1.3333333333333333
6: KLE|zero-or-more repetition | 1.3333333333333333
7: ANY|any non-newline char | 0.6666666666666666
8: DEC|any of: 0123456789 | 0.3333333333333333
9: NCG|group without capturing | 0.3333333333333333


0000 | 0002 | '(?:([\\w ]+) ([\\w.]+) .*\\[.* ([\\d.]+)\\])'
0001 | 0001 | 'Name=([\\w\\.]+)'
0002 | 0001 | '<([\\w]*)=([, \\w]*)>'



cluster 129 stats:
nPatterns: 4.0
nProjects: 4
shortest: [\d\.]+
Features:

1: LIT|a literal character | 3.25
2: WRD|[a-zA-Z0-9\_] | 2.0
3: ADD|one-or-more repetition | 1.5
4: CCC|custom character class | 1.5
5: DEC|any of: 0123456789 | 1.0
6: STR|start-of-line | 0.25


0000 | 0002 | '[\\d\\.]+'
0001 | 0001 | '[\\w\\d\\-_\\.]+'
0002 | 0001 | '^[\\w\\d\\.]+@[\\w\\d\\.]+'
0003 | 0001 | '[\\w\\.\\-]+@[\\w\\.\\-]+\\.\\w\\w\\w'



cluster 130 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^(WebSocket-Protocol: [\x20-\x7e]+\r\n)?(Cookie: [^\r]*\r\n)*(Cookie2: [^\r]*\r\n)?(Cookie: [^\r]*\r\n)*\r\n
Features:

1: LIT|a literal character | 60.0
2: KLE|zero-or-more repetition | 5.0
3: CG|a capture group | 4.0
4: NCCC|negated CCC | 3.0
5: QST|zero-or-one repetition | 2.0
6: ADD|one-or-more repetition | 1.0
7: CCC|custom character class | 1.0
8: RNG|chars within a range | 1.0
9: STR|start-of-line | 1.0


0000 | 0004 | '^(WebSocket-Protocol: [\\x20-\\x7e]+\\r\\n)?(Cookie: [^\\r]*\\r\\n)*(Cookie2: [^\\r]*\\r\\n)?(Cookie: [^\\r]*\\r\\n)*\\r\\n'



cluster 131 stats:
nPatterns: 4.0
nProjects: 4
shortest: width="(\d+?)"
Features:

1: LIT|a literal character | 13.5
2: ADD|one-or-more repetition | 1.25
3: CG|a capture group | 0.75
4: NCCC|negated CCC | 0.75
5: DEC|any of: 0123456789 | 0.5
6: KLE|zero-or-more repetition | 0.5
7: PNG|named capture group | 0.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
9: CCC|custom character class | 0.25
10: LKA|matching sequence follows | 0.25
11: LKB|matching sequence precedes | 0.25
12: LZY|as few reps as possible | 0.25
13: RNG|chars within a range | 0.25
14: STR|start-of-line | 0.25


0000 | 0001 | 'width="(\\d+?)"'
0001 | 0001 | '^%include\\s"([^"]+)"'
0002 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'
0003 | 0001 | '(?P<pid>\\d+)\\s+rename\\("[^"]*", "(?P<name>[^"]*)"\\)'



cluster 132 stats:
nPatterns: 3.0
nProjects: 4
shortest: \s+\[(?P<section>.*)\]
Features:

1: LIT|a literal character | 7.333333333333333
2: KLE|zero-or-more repetition | 3.6666666666666665
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.6666666666666665
4: PNG|named capture group | 2.3333333333333335
5: QST|zero-or-one repetition | 1.3333333333333333
6: ADD|one-or-more repetition | 1.0
7: ANY|any non-newline char | 1.0
8: CCC|custom character class | 0.6666666666666666
9: END|end-of-line | 0.6666666666666666
10: LZY|as few reps as possible | 0.6666666666666666
11: NCCC|negated CCC | 0.6666666666666666
12: STR|start-of-line | 0.6666666666666666
13: CG|a capture group | 0.3333333333333333
14: OR|logical or | 0.3333333333333333
15: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0002 | '^((?P<retval>[^=]+?)\\s*=|class)?\\s*(?P<head>[\\w\\.]+\\s?\\(.*?\\))\\s*(?P<sep>[:<>=-]*)\\s*(?P<tail>.*)$'
0001 | 0001 | '\\s+\\[(?P<section>.*)\\]'
0002 | 0001 | '^\\s*\\[(?P<state>!?!?)(?P<section>[^\\]]*)\\]\\s*$'



cluster 133 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^-?\d
Features:

1: DEC|any of: 0123456789 | 1.0
2: LIT|a literal character | 1.0
3: QST|zero-or-one repetition | 1.0
4: STR|start-of-line | 1.0


0000 | 0003 | '^-?\\d'



cluster 134 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^rebt.*
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0


0000 | 0003 | '^rebt.*'



cluster 135 stats:
nPatterns: 1.0
nProjects: 3
shortest: (\.|\s)
Features:

1: CG|a capture group | 1.0
2: LIT|a literal character | 1.0
3: OR|logical or | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | u'(\\.|\\s)'



cluster 136 stats:
nPatterns: 1.0
nProjects: 3
shortest: \${(\w+)}
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | '\\${(\\w+)}'



cluster 137 stats:
nPatterns: 1.0
nProjects: 3
shortest: \*\s[^:]+:
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | '\\*\\s[^:]+:'



cluster 138 stats:
nPatterns: 2.0
nProjects: 3
shortest: pam
Features:

1: LIT|a literal character | 4.0


0000 | 0002 | '&amp;'
0001 | 0001 | 'pam'



cluster 139 stats:
nPatterns: 1.0
nProjects: 3
shortest: length (\d*):
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0003 | 'length (\\d*):'



cluster 140 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^(.+)[:(]\d+[:)]
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: DEC|any of: 0123456789 | 1.0
7: STR|start-of-line | 1.0


0000 | 0003 | '^(.+)[:(]\\d+[:)]'



cluster 141 stats:
nPatterns: 2.0
nProjects: 3
shortest: PID:
Features:

1: LIT|a literal character | 6.0


0000 | 0002 | 'QEMU_PID'
0001 | 0001 | 'PID:'



cluster 142 stats:
nPatterns: 1.0
nProjects: 3
shortest: --test-config=(.*)$
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0


0000 | 0003 | '--test-config=(.*)$'



cluster 143 stats:
nPatterns: 1.0
nProjects: 3
shortest: \\?(gettext|_)\(
Features:

1: LIT|a literal character | 10.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: QST|zero-or-one repetition | 1.0


0000 | 0003 | '\\\\?(gettext|_)\\('



cluster 144 stats:
nPatterns: 2.0
nProjects: 3
shortest: Topic
Features:

1: LIT|a literal character | 6.0
2: STR|start-of-line | 0.5


0000 | 0002 | '^compile'
0001 | 0001 | 'Topic'



cluster 145 stats:
nPatterns: 1.0
nProjects: 3
shortest: pip(\d(\.\d)?)?$
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 2.0
3: DEC|any of: 0123456789 | 2.0
4: QST|zero-or-one repetition | 2.0
5: END|end-of-line | 1.0


0000 | 0003 | 'pip(\\d(\\.\\d)?)?$'



cluster 146 stats:
nPatterns: 2.0
nProjects: 3
shortest: [xh]vc0
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 1.0
3: WNW|word/non-word boundary | 0.5


0000 | 0002 | '[xh]vc0'
0001 | 0001 | '\\bc[cs]'



cluster 147 stats:
nPatterns: 1.0
nProjects: 3
shortest: .*(\.so|\.py[cod]?)$
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: OR|logical or | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0003 | '.*(\\.so|\\.py[cod]?)$'



cluster 148 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^(X|A)$
Features:

1: LIT|a literal character | 3.5
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: STR|start-of-line | 1.0
5: END|end-of-line | 0.5


0000 | 0002 | '^(X|A)$'
0001 | 0001 | '^(Sch|S)A'



cluster 149 stats:
nPatterns: 2.0
nProjects: 3
shortest: [aeiou]
Features:

1: LIT|a literal character | 7.5
2: CCC|custom character class | 1.0


0000 | 0002 | '[aeiou]'
0001 | 0001 | '[aeouiAEOUI]'



cluster 150 stats:
nPatterns: 2.0
nProjects: 3
shortest: >.+?:
Features:

1: LIT|a literal character | 3.5
2: ADD|one-or-more repetition | 1.5
3: ANY|any non-newline char | 1.5
4: LZY|as few reps as possible | 1.5
5: CG|a capture group | 0.5


0000 | 0002 | '>.+?:'
0001 | 0001 | '{{.+?\\|(.+?)}}'



cluster 151 stats:
nPatterns: 2.0
nProjects: 3
shortest: LR Number:
Features:

1: LIT|a literal character | 10.0


0000 | 0002 | 'LR Number:'
0001 | 0001 | 'Run number'



cluster 152 stats:
nPatterns: 1.0
nProjects: 3
shortest: browser.search.order.([1-9])
Features:

1: LIT|a literal character | 20.0
2: ANY|any non-newline char | 3.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0003 | 'browser.search.order.([1-9])'



cluster 153 stats:
nPatterns: 1.0
nProjects: 3
shortest: (\d+(\.\d+)?) (K|M|G|T)b?$
Features:

1: LIT|a literal character | 7.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: DEC|any of: 0123456789 | 2.0
5: QST|zero-or-one repetition | 2.0
6: END|end-of-line | 1.0
7: OR|logical or | 1.0


0000 | 0003 | '(\\d+(\\.\\d+)?) (K|M|G|T)b?$'



cluster 154 stats:
nPatterns: 3.0
nProjects: 3
shortest: Game
Features:

1: LIT|a literal character | 5.333333333333333
2: END|end-of-line | 0.3333333333333333
3: STR|start-of-line | 0.3333333333333333


0000 | 0001 | 'Game'
0001 | 0001 | '^name$'
0002 | 0001 | 'mean_FA\\.'



cluster 155 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^\w+(?:-\w+)?(?:,\w+(?:-\w+)?)*$
Features:

1: ADD|one-or-more repetition | 4.0
2: WRD|[a-zA-Z0-9\_] | 4.0
3: LIT|a literal character | 3.0
4: NCG|group without capturing | 3.0
5: QST|zero-or-one repetition | 2.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0003 | '^\\w+(?:-\\w+)?(?:,\\w+(?:-\\w+)?)*$'



cluster 156 stats:
nPatterns: 3.0
nProjects: 3
shortest: ([()| ])
Features:

1: LIT|a literal character | 2.6666666666666665
2: CCC|custom character class | 1.0
3: CG|a capture group | 0.6666666666666666


0000 | 0001 | '([()| ])'
0001 | 0001 | '([\\x7F])'
0002 | 0001 | '[()\\134]'



cluster 157 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^#define.*ENGINE_VERSION\t*"DOOM (.*)"
Features:

1: LIT|a literal character | 29.0
2: KLE|zero-or-more repetition | 3.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 1.0
5: STR|start-of-line | 1.0


0000 | 0003 | '^#define.*ENGINE_VERSION\t*"DOOM (.*)"'



cluster 158 stats:
nPatterns: 4.0
nProjects: 3
shortest: ^.__
Features:

1: LIT|a literal character | 3.5
2: STR|start-of-line | 0.5
3: ANY|any non-newline char | 0.25


0000 | 0001 | '^.__'
0001 | 0001 | '^KEY_'
0002 | 0001 | '_L3\\.'
0003 | 0001 | '_MD\\.'



cluster 159 stats:
nPatterns: 2.0
nProjects: 3
shortest: id_.*=(\d+)
Features:

1: LIT|a literal character | 8.5
2: DEC|any of: 0123456789 | 2.0
3: ADD|one-or-more repetition | 1.5
4: ANY|any non-newline char | 1.5
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0002 | '(\\d+):.*virtio\\d+-input.\\d'
0001 | 0001 | 'id_.*=(\\d+)'



cluster 160 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^#wal_level\s*=.*$
Features:

1: LIT|a literal character | 13.5
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
3: KLE|zero-or-more repetition | 1.0
4: ANY|any non-newline char | 0.5
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0002 | 'call\\slaunch\\sbefore'
0001 | 0001 | '^#wal_level\\s*=.*$'



cluster 161 stats:
nPatterns: 2.0
nProjects: 3
shortest: Mobile; rv:([\d.]+)
Features:

1: LIT|a literal character | 12.5
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0


0000 | 0002 | 'dot version ([\\d\\.]+)'
0001 | 0001 | 'Mobile; rv:([\\d.]+)'



cluster 162 stats:
nPatterns: 3.0
nProjects: 3
shortest: [\W_]*
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 2.0
3: ADD|one-or-more repetition | 1.0
4: KLE|zero-or-more repetition | 1.0
5: DEC|any of: 0123456789 | 0.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: NWRD|non-word chars | 0.3333333333333333
8: OR|logical or | 0.3333333333333333
9: STR|start-of-line | 0.3333333333333333


0000 | 0001 | u'[\\W_]*'
0001 | 0001 | '^[@]+|[@]+$'
0002 | 0001 | '/[ ]*[\\d.]+[ ]*kg'



cluster 163 stats:
nPatterns: 2.0
nProjects: 3
shortest: </?(?:b|em|i)>
Features:

1: LIT|a literal character | 12.0
2: NCG|group without capturing | 1.5
3: CG|a capture group | 1.0
4: OR|logical or | 1.0
5: ADD|one-or-more repetition | 0.5
6: QST|zero-or-one repetition | 0.5


0000 | 0002 | '</?(?:b|em|i)>'
0001 | 0001 | '((?:<br />)+)(</(?:font|span)>)'



cluster 164 stats:
nPatterns: 3.0
nProjects: 3
shortest: Totaal
Features:

1: LIT|a literal character | 10.0
2: RNG|chars within a range | 0.6666666666666666
3: ADD|one-or-more repetition | 0.3333333333333333
4: CCC|custom character class | 0.3333333333333333
5: CG|a capture group | 0.3333333333333333


0000 | 0001 | 'Totaal'
0001 | 0001 | 'attack=5'
0002 | 0001 | '(fasta_[a-z0-9]+\\.fasta)'



cluster 165 stats:
nPatterns: 2.0
nProjects: 3
shortest: (?sm)^! Emergency stop.*
Features:

1: LIT|a literal character | 20.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: CG|a capture group | 0.5
5: OPT|options wrapper | 0.5
6: STR|start-of-line | 0.5


0000 | 0002 | '(?sm)^! Emergency stop.*'
0001 | 0001 | 'Reading specs from (.*)/specs'



cluster 166 stats:
nPatterns: 2.0
nProjects: 3
shortest: LawText1">(.*?)</
Features:

1: LIT|a literal character | 20.5
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: LZY|as few reps as possible | 1.5
5: CG|a capture group | 1.0


0000 | 0002 | '<a href="function\\..*?\\.html">(.*?)</a>'
0001 | 0001 | 'LawText1">(.*?)</'



cluster 167 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^\s*(if|try|elif|while|for)
Features:

1: LIT|a literal character | 41.0
2: CG|a capture group | 2.5
3: OR|logical or | 2.0
4: QST|zero-or-one repetition | 1.0
5: STR|start-of-line | 1.0
6: KLE|zero-or-more repetition | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '^\\s*(if|try|elif|while|for)'
0001 | 0001 | '^/((usr/)?s?bin|etc/(rc\\.d/init\\.d|X11/xinit\\.d|cron\\.(hourly|daily|monthly|weekly)))/'



cluster 168 stats:
nPatterns: 1.0
nProjects: 2
shortest: [:@/]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0


0000 | 0002 | '[:@/]'



cluster 169 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^[#/;]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: STR|start-of-line | 1.0


0000 | 0002 | '^[#/;]'



cluster 170 stats:
nPatterns: 1.0
nProjects: 2
shortest: [\w']+
Features:

1: ADD|one-or-more repetition | 1.0
2: CCC|custom character class | 1.0
3: LIT|a literal character | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | "[\\w']+"



cluster 171 stats:
nPatterns: 1.0
nProjects: 2
shortest: \W_\(
Features:

1: LIT|a literal character | 2.0
2: NWRD|non-word chars | 1.0


0000 | 0002 | '\\W_\\('



cluster 172 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^/admin
Features:

1: LIT|a literal character | 6.0
2: STR|start-of-line | 1.0


0000 | 0002 | '^/admin'



cluster 173 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?s)>\s+
Features:

1: ADD|one-or-more repetition | 1.0
2: LIT|a literal character | 1.0
3: OPT|options wrapper | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(?s)>\\s+'



cluster 174 stats:
nPatterns: 1.0
nProjects: 2
shortest: \bcsc\b
Features:

1: LIT|a literal character | 3.0
2: WNW|word/non-word boundary | 2.0


0000 | 0002 | '\\bcsc\\b'



cluster 175 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(.+?)_(.+)$
Features:

1: ADD|one-or-more repetition | 2.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: END|end-of-line | 1.0
5: LIT|a literal character | 1.0
6: LZY|as few reps as possible | 1.0
7: STR|start-of-line | 1.0


0000 | 0002 | '^(.+?)_(.+)$'



cluster 176 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\s*)<.+> 
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '^(\\s*)<.+> '



cluster 177 stats:
nPatterns: 1.0
nProjects: 2
shortest: sessionToken
Features:

1: LIT|a literal character | 12.0


0000 | 0002 | 'sessionToken'



cluster 178 stats:
nPatterns: 2.0
nProjects: 2
shortest: {$
Features:

1: END|end-of-line | 1.0
2: LIT|a literal character | 1.0


0000 | 0001 | '{$'
0001 | 0001 | '\\$$'



cluster 179 stats:
nPatterns: 1.0
nProjects: 2
shortest: ([+-]\d{4})$
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: SNG|exactly n repetition | 1.0


0000 | 0002 | '([+-]\\d{4})$'



cluster 180 stats:
nPatterns: 1.0
nProjects: 2
shortest: .*?\S\.\s
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: LZY|as few reps as possible | 1.0
5: NWSP|any non-whitespace | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | u'.*?\\S\\.\\s'



cluster 181 stats:
nPatterns: 1.0
nProjects: 2
shortest: (^package:)|\s
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: STR|start-of-line | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(^package:)|\\s'



cluster 182 stats:
nPatterns: 1.0
nProjects: 2
shortest: <<<(-?\d+?)>>>
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: LZY|as few reps as possible | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '<<<(-?\\d+?)>>>'



cluster 183 stats:
nPatterns: 1.0
nProjects: 2
shortest: <param([^<>]+)>
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0002 | '<param([^<>]+)>'



cluster 184 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\(
Features:

1: LIT|a literal character | 1.5
2: STR|start-of-line | 1.0


0000 | 0001 | '^\\('
0001 | 0001 | '^_\\('



cluster 185 stats:
nPatterns: 1.0
nProjects: 2
shortest: (.*)\.\w{3,4}$
Features:

1: ANY|any non-newline char | 1.0
2: CG|a capture group | 1.0
3: DBB|$n\le x \le m$ repetition | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: LIT|a literal character | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '(.*)\\.\\w{3,4}$'



cluster 186 stats:
nPatterns: 1.0
nProjects: 2
shortest: Fennec/([\d.]+)
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0


0000 | 0002 | 'Fennec/([\\d.]+)'



cluster 187 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(.+)<(.+)>(.*)$
Features:

1: ANY|any non-newline char | 3.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: LIT|a literal character | 2.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: STR|start-of-line | 1.0


0000 | 0002 | '^(.+)<(.+)>(.*)$'



cluster 188 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?m)^alias.*virtio
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: OPT|options wrapper | 1.0
5: STR|start-of-line | 1.0


0000 | 0002 | '(?m)^alias.*virtio'



cluster 189 stats:
nPatterns: 1.0
nProjects: 2
shortest: Revision: ([0-9]+)
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0002 | 'Revision: ([0-9]+)'



cluster 190 stats:
nPatterns: 1.0
nProjects: 2
shortest: call.*mount.*first
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0


0000 | 0002 | 'call.*mount.*first'



cluster 191 stats:
nPatterns: 1.0
nProjects: 2
shortest: @\w+( [^{}:\n]+)?:
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: QST|zero-or-one repetition | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '@\\w+( [^{}:\n]+)?:'



cluster 192 stats:
nPatterns: 1.0
nProjects: 2
shortest: @@VERSION>(.*)@@(.*)
Features:

1: LIT|a literal character | 12.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0


0000 | 0002 | '@@VERSION>(.*)@@(.*)'



cluster 193 stats:
nPatterns: 1.0
nProjects: 2
shortest: Subversion Revision:
Features:

1: LIT|a literal character | 20.0


0000 | 0002 | 'Subversion Revision:'



cluster 194 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^.*?(v[\d\.]+).*?$
Features:

1: ANY|any non-newline char | 2.0
2: KLE|zero-or-more repetition | 2.0
3: LIT|a literal character | 2.0
4: LZY|as few reps as possible | 2.0
5: ADD|one-or-more repetition | 1.0
6: CCC|custom character class | 1.0
7: CG|a capture group | 1.0
8: DEC|any of: 0123456789 | 1.0
9: END|end-of-line | 1.0
10: STR|start-of-line | 1.0


0000 | 0002 | '^.*?(v[\\d\\.]+).*?$'



cluster 195 stats:
nPatterns: 1.0
nProjects: 2
shortest: (.*?) (.*?) as (\w+)
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 3.0
3: ANY|any non-newline char | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 2.0
6: ADD|one-or-more repetition | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '(.*?) (.*?) as (\\w+)'



cluster 196 stats:
nPatterns: 1.0
nProjects: 2
shortest: (Saving to:|\s*\d+K)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(Saving to:|\\s*\\d+K)'



cluster 197 stats:
nPatterns: 1.0
nProjects: 2
shortest: ([+-]?[\d\.]+)(\S+)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: DEC|any of: 0123456789 | 1.0
6: NWSP|any non-whitespace | 1.0
7: QST|zero-or-one repetition | 1.0


0000 | 0002 | '([+-]?[\\d\\.]+)(\\S+)'



cluster 198 stats:
nPatterns: 1.0
nProjects: 2
shortest: [^%]+%[^.]+[.](compile)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 2.0
3: NCCC|negated CCC | 2.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0


0000 | 0002 | '[^%]+%[^.]+[.](compile)'



cluster 199 stats:
nPatterns: 1.0
nProjects: 2
shortest: \.(js|java)(?:\.in)?$
Features:

1: LIT|a literal character | 10.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: NCG|group without capturing | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '\\.(js|java)(?:\\.in)?$'



cluster 200 stats:
nPatterns: 2.0
nProjects: 2
shortest: url
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 0.5
3: KLE|zero-or-more repetition | 0.5
4: LZY|as few reps as possible | 0.5


0000 | 0001 | 'url'
0001 | 0001 | '<url>.*?</url>'



cluster 201 stats:
nPatterns: 1.0
nProjects: 2
shortest: .*lib(n?cursesw?)\.so.*
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: QST|zero-or-one repetition | 2.0
5: CG|a capture group | 1.0


0000 | 0002 | '.*lib(n?cursesw?)\\.so.*'



cluster 202 stats:
nPatterns: 2.0
nProjects: 2
shortest: (\w+).py$
Features:

1: LIT|a literal character | 3.5
2: END|end-of-line | 1.5
3: ADD|one-or-more repetition | 0.5
4: ANY|any non-newline char | 0.5
5: CG|a capture group | 0.5
6: OR|logical or | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '(\\w+).py$'
0001 | 0001 | '\\.pyc$|~$'



cluster 203 stats:
nPatterns: 2.0
nProjects: 2
shortest: bvals
Features:

1: LIT|a literal character | 7.5
2: END|end-of-line | 0.5
3: KLE|zero-or-more repetition | 0.5
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | 'bvals'
0001 | 0001 | 'Usable as:\\s*$'



cluster 204 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?sm)\A.*?!( LaTeX Error:)?
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: OPT|options wrapper | 1.0
7: QST|zero-or-one repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0002 | '(?sm)\\A.*?!( LaTeX Error:)?'



cluster 205 stats:
nPatterns: 2.0
nProjects: 2
shortest: <tr valign
Features:

1: LIT|a literal character | 11.0


0000 | 0001 | '<tr valign'
0001 | 0001 | 'internal log'



cluster 206 stats:
nPatterns: 1.0
nProjects: 2
shortest: [&?]versionId=([^&]+)($|=|&)
Features:

1: LIT|a literal character | 15.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0
7: OR|logical or | 1.0


0000 | 0002 | '[&?]versionId=([^&]+)($|=|&)'



cluster 207 stats:
nPatterns: 2.0
nProjects: 2
shortest: \S{1,10}
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: DBB|$n\le x \le m$ repetition | 0.5
5: END|end-of-line | 0.5
6: NWSP|any non-whitespace | 0.5
7: STR|start-of-line | 0.5


0000 | 0001 | '\\S{1,10}'
0001 | 0001 | '^0000.*1111.*$'



cluster 208 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^Shift
Features:

1: LIT|a literal character | 10.0
2: STR|start-of-line | 1.0
3: END|end-of-line | 0.5


0000 | 0001 | '^Shift'
0001 | 0001 | '^JSC::Identifier$'



cluster 209 stats:
nPatterns: 1.0
nProjects: 2
shortest: range\([ ]*([-]?\d+|n).*\)
Features:

1: LIT|a literal character | 10.0
2: CCC|custom character class | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: DEC|any of: 0123456789 | 1.0
8: OR|logical or | 1.0
9: QST|zero-or-one repetition | 1.0


0000 | 0002 | 'range\\([ ]*([-]?\\d+|n).*\\)'



cluster 210 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?i)gesch\xc3\xa4fts(.*)nummer
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OPT|options wrapper | 1.0


0000 | 0002 | '(?i)gesch\xc3\xa4fts(.*)nummer'



cluster 211 stats:
nPatterns: 2.0
nProjects: 2
shortest: {([^}^{]*)}
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 1.0
3: NCCC|negated CCC | 1.0
4: ADD|one-or-more repetition | 0.5
5: KLE|zero-or-more repetition | 0.5
6: LZY|as few reps as possible | 0.5


0000 | 0001 | '{([^}^{]*)}'
0001 | 0001 | '{{{([^{]+?)}}}'



cluster 212 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?s)<failure (.*?)>.*?</failure>
Features:

1: LIT|a literal character | 20.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 2.0
5: CG|a capture group | 1.0
6: OPT|options wrapper | 1.0


0000 | 0002 | '(?s)<failure (.*?)>.*?</failure>'



cluster 213 stats:
nPatterns: 2.0
nProjects: 2
shortest: </body
Features:

1: LIT|a literal character | 10.5
2: KLE|zero-or-more repetition | 0.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '</body'
0001 | 0001 | u'</tbody>\\s*<tbody>'



cluster 214 stats:
nPatterns: 1.0
nProjects: 2
shortest: @import url\((?P<filename>.*)\)
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0


0000 | 0002 | '@import url\\((?P<filename>.*)\\)'



cluster 215 stats:
nPatterns: 1.0
nProjects: 2
shortest: (\*|_) (?=\S) (.+?) (?<=\S) \1
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 2.0
3: NWSP|any non-whitespace | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: BKR|match the $i^{th}$ CG | 1.0
7: LKA|matching sequence follows | 1.0
8: LKB|matching sequence precedes | 1.0
9: LZY|as few reps as possible | 1.0
10: OR|logical or | 1.0


0000 | 0002 | '(\\*|_) (?=\\S) (.+?) (?<=\\S) \\1'



cluster 216 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(?:852-?)?(\d{4})[-\.]?(\d{4})$
Features:

1: LIT|a literal character | 6.0
2: QST|zero-or-one repetition | 3.0
3: CG|a capture group | 2.0
4: DEC|any of: 0123456789 | 2.0
5: SNG|exactly n repetition | 2.0
6: CCC|custom character class | 1.0
7: END|end-of-line | 1.0
8: NCG|group without capturing | 1.0
9: STR|start-of-line | 1.0


0000 | 0002 | '^(?:852-?)?(\\d{4})[-\\.]?(\\d{4})$'



cluster 217 stats:
nPatterns: 2.0
nProjects: 2
shortest: Town
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 0.5
3: CG|a capture group | 0.5
4: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | 'Town'
0001 | 0001 | 'GoogleDMToken token=(\\w+)'



cluster 218 stats:
nPatterns: 1.0
nProjects: 2
shortest: coding[:=]\s*(?P<encoding>[-\w.]+)
Features:

1: LIT|a literal character | 10.0
2: CCC|custom character class | 2.0
3: ADD|one-or-more repetition | 1.0
4: KLE|zero-or-more repetition | 1.0
5: PNG|named capture group | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | 'coding[:=]\\s*(?P<encoding>[-\\w.]+)'



cluster 219 stats:
nPatterns: 1.0
nProjects: 2
shortest: (([umsg]asser(t|ted))) *\(( *)(\d+)
Features:

1: LIT|a literal character | 16.0
2: CG|a capture group | 5.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0
7: OR|logical or | 1.0


0000 | 0002 | '(([umsg]asser(t|ted))) *\\(( *)(\\d+)'



cluster 220 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?i)^(\d+(?:\.\d+)?)([kMGTPEZY]?)$
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: DEC|any of: 0123456789 | 2.0
5: QST|zero-or-one repetition | 2.0
6: CCC|custom character class | 1.0
7: END|end-of-line | 1.0
8: NCG|group without capturing | 1.0
9: OPT|options wrapper | 1.0
10: STR|start-of-line | 1.0


0000 | 0002 | '(?i)^(\\d+(?:\\.\\d+)?)([kMGTPEZY]?)$'



cluster 221 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\s+\(release-func\s+)(\w+)(.*)$
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '^(\\s+\\(release-func\\s+)(\\w+)(.*)$'



cluster 222 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^Uid:\s+(\d+)
Features:

1: LIT|a literal character | 4.5
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: END|end-of-line | 0.5


0000 | 0001 | '^Uid:\\s+(\\d+)'
0001 | 0001 | '^PPid:\\s+(\\d+)$'



cluster 223 stats:
nPatterns: 1.0
nProjects: 2
shortest: fail:(\d+).*?fail:(\d+).*fail:(\d+)
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: DEC|any of: 0123456789 | 3.0
5: ANY|any non-newline char | 2.0
6: KLE|zero-or-more repetition | 2.0
7: LZY|as few reps as possible | 1.0


0000 | 0002 | 'fail:(\\d+).*?fail:(\\d+).*fail:(\\d+)'



cluster 224 stats:
nPatterns: 2.0
nProjects: 2
shortest: Vote_Bord
Features:

1: LIT|a literal character | 17.0


0000 | 0001 | 'Vote_Bord'
0001 | 0001 | '<tr><td bgcolor="#BBBBBB"'



cluster 225 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^restorecon reset (.+) context (.+)->(.+)
Features:

1: LIT|a literal character | 28.0
2: ADD|one-or-more repetition | 3.0
3: ANY|any non-newline char | 3.0
4: CG|a capture group | 3.0
5: STR|start-of-line | 1.0


0000 | 0002 | '^restorecon reset (.+) context (.+)->(.+)'



cluster 226 stats:
nPatterns: 1.0
nProjects: 2
shortest: <span id=short-desc-content>([^<]*)</span>
Features:

1: LIT|a literal character | 36.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0002 | '<span id=short-desc-content>([^<]*)</span>'



cluster 227 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(..[^\(:]+)?[\(:](\d+)[\):]:?\s*(.*)
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 3.0
3: CG|a capture group | 3.0
4: ADD|one-or-more repetition | 2.0
5: CCC|custom character class | 2.0
6: KLE|zero-or-more repetition | 2.0
7: QST|zero-or-one repetition | 2.0
8: DEC|any of: 0123456789 | 1.0
9: NCCC|negated CCC | 1.0
10: STR|start-of-line | 1.0
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '^(..[^\\(:]+)?[\\(:](\\d+)[\\):]:?\\s*(.*)'



cluster 228 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?i)handy(.*)nummer
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OPT|options wrapper | 1.0


0000 | 0002 | '(?i)handy(.*)nummer'
0001 | 0002 | '(?i)pager(.*)nummer'



cluster 229 stats:
nPatterns: 1.0
nProjects: 2
shortest: <td style="text-align: right;">[0-9]{1,}</td>
Features:

1: LIT|a literal character | 38.0
2: CCC|custom character class | 1.0
3: LWB|at least n repetition | 1.0
4: RNG|chars within a range | 1.0


0000 | 0002 | '<td style="text-align: right;">[0-9]{1,}</td>'



cluster 230 stats:
nPatterns: 1.0
nProjects: 2
shortest: [^A-Za-z0-9]?(?:file|source)=(http[^\\'"&]*)
Features:

1: LIT|a literal character | 25.0
2: RNG|chars within a range | 3.0
3: NCCC|negated CCC | 2.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NCG|group without capturing | 1.0
7: OR|logical or | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0002 | '[^A-Za-z0-9]?(?:file|source)=(http[^\\\'"&]*)'



cluster 231 stats:
nPatterns: 1.0
nProjects: 2
shortest: <img class=thumbnail-img (?:.* )?src=(http.*)>
Features:

1: LIT|a literal character | 35.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 1.0
5: NCG|group without capturing | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '<img class=thumbnail-img (?:.* )?src=(http.*)>'



cluster 232 stats:
nPatterns: 2.0
nProjects: 2
shortest: \S+buildout.py
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 0.5
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: NWSP|any non-whitespace | 0.5
6: OR|logical or | 0.5


0000 | 0001 | '\\S+buildout.py'
0001 | 0001 | '(AppKit|Foundation)\\.doc'



cluster 233 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(fails|needs-focus|random|skip|asserts|fuzzy)
Features:

1: LIT|a literal character | 38.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: STR|start-of-line | 1.0


0000 | 0002 | '^(fails|needs-focus|random|skip|asserts|fuzzy)'



cluster 234 stats:
nPatterns: 1.0
nProjects: 2
shortest: <meta name="video_height" content="([0-9]+)" />
Features:

1: LIT|a literal character | 41.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0002 | '<meta name="video_height" content="([0-9]+)" />'



cluster 235 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^/favicon\.ico$
Features:

1: LIT|a literal character | 13.5
2: OPT|options wrapper | 1.0
3: ANY|any non-newline char | 0.5
4: END|end-of-line | 0.5
5: OR|logical or | 0.5
6: STR|start-of-line | 0.5


0000 | 0001 | '^/favicon\\.ico$'
0001 | 0001 | '(?i)incorporated|(?i)inc.'



cluster 236 stats:
nPatterns: 2.0
nProjects: 2
shortest: mFocusedApp(.+)/
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 2.0
3: ADD|one-or-more repetition | 0.5
4: CG|a capture group | 0.5
5: DEC|any of: 0123456789 | 0.5


0000 | 0001 | 'mFocusedApp(.+)/'
0001 | 0001 | 'dhcp.option.ntp_server.\\d'



cluster 237 stats:
nPatterns: 2.0
nProjects: 2
shortest: <script .*?</script>
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: LZY|as few reps as possible | 1.5


0000 | 0001 | '<script .*?</script>'
0001 | 0001 | '<script.*?>.*?</script>'



cluster 238 stats:
nPatterns: 2.0
nProjects: 2
shortest: \bLCOV_EXCL_LINE\b
Features:

1: LIT|a literal character | 17.0
2: WNW|word/non-word boundary | 1.0
3: ADD|one-or-more repetition | 0.5
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '\\bLCOV_EXCL_LINE\\b'
0001 | 0001 | '#define PATCH_LEVEL\\s+1'



cluster 239 stats:
nPatterns: 1.0
nProjects: 2
shortest: \^phoneCallContactId\^=\^urn:ace:(?P<identifier>.*)
Features:

1: LIT|a literal character | 30.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0


0000 | 0002 | '\\^phoneCallContactId\\^=\\^urn:ace:(?P<identifier>.*)'



cluster 240 stats:
nPatterns: 3.0
nProjects: 2
shortest: _R1
Features:

1: LIT|a literal character | 14.0


0000 | 0001 | '_R1'
0001 | 0001 | 'Simple_1Of_1unk_svc'
0002 | 0001 | 'Simple_1Of_1unk_host'



cluster 241 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^<Actions>(.+)$
Features:

1: LIT|a literal character | 18.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: ANY|any non-newline char | 0.5
5: END|end-of-line | 0.5
6: NCCC|negated CCC | 0.5
7: STR|start-of-line | 0.5


0000 | 0001 | '^<Actions>(.+)$'
0001 | 0001 | '<description>([^<]+)</description>'



cluster 242 stats:
nPatterns: 1.0
nProjects: 2
shortest: (\d+ bytes).*?([\d\.]+ s).*?([\d\.]+ [KkMmGgTt])B/s
Features:

1: LIT|a literal character | 22.0
2: ADD|one-or-more repetition | 3.0
3: CCC|custom character class | 3.0
4: CG|a capture group | 3.0
5: DEC|any of: 0123456789 | 3.0
6: ANY|any non-newline char | 2.0
7: KLE|zero-or-more repetition | 2.0
8: LZY|as few reps as possible | 2.0


0000 | 0002 | '(\\d+ bytes).*?([\\d\\.]+ s).*?([\\d\\.]+ [KkMmGgTt])B/s'



cluster 243 stats:
nPatterns: 2.0
nProjects: 2
shortest: /posters/archive/main/.*
Features:

1: LIT|a literal character | 24.5
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0001 | '/posters/archive/main/.*'
0001 | 0001 | 'http://en.wikipedia.org/wiki/'



cluster 244 stats:
nPatterns: 1.0
nProjects: 2
shortest: <div class='lyricbox'><div class='rtMatcher'>.*?</div>(.*?)<!--
Features:

1: LIT|a literal character | 55.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 2.0
5: CG|a capture group | 1.0


0000 | 0002 | "<div class='lyricbox'><div class='rtMatcher'>.*?</div>(.*?)<!--"



cluster 245 stats:
nPatterns: 2.0
nProjects: 2
shortest: (<[^<]*snum=)([^">]+)>
Features:

1: LIT|a literal character | 12.5
2: CG|a capture group | 2.0
3: NCCC|negated CCC | 2.0
4: ADD|one-or-more repetition | 1.5
5: KLE|zero-or-more repetition | 1.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(<[^<]*snum=)([^">]+)>'
0001 | 0001 | '<br />\\s*([^<]+)<br />\\s*([^<]+)<'



cluster 246 stats:
nPatterns: 1.0
nProjects: 2
shortest: # StopWatch ([\w]+) total/cumulative duration ([0-9.]+). Samples: ([0-9]+)
Features:

1: LIT|a literal character | 54.0
2: ADD|one-or-more repetition | 3.0
3: CCC|custom character class | 3.0
4: CG|a capture group | 3.0
5: RNG|chars within a range | 2.0
6: ANY|any non-newline char | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '# StopWatch ([\\w]+) total/cumulative duration ([0-9.]+). Samples: ([0-9]+)'



cluster 247 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^#: (?P<data>.*)
Features:

1: LIT|a literal character | 18.5
2: CG|a capture group | 1.5
3: ANY|any non-newline char | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OR|logical or | 1.0
6: LZY|as few reps as possible | 0.5
7: NCG|group without capturing | 0.5
8: PNG|named capture group | 0.5
9: STR|start-of-line | 0.5


0000 | 0001 | '^#: (?P<data>.*)'
0001 | 0001 | '(?:aka|birth name) (<em>")(.*?)"(<br>|<\\/em>|<\\/td>)'



cluster 248 stats:
nPatterns: 2.0
nProjects: 2
shortest: <span class="c_1">.*?</span>
Features:

1: LIT|a literal character | 33.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: CG|a capture group | 0.5


0000 | 0001 | '<span class="c_1">.*?</span>'
0001 | 0001 | u'<a href="(.*?)" class="historylink">History</a>'



cluster 249 stats:
nPatterns: 2.0
nProjects: 2
shortest: (^0x[\da-f]{8})\s*=\s*([\da-f]{32})
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 3.0
3: DEC|any of: 0123456789 | 2.5
4: SNG|exactly n repetition | 2.5
5: CCC|custom character class | 2.0
6: KLE|zero-or-more repetition | 1.5
7: RNG|chars within a range | 1.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
9: ADD|one-or-more repetition | 0.5
10: STR|start-of-line | 0.5


0000 | 0001 | '(^0x[\\da-f]{8})\\s*=\\s*([\\da-f]{32})'
0001 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'



cluster 250 stats:
nPatterns: 2.0
nProjects: 2
shortest: _(dir|file|path)s?$
Features:

1: LIT|a literal character | 37.5
2: OR|logical or | 1.0
3: CG|a capture group | 0.5
4: END|end-of-line | 0.5
5: QST|zero-or-one repetition | 0.5


0000 | 0001 | '_(dir|file|path)s?$'
0001 | 0001 | 'test_|LookupTable|Types|SystemConfiguration|gannet|Socket|Timings|cs_'



cluster 251 stats:
nPatterns: 2.0
nProjects: 2
shortest: http://www.polleverywhere.com/\w+/\S+
Features:

1: LIT|a literal character | 36.0
2: ADD|one-or-more repetition | 1.5
3: ANY|any non-newline char | 1.0
4: RNG|chars within a range | 1.0
5: CCC|custom character class | 0.5
6: END|end-of-line | 0.5
7: NWSP|any non-whitespace | 0.5
8: STR|start-of-line | 0.5
9: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | 'http://www.polleverywhere.com/\\w+/\\S+'
0001 | 0001 | '^http://node-todobin\\.herokuapp\\.com/list/[a-z0-9]+$'



cluster 252 stats:
nPatterns: 2.0
nProjects: 2
shortest: /changeset(?:/([^/]+)(/.*)?)?$
Features:

1: LIT|a literal character | 25.0
2: QST|zero-or-one repetition | 2.5
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.5
5: NCCC|negated CCC | 1.5
6: NCG|group without capturing | 1.5
7: ANY|any non-newline char | 0.5
8: CCC|custom character class | 0.5
9: DBB|$n\le x \le m$ repetition | 0.5
10: END|end-of-line | 0.5
11: KLE|zero-or-more repetition | 0.5
12: OPT|options wrapper | 0.5
13: RNG|chars within a range | 0.5


0000 | 0001 | '/changeset(?:/([^/]+)(/.*)?)?$'
0001 | 0001 | '(?i)(?:https?://)?(?:www\\.)?dailymotion\\.[a-z]{2,3}/video/([^_/]+)_([^/]+)'



cluster 253 stats:
nPatterns: 1.0
nProjects: 2
shortest: ((final|abstract)[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?class[ \t]+\w+((implements|extends)\w+)?
Features:

1: LIT|a literal character | 71.0
2: CG|a capture group | 7.0
3: ADD|one-or-more repetition | 6.0
4: CCC|custom character class | 4.0
5: QST|zero-or-one repetition | 4.0
6: OR|logical or | 3.0
7: WRD|[a-zA-Z0-9\_] | 2.0


0000 | 0002 | '((final|abstract)[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?class[ \t]+\\w+((implements|extends)\\w+)?'



cluster 254 stats:
nPatterns: 2.0
nProjects: 2
shortest: \?Page=(\d+)
Features:

1: LIT|a literal character | 9.5
2: ADD|one-or-more repetition | 4.0
3: DEC|any of: 0123456789 | 3.5
4: NCG|group without capturing | 2.0
5: PNG|named capture group | 1.5
6: CCC|custom character class | 1.0
7: CG|a capture group | 0.5
8: END|end-of-line | 0.5
9: KLE|zero-or-more repetition | 0.5
10: OR|logical or | 0.5
11: QST|zero-or-one repetition | 0.5
12: RNG|chars within a range | 0.5
13: STR|start-of-line | 0.5


0000 | 0001 | '\\?Page=(\\d+)'
0001 | 0001 | '^v(?P<ver>\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?)-(?P<commits>\\d+)-g(?P<sha>[\\da-f]+)$'



cluster 255 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\d+) seconds.*?"
Features:

1: LIT|a literal character | 68.5
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 3.5
4: LZY|as few reps as possible | 3.5
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds.*?"'
0001 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds. Killing!"'



cluster 256 stats:
nPatterns: 3.0
nProjects: 2
shortest: <pre><a name="foo-1">
Features:

1: LIT|a literal character | 55.666666666666664
2: KLE|zero-or-more repetition | 0.6666666666666666
3: NCG|group without capturing | 0.6666666666666666
4: OR|logical or | 0.6666666666666666
5: ANY|any non-newline char | 0.3333333333333333
6: CG|a capture group | 0.3333333333333333
7: LZY|as few reps as possible | 0.3333333333333333
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0001 | '<pre><a name="foo-1">'
0001 | 0001 | '<pre><a name="foo-5">'
0002 | 0001 | '<TD>(?:<font face="arial,helvetica" size=2>|<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>)\\s*(.*?)(?:</font>|</B></font></FONT>)</TD>'



cluster 257 stats:
nPatterns: 1.0
nProjects: 1
shortest: .git
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0


0000 | 0001 | '.git'



cluster 258 stats:
nPatterns: 1.0
nProjects: 1
shortest: [-:]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[-:]'



cluster 259 stats:
nPatterns: 1.0
nProjects: 1
shortest: [^']+
Features:

1: ADD|one-or-more repetition | 1.0
2: LIT|a literal character | 1.0
3: NCCC|negated CCC | 1.0


0000 | 0001 | "[^']+"



cluster 260 stats:
nPatterns: 1.0
nProjects: 1
shortest: %(..)
Features:

1: ANY|any non-newline char | 2.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0


0000 | 0001 | '%(..)'



cluster 261 stats:
nPatterns: 1.0
nProjects: 1
shortest: [().]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[().]'



cluster 262 stats:
nPatterns: 1.0
nProjects: 1
shortest: [*,]+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0


0000 | 0001 | '[*,]+'



cluster 263 stats:
nPatterns: 1.0
nProjects: 1
shortest: \d*$
Features:

1: DEC|any of: 0123456789 | 1.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '\\d*$'



cluster 264 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^enum
Features:

1: LIT|a literal character | 4.0
2: STR|start-of-line | 1.0


0000 | 0001 | '^enum'



cluster 265 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([|&])
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0


0000 | 0001 | '([|&])'



cluster 266 stats:
nPatterns: 1.0
nProjects: 1
shortest: <p><hr
Features:

1: LIT|a literal character | 6.0


0000 | 0001 | '<p><hr'



cluster 267 stats:
nPatterns: 1.0
nProjects: 1
shortest: [;,/-]
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[;,/-]'



cluster 268 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^.*\(
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^.*\\('



cluster 269 stats:
nPatterns: 1.0
nProjects: 1
shortest: pseudo
Features:

1: LIT|a literal character | 6.0


0000 | 0001 | 'pseudo'



cluster 270 stats:
nPatterns: 1.0
nProjects: 1
shortest: ~[^01]
Features:

1: LIT|a literal character | 3.0
2: NCCC|negated CCC | 1.0


0000 | 0001 | '~[^01]'



cluster 271 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*[\/]
Features:

1: ANY|any non-newline char | 1.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LIT|a literal character | 1.0


0000 | 0001 | '.*[\\/]'



cluster 272 stats:
nPatterns: 1.0
nProjects: 1
shortest: [\-: ]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[\\-: ]'



cluster 273 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.mar$
Features:

1: LIT|a literal character | 4.0
2: END|end-of-line | 1.0


0000 | 0001 | '\\.mar$'



cluster 274 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.php$
Features:

1: LIT|a literal character | 4.0
2: END|end-of-line | 1.0


0000 | 0001 | '\\.php$'



cluster 275 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s|\(
Features:

1: LIT|a literal character | 1.0
2: OR|logical or | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s|\\('



cluster 276 stats:
nPatterns: 1.0
nProjects: 1
shortest: \w+\s
Features:

1: ADD|one-or-more repetition | 1.0
2: WRD|[a-zA-Z0-9\_] | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\w+\\s'



cluster 277 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\?+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^(\\?+)'



cluster 278 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\.py)$
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0


0000 | 0001 | '(\\.py)$'



cluster 279 stats:
nPatterns: 1.0
nProjects: 1
shortest: .esour.*
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '.esour.*'



cluster 280 stats:
nPatterns: 1.0
nProjects: 1
shortest: [\s,;:]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '[\\s,;:]'



cluster 281 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^results
Features:

1: LIT|a literal character | 7.0
2: STR|start-of-line | 1.0


0000 | 0001 | '^results'



cluster 282 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.*) [^ ]
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '(.*) [^ ]'



cluster 283 stats:
nPatterns: 1.0
nProjects: 1
shortest: \ //(.*)
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '\\ //(.*)'



cluster 284 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*[#;]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^\\s*[#;]'



cluster 285 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\{.+\}
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^\\{.+\\}'



cluster 286 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^dim4\s+
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^dim4\\s+'



cluster 287 stats:
nPatterns: 1.0
nProjects: 1
shortest: "([^ ]+?)"
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '"([^ ]+?)"'



cluster 288 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([@+])?.*
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: QST|zero-or-one repetition | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^([@+])?.*'



cluster 289 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[\w._-]+
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: STR|start-of-line | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^[\\w._-]+'



cluster 290 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\(.*\)$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^\\(.*\\)$'



cluster 291 stats:
nPatterns: 1.0
nProjects: 1
shortest: wl_apsta.*
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'wl_apsta.*'



cluster 292 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\w._-]+)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '([\\w._-]+)'



cluster 293 stats:
nPatterns: 1.0
nProjects: 1
shortest: /robots.txt
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 1.0


0000 | 0001 | '/robots.txt'



cluster 294 stats:
nPatterns: 1.0
nProjects: 1
shortest: [ \*]*(.+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '[ \\*]*(.+)'



cluster 295 stats:
nPatterns: 1.0
nProjects: 1
shortest: [\s.,;_-]+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '[\\s.,;_-]+'



cluster 296 stats:
nPatterns: 1.0
nProjects: 1
shortest: \A( *\n)+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '\\A( *\\n)+'



cluster 297 stats:
nPatterns: 1.0
nProjects: 1
shortest: \nEl Torito
Features:

1: LIT|a literal character | 10.0


0000 | 0001 | '\nEl Torito'



cluster 298 stats:
nPatterns: 1.0
nProjects: 1
shortest: tt(\d+)/$
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0


0000 | 0001 | u'tt(\\d+)/$'



cluster 299 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([$]{[^}]*})
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '([$]{[^}]*})'



cluster 300 stats:
nPatterns: 1.0
nProjects: 1
shortest: :.*\.(\d+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0001 | ':.*\\.(\\d+)'



cluster 301 stats:
nPatterns: 1.0
nProjects: 1
shortest: KEYBOARDTYPE
Features:

1: LIT|a literal character | 12.0


0000 | 0001 | 'KEYBOARDTYPE'



cluster 302 stats:
nPatterns: 1.0
nProjects: 1
shortest: \b[\-_]\b
Features:

1: LIT|a literal character | 2.0
2: WNW|word/non-word boundary | 2.0
3: CCC|custom character class | 1.0


0000 | 0001 | '\\b[\\-_]\\b'



cluster 303 stats:
nPatterns: 1.0
nProjects: 1
shortest: \{(\w+)\}
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '\\{(\\w+)\\}'



cluster 304 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\[(.*)\]$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^\\[(.*)\\]$'



cluster 305 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?i).+\.nfo$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: OPT|options wrapper | 1.0


0000 | 0001 | '(?i).+\\.nfo$'



cluster 306 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\w+://)(.+)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(\\w+://)(.+)'



cluster 307 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*?Opteron\b
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: WNW|word/non-word boundary | 1.0


0000 | 0001 | '.*?Opteron\\b'



cluster 308 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*?\bsse2\b
Features:

1: LIT|a literal character | 4.0
2: WNW|word/non-word boundary | 2.0
3: ANY|any non-newline char | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '.*?\\bsse2\\b'



cluster 309 stats:
nPatterns: 1.0
nProjects: 1
shortest: /(?<=,)(?! )/
Features:

1: LIT|a literal character | 4.0
2: LKB|matching sequence precedes | 1.0
3: NLKA|sequence doesn't follow  | 1.0


0000 | 0001 | '/(?<=,)(?! )/'



cluster 310 stats:
nPatterns: 1.0
nProjects: 1
shortest: [,]?([^,=]+)=
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: NCCC|negated CCC | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0001 | '[,]?([^,=]+)='



cluster 311 stats:
nPatterns: 1.0
nProjects: 1
shortest: [^\w\s@+.-]
Features:

1: LIT|a literal character | 4.0
2: NCCC|negated CCC | 1.0
3: WRD|[a-zA-Z0-9\_] | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '[^\\w\\s@+.-]'



cluster 312 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([#*]+)\s.*
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0
7: STR|start-of-line | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^([#*]+)\\s.*'



cluster 313 stats:
nPatterns: 1.0
nProjects: 1
shortest: #\{([^}]*)\}
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '#\\{([^}]*)\\}'



cluster 314 stats:
nPatterns: 1.0
nProjects: 1
shortest: Model:\s+(.+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'Model:\\s+(.+)'



cluster 315 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.(anno|txt)$
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: OR|logical or | 1.0


0000 | 0001 | '\\.(anno|txt)$'



cluster 316 stats:
nPatterns: 1.0
nProjects: 1
shortest: \^headers\^$
Features:

1: LIT|a literal character | 9.0
2: END|end-of-line | 1.0


0000 | 0001 | '\\^headers\\^$'



cluster 317 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*!important
Features:

1: LIT|a literal character | 10.0
2: KLE|zero-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s*!important'



cluster 318 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^.()]+\.){5}
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: SNG|exactly n repetition | 1.0


0000 | 0001 | '([^.()]+\\.){5}'



cluster 319 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^\.])+\..*$
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0


0000 | 0001 | '([^\\.])+\\..*$'



cluster 320 stats:
nPatterns: 1.0
nProjects: 1
shortest: <(![^-\[]|\?)
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 1.0
3: NCCC|negated CCC | 1.0
4: OR|logical or | 1.0


0000 | 0001 | '<(![^-\\[]|\\?)'



cluster 321 stats:
nPatterns: 1.0
nProjects: 1
shortest: <div.*?>(.*?)</
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 2.0
5: CG|a capture group | 1.0


0000 | 0001 | '<div.*?>(.*?)</'



cluster 322 stats:
nPatterns: 1.0
nProjects: 1
shortest: \w+\_steps.rb
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '\\w+\\_steps.rb'



cluster 323 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(<[^>]*/>)\s*
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^(<[^>]*/>)\\s*'



cluster 324 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([^:]+):.(.*)$
Features:

1: ANY|any non-newline char | 2.0
2: CG|a capture group | 2.0
3: LIT|a literal character | 2.0
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^([^:]+):.(.*)$'



cluster 325 stats:
nPatterns: 1.0
nProjects: 1
shortest: '\.\./([^']*)'
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | "'\\.\\./([^']*)'"



cluster 326 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*video:(\d+).*
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '.*video:(\\d+).*'



cluster 327 stats:
nPatterns: 1.0
nProjects: 1
shortest: \$\((\w+?)\)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '\\$\\((\\w+?)\\)'



cluster 328 stats:
nPatterns: 1.0
nProjects: 1
shortest: class (\w+?)\(
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'class (\\w+?)\\('



cluster 329 stats:
nPatterns: 1.0
nProjects: 1
shortest: install_dir .+\n
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0


0000 | 0001 | 'install_dir .+\n'



cluster 330 stats:
nPatterns: 1.0
nProjects: 1
shortest: openssl-([^<]+)<
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | 'openssl-([^<]+)<'



cluster 331 stats:
nPatterns: 1.0
nProjects: 1
shortest: protected(.*)\$
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'protected(.*)\\$'



cluster 332 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.+):(\d{1,5})$
Features:

1: CG|a capture group | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: DBB|$n\le x \le m$ repetition | 1.0
5: DEC|any of: 0123456789 | 1.0
6: END|end-of-line | 1.0
7: LIT|a literal character | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^(.+):(\\d{1,5})$'



cluster 333 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?i)\b(D)('ye)\b
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 2.0
3: WNW|word/non-word boundary | 2.0
4: OPT|options wrapper | 1.0


0000 | 0001 | "(?i)\\b(D)('ye)\\b"



cluster 334 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.+):(\d+): (.+)$
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 3.0
3: LIT|a literal character | 3.0
4: ANY|any non-newline char | 2.0
5: DEC|any of: 0123456789 | 1.0
6: END|end-of-line | 1.0


0000 | 0001 | '(.+):(\\d+): (.+)$'



cluster 335 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\d.]+)([^\s]+)
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: CCC|custom character class | 1.0
4: DEC|any of: 0123456789 | 1.0
5: LIT|a literal character | 1.0
6: NCCC|negated CCC | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '([\\d.]+)([^\\s]+)'



cluster 336 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*(Rep|Sen). (.+)$
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 3.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: OR|logical or | 1.0


0000 | 0001 | '.*(Rep|Sen). (.+)$'



cluster 337 stats:
nPatterns: 1.0
nProjects: 1
shortest: Passed all 0 tests
Features:

1: LIT|a literal character | 18.0


0000 | 0001 | 'Passed all 0 tests'



cluster 338 stats:
nPatterns: 1.0
nProjects: 1
shortest: Underfull.*badness
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'Underfull.*badness'



cluster 339 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^:.*[MAD]\s+(.+)$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 2.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^:.*[MAD]\\s+(.+)$'



cluster 340 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\S+)([ \t]*?)(.*)
Features:

1: CG|a capture group | 3.0
2: KLE|zero-or-more repetition | 2.0
3: LIT|a literal character | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: LZY|as few reps as possible | 1.0
8: NWSP|any non-whitespace | 1.0


0000 | 0001 | '(\\S+)([ \t]*?)(.*)'



cluster 341 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*/vote_history.pdf
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '.*/vote_history.pdf'



cluster 342 stats:
nPatterns: 1.0
nProjects: 1
shortest: [- \t:;,!+/\"\'`]+
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0


0000 | 0001 | '[- \t:;,!+/\\"\'`]+'



cluster 343 stats:
nPatterns: 1.0
nProjects: 1
shortest: \d+\.\.$|\.{4}$
Features:

1: LIT|a literal character | 3.0
2: END|end-of-line | 2.0
3: ADD|one-or-more repetition | 1.0
4: DEC|any of: 0123456789 | 1.0
5: OR|logical or | 1.0
6: SNG|exactly n repetition | 1.0


0000 | 0001 | '\\d+\\.\\.$|\\.{4}$'



cluster 344 stats:
nPatterns: 1.0
nProjects: 1
shortest: gene_id \"(.*?)\"
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | 'gene_id \\"(.*?)\\"'



cluster 345 stats:
nPatterns: 1.0
nProjects: 1
shortest: power_(.*).template
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'power_(.*).template'



cluster 346 stats:
nPatterns: 1.0
nProjects: 1
shortest: typedef (\S+) (.*)
Features:

1: LIT|a literal character | 9.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NWSP|any non-whitespace | 1.0


0000 | 0001 | 'typedef (\\S+) (.*)'



cluster 347 stats:
nPatterns: 1.0
nProjects: 1
shortest: (string.)|(comment.)
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: OR|logical or | 1.0


0000 | 0001 | '(string.)|(comment.)'



cluster 348 stats:
nPatterns: 1.0
nProjects: 1
shortest: <code>([^<]+)</code>
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '<code>([^<]+)</code>'



cluster 349 stats:
nPatterns: 1.0
nProjects: 1
shortest: Connection timed out
Features:

1: LIT|a literal character | 20.0


0000 | 0001 | 'Connection timed out'



cluster 350 stats:
nPatterns: 1.0
nProjects: 1
shortest: User Serial:([0-9]+)
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0001 | 'User Serial:([0-9]+)'



cluster 351 stats:
nPatterns: 1.0
nProjects: 1
shortest: [?\&|!{}+~^()":*-]+
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0


0000 | 0001 | '[?\\&|!{}+~^()":*-]+'



cluster 352 stats:
nPatterns: 1.0
nProjects: 1
shortest: data3_(\d)_\d+.txt
Features:

1: LIT|a literal character | 10.0
2: DEC|any of: 0123456789 | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0


0000 | 0001 | 'data3_(\\d)_\\d+.txt'



cluster 353 stats:
nPatterns: 1.0
nProjects: 1
shortest: filename: \s*(.*)\n
Features:

1: LIT|a literal character | 11.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'filename: \\s*(.*)\n'



cluster 354 stats:
nPatterns: 1.0
nProjects: 1
shortest: [.:,\s!?+=\(\)/-]+
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '[.:,\\s!?+=\\(\\)/-]+'



cluster 355 stats:
nPatterns: 1.0
nProjects: 1
shortest: \(applications/\(.*
Features:

1: LIT|a literal character | 15.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '\\(applications/\\(.*'



cluster 356 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^dhcp\.pool\.start$
Features:

1: LIT|a literal character | 15.0
2: END|end-of-line | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^dhcp\\.pool\\.start$'



cluster 357 stats:
nPatterns: 1.0
nProjects: 1
shortest: /(?P<tenant_id>.*?)/.*
Features:

1: ANY|any non-newline char | 2.0
2: KLE|zero-or-more repetition | 2.0
3: LIT|a literal character | 2.0
4: LZY|as few reps as possible | 1.0
5: PNG|named capture group | 1.0


0000 | 0001 | '/(?P<tenant_id>.*?)/.*'



cluster 358 stats:
nPatterns: 1.0
nProjects: 1
shortest: /pygments/(\w+)\.css
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '/pygments/(\\w+)\\.css'



cluster 359 stats:
nPatterns: 1.0
nProjects: 1
shortest: <studio>(.*?)</studio>
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '<studio>(.*?)</studio>'



cluster 360 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([^:]+):\s+(.+)\s*$
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 2.0
3: LIT|a literal character | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NCCC|negated CCC | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^([^:]+):\\s+(.+)\\s*$'



cluster 361 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^1900|^1[2-9]\d\d976
Features:

1: LIT|a literal character | 10.0
2: DEC|any of: 0123456789 | 2.0
3: STR|start-of-line | 2.0
4: CCC|custom character class | 1.0
5: OR|logical or | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | '^1900|^1[2-9]\\d\\d976'



cluster 362 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^dhcp\.scope\.start$
Features:

1: LIT|a literal character | 16.0
2: END|end-of-line | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^dhcp\\.scope\\.start$'



cluster 363 stats:
nPatterns: 1.0
nProjects: 1
shortest: action="[\w\.\-/]*"
Features:

1: LIT|a literal character | 12.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'action="[\\w\\.\\-/]*"'



cluster 364 stats:
nPatterns: 1.0
nProjects: 1
shortest: exampleLocalVar.*abcde
Features:

1: LIT|a literal character | 20.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'exampleLocalVar.*abcde'



cluster 365 stats:
nPatterns: 1.0
nProjects: 1
shortest: zc.buildout[.]egg-link
Features:

1: LIT|a literal character | 19.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0


0000 | 0001 | 'zc.buildout[.]egg-link'



cluster 366 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([0-9]+\s+\-\s+)(.+)
Features:

1: ADD|one-or-more repetition | 4.0
2: LIT|a literal character | 3.0
3: CG|a capture group | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: RNG|chars within a range | 1.0


0000 | 0001 | '([0-9]+\\s+\\-\\s+)(.+)'



cluster 367 stats:
nPatterns: 1.0
nProjects: 1
shortest: Ignore tracebacks: (.*)
Features:

1: LIT|a literal character | 19.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'Ignore tracebacks: (.*)'



cluster 368 stats:
nPatterns: 1.0
nProjects: 1
shortest: \$[0-9]+\,?\.?[0-9]*
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 2.0
3: QST|zero-or-one repetition | 2.0
4: RNG|chars within a range | 2.0
5: ADD|one-or-more repetition | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '\\$[0-9]+\\,?\\.?[0-9]*'



cluster 369 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*libssl.so.0.9.8\s*
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0001 | '\\s*libssl.so.0.9.8\\s*'



cluster 370 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([^ ]+) = ([0-9\.]+)$
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: CCC|custom character class | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0
7: RNG|chars within a range | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^([^ ]+) = ([0-9\\.]+)$'



cluster 371 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^translator[-_]credits$
Features:

1: LIT|a literal character | 19.0
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^translator[-_]credits$'



cluster 372 stats:
nPatterns: 1.0
nProjects: 1
shortest: (".*?")|(\'.*?\')|(\s+)
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 3.0
3: ANY|any non-newline char | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 2.0
6: ADD|one-or-more repetition | 1.0
7: OR|logical or | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'



cluster 373 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(join|order)\((.*)\)$
Features:

1: LIT|a literal character | 11.0
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^(join|order)\\((.*)\\)$'



cluster 374 stats:
nPatterns: 1.0
nProjects: 1
shortest: affils.ast.\d{8}_\d{4}
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 2.0
3: DEC|any of: 0123456789 | 2.0
4: SNG|exactly n repetition | 2.0


0000 | 0001 | 'affils.ast.\\d{8}_\\d{4}'



cluster 375 stats:
nPatterns: 1.0
nProjects: 1
shortest: (module|def|class) (\w*)
Features:

1: LIT|a literal character | 15.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 1.0
4: OR|logical or | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(module|def|class) (\\w*)'



cluster 376 stats:
nPatterns: 1.0
nProjects: 1
shortest: <([\w ]+(,\s*[\w]+)+)>
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 3.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: WRD|[a-zA-Z0-9\_] | 2.0
6: KLE|zero-or-more repetition | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '<([\\w ]+(,\\s*[\\w]+)+)>'



cluster 377 stats:
nPatterns: 1.0
nProjects: 1
shortest: <p>\.notes:\s?(.*?)</p>
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: QST|zero-or-one repetition | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '<p>\\.notes:\\s?(.*?)</p>'



cluster 378 stats:
nPatterns: 1.0
nProjects: 1
shortest: =(.*?)SlAsHcOdEsTrInG(.*)
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '=(.*?)SlAsHcOdEsTrInG(.*)'



cluster 379 stats:
nPatterns: 1.0
nProjects: 1
shortest: \{\{(?P<comm>.+?)\}\}
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: LZY|as few reps as possible | 1.0
5: PNG|named capture group | 1.0


0000 | 0001 | '\\{\\{(?P<comm>.+?)\\}\\}'



cluster 380 stats:
nPatterns: 1.0
nProjects: 1
shortest: mk_individual_id_t=(\d+)
Features:

1: LIT|a literal character | 19.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'mk_individual_id_t=(\\d+)'



cluster 381 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[([^:]+):([^|\]]+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: NCCC|negated CCC | 2.0


0000 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'



cluster 382 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?<=nm|tt|ch)([0-9]{7})\b
Features:

1: LIT|a literal character | 8.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: LKB|matching sequence precedes | 1.0
5: OR|logical or | 1.0
6: RNG|chars within a range | 1.0
7: SNG|exactly n repetition | 1.0
8: WNW|word/non-word boundary | 1.0


0000 | 0001 | '(?<=nm|tt|ch)([0-9]{7})\\b'



cluster 383 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\S+[.]savespace[(].*[)])
Features:

1: LIT|a literal character | 12.0
2: CCC|custom character class | 3.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NWSP|any non-whitespace | 1.0


0000 | 0001 | '(\\S+[.]savespace[(].*[)])'



cluster 384 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\s*configuration:)(.*)\n
Features:

1: LIT|a literal character | 15.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ANY|any non-newline char | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(\\s*configuration:)(.*)\n'



cluster 385 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*bitrate: (.+) (?:kb/s).*
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NCG|group without capturing | 1.0


0000 | 0001 | '.*bitrate: (.+) (?:kb/s).*'



cluster 386 stats:
nPatterns: 1.0
nProjects: 1
shortest: [$_]?(?:set|add)($|[A-Z_])
Features:

1: LIT|a literal character | 11.0
2: CCC|custom character class | 2.0
3: OR|logical or | 2.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: NCG|group without capturing | 1.0
7: QST|zero-or-one repetition | 1.0
8: RNG|chars within a range | 1.0


0000 | 0001 | '[$_]?(?:set|add)($|[A-Z_])'



cluster 387 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^nic\.\d+\.(.*)\.\d+$
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: DEC|any of: 0123456789 | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^nic\\.\\d+\\.(.*)\\.\\d+$'



cluster 388 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^\-\.]*)-([\d+.\-]+)$
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NCCC|negated CCC | 1.0


0000 | 0001 | '([^\\-\\.]*)-([\\d+.\\-]+)$'



cluster 389 stats:
nPatterns: 1.0
nProjects: 1
shortest: <br>(\.\.\.|   ).+?</li>
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: LZY|as few reps as possible | 1.0
6: OR|logical or | 1.0


0000 | 0001 | '<br>(\\.\\.\\.|   ).+?</li>'



cluster 390 stats:
nPatterns: 1.0
nProjects: 1
shortest: <s(?: [^>]*){0,1}>(.*?)</s>
Features:

1: LIT|a literal character | 9.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: DBB|$n\le x \le m$ repetition | 1.0
6: LZY|as few reps as possible | 1.0
7: NCCC|negated CCC | 1.0
8: NCG|group without capturing | 1.0


0000 | 0001 | '<s(?: [^>]*){0,1}>(.*?)</s>'



cluster 391 stats:
nPatterns: 1.0
nProjects: 1
shortest: Starting glance-[a-z]+ with
Features:

1: LIT|a literal character | 23.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: RNG|chars within a range | 1.0


0000 | 0001 | 'Starting glance-[a-z]+ with'



cluster 392 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.(js|jsm|java)(?:\.in)?$
Features:

1: LIT|a literal character | 13.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: NCG|group without capturing | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0001 | '\\.(js|jsm|java)(?:\\.in)?$'



cluster 393 stats:
nPatterns: 1.0
nProjects: 1
shortest: billtype=\w\w&billno=\d+
Features:

1: LIT|a literal character | 17.0
2: WRD|[a-zA-Z0-9\_] | 2.0
3: ADD|one-or-more repetition | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'billtype=\\w\\w&billno=\\d+'



cluster 394 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?<![\w])(\d+)L(?![\w])
Features:

1: CCC|custom character class | 2.0
2: WRD|[a-zA-Z0-9\_] | 2.0
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: LIT|a literal character | 1.0
7: NLKA|sequence doesn't follow  | 1.0
8: NLKB|sequence doesn't precede | 1.0


0000 | 0001 | u'(?<![\\w])(\\d+)L(?![\\w])'



cluster 395 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.*:.*/jobmanager-.*?)-(.*)
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 4.0
4: CG|a capture group | 2.0
5: LZY|as few reps as possible | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^(.*:.*/jobmanager-.*?)-(.*)'



cluster 396 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([^;]+);([^;]+):(\d{1,5})$
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: DBB|$n\le x \le m$ repetition | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^([^;]+);([^;]+):(\\d{1,5})$'



cluster 397 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^nic\.(\d+)\.ipv4_address
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^nic\\.(\\d+)\\.ipv4_address'



cluster 398 stats:
nPatterns: 1.0
nProjects: 1
shortest: __version__\s*=\s*(.+?\n)
Features:

1: LIT|a literal character | 13.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: LZY|as few reps as possible | 1.0


0000 | 0001 | '__version__\\s*=\\s*(.+?\\n)'



cluster 399 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.+?): .*?(\(attached\))?$
Features:

1: LIT|a literal character | 12.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: LZY|as few reps as possible | 2.0
5: ADD|one-or-more repetition | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^(.+?): .*?(\\(attached\\))?$'



cluster 400 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\s)*File "(.*?)", line \d.+
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: ADD|one-or-more repetition | 1.0
6: DEC|any of: 0123456789 | 1.0
7: LZY|as few reps as possible | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(\\s)*File "(.*?)", line \\d.+'



cluster 401 stats:
nPatterns: 1.0
nProjects: 1
shortest: AC_INIT[(][^,]*,\s+([^)]*)[)]
Features:

1: LIT|a literal character | 12.0
2: CCC|custom character class | 2.0
3: KLE|zero-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'AC_INIT[(][^,]*,\\s+([^)]*)[)]'



cluster 402 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^diff --git a/(\S+) b/(\S+)$
Features:

1: LIT|a literal character | 16.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: NWSP|any non-whitespace | 2.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^diff --git a/(\\S+) b/(\\S+)$'



cluster 403 stats:
nPatterns: 1.0
nProjects: 1
shortest: wx_major_version_number=(\d+)
Features:

1: LIT|a literal character | 24.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'wx_major_version_number=(\\d+)'



cluster 404 stats:
nPatterns: 1.0
nProjects: 1
shortest: (src|href)\=([\\'"]?)/?files/
Features:

1: LIT|a literal character | 18.0
2: CG|a capture group | 2.0
3: QST|zero-or-one repetition | 2.0
4: CCC|custom character class | 1.0
5: OR|logical or | 1.0


0000 | 0001 | '(src|href)\\=([\\\'"]?)/?files/'



cluster 405 stats:
nPatterns: 1.0
nProjects: 1
shortest: <\s*script.*?<\s*/script\s*>
Features:

1: LIT|a literal character | 16.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: ANY|any non-newline char | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '<\\s*script.*?<\\s*/script\\s*>'



cluster 406 stats:
nPatterns: 1.0
nProjects: 1
shortest: (<h5><a name="?akas"?.*</table>)
Features:

1: LIT|a literal character | 26.0
2: QST|zero-or-one repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '(<h5><a name="?akas"?.*</table>)'



cluster 407 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.+)[.](proto|impl|init|cleanup)$
Features:

1: LIT|a literal character | 21.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: END|end-of-line | 1.0
7: OR|logical or | 1.0


0000 | 0001 | '(.+)[.](proto|impl|init|cleanup)$'



cluster 408 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^!]+)(?:!([^+-]+)?([+-]\S+)?)?
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: QST|zero-or-one repetition | 3.0
5: NCCC|negated CCC | 2.0
6: CCC|custom character class | 1.0
7: NCG|group without capturing | 1.0
8: NWSP|any non-whitespace | 1.0


0000 | 0001 | '([^!]+)(?:!([^+-]+)?([+-]\\S+)?)?'



cluster 409 stats:
nPatterns: 1.0
nProjects: 1
shortest: <table id="emuleFile">.*?</table>
Features:

1: LIT|a literal character | 30.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0


0000 | 0001 | '<table id="emuleFile">.*?</table>'



cluster 410 stats:
nPatterns: 1.0
nProjects: 1
shortest: <viewer version_patch="(\d+)" />
Features:

1: LIT|a literal character | 27.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '<viewer version_patch="(\\d+)" />'



cluster 411 stats:
nPatterns: 1.0
nProjects: 1
shortest: \${project_path:(?P<file>[^}]+)}
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: PNG|named capture group | 1.0


0000 | 0001 | '\\${project_path:(?P<file>[^}]+)}'



cluster 412 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[([\.0-9a-f:]+)\](?::(\d+))?
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: RNG|chars within a range | 2.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0
7: NCG|group without capturing | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0001 | '\\[([\\.0-9a-f:]+)\\](?::(\\d+))?'



cluster 413 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(In \[\d+\]: |\s*\.{3,}: ?)
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: KLE|zero-or-more repetition | 1.0
6: LWB|at least n repetition | 1.0
7: OR|logical or | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'



cluster 414 stats:
nPatterns: 1.0
nProjects: 1
shortest: :ext:([^@]+@)?(?P<hostname>[^:/]+)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 2.0
3: NCCC|negated CCC | 2.0
4: CG|a capture group | 1.0
5: PNG|named capture group | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0001 | ':ext:([^@]+@)?(?P<hostname>[^:/]+)'



cluster 415 stats:
nPatterns: 1.0
nProjects: 1
shortest: <img.*?src="(?!http://)(.*?)".*/?>
Features:

1: LIT|a literal character | 19.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 3.0
4: LZY|as few reps as possible | 2.0
5: CG|a capture group | 1.0
6: NLKA|sequence doesn't follow  | 1.0
7: QST|zero-or-one repetition | 1.0


0000 | 0001 | '<img.*?src="(?!http://)(.*?)".*/?>'



cluster 416 stats:
nPatterns: 2.0
nProjects: 1
shortest: [#][\dA-F]{3}
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 2.0
3: DEC|any of: 0123456789 | 1.0
4: RNG|chars within a range | 1.0
5: SNG|exactly n repetition | 1.0


0000 | 0001 | '[#][\\dA-F]{3}'
0001 | 0001 | '[#][\\dA-F]{6}'



cluster 417 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^cert=(?P<nickname>[0-9a-zA-Z_ ]+)
Features:

1: LIT|a literal character | 13.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: PNG|named capture group | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^cert=(?P<nickname>[0-9a-zA-Z_ ]+)'



cluster 418 stats:
nPatterns: 1.0
nProjects: 1
shortest: http://([^/:]+)(?::(\d+))?(/.*)?$
Features:

1: LIT|a literal character | 11.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: QST|zero-or-one repetition | 2.0
5: ANY|any non-newline char | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 1.0
8: KLE|zero-or-more repetition | 1.0
9: NCCC|negated CCC | 1.0
10: NCG|group without capturing | 1.0


0000 | 0001 | 'http://([^/:]+)(?::(\\d+))?(/.*)?$'



cluster 419 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\s*)([A-F0-9]*) /\* ([^ ]+) \*/
Features:

1: LIT|a literal character | 12.0
2: CG|a capture group | 3.0
3: KLE|zero-or-more repetition | 2.0
4: RNG|chars within a range | 2.0
5: ADD|one-or-more repetition | 1.0
6: CCC|custom character class | 1.0
7: NCCC|negated CCC | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(\\s*)([A-F0-9]*) /\\* ([^ ]+) \\*/'



cluster 420 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\#!\s?([^\s]+)(?:\s([^\s]+))?
Features:

1: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: LIT|a literal character | 2.0
5: NCCC|negated CCC | 2.0
6: QST|zero-or-one repetition | 2.0
7: NCG|group without capturing | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^\\#!\\s?([^\\s]+)(?:\\s([^\\s]+))?'



cluster 421 stats:
nPatterns: 2.0
nProjects: 1
shortest: diff --git a
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 0.5
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: LZY|as few reps as possible | 0.5


0000 | 0001 | 'diff --git a'
0001 | 0001 | '.+?(diff --git a)'



cluster 422 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*DATS_FREE_DISKS\s*=(.*\S)\s*$
Features:

1: LIT|a literal character | 16.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: NWSP|any non-whitespace | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*DATS_FREE_DISKS\\s*=(.*\\S)\\s*$'



cluster 423 stats:
nPatterns: 1.0
nProjects: 1
shortest: <p>Raw output: <a href="(.*)">(.*)</a>
Features:

1: LIT|a literal character | 30.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0


0000 | 0001 | '<p>Raw output: <a href="(.*)">(.*)</a>'



cluster 424 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\t*INFO\t----\t----(.*)\t[^\t]*$
Features:

1: LIT|a literal character | 17.0
2: KLE|zero-or-more repetition | 3.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^\\t*INFO\\t----\\t----(.*)\\t[^\\t]*$'



cluster 425 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*SELECT\s+.+?\s+FROM\s+[']?(\w+)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 5.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: KLE|zero-or-more repetition | 1.0
8: LZY|as few reps as possible | 1.0
9: QST|zero-or-one repetition | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | "\\s*SELECT\\s+.+?\\s+FROM\\s+[']?(\\w+)"



cluster 426 stats:
nPatterns: 1.0
nProjects: 1
shortest: (-devel)|(-debuginfo)|(-static)|(-libs)
Features:

1: LIT|a literal character | 28.0
2: CG|a capture group | 4.0
3: OR|logical or | 1.0


0000 | 0001 | '(-devel)|(-debuginfo)|(-static)|(-libs)'



cluster 427 stats:
nPatterns: 1.0
nProjects: 1
shortest: <em class="loadnum"[^<>]*>([^<>]*)</em>
Features:

1: LIT|a literal character | 29.0
2: KLE|zero-or-more repetition | 2.0
3: NCCC|negated CCC | 2.0
4: CG|a capture group | 1.0


0000 | 0001 | '<em class="loadnum"[^<>]*>([^<>]*)</em>'



cluster 428 stats:
nPatterns: 1.0
nProjects: 1
shortest: [QA]?[:.]?\d?\d[:;.]\d\d[:;.]\d\d
Features:

1: LIT|a literal character | 10.0
2: DEC|any of: 0123456789 | 6.0
3: CCC|custom character class | 4.0
4: QST|zero-or-one repetition | 3.0


0000 | 0001 | '[QA]?[:.]?\\d?\\d[:;.]\\d\\d[:;.]\\d\\d'



cluster 429 stats:
nPatterns: 1.0
nProjects: 1
shortest: database version (?P<version>.+?)\.?\n
Features:

1: LIT|a literal character | 19.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: LZY|as few reps as possible | 1.0
5: PNG|named capture group | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0001 | 'database version (?P<version>.+?)\\.?\n'



cluster 430 stats:
nPatterns: 1.0
nProjects: 1
shortest: --?\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\s]+
Features:

1: LIT|a literal character | 11.0
2: QST|zero-or-one repetition | 4.0
3: NCCC|negated CCC | 3.0
4: ADD|one-or-more repetition | 2.0
5: KLE|zero-or-more repetition | 2.0
6: OR|logical or | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '--?\\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\\s]+'



cluster 431 stats:
nPatterns: 1.0
nProjects: 1
shortest: <div class="context" id="(?P<id>[^"]+)">
Features:

1: LIT|a literal character | 28.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: PNG|named capture group | 1.0


0000 | 0001 | '<div class="context" id="(?P<id>[^"]+)">'



cluster 432 stats:
nPatterns: 1.0
nProjects: 1
shortest: About\((.*)\).should_include\((.*)\)
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 3.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0


0000 | 0001 | 'About\\((.*)\\).should_include\\((.*)\\)'



cluster 433 stats:
nPatterns: 1.0
nProjects: 1
shortest: fixed:\s+([\w.+~-]+(\s+[\w.+~:-]+)?)
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 4.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: WRD|[a-zA-Z0-9\_] | 2.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
7: QST|zero-or-one repetition | 1.0


0000 | 0001 | 'fixed:\\s+([\\w.+~-]+(\\s+[\\w.+~:-]+)?)'



cluster 434 stats:
nPatterns: 1.0
nProjects: 1
shortest: PACKAGE_VERSION *= *[\'"]([0-9.]+)["\'].*
Features:

1: LIT|a literal character | 25.0
2: CCC|custom character class | 3.0
3: KLE|zero-or-more repetition | 3.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: RNG|chars within a range | 1.0


0000 | 0001 | 'PACKAGE_VERSION *= *[\'"]([0-9.]+)["\'].*'



cluster 435 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*window\.location\.href='(?P<href>.*)'.*
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 3.0
4: PNG|named capture group | 1.0


0000 | 0001 | ".*window\\.location\\.href='(?P<href>.*)'.*"



cluster 436 stats:
nPatterns: 1.0
nProjects: 1
shortest: Mozilla (Firefox|Iceweasel) ((\d+)\.\S*)
Features:

1: LIT|a literal character | 26.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 1.0
4: DEC|any of: 0123456789 | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NWSP|any non-whitespace | 1.0
7: OR|logical or | 1.0


0000 | 0001 | 'Mozilla (Firefox|Iceweasel) ((\\d+)\\.\\S*)'



cluster 437 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^{(?P<w>[^[\]()]+)(?:\[(?P<i>\d+)\])?}$
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 2.0
3: PNG|named capture group | 2.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0
7: NCG|group without capturing | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^{(?P<w>[^[\\]()]+)(?:\\[(?P<i>\\d+)\\])?}$'



cluster 438 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\n?)-  ([a-zA-Z_.-]+)-script.py\n-  \2.exe\n
Features:

1: LIT|a literal character | 28.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: RNG|chars within a range | 2.0
5: ADD|one-or-more repetition | 1.0
6: BKR|match the $i^{th}$ CG | 1.0
7: CCC|custom character class | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0001 | '(\n?)-  ([a-zA-Z_.-]+)-script.py\n-  \\2.exe\n'



cluster 439 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(0x[0-9a-fA-F]+)(?:,(ramdisk|ipl|entry|rpm))?$
Features:

1: LIT|a literal character | 27.0
2: RNG|chars within a range | 3.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: CCC|custom character class | 1.0
6: END|end-of-line | 1.0
7: NCG|group without capturing | 1.0
8: OR|logical or | 1.0
9: QST|zero-or-one repetition | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^(0x[0-9a-fA-F]+)(?:,(ramdisk|ipl|entry|rpm))?$'



cluster 440 stats:
nPatterns: 1.0
nProjects: 1
shortest: c\([\d.,\s-]*,\s*(?P<final>-?[0-9.]+)\n?\)
Features:

1: LIT|a literal character | 12.0
2: CCC|custom character class | 2.0
3: KLE|zero-or-more repetition | 2.0
4: QST|zero-or-one repetition | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ADD|one-or-more repetition | 1.0
7: DEC|any of: 0123456789 | 1.0
8: PNG|named capture group | 1.0
9: RNG|chars within a range | 1.0


0000 | 0001 | 'c\\([\\d.,\\s-]*,\\s*(?P<final>-?[0-9.]+)\n?\\)'



cluster 441 stats:
nPatterns: 1.0
nProjects: 1
shortest: (^\(?(\d{3})\)?[- .]?(\d{3})[- .]?(\d{4})$)
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 4.0
3: QST|zero-or-one repetition | 4.0
4: DEC|any of: 0123456789 | 3.0
5: SNG|exactly n repetition | 3.0
6: CCC|custom character class | 2.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '(^\\(?(\\d{3})\\)?[- .]?(\\d{3})[- .]?(\\d{4})$)'



cluster 442 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s|=|,|:|\((?!.*\))|\[(?!.*\])|\{(?!.*\})
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 3.0
4: NLKA|sequence doesn't follow  | 3.0
5: OR|logical or | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s|=|,|:|\\((?!.*\\))|\\[(?!.*\\])|\\{(?!.*\\})'



cluster 443 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\d+)(?:([yzafpnumcdhkKMGTPEZY])(i)?)?([Bb])?$
Features:

1: LIT|a literal character | 23.0
2: CG|a capture group | 4.0
3: QST|zero-or-one repetition | 3.0
4: CCC|custom character class | 2.0
5: ADD|one-or-more repetition | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 1.0
8: NCG|group without capturing | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^(\\d+)(?:([yzafpnumcdhkKMGTPEZY])(i)?)?([Bb])?$'



cluster 444 stats:
nPatterns: 1.0
nProjects: 1
shortest: version\s*=\s*[\'"](?P<version>[\d\.]+)[\'"]
Features:

1: LIT|a literal character | 13.0
2: CCC|custom character class | 3.0
3: KLE|zero-or-more repetition | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ADD|one-or-more repetition | 1.0
6: DEC|any of: 0123456789 | 1.0
7: PNG|named capture group | 1.0


0000 | 0001 | 'version\\s*=\\s*[\'"](?P<version>[\\d\\.]+)[\'"]'



cluster 445 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.*[^a-z0-9\n])?(sudo|su +-c|system/bin/su) +.*
Features:

1: LIT|a literal character | 28.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 2.0
5: KLE|zero-or-more repetition | 2.0
6: RNG|chars within a range | 2.0
7: NCCC|negated CCC | 1.0
8: OR|logical or | 1.0
9: QST|zero-or-one repetition | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^(.*[^a-z0-9\\n])?(sudo|su +-c|system/bin/su) +.*'



cluster 446 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*((\.textile$)|(\.markdown$)|(\.org$)|(\.html$))
Features:

1: LIT|a literal character | 26.0
2: CG|a capture group | 5.0
3: END|end-of-line | 4.0
4: ANY|any non-newline char | 1.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0


0000 | 0001 | '.*((\\.textile$)|(\\.markdown$)|(\\.org$)|(\\.html$))'



cluster 447 stats:
nPatterns: 1.0
nProjects: 1
shortest: <a href="(http://\w+.craigslist.org/)">([\w ]+)</a>
Features:

1: LIT|a literal character | 37.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 2.0
5: WRD|[a-zA-Z0-9\_] | 2.0
6: CCC|custom character class | 1.0


0000 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)</a>'



cluster 448 stats:
nPatterns: 1.0
nProjects: 1
shortest: MARIONETTE_CONTEXT(\s*)=(\s*)[\'|\"](.*?)[\'|\"];
Features:

1: LIT|a literal character | 26.0
2: CG|a capture group | 3.0
3: KLE|zero-or-more repetition | 3.0
4: CCC|custom character class | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ANY|any non-newline char | 1.0
7: LZY|as few reps as possible | 1.0


0000 | 0001 | 'MARIONETTE_CONTEXT(\\s*)=(\\s*)[\'|\\"](.*?)[\'|\\"];'



cluster 449 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.*)derpiboo((.ru)|(ru.org))(/images)?/(?P<id>[0-9]*)/?
Features:

1: LIT|a literal character | 26.0
2: CG|a capture group | 5.0
3: ANY|any non-newline char | 3.0
4: KLE|zero-or-more repetition | 2.0
5: QST|zero-or-one repetition | 2.0
6: CCC|custom character class | 1.0
7: OR|logical or | 1.0
8: PNG|named capture group | 1.0
9: RNG|chars within a range | 1.0


0000 | 0001 | '(.*)derpiboo((.ru)|(ru.org))(/images)?/(?P<id>[0-9]*)/?'



cluster 450 stats:
nPatterns: 1.0
nProjects: 1
shortest: (takes [\w ]+ )(\d+)( arguments? \()(\d+)( given\))
Features:

1: LIT|a literal character | 27.0
2: CG|a capture group | 5.0
3: ADD|one-or-more repetition | 3.0
4: DEC|any of: 0123456789 | 2.0
5: CCC|custom character class | 1.0
6: QST|zero-or-one repetition | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(takes [\\w ]+ )(\\d+)( arguments? \\()(\\d+)( given\\))'



cluster 451 stats:
nPatterns: 1.0
nProjects: 1
shortest: MatplotlibBox:\(([\d.]+)pt\+([\d.]+)pt\)x([\d.]+)pt
Features:

1: LIT|a literal character | 27.0
2: ADD|one-or-more repetition | 3.0
3: CCC|custom character class | 3.0
4: CG|a capture group | 3.0
5: DEC|any of: 0123456789 | 3.0


0000 | 0001 | u'MatplotlibBox:\\(([\\d.]+)pt\\+([\\d.]+)pt\\)x([\\d.]+)pt'



cluster 452 stats:
nPatterns: 1.0
nProjects: 1
shortest: Couldn't start forwarder server for port spec: (\d+):(\d+)
Features:

1: LIT|a literal character | 48.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: DEC|any of: 0123456789 | 2.0


0000 | 0001 | "Couldn't start forwarder server for port spec: (\\d+):(\\d+)"



cluster 453 stats:
nPatterns: 1.0
nProjects: 1
shortest: <p.*?begin="(...........)" end="(...........)".*?">(.*?)</p>
Features:

1: ANY|any non-newline char | 25.0
2: LIT|a literal character | 23.0
3: CG|a capture group | 3.0
4: KLE|zero-or-more repetition | 3.0
5: LZY|as few reps as possible | 3.0


0000 | 0001 | '<p.*?begin="(...........)" end="(...........)".*?">(.*?)</p>'



cluster 454 stats:
nPatterns: 1.0
nProjects: 1
shortest: pretty-date'>on ([\w]+ [\d]+, [\d]+ \d+:\d+)</abbr></h2>
Features:

1: LIT|a literal character | 33.0
2: ADD|one-or-more repetition | 5.0
3: DEC|any of: 0123456789 | 4.0
4: CCC|custom character class | 3.0
5: CG|a capture group | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | "pretty-date'>on ([\\w]+ [\\d]+, [\\d]+ \\d+:\\d+)</abbr></h2>"



cluster 455 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?m)^Conf ([^ ]+) \(([^ ]+) ([^ ]+)(?: \[([^\]]+)\])?\)$
Features:

1: LIT|a literal character | 16.0
2: ADD|one-or-more repetition | 4.0
3: CG|a capture group | 4.0
4: NCCC|negated CCC | 4.0
5: END|end-of-line | 1.0
6: NCG|group without capturing | 1.0
7: OPT|options wrapper | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '(?m)^Conf ([^ ]+) \\(([^ ]+) ([^ ]+)(?: \\[([^\\]]+)\\])?\\)$'



cluster 456 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^.*\s+mail exchanger = (?P<priority>\d+) (?P<host>\S+)\s*$
Features:

1: LIT|a literal character | 18.0
2: ADD|one-or-more repetition | 3.0
3: KLE|zero-or-more repetition | 2.0
4: PNG|named capture group | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ANY|any non-newline char | 1.0
7: DEC|any of: 0123456789 | 1.0
8: END|end-of-line | 1.0
9: NWSP|any non-whitespace | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^.*\\s+mail exchanger = (?P<priority>\\d+) (?P<host>\\S+)\\s*$'



cluster 457 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^/(usr/)?(s?bin|games|libexec(/.+)?|(lib(64)?|share)/.+)/[^/]+$
Features:

1: LIT|a literal character | 35.0
2: CG|a capture group | 5.0
3: QST|zero-or-one repetition | 4.0
4: ADD|one-or-more repetition | 3.0
5: ANY|any non-newline char | 2.0
6: OR|logical or | 2.0
7: END|end-of-line | 1.0
8: NCCC|negated CCC | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^/(usr/)?(s?bin|games|libexec(/.+)?|(lib(64)?|share)/.+)/[^/]+$'



cluster 458 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*Access denied for user '[\w\*\!\@\#\^\&]*'@'[\w\.]*'.*
Features:

1: LIT|a literal character | 35.0
2: KLE|zero-or-more repetition | 4.0
3: ANY|any non-newline char | 2.0
4: CCC|custom character class | 2.0
5: WRD|[a-zA-Z0-9\_] | 2.0


0000 | 0001 | ".*Access denied for user '[\\w\\*\\!\\@\\#\\^\\&]*'@'[\\w\\.]*'.*"



cluster 459 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\d\.*\d*\s+\d\.*\d*\s+\d\.*\d*\s+\d\.*\d*\s+cmyk
Features:

1: DEC|any of: 0123456789 | 8.0
2: KLE|zero-or-more repetition | 8.0
3: LIT|a literal character | 8.0
4: ADD|one-or-more repetition | 4.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+cmyk'



cluster 460 stats:
nPatterns: 1.0
nProjects: 1
shortest: //.\.thumbs\.4chan\.org/\w+/thumb/\d+s\.(?:jpg|gif|png|jpeg)
Features:

1: LIT|a literal character | 42.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: DEC|any of: 0123456789 | 1.0
5: NCG|group without capturing | 1.0
6: OR|logical or | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '//.\\.thumbs\\.4chan\\.org/\\w+/thumb/\\d+s\\.(?:jpg|gif|png|jpeg)'



cluster 461 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[(?P<t>[^\]]*?) +(?P<k>\S+) +(?P<p>left|right|center)\]\]
Features:

1: LIT|a literal character | 22.0
2: ADD|one-or-more repetition | 3.0
3: PNG|named capture group | 3.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: NCCC|negated CCC | 1.0
7: NWSP|any non-whitespace | 1.0
8: OR|logical or | 1.0


0000 | 0001 | '\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+) +(?P<p>left|right|center)\\]\\]'



cluster 462 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^GlueSiteUniqueID: (.*)
Features:

1: LIT|a literal character | 25.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^GlueSiteUniqueID: (.*)'
0001 | 0001 | '^GlueForeignKey: GlueCEUniqueID=(.*):'



cluster 463 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^I/(stderr)\s*\(\s*\d+\):\s*((info|warning|error|debug): .*)$
Features:

1: LIT|a literal character | 34.0
2: KLE|zero-or-more repetition | 4.0
3: CG|a capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
5: ADD|one-or-more repetition | 1.0
6: ANY|any non-newline char | 1.0
7: DEC|any of: 0123456789 | 1.0
8: END|end-of-line | 1.0
9: OR|logical or | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^I/(stderr)\\s*\\(\\s*\\d+\\):\\s*((info|warning|error|debug): .*)$'



cluster 464 stats:
nPatterns: 1.0
nProjects: 1
shortest: (d  ((ext)?demo(needed)?|other)-\d[.]\d-py)\d[.]\d(-\S+)?[.]egg
Features:

1: LIT|a literal character | 32.0
2: CG|a capture group | 5.0
3: DEC|any of: 0123456789 | 4.0
4: CCC|custom character class | 3.0
5: QST|zero-or-one repetition | 3.0
6: ADD|one-or-more repetition | 1.0
7: NWSP|any non-whitespace | 1.0
8: OR|logical or | 1.0


0000 | 0001 | '(d  ((ext)?demo(needed)?|other)-\\d[.]\\d-py)\\d[.]\\d(-\\S+)?[.]egg'



cluster 465 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^Comdat:\s+(.+)\s+SEGMENT NONE '(\w+)'\s+([0-9a-fA-F]+)\s+bytes$
Features:

1: LIT|a literal character | 33.0
2: ADD|one-or-more repetition | 7.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: CG|a capture group | 3.0
5: RNG|chars within a range | 3.0
6: ANY|any non-newline char | 1.0
7: CCC|custom character class | 1.0
8: END|end-of-line | 1.0
9: STR|start-of-line | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | "^Comdat:\\s+(.+)\\s+SEGMENT NONE '(\\w+)'\\s+([0-9a-fA-F]+)\\s+bytes$"



cluster 466 stats:
nPatterns: 1.0
nProjects: 1
shortest: map\.setCenter\(new GLatLng\(([-0-9.]+), ([-0-9.]+)\), (\d+)\);
Features:

1: LIT|a literal character | 41.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: CCC|custom character class | 2.0
5: RNG|chars within a range | 2.0
6: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'map\\.setCenter\\(new GLatLng\\(([-0-9.]+), ([-0-9.]+)\\), (\\d+)\\);'



cluster 467 stats:
nPatterns: 1.0
nProjects: 1
shortest: <a href="(http://\w+.craigslist.org/)">([\w ]+)\W*[/-]+\W*([\w ]+)</a>
Features:

1: LIT|a literal character | 40.0
2: ADD|one-or-more repetition | 4.0
3: CCC|custom character class | 3.0
4: CG|a capture group | 3.0
5: WRD|[a-zA-Z0-9\_] | 3.0
6: ANY|any non-newline char | 2.0
7: KLE|zero-or-more repetition | 2.0
8: NWRD|non-word chars | 2.0


0000 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'



cluster 468 stats:
nPatterns: 2.0
nProjects: 1
shortest: (?!__init__)[0-9a-zA-Z_]*(\.py)?$
Features:

1: LIT|a literal character | 18.5
2: RNG|chars within a range | 3.0
3: QST|zero-or-one repetition | 1.5
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NLKA|sequence doesn't follow  | 1.0


0000 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'
0001 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'



cluster 469 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.\.\. ([^#]+)#(\d+) (add|edit|delete|integrate|branch|move/add|move/delete)
Features:

1: LIT|a literal character | 54.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: DEC|any of: 0123456789 | 1.0
5: NCCC|negated CCC | 1.0
6: OR|logical or | 1.0


0000 | 0001 | '\\.\\.\\. ([^#]+)#(\\d+) (add|edit|delete|integrate|branch|move/add|move/delete)'



cluster 470 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*//\s*#(include|define|if|ifdef|elif|ifndef|endif|else)(?:\s+(.*)\s*$|($))
Features:

1: LIT|a literal character | 42.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: CG|a capture group | 3.0
5: END|end-of-line | 2.0
6: OR|logical or | 2.0
7: ADD|one-or-more repetition | 1.0
8: ANY|any non-newline char | 1.0
9: NCG|group without capturing | 1.0


0000 | 0001 | '\\s*//\\s*#(include|define|if|ifdef|elif|ifndef|endif|else)(?:\\s+(.*)\\s*$|($))'



cluster 471 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^Multiple results found; try http://search\.vt\.edu/search/people\.html\?q=.*$
Features:

1: LIT|a literal character | 70.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^Multiple results found; try http://search\\.vt\\.edu/search/people\\.html\\?q=.*$'



cluster 472 stats:
nPatterns: 1.0
nProjects: 1
shortest:  border-color : #e7d796;margin-bottom : 1em; color : #9a8c59;">Article note: (.*)</div>
Features:

1: LIT|a literal character | 83.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | ' border-color : #e7d796;margin-bottom : 1em; color : #9a8c59;">Article note: (.*)</div>'



cluster 473 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^No line number information available for address\s+0x[0-9a-f]+ <(?P<sym>\w+)\+\d+>
Features:

1: LIT|a literal character | 58.0
2: ADD|one-or-more repetition | 4.0
3: RNG|chars within a range | 2.0
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 1.0
6: PNG|named capture group | 1.0
7: STR|start-of-line | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^No line number information available for address\\s+0x[0-9a-f]+ <(?P<sym>\\w+)\\+\\d+>'



cluster 474 stats:
nPatterns: 1.0
nProjects: 1
shortest: <key>system.privilege.taskport</key>\s*\n\s*<dict>\n\s*<key>allow-root</key>\n\s*(<[^>]+>)
Features:

1: LIT|a literal character | 67.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: ANY|any non-newline char | 2.0
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: NCCC|negated CCC | 1.0


0000 | 0001 | '<key>system.privilege.taskport</key>\\s*\n\\s*<dict>\n\\s*<key>allow-root</key>\n\\s*(<[^>]+>)'



cluster 475 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s+inet addr:\s*(?P<ipaddr>[0-9\.]+)(\s+Bcast:(?P<bcast>[0-9\.]+))?\s+Mask:(?P<mask>[0-9\.]+)
Features:

1: LIT|a literal character | 30.0
2: ADD|one-or-more repetition | 6.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: CCC|custom character class | 3.0
5: PNG|named capture group | 3.0
6: RNG|chars within a range | 3.0
7: CG|a capture group | 1.0
8: KLE|zero-or-more repetition | 1.0
9: QST|zero-or-one repetition | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^\\s+inet addr:\\s*(?P<ipaddr>[0-9\\.]+)(\\s+Bcast:(?P<bcast>[0-9\\.]+))?\\s+Mask:(?P<mask>[0-9\\.]+)'



cluster 476 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\(([0-9a-fx]+),([0-9a-fx]+)\)[ \t]+VERS=.*[ \t]+VR="(.*)"[ \t]+VM="(.*)"[ \t]+Keyword=.*[ \t]+Name="(.*)"$
Features:

1: LIT|a literal character | 53.0
2: ADD|one-or-more repetition | 7.0
3: CCC|custom character class | 7.0
4: ANY|any non-newline char | 5.0
5: CG|a capture group | 5.0
6: KLE|zero-or-more repetition | 5.0
7: RNG|chars within a range | 4.0
8: END|end-of-line | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^\\(([0-9a-fx]+),([0-9a-fx]+)\\)[ \t]+VERS=.*[ \t]+VR="(.*)"[ \t]+VM="(.*)"[ \t]+Keyword=.*[ \t]+Name="(.*)"$'



cluster 477 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?:<FONT SIZE="-1">|<font face="arial,helvetica" size=2><(?:B|I)>)([^<]*?)/([^<]*?)(?:</(?:B|I)></font>|</FONT>)
Features:

1: LIT|a literal character | 78.0
2: NCG|group without capturing | 4.0
3: OR|logical or | 4.0
4: CG|a capture group | 2.0
5: KLE|zero-or-more repetition | 2.0
6: LZY|as few reps as possible | 2.0
7: NCCC|negated CCC | 2.0


0000 | 0001 | '(?:<FONT SIZE="-1">|<font face="arial,helvetica" size=2><(?:B|I)>)([^<]*?)/([^<]*?)(?:</(?:B|I)></font>|</FONT>)'



cluster 478 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(?P<sign>[+-])?P(?P<years>[0-9]+([,.][0-9]+)?Y)?(?P<months>[0-9]+([,.][0-9]+)?M)?(?P<weeks>[0-9]+([,.][0-9]+)?W)?(?P<days>[0-9]+([,.][0-9]+)?D)?((?P<separator>T)(?P<hours>[0-9]+([,.][0-9]+)?H)?(?P<minutes>[0-9]+([,.][0-9]+)?M)?(?P<seconds>[0-9]+([,.][0-9]+)?S)?)?$
Features:

1: LIT|a literal character | 53.0
2: CCC|custom character class | 22.0
3: QST|zero-or-one repetition | 16.0
4: ADD|one-or-more repetition | 14.0
5: RNG|chars within a range | 14.0
6: PNG|named capture group | 9.0
7: CG|a capture group | 8.0
8: END|end-of-line | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^(?P<sign>[+-])?P(?P<years>[0-9]+([,.][0-9]+)?Y)?(?P<months>[0-9]+([,.][0-9]+)?M)?(?P<weeks>[0-9]+([,.][0-9]+)?W)?(?P<days>[0-9]+([,.][0-9]+)?D)?((?P<separator>T)(?P<hours>[0-9]+([,.][0-9]+)?H)?(?P<minutes>[0-9]+([,.][0-9]+)?M)?(?P<seconds>[0-9]+([,.][0-9]+)?S)?)?$'



