Cluster stats:

nClusters: 127
TotalPatterns: 1214
totalnProjects: 702
suffix: _i2.00_p0.18_k100_lcs_


cluster 0 stats:
nPatterns: 87.0
nProjects: 196
shortest: ^[0-9]
Features:

1: LIT|a literal character | 9.298850574712644
2: RNG|chars within a range | 1.9425287356321839
3: CCC|custom character class | 1.4482758620689655
4: CG|a capture group | 1.0114942528735633
5: ADD|one-or-more repetition | 0.9540229885057471
6: KLE|zero-or-more repetition | 0.41379310344827586
7: ANY|any non-newline char | 0.3793103448275862
8: END|end-of-line | 0.3218390804597701
9: STR|start-of-line | 0.27586206896551724
10: SNG|exactly n repetition | 0.20689655172413793
11: OR|logical or | 0.19540229885057472
12: LZY|as few reps as possible | 0.08045977011494253
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.08045977011494253
14: QST|zero-or-one repetition | 0.06896551724137931
15: DBB|$n\le x \le m$ repetition | 0.05747126436781609
16: NCG|group without capturing | 0.05747126436781609
17: PNG|named capture group | 0.05747126436781609
18: DEC|any of: 0123456789 | 0.04597701149425287
19: NCCC|negated CCC | 0.04597701149425287
20: WRD|[a-zA-Z0-9\_] | 0.04597701149425287
21: LKB|matching sequence precedes | 0.022988505747126436
22: LWB|at least n repetition | 0.022988505747126436
23: ENDZ|absolute end of string | 0.011494252873563218
24: NLKA|sequence doesn't follow  | 0.011494252873563218
25: NWSP|any non-whitespace | 0.011494252873563218
26: OPT|options wrapper | 0.011494252873563218
27: WNW|word/non-word boundary | 0.011494252873563218


0000 | 0057 | '<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'
0001 | 0014 | '^(.*):([0-9]+)$'
0002 | 0011 | '(In \\[[0-9]+\\]: )|(   \\.\\.\\.+:)'
0003 | 0008 | '[a-f0-9]+\\s+<.*:$'
0004 | 0007 | '^py[0-9]{2}$'
0005 | 0007 | '([(\\[{])|([)}\\])])'
0006 | 0007 | '\\s*([a-f0-9]+):\\s*(\\S.*)'
0007 | 0006 | '[0-9]+,[0-9]+'
0008 | 0006 | '&#(\\d+|[xX][0-9a-fA-F]+);'
0009 | 0004 | ' at 0x[0-9a-f]+'
0010 | 0004 | '%(?![0-9A-Fa-f]{2})'
0011 | 0004 | '(.*) \\(([0-9]+)\\)$'
0012 | 0004 | u'&(#?[xX]?(?:[0-9a-fA-F]+|\\w{1,8}));'
0013 | 0003 | '[0-9]+\\.[0-9]+'
0014 | 0003 | '([0-9]+):([0-9]+)'
0015 | 0003 | '^#[0-9A-Fa-f]{6}$'
0016 | 0003 | 'vport[0-9]p[0-9]+'
0017 | 0003 | '\\\\([0-3][0-7][0-7])'
0018 | 0003 | '\\\\u([0-9a-fA-F]{4})'
0019 | 0003 | '\\\\([0-9a-fA-F]{1,6})\\s?'
0020 | 0003 | '&(?:#((?:\\d+)|(?:[xX][0-9a-fA-F]+));?|(\\w+);)'
0021 | 0003 | '^content-range: bytes ([0-9]+)-([0-9]+)/([0-9]+)$'
0022 | 0002 | '^[0-9]'
0023 | 0002 | ':[0-9]*$'
0024 | 0002 | '^([0-9]+)$'
0025 | 0002 | '^[0-9]{2}$'
0026 | 0002 | '^[0-9]{4}$'
0027 | 0002 | u'--cols=[0-9]+'
0028 | 0002 | '[a-fA-F0-9]{1,4}'
0029 | 0002 | '([0-9]+)_([0-9]+)'
0030 | 0002 | '^md5=([a-f0-9]+)$'
0031 | 0002 | '\\("id", "([0-9]+)"\\);'
0032 | 0002 | '([\\-0-9])|([\\-0-9]/[0-9])'
0033 | 0002 | '(?i)<img.*?src.*?=.*?"(.+?)".*?>'
0034 | 0002 | '^(\\-[3-9]{1,}|\\-{3,}|\\-[1-9][0-9]+)$'
0035 | 0001 | '[0-9.]+'
0036 | 0001 | '[0-9]+:'
0037 | 0001 | '^[+0-9]+$'
0038 | 0001 | '([0-9\\-]+)'
0039 | 0001 | '(\\*|[0-9])'
0040 | 0001 | '.*[0-9]{6}$'
0041 | 0001 | '[^a-fA-F\\d]'
0042 | 0001 | '^.*[0-9]dev$'
0043 | 0001 | '-clone[1-9]*$'
0044 | 0001 | 'MSIE [1-7]\\b'
0045 | 0001 | '^A[0-9][^ ]+$'
0046 | 0001 | '.*\\.([0-9]+)$'
0047 | 0001 | 'N=50: ([.0-9]+)'
0048 | 0001 | '\x1b\\[[0-9;]*m'
0049 | 0001 | ' for ([0-9.]+)\\Z'
0050 | 0001 | '#[0-9a-fA-F]{3,6}'
0051 | 0001 | 'ID_LENGTH=([0-9]*)'
0052 | 0001 | '[\\w0-9\\.\\_\\-]+'
0053 | 0001 | '^([0-9a-f]+) (.*)$'
0054 | 0001 | '^0x[a-fA-F0-9]{6}$'
0055 | 0001 | '[0-9\\- \\(\\)]{14}'
0056 | 0001 | '^[0-9A-Z\\.]{1,10}$'
0057 | 0001 | '^Committed r([0-9]+)'
0058 | 0001 | '^m_([0-9]+)_([0-9]+)'
0059 | 0001 | '(?:([0-9a-f]+):)?(.*)'
0060 | 0001 | '^(scsi|ide)[0-9]+[^:]'
0061 | 0001 | '(.cp\\(tt[0-9{7}]+\\))'
0062 | 0001 | 'Real/event = [0-9\\.]+'
0063 | 0001 | ', ([0-9]+\\.[0-9]+) fps'
0064 | 0001 | 'lighttpd-([0-9\\.]+) .*'
0065 | 0001 | '([A-Z]+_[a-z0-9]+\\.txt)'
0066 | 0001 | '(prot_[a-z0-9]+\\.fasta)'
0067 | 0001 | 'sta.b (tcc__[fr][0-9]*)$'
0068 | 0001 | '(?P<year>[12]{1}[0-9]{3})'
0069 | 0001 | '([A-Z][0-9]{2})([0-9]{3})'
0070 | 0001 | '^([-+]?[0-9]+)\\.([0-9]+)$'
0071 | 0001 | 'Mean sample size: ([.0-9]+)'
0072 | 0001 | 'data-i18n-[a-z0-9]+="(.+?)"'
0073 | 0001 | '([0-9]+\\.[0-9]+\\.[0-9]+).*'
0074 | 0001 | '^Fan.#([0-9]+).information:$'
0075 | 0001 | '\\$Revision:\\s*([0-9]*)\\s*\\$'
0076 | 0001 | 'snapshot-pos,(0x[a-f0-9]+),(\\d+)'
0077 | 0001 | ' +([0-9]+) , ([0-9]+) *([0-9]+) *(.+)'
0078 | 0001 | '^([0-9a-fA-F]+) ([0-9a-fA-F]+)xx(.*)$'
0079 | 0001 | '^Server.Blade.#([0-9]+).Information:$'
0080 | 0001 | '#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])'
0081 | 0001 | '((\\[\\w*|[0-9]+\\.)(\\:|)).*(\\]|\\.[0-9]+)'
0082 | 0001 | 'http://(?P<ip>[0-9\\.]+):(?P<port>[0-9]+)/.*'
0083 | 0001 | '(?<=\\\\u)([0-9a-f]{4})|(?<=\\\\U)([0-9a-f]{8})'
0084 | 0001 | '(/.*?)(\\(([0-9]+)\\)|):.*(Error|Warning):\\s*(.*)$'
0085 | 0001 | '^(?P<unitformat>.+) \\((?P<bytes>[0-9\\.]+) bytes\\)'
0086 | 0001 | '\\\\(u[dD][89aAbB][0-9a-fA-F]{2}\\\\u[0-9a-fA-F]{4}|u[0-9a-fA-F]{4}|.|$)'



cluster 1 stats:
nPatterns: 62.0
nProjects: 195
shortest: s
Features:

1: LIT|a literal character | 3.096774193548387
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.2580645161290323
3: KLE|zero-or-more repetition | 0.9838709677419355
4: ADD|one-or-more repetition | 0.4838709677419355
5: CG|a capture group | 0.3064516129032258
6: STR|start-of-line | 0.2903225806451613
7: CCC|custom character class | 0.16129032258064516
8: END|end-of-line | 0.16129032258064516
9: QST|zero-or-one repetition | 0.0967741935483871
10: ANY|any non-newline char | 0.08064516129032258
11: NCCC|negated CCC | 0.06451612903225806
12: OR|logical or | 0.06451612903225806
13: NWSP|any non-whitespace | 0.04838709677419355
14: WRD|[a-zA-Z0-9\_] | 0.04838709677419355
15: RNG|chars within a range | 0.03225806451612903
16: DBB|$n\le x \le m$ repetition | 0.016129032258064516
17: DEC|any of: 0123456789 | 0.016129032258064516
18: LZY|as few reps as possible | 0.016129032258064516
19: NCG|group without capturing | 0.016129032258064516
20: OPT|options wrapper | 0.016129032258064516
21: WNW|word/non-word boundary | 0.016129032258064516


0000 | 0078 | '\\s'
0001 | 0048 | '^\\s*$'
0002 | 0030 | '\\s*'
0003 | 0020 | '>\\s+<'
0004 | 0016 | '^-r\\s*([^ ])?'
0005 | 0016 | '<(/?)\\s*i\\s*>'
0006 | 0012 | '(\\(|\\)|\\s+|-)'
0007 | 0011 | '\\$else\\s+'
0008 | 0008 | '\\s*/\\*\\s*\\*/'
0009 | 0007 | 'a\\s'
0010 | 0007 | '(\\s)'
0011 | 0007 | '\\s*-e\\s+'
0012 | 0005 | ';\\s*'
0013 | 0005 | '\\)\\s*'
0014 | 0005 | '(}?\\s*)$'
0015 | 0005 | '^[\r\n]*(\\s*)'
0016 | 0005 | '^(\\s*<[^>]+>\\s*)'
0017 | 0004 | ',\\s*$'
0018 | 0004 | u'>\\s+<'
0019 | 0004 | '\\s*SELECT'
0020 | 0004 | u'^\\s*[^#\\s].*'
0021 | 0004 | '\\s*\\(0[0-7]+\\).*'
0022 | 0003 | '(""")\\s*$'
0023 | 0003 | '^--- NEW FILE'
0024 | 0003 | '\\A\\s\\s\\S+,'
0025 | 0003 | u'<(/?)\\s*i\\s*>'
0026 | 0002 | 's'
0027 | 0002 | '---\\s*$'
0028 | 0002 | 'type=(B|R|)'
0029 | 0002 | '^\\s*\\#+\\s*'
0030 | 0002 | '((^|\\n)\\s*)@'
0031 | 0002 | '\\[\\d\\]\\s+='
0032 | 0001 | ':\\s*'
0033 | 0001 | '\\s+<'
0034 | 0001 | ':[\\s]+'
0035 | 0001 | '\\s*\\S+'
0036 | 0001 | '^\\s*\\['
0037 | 0001 | '(?m)^\\s*'
0038 | 0001 | '([;,\\s]+)'
0039 | 0001 | '[\'"\\s;]+'
0040 | 0001 | '\\-\\s*\\>'
0041 | 0001 | '\\s*(\\S+)'
0042 | 0001 | '^\\s*endif'
0043 | 0001 | '[-+]\\s*\\('
0044 | 0001 | '\\s*=+>\\s*'
0045 | 0001 | '\\s*\\;\\s*'
0046 | 0001 | 'type\\b\\s*'
0047 | 0001 | '\\*/\\s+/\\*'
0048 | 0001 | '\\s*\\*/\\s*'
0049 | 0001 | '\\s+---?\\s+'
0050 | 0001 | '^(\\s*lib.*)+'
0051 | 0001 | 'typecode\\s*='
0052 | 0001 | '^\\s*\\w*\\s*$'
0053 | 0001 | '^message:\\s*$'
0054 | 0001 | '^removed:\\s*$'
0055 | 0001 | '^\\s*msgid\\s+"'
0056 | 0001 | '\\s*longitude\\s*'
0057 | 0001 | '^\\s*[\\w-]+\\s*$'
0058 | 0001 | '((?:"[^"\\s]+")+)$'
0059 | 0001 | 'seeds:(\\s*-.*)*\\s*#'
0060 | 0001 | '\\\\([ \tn\\\\]|[0-7]{3,3})'
0061 | 0001 | "\\s*SELECT\\s+.+?\\s+FROM\\s+[']?(\\w+)"



cluster 2 stats:
nPatterns: 68.0
nProjects: 183
shortest: '
Features:

1: LIT|a literal character | 2.014705882352941
2: ADD|one-or-more repetition | 0.25
3: CCC|custom character class | 0.25
4: KLE|zero-or-more repetition | 0.14705882352941177
5: CG|a capture group | 0.10294117647058823
6: END|end-of-line | 0.07352941176470588
7: STR|start-of-line | 0.07352941176470588
8: NWRD|non-word chars | 0.04411764705882353
9: NWSP|any non-whitespace | 0.04411764705882353
10: OR|logical or | 0.04411764705882353
11: WRD|[a-zA-Z0-9\_] | 0.04411764705882353
12: DEC|any of: 0123456789 | 0.029411764705882353
13: QST|zero-or-one repetition | 0.029411764705882353
14: WNW|word/non-word boundary | 0.029411764705882353
15: LWB|at least n repetition | 0.014705882352941176
16: NCCC|negated CCC | 0.014705882352941176
17: NDEC|any non-decimal | 0.014705882352941176
18: VWSP|matches U+000B | 0.014705882352941176


0000 | 0041 | '\n'
0001 | 0038 | '\\(\\*'
0002 | 0026 | '\\W+'
0003 | 0013 | '^ *\n'
0004 | 0013 | '\\]\\]>'
0005 | 0012 | ' *, *'
0006 | 0010 | '\\w'
0007 | 0009 | '[\n@{}&<>]'
0008 | 0008 | 'b*'
0009 | 0008 | 'b+'
0010 | 0008 | '\n+'
0011 | 0007 | '\t'
0012 | 0007 | '[ \n]*{'
0013 | 0007 | '\\\\\\\\'
0014 | 0007 | '\\\\EOF\\b'
0015 | 0006 | '^\\W+'
0016 | 0004 | '\\\\$'
0017 | 0004 | '%[^\\r\\n\\v]*'
0018 | 0003 | '(&&)'
0019 | 0003 | "\\\\'"
0020 | 0003 | '(\\d)'
0021 | 0003 | '^6\\.'
0022 | 0003 | '\\\\*\\n'
0023 | 0002 | u"'"
0024 | 0002 | '\\-'
0025 | 0002 | '\\t+'
0026 | 0002 | '(\\W)'
0027 | 0002 | '\\\\`'
0028 | 0002 | '\\n +'
0029 | 0002 | '\\n+$'
0030 | 0002 | '\\*\\S'
0031 | 0002 | ' {2,}\n'
0032 | 0001 | 'sun'
0033 | 0001 | u'-+'
0034 | 0001 | u'-h'
0035 | 0001 | u'\n'
0036 | 0001 | '<\\w'
0037 | 0001 | '[<&]'
0038 | 0001 | '[\n]'
0039 | 0001 | '\\$$'
0040 | 0001 | '(\\S)'
0041 | 0001 | '2\\.3'
0042 | 0001 | '[ \t]'
0043 | 0001 | '[,\n]'
0044 | 0001 | '[.:-]'
0045 | 0001 | '[\\)]'
0046 | 0001 | '[\n,]'
0047 | 0001 | '\\bod'
0048 | 0001 | '\n\n+'
0049 | 0001 | '^\\D*'
0050 | 0001 | '^\\S+'
0051 | 0001 | u'\\-+'
0052 | 0001 | '(%\\w)'
0053 | 0001 | '[\\+-]'
0054 | 0001 | '\\$\\d'
0055 | 0001 | '\\.php'
0056 | 0001 | '[\\n,]+'
0057 | 0001 | '[\r\n]*'
0058 | 0001 | '\\n|\\\\'
0059 | 0001 | '\n     #'
0060 | 0001 | '[ \r\n\t]+'
0061 | 0001 | '[\t\r\n]+$'
0062 | 0001 | '(<br/>\n?)+'
0063 | 0001 | '\\. *(\n|$)'
0064 | 0001 | '\\\\[\\\\]?'
0065 | 0001 | '[   \\r\\n]+'
0066 | 0001 | '[ _.\\[\\]]+'
0067 | 0001 | '\\\\n|\\\\\\\\'



cluster 3 stats:
nPatterns: 126.0
nProjects: 173
shortest: #.*
Features:

1: LIT|a literal character | 6.103174603174603
2: KLE|zero-or-more repetition | 1.4126984126984128
3: ANY|any non-newline char | 1.3174603174603174
4: CG|a capture group | 0.9920634920634921
5: END|end-of-line | 0.3253968253968254
6: LZY|as few reps as possible | 0.31746031746031744
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.24603174603174602
8: STR|start-of-line | 0.21428571428571427
9: ADD|one-or-more repetition | 0.16666666666666666
10: QST|zero-or-one repetition | 0.07142857142857142
11: CCC|custom character class | 0.05555555555555555
12: NCG|group without capturing | 0.05555555555555555
13: NCCC|negated CCC | 0.047619047619047616
14: OR|logical or | 0.047619047619047616
15: WNW|word/non-word boundary | 0.03968253968253968
16: DEC|any of: 0123456789 | 0.031746031746031744
17: NWSP|any non-whitespace | 0.031746031746031744
18: OPT|options wrapper | 0.031746031746031744
19: BKR|match the $i^{th}$ CG | 0.015873015873015872
20: DBB|$n\le x \le m$ repetition | 0.015873015873015872
21: WRD|[a-zA-Z0-9\_] | 0.015873015873015872
22: NDEC|any non-decimal | 0.007936507936507936
23: NLKB|sequence doesn't precede | 0.007936507936507936
24: PNG|named capture group | 0.007936507936507936


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0016 | '#.*'
0002 | 0016 | 'hg\\s*pull\\s*(.*)\\s*'
0003 | 0014 | '^(.*)#([^#]*)$'
0004 | 0009 | '@code{(.*?)}'
0005 | 0008 | 'Wrote: (.*)'
0006 | 0008 | 'name="(.*?)"'
0007 | 0007 | '\\s*-e\\s+.*#egg=(.*)$'
0008 | 0007 | '^\\s+:toctree:\\s*(.*?)\\s*$'
0009 | 0005 | "^'(.*)'$"
0010 | 0005 | '.*\\.__.*?__'
0011 | 0004 | '{([^}]*)}(.*)'
0012 | 0004 | '(\\S+)\\s*(.*)'
0013 | 0004 | '^(CONFIG_\\w+)=(.*)$'
0014 | 0003 | '#.*$'
0015 | 0003 | 'o:(.*)s'
0016 | 0003 | "'\\?(.)'"
0017 | 0003 | '.*\\.zip'
0018 | 0003 | '(.*)//(.*)'
0019 | 0003 | '<tchar=(.*?)>'
0020 | 0003 | 'offset (.*) sec'
0021 | 0003 | '^ *(.*) *( *) *$'
0022 | 0003 | '__FAIL(.*)__FAIL'
0023 | 0003 | '(.*)\\[(.*)\\](.*)'
0024 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0025 | 0003 | '^(.*?)(?:-dev|-\\d.*)$'
0026 | 0003 | '([^\\(]*)(\\((.*)%(.*)\\))?'
0027 | 0003 | '^(.*?)\\s?((?:ssh\\-|ecds).+)$'
0028 | 0003 | "\\s+\\(default:\\s+\\'(.*)\\'\\)$"
0029 | 0003 | '(?P<address>.*?)(?:(?: \\(.*?@)|$)'
0030 | 0002 | '(.*)'
0031 | 0002 | '(.*)\n'
0032 | 0002 | '.*\\*$'
0033 | 0002 | '^.*\\/'
0034 | 0002 | '\\?(.*)'
0035 | 0002 | '^yt-(.*)$'
0036 | 0002 | '\\bminus\\b'
0037 | 0002 | 'b2g-l10n.js'
0038 | 0002 | '(.*) cache:$'
0039 | 0002 | '([^#:]*#)(.*)'
0040 | 0002 | u'.*?\\S\\.\\s'
0041 | 0002 | '(?s)<!--.*?-->'
0042 | 0002 | '  ([^:]*):  (.*)'
0043 | 0002 | '(?i)handy(.*)nummer'
0044 | 0002 | '(?i)pager(.*)nummer'
0045 | 0002 | '\\.\\. (.+?)::(.*)$'
0046 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0047 | 0002 | '"(.*)"\\s*->\\s*"(.*)"'
0048 | 0002 | 'descr\\s+(\\S+?):\\s*(.*)$'
0049 | 0002 | "PREFIX\\('.*?'\\)(.*?)\\(.*"
0050 | 0002 | '^--([^\\n]+)\\n(.*?)\\n--\\1$'
0051 | 0001 | '%(..)'
0052 | 0001 | '.*elf'
0053 | 0001 | 'rel.*'
0054 | 0001 | ".*?'''"
0055 | 0001 | '\\(.*$'
0056 | 0001 | '%%.*?\n'
0057 | 0001 | '(.).\\1'
0058 | 0001 | '^//(.*)'
0059 | 0001 | '.*?_info'
0060 | 0001 | '\\) (.*)'
0061 | 0001 | 'linux-.*'
0062 | 0001 | '.*?: (.*)'
0063 | 0001 | '.*metis.*'
0064 | 0001 | 'Auth=(.*)'
0065 | 0001 | '^(.*)"""$'
0066 | 0001 | 'init.*.rc'
0067 | 0001 | 'iso.*?\\-'
0068 | 0001 | 'n_(?:.*?)'
0069 | 0001 | '(.*?)=(.*)'
0070 | 0001 | '/\\(.*\\)/'
0071 | 0001 | '^([.]*).*$'
0072 | 0001 | '^.*\\.xsd$'
0073 | 0001 | '^.*\\.zip$'
0074 | 0001 | '.*?\\blm\\b'
0075 | 0001 | '//.*\\r?\\n'
0076 | 0001 | '^lib(.*).a$'
0077 | 0001 | "{'(.*':.*)'}"
0078 | 0001 | '^"(.*)"\\s*$'
0079 | 0001 | '^(.*\\.arc)$'
0080 | 0001 | '^\\[(.*)\\]$'
0081 | 0001 | 'in-addr.arpa'
0082 | 0001 | 'link="(.*?)"'
0083 | 0001 | '(/\\*.*?\\*/)'
0084 | 0001 | '<(.*?)(?<!-)>'
0085 | 0001 | '[-][-]link[-]'
0086 | 0001 | 'seed_hosts:.*'
0087 | 0001 | '.*\\?ptr=(.*)$'
0088 | 0001 | '^.*\\.tar.bz2$'
0089 | 0001 | '^u_(.*)_level$'
0090 | 0001 | 'ov_tree(?:.*?)'
0091 | 0001 | '(\\S+):\\s*(.*)'
0092 | 0001 | '.*?Athlon HX\\b'
0093 | 0001 | '.*ri\\/.*\\.ri$'
0094 | 0001 | 'test_(.*)\\.js$'
0095 | 0001 | '"title":"(.*?)",'
0096 | 0001 | '(.*)\\(\\d+\\) :'
0097 | 0001 | '(\\D*)(\\d*)(.*)'
0098 | 0001 | '^//(\\[.+\\])+\n'
0099 | 0001 | 'line-height:.*?;'
0100 | 0001 | 'localtime=(.*)\t'
0101 | 0001 | '.*\\<use (.*?)\\>'
0102 | 0001 | ".*'(.*)'.*'(.*)'.*"
0103 | 0001 | 'OUTPUT *(.*\\.aux)'
0104 | 0001 | '\\s*global\\s+(.*)'
0105 | 0001 | '__init__.py(c|o)?$'
0106 | 0001 | 'Model name:\\s+(.*)'
0107 | 0001 | "u?'(.*)' != u?'(.*)'"
0108 | 0001 | '(.*)callsign\\=(.*)$'
0109 | 0001 | '<genre>(.*?)</genre>'
0110 | 0001 | '\\((.*)/(.*)/(.*)\\)'
0111 | 0001 | '(.*)\\s(ASC|DESC)(.*)'
0112 | 0001 | 'RESIDUE NUMBERS :(.*)'
0113 | 0001 | '\n?(\\w*)\\:\\s(.*)\n'
0114 | 0001 | 'lc_1div8_1div1(?:.*?)'
0115 | 0001 | '<rating>(.*?)</rating>'
0116 | 0001 | 'About\\((.*)\\).should'
0117 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'
0118 | 0001 | 'NPY_NO_EXPORT\\s+(.*)$'
0119 | 0001 | '^[ ]{0,3}:[ ]{1,3}(.*)$'
0120 | 0001 | '\\$((Id|File|Log).*?)\\$'
0121 | 0001 | '^Spare.Part.Number:.(.*)$'
0122 | 0001 | '(?s)id="TEXT_PH">(.*?)</span>'
0123 | 0001 | '<xnat:Subject\\sID="(.*?)"\\s'
0124 | 0001 | 'update_(smoke)?test_(.*)\\.py$'
0125 | 0001 | 'medea\\._addMod\\(.*?,\\[(.*?)\\]'



cluster 4 stats:
nPatterns: 114.0
nProjects: 166
shortest: \d+-
Features:

1: LIT|a literal character | 6.026315789473684
2: ADD|one-or-more repetition | 1.5789473684210527
3: DEC|any of: 0123456789 | 1.4736842105263157
4: CG|a capture group | 1.368421052631579
5: KLE|zero-or-more repetition | 0.37719298245614036
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2982456140350877
7: ANY|any non-newline char | 0.2807017543859649
8: QST|zero-or-one repetition | 0.2631578947368421
9: STR|start-of-line | 0.24561403508771928
10: END|end-of-line | 0.21929824561403508
11: CCC|custom character class | 0.18421052631578946
12: OR|logical or | 0.13157894736842105
13: SNG|exactly n repetition | 0.10526315789473684
14: WRD|[a-zA-Z0-9\_] | 0.10526315789473684
15: NCCC|negated CCC | 0.03508771929824561
16: PNG|named capture group | 0.03508771929824561
17: RNG|chars within a range | 0.03508771929824561
18: NCG|group without capturing | 0.02631578947368421
19: NLKA|sequence doesn't follow  | 0.02631578947368421
20: LZY|as few reps as possible | 0.017543859649122806
21: BKR|match the $i^{th}$ CG | 0.008771929824561403
22: DBB|$n\le x \le m$ repetition | 0.008771929824561403
23: LWB|at least n repetition | 0.008771929824561403
24: NDEC|any non-decimal | 0.008771929824561403
25: NLKB|sequence doesn't precede | 0.008771929824561403
26: NWSP|any non-whitespace | 0.008771929824561403
27: WNW|word/non-word boundary | 0.008771929824561403


0000 | 0049 | '^\\d+$'
0001 | 0019 | '(?<![\\w])(\\d+)L(?![\\w])'
0002 | 0016 | '&(?!(\\w+|#\\d+);)'
0003 | 0016 | 'macosx-(\\d+)\\.(\\d+)-(.*)'
0004 | 0012 | '^\\d{11}$'
0005 | 0011 | '(.*  )(\\w+)(( &lt;cycle.*&gt;)? \\[\\d+\\])\\n'
0006 | 0009 | '^-?\\d+$'
0007 | 0008 | '.*kallsyms.*'
0008 | 0008 | '^<A HREF="(\\d\\.\\d)/">Lua \\1</A>'
0009 | 0007 | '^[ ]{4,7}((\\d+\\.)|[*+-])[ ].*'
0010 | 0006 | 'nsyms\\s+(\\d+)'
0011 | 0005 | '^\\d{5}$'
0012 | 0005 | '(\\d+)bit'
0013 | 0005 | '\\s+(\\d+),$'
0014 | 0004 | '\\d+-'
0015 | 0004 | 'Ran (\\d+) tests'
0016 | 0004 | 'In\\ \\[\\d+\\]: '
0017 | 0004 | u'^(-?\\d+)(\\d{3})'
0018 | 0004 | u'&(?!(\\w+|#\\d+);)'
0019 | 0004 | '(\\d+)-(\\d+)-(\\d+)'
0020 | 0004 | '.*_([vV]\\d+\\.\\d+)$'
0021 | 0004 | '^v(ersion)?\\s*(\\d+)'
0022 | 0004 | 'Content-Length: (\\d+)'
0023 | 0004 | '\\s*\\(\\d+[ulUL]*\\).*'
0024 | 0004 | '.*/.*_V(\\d+\\.\\d+)/mongo'
0025 | 0004 | '\\d+ GNU.sparse.numbytes=(\\d+)\\n'
0026 | 0004 | '(\\d+)\\.(\\d+)(\\.(\\d+))?(b(\\d+))?'
0027 | 0003 | '(-)(\\d+)$'
0028 | 0003 | u'^\\d{11}$'
0029 | 0003 | '\\x1b\\[[^h]+h'
0030 | 0003 | 'L -(\\d+) -\\d+'
0031 | 0003 | '(\\S+)\\s+(..+$)'
0032 | 0003 | 'successes=(\\d+)'
0033 | 0003 | 'MemFree:\\s+(\\d+).*'
0034 | 0003 | '^\\s*([A-Z_]+): (\\d+)'
0035 | 0003 | 'expectedFailures=(\\d+)'
0036 | 0003 | u'^(\\d{3})-(\\d{3})-(\\d{3})$'
0037 | 0002 | '-\\d+$'
0038 | 0002 | '(\\d{4})'
0039 | 0002 | '\\.repeat\\d+'
0040 | 0002 | '(\\d+) megabytes'
0041 | 0002 | 'Target\\s+(\\d+)'
0042 | 0002 | '^undo\\s+(\\d+)$'
0043 | 0002 | u'cms/page/(\\d+)'
0044 | 0002 | ',[ ]*([-]?\\d+|n)'
0045 | 0002 | 'ErrorReturnCode_(\\d+)'
0046 | 0002 | '(.+)_(\\d+)_(\\d+)_(.+)'
0047 | 0002 | '([idel])|(\\d+):|(-?\\d+)'
0048 | 0002 | '(id|.+_id)(\\d+)((?:-bb)?)'
0049 | 0002 | '^(\\d*)\\.(\\d*)\\[(\\d+)\\]$'
0050 | 0002 | '^(\\w+)\\s*:\\s+(\\d+)\\s\\w+'
0051 | 0002 | 'fail:(\\d+).*?fail:(\\d+).*fail:(\\d+)'
0052 | 0001 | '/\\d+'
0053 | 0001 | '^ja_JP$'
0054 | 0001 | '(\\d{3})'
0055 | 0001 | 'p=(\\d+)'
0056 | 0001 | '(\\d\\d?)'
0057 | 0001 | '\\d+:\\d+'
0058 | 0001 | '^\\.\\d+$'
0059 | 0001 | 'level\\d+'
0060 | 0001 | '(\\d|\\.)+'
0061 | 0001 | '(ajax)\\d+'
0062 | 0001 | '\\(\\d+\\)'
0063 | 0001 | '(\\d\\.\\d)'
0064 | 0001 | '^\\d+:\\d+$'
0065 | 0001 | '\x1b\\[\\d+m'
0066 | 0001 | '^(\\d+)\\s*$'
0067 | 0001 | '^wsj/\\d\\d/'
0068 | 0001 | '(\\d+[dwhms])'
0069 | 0001 | '^nic\\.(\\d+)'
0070 | 0001 | '(\\d+) seconds'
0071 | 0001 | '(/dev/loop\\d+)'
0072 | 0001 | 'TORINO2:\\s\\d+'
0073 | 0001 | 'sms_so_l_(\\d+)'
0074 | 0001 | '((?P<day>\\d+)d)'
0075 | 0001 | '([^*]+)\\*(\\d+)'
0076 | 0001 | 'UNSEEN\\s+(\\d+)'
0077 | 0001 | '^#?(\\d+)-(\\d+)$'
0078 | 0001 | 'branch type (\\d)'
0079 | 0001 | '(\\d+)\\((\\d+)\\)'
0080 | 0001 | 'MESSAGES\\s+(\\d+)'
0081 | 0001 | '[Ff]ile(\\d+)=(.+)'
0082 | 0001 | '\\b(\\d+)\\.(\\d+)'
0083 | 0001 | '\\d+(.\\d*)?|.\\d+'
0084 | 0001 | 'Change\\s+(\\d+)\\s+'
0085 | 0001 | 'MAJOR\\s*=\\s*(\\d+)'
0086 | 0001 | '\\w+ Y(\\d+) N(\\d+)'
0087 | 0001 | '^\\d+\\-\\d+\\-\\d+$'
0088 | 0001 | '(\\d+) leaks? excluded'
0089 | 0001 | '\\|\\s+([^\\|*])\\s+.*'
0090 | 0001 | '^\\d+(-\\d+)?|\\.\\w+$'
0091 | 0001 | '(\\d+\\.\\d+(\\.\\d+)?)'
0092 | 0001 | '[ \t]*File.*line (\\d+)'
0093 | 0001 | '^core = "?(\\d+\\.x)"?$'
0094 | 0001 | '^@@.*\\+(\\d+)(,(\\d+))?'
0095 | 0001 | '(\\d+)\\s(\\D+)\\s(\\d{4})'
0096 | 0001 | '(varchar|char)\\((\\d+)\\)'
0097 | 0001 | '\\((\\d+)-(\\d+)-(\\d+)\\)'
0098 | 0001 | '(\\w+)\\s*District\\s*(\\d+)'
0099 | 0001 | '.*clock (\\d+)\\s(\\w+).*\\n'
0100 | 0001 | '([a-z]\\d?)=\\s+(\\d+\\.\\d+)'
0101 | 0001 | '/libedit[\\.\\d+]*\\.dylib\\s'
0102 | 0001 | '(block|unblock) (\\d+) (\\d+)$'
0103 | 0001 | '^(.*?\\.pyc?):(\\d+):\\s+(.*)$'
0104 | 0001 | 'nic\\.(\\d+)\\.mac_address\\.0'
0105 | 0001 | 'rFAILED.*\\(failures=(\\d+)\\)'
0106 | 0001 | 'WordNet (\\d+\\.\\d+) Copyright'
0107 | 0001 | '\\$(\\d+)|\\$\\{(\\d+):[^\\}]+\\}'
0108 | 0001 | '^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'
0109 | 0001 | '^(\\(*time|(.*\\s+time))\\s+<=\\s+(\\d+)'
0110 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0111 | 0001 | "([\\w.!~*'|;:&=+$,-]+@)?\\d+\\.\\d+\\.\\d+\\.\\d+(:\\d*)*$"
0112 | 0001 | '(?P<year>\\d{4})( (?P<month>[A-Za-z]{3})( (?P<day>\\d+))?)?$'
0113 | 0001 | '(\\d+)-(\\d+)-(\\d+)(?: (\\d+):(\\d+):(\\d+)(?:\\.(\\d+))?)?'



cluster 5 stats:
nPatterns: 101.0
nProjects: 160
shortest: ^[a-z]
Features:

1: LIT|a literal character | 11.277227722772277
2: RNG|chars within a range | 2.762376237623762
3: CCC|custom character class | 1.3762376237623761
4: ADD|one-or-more repetition | 0.6831683168316832
5: KLE|zero-or-more repetition | 0.6435643564356436
6: CG|a capture group | 0.6237623762376238
7: END|end-of-line | 0.297029702970297
8: STR|start-of-line | 0.27722772277227725
9: ANY|any non-newline char | 0.2376237623762376
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.15841584158415842
11: QST|zero-or-one repetition | 0.13861386138613863
12: NCCC|negated CCC | 0.09900990099009901
13: DEC|any of: 0123456789 | 0.07920792079207921
14: OR|logical or | 0.07920792079207921
15: SNG|exactly n repetition | 0.07920792079207921
16: WRD|[a-zA-Z0-9\_] | 0.0594059405940594
17: PNG|named capture group | 0.04950495049504951
18: WNW|word/non-word boundary | 0.039603960396039604
19: LZY|as few reps as possible | 0.0297029702970297
20: LWB|at least n repetition | 0.019801980198019802
21: DBB|$n\le x \le m$ repetition | 0.009900990099009901
22: ENDZ|absolute end of string | 0.009900990099009901
23: NCG|group without capturing | 0.009900990099009901
24: OPT|options wrapper | 0.009900990099009901


0000 | 0020 | '[^a-zA-Z0-9]'
0001 | 0018 | '[a-zA-Z][-_.:a-zA-Z0-9]*\\s*'
0002 | 0016 | '&([a-zA-Z][a-zA-Z0-9]*|#[0-9]*)?|<([a-zA-Z][^<>]*|/([a-zA-Z][^<>]*)?|![^<>]*)?'
0003 | 0015 | '[a-zA-Z][-.a-zA-Z0-9:_]*'
0004 | 0015 | '[a-zA-Z][-_.a-zA-Z0-9:]*\\s*'
0005 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0006 | 0012 | '\\$([a-zA-Z_][a-zA-Z_0-9]*)'
0007 | 0009 | '([a-z0-9])([A-Z])'
0008 | 0005 | '^[a-z]+$'
0009 | 0005 | ', ([a-zA-Z0-9_]+)='
0010 | 0003 | u'^[A-Z]{,3}$'
0011 | 0003 | '([A-Z][a-z]+)'
0012 | 0003 | u'^[-a-zA-Z0-9_]+$'
0013 | 0003 | 'sources.redhat.com'
0014 | 0003 | '([-0-9.]+)([a-zA-Z]+)'
0015 | 0003 | '^[a-z0-9][a-z0-9_]{2,}$'
0016 | 0003 | '^[a-zA-Z0-9\\.\\-:+"]+$'
0017 | 0003 | '^struct +[a-zA-Z_][a-zA-Z0-9_]* *{$'
0018 | 0003 | '[ \t]+([A-Z0-9]+) \\/\\* PBXTargetDependency \\*\\/,\n'
0019 | 0002 | '^/dev/[a-z]+$'
0020 | 0002 | '(?i)([a-z]{2})'
0021 | 0002 | '[a-zA-Z_]\\w*$'
0022 | 0002 | '^[a-zA-Z0-9\\-]+$'
0023 | 0002 | '^[a-zA-Z0-9_\\.]+$'
0024 | 0002 | 'clocksource=[a-z\\- ]+'
0025 | 0002 | '([a-zA-Z]+)([A-Z][a-z])'
0026 | 0002 | '.*?_([a-z]*)_pid(\\d*)$'
0027 | 0002 | '(~?\\b[a-zA-Z_][a-zA-Z0-9_]*)\\b'
0028 | 0002 | '&([a-zA-Z][a-zA-Z0-9]*)[^a-zA-Z0-9]'
0029 | 0002 | 'irb\\([a-zA-Z_][a-zA-Z0-9_]*\\):\\d{3}:\\d+[>*] '
0030 | 0001 | '^[a-z]'
0031 | 0001 | '[a-z ]+'
0032 | 0001 | '[a-z%]+$'
0033 | 0001 | '(.)([A-Z])'
0034 | 0001 | '[A-Za-z_]+'
0035 | 0001 | '^-[LRuYz]$'
0036 | 0001 | '^[a-zA-Z]*'
0037 | 0001 | u'[a-zA-Z]+'
0038 | 0001 | '@([a-z_]+)@'
0039 | 0001 | "[a-z\\-' \n\t]"
0040 | 0001 | '@([a-zA-Z_]+)@'
0041 | 0001 | '[0-9]+[a-zA-Z]'
0042 | 0001 | '[^0-9a-zA-Z._]'
0043 | 0001 | '[^a-zA-Z0-9_]+'
0044 | 0001 | '^=== ([A-Z_]+)'
0045 | 0001 | '^[a-zA-Z]\\w*$'
0046 | 0001 | 'technorati.com'
0047 | 0001 | '[a-zA-Z.;?<>-]+'
0048 | 0001 | '([a-zA-Z0-9_.]+)'
0049 | 0001 | '^[0-9a-zA-Z- ]+$'
0050 | 0001 | '{[a-zA-Z_ 0-9]+}'
0051 | 0001 | u"([a-z]+)([,']*)"
0052 | 0001 | u'^[a-zA-Z0-9_]+$'
0053 | 0001 | '.*@example\\.com$'
0054 | 0001 | '[A-Z][A-Za-z]+\\('
0055 | 0001 | '[a-zA-Z0-9_\\-]+$'
0056 | 0001 | '[a-zA-Z]:(/|\\\\)'
0057 | 0001 | '^[a-zA-Z0-9]{40}$'
0058 | 0001 | '[a-z]*.example.com'
0059 | 0001 | '^[a-z]\\d(?:,\\d)*'
0060 | 0001 | '</?\\s*[a-zA-Z0-9]+'
0061 | 0001 | '[^-a-zA-Z_\\.0-9:]+'
0062 | 0001 | u'\\xa7([0-9a-zA-Z])'
0063 | 0001 | "\\{([a-zA-Z\\']+)\\}"
0064 | 0001 | '.*?_([a-z]*)_pid\\d*$'
0065 | 0001 | '\\%\\([a-zA-Z0-9]+\\)'
0066 | 0001 | '^[a-zA-Z0-9_\\-\\.]+$'
0067 | 0001 | '^\\*(?P<table>[a-z]+)'
0068 | 0001 | '(.*)-[0-9_]+(.*[.]lib)'
0069 | 0001 | '.*film source: 29.97.*'
0070 | 0001 | '[a-zA-Z][a-zA-Z0-9_]*$'
0071 | 0001 | 'exampleLocalVar.*abcde'
0072 | 0001 | u'Python ([a-z0-9\\.]+)'
0073 | 0001 | '([A-Z]{2}\\w{8})\\w{24}'
0074 | 0001 | '\\bsource\\.([a-z+\\-]+)'
0075 | 0001 | '[-+*/!@$%^&=.a-zA-Z0-9_]+'
0076 | 0001 | '(<([a-z0-9\\:\\-_]+)\\s+>)'
0077 | 0001 | '^/[a-zA-Z0-9_-]{28}/file1$'
0078 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,}$'
0079 | 0001 | '<\\s*[a-z]+\\s*[\\w"=\\.]*>'
0080 | 0001 | '[a-zA-Z_:][\\w\\.\\-_:]*\\Z'
0081 | 0001 | '\\.[a-z]+-\\d{2}[mud]{0,3}$'
0082 | 0001 | '[a-zA-Z0-9]+(-[a-zA-Z0-9]+)?'
0083 | 0001 | '^@[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0084 | 0001 | '(\\s+|\\A)#([a-zA-Z0-9\\-_]*)\\b'
0085 | 0001 | 'Content-Type: ?([a-zA-Z0-9\\-/]*)'
0086 | 0001 | '[a-zA-Z0-9_\\.]+/[a-zA-Z0-9_\\.]+'
0087 | 0001 | '^[\\(\\[\\{]([a-zA-Z])[\\]\\}\\)]'
0088 | 0001 | '&([a-zA-Z][-.a-zA-Z0-9]*|#[0-9]*)?'
0089 | 0001 | '<meta http-equiv="Content-Type".*?>'
0090 | 0001 | u'\\s*(.+)\\s*:\\s*([-a-zA-Z]+)\\s*$'
0091 | 0001 | '[a-zA-Z0-9_]+:[a-zA-Z0-9_\\.\\-\\s]+'
0092 | 0001 | 'gene_name \\"([a-zA-Z-_\\/|.0-9]+)\\"'
0093 | 0001 | '\\s*(class|def)\\s+[a-zA-Z_][a-zA-Z0-9_]*'
0094 | 0001 | '\\$\\{([_a-zA-Z][_a-zA-Z0-9]+)(\\?[^}]+)?\\}'
0095 | 0001 | "([a-z_]+) '(.*)'\\t(.*)\\tLoc=<(.*):(.*):(.*)>"
0096 | 0001 | '^(svn\\+ssh|http|https|svn)://([-a-zA-Z0-9.]*@)(.*)$'
0097 | 0001 | '[a-zA-Z0-9 !@#$%^&*()\\-_=+\\\\|`[\\]{};:\'\\",\\.<>]'
0098 | 0001 | '^([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*)(\\.([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*))*$'
0099 | 0001 | '{{[ ]?placeholder[ ]?\\([ ]?"(?P<placeholder>[a-zA-Z0-9]+)"[ ]?\\)[ ]?}}'
0100 | 0001 | '(?P<prefix>^\\s*function\\s+)(?P<main>[^$]+[&a-zA-Z0-9_]+)(?P<suffix>.*$)'



cluster 6 stats:
nPatterns: 53.0
nProjects: 100
shortest: [^\w]
Features:

1: LIT|a literal character | 3.547169811320755
2: ADD|one-or-more repetition | 0.7735849056603774
3: CCC|custom character class | 0.5283018867924528
4: STR|start-of-line | 0.5283018867924528
5: WRD|[a-zA-Z0-9\_] | 0.49056603773584906
6: CG|a capture group | 0.37735849056603776
7: NCCC|negated CCC | 0.3584905660377358
8: END|end-of-line | 0.32075471698113206
9: DEC|any of: 0123456789 | 0.3018867924528302
10: KLE|zero-or-more repetition | 0.2830188679245283
11: ANY|any non-newline char | 0.11320754716981132
12: NWSP|any non-whitespace | 0.09433962264150944
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.09433962264150944
14: OR|logical or | 0.07547169811320754
15: QST|zero-or-one repetition | 0.05660377358490566
16: ENDZ|absolute end of string | 0.018867924528301886
17: LKA|matching sequence follows | 0.018867924528301886
18: NLKA|sequence doesn't follow  | 0.018867924528301886
19: OPT|options wrapper | 0.018867924528301886


0000 | 0012 | '(?m)^\\.'
0001 | 0011 | '^[\\d,]+$'
0002 | 0007 | '([\\t ]+)'
0003 | 0006 | '^..?\\...?'
0004 | 0006 | '\\([^)]*\\)'
0005 | 0005 | '[^\\w]'
0006 | 0005 | '(^[^\\.]+)\\.'
0007 | 0005 | '([\\w\\-]+\\s*:)(?!:)\\s*'
0008 | 0004 | u'^\\S+@\\S+\\.\\S+$'
0009 | 0003 | '[-/.: ]+'
0010 | 0003 | '^[\\w\\.\\-\\/]*$'
0011 | 0002 | '[^\\w\\-\\.\\/]+'
0012 | 0002 | '^\\${VISUAL[:}/]'
0013 | 0002 | '\\(live[^\\)]*\\)'
0014 | 0002 | '(^|\\\\n)([^\\\\]*)$'
0015 | 0002 | '^(Y|X|A|N) ([\\S ]+)$'
0016 | 0002 | 'repo\\=cdrom[\\:\\w\\d\\/]*'
0017 | 0002 | 'autoyast\\=[\\w\\d\\:\\.\\/]+'
0018 | 0001 | "[^<']*"
0019 | 0001 | '\\.0*$'
0020 | 0001 | '\\S+\\.a'
0021 | 0001 | '^[^\\.]+'
0022 | 0001 | '([^\\{])<'
0023 | 0001 | '[\\w\\.]+'
0024 | 0001 | '[^\\w\\-]'
0025 | 0001 | '^[^\\$]+$'
0026 | 0001 | '^ascii\\.'
0027 | 0001 | '[^\\w\\-]+'
0028 | 0001 | '^([-\\w]+)'
0029 | 0001 | '^[\\d.:]+$'
0030 | 0001 | '^lib[^-]+-'
0031 | 0001 | '^[^\\.]+\\.'
0032 | 0001 | 'LSID=[^\\n]+'
0033 | 0001 | '^[-\\.\\w]+$'
0034 | 0001 | '^\\$[\\w=]+$'
0035 | 0001 | '^\\.|~$|^\\$'
0036 | 0001 | '^[\\w,./=-]*$'
0037 | 0001 | '^\\-+\\+\\-+$'
0038 | 0001 | '^[\\w\\-\\_]+$'
0039 | 0001 | '.*\\r(?=[^\\n])'
0040 | 0001 | 'Name=([\\w\\.]+)'
0041 | 0001 | '[\\w\\d\\-_\\.]+'
0042 | 0001 | '[\\w\\d_\\.\\-]+'
0043 | 0001 | '^[^ :]+:[^ ]+ - '
0044 | 0001 | '([\\d]+) ([\\d]+)'
0045 | 0001 | 'Firefox/([\\d.]+)'
0046 | 0001 | '(\\\\\\*)([\\w ]+)'
0047 | 0001 | 'Mobile; rv:([\\d.]+)'
0048 | 0001 | '^\\.|^\\d\\.$|\\.\\.$'
0049 | 0001 | '\\d\\d-\\w\\w\\w-\\d\\d'
0050 | 0001 | '([\\w\\.-]+)\\s+([^(]+).*'
0051 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'
0052 | 0001 | '\\A\\s*(\\w[\\w\\d]*)\\s*\\Z'



cluster 7 stats:
nPatterns: 47.0
nProjects: 87
shortest: %\w+%
Features:

1: LIT|a literal character | 3.5319148936170213
2: ADD|one-or-more repetition | 1.446808510638298
3: CG|a capture group | 1.148936170212766
4: WRD|[a-zA-Z0-9\_] | 0.8723404255319149
5: STR|start-of-line | 0.3617021276595745
6: ANY|any non-newline char | 0.3404255319148936
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2765957446808511
8: END|end-of-line | 0.2127659574468085
9: KLE|zero-or-more repetition | 0.2127659574468085
10: QST|zero-or-one repetition | 0.2127659574468085
11: NCCC|negated CCC | 0.19148936170212766
12: OR|logical or | 0.19148936170212766
13: NCG|group without capturing | 0.1276595744680851
14: CCC|custom character class | 0.0851063829787234
15: LZY|as few reps as possible | 0.06382978723404255
16: DEC|any of: 0123456789 | 0.0425531914893617
17: WNW|word/non-word boundary | 0.0425531914893617
18: BKR|match the $i^{th}$ CG | 0.02127659574468085
19: DBB|$n\le x \le m$ repetition | 0.02127659574468085
20: NDEC|any non-decimal | 0.02127659574468085
21: NWRD|non-word chars | 0.02127659574468085
22: OPT|options wrapper | 0.02127659574468085
23: SNG|exactly n repetition | 0.02127659574468085


0000 | 0019 | '\\$(\\w+|\\{[^}]*\\})'
0001 | 0015 | '\\b\\w+\\b'
0002 | 0012 | '(?:(\\w+)=)?(.+)'
0003 | 0008 | '^(\\w){1,2}$'
0004 | 0004 | '10\\^\\{(.+)\\}'
0005 | 0003 | '(.+)=(.+)'
0006 | 0003 | '\\w+\\.rb'
0007 | 0003 | u'(?:(\\w+)=)?(.+)'
0008 | 0002 | '.py\\w?$'
0009 | 0002 | '(\\w+\\W*)'
0010 | 0002 | '^(.+?)_(.+)$'
0011 | 0002 | '^(\\-2|\\-{2})$'
0012 | 0002 | '^(Q|QQ)\\<(.+)\\>$'
0013 | 0002 | '^[^{]*\\}|\\{[^}]*$'
0014 | 0002 | '[$][{]\\d+:([^}]+)[}]'
0015 | 0002 | '^(}|struct\\s+\\w+);\\s*$'
0016 | 0001 | '%\\w+%'
0017 | 0001 | '(\\D+)'
0018 | 0001 | '^(\\-l)'
0019 | 0001 | ' ( +)|^ '
0020 | 0001 | '\\((\\w+)'
0021 | 0001 | '^(Sch|S)A'
0022 | 0001 | '^(\\w+):$'
0023 | 0001 | 'new(\\w+)'
0024 | 0001 | '{{(.+?)}}'
0025 | 0001 | '(\\{.+\\})'
0026 | 0001 | 'Audio: \\w+'
0027 | 0001 | '^\\s+(\\w+) ='
0028 | 0001 | 'Model:\\s+(.+)'
0029 | 0001 | '^(\\w+)\\([^;]'
0030 | 0001 | '^(\\w+)\\-\\-$'
0031 | 0001 | 'sChamber=(\\w)'
0032 | 0001 | '(\\A|\\s)#(\\w+)'
0033 | 0001 | '\\[\\[(.+)\\]\\]'
0034 | 0001 | '^(\\w+\\.)+\\w+$'
0035 | 0001 | 'class (\\w+?)\\('
0036 | 0001 | '/?\\w+/\\w+[.]xsd'
0037 | 0001 | '^### SALT: (\\w+)'
0038 | 0001 | '#(\\w+)|\\[(.+)\\]'
0039 | 0001 | 'file format: (\\w+)'
0040 | 0001 | '(\\w+)(?:\\:(\\w+))?'
0041 | 0001 | '\\s*(-?\\w+:\\w+)+,*'
0042 | 0001 | '<(\\w+)(\\s.*)?[^/]?>'
0043 | 0001 | '(\\w+)(?:=([^\\s;]+))?'
0044 | 0001 | '(?m)^uniform (?:\\w+) (\\w+)'
0045 | 0001 | '<(\\w+)(?: [^>]+)?>([^<>]*)</\\1>'
0046 | 0001 | '(\\d+)\\s+\\w+\\s+(\\w+)\\s+(\\w+)\\s+\\w+\\s+(\\w+).*'



cluster 8 stats:
nPatterns: 6.0
nProjects: 57
shortest: /
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 0.3333333333333333
3: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0030 | '/'
0001 | 0024 | '[*?[]'
0002 | 0008 | 'wuzzy'
0003 | 0002 | '</?u>'
0004 | 0002 | '[:@/]'
0005 | 0001 | '/?>'



cluster 9 stats:
nPatterns: 15.0
nProjects: 57
shortest: .*/([^?#]*)
Features:

1: LIT|a literal character | 8.066666666666666
2: CG|a capture group | 1.2
3: NCCC|negated CCC | 1.0666666666666667
4: ADD|one-or-more repetition | 0.8
5: KLE|zero-or-more repetition | 0.5333333333333333
6: STR|start-of-line | 0.13333333333333333
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.13333333333333333
8: ANY|any non-newline char | 0.06666666666666667
9: CCC|custom character class | 0.06666666666666667
10: DEC|any of: 0123456789 | 0.06666666666666667
11: END|end-of-line | 0.06666666666666667
12: LWB|at least n repetition | 0.06666666666666667
13: NWSP|any non-whitespace | 0.06666666666666667


0000 | 0035 | '<!\\s+([^<>]*)>'
0001 | 0009 | '\\\\line([iv]+){'
0002 | 0002 | '^([^:]*):[^:]*$'
0003 | 0002 | '<id>([^<]+)</id>'
0004 | 0001 | '.*/([^?#]*)'
0005 | 0001 | '&([^;\\s]+);'
0006 | 0001 | '([^:]+):(\\S+)'
0007 | 0001 | '^/r/([^/]{2,})'
0008 | 0001 | 'baseUrl>([^<]+)'
0009 | 0001 | '<Term>([^<]+)</Term>'
0010 | 0001 | 'name=\\"q\\">([^<]*)'
0011 | 0001 | '\\[\\[([^\\]]+)\\]\\]'
0012 | 0001 | 'DataText4>([^<]*)</td>'
0013 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'
0014 | 0001 | '<sync start="(\\d+)">([^<]*)</sync>'



cluster 10 stats:
nPatterns: 30.0
nProjects: 55
shortest: date
Features:

1: LIT|a literal character | 8.866666666666667
2: KLE|zero-or-more repetition | 0.2
3: ANY|any non-newline char | 0.16666666666666666
4: CG|a capture group | 0.06666666666666667
5: STR|start-of-line | 0.06666666666666667
6: WNW|word/non-word boundary | 0.06666666666666667
7: ADD|one-or-more repetition | 0.03333333333333333
8: CCC|custom character class | 0.03333333333333333
9: DEC|any of: 0123456789 | 0.03333333333333333
10: END|end-of-line | 0.03333333333333333
11: QST|zero-or-one repetition | 0.03333333333333333


0000 | 0013 | 'Control-'
0001 | 0011 | '/ParamTest'
0002 | 0004 | 'digest '
0003 | 0003 | ':title'
0004 | 0002 | 'date'
0005 | 0002 | 'test4'
0006 | 0002 | 'diff -'
0007 | 0002 | 'Resigned'
0008 | 0002 | 'processor'
0009 | 0002 | 'Audio Files'
0010 | 0001 | 'bvecs'
0011 | 0001 | 'tree='
0012 | 0001 | 'Village'
0013 | 0001 | 'Database'
0014 | 0001 | 'Resolved'
0015 | 0001 | '^Latexmk'
0016 | 0001 | 'orgname='
0017 | 0001 | 'Postponed'
0018 | 0001 | 'Response:'
0019 | 0001 | 'WordPress'
0020 | 0001 | 'child *::'
0021 | 0001 | 'wireless='
0022 | 0001 | 'More Games'
0023 | 0001 | 'google_sql'
0024 | 0001 | '/testing/.*'
0025 | 0001 | '\\/title\\/tt'
0026 | 0001 | '\\bmethod=text\\b'
0027 | 0001 | '^.*RLELossless.*$'
0028 | 0001 | 'smallint.* unsigned'
0029 | 0001 | 'Intel(\\(R\\))? (.*) processor [\\d]+MHz'



cluster 11 stats:
nPatterns: 16.0
nProjects: 52
shortest: ^$
Features:

1: LIT|a literal character | 2.25
2: STR|start-of-line | 0.6875
3: END|end-of-line | 0.25
4: ANY|any non-newline char | 0.125
5: ADD|one-or-more repetition | 0.0625


0000 | 0013 | 'Key-'
0001 | 0010 | 'foo'
0002 | 0007 | '^$'
0003 | 0004 | '^%'
0004 | 0003 | '^the '
0005 | 0002 | 'el6'
0006 | 0002 | '^.+$'
0007 | 0002 | '^bob'
0008 | 0001 | '^G'
0009 | 0001 | '^p'
0010 | 0001 | '^  '
0011 | 0001 | '^!$'
0012 | 0001 | 'try'
0013 | 0001 | '.htm'
0014 | 0001 | '^enum'
0015 | 0001 | '^eth$'



cluster 12 stats:
nPatterns: 7.0
nProjects: 49
shortest: [\x01-\x1f]
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 0.7142857142857143
4: CG|a capture group | 0.42857142857142855
5: ADD|one-or-more repetition | 0.2857142857142857


0000 | 0039 | '([\x80-\x9f])'
0001 | 0008 | '[\\x00-\\x08\\x0e-\\x1f]'
0002 | 0002 | '[\x01-\x1f]'
0003 | 0002 | '[\x02\x1f\x16\x0f\x03]'
0004 | 0001 | '([\\+\\-\\^]+)'
0005 | 0001 | '([\x00-\x7f]+)'
0006 | 0001 | '[\\x00\\/\\\\:\\*\\?\\"<>\\|]'



cluster 13 stats:
nPatterns: 19.0
nProjects: 46
shortest: -(?=-)
Features:

1: LIT|a literal character | 4.368421052631579
2: CG|a capture group | 0.631578947368421
3: NLKB|sequence doesn't precede | 0.42105263157894735
4: ANY|any non-newline char | 0.3157894736842105
5: NLKA|sequence doesn't follow  | 0.3157894736842105
6: OR|logical or | 0.3157894736842105
7: KLE|zero-or-more repetition | 0.2631578947368421
8: LZY|as few reps as possible | 0.15789473684210525
9: QST|zero-or-one repetition | 0.15789473684210525
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.15789473684210525
11: ADD|one-or-more repetition | 0.10526315789473684
12: END|end-of-line | 0.10526315789473684
13: LKB|matching sequence precedes | 0.10526315789473684
14: NDEC|any non-decimal | 0.10526315789473684
15: CCC|custom character class | 0.05263157894736842
16: LKA|matching sequence follows | 0.05263157894736842
17: OPT|options wrapper | 0.05263157894736842
18: STR|start-of-line | 0.05263157894736842


0000 | 0008 | '<\\?(?!xml)'
0001 | 0008 | '(a(?!\\s[abc]))'
0002 | 0006 | '<!--|-->'
0003 | 0005 | '(?<!\\\\),'
0004 | 0005 | '(<|>|\\+(?!\\s*\\+|$))'
0005 | 0004 | u'(?<!%)%s'
0006 | 0004 | '((?<!\\\\)(\\\\\\\\)*)\\.'
0007 | 0002 | '\\((H|S)\\)'
0008 | 0002 | "'(.*?)(?<!\\\\)',?"
0009 | 0002 | '(\\D)\\.(?!\\s)(\\D)'
0010 | 0001 | u'-(?=-)'
0011 | 0001 | '(?m)^(.)'
0012 | 0001 | '>(?!\\})'
0013 | 0001 | '(?<!\\\\)\\|'
0014 | 0001 | '\\.(txt|anno)$'
0015 | 0001 | '.+(?<=archives/)'
0016 | 0001 | '.+(?<=spektakl/)'
0017 | 0001 | '(?<!\\|)\\|(?!\\|)'
0018 | 0001 | 'r?u?\\\'(.*?)(?<!\\\\)\\\'|"(.*?)(?<!\\\\)"'



cluster 14 stats:
nPatterns: 3.0
nProjects: 44
shortest: shutdown_session\)\(
Features:

1: LIT|a literal character | 20.333333333333332
2: CCC|custom character class | 0.3333333333333333
3: CG|a capture group | 0.3333333333333333
4: KLE|zero-or-more repetition | 0.3333333333333333
5: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0038 | 'shutdown_session\\)\\('
0001 | 0004 | '[\\?\\&]gsessionid=(\\w*\\-)'
0002 | 0002 | 'Please choose another session'



cluster 15 stats:
nPatterns: 7.0
nProjects: 43
shortest: \*release_cmd\)\(
Features:

1: LIT|a literal character | 17.0
2: KLE|zero-or-more repetition | 0.7142857142857143
3: ANY|any non-newline char | 0.42857142857142855
4: CG|a capture group | 0.42857142857142855
5: RNG|chars within a range | 0.2857142857142857
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2857142857142857
7: CCC|custom character class | 0.14285714285714285
8: LZY|as few reps as possible | 0.14285714285714285
9: OR|logical or | 0.14285714285714285
10: QST|zero-or-one repetition | 0.14285714285714285
11: SNG|exactly n repetition | 0.14285714285714285


0000 | 0038 | 'alloc_fabric_acl\\)\\('
0001 | 0038 | 'get_fabric_proto_ident'
0002 | 0038 | 'release_fabric_acl\\)\\('
0003 | 0014 | '\\*release_cmd\\)\\('
0004 | 0003 | '.*brick_.*?(n?)_wg.*'
0005 | 0001 | 'release\\s*=\\s*True'
0006 | 0001 | '/(release|recording)/([0-9a-z\\-]{36})'



cluster 16 stats:
nPatterns: 2.0
nProjects: 41
shortest: (?m)^[ ]*(?=\n)
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LKA|matching sequence follows | 1.0
5: RNG|chars within a range | 1.0
6: LKB|matching sequence precedes | 0.5
7: OPT|options wrapper | 0.5
8: OR|logical or | 0.5
9: STR|start-of-line | 0.5


0000 | 0040 | '(?m)^[ ]*(?=\n)'
0001 | 0001 | '(?<=\\(|\\))[a-z|A-Z]*(?=\\()'



cluster 17 stats:
nPatterns: 11.0
nProjects: 39
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 13.454545454545455
2: KLE|zero-or-more repetition | 1.2727272727272727
3: LZY|as few reps as possible | 0.9090909090909091
4: ANY|any non-newline char | 0.6363636363636364
5: NCCC|negated CCC | 0.5454545454545454
6: CG|a capture group | 0.2727272727272727
7: OPT|options wrapper | 0.2727272727272727
8: QST|zero-or-one repetition | 0.2727272727272727
9: DEC|any of: 0123456789 | 0.18181818181818182
10: CCC|custom character class | 0.09090909090909091
11: NWRD|non-word chars | 0.09090909090909091
12: OR|logical or | 0.09090909090909091
13: WRD|[a-zA-Z0-9\_] | 0.09090909090909091


0000 | 0019 | '<[^>]*?>'
0001 | 0008 | '</?xsl:([^>]*)/?>?'
0002 | 0002 | '<pre>.*?</pre>'
0003 | 0002 | '<noscript>.*?</noscript>'
0004 | 0002 | '(?s)<failure (.*?)>.*?</failure>'
0005 | 0001 | '<(hr|br)[^>]*?/>'
0006 | 0001 | '<script.*?</script>'
0007 | 0001 | '(?ims)<tr[^>]*>.*?</tr>'
0008 | 0001 | '(?is)<tr [^>]*>.*?</tr>'
0009 | 0001 | '<style [\\W\\w\n]*?</style>'
0010 | 0001 | '<h\\d[^>]*>presenter notes</h\\d>'



cluster 18 stats:
nPatterns: 8.0
nProjects: 37
shortest: __(\w+?)__\s*=\s*(.*)
Features:

1: LIT|a literal character | 12.125
2: KLE|zero-or-more repetition | 2.75
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.375
4: CG|a capture group | 1.25
5: ADD|one-or-more repetition | 0.75
6: CCC|custom character class | 0.75
7: ANY|any non-newline char | 0.5
8: QST|zero-or-one repetition | 0.5
9: NCCC|negated CCC | 0.375
10: END|end-of-line | 0.25
11: WRD|[a-zA-Z0-9\_] | 0.25
12: DEC|any of: 0123456789 | 0.125
13: LZY|as few reps as possible | 0.125
14: SNG|exactly n repetition | 0.125
15: STR|start-of-line | 0.125
16: WNW|word/non-word boundary | 0.125


0000 | 0011 | 'encoding\\s*=\\s*[\'"]([^"\']+)["\']'
0001 | 0004 | '<base\\s+href\\s*=\\s*[\'"]?([^\'">]+)'
0002 | 0003 | '__(\\w+?)__\\s*=\\s*(.*)'
0003 | 0002 | 'BuildID\\s*=\\s*"(\\d{10})"'
0004 | 0002 | 'href\\s*=\\s*[\'"]?<([\\w\\.]+)>[\'"]?\\s*(,?)'
0005 | 0001 | '\\bplural\\s*=\\s*([^;]+)'
0006 | 0001 | 'Set TRANSCOMM\\s*=\\s*(.*)$'
0007 | 0001 | '^(\\s*iret)\\s*=\\s*.*CPU THROTTLE.*$'



cluster 19 stats:
nPatterns: 7.0
nProjects: 32
shortest: ((\d*?)\d{1,3})$
Features:

1: LIT|a literal character | 5.428571428571429
2: CG|a capture group | 1.7142857142857142
3: DEC|any of: 0123456789 | 1.5714285714285714
4: DBB|$n\le x \le m$ repetition | 1.4285714285714286
5: LZY|as few reps as possible | 0.8571428571428571
6: ANY|any non-newline char | 0.7142857142857143
7: ADD|one-or-more repetition | 0.42857142857142855
8: END|end-of-line | 0.42857142857142855
9: KLE|zero-or-more repetition | 0.42857142857142855
10: OR|logical or | 0.2857142857142857
11: SNG|exactly n repetition | 0.2857142857142857
12: NCG|group without capturing | 0.14285714285714285
13: OPT|options wrapper | 0.14285714285714285
14: STR|start-of-line | 0.14285714285714285
15: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0019 | '(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})'
0001 | 0009 | '^\\d{4}-\\d{1,2}-\\d{1,2}$'
0002 | 0007 | 'a(?:b|(c|e){1,2}?|d)+?(.)'
0003 | 0002 | '((\\d*?)\\d{1,3})$'
0004 | 0002 | '(?ms)By:\\s*<a .*?>(.+?)<'
0005 | 0001 | '/./(.+?)/season (\\d{1,2})$'
0006 | 0001 | 'inet addr:((\\d{1,3}\\.){3}\\d{1,3})'



cluster 20 stats:
nPatterns: 11.0
nProjects: 28
shortest: ^running .*
Features:

1: LIT|a literal character | 12.181818181818182
2: ANY|any non-newline char | 0.6363636363636364
3: CG|a capture group | 0.36363636363636365
4: STR|start-of-line | 0.36363636363636365
5: ADD|one-or-more repetition | 0.2727272727272727
6: END|end-of-line | 0.2727272727272727
7: KLE|zero-or-more repetition | 0.2727272727272727
8: CCC|custom character class | 0.18181818181818182
9: OR|logical or | 0.18181818181818182
10: DEC|any of: 0123456789 | 0.09090909090909091
11: NWSP|any non-whitespace | 0.09090909090909091
12: QST|zero-or-one repetition | 0.09090909090909091
13: RNG|chars within a range | 0.09090909090909091
14: WNW|word/non-word boundary | 0.09090909090909091
15: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.09090909090909091


0000 | 0017 | '^running .*'
0001 | 0004 | 'searchplugins\\/.+\\.xml'
0002 | 0003 | 'unzip: exiting'
0003 | 0003 | 'browser.search.order.([1-9])'
0004 | 0002 | '\\btrigexpand'
0005 | 0001 | '.*mandriva.*'
0006 | 0001 | '^(and)|(or)$'
0007 | 0001 | '^JSC::UString$'
0008 | 0001 | '^WTF::CString$'
0009 | 0001 | '%search_string%'
0010 | 0001 | 'yvsearch(\\d+|all)?:[\\s\\S]+'



cluster 21 stats:
nPatterns: 8.0
nProjects: 25
shortest: ^[ \t]*$
Features:

1: LIT|a literal character | 4.25
2: CCC|custom character class | 1.25
3: KLE|zero-or-more repetition | 1.125
4: STR|start-of-line | 0.375
5: END|end-of-line | 0.25
6: NCG|group without capturing | 0.25
7: ADD|one-or-more repetition | 0.125
8: CG|a capture group | 0.125
9: LKA|matching sequence follows | 0.125
10: LWB|at least n repetition | 0.125
11: NCCC|negated CCC | 0.125
12: OPT|options wrapper | 0.125
13: OR|logical or | 0.125
14: RNG|chars within a range | 0.125


0000 | 0014 | '^[ \t]*$'
0001 | 0003 | '[ \t]+(?=\n)'
0002 | 0002 | u'^[ -~]*$'
0003 | 0002 | '[ \\t]*\\.[ \\t]*'
0004 | 0001 | '[ \r\t]*\n[ \r\t]*'
0005 | 0001 | '[ \\t]*\\n([^\\r\\n])'
0006 | 0001 | '(?m)(?:^[ \\t]*\\n){1,}'
0007 | 0001 | '[ \\f\\t]*(?:\\r\\n|\\r|\\n)'



cluster 22 stats:
nPatterns: 4.0
nProjects: 22
shortest: ^([A-Z].*?\.(?:\s|$))
Features:

1: LIT|a literal character | 6.5
2: NCG|group without capturing | 1.25
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.25
4: OR|logical or | 1.0
5: ADD|one-or-more repetition | 0.75
6: END|end-of-line | 0.75
7: KLE|zero-or-more repetition | 0.75
8: ANY|any non-newline char | 0.5
9: LZY|as few reps as possible | 0.5
10: STR|start-of-line | 0.5
11: CCC|custom character class | 0.25
12: CG|a capture group | 0.25
13: RNG|chars within a range | 0.25


0000 | 0018 | '^\\s*blocktrans(?:\\s+|$)'
0001 | 0002 | '^([A-Z].*?\\.(?:\\s|$))'
0002 | 0001 | u'(?:\\.svg|\\.png|\\.jpg)'
0003 | 0001 | u'(?:\\s*).+?\\.(?:\\s+|$)'



cluster 23 stats:
nPatterns: 20.0
nProjects: 22
shortest: \shan(ds)ome\s
Features:

1: LIT|a literal character | 13.8
2: CG|a capture group | 1.45
3: ADD|one-or-more repetition | 1.3
4: KLE|zero-or-more repetition | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.95
6: DEC|any of: 0123456789 | 0.55
7: NWSP|any non-whitespace | 0.5
8: CCC|custom character class | 0.3
9: NCCC|negated CCC | 0.3
10: OR|logical or | 0.25
11: LZY|as few reps as possible | 0.2
12: ANY|any non-newline char | 0.15
13: STR|start-of-line | 0.15
14: QST|zero-or-one repetition | 0.1
15: END|end-of-line | 0.05
16: NCG|group without capturing | 0.05
17: PNG|named capture group | 0.05


0000 | 0004 | "__version__ = '([^']+)'"
0001 | 0002 | '[&?]versionId=([^&]+)($|=|&)'
0002 | 0002 | 'virtualenv_version = "(.*?)"'
0003 | 0002 | '\\s*__version__\\s*=\\s*(("([^"]|\\\\")*"|\'([^\']|\\\\\')*\'))'
0004 | 0001 | '\\shan(ds)ome\\s'
0005 | 0001 | '\tDLL Name: (\\S+)'
0006 | 0001 | "#([^']+?)# \\(qv\\)"
0007 | 0001 | '^Name\\s*:\\s*(\\S+)'
0008 | 0001 | "APACHEPATH.'([^']*?)'"
0009 | 0001 | '(\\S+) Version (\\S+)'
0010 | 0001 | '^Version\\s*:\\s*(\\S+)'
0011 | 0001 | '__version__ = (\\(.*?\\))'
0012 | 0001 | '\\[new branch\\]\\s+(\\S+)'
0013 | 0001 | '^MemTotal:\\s*(\\d*)\\s*kB'
0014 | 0001 | '#define\\s+(\\S+)\\s+(\\S+)'
0015 | 0001 | 'wx_major_version_number=(\\d+)'
0016 | 0001 | u'Apple (?:clang|LLVM) version (\\d+\\.\\d+)'
0017 | 0001 | 'ATLAS version (?P<version>\\d+[.]\\d+[.]\\d+)'
0018 | 0001 | 'git version (\\d+)\\.(\\d+)(\\.\\d+)?(\\.\\d+)?'
0019 | 0001 | '(\\S+)\\s*[.]\\s*setshape\\s*[(]\\s*(\\S+)\\s*[)]'



cluster 24 stats:
nPatterns: 10.0
nProjects: 20
shortest:   http://
Features:

1: LIT|a literal character | 12.1
2: QST|zero-or-one repetition | 0.7
3: ADD|one-or-more repetition | 0.6
4: STR|start-of-line | 0.6
5: END|end-of-line | 0.4
6: ANY|any non-newline char | 0.3
7: CCC|custom character class | 0.3
8: KLE|zero-or-more repetition | 0.3
9: NCCC|negated CCC | 0.3
10: NWSP|any non-whitespace | 0.3
11: CG|a capture group | 0.2
12: LKA|matching sequence follows | 0.1
13: LWB|at least n repetition | 0.1
14: LZY|as few reps as possible | 0.1
15: OR|logical or | 0.1
16: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1


0000 | 0006 | '^https?://\\S+$'
0001 | 0004 | '^https?://github.com/[^/]+/?$'
0002 | 0002 | '  http://'
0003 | 0002 | 'https?://.*'
0004 | 0001 | '(/s/https?:)/+'
0005 | 0001 | '^https?:\\/\\/.+'
0006 | 0001 | '(http://[^/]+):80'
0007 | 0001 | '^file\\:\\/\\/[^\\?]*'
0008 | 0001 | '^http://instagr\\.am/p/[\\S]*$'
0009 | 0001 | '^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)'



cluster 25 stats:
nPatterns: 15.0
nProjects: 19
shortest: ([A-Za-z0-9_]*)
Features:

1: LIT|a literal character | 16.0
2: RNG|chars within a range | 4.2
3: CCC|custom character class | 2.0
4: ADD|one-or-more repetition | 1.7333333333333334
5: CG|a capture group | 1.5333333333333334
6: KLE|zero-or-more repetition | 1.2
7: QST|zero-or-one repetition | 0.6666666666666666
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5333333333333333
9: END|end-of-line | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333
11: NCCC|negated CCC | 0.26666666666666666
12: ANY|any non-newline char | 0.13333333333333333
13: DEC|any of: 0123456789 | 0.13333333333333333
14: OR|logical or | 0.13333333333333333
15: DBB|$n\le x \le m$ repetition | 0.06666666666666667
16: NCG|group without capturing | 0.06666666666666667
17: WRD|[a-zA-Z0-9\_] | 0.06666666666666667


0000 | 0004 | '^[A-Z0-9][a-z0-9]*(-[A-Z0-9][a-z0-9]*)*$'
0001 | 0002 | '[A-Za-z_][A-Za-z0-9_]*$'
0002 | 0002 | '(?:const-)?([A-Za-z0-9]+)\\*?\\s+'
0003 | 0001 | '([A-Za-z0-9_]*)'
0004 | 0001 | "(^[A-Za-z\\' ]+$)"
0005 | 0001 | '^[A-Za-z0-9_]+\\('
0006 | 0001 | '^\\s*=[A-Za-z_]+\\w*.*$'
0007 | 0001 | '([A-Za-z]+)(\\[[A-Za-z,]+\\])?'
0008 | 0001 | '^[-a-z0-9_.]+@[-a-z0-9]+\\.+[a-z]{2,6}'
0009 | 0001 | '\\*(fore|back)ground:[ ]*(#[A-Za-z0-9]*)'
0010 | 0001 | "[A-Za-z0-9;/?:@&=+$,\\-_\\.!~*'\\(\\)%#]+$"
0011 | 0001 | '([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'
0012 | 0001 | '([A-Za-z0-9_]+\\s+)+([*A-Za-z0-9_::]+)\\s*\\([^)]*\\)'
0013 | 0001 | '([A-Za-z]+://)?(([A-Za-z0-9]+)(:[^:@]+)?@)?([^:/]+)(:[0-9]+)?(/.*)?'
0014 | 0001 | '(public|private|protected)\\s([A-Za-z0-9_]+\\s+)+([A-Za-z0-9_]+)\\s*\\([^)]*\\)'



cluster 26 stats:
nPatterns: 8.0
nProjects: 16
shortest: dev$
Features:

1: LIT|a literal character | 5.875
2: ADD|one-or-more repetition | 0.375
3: STR|start-of-line | 0.375
4: ANY|any non-newline char | 0.25
5: END|end-of-line | 0.25
6: NWSP|any non-whitespace | 0.125


0000 | 0005 | 'dev$'
0001 | 0003 | '^/dev/'
0002 | 0003 | u'\\.models$'
0003 | 0002 | 'default'
0004 | 0002 | '/dev/vd\\S+'
0005 | 0001 | '^nodev'
0006 | 0001 | '^def .+'
0007 | 0001 | ' sslmode=.+'



cluster 27 stats:
nPatterns: 3.0
nProjects: 14
shortest: (--|-|\+)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?
Features:

1: LIT|a literal character | 8.333333333333334
2: KLE|zero-or-more repetition | 3.0
3: PNG|named capture group | 2.6666666666666665
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: NCCC|negated CCC | 1.3333333333333333
6: ANY|any non-newline char | 1.0
7: CCC|custom character class | 1.0
8: RNG|chars within a range | 1.0
9: END|end-of-line | 0.6666666666666666
10: QST|zero-or-one repetition | 0.6666666666666666
11: ADD|one-or-more repetition | 0.3333333333333333
12: CG|a capture group | 0.3333333333333333
13: NCG|group without capturing | 0.3333333333333333
14: OR|logical or | 0.3333333333333333


0000 | 0013 | '(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'
0001 | 0003 | '(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$'
0002 | 0002 | '(--|-|\\+)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?'



cluster 28 stats:
nPatterns: 2.0
nProjects: 13
shortest: [@:]number
Features:

1: LIT|a literal character | 4.0
2: DEC|any of: 0123456789 | 1.0
3: PNG|named capture group | 1.0
4: CCC|custom character class | 0.5
5: END|end-of-line | 0.5
6: SNG|exactly n repetition | 0.5
7: STR|start-of-line | 0.5


0000 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0001 | 0001 | '[@:]number'



cluster 29 stats:
nPatterns: 9.0
nProjects: 13
shortest: <\s*/?\s*([^\s>]+)
Features:

1: LIT|a literal character | 7.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.7777777777777777
3: KLE|zero-or-more repetition | 2.6666666666666665
4: CG|a capture group | 1.7777777777777777
5: NCCC|negated CCC | 1.2222222222222223
6: ADD|one-or-more repetition | 1.0
7: QST|zero-or-one repetition | 0.4444444444444444
8: LZY|as few reps as possible | 0.3333333333333333
9: OR|logical or | 0.3333333333333333
10: ANY|any non-newline char | 0.2222222222222222
11: END|end-of-line | 0.2222222222222222
12: CCC|custom character class | 0.1111111111111111
13: DEC|any of: 0123456789 | 0.1111111111111111
14: NCG|group without capturing | 0.1111111111111111
15: RNG|chars within a range | 0.1111111111111111


0000 | 0006 | ',\\s*([^\\s;,\\n]+)(?:[^,]*?;\\s*q=([0-9.]*))?'
0001 | 0003 | '([^:#]*)\\s*:?\\s*([^#]*?)(\\s+#.*|$)'
0002 | 0001 | '<\\s*/?\\s*([^\\s>]+)'
0003 | 0001 | '\\s*([^\\s\\(\\)]*)\\s*'
0004 | 0001 | '\\s*(([^,]|(,\\s*\\d))+)'
0005 | 0001 | '\\sdo(\\s+\\|.*?\\|)?\\s*(#|$)'
0006 | 0001 | '<br />\\s*([^<]+)<br />\\s*([^<]+)<'
0007 | 0001 | '\\s*([^\\s\\(\\)"\\\'\\-=\\[\\]]+)\\s*'
0008 | 0001 | '\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/]+)\\s*'



cluster 30 stats:
nPatterns: 13.0
nProjects: 13
shortest: subsection{
Features:

1: LIT|a literal character | 16.46153846153846
2: KLE|zero-or-more repetition | 0.5384615384615384
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.46153846153846156
4: ADD|one-or-more repetition | 0.38461538461538464
5: CG|a capture group | 0.3076923076923077
6: ANY|any non-newline char | 0.23076923076923078
7: WRD|[a-zA-Z0-9\_] | 0.15384615384615385
8: LZY|as few reps as possible | 0.07692307692307693
9: NCG|group without capturing | 0.07692307692307693
10: NWSP|any non-whitespace | 0.07692307692307693
11: OR|logical or | 0.07692307692307693
12: STR|start-of-line | 0.07692307692307693


0000 | 0002 | 'Allocation:\\s+(\\S+.*)'
0001 | 0001 | 'subsection{'
0002 | 0001 | 'bill-actions'
0003 | 0001 | '.*SPARCstation-5'
0004 | 0001 | '\ndescription:\n'
0005 | 0001 | 'function( .+?)\\('
0006 | 0001 | 'Assertion failed: '
0007 | 0001 | 'Connection timed out'
0008 | 0001 | 'Connection reset by peer'
0009 | 0001 | '^function\\s*(\\w+)\\s*\\('
0010 | 0001 | '\\s*<TestFunction name=\\s*'
0011 | 0001 | '@(?:end|implementation|protocol)'
0012 | 0001 | 'X-Transmission-Session-Id:\\s*(\\w+)'



cluster 31 stats:
nPatterns: 12.0
nProjects: 13
shortest: ^invalid_netmask
Features:

1: LIT|a literal character | 18.083333333333332
2: KLE|zero-or-more repetition | 1.1666666666666667
3: NCCC|negated CCC | 1.0833333333333333
4: CG|a capture group | 0.8333333333333334
5: ADD|one-or-more repetition | 0.4166666666666667
6: ANY|any non-newline char | 0.25
7: WNW|word/non-word boundary | 0.25
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25
9: DEC|any of: 0123456789 | 0.08333333333333333
10: LZY|as few reps as possible | 0.08333333333333333
11: NLKA|sequence doesn't follow  | 0.08333333333333333
12: OR|logical or | 0.08333333333333333
13: PNG|named capture group | 0.08333333333333333
14: QST|zero-or-one repetition | 0.08333333333333333
15: STR|start-of-line | 0.08333333333333333


0000 | 0003 | '\\sfile:\\s+"([^"]*)"'
0001 | 0001 | '^invalid_netmask'
0002 | 0001 | ' *\\bservicefp="([^"]*)"'
0003 | 0001 | '<hostname name="([^"]*)"'
0004 | 0001 | 'L"\\\\0(\\d)" L"([^"]*)"'
0005 | 0001 | 'android:versionName="([^"]+)"'
0006 | 0001 | 'invalid cidr value: "([^"]+)"'
0007 | 0001 | 'id="__VIEWSTATE" value="([^"]*)"'
0008 | 0001 | '<a [^>]*href="([^"]+)"[^>]*>.*?</a>'
0009 | 0001 | '\\s*<?xml\\b.*\\bencoding="([^"]+)"'
0010 | 0001 | '<a href="(?!http|ftp|mailto|/).*</a>'
0011 | 0001 | '<img[^>]*src="(?P<url>http://[^"]*)"'



cluster 32 stats:
nPatterns: 5.0
nProjects: 12
shortest: #include\s+<([^>]+)>
Features:

1: LIT|a literal character | 16.6
2: KLE|zero-or-more repetition | 1.2
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: ADD|one-or-more repetition | 0.8
6: CCC|custom character class | 0.8
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.8
8: LZY|as few reps as possible | 0.2
9: NCCC|negated CCC | 0.2
10: NWSP|any non-whitespace | 0.2
11: STR|start-of-line | 0.2


0000 | 0008 | '\\{include\\s+file=.*?\\}'
0001 | 0001 | '#include\\s+<([^>]+)>'
0002 | 0001 | '^#include "(Support/.*)"'
0003 | 0001 | '\\#[\\s]*include[\\s]*[<"](\\S+)[">]'
0004 | 0001 | 'About\\((.*)\\).should_not_include\\((.*)\\)'



cluster 33 stats:
nPatterns: 7.0
nProjects: 12
shortest: \.\.\.
Features:

1: LIT|a literal character | 7.857142857142857
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
3: KLE|zero-or-more repetition | 0.7142857142857143
4: STR|start-of-line | 0.5714285714285714
5: ADD|one-or-more repetition | 0.2857142857142857
6: QST|zero-or-one repetition | 0.2857142857142857
7: CCC|custom character class | 0.14285714285714285
8: CG|a capture group | 0.14285714285714285
9: END|end-of-line | 0.14285714285714285
10: OR|logical or | 0.14285714285714285
11: PNG|named capture group | 0.14285714285714285


0000 | 0005 | '^\\.\\.\\s+autosummary::\\s*'
0001 | 0002 | '\\.\\.\\.'
0002 | 0001 | '^summary'
0003 | 0001 | '([[ ~^:?*]|\\.\\.)'
0004 | 0001 | '\\.?\\.?\\.\\.\\.\\.$'
0005 | 0001 | '^\\s*\\*(?P<fromStar>\\s*)'
0006 | 0001 | '^\\s*\\.\\.\\s+autosummary::\\s*'



cluster 34 stats:
nPatterns: 2.0
nProjects: 11
shortest: (\.pc|/bin/.+-config)$
Features:

1: LIT|a literal character | 19.5
2: ADD|one-or-more repetition | 0.5
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: END|end-of-line | 0.5
6: KLE|zero-or-more repetition | 0.5
7: OR|logical or | 0.5
8: STR|start-of-line | 0.5


0000 | 0010 | '^#! */usr/local/bin/python'
0001 | 0001 | '(\\.pc|/bin/.+-config)$'



cluster 35 stats:
nPatterns: 7.0
nProjects: 11
shortest: VERSION.*'(.+)'
Features:

1: LIT|a literal character | 22.857142857142858
2: ADD|one-or-more repetition | 1.2857142857142858
3: CG|a capture group | 1.2857142857142858
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.8571428571428571
5: KLE|zero-or-more repetition | 0.7142857142857143
6: CCC|custom character class | 0.5714285714285714
7: DEC|any of: 0123456789 | 0.5714285714285714
8: RNG|chars within a range | 0.5714285714285714
9: ANY|any non-newline char | 0.2857142857142857
10: END|end-of-line | 0.2857142857142857
11: NWRD|non-word chars | 0.2857142857142857
12: STR|start-of-line | 0.2857142857142857


0000 | 0003 | '#define\\WDB_VERSION_PATCH\\W(\\d+)'
0001 | 0003 | '^\\s*#define SSH_([A-Z_]+)\\s+([0-9x]*)\\s*$'
0002 | 0003 | '^\\s*public static final int ([A-Z_]+) = (\\d+);$'
0003 | 0001 | "VERSION.*'(.+)'"
0004 | 0001 | 'LL_VERSION_MINOR\\s=\\s([0-9]+)'
0005 | 0001 | 'const S32 LL_VERSION_MAJOR = (\\d+);'
0006 | 0001 | 'const S32 LL_VERSION_PATCH = (\\d+);'



cluster 36 stats:
nPatterns: 5.0
nProjects: 10
shortest: (".*?")|(\'.*?\')|(\s+)
Features:

1: LIT|a literal character | 11.0
2: KLE|zero-or-more repetition | 3.6
3: CG|a capture group | 2.2
4: LZY|as few reps as possible | 2.2
5: NCCC|negated CCC | 1.8
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.8
7: ADD|one-or-more repetition | 1.4
8: NCG|group without capturing | 1.4
9: OR|logical or | 1.4
10: ANY|any non-newline char | 1.0
11: STR|start-of-line | 0.4
12: CCC|custom character class | 0.2
13: ENDZ|absolute end of string | 0.2
14: QST|zero-or-one repetition | 0.2
15: RNG|chars within a range | 0.2


0000 | 0004 | '^\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\\s*'
0001 | 0004 | u'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\\s*'
0002 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'
0003 | 0001 | '("[^"]*?")|(\'[^\']*?\')'
0004 | 0001 | '([a-z]+)=(".*?"|[^,]*)(?:\\Z|, *)'



cluster 37 stats:
nPatterns: 2.0
nProjects: 9
shortest: ({)|(})
Features:

1: CG|a capture group | 2.0
2: LIT|a literal character | 2.0
3: OR|logical or | 1.0


0000 | 0009 | '({)|(})'
0001 | 0008 | '(a|(b))'



cluster 38 stats:
nPatterns: 5.0
nProjects: 9
shortest: 0D
Features:

1: LIT|a literal character | 3.4
2: STR|start-of-line | 0.2


0000 | 0003 | '0D'
0001 | 0003 | 'PM'
0002 | 0001 | '%PDF'
0003 | 0001 | 'SID='
0004 | 0001 | '^PDBID'



cluster 39 stats:
nPatterns: 5.0
nProjects: 9
shortest: (?i)python.exe
Features:

1: LIT|a literal character | 6.2
2: CG|a capture group | 1.4
3: WNW|word/non-word boundary | 1.4
4: OPT|options wrapper | 1.0
5: ADD|one-or-more repetition | 0.2
6: ANY|any non-newline char | 0.2
7: NCCC|negated CCC | 0.2


0000 | 0007 | '(?i)python.exe'
0001 | 0002 | '\\bexpires=([^;]+)(?i)'
0002 | 0001 | '(?i)\\b(T)(is)\\b'
0003 | 0001 | '(?i)\\b(T)(was)\\b'
0004 | 0001 | '(?i)\\b(can)(not)\\b'



cluster 40 stats:
nPatterns: 6.0
nProjects: 9
shortest: [uU][\'"]
Features:

1: LIT|a literal character | 8.166666666666666
2: CCC|custom character class | 1.5
3: CG|a capture group | 0.5
4: ANY|any non-newline char | 0.3333333333333333
5: SNG|exactly n repetition | 0.3333333333333333
6: ADD|one-or-more repetition | 0.16666666666666666
7: DEC|any of: 0123456789 | 0.16666666666666666
8: END|end-of-line | 0.16666666666666666
9: KLE|zero-or-more repetition | 0.16666666666666666
10: OR|logical or | 0.16666666666666666
11: RNG|chars within a range | 0.16666666666666666
12: STR|start-of-line | 0.16666666666666666


0000 | 0003 | '^<type [\'"](.+)[\'"]>$'
0001 | 0002 | '(iex|\\.{3})> '
0002 | 0001 | '[uU][\'"]'
0003 | 0001 | '[#][\\dA-F]{3}'
0004 | 0001 | '[][\\()<>@,:;".]'
0005 | 0001 | 'var-bind=[\'"](.*)["\']'



cluster 41 stats:
nPatterns: 4.0
nProjects: 8
shortest: OK
Features:

1: LIT|a literal character | 4.0
2: END|end-of-line | 0.25


0000 | 0005 | 'REBOL$'
0001 | 0001 | 'OK'
0002 | 0001 | 'BB01'
0003 | 0001 | 'BOOST'



cluster 42 stats:
nPatterns: 3.0
nProjects: 8
shortest: subject=
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 0.3333333333333333
3: ANY|any non-newline char | 0.3333333333333333
4: CG|a capture group | 0.3333333333333333
5: END|end-of-line | 0.3333333333333333
6: OR|logical or | 0.3333333333333333
7: QST|zero-or-one repetition | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0006 | '^Expected$'
0001 | 0001 | 'subject='
0002 | 0001 | '/project(s)?|//.+'



cluster 43 stats:
nPatterns: 4.0
nProjects: 8
shortest: ##(?P<key>.+?)=(?P<val>.+)
Features:

1: LIT|a literal character | 4.25
2: PNG|named capture group | 2.25
3: ADD|one-or-more repetition | 2.0
4: KLE|zero-or-more repetition | 1.0
5: ANY|any non-newline char | 0.75
6: NCCC|negated CCC | 0.75
7: WRD|[a-zA-Z0-9\_] | 0.75
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
9: CCC|custom character class | 0.25
10: END|end-of-line | 0.25
11: LZY|as few reps as possible | 0.25


0000 | 0004 | '(?P<table>\\w+)\\.(?P<field>\\w+)=(?P<value>.+)'
0001 | 0002 | '(?P<name>[\\w .-]+)\\s*\\(\\s*(?P<ver>[^\\s)]+)\\)$'
0002 | 0001 | '##(?P<key>.+?)=(?P<val>.+)'
0003 | 0001 | '(?P<name>[^=]+)="(?P<value>[^"]*)" *'



cluster 44 stats:
nPatterns: 4.0
nProjects: 7
shortest: [&<>"]
Features:

1: LIT|a literal character | 3.75
2: CCC|custom character class | 1.0
3: CG|a capture group | 0.75


0000 | 0004 | '[&<>"]'
0001 | 0001 | '([<>])'
0002 | 0001 | '([|&])'
0003 | 0001 | '([{}_#%&$])'



cluster 45 stats:
nPatterns: 3.0
nProjects: 7
shortest: [*]\[(?P<abbr>[^\]]*)\][ ]?:\s*(?P<title>.*)
Features:

1: LIT|a literal character | 17.333333333333332
2: KLE|zero-or-more repetition | 2.0
3: PNG|named capture group | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.3333333333333333
5: ADD|one-or-more repetition | 1.0
6: CCC|custom character class | 1.0
7: QST|zero-or-one repetition | 1.0
8: ANY|any non-newline char | 0.6666666666666666
9: CG|a capture group | 0.6666666666666666
10: NCCC|negated CCC | 0.6666666666666666
11: END|end-of-line | 0.3333333333333333
12: LZY|as few reps as possible | 0.3333333333333333
13: STR|start-of-line | 0.3333333333333333
14: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0005 | '[*]\\[(?P<abbr>[^\\]]*)\\][ ]?:\\s*(?P<title>.*)'
0001 | 0001 | '<meta property="og:title" content="(?P<title>[^"]*)" />'
0002 | 0001 | '^(?P<level>\\*+)(\\s+(?P<title>.*?))?\\s*(\\s(?P<tags>:[\\w_:@]+:))?$'



cluster 46 stats:
nPatterns: 7.0
nProjects: 7
shortest: ^\s*"\s*(?P<arg0>[^"]+)\s*"
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.8571428571428572
3: KLE|zero-or-more repetition | 1.7142857142857142
4: PNG|named capture group | 1.5714285714285714
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.2857142857142858
6: ANY|any non-newline char | 0.8571428571428571
7: DEC|any of: 0123456789 | 0.5714285714285714
8: LZY|as few reps as possible | 0.42857142857142855
9: STR|start-of-line | 0.42857142857142855
10: CCC|custom character class | 0.2857142857142857
11: CG|a capture group | 0.2857142857142857
12: NCCC|negated CCC | 0.2857142857142857
13: NWSP|any non-whitespace | 0.2857142857142857
14: END|end-of-line | 0.14285714285714285
15: OR|logical or | 0.14285714285714285


0000 | 0002 | 'Line:(?P<line>\\d+)\\s*(?P<message>.+)'
0001 | 0001 | '^\\s*"\\s*(?P<arg0>[^"]+)\\s*"'
0002 | 0001 | '(<s>\\s*(?P<sent>.+?)\\s*</s>)+'
0003 | 0001 | '^\\s*?([*]|/\\*\\*)(?P<line>.*?)'
0004 | 0001 | '.*:(?P<line>\\d+)[ \t]+(?P<message>.*)'
0005 | 0001 | '^\\s*(?P<word>\\S+)\\_(?P<tag>\\S+)\\s*$'
0006 | 0001 | '[^:]+:(?P<line>\\d+):\\d+: error: (?P<error>.+)'



cluster 47 stats:
nPatterns: 4.0
nProjects: 6
shortest: _h?480p\.mov$
Features:

1: LIT|a literal character | 12.25
2: CG|a capture group | 1.25
3: KLE|zero-or-more repetition | 0.75
4: QST|zero-or-one repetition | 0.75
5: ADD|one-or-more repetition | 0.5
6: ANY|any non-newline char | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
8: BKR|match the $i^{th}$ CG | 0.25
9: END|end-of-line | 0.25
10: OR|logical or | 0.25
11: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0002 | 'request\\.module'
0001 | 0002 | '%module(\\s*\\(.*\\))?\\s+("?)(.+)\\2'
0002 | 0001 | u'_h?480p\\.mov$'
0003 | 0001 | '(module|def|class) (\\w*)'



cluster 48 stats:
nPatterns: 5.0
nProjects: 6
shortest: FocusedApplication(.+)/
Features:

1: LIT|a literal character | 17.2
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: PNG|named capture group | 1.0
5: KLE|zero-or-more repetition | 0.8
6: LZY|as few reps as possible | 0.6
7: CG|a capture group | 0.4
8: NCCC|negated CCC | 0.4
9: DEC|any of: 0123456789 | 0.2
10: END|end-of-line | 0.2
11: OR|logical or | 0.2
12: STR|start-of-line | 0.2
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0002 | '^\\s*\\# DEBUG\\(filename=(?P<filename>.*?), lineno=(?P<lineno>\\d+)\\)$'
0001 | 0001 | 'FocusedApplication(.+)/'
0002 | 0001 | 'Working file: (?P<filename>.*)'
0003 | 0001 | '<img.+?src="(?P<filename>[^"]+?)"'
0004 | 0001 | '(|.*/)applications/(?P<appname>[^/]+)'



cluster 49 stats:
nPatterns: 2.0
nProjects: 5
shortest: @@BINARYDIR@@
Features:

1: LIT|a literal character | 14.0


0000 | 0004 | '@@BINARYDIR@@'
0001 | 0001 | 'PLPYTHON_LIBDIR'



cluster 50 stats:
nPatterns: 4.0
nProjects: 5
shortest: ^GROUP:
Features:

1: LIT|a literal character | 8.0
2: STR|start-of-line | 0.25


0000 | 0002 | 'ERROR FAIL'
0001 | 0001 | '^GROUP:'
0002 | 0001 | 'no EDMs'
0003 | 0001 | 'SENDMAIL='



cluster 51 stats:
nPatterns: 4.0
nProjects: 5
shortest: ^FINISH
Features:

1: LIT|a literal character | 8.0
2: STR|start-of-line | 0.5


0000 | 0002 | '^SESSIONID-'
0001 | 0001 | '^FINISH'
0002 | 0001 | '#EXTINF:'
0003 | 0001 | 'TIME_UTC'



cluster 52 stats:
nPatterns: 7.0
nProjects: 5
shortest:  $
Features:

1: LIT|a literal character | 2.0
2: END|end-of-line | 0.8571428571428571
3: ANY|any non-newline char | 0.14285714285714285


0000 | 0001 | ' $'
0001 | 0001 | '_$'
0002 | 0001 | '__'
0003 | 0001 | 'y$'
0004 | 0001 | '.py$'
0005 | 0001 | 'ife$'
0006 | 0001 | 'ooth$'



cluster 53 stats:
nPatterns: 4.0
nProjects: 5
shortest: \+vot\+
Features:

1: LIT|a literal character | 8.5
2: STR|start-of-line | 0.25


0000 | 0002 | '^Vendor:'
0001 | 0001 | 'Not Found'
0002 | 0001 | '\\+vot\\+'
0003 | 0001 | '404 Not Found'



cluster 54 stats:
nPatterns: 2.0
nProjects: 5
shortest: \s+([!{};:>+\(\)\],])
Features:

1: LIT|a literal character | 12.0
2: KLE|zero-or-more repetition | 1.0
3: NWRD|non-word chars | 1.0
4: ADD|one-or-more repetition | 0.5
5: ANY|any non-newline char | 0.5
6: CCC|custom character class | 0.5
7: CG|a capture group | 0.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0004 | '\\s+([!{};:>+\\(\\)\\],])'
0001 | 0001 | '\\${\\W*next.body\\(\\)\\W*}'



cluster 55 stats:
nPatterns: 3.0
nProjects: 5
shortest:  |,|"|=|[|]
Features:

1: LIT|a literal character | 6.0
2: OR|logical or | 1.0
3: CCC|custom character class | 0.3333333333333333
4: CG|a capture group | 0.3333333333333333


0000 | 0002 | '\\\\(t|n|r|"|\\\\)'
0001 | 0002 | ':|\\*|\\?|"|<|>|\\|'
0002 | 0001 | ' |,|"|=|[|]'



cluster 56 stats:
nPatterns: 3.0
nProjects: 5
shortest: \s*,?\s*new Array\(
Features:

1: LIT|a literal character | 12.666666666666666
2: ANY|any non-newline char | 1.3333333333333333
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
7: QST|zero-or-one repetition | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0003 | '\\s*,?\\s*new Array\\('
0001 | 0001 | '^new file mode (.+)'
0002 | 0001 | '.*Pop: (.+) Locus: (.+)'



cluster 57 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^[1-9]\d{2} ?\d{2}$
Features:

1: LIT|a literal character | 5.666666666666667
2: CCC|custom character class | 2.3333333333333335
3: RNG|chars within a range | 1.3333333333333333
4: END|end-of-line | 1.0
5: QST|zero-or-one repetition | 1.0
6: STR|start-of-line | 1.0
7: CG|a capture group | 0.6666666666666666
8: DEC|any of: 0123456789 | 0.6666666666666666
9: KLE|zero-or-more repetition | 0.6666666666666666
10: SNG|exactly n repetition | 0.6666666666666666
11: OR|logical or | 0.3333333333333333


0000 | 0003 | u'^[1-9]\\d{2} ?\\d{2}$'
0001 | 0002 | '^[-+]?([0][0-7,]*)$'
0002 | 0002 | '^[-+]?(0|[1-9][0-9,]*)$'



cluster 58 stats:
nPatterns: 6.0
nProjects: 5
shortest: Comments
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 0.16666666666666666
3: ANY|any non-newline char | 0.16666666666666666
4: DEC|any of: 0123456789 | 0.16666666666666666
5: KLE|zero-or-more repetition | 0.16666666666666666
6: LZY|as few reps as possible | 0.16666666666666666
7: WNW|word/non-word boundary | 0.16666666666666666
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.16666666666666666


0000 | 0001 | 'Comments'
0001 | 0001 | 'AuthenticAMD'
0002 | 0001 | 'Percent owned'
0003 | 0001 | '.*?Pentium III\\b'
0004 | 0001 | 'SEDE clienti:\\s\\d+'
0005 | 0001 | 'Library Persistent ID'



cluster 59 stats:
nPatterns: 5.0
nProjects: 5
shortest: WindowsError
Features:

1: LIT|a literal character | 16.8
2: ANY|any non-newline char | 0.4
3: STR|start-of-line | 0.4
4: CG|a capture group | 0.2
5: KLE|zero-or-more repetition | 0.2
6: LZY|as few reps as possible | 0.2
7: OPT|options wrapper | 0.2
8: QST|zero-or-one repetition | 0.2


0000 | 0002 | '(?sm)\\A.*?!( LaTeX Error:)?'
0001 | 0001 | 'WindowsError'
0002 | 0001 | '^@executable_path/'
0003 | 0001 | 'Error: unable to free'
0004 | 0001 | 'devicemanager.DMError'



cluster 60 stats:
nPatterns: 6.0
nProjects: 5
shortest: ["\(\) ,-]
Features:

1: LIT|a literal character | 8.5
2: CCC|custom character class | 0.6666666666666666
3: KLE|zero-or-more repetition | 0.3333333333333333
4: ADD|one-or-more repetition | 0.16666666666666666
5: ANY|any non-newline char | 0.16666666666666666
6: DEC|any of: 0123456789 | 0.16666666666666666


0000 | 0001 | '["\\(\\) ,-]'
0001 | 0001 | '[\\[\\]\\(\\);]'
0002 | 0001 | '[.:, !?+=\\(\\)/]+'
0003 | 0001 | 'arrResume\\[\\d*\\]'
0004 | 0001 | u'[_.,\\[\\]\\(\\):]'
0005 | 0001 | '\\[\\[Image:.*\\]\\]'



cluster 61 stats:
nPatterns: 4.0
nProjects: 5
shortest: ([0-9]+)[ \t]*([<>][=]?|=)[ \t]*([0-9]+)
Features:

1: LIT|a literal character | 9.5
2: CG|a capture group | 4.75
3: DEC|any of: 0123456789 | 3.5
4: SNG|exactly n repetition | 3.0
5: CCC|custom character class | 2.5
6: ADD|one-or-more repetition | 1.75
7: KLE|zero-or-more repetition | 1.0
8: RNG|chars within a range | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
10: QST|zero-or-one repetition | 0.5
11: OR|logical or | 0.25


0000 | 0003 | '(\\d{4})-(\\d{2})-(\\d{2})\\s+(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d+)?'
0001 | 0001 | '([0-9]+)[ \t]*([<>][=]?|=)[ \t]*([0-9]+)'
0002 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'
0003 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2}) / (\\d+)[\\s\t]*([0-9:, -]+)'



cluster 62 stats:
nPatterns: 2.0
nProjects: 4
shortest: [,;]
Features:

1: LIT|a literal character | 2.5
2: CCC|custom character class | 1.0
3: ANY|any non-newline char | 0.5


0000 | 0003 | '[,;]'
0001 | 0001 | '[,;:].'



cluster 63 stats:
nPatterns: 2.0
nProjects: 4
shortest: Debian
Features:

1: LIT|a literal character | 7.5
2: STR|start-of-line | 0.5


0000 | 0002 | 'Debian'
0001 | 0001 | '^/cgi-bin/'



cluster 64 stats:
nPatterns: 5.0
nProjects: 4
shortest: TA
Features:

1: LIT|a literal character | 4.6
2: STR|start-of-line | 0.2


0000 | 0001 | 'TA'
0001 | 0001 | 'LGA'
0002 | 0001 | 'ARRAY'
0003 | 0001 | 'FLOAT'
0004 | 0001 | '^DATABASE'



cluster 65 stats:
nPatterns: 2.0
nProjects: 4
shortest: \s+Flags for (\S.+):$
Features:

1: LIT|a literal character | 13.5
2: ADD|one-or-more repetition | 1.5
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: END|end-of-line | 0.5
7: KLE|zero-or-more repetition | 0.5
8: NWSP|any non-whitespace | 0.5


0000 | 0003 | '\\s+Flags for (\\S.+):$'
0001 | 0001 | '//\\s+FaketimeFlags:(.*)'



cluster 66 stats:
nPatterns: 2.0
nProjects: 4
shortest: ([\w\-\.]+@[\w\-\.]+)
Features:

1: LIT|a literal character | 6.5
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: CG|a capture group | 1.0
6: ANY|any non-newline char | 0.5
7: KLE|zero-or-more repetition | 0.5
8: LZY|as few reps as possible | 0.5


0000 | 0003 | 'From .*?([\\w.]+@[\\w.]+)'
0001 | 0001 | '([\\w\\-\\.]+@[\\w\\-\\.]+)'



cluster 67 stats:
nPatterns: 4.0
nProjects: 4
shortest: HEADER
Features:

1: LIT|a literal character | 10.5
2: CG|a capture group | 0.25
3: OR|logical or | 0.25


0000 | 0001 | 'HEADER'
0001 | 0001 | 'CONFDEFS'
0002 | 0001 | '(CONECT|MASTER)'
0003 | 0001 | 'TEST-UNEXPECTED-'



cluster 68 stats:
nPatterns: 2.0
nProjects: 4
shortest: (?:W/)?"((?:\\.|[^"])*)"
Features:

1: LIT|a literal character | 5.5
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.5
4: NCG|group without capturing | 1.5
5: OR|logical or | 1.5
6: CG|a capture group | 1.0
7: LZY|as few reps as possible | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: ADD|one-or-more repetition | 0.5
10: CCC|custom character class | 0.5
11: NCCC|negated CCC | 0.5
12: QST|zero-or-one repetition | 0.5


0000 | 0004 | u'(?:W/)?"((?:\\\\.|[^"])*)"'
0001 | 0001 | u'<.*?>|((?:\\w[-\\w]*|&.*?;)+)'



cluster 69 stats:
nPatterns: 3.0
nProjects: 4
shortest: <uuid>.*</uuid>
Features:

1: LIT|a literal character | 12.333333333333334
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.6666666666666666
4: CG|a capture group | 0.3333333333333333
5: LZY|as few reps as possible | 0.3333333333333333


0000 | 0002 | ':( *\n     \\|\n)\x02'
0001 | 0001 | '<uuid>.*</uuid>'
0002 | 0001 | '<uuid.*?uuid>\\n  '



cluster 70 stats:
nPatterns: 5.0
nProjects: 4
shortest: [QA]?[:;.]?\d\d
Features:

1: DEC|any of: 0123456789 | 6.8
2: LIT|a literal character | 6.6
3: CG|a capture group | 1.8
4: CCC|custom character class | 1.2
5: ADD|one-or-more repetition | 0.6
6: QST|zero-or-one repetition | 0.6
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4
8: ANY|any non-newline char | 0.2
9: END|end-of-line | 0.2
10: KLE|zero-or-more repetition | 0.2
11: NWSP|any non-whitespace | 0.2
12: STR|start-of-line | 0.2


0000 | 0001 | '[QA]?[:;.]?\\d\\d'
0001 | 0001 | '^func_i\\d\\d\\d\\d$'
0002 | 0001 | '\\[commit=(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)\\]'
0003 | 0001 | '.*(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)'
0004 | 0001 | '#date(\\s+(\\S+))?\\s+(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)'



cluster 71 stats:
nPatterns: 2.0
nProjects: 3
shortest: 127.0.0.1:0
Features:

1: LIT|a literal character | 6.5
2: ANY|any non-newline char | 1.5
3: CCC|custom character class | 0.5
4: CG|a capture group | 0.5
5: NDEC|any non-decimal | 0.5


0000 | 0002 | '127.0.0.1:0'
0001 | 0001 | '(\\D[123])_D'



cluster 72 stats:
nPatterns: 3.0
nProjects: 3
shortest: irr.ru
Features:

1: LIT|a literal character | 7.0
2: END|end-of-line | 0.6666666666666666
3: STR|start-of-line | 0.6666666666666666
4: ANY|any non-newline char | 0.3333333333333333
5: CG|a capture group | 0.3333333333333333
6: OR|logical or | 0.3333333333333333


0000 | 0001 | 'irr.ru'
0001 | 0001 | "':true,"
0002 | 0001 | '(^True$|^False$)'



cluster 73 stats:
nPatterns: 2.0
nProjects: 3
shortest: </TEXT>[\s\S]*
Features:

1: LIT|a literal character | 5.5
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NWSP|any non-whitespace | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: LZY|as few reps as possible | 0.5


0000 | 0002 | '\\/\\*[\\s\\S]*?\\*\\/'
0001 | 0001 | '</TEXT>[\\s\\S]*'



cluster 74 stats:
nPatterns: 2.0
nProjects: 3
shortest: (?m)&mediaURL=([^&]+)
Features:

1: LIT|a literal character | 15.5
2: ANY|any non-newline char | 1.0
3: ADD|one-or-more repetition | 0.5
4: CG|a capture group | 0.5
5: NCCC|negated CCC | 0.5
6: OPT|options wrapper | 0.5


0000 | 0002 | '(?m)&mediaURL=([^&]+)'
0001 | 0001 | 'org.mpris.MediaPlayer2'



cluster 75 stats:
nPatterns: 3.0
nProjects: 3
shortest: internal log
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 0.6666666666666666
3: END|end-of-line | 0.6666666666666666
4: NCCC|negated CCC | 0.6666666666666666
5: CG|a capture group | 0.3333333333333333
6: NCG|group without capturing | 0.3333333333333333
7: QST|zero-or-one repetition | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0001 | 'internal log'
0001 | 0001 | '^/var/log/[^/]+$'
0002 | 0001 | '/prefs(?:/([^/]+))?$'



cluster 76 stats:
nPatterns: 4.0
nProjects: 3
shortest: .+?/Misc
Features:

1: LIT|a literal character | 5.25
2: ADD|one-or-more repetition | 1.25
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 0.75
5: KLE|zero-or-more repetition | 0.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
7: CCC|custom character class | 0.25
8: LZY|as few reps as possible | 0.25
9: STR|start-of-line | 0.25
10: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0001 | '.+?/Misc'
0001 | 0001 | '^class .+'
0002 | 0001 | 'f[lie]=.+'
0003 | 0001 | '(\\s)*class(\\s)+(\\w)+.*'



cluster 77 stats:
nPatterns: 3.0
nProjects: 3
shortest: .*Firefox/(\d*).*
Features:

1: LIT|a literal character | 4.666666666666667
2: KLE|zero-or-more repetition | 2.3333333333333335
3: CG|a capture group | 1.6666666666666667
4: DEC|any of: 0123456789 | 1.3333333333333333
5: QST|zero-or-one repetition | 1.0
6: ANY|any non-newline char | 0.6666666666666666
7: CCC|custom character class | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333
9: NCCC|negated CCC | 0.3333333333333333


0000 | 0001 | '.*Firefox/(\\d*).*'
0001 | 0001 | '-?(\\d*)([.]?\\d*)?'
0002 | 0001 | '\\[([^]]*)\\]:(\\d*)$'



cluster 78 stats:
nPatterns: 3.0
nProjects: 3
shortest: <pre><a name="foo-1">
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 0.6666666666666666
4: PNG|named capture group | 0.6666666666666666
5: ADD|one-or-more repetition | 0.3333333333333333
6: LZY|as few reps as possible | 0.3333333333333333


0000 | 0001 | '<pre><a name="foo-1">'
0001 | 0001 | '.*://(?P<namespace>.+)'
0002 | 0001 | 'author: (?P<name>.*?);'



cluster 79 stats:
nPatterns: 2.0
nProjects: 3
shortest: <table id="showall" .*?</table>
Features:

1: LIT|a literal character | 33.5
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.5
4: LZY|as few reps as possible | 0.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '\\s*<table id="datatype-pseudotypes-table">'
0001 | 0001 | '<table id="showall" .*?</table>'



cluster 80 stats:
nPatterns: 2.0
nProjects: 3
shortest: This is file for test_formatted_disk.
Features:

1: LIT|a literal character | 34.5
2: ANY|any non-newline char | 0.5
3: CG|a capture group | 0.5
4: OR|logical or | 0.5


0000 | 0002 | 'This is file for test_formatted_disk.'
0001 | 0001 | 'This is (pdfTeXk|latex2e|latex|XeTeXk)'



cluster 81 stats:
nPatterns: 3.0
nProjects: 3
shortest: ^\s*Tag\s+Name\s+VR\s+VM\s*$
Features:

1: LIT|a literal character | 9.666666666666666
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.6666666666666665
3: ADD|one-or-more repetition | 3.0
4: CG|a capture group | 2.0
5: KLE|zero-or-more repetition | 1.3333333333333333
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: ANY|any non-newline char | 0.3333333333333333
9: NCCC|negated CCC | 0.3333333333333333
10: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0002 | '^(\\s+\\(copy-func\\s+)(\\w+)(.*)$'
0001 | 0002 | '^(\\s+\\(c-name\\s+)([^\\s]+)(\\s*\\))$'
0002 | 0001 | '^\\s*Tag\\s+Name\\s+VR\\s+VM\\s*$'



cluster 82 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?<=Authority: ).+
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: ADD|one-or-more repetition | 0.5
5: CCC|custom character class | 0.5
6: LKA|matching sequence follows | 0.5
7: LKB|matching sequence precedes | 0.5
8: OR|logical or | 0.5
9: STR|start-of-line | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '(?<=Authority: ).+'
0001 | 0001 | '[;\\s\\/\\+]$|^$|(?=: ).'



cluster 83 stats:
nPatterns: 2.0
nProjects: 2
shortest: \\begin{tabularx}
Features:

1: LIT|a literal character | 18.0
2: ADD|one-or-more repetition | 0.5
3: CG|a capture group | 0.5
4: NWSP|any non-whitespace | 0.5
5: STR|start-of-line | 0.5


0000 | 0001 | '\\\\begin{tabularx}'
0001 | 0001 | '^#!XRCED:begin-block:(\\S+)'



cluster 84 stats:
nPatterns: 2.0
nProjects: 2
shortest: \.egg(?:-info)?(?:/|$)
Features:

1: LIT|a literal character | 11.0
2: NCG|group without capturing | 2.0
3: QST|zero-or-one repetition | 1.5
4: END|end-of-line | 1.0
5: ADD|one-or-more repetition | 0.5
6: ANY|any non-newline char | 0.5
7: OR|logical or | 0.5


0000 | 0001 | '\\.egg(?:-info)?(?:/|$)'
0001 | 0001 | '/about(?:_trac)?(?:/.+)?$'



cluster 85 stats:
nPatterns: 2.0
nProjects: 2
shortest: [^{}]*{[^{}]*}[^{}]*
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 2.5
3: NCCC|negated CCC | 2.5
4: NCG|group without capturing | 1.0
5: ADD|one-or-more repetition | 0.5
6: CG|a capture group | 0.5
7: OR|logical or | 0.5
8: QST|zero-or-one repetition | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '[^{}]*{[^{}]*}[^{}]*'
0001 | 0001 | '((?:[^,{}]|(?:{[^{}]*}))+),?\\s*'



cluster 86 stats:
nPatterns: 2.0
nProjects: 2
shortest: (build_git_sha = ")(\w)*
Features:

1: LIT|a literal character | 17.5
2: CG|a capture group | 1.5
3: KLE|zero-or-more repetition | 1.0
4: ADD|one-or-more repetition | 0.5
5: ANY|any non-newline char | 0.5
6: NCCC|negated CCC | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '(build_git_sha = ")(\\w)*'
0001 | 0001 | 'build/bdist\\.[^/]+/egg/(.*)'



cluster 87 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^Table B.1.? .* Private .*$
Features:

1: LIT|a literal character | 22.0
2: ANY|any non-newline char | 2.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0
6: QST|zero-or-one repetition | 0.5


0000 | 0001 | '^Table B.1.? .* Private .*$'
0001 | 0001 | '^WebCore::KURLGooglePrivate$'



cluster 88 stats:
nPatterns: 2.0
nProjects: 2
shortest: <td class="checkbox"
Features:

1: LIT|a literal character | 27.0
2: ANY|any non-newline char | 0.5
3: KLE|zero-or-more repetition | 0.5
4: LZY|as few reps as possible | 0.5


0000 | 0001 | '<td class="checkbox"'
0001 | 0001 | '<div class="filmo-episodes">.*?</div>'



cluster 89 stats:
nPatterns: 2.0
nProjects: 2
shortest: (.{8})(.{4})(.{4})(.{4})(.{12})
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 4.0
3: ANY|any non-newline char | 3.5
4: SNG|exactly n repetition | 3.0
5: NWRD|non-word chars | 1.5
6: KLE|zero-or-more repetition | 1.0
7: LZY|as few reps as possible | 0.5


0000 | 0001 | '(.{8})(.{4})(.{4})(.{4})(.{12})'
0001 | 0001 | '(#\trenamed:\\W{4})(.*?)\\W->\\W(.*)'



cluster 90 stats:
nPatterns: 2.0
nProjects: 2
shortest: attempt model run (.*?) one more 
Features:

1: LIT|a literal character | 28.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0002 | 'attempt model run (.*?) one more '
0001 | 0002 | 'model run (.*?) commencing on node'



cluster 91 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?:aka) <em>"(.*?)(<br>|<\/td>)
Features:

1: LIT|a literal character | 12.0
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.5
4: KLE|zero-or-more repetition | 1.5
5: LZY|as few reps as possible | 1.5
6: NCG|group without capturing | 0.5
7: NLKA|sequence doesn't follow  | 0.5
8: NLKB|sequence doesn't precede | 0.5
9: OPT|options wrapper | 0.5
10: OR|logical or | 0.5


0000 | 0001 | '(?:aka) <em>"(.*?)(<br>|<\\/td>)'
0001 | 0001 | '(.*?)(<\\%(?!\\%).*?(?<!\\%)\\%>)(?sm)'



cluster 92 stats:
nPatterns: 2.0
nProjects: 2
shortest: \s*([^;# \t\n\r\f\v]+)
Features:

1: LIT|a literal character | 9.5
2: KLE|zero-or-more repetition | 2.0
3: NCCC|negated CCC | 1.5
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
5: ADD|one-or-more repetition | 1.0
6: VWSP|matches U+000B | 1.0
7: CG|a capture group | 0.5


0000 | 0001 | '\\s*([^;# \\t\\n\\r\\f\\v]+)'
0001 | 0001 | '[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*"[^"]*"'



cluster 93 stats:
nPatterns: 3.0
nProjects: 2
shortest: \[.*\d+ tests.*\n
Features:

1: LIT|a literal character | 14.666666666666666
2: ANY|any non-newline char | 1.6666666666666667
3: KLE|zero-or-more repetition | 1.3333333333333333
4: ADD|one-or-more repetition | 0.6666666666666666
5: DEC|any of: 0123456789 | 0.3333333333333333


0000 | 0002 | '\\[.*\\d+ tests.*\\n'
0001 | 0002 | '\\(used in test .+\\) '
0002 | 0002 | '\\[.* test environment .*\\n'



cluster 94 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(?P<x>\d+)?(?:x(?P<y>\d+))?$
Features:

1: ADD|one-or-more repetition | 3.0
2: PNG|named capture group | 3.0
3: DEC|any of: 0123456789 | 2.5
4: LIT|a literal character | 2.0
5: END|end-of-line | 1.0
6: QST|zero-or-one repetition | 1.0
7: STR|start-of-line | 1.0
8: NCG|group without capturing | 0.5
9: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'
0001 | 0001 | '^(?P<z>\\d+)/(?P<x>\\d+)/(?P<y>\\d+)\\.(?P<e>\\w+)$'



cluster 95 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\s*\"(.+)\"\s*,\s*\"(.+)\"\s*$
Features:

1: LIT|a literal character | 7.5
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.5
4: CG|a capture group | 2.0
5: ADD|one-or-more repetition | 1.5
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 0.5
8: NCCC|negated CCC | 0.5
9: NWSP|any non-whitespace | 0.5
10: STR|start-of-line | 0.5


0000 | 0001 | '^\\s*\\"(.+)\\"\\s*,\\s*\\"(.+)\\"\\s*$'
0001 | 0001 | 'pref\\(\\"([^\\"]+)\\"\\s*,\\s*(\\S*)\\s*\\)'



cluster 96 stats:
nPatterns: 2.0
nProjects: 2
shortest: (\w+)\((-?\d+.?\d*),(-?\d+.?\d*)\)
Features:

1: LIT|a literal character | 13.5
2: CG|a capture group | 3.0
3: DEC|any of: 0123456789 | 2.5
4: QST|zero-or-one repetition | 2.5
5: ADD|one-or-more repetition | 2.0
6: KLE|zero-or-more repetition | 2.0
7: ANY|any non-newline char | 1.0
8: NCCC|negated CCC | 1.0
9: END|end-of-line | 0.5
10: STR|start-of-line | 0.5
11: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '(\\w+)\\((-?\\d+.?\\d*),(-?\\d+.?\\d*)\\)'
0001 | 0001 | '^reporter:counter:([^,]*),([^,]*),(-?\\d+)$'



cluster 97 stats:
nPatterns: 2.0
nProjects: 2
shortest: javascript:SndSelf\((\d+),(\d+)\);
Features:

1: LIT|a literal character | 24.0
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: DEC|any of: 0123456789 | 1.5
5: ANY|any non-newline char | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'javascript:SndSelf\\((\\d+),(\\d+)\\);'
0001 | 0001 | '.*DCHECK\\(.*args\\.length\\(\\) == (\\d+)\\);'



cluster 98 stats:
nPatterns: 3.0
nProjects: 2
shortest: "v8_revision": "123455"
Features:

1: LIT|a literal character | 14.333333333333334
2: ADD|one-or-more repetition | 0.6666666666666666
3: CCC|custom character class | 0.3333333333333333
4: CG|a capture group | 0.3333333333333333
5: DEC|any of: 0123456789 | 0.3333333333333333
6: LKA|matching sequence follows | 0.3333333333333333
7: LKB|matching sequence precedes | 0.3333333333333333
8: PNG|named capture group | 0.3333333333333333
9: RNG|chars within a range | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '"v8_revision": "123455"'
0001 | 0001 | '^r(?P<svn_revision>\\d+)'
0002 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'



cluster 99 stats:
nPatterns: 3.0
nProjects: 2
shortest: [$_]?(?:is|has)($|[A-Z_])
Features:

1: LIT|a literal character | 11.666666666666666
2: CCC|custom character class | 2.0
3: CG|a capture group | 1.3333333333333333
4: OR|logical or | 1.3333333333333333
5: RNG|chars within a range | 1.0
6: END|end-of-line | 0.6666666666666666
7: KLE|zero-or-more repetition | 0.6666666666666666
8: NCG|group without capturing | 0.6666666666666666
9: QST|zero-or-one repetition | 0.6666666666666666
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
11: ADD|one-or-more repetition | 0.3333333333333333


0000 | 0001 | '[$_]?(?:is|has)($|[A-Z_])'
0001 | 0001 | '[$_]?(?:set|add)($|[A-Z_])'
0002 | 0001 | 'libbcc_([A-Z_]+)\\s*:=\\s*([01])'



cluster 100 stats:
nPatterns: 3.0
nProjects: 2
shortest: .*(?P<urn>urn\:nbn\:.*?)\<
Features:

1: LIT|a literal character | 8.333333333333334
2: KLE|zero-or-more repetition | 3.3333333333333335
3: ANY|any non-newline char | 1.3333333333333333
4: PNG|named capture group | 1.0
5: END|end-of-line | 0.6666666666666666
6: STR|start-of-line | 0.6666666666666666
7: LZY|as few reps as possible | 0.3333333333333333


0000 | 0001 | '.*(?P<urn>urn\\:nbn\\:.*?)\\<'
0001 | 0001 | '^} *\\/\\* *(?P<n>.*) *\\*\\/$'
0002 | 0001 | '^ *\\/\\* *(?P<msg>.*) \\*\\/ *$'



cluster 101 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(.*) ?\[([^ ]*) \+(0x[0-9A-F]{1,8})\](.*)$
Features:

1: LIT|a literal character | 14.5
2: CG|a capture group | 4.5
3: KLE|zero-or-more repetition | 3.5
4: RNG|chars within a range | 2.5
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 1.5
7: DBB|$n\le x \le m$ repetition | 1.0
8: END|end-of-line | 1.0
9: NCCC|negated CCC | 1.0
10: QST|zero-or-one repetition | 1.0
11: STR|start-of-line | 1.0


0000 | 0002 | '^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'
0001 | 0002 | '^([ \\|0-9-]*)(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'



cluster 102 stats:
nPatterns: 4.0
nProjects: 2
shortest: ^(?P<download_dir>.*/)[^/]*$
Features:

1: LIT|a literal character | 19.0
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.75
4: CG|a capture group | 0.5
5: OR|logical or | 0.5
6: ADD|one-or-more repetition | 0.25
7: CCC|custom character class | 0.25
8: END|end-of-line | 0.25
9: NCCC|negated CCC | 0.25
10: NWSP|any non-whitespace | 0.25
11: PNG|named capture group | 0.25
12: STR|start-of-line | 0.25


0000 | 0001 | '^(?P<download_dir>.*/)[^/]*$'
0001 | 0001 | '[-d]  (setuptools|distribute)'
0002 | 0001 | 'Downloading.*setuptools.*egg\n'
0003 | 0001 | 'Got (setuptools|distribute) \\S+'



cluster 103 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^((?:\[?\S+@[^$#%]+)[$#%])(.*\n?)
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 5.5
3: NWSP|any non-whitespace | 3.5
4: QST|zero-or-one repetition | 2.5
5: CCC|custom character class | 2.0
6: CG|a capture group | 2.0
7: NCG|group without capturing | 2.0
8: ANY|any non-newline char | 1.5
9: KLE|zero-or-more repetition | 1.5
10: NCCC|negated CCC | 1.0
11: STR|start-of-line | 1.0
12: LZY|as few reps as possible | 0.5
13: OR|logical or | 0.5
14: WRD|[a-zA-Z0-9\_] | 0.5
15: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '^((?:\\(\\S+\\))?(?:|sh\\S*?|\\w+\\S+[@:]\\S+(?:\\s+\\S+)?|\\[\\S+[@:][^\\n]+\\].+)[$#%])(.*\\n?)'
0001 | 0001 | '^((?:\\[?\\S+@[^$#%]+)[$#%])(.*\\n?)'



cluster 104 stats:
nPatterns: 2.0
nProjects: 2
shortest: \s+at\s(?P<file>[^:]+):?(?P<row>\d+)?:?(?P<col>\d+)?
Features:

1: LIT|a literal character | 7.5
2: ADD|one-or-more repetition | 4.5
3: QST|zero-or-one repetition | 4.5
4: PNG|named capture group | 3.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
6: DEC|any of: 0123456789 | 2.0
7: NCCC|negated CCC | 1.0
8: ANY|any non-newline char | 0.5
9: NCG|group without capturing | 0.5


0000 | 0002 | '\\s+at\\s(?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?'
0001 | 0002 | '\\s+at\\s(?:new\\s)?(?P<func>.+)\\s\\((?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?\\)'



cluster 105 stats:
nPatterns: 2.0
nProjects: 1
shortest: multiattack5=
Features:

1: LIT|a literal character | 15.5


0000 | 0001 | 'multiattack5='
0001 | 0001 | 'webattack_account='



cluster 106 stats:
nPatterns: 2.0
nProjects: 1
shortest: subroutine( .+?)\(
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: KLE|zero-or-more repetition | 0.5
7: LZY|as few reps as possible | 0.5
8: NCCC|negated CCC | 0.5


0000 | 0001 | 'subroutine( .+?)\\('
0001 | 0001 | '\\ssubroutine\\s(.+)\\([^()]*\\)'



cluster 107 stats:
nPatterns: 2.0
nProjects: 1
shortest: dhcp.option.ntp_server.\d
Features:

1: LIT|a literal character | 20.5
2: ANY|any non-newline char | 3.0
3: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'dhcp.option.ntp_server.\\d'
0001 | 0001 | 'dhcp.pool.allow_booting.\\d'



cluster 108 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^.*VTK_LEGACY.*$
Features:

1: LIT|a literal character | 16.0
2: KLE|zero-or-more repetition | 3.5
3: ANY|any non-newline char | 3.0
4: CG|a capture group | 1.0
5: STR|start-of-line | 1.0
6: END|end-of-line | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '^.*VTK_LEGACY.*$'
0001 | 0001 | '^\\+.*VTK_LEGACY_BODY\\((.*),\\s*"(.*)"\\).*\n'



cluster 109 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^AUTOTEST_TEST_COMPLETE:(.*)$
Features:

1: LIT|a literal character | 28.0
2: ANY|any non-newline char | 0.5
3: CG|a capture group | 0.5
4: END|end-of-line | 0.5
5: KLE|zero-or-more repetition | 0.5
6: STR|start-of-line | 0.5


0000 | 0001 | '^AUTOTEST_TEST_COMPLETE:(.*)$'
0001 | 0001 | 'KVM_TEST_VIRTIO_NETWORK_INSTALLER'



cluster 110 stats:
nPatterns: 2.0
nProjects: 1
shortest: http(s)?://(www.)?facebook.com/
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: QST|zero-or-one repetition | 2.0


0000 | 0001 | 'http(s)?://(www.)?facebook.com/'
0001 | 0001 | 'http(s)?://(www.)?linkedin.com/'



cluster 111 stats:
nPatterns: 2.0
nProjects: 1
shortest: \s*[:_\t]+\s*|\s{2,}|\n
Features:

1: LIT|a literal character | 6.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.5
5: CCC|custom character class | 1.0
6: LWB|at least n repetition | 1.0
7: OR|logical or | 1.0


0000 | 0001 | '\\s*[:_\t]+\\s*|\\s{2,}|\n'
0001 | 0001 | '\\s*[,/&.]\\s*|\\s+and\\s+|\\s{2,}|\n'



cluster 112 stats:
nPatterns: 2.0
nProjects: 1
shortest: ''(?P<t>[^\s']+( +[^\s']+)*)''
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 3.0
3: NCCC|negated CCC | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: KLE|zero-or-more repetition | 1.0
6: PNG|named capture group | 1.0
7: CG|a capture group | 0.5
8: NCG|group without capturing | 0.5


0000 | 0001 | "''(?P<t>[^\\s']+( +[^\\s']+)*)''"
0001 | 0001 | "''(?P<t>[^\\s']+(?: +[^\\s']+)*)''"



cluster 113 stats:
nPatterns: 2.0
nProjects: 1
shortest: LaTeX Warning.*?input line (\d+).$
Features:

1: LIT|a literal character | 20.5
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.5
4: ANY|any non-newline char | 1.5
5: KLE|zero-or-more repetition | 1.5
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 0.5
8: LZY|as few reps as possible | 0.5
9: NCCC|negated CCC | 0.5
10: STR|start-of-line | 0.5
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | 'LaTeX Warning.*?input line (\\d+).$'
0001 | 0001 | '^([^:]*):(\\d+):\\s+(pdfTeX warning.*)'



cluster 114 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^nic\.\d+\.dns_auto_build\.\d+$
Features:

1: LIT|a literal character | 21.0
2: ADD|one-or-more repetition | 2.0
3: DEC|any of: 0123456789 | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^nic\\.\\d+\\.dns_auto_build\\.\\d+$'
0001 | 0001 | '^nic\\.\\d+\\.dns_has_conflict\\.\\d+$'



cluster 115 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^#, (?P<data>.*)
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0
5: STR|start-of-line | 1.0
6: END|end-of-line | 0.6666666666666666


0000 | 0001 | '^#, (?P<data>.*)'
0001 | 0001 | '^msgstr "(?P<data>.*)"$'
0002 | 0001 | '^#~ msgid_plural "(?P<data>.*)"$'



cluster 116 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^GlueSiteUniqueID=(.*)
Features:

1: LIT|a literal character | 22.666666666666668
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 0.6666666666666666


0000 | 0001 | '^GlueSiteUniqueID=(.*)'
0001 | 0001 | '^GlueSiteUniqueID: (.*)'
0002 | 0001 | 'GlueForeignKey: GlueSiteUniqueID=(.*)'



cluster 117 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^(.+?)[ \._\-][Ss]([0-9]+)[\.\- ]?[Ee]([0-9]+)[^\/]*$
Features:

1: LIT|a literal character | 17.0
2: CCC|custom character class | 5.5
3: ADD|one-or-more repetition | 3.0
4: CG|a capture group | 3.0
5: LZY|as few reps as possible | 2.0
6: RNG|chars within a range | 2.0
7: ANY|any non-newline char | 1.0
8: END|end-of-line | 1.0
9: KLE|zero-or-more repetition | 1.0
10: NCCC|negated CCC | 1.0
11: QST|zero-or-one repetition | 1.0
12: STR|start-of-line | 1.0


0000 | 0001 | '^(.+?)[ \\._\\-][Ss]([0-9]+)[\\.\\- ]?[Ee]([0-9]+)[^\\/]*$'
0001 | 0001 | '^(.+?)[ \\._\\-]\\[[Ss]([0-9]+?)\\]_\\[[Ee]([0-9]+?)\\]?[^\\/]*$'



cluster 118 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^1.2.840.10008.[0-9.]+ (.*)$
Features:

1: LIT|a literal character | 27.333333333333332
2: ANY|any non-newline char | 5.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: RNG|chars within a range | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^1.2.840.10008.[0-9.]+ (.*)$'
0001 | 0001 | '^1.2.840.10008.[0-9.]+ (.*) \\(Retired\\)$'
0002 | 0001 | '^1.2.840.10008.[0-9.]+ (.*) Well-known frame of reference$'



cluster 119 stats:
nPatterns: 3.0
nProjects: 1
shortest: [0-9]{4}-[0-9]{2}-[0-9]{2}
Features:

1: LIT|a literal character | 18.0
2: CCC|custom character class | 5.0
3: RNG|chars within a range | 5.0
4: SNG|exactly n repetition | 5.0
5: ANY|any non-newline char | 0.6666666666666666


0000 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}'
0001 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}_cc.csv'
0002 | 0001 | 'cc_[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.csv'



cluster 120 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^(?P<area>[17]\d\d\d)(?P<station>\d+)$
Features:

1: DEC|any of: 0123456789 | 4.333333333333333
2: LIT|a literal character | 3.3333333333333335
3: PNG|named capture group | 2.6666666666666665
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: CCC|custom character class | 0.6666666666666666
8: SNG|exactly n repetition | 0.6666666666666666
9: OR|logical or | 0.3333333333333333


0000 | 0001 | '^(?P<area>[17]\\d\\d\\d)(?P<station>\\d+)$'
0001 | 0001 | '^(?P<area>[235]\\d)(?P<area2>\\d{4})(?P<station>\\d+)$'
0002 | 0001 | '^(?P<area>1\\d1|11\\d|8\\d\\d)(?P<area2>\\d{3})(?P<station>\\d+)$'



cluster 121 stats:
nPatterns: 2.0
nProjects: 1
shortest: (`(?:[^`]|``)+`|\w+)(?:(?:\:)(`(?:[^`]|``)+`|\w+))?
Features:

1: LIT|a literal character | 17.0
2: NCG|group without capturing | 6.5
3: ADD|one-or-more repetition | 6.0
4: OR|logical or | 6.0
5: CG|a capture group | 3.0
6: NCCC|negated CCC | 3.0
7: WRD|[a-zA-Z0-9\_] | 3.0
8: QST|zero-or-one repetition | 1.5


0000 | 0001 | '(`(?:[^`]|``)+`|\\w+)(?:(?:\\:)(`(?:[^`]|``)+`|\\w+))?'
0001 | 0001 | '(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?(?:\\:)(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?'



cluster 122 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^\([0-9a-fA-Fx]+,[0-9a-fA-F]+\)\s+(.*)\s+[A-Z][A-Z]\s+([0-9n-]+)\s+RET\s*$
Features:

1: LIT|a literal character | 27.0
2: RNG|chars within a range | 9.0
3: ADD|one-or-more repetition | 7.0
4: CCC|custom character class | 5.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
6: CG|a capture group | 4.0
7: KLE|zero-or-more repetition | 2.0
8: ANY|any non-newline char | 1.0
9: END|end-of-line | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^\\([0-9a-fA-Fx]+,[0-9a-fA-F]+\\)\\s+(.*)\\s+[A-Z][A-Z]\\s+([0-9n-]+)\\s+RET\\s*$'
0001 | 0001 | '^\\(([0-9a-fA-Fx]+),([0-9a-fA-F]+)\\)\\s+(.*)\\s+([A-Z][A-Z])\\s+([0-9n-]+)\\s+(RET)\\s*$'



cluster 123 stats:
nPatterns: 8.0
nProjects: 1
shortest: ^std::stack<.*>$
Features:

1: LIT|a literal character | 24.125
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^std::stack<.*>$'
0001 | 0001 | '^std::__debug::list<.*>$'
0002 | 0001 | '^std::unordered_set<.*>$'
0003 | 0001 | '^std::unordered_multimap<.*>$'
0004 | 0001 | '^std::unordered_multiset<.*>$'
0005 | 0001 | '^std::_List_const_iterator<.*>$'
0006 | 0001 | '^std::tr1::unordered_multiset<.*>$'
0007 | 0001 | '^std::__debug::unordered_multimap<.*>$'



cluster 124 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^\s*([A-Za-z0-9 '/-]+)\s+\(([0-9]+),([0-9A-Fa-fx]+)\)\s+([1-3])\s+.*$
Features:

1: LIT|a literal character | 33.0
2: RNG|chars within a range | 9.666666666666666
3: ADD|one-or-more repetition | 7.333333333333333
4: CCC|custom character class | 5.666666666666667
5: CG|a capture group | 5.333333333333333
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
7: KLE|zero-or-more repetition | 2.3333333333333335
8: END|end-of-line | 1.0
9: STR|start-of-line | 1.0
10: ANY|any non-newline char | 0.6666666666666666


0000 | 0001 | "^\\s*([A-Za-z0-9 '/-]+)\\s+\\(([0-9]+),([0-9A-Fa-fx]+)\\)\\s+([1-3])\\s+.*$"
0001 | 0001 | '^\\s*([A-Za-z0-9> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+VR = ([A-Z][A-Z]), VM = ([0-9n-]+)\\s+(.*)\\s*$'
0002 | 0001 | '^\\s*([A-Za-z0-9()> -]+)\\s+\\(([0-9]+),([0-9A-Fx]+)\\)\\s+([A-Z][A-Z])\\s+([1-9n-]+)\\s+([A-Za-z_0-9. ]+)\\s*$'



cluster 125 stats:
nPatterns: 2.0
nProjects: 1
shortest: \xd1\x81\xd1\x80\xd0\xb5\xd1\x82\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80
Features:

1: LIT|a literal character | 45.5
2: QST|zero-or-one repetition | 1.5
3: CG|a capture group | 1.0
4: OR|logical or | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '\xd1\x81\xd1\x80\xd0\xb5\xd1\x82\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80'
0001 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80|\xd0\xb1-\xd1\x80\\.?)\\s?(\xd0\xb4\xd0\xbc\\.?|\xd0\xb4\xd0\xbc\xd0\xb8\xd1\x82\xd1\x80\xd0\xb8\xd1\x8f) \xd0\xb4\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'



cluster 126 stats:
nPatterns: 17.0
nProjects: 1
shortest: \W\xd1\x8e\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 19.11764705882353
2: CG|a capture group | 0.5294117647058824
3: OR|logical or | 0.4117647058823529
4: NWRD|non-word chars | 0.23529411764705882
5: CCC|custom character class | 0.058823529411764705


0000 | 0001 | '\\W\xd1\x8e\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0002 | 0001 | '\xd1\x87\xd0\xb5\xd1\x85\xd0\xbe\xd0\xb2'
0003 | 0001 | '\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd[e .\n]'
0004 | 0001 | '\xd0\xbc\xd0\xb0\xd1\x80\xd1\x8c\xd0\xb8\xd0\xbd\xd0\xbe'
0005 | 0001 | '\xd0\xbe\xd1\x82\xd1\x80\xd0\xb0\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb5'
0006 | 0001 | '(\xd0\xbb\xd0\xb0\xd0\xb4\xd0\xbe\xd0\xb6\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0007 | 0001 | '\xd1\x82\xd1\x80\xd1\x83\xd0\xb1\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0008 | 0001 | '\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xba\xd0\xbe\xd1\x81\xd0\xb8\xd0\xbd\xd0\xbe'
0009 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0010 | 0001 | '\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe\xd1\x80\xd1\x81\xd0\xba'
0011 | 0001 | '(\xd0\xb3\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xb2\xd0\xbe\xd1\x80)'
0012 | 0001 | '\xd0\xb2\xd0\xb0\xd1\x80\xd1\x88\xd0\xb0\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0013 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xb0\xd1\x82\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0014 | 0001 | '\xd0\xbe\xd0\xba\xd1\x82\xd1\x8f\xd0\xb1\xd1\x80\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0015 | 0001 | '\xd1\x86\xd0\xb5\xd0\xbd\xd1\x82\xd1\x80\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd(\xd1\x8b\xd0\xb9|\xd0\xbe\xd0\xbc)'
0016 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb4\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'



