Cluster stats:

nClusters: 76
TotalPatterns: 1410
totalnProjects: 742
suffix: _i2.00_p0.18_k100_lev_


cluster 0 stats:
nPatterns: 221.0
nProjects: 315
shortest: ^[0-9]
Features:

1: LIT|a literal character | 13.497737556561086
2: RNG|chars within a range | 3.3981900452488687
3: CCC|custom character class | 2.180995475113122
4: CG|a capture group | 1.253393665158371
5: ADD|one-or-more repetition | 1.0950226244343892
6: KLE|zero-or-more repetition | 0.7194570135746606
7: END|end-of-line | 0.3755656108597285
8: STR|start-of-line | 0.3438914027149321
9: SNG|exactly n repetition | 0.3031674208144796
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.29411764705882354
11: OR|logical or | 0.2850678733031674
12: QST|zero-or-one repetition | 0.2669683257918552
13: ANY|any non-newline char | 0.2398190045248869
14: NCCC|negated CCC | 0.12669683257918551
15: DBB|$n\le x \le m$ repetition | 0.09954751131221719
16: DEC|any of: 0123456789 | 0.08597285067873303
17: NCG|group without capturing | 0.06787330316742081
18: WRD|[a-zA-Z0-9\_] | 0.05429864253393665
19: LZY|as few reps as possible | 0.049773755656108594
20: LWB|at least n repetition | 0.02262443438914027
21: WNW|word/non-word boundary | 0.02262443438914027
22: LKB|matching sequence precedes | 0.013574660633484163
23: NLKB|sequence doesn't precede | 0.013574660633484163
24: ENDZ|absolute end of string | 0.00904977375565611
25: LKA|matching sequence follows | 0.00904977375565611
26: NLKA|sequence doesn't follow  | 0.00904977375565611
27: NWSP|any non-whitespace | 0.004524886877828055
28: OPT|options wrapper | 0.004524886877828055


0000 | 0057 | '<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'
0001 | 0039 | '([\x80-\x9f])'
0002 | 0020 | '[^a-zA-Z0-9]'
0003 | 0018 | '[a-zA-Z][-_.:a-zA-Z0-9]*\\s*'
0004 | 0016 | '&([a-zA-Z][a-zA-Z0-9]*|#[0-9]*)?|<([a-zA-Z][^<>]*|/([a-zA-Z][^<>]*)?|![^<>]*)?'
0005 | 0015 | '[a-zA-Z][-.a-zA-Z0-9:_]*'
0006 | 0015 | '[a-zA-Z][-_.a-zA-Z0-9:]*\\s*'
0007 | 0014 | '^(.*):([0-9]+)$'
0008 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0009 | 0014 | '\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*))?'
0010 | 0012 | '\\$([a-zA-Z_][a-zA-Z_0-9]*)'
0011 | 0011 | '(In \\[[0-9]+\\]: )|(   \\.\\.\\.+:)'
0012 | 0009 | '([a-z0-9])([A-Z])'
0013 | 0008 | '[a-f0-9]+\\s+<.*:$'
0014 | 0007 | '^py[0-9]{2}$'
0015 | 0007 | '\\s*([a-f0-9]+):\\s*(\\S.*)'
0016 | 0006 | '[0-9]+,[0-9]+'
0017 | 0006 | '&#(\\d+|[xX][0-9a-fA-F]+);'
0018 | 0005 | '^[a-z]+$'
0019 | 0005 | ', ([a-zA-Z0-9_]+)='
0020 | 0004 | ' at 0x[0-9a-f]+'
0021 | 0004 | '%(?![0-9A-Fa-f]{2})'
0022 | 0004 | '(.*) \\(([0-9]+)\\)$'
0023 | 0004 | u'&(#?[xX]?(?:[0-9a-fA-F]+|\\w{1,8}));'
0024 | 0004 | '^[A-Z0-9][a-z0-9]*(-[A-Z0-9][a-z0-9]*)*$'
0025 | 0003 | u'^[A-Z]{,3}$'
0026 | 0003 | '([A-Z][a-z]+)'
0027 | 0003 | '[0-9]+\\.[0-9]+'
0028 | 0003 | '([0-9]+):([0-9]+)'
0029 | 0003 | '^#[0-9A-Fa-f]{6}$'
0030 | 0003 | 'vport[0-9]p[0-9]+'
0031 | 0003 | u'^[-a-zA-Z0-9_]+$'
0032 | 0003 | '([-0-9.]+)([a-zA-Z]+)'
0033 | 0003 | '\\\\([0-3][0-7][0-7])'
0034 | 0003 | '\\\\u([0-9a-fA-F]{4})'
0035 | 0003 | u'^[1-9]\\d{2} ?\\d{2}$'
0036 | 0003 | '^[a-z0-9][a-z0-9_]{2,}$'
0037 | 0003 | '^[a-zA-Z0-9\\.\\-:+"]+$'
0038 | 0003 | '\\\\([0-9a-fA-F]{1,6})\\s?'
0039 | 0003 | '^struct +[a-zA-Z_][a-zA-Z0-9_]* *{$'
0040 | 0003 | '^\\s*#define SSH_([A-Z_]+)\\s+([0-9x]*)\\s*$'
0041 | 0003 | '&(?:#((?:\\d+)|(?:[xX][0-9a-fA-F]+));?|(\\w+);)'
0042 | 0003 | '^content-range: bytes ([0-9]+)-([0-9]+)/([0-9]+)$'
0043 | 0003 | '[a-zA-Z_][0-9a-zA-Z_+-]*|[0-9+-][0-9a-zA-Z_.+-]*|"([^"\n\\\\]|\\\\.)*("|\\\\?$)|\'([^\'\n\\\\]|\\\\.)*(\'|\\\\?$)'
0044 | 0002 | '^[0-9]'
0045 | 0002 | ':[0-9]*$'
0046 | 0002 | u'^[ -~]*$'
0047 | 0002 | '^([0-9]+)$'
0048 | 0002 | '^[0-9]{2}$'
0049 | 0002 | '^[0-9]{4}$'
0050 | 0002 | '^/dev/[a-z]+$'
0051 | 0002 | '(?i)([a-z]{2})'
0052 | 0002 | '[a-zA-Z_]\\w*$'
0053 | 0002 | u'--cols=[0-9]+'
0054 | 0002 | '[a-fA-F0-9]{1,4}'
0055 | 0002 | '([0-9]+)_([0-9]+)'
0056 | 0002 | '^[a-zA-Z0-9\\-]+$'
0057 | 0002 | '^md5=([a-f0-9]+)$'
0058 | 0002 | '^[a-zA-Z0-9_\\.]+$'
0059 | 0002 | '^[-+]?([0][0-7,]*)$'
0060 | 0002 | '([a-zA-Z]+)([A-Z][a-z])'
0061 | 0002 | '[A-Za-z_][A-Za-z0-9_]*$'
0062 | 0002 | '\\("id", "([0-9]+)"\\);'
0063 | 0002 | '^[-+]?(0|[1-9][0-9,]*)$'
0064 | 0002 | '([\\-0-9])|([\\-0-9]/[0-9])'
0065 | 0002 | '(~?\\b[a-zA-Z_][a-zA-Z0-9_]*)\\b'
0066 | 0002 | '(?:const-)?([A-Za-z0-9]+)\\*?\\s+'
0067 | 0002 | '&([a-zA-Z][a-zA-Z0-9]*)[^a-zA-Z0-9]'
0068 | 0002 | '^(\\-[3-9]{1,}|\\-{3,}|\\-[1-9][0-9]+)$'
0069 | 0002 | '^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'
0070 | 0002 | 'irb\\([a-zA-Z_][a-zA-Z0-9_]*\\):\\d{3}:\\d+[>*] '
0071 | 0002 | '^([ \\|0-9-]*)(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'
0072 | 0002 | '((?<!(href|.src|data)=[\'"])((http|https|ftp)\\://([a-zA-Z0-9\\.\\-]+(\\:[a-zA-Z0-9\\.&amp;%\\$\\-]+)*@)*((25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])|localhost|([a-zA-Z0-9\\-]+\\.)*[a-zA-Z0-9\\-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(\\:[0-9]+)*(/($|[a-zA-Z0-9\\.\\,\\?\'\\\\+&amp;%\\$#\\=~_\\-]+))*))'
0073 | 0001 | '^[a-z]'
0074 | 0001 | '[0-9.]+'
0075 | 0001 | '[0-9]+:'
0076 | 0001 | '[a-z ]+'
0077 | 0001 | '[a-z%]+$'
0078 | 0001 | '^[+0-9]+$'
0079 | 0001 | '(.)([A-Z])'
0080 | 0001 | '[A-Za-z_]+'
0081 | 0001 | '^-[LRuYz]$'
0082 | 0001 | '^[a-zA-Z]*'
0083 | 0001 | '^lib[^-]+-'
0084 | 0001 | u'[a-zA-Z]+'
0085 | 0001 | '([0-9\\-]+)'
0086 | 0001 | '(\\*|[0-9])'
0087 | 0001 | '.*[0-9]{6}$'
0088 | 0001 | '@([a-z_]+)@'
0089 | 0001 | '[^a-fA-F\\d]'
0090 | 0001 | '^.*[0-9]dev$'
0091 | 0001 | '-clone[1-9]*$'
0092 | 0001 | 'MSIE [1-7]\\b'
0093 | 0001 | '[-][-]link[-]'
0094 | 0001 | '^A[0-9][^ ]+$'
0095 | 0001 | "[a-z\\-' \n\t]"
0096 | 0001 | '([\x00-\x7f]+)'
0097 | 0001 | '.*\\.([0-9]+)$'
0098 | 0001 | '@([a-zA-Z_]+)@'
0099 | 0001 | '[#][\\dA-F]{3}'
0100 | 0001 | '[0-9]+[a-zA-Z]'
0101 | 0001 | '[^0-9a-zA-Z._]'
0102 | 0001 | '[^a-zA-Z0-9_]+'
0103 | 0001 | '^/r/([^/]{2,})'
0104 | 0001 | '^=== ([A-Z_]+)'
0105 | 0001 | '^[a-zA-Z]\\w*$'
0106 | 0001 | '([A-Za-z0-9_]*)'
0107 | 0001 | 'N=50: ([.0-9]+)'
0108 | 0001 | '[a-zA-Z.;?<>-]+'
0109 | 0001 | '\x1b\\[[0-9;]*m'
0110 | 0001 | '([a-zA-Z0-9_.]+)'
0111 | 0001 | '^[0-9a-zA-Z- ]+$'
0112 | 0001 | '{[a-zA-Z_ 0-9]+}'
0113 | 0001 | u"([a-z]+)([,']*)"
0114 | 0001 | u'^[a-zA-Z0-9_]+$'
0115 | 0001 | "(^[A-Za-z\\' ]+$)"
0116 | 0001 | ' for ([0-9.]+)\\Z'
0117 | 0001 | '#[0-9a-fA-F]{3,6}'
0118 | 0001 | '[A-Z][A-Za-z]+\\('
0119 | 0001 | '[a-zA-Z0-9_\\-]+$'
0120 | 0001 | '[a-zA-Z]:(/|\\\\)'
0121 | 0001 | '^[A-Za-z0-9_]+\\('
0122 | 0001 | '^[a-zA-Z0-9]{40}$'
0123 | 0001 | 'ID_LENGTH=([0-9]*)'
0124 | 0001 | '^([0-9a-f]+) (.*)$'
0125 | 0001 | '^0x[a-fA-F0-9]{6}$'
0126 | 0001 | '^[a-z]\\d(?:,\\d)*'
0127 | 0001 | '</?\\s*[a-zA-Z0-9]+'
0128 | 0001 | '[0-9\\- \\(\\)]{14}'
0129 | 0001 | '[^-a-zA-Z_\\.0-9:]+'
0130 | 0001 | '^[0-9A-Z\\.]{1,10}$'
0131 | 0001 | u'\\xa7([0-9a-zA-Z])'
0132 | 0001 | "\\{([a-zA-Z\\']+)\\}"
0133 | 0001 | '^Committed r([0-9]+)'
0134 | 0001 | '^m_([0-9]+)_([0-9]+)'
0135 | 0001 | '(?:([0-9a-f]+):)?(.*)'
0136 | 0001 | '\\%\\([a-zA-Z0-9]+\\)'
0137 | 0001 | '^(scsi|ide)[0-9]+[^:]'
0138 | 0001 | '^[a-zA-Z0-9_\\-\\.]+$'
0139 | 0001 | '(.*)-[0-9_]+(.*[.]lib)'
0140 | 0001 | '(.cp\\(tt[0-9{7}]+\\))'
0141 | 0001 | 'Real/event = [0-9\\.]+'
0142 | 0001 | '[a-zA-Z][a-zA-Z0-9_]*$'
0143 | 0001 | u'Python ([a-z0-9\\.]+)'
0144 | 0001 | ', ([0-9]+\\.[0-9]+) fps'
0145 | 0001 | '^[ ]{0,3}:[ ]{1,3}(.*)$'
0146 | 0001 | '^\\s*=[A-Za-z_]+\\w*.*$'
0147 | 0001 | 'lighttpd-([0-9\\.]+) .*'
0148 | 0001 | '([A-Z]+_[a-z0-9]+\\.txt)'
0149 | 0001 | '(prot_[a-z0-9]+\\.fasta)'
0150 | 0001 | '\\bsource\\.([a-z+\\-]+)'
0151 | 0001 | 'sta.b (tcc__[fr][0-9]*)$'
0152 | 0001 | '([A-Z][0-9]{2})([0-9]{3})'
0153 | 0001 | '[-+*/!@$%^&=.a-zA-Z0-9_]+'
0154 | 0001 | '(<([a-z0-9\\:\\-_]+)\\s+>)'
0155 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}'
0156 | 0001 | '^([-+]?[0-9]+)\\.([0-9]+)$'
0157 | 0001 | '^/[a-zA-Z0-9_-]{28}/file1$'
0158 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,}$'
0159 | 0001 | '[a-zA-Z_:][\\w\\.\\-_:]*\\Z'
0160 | 0001 | '\\.[a-z]+-\\d{2}[mud]{0,3}$'
0161 | 0001 | '\\\\([ \tn\\\\]|[0-7]{3,3})'
0162 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'
0163 | 0001 | 'data-i18n-[a-z0-9]+="(.+?)"'
0164 | 0001 | '([0-9]+\\.[0-9]+\\.[0-9]+).*'
0165 | 0001 | '[a-zA-Z0-9]+(-[a-zA-Z0-9]+)?'
0166 | 0001 | '(?<=\\(|\\))[a-z|A-Z]*(?=\\()'
0167 | 0001 | '([A-Za-z]+)(\\[[A-Za-z,]+\\])?'
0168 | 0001 | '^@[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0169 | 0001 | '(\\s+|\\A)#([a-zA-Z0-9\\-_]*)\\b'
0170 | 0001 | 'Content-Type: ?([a-zA-Z0-9\\-/]*)'
0171 | 0001 | '[a-zA-Z0-9_\\.]+/[a-zA-Z0-9_\\.]+'
0172 | 0001 | '^[\\(\\[\\{]([a-zA-Z])[\\]\\}\\)]'
0173 | 0001 | 'snapshot-pos,(0x[a-f0-9]+),(\\d+)'
0174 | 0001 | '&([a-zA-Z][-.a-zA-Z0-9]*|#[0-9]*)?'
0175 | 0001 | u'\\s*(.+)\\s*:\\s*([-a-zA-Z]+)\\s*$'
0176 | 0001 | '[a-zA-Z0-9_]+:[a-zA-Z0-9_\\.\\-\\s]+'
0177 | 0001 | ' +([0-9]+) , ([0-9]+) *([0-9]+) *(.+)'
0178 | 0001 | '^([0-9a-fA-F]+) ([0-9a-fA-F]+)xx(.*)$'
0179 | 0001 | 'gene_name \\"([a-zA-Z-_\\/|.0-9]+)\\"'
0180 | 0001 | '^[-a-z0-9_.]+@[-a-z0-9]+\\.+[a-z]{2,6}'
0181 | 0001 | '#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])'
0182 | 0001 | '([0-9]+)[ \t]*([<>][=]?|=)[ \t]*([0-9]+)'
0183 | 0001 | '\\*(fore|back)ground:[ ]*(#[A-Za-z0-9]*)'
0184 | 0001 | '^(.*) Transfer Syntax PS ?[0-9].1?[0-9]$'
0185 | 0001 | '\\s*(class|def)\\s+[a-zA-Z_][a-zA-Z0-9_]*'
0186 | 0001 | "[A-Za-z0-9;/?:@&=+$,\\-_\\.!~*'\\(\\)%#]+$"
0187 | 0001 | '((\\[\\w*|[0-9]+\\.)(\\:|)).*(\\]|\\.[0-9]+)'
0188 | 0001 | '\\$\\{([_a-zA-Z][_a-zA-Z0-9]+)(\\?[^}]+)?\\}'
0189 | 0001 | '(?<=\\\\u)([0-9a-f]{4})|(?<=\\\\U)([0-9a-f]{8})'
0190 | 0001 | '([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'
0191 | 0001 | '(/.*?)(\\(([0-9]+)\\)|):.*(Error|Warning):\\s*(.*)$'
0192 | 0001 | '^(svn\\+ssh|http|https|svn)://([-a-zA-Z0-9.]*@)(.*)$'
0193 | 0001 | '([A-Za-z0-9_]+\\s+)+([*A-Za-z0-9_::]+)\\s*\\([^)]*\\)'
0194 | 0001 | '[a-zA-Z0-9 !@#$%^&*()\\-_=+\\\\|`[\\]{};:\'\\",\\.<>]'
0195 | 0001 | '([a-zA-Z]|[0-9])(([a-zA-Z]|[0-9]|-)*([a-zA-Z]|[0-9]))?$'
0196 | 0001 | 'interface[\\s]*\\[[^\\]]*Conditional=([\\_0-9a-zA-Z&|]*)'
0197 | 0001 | '^(.+?)[ \\._\\-][Ss]([0-9]+)[\\.\\- ]?[Ee]([0-9]+)[^\\/]*$'
0198 | 0001 | '^\\-?([0-9]+\\.?[0-9]*|[0-9]*\\.?[0-9]+)((E|e)\\-?[0-9]+)?$'
0199 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}_cc.csv'
0200 | 0001 | 'cc_[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.csv'
0201 | 0001 | '((2[0-5]|1[0-9]|[0-9])?[0-9]\\.){3}((2[0-5]|1[0-9]|[0-9])?[0-9])'
0202 | 0001 | '^(.+?)[ \\._\\-]\\[[Ss]([0-9]+?)\\]_\\[[Ee]([0-9]+?)\\]?[^\\/]*$'
0203 | 0001 | '([A-Za-z]+://)?(([A-Za-z0-9]+)(:[^:@]+)?@)?([^:/]+)(:[0-9]+)?(/.*)?'
0204 | 0001 | '^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$'
0205 | 0001 | '\\\\(u[dD][89aAbB][0-9a-fA-F]{2}\\\\u[0-9a-fA-F]{4}|u[0-9a-fA-F]{4}|.|$)'
0206 | 0001 | '^([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*)(\\.([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*))*$'
0207 | 0001 | "^\\s*([A-Za-z0-9 '/-]+)\\s+\\(([0-9]+),([0-9A-Fa-fx]+)\\)\\s+([1-3])\\s+.*$"
0208 | 0001 | '^\\s*<p.*?begin="(.*?)\\.([0-9]+)"\\s+.*?end="(.*?)\\.([0-9]+)"\\s*>(.*?)</p>'
0209 | 0001 | '(public|private|protected)\\s([A-Za-z0-9_]+\\s+)+([A-Za-z0-9_]+)\\s*\\([^)]*\\)'
0210 | 0001 | 'mapped\\:\\s([0-9]+)K\\s+writeable/private:\\s([0-9]+)K\\s+shared:\\s+([0-9]+)K'
0211 | 0001 | '^\\([0-9a-fA-Fx]+,[0-9a-fA-F]+\\)\\s+(.*)\\s+[A-Z][A-Z]\\s+([0-9n-]+)\\s+RET\\s*$'
0212 | 0001 | '(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)-){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'
0213 | 0001 | '^\\(([0-9a-fA-Fx]+),([0-9a-fA-F]+)\\)\\s+(.*)\\s+([A-Z][A-Z])\\s+([0-9n-]+)\\s+(RET)\\s*$'
0214 | 0001 | '(?<!\\")(?<!\\\\.)(?:[a-z|A-Z]+[0-9]+:?(?:[a-z|A-Z]+[0-9]+\\:?)?)(?:(?=[+\\-*/% \\,)])|(?!.))'
0215 | 0001 | '^\\s*([A-Za-z0-9> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+VR = ([A-Z][A-Z]), VM = ([0-9n-]+)\\s+(.*)\\s*$'
0216 | 0001 | '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
0217 | 0001 | '^\\s*([A-Za-z0-9()> -]+)\\s+\\(([0-9]+),([0-9A-Fx]+)\\)\\s+([A-Z][A-Z])\\s+([1-9n-]+)\\s+([A-Za-z_0-9. ]+)\\s*$'
0218 | 0001 | "([\\w.!~*'|;:&=+$,-]+@)?(([A-Za-z0-9]+[A-Za-z0-9\\-]*[A-Za-z0-9]+\\.)*([A-Za-z0-9]+\\.)*)*([A-Za-z]+[A-Za-z0-9\\-]*[A-Za-z0-9]+)\\.?(:\\d*)*$"
0219 | 0001 | '(((http|https)://)|(www\\.))+(([a-zA-Z0-9\\._-]+\\.[a-zA-Z]{2,6})|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(/[a-zA-Z0-9\\&amp;%_\\./-~-]*)?'
0220 | 0001 | "^([\\w\\!\\#$\\%\\&'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+\\.)*[\\w\\!\\#$\\%\\&'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+@((((([a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(\\:\\d{1,5})?)$"



cluster 1 stats:
nPatterns: 79.0
nProjects: 291
shortest: s
Features:

1: LIT|a literal character | 1.481012658227848
2: ADD|one-or-more repetition | 0.3291139240506329
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2911392405063291
4: KLE|zero-or-more repetition | 0.26582278481012656
5: END|end-of-line | 0.22784810126582278
6: STR|start-of-line | 0.22784810126582278
7: DEC|any of: 0123456789 | 0.12658227848101267
8: WRD|[a-zA-Z0-9\_] | 0.0759493670886076
9: NWSP|any non-whitespace | 0.06329113924050633
10: WNW|word/non-word boundary | 0.06329113924050633
11: CG|a capture group | 0.0379746835443038
12: SNG|exactly n repetition | 0.0379746835443038
13: NWRD|non-word chars | 0.02531645569620253
14: OR|logical or | 0.02531645569620253
15: QST|zero-or-one repetition | 0.02531645569620253
16: CCC|custom character class | 0.012658227848101266
17: DBB|$n\le x \le m$ repetition | 0.012658227848101266
18: LWB|at least n repetition | 0.012658227848101266
19: NDEC|any non-decimal | 0.012658227848101266
20: OPT|options wrapper | 0.012658227848101266


0000 | 0078 | '\\s'
0001 | 0049 | '^\\d+$'
0002 | 0048 | '^\\s*$'
0003 | 0041 | '\n'
0004 | 0038 | '\\(\\*'
0005 | 0030 | '\\s*'
0006 | 0026 | '\\W+'
0007 | 0020 | '>\\s+<'
0008 | 0015 | '\\b\\w+\\b'
0009 | 0013 | '^ *\n'
0010 | 0013 | '\\]\\]>'
0011 | 0012 | '^\\d{11}$'
0012 | 0010 | '\\w'
0013 | 0009 | '^-?\\d+$'
0014 | 0008 | 'b*'
0015 | 0008 | 'b+'
0016 | 0008 | '\n+'
0017 | 0008 | '^(\\w){1,2}$'
0018 | 0007 | '\t'
0019 | 0007 | 'a\\s'
0020 | 0007 | '\\\\\\\\'
0021 | 0007 | '\\\\EOF\\b'
0022 | 0006 | '^\\W+'
0023 | 0005 | ';\\s*'
0024 | 0005 | '\\)\\s*'
0025 | 0005 | '^\\d{5}$'
0026 | 0005 | '(}?\\s*)$'
0027 | 0004 | '\\\\$'
0028 | 0004 | '\\d+-'
0029 | 0004 | ',\\s*$'
0030 | 0004 | u'>\\s+<'
0031 | 0003 | "\\\\'"
0032 | 0003 | '\\\\*\\n'
0033 | 0003 | '\\w+\\.rb'
0034 | 0003 | '(""")\\s*$'
0035 | 0003 | u'^\\d{11}$'
0036 | 0003 | '\\A\\s\\s\\S+,'
0037 | 0002 | 's'
0038 | 0002 | u"'"
0039 | 0002 | '\\-'
0040 | 0002 | '\\t+'
0041 | 0002 | '\\\\`'
0042 | 0002 | '\\n +'
0043 | 0002 | '\\n+$'
0044 | 0002 | '-\\d+$'
0045 | 0002 | '\\*\\S'
0046 | 0002 | ' {2,}\n'
0047 | 0002 | '---\\s*$'
0048 | 0002 | '\\.\\.\\.'
0049 | 0001 | u'-+'
0050 | 0001 | u'-h'
0051 | 0001 | u'\n'
0052 | 0001 | '<\\w'
0053 | 0001 | '\\$$'
0054 | 0001 | '/\\d+'
0055 | 0001 | '2\\.3'
0056 | 0001 | ':\\s*'
0057 | 0001 | '\\bod'
0058 | 0001 | '\\s+<'
0059 | 0001 | '\n\n+'
0060 | 0001 | '^\\D*'
0061 | 0001 | '^\\S+'
0062 | 0001 | u'\\-+'
0063 | 0001 | '%\\w+%'
0064 | 0001 | '\\$\\d'
0065 | 0001 | '\\.0*$'
0066 | 0001 | '\\S+\\.a'
0067 | 0001 | '\\n|\\\\'
0068 | 0001 | '\\s*\\S+'
0069 | 0001 | '\n     #'
0070 | 0001 | '^\\s*\\['
0071 | 0001 | '(?m)^\\s*'
0072 | 0001 | '\\+vot\\+'
0073 | 0001 | '^\\.\\d+$'
0074 | 0001 | '\\-\\s*\\>'
0075 | 0001 | '^\\s*endif'
0076 | 0001 | '[-+]\\s*\\('
0077 | 0001 | 'type\\b\\s*'
0078 | 0001 | '^\\.|~$|^\\$'



cluster 2 stats:
nPatterns: 238.0
nProjects: 233
shortest: p=(\d+)
Features:

1: LIT|a literal character | 8.331932773109244
2: CG|a capture group | 1.8949579831932772
3: ADD|one-or-more repetition | 1.6764705882352942
4: DEC|any of: 0123456789 | 1.1512605042016806
5: KLE|zero-or-more repetition | 0.8445378151260504
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6680672268907563
7: ANY|any non-newline char | 0.42436974789915966
8: QST|zero-or-one repetition | 0.42436974789915966
9: CCC|custom character class | 0.40336134453781514
10: OR|logical or | 0.3865546218487395
11: WRD|[a-zA-Z0-9\_] | 0.36134453781512604
12: NCG|group without capturing | 0.3067226890756303
13: NCCC|negated CCC | 0.2773109243697479
14: END|end-of-line | 0.22268907563025211
15: SNG|exactly n repetition | 0.22268907563025211
16: STR|start-of-line | 0.2184873949579832
17: LZY|as few reps as possible | 0.14285714285714285
18: NWSP|any non-whitespace | 0.13445378151260504
19: DBB|$n\le x \le m$ repetition | 0.058823529411764705
20: WNW|word/non-word boundary | 0.046218487394957986
21: NLKA|sequence doesn't follow  | 0.03361344537815126
22: RNG|chars within a range | 0.03361344537815126
23: LKA|matching sequence follows | 0.029411764705882353
24: NDEC|any non-decimal | 0.01680672268907563
25: NLKB|sequence doesn't precede | 0.01680672268907563
26: ENDZ|absolute end of string | 0.012605042016806723
27: LWB|at least n repetition | 0.012605042016806723
28: OPT|options wrapper | 0.012605042016806723
29: PNG|named capture group | 0.012605042016806723
30: BKR|match the $i^{th}$ CG | 0.008403361344537815
31: LKB|matching sequence precedes | 0.008403361344537815
32: NWRD|non-word chars | 0.008403361344537815


0000 | 0019 | '\\$(\\w+|\\{[^}]*\\})'
0001 | 0019 | '(?<![\\w])(\\d+)L(?![\\w])'
0002 | 0019 | '(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})'
0003 | 0016 | '&(?!(\\w+|#\\d+);)'
0004 | 0016 | 'macosx-(\\d+)\\.(\\d+)-(.*)'
0005 | 0012 | '(?:(\\w+)=)?(.+)'
0006 | 0012 | '(\\(|\\)|\\s+|-)'
0007 | 0011 | '(.*  )(\\w+)(( &lt;cycle.*&gt;)? \\[\\d+\\])\\n'
0008 | 0009 | '^\\d{4}-\\d{1,2}-\\d{1,2}$'
0009 | 0008 | '(?:;\\s*|\\s+)(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*;|(?:\\(|\\[|;)\\s*(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*(?:\\]|\\)|;)'
0010 | 0007 | '([(\\[{])|([)}\\])])'
0011 | 0007 | 'a(?:b|(c|e){1,2}?|d)+?(.)'
0012 | 0007 | '^[ ]{4,7}((\\d+\\.)|[*+-])[ ].*'
0013 | 0007 | '([^\'"<>]|"[^"]*"(?=>|/|\\s|\\w+=)|\'[^\']*\'(?=>|/|\\s|\\w+=))*(?=[<>])|.*?(?=[<>])'
0014 | 0006 | 'nsyms\\s+(\\d+)'
0015 | 0006 | '(.*?[\\[\\{\\(,])(\\s*)([\\[\\{\\(])'
0016 | 0005 | '\\s+(\\d+),$'
0017 | 0005 | '(<|>|\\+(?!\\s*\\+|$))'
0018 | 0005 | '([\\w\\-]+\\s*:)(?!:)\\s*'
0019 | 0005 | '\\s+{(\\d+), "(\\w+)", (\\d+), (\\d+), states_(\\d+),$'
0020 | 0005 | '(\\s+|-*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'
0021 | 0004 | '(\\S+)\\s*(.*)'
0022 | 0004 | u'^(-?\\d+)(\\d{3})'
0023 | 0004 | u'&(?!(\\w+|#\\d+);)'
0024 | 0004 | u'^\\S+@\\S+\\.\\S+$'
0025 | 0004 | '(\\d+)-(\\d+)-(\\d+)'
0026 | 0004 | '.*_([vV]\\d+\\.\\d+)$'
0027 | 0004 | '^v(ersion)?\\s*(\\d+)'
0028 | 0004 | '((?<!\\\\)(\\\\\\\\)*)\\.'
0029 | 0004 | '.*/.*_V(\\d+\\.\\d+)/mongo'
0030 | 0004 | '[\\?\\&]gsessionid=(\\w*\\-)'
0031 | 0004 | '\\d+ GNU.sparse.numbytes=(\\d+)\\n'
0032 | 0004 | '(\\d+)\\.(\\d+)(\\.(\\d+))?(b(\\d+))?'
0033 | 0004 | '^\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\\s*'
0034 | 0004 | u'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\\s*'
0035 | 0003 | '(-)(\\d+)$'
0036 | 0003 | 'L -(\\d+) -\\d+'
0037 | 0003 | '(\\S+)\\s+(..+$)'
0038 | 0003 | 'successes=(\\d+)'
0039 | 0003 | u'(?:(\\w+)=)?(.+)'
0040 | 0003 | 'MemFree:\\s+(\\d+).*'
0041 | 0003 | '^\\s*([A-Z_]+): (\\d+)'
0042 | 0003 | '\\s+Flags for (\\S.+):$'
0043 | 0003 | 'expectedFailures=(\\d+)'
0044 | 0003 | '__(\\w+?)__\\s*=\\s*(.*)'
0045 | 0003 | u'^(\\d{3})-(\\d{3})-(\\d{3})$'
0046 | 0003 | "\\s+\\(default:\\s+\\'(.*)\\'\\)$"
0047 | 0003 | '\\s?((["][^"]*["]|[\'][^\']*[\'])\\s+dluohs)'
0048 | 0003 | '(\\d{4})-(\\d{2})-(\\d{2})\\s+(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d+)?'
0049 | 0003 | '(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/\\[\\]\\(\\)@=\\s]+)|\\s+'
0050 | 0002 | '(\\w+\\W*)'
0051 | 0002 | '\\((H|S)\\)'
0052 | 0002 | '\\.repeat\\d+'
0053 | 0002 | '((^|\\n)\\s*)@'
0054 | 0002 | '^(\\-2|\\-{2})$'
0055 | 0002 | 'Target\\s+(\\d+)'
0056 | 0002 | '^undo\\s+(\\d+)$'
0057 | 0002 | u'cms/page/(\\d+)'
0058 | 0002 | ',[ ]*([-]?\\d+|n)'
0059 | 0002 | '((\\d*?)\\d{1,3})$'
0060 | 0002 | '(\\D)\\.(?!\\s)(\\D)'
0061 | 0002 | '(^|\\\\n)([^\\\\]*)$'
0062 | 0002 | '^(Y|X|A|N) ([\\S ]+)$'
0063 | 0002 | 'ErrorReturnCode_(\\d+)'
0064 | 0002 | '(.+)_(\\d+)_(\\d+)_(.+)'
0065 | 0002 | 'Allocation:\\s+(\\S+.*)'
0066 | 0002 | '([idel])|(\\d+):|(-?\\d+)'
0067 | 0002 | '(id|.+_id)(\\d+)((?:-bb)?)'
0068 | 0002 | 'descr\\s+(\\S+?):\\s*(.*)$'
0069 | 0002 | 'BuildID\\s*=\\s*"(\\d{10})"'
0070 | 0002 | '^(\\d*)\\.(\\d*)\\[(\\d+)\\]$'
0071 | 0002 | '^(\\w+)\\s*:\\s+(\\d+)\\s\\w+'
0072 | 0002 | '^--([^\\n]+)\\n(.*?)\\n--\\1$'
0073 | 0002 | '^(\\s+\\(copy-func\\s+)(\\w+)(.*)$'
0074 | 0002 | '%module(\\s*\\(.*\\))?\\s+("?)(.+)\\2'
0075 | 0002 | 'fail:(\\d+).*?fail:(\\d+).*fail:(\\d+)'
0076 | 0002 | '^(\\s+\\(c-name\\s+)([^\\s]+)(\\s*\\))$'
0077 | 0002 | '((?:[^{}]?[<>=^])?)([-+ ]?)(#?)(\\d*)(,?)((?:\\.\\d+)?)(.?)$'
0078 | 0002 | '\\s*import\\s+(\\S+)\\.([^\\s.]+)\\s+as\\s+(\\S+)(\\s+for\\s+(\\S+))?'
0079 | 0002 | '(\\d+) files? changed, (\\d+) insertions?\\(\\+\\), (\\d+) deletions?\\(\\-\\)'
0080 | 0002 | 'pip \\d(\\.[\\d])+(\\.?(rc|dev|pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'
0081 | 0002 | '^((?:\\(\\S+\\))?(?:|sh\\S*?|\\w+\\S+[@:]\\S+(?:\\s+\\S+)?|\\[\\S+[@:][^\\n]+\\].+)[$#%])(.*\\n?)'
0082 | 0001 | 'p=(\\d+)'
0083 | 0001 | '(\\d\\d?)'
0084 | 0001 | '\\((\\w+)'
0085 | 0001 | '\\d+:\\d+'
0086 | 0001 | '^(\\w+):$'
0087 | 0001 | 'level\\d+'
0088 | 0001 | 'new(\\w+)'
0089 | 0001 | '(\\d|\\.)+'
0090 | 0001 | '(ajax)\\d+'
0091 | 0001 | '\\(\\d+\\)'
0092 | 0001 | '\\s*(\\S+)'
0093 | 0001 | '(\\d\\.\\d)'
0094 | 0001 | '^\\d+:\\d+$'
0095 | 0001 | '\x1b\\[\\d+m'
0096 | 0001 | '^(\\d+)\\s*$'
0097 | 0001 | '^(and)|(or)$'
0098 | 0001 | '^wsj/\\d\\d/'
0099 | 0001 | '(\\d+[dwhms])'
0100 | 0001 | '^\\-+\\+\\-+$'
0101 | 0001 | '^\\s+(\\w+) ='
0102 | 0001 | '^nic\\.(\\d+)'
0103 | 0001 | '([^:]+):(\\S+)'
0104 | 0001 | 'Model:\\s+(.+)'
0105 | 0001 | '^(\\w+)\\([^;]'
0106 | 0001 | '^(\\w+)\\-\\-$'
0107 | 0001 | 'sChamber=(\\w)'
0108 | 0001 | '(/dev/loop\\d+)'
0109 | 0001 | '(\\S+):\\s*(.*)'
0110 | 0001 | 'sms_so_l_(\\d+)'
0111 | 0001 | '((?P<day>\\d+)d)'
0112 | 0001 | '(.*)\\(\\d+\\) :'
0113 | 0001 | '([^*]+)\\*(\\d+)'
0114 | 0001 | '(\\A|\\s)#(\\w+)'
0115 | 0001 | '(\\D*)(\\d*)(.*)'
0116 | 0001 | 'UNSEEN\\s+(\\d+)'
0117 | 0001 | '^(\\w+\\.)+\\w+$'
0118 | 0001 | '^//(\\[.+\\])+\n'
0119 | 0001 | '([\\d]+) ([\\d]+)'
0120 | 0001 | '/?\\w+/\\w+[.]xsd'
0121 | 0001 | 'Firefox/([\\d.]+)'
0122 | 0001 | '^#?(\\d+)-(\\d+)$'
0123 | 0001 | 'branch type (\\d)'
0124 | 0001 | '#(\\w+)|\\[(.+)\\]'
0125 | 0001 | '(?<!\\|)\\|(?!\\|)'
0126 | 0001 | '(\\\\\\*)([\\w ]+)'
0127 | 0001 | '(\\d+)\\((\\d+)\\)'
0128 | 0001 | '.*Firefox/(\\d*).*'
0129 | 0001 | 'MESSAGES\\s+(\\d+)'
0130 | 0001 | '[Ff]ile(\\d+)=(.+)'
0131 | 0001 | '\\b(\\d+)\\.(\\d+)'
0132 | 0001 | '\\d+(.\\d*)?|.\\d+'
0133 | 0001 | "#([^']+?)# \\(qv\\)"
0134 | 0001 | '-?(\\d*)([.]?\\d*)?'
0135 | 0001 | 'Model name:\\s+(.*)'
0136 | 0001 | 'file format: (\\w+)'
0137 | 0001 | '(\\w+)(?:\\:(\\w+))?'
0138 | 0001 | 'Change\\s+(\\d+)\\s+'
0139 | 0001 | 'MAJOR\\s*=\\s*(\\d+)'
0140 | 0001 | 'Mobile; rv:([\\d.]+)'
0141 | 0001 | 'SEDE clienti:\\s\\d+'
0142 | 0001 | '\\s*(-?\\w+:\\w+)+,*'
0143 | 0001 | '\\w+ Y(\\d+) N(\\d+)'
0144 | 0001 | '^Name\\s*:\\s*(\\S+)'
0145 | 0001 | '^\\d+\\-\\d+\\-\\d+$'
0146 | 0001 | '^func_i\\d\\d\\d\\d$'
0147 | 0001 | '(\\S+) Version (\\S+)'
0148 | 0001 | '<(\\w+)(\\s.*)?[^/]?>'
0149 | 0001 | '\\[([^]]*)\\]:(\\d*)$'
0150 | 0001 | '\n?(\\w*)\\:\\s(.*)\n'
0151 | 0001 | '^\\.|^\\d\\.$|\\.\\.$'
0152 | 0001 | '(\\w+)(?:=([^\\s;]+))?'
0153 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'
0154 | 0001 | 'NPY_NO_EXPORT\\s+(.*)$'
0155 | 0001 | '^\\d+(-\\d+)?|\\.\\w+$'
0156 | 0001 | '([A-Z]{2}\\w{8})\\w{24}'
0157 | 0001 | '(\\d+\\.\\d+(\\.\\d+)?)'
0158 | 0001 | '[ \t]*File.*line (\\d+)'
0159 | 0001 | '\\d\\d-\\w\\w\\w-\\d\\d'
0160 | 0001 | '^Version\\s*:\\s*(\\S+)'
0161 | 0001 | '^core = "?(\\d+\\.x)"?$'
0162 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'
0163 | 0001 | '("[^"]*?")|(\'[^\']*?\')'
0164 | 0001 | '^@@.*\\+(\\d+)(,(\\d+))?'
0165 | 0001 | '([\\w\\.-]+)\\s+([^(]+).*'
0166 | 0001 | '(\\s)*class(\\s)+(\\w)+.*'
0167 | 0001 | '(module|def|class) (\\w*)'
0168 | 0001 | u'(?:\\s*).+?\\.(?:\\s+|$)'
0169 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'
0170 | 0001 | '(\\d+)\\s(\\D+)\\s(\\d{4})'
0171 | 0001 | '(varchar|char)\\((\\d+)\\)'
0172 | 0001 | '\\((\\d+)-(\\d+)-(\\d+)\\)'
0173 | 0001 | '\\[new branch\\]\\s+(\\S+)'
0174 | 0001 | '^function\\s*(\\w+)\\s*\\('
0175 | 0001 | '#define\\s+(\\S+)\\s+(\\S+)'
0176 | 0001 | '/./(.+?)/season (\\d{1,2})$'
0177 | 0001 | 'Set TRANSCOMM\\s*=\\s*(.*)$'
0178 | 0001 | '^#!XRCED:begin-block:(\\S+)'
0179 | 0001 | '(?m)^uniform (?:\\w+) (\\w+)'
0180 | 0001 | '(\\w+)\\s*District\\s*(\\d+)'
0181 | 0001 | '.*clock (\\d+)\\s(\\w+).*\\n'
0182 | 0001 | '([a-z]\\d?)=\\s+(\\d+\\.\\d+)'
0183 | 0001 | '/libedit[\\.\\d+]*\\.dylib\\s'
0184 | 0001 | 'yvsearch(\\d+|all)?:[\\s\\S]+'
0185 | 0001 | '(block|unblock) (\\d+) (\\d+)$'
0186 | 0001 | '\\sdo(\\s+\\|.*?\\|)?\\s*(#|$)'
0187 | 0001 | '^(.*?\\.pyc?):(\\d+):\\s+(.*)$'
0188 | 0001 | 'rFAILED.*\\(failures=(\\d+)\\)'
0189 | 0001 | '(.{8})(.{4})(.{4})(.{4})(.{12})'
0190 | 0001 | 'WordNet (\\d+\\.\\d+) Copyright'
0191 | 0001 | '((?:[^,{}]|(?:{[^{}]*}))+),?\\s*'
0192 | 0001 | '([a-z]+)=(".*?"|[^,]*)(?:\\Z|, *)'
0193 | 0001 | '\\$(\\d+)|\\$\\{(\\d+):[^\\}]+\\}'
0194 | 0001 | 'LaTeX Warning.*?input line (\\d+).$'
0195 | 0001 | '\\d+ \\((.+)\\) vs. \\d+ \\((.+)\\)'
0196 | 0001 | 'X-Transmission-Session-Id:\\s*(\\w+)'
0197 | 0001 | '^((?:\\[?\\S+@[^$#%]+)[$#%])(.*\\n?)'
0198 | 0001 | 'inet addr:((\\d{1,3}\\.){3}\\d{1,3})'
0199 | 0001 | '(.*?)(<\\%(?!\\%).*?(?<!\\%)\\%>)(?sm)'
0200 | 0001 | '9(?:\\d[ \\-\\)\\(\\dx\\.]{0,2}){6,10}'
0201 | 0001 | '^([^:]*):(\\d+):\\s+(pdfTeX warning.*)'
0202 | 0001 | 'javascript:SndSelf\\((\\d+),(\\d+)\\);'
0203 | 0001 | "\\s*SELECT\\s+.+?\\s+FROM\\s+[']?(\\w+)"
0204 | 0001 | '/posts/([\\d]{4})/([\\d]{2})/([\\d]{2})'
0205 | 0001 | '^(\\(*time|(.*\\s+time))\\s+<=\\s+(\\d+)'
0206 | 0001 | '(\\w+)\\((-?\\d+.?\\d*),(-?\\d+.?\\d*)\\)'
0207 | 0001 | u'Apple (?:clang|LLVM) version (\\d+\\.\\d+)'
0208 | 0001 | 'ATLAS version (?P<version>\\d+[.]\\d+[.]\\d+)'
0209 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0210 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'
0211 | 0001 | 'git version (\\d+)\\.(\\d+)(\\.\\d+)?(\\.\\d+)?'
0212 | 0001 | '(\\s*[\\w\\W]*?(?:\\.(\\s|$)|[\\n][\\t ]*[\\n]))'
0213 | 0001 | '[\\t !"#$%&\\\'()*\\-/<=>?@\\[\\\\\\]^_`{|},.:]+'
0214 | 0001 | '([+-])?(?:(?:(\\d?\\d):)?(\\d?\\d):)?(\\d?\\d)\\Z'
0215 | 0001 | '([NS])(\\d\\d)_(\\d{6})([EW])(\\d\\d\\d)_(\\d{6})'
0216 | 0001 | u'[^\r\n\t ]?([^\r\n\t ]| [^\r\n\t ])*[^\r\n\t ]?$'
0217 | 0001 | u'\\n\\s*ACCEPTS:\\s*((?:.|\\n)*?)(?:$|(?:\\n\\n))'
0218 | 0001 | '(#\tmodified:\\s+|#\tnew file:\\s+|#\tdeleted:\\s+)'
0219 | 0001 | '(?s)(?<=\\n)([|][|].*?[|][|])(?=\\n[^|]|\\n[|][^|])'
0220 | 0001 | '(\\d+)\\s+\\w+\\s+(\\w+)\\s+(\\w+)\\s+\\w+\\s+(\\w+).*'
0221 | 0001 | '(`(?:[^`]|``)+`|\\w+)(?:(?:\\:)(`(?:[^`]|``)+`|\\w+))?'
0222 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2}) / (\\d+)[\\s\t]*([0-9:, -]+)'
0223 | 0001 | "[^']*('[^']*'[^']*)*\\:(?P<clob>CLOB\\('([^']+|'')*'\\))"
0224 | 0001 | '(takes [\\w ]+ )(\\d+)( arguments? \\()(\\d+)( given\\))'
0225 | 0001 | '(\\\\)((@\\d:)?[\\w @\\-\\./\\(\\),\\[\\]]*)(\\t*:) *(.*)'
0226 | 0001 | "([\\w.!~*'|;:&=+$,-]+@)?\\d+\\.\\d+\\.\\d+\\.\\d+(:\\d*)*$"
0227 | 0001 | 'Mozilla (Firefox|Iceweasel|Fennec)\\b[^ ]* ((\\d+)\\.\\S*)'
0228 | 0001 | '(\\d+)-(\\d+)-(\\d+)(?: (\\d+):(\\d+):(\\d+)(?:\\.(\\d+))?)?'
0229 | 0001 | '([-+]?((?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[eE]((?:[-+]?\\d+)?)|(\\d+\\.\\d*))'
0230 | 0001 | '([\\w.+]+)\\s*.*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'
0231 | 0001 | '^\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?(?:\\.post\\d+)?(?:\\.dev\\d+)?$'
0232 | 0001 | '^(?:\\d{4}-\\d{2}-\\d{2} |)\\[?(\\d{2}:\\d{2}:\\d{2})\\]? \\[?(?:[^\\]]+?/|)([A-Z]+)\\]:? (.*)'
0233 | 0001 | 'B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5}).*\\Z'
0234 | 0001 | '((,([\\s\\r\\n]*)(\\]))|(,([\\s\\r\\n]*)(\\})))|("(?:\\\\.|[^"\\\\])*"|\'(?:\\\\.|[^\'\\\\])*\'|.[^,"\']*)'
0235 | 0001 | '(\\s*DRI_CONF_DESC\\s*\\(\\s*)([a-z]+)(\\s*,\\s*)(gettext\\s*\\(\\s*")(.*)("\\s*\\))(\\s*\\)[ \\t]*\\\\?)$'
0236 | 0001 | '(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?(?:\\:)(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?'
0237 | 0001 | u'\\b((?:([\\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\\s&()]|&amp;|&quo\nt;)*(?:[^!"#$%&\'()*+,.:;<=>?@\\[\\]^`{|}~\\s]))|(?:\\((?:[^\\s&()]|&amp;|&quot;)*\\)))+)'



cluster 3 stats:
nPatterns: 115.0
nProjects: 161
shortest: #.*
Features:

1: LIT|a literal character | 6.156521739130435
2: KLE|zero-or-more repetition | 1.5043478260869565
3: ANY|any non-newline char | 1.4695652173913043
4: CG|a capture group | 1.1652173913043478
5: LZY|as few reps as possible | 0.45217391304347826
6: END|end-of-line | 0.3217391304347826
7: STR|start-of-line | 0.2782608695652174
8: ADD|one-or-more repetition | 0.19130434782608696
9: QST|zero-or-one repetition | 0.13043478260869565
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.11304347826086956
11: CCC|custom character class | 0.10434782608695652
12: OR|logical or | 0.09565217391304348
13: NCCC|negated CCC | 0.0782608695652174
14: NCG|group without capturing | 0.06086956521739131
15: NLKB|sequence doesn't precede | 0.034782608695652174
16: RNG|chars within a range | 0.034782608695652174
17: DEC|any of: 0123456789 | 0.02608695652173913
18: NWRD|non-word chars | 0.02608695652173913
19: WRD|[a-zA-Z0-9\_] | 0.02608695652173913
20: PNG|named capture group | 0.017391304347826087
21: BKR|match the $i^{th}$ CG | 0.008695652173913044
22: OPT|options wrapper | 0.008695652173913044
23: SNG|exactly n repetition | 0.008695652173913044


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0016 | '#.*'
0002 | 0014 | '^(.*)#([^#]*)$'
0003 | 0009 | '@code{(.*?)}'
0004 | 0008 | 'Wrote: (.*)'
0005 | 0008 | 'name="(.*?)"'
0006 | 0008 | '\\{include\\s+file=.*?\\}'
0007 | 0006 | '^..?\\...?'
0008 | 0006 | '\\([^)]*\\)'
0009 | 0005 | "^'(.*)'$"
0010 | 0005 | '.*\\.__.*?__'
0011 | 0004 | '{([^}]*)}(.*)'
0012 | 0004 | '10\\^\\{(.+)\\}'
0013 | 0004 | '^(CONFIG_\\w+)=(.*)$'
0014 | 0004 | '#\\{?foreach\\}?\\(.+?\\).*?#\\{?end\\}?'
0015 | 0003 | 'o:(.*)s'
0016 | 0003 | "'\\?(.)'"
0017 | 0003 | '.*\\.zip'
0018 | 0003 | '(.+)=(.+)'
0019 | 0003 | '(.*)//(.*)'
0020 | 0003 | '<tchar=(.*?)>'
0021 | 0003 | 'offset (.*) sec'
0022 | 0003 | '^ *(.*) *( *) *$'
0023 | 0003 | '(.*)\\[(.*)\\](.*)'
0024 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0025 | 0003 | '^(.*?)(?:-dev|-\\d.*)$'
0026 | 0003 | '^<type [\'"](.+)[\'"]>$'
0027 | 0003 | '([^\\(]*)(\\((.*)%(.*)\\))?'
0028 | 0003 | '^(.*?)\\s?((?:ssh\\-|ecds).+)$'
0029 | 0002 | '(.*)'
0030 | 0002 | '(.*)\n'
0031 | 0002 | '.*\\*$'
0032 | 0002 | '^.*\\/'
0033 | 0002 | '\\?(.*)'
0034 | 0002 | '^yt-(.*)$'
0035 | 0002 | '(.*) cache:$'
0036 | 0002 | '^(.+?)_(.+)$'
0037 | 0002 | '([^#:]*#)(.*)'
0038 | 0002 | '^([^:]*):[^:]*$'
0039 | 0002 | '  ([^:]*):  (.*)'
0040 | 0002 | "'(.*?)(?<!\\\\)',?"
0041 | 0002 | '^(Q|QQ)\\<(.+)\\>$'
0042 | 0002 | '\\.\\. (.+?)::(.*)$'
0043 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0044 | 0002 | '"(.*)"\\s*->\\s*"(.*)"'
0045 | 0002 | '.*?_([a-z]*)_pid(\\d*)$'
0046 | 0002 | '^([A-Z].*?\\.(?:\\s|$))'
0047 | 0002 | "PREFIX\\('.*?'\\)(.*?)\\(.*"
0048 | 0002 | 'virtualenv_version = "(.*?)"'
0049 | 0001 | '%(..)'
0050 | 0001 | '\\(.*$'
0051 | 0001 | '%%.*?\n'
0052 | 0001 | '(.).\\1'
0053 | 0001 | '^//(.*)'
0054 | 0001 | '(?m)^(.)'
0055 | 0001 | '\\) (.*)'
0056 | 0001 | '.*?: (.*)'
0057 | 0001 | 'Auth=(.*)'
0058 | 0001 | '^(.*)"""$'
0059 | 0001 | 'iso.*?\\-'
0060 | 0001 | 'n_(?:.*?)'
0061 | 0001 | '{{(.+?)}}'
0062 | 0001 | '(.*?)=(.*)'
0063 | 0001 | '/\\(.*\\)/'
0064 | 0001 | '^([.]*).*$'
0065 | 0001 | '^.*\\.xsd$'
0066 | 0001 | '^.*\\.zip$'
0067 | 0001 | '.*/([^?#]*)'
0068 | 0001 | '//.*\\r?\\n'
0069 | 0001 | '\\. *(\n|$)'
0070 | 0001 | '^lib(.*).a$'
0071 | 0001 | "{'(.*':.*)'}"
0072 | 0001 | '^"(.*)"\\s*$'
0073 | 0001 | '^(.*\\.arc)$'
0074 | 0001 | '^\\[(.*)\\]$'
0075 | 0001 | 'link="(.*?)"'
0076 | 0001 | '(/\\*.*?\\*/)'
0077 | 0001 | '<(.*?)(?<!-)>'
0078 | 0001 | '^(\\s*lib.*)+'
0079 | 0001 | '.*\\?ptr=(.*)$'
0080 | 0001 | '^.*\\.tar.bz2$'
0081 | 0001 | '^u_(.*)_level$'
0082 | 0001 | 'ov_tree(?:.*?)'
0083 | 0001 | '.*ri\\/.*\\.ri$'
0084 | 0001 | 'test_(.*)\\.js$'
0085 | 0001 | '"title":"(.*?)",'
0086 | 0001 | 'localtime=(.*)\t'
0087 | 0001 | '.*\\<use (.*?)\\>'
0088 | 0001 | 'function( .+?)\\('
0089 | 0001 | ".*'(.*)'.*'(.*)'.*"
0090 | 0001 | '([[ ~^:?*]|\\.\\.)'
0091 | 0001 | 'OUTPUT *(.*\\.aux)'
0092 | 0001 | 'subroutine( .+?)\\('
0093 | 0001 | "u?'(.*)' != u?'(.*)'"
0094 | 0001 | '(.*)callsign\\=(.*)$'
0095 | 0001 | '\\((.*)/(.*)/(.*)\\)'
0096 | 0001 | '(.*)\\s(ASC|DESC)(.*)'
0097 | 0001 | '.*?_([a-z]*)_pid\\d*$'
0098 | 0001 | 'lc_1div8_1div1(?:.*?)'
0099 | 0001 | 'About\\((.*)\\).should'
0100 | 0001 | '.*Pop: (.+) Locus: (.+)'
0101 | 0001 | 'var-bind=[\'"](.*)["\']'
0102 | 0001 | '\\$((Id|File|Log).*?)\\$'
0103 | 0001 | '__version__ = (\\(.*?\\))'
0104 | 0001 | '\\[".*?\\]+?.*?\\[/".*?\\]+?'
0105 | 0001 | '.*(?P<urn>urn\\:nbn\\:.*?)\\<'
0106 | 0001 | '<xnat:Subject\\sID="(.*?)"\\s'
0107 | 0001 | '^} *\\/\\* *(?P<n>.*) *\\*\\/$'
0108 | 0001 | u'<.*?>|((?:\\w[-\\w]*|&.*?;)+)'
0109 | 0001 | 'medea\\._addMod\\(.*?,\\[(.*?)\\]'
0110 | 0001 | '(.*?)user (.*?)system (.*?)elapsed'
0111 | 0001 | '(#\trenamed:\\W{4})(.*?)\\W->\\W(.*)'
0112 | 0001 | 'r?u?\\\'(.*?)(?<!\\\\)\\\'|"(.*?)(?<!\\\\)"'
0113 | 0001 | "([a-z_]+) '(.*)'\\t(.*)\\tLoc=<(.*):(.*):(.*)>"
0114 | 0001 | '^\\+.*VTK_LEGACY_BODY\\((.*),\\s*"(.*)"\\).*\n'



cluster 4 stats:
nPatterns: 88.0
nProjects: 127
shortest: [,;]
Features:

1: LIT|a literal character | 3.9431818181818183
2: CCC|custom character class | 0.7840909090909091
3: ADD|one-or-more repetition | 0.5340909090909091
4: NCCC|negated CCC | 0.2727272727272727
5: KLE|zero-or-more repetition | 0.25
6: WRD|[a-zA-Z0-9\_] | 0.23863636363636365
7: STR|start-of-line | 0.18181818181818182
8: CG|a capture group | 0.17045454545454544
9: END|end-of-line | 0.13636363636363635
10: DEC|any of: 0123456789 | 0.11363636363636363
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.09090909090909091
12: ANY|any non-newline char | 0.056818181818181816
13: OR|logical or | 0.03409090909090909
14: QST|zero-or-one repetition | 0.03409090909090909
15: LKA|matching sequence follows | 0.022727272727272728
16: NCG|group without capturing | 0.022727272727272728
17: RNG|chars within a range | 0.022727272727272728
18: VWSP|matches U+000B | 0.022727272727272728
19: LZY|as few reps as possible | 0.011363636363636364
20: NWSP|any non-whitespace | 0.011363636363636364


0000 | 0024 | '[*?[]'
0001 | 0014 | '^[ \t]*$'
0002 | 0011 | '^[\\d,]+$'
0003 | 0009 | '[\n@{}&<>]'
0004 | 0007 | '[ \n]*{'
0005 | 0007 | '([\\t ]+)'
0006 | 0005 | '[^\\w]'
0007 | 0005 | '(^[^\\.]+)\\.'
0008 | 0004 | '[&<>"]'
0009 | 0004 | '%[^\\r\\n\\v]*'
0010 | 0004 | 'In\\ \\[\\d+\\]: '
0011 | 0003 | '[,;]'
0012 | 0003 | '[-/.: ]+'
0013 | 0003 | '[ \t]+(?=\n)'
0014 | 0003 | '^[\\w\\.\\-\\/]*$'
0015 | 0003 | 'From .*?([\\w.]+@[\\w.]+)'
0016 | 0002 | '[:@/]'
0017 | 0002 | '[xh]vc0'
0018 | 0002 | '[\x01-\x1f]'
0019 | 0002 | '\\[\\d\\]\\s+='
0020 | 0002 | '[^\\w\\-\\.\\/]+'
0021 | 0002 | '[ \\t]*\\.[ \\t]*'
0022 | 0002 | '\\(live[^\\)]*\\)'
0023 | 0002 | '^[^{]*\\}|\\{[^}]*$'
0024 | 0002 | 'repo\\=cdrom[\\:\\w\\d\\/]*'
0025 | 0002 | 'autoyast\\=[\\w\\d\\:\\.\\/]+'
0026 | 0001 | '[<&]'
0027 | 0001 | '[\n]'
0028 | 0001 | '[ \t]'
0029 | 0001 | '[,\n]'
0030 | 0001 | '[.:-]'
0031 | 0001 | '[\\)]'
0032 | 0001 | '[\n,]'
0033 | 0001 | "[^<']*"
0034 | 0001 | '[,;:].'
0035 | 0001 | '[\\+-]'
0036 | 0001 | ':[\\s]+'
0037 | 0001 | '[\\n,]+'
0038 | 0001 | '[\r\n]*'
0039 | 0001 | '^[^\\.]+'
0040 | 0001 | '([^\\{])<'
0041 | 0001 | '[\\w\\.]+'
0042 | 0001 | '[^\\w\\-]'
0043 | 0001 | '[uU][\'"]'
0044 | 0001 | '^[^\\$]+$'
0045 | 0001 | 'f[lie]=.+'
0046 | 0001 | '([;,\\s]+)'
0047 | 0001 | '[ \r\n\t]+'
0048 | 0001 | '[@:]number'
0049 | 0001 | '[\'"\\s;]+'
0050 | 0001 | '[\t\r\n]+$'
0051 | 0001 | '[^\\w\\-]+'
0052 | 0001 | '^([-\\w]+)'
0053 | 0001 | '^[\\d.:]+$'
0054 | 0001 | '\\\\[\\\\]?'
0055 | 0001 | '^[^\\.]+\\.'
0056 | 0001 | '&([^;\\s]+);'
0057 | 0001 | 'LSID=[^\\n]+'
0058 | 0001 | '[   \\r\\n]+'
0059 | 0001 | '[ _.\\[\\]]+'
0060 | 0001 | '["\\(\\) ,-]'
0061 | 0001 | '^[-\\.\\w]+$'
0062 | 0001 | '^\\$[\\w=]+$'
0063 | 0001 | '^[\\w,./=-]*$'
0064 | 0001 | '([\\+\\-\\^]+)'
0065 | 0001 | '\\\\n|\\\\\\\\'
0066 | 0001 | '^[\\w\\-\\_]+$'
0067 | 0001 | '.*\\r(?=[^\\n])'
0068 | 0001 | '[\\[\\]\\(\\);]'
0069 | 0001 | '</TEXT>[\\s\\S]*'
0070 | 0001 | 'Name=([\\w\\.]+)'
0071 | 0001 | '[\\w\\d\\-_\\.]+'
0072 | 0001 | '[\\w\\d_\\.\\-]+'
0073 | 0001 | '[][\\()<>@,:;".]'
0074 | 0001 | '\\[\\[(.+)\\]\\]'
0075 | 0001 | '^[^ :]+:[^ ]+ - '
0076 | 0001 | '[QA]?[:;.]?\\d\\d'
0077 | 0001 | '((?:"[^"\\s]+")+)$'
0078 | 0001 | '[ \r\t]*\n[ \r\t]*'
0079 | 0001 | '[.:, !?+=\\(\\)/]+'
0080 | 0001 | '[\\w0-9\\.\\_\\-]+'
0081 | 0001 | u'[_.,\\[\\]\\(\\):]'
0082 | 0001 | '[ \\t]*\\n([^\\r\\n])'
0083 | 0001 | '\\[\\[([^\\]]+)\\]\\]'
0084 | 0001 | '^file\\:\\/\\/[^\\?]*'
0085 | 0001 | '([\\w\\-\\.]+@[\\w\\-\\.]+)'
0086 | 0001 | '[ \\f\\t]*(?:\\r\\n|\\r|\\n)'
0087 | 0001 | '\\s*([^;# \\t\\n\\r\\f\\v]+)'



cluster 5 stats:
nPatterns: 66.0
nProjects: 116
shortest: \s*-e\s+
Features:

1: LIT|a literal character | 7.954545454545454
2: KLE|zero-or-more repetition | 2.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.4696969696969697
4: ADD|one-or-more repetition | 0.8636363636363636
5: CG|a capture group | 0.7272727272727273
6: CCC|custom character class | 0.4696969696969697
7: STR|start-of-line | 0.3939393939393939
8: ANY|any non-newline char | 0.30303030303030304
9: END|end-of-line | 0.2727272727272727
10: NCCC|negated CCC | 0.24242424242424243
11: QST|zero-or-one repetition | 0.16666666666666666
12: WRD|[a-zA-Z0-9\_] | 0.15151515151515152
13: DEC|any of: 0123456789 | 0.12121212121212122
14: OR|logical or | 0.12121212121212122
15: RNG|chars within a range | 0.10606060606060606
16: LZY|as few reps as possible | 0.06060606060606061
17: NWSP|any non-whitespace | 0.06060606060606061
18: NCG|group without capturing | 0.045454545454545456
19: PNG|named capture group | 0.045454545454545456
20: LWB|at least n repetition | 0.030303030303030304
21: ENDZ|absolute end of string | 0.015151515151515152
22: VWSP|matches U+000B | 0.015151515151515152


0000 | 0018 | '^\\s*blocktrans(?:\\s+|$)'
0001 | 0016 | '<(/?)\\s*i\\s*>'
0002 | 0016 | 'hg\\s*pull\\s*(.*)\\s*'
0003 | 0011 | '\\$else\\s+'
0004 | 0008 | '\\s*/\\*\\s*\\*/'
0005 | 0007 | '\\s*-e\\s+'
0006 | 0007 | '\\s*-e\\s+.*#egg=(.*)$'
0007 | 0007 | '^\\s+:toctree:\\s*(.*?)\\s*$'
0008 | 0006 | ',\\s*([^\\s;,\\n]+)(?:[^,]*?;\\s*q=([0-9.]*))?'
0009 | 0006 | '^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$'
0010 | 0005 | '^[\r\n]*(\\s*)'
0011 | 0005 | '^(\\s*<[^>]+>\\s*)'
0012 | 0004 | u'^\\s*[^#\\s].*'
0013 | 0004 | '\\s*\\(0[0-7]+\\).*'
0014 | 0004 | '\\s*\\(\\d+[ulUL]*\\).*'
0015 | 0004 | '\\s+([!{};:>+\\(\\)\\],])'
0016 | 0003 | u'<(/?)\\s*i\\s*>'
0017 | 0003 | '\\s*,?\\s*new Array\\('
0018 | 0003 | '([^:#]*)\\s*:?\\s*([^#]*?)(\\s+#.*|$)'
0019 | 0003 | '==\\d+==\\s+still\\s+reachable:\\s+([0-9,]+)\\s+bytes'
0020 | 0002 | '^\\s*\\#+\\s*'
0021 | 0002 | '\\[.*\\d+ tests.*\\n'
0022 | 0002 | '\\/\\*[\\s\\S]*?\\*\\/'
0023 | 0002 | '^(}|struct\\s+\\w+);\\s*$'
0024 | 0002 | 'href\\s*=\\s*[\'"]?<([\\w\\.]+)>[\'"]?\\s*(,?)'
0025 | 0001 | '\\s*=+>\\s*'
0026 | 0001 | '\\s*\\;\\s*'
0027 | 0001 | '\\*/\\s+/\\*'
0028 | 0001 | '\\s*\\*/\\s*'
0029 | 0001 | '\\s+---?\\s+'
0030 | 0001 | '^\\s*\\w*\\s*$'
0031 | 0001 | '^message:\\s*$'
0032 | 0001 | '^\\s*msgid\\s+"'
0033 | 0001 | '\\s*longitude\\s*'
0034 | 0001 | '^\\s*[\\w-]+\\s*$'
0035 | 0001 | '\\s*global\\s+(.*)'
0036 | 0001 | 'release\\s*=\\s*True'
0037 | 0001 | '<\\s*/?\\s*([^\\s>]+)'
0038 | 0001 | 'seeds:(\\s*-.*)*\\s*#'
0039 | 0001 | '\\|\\s+([^\\|*])\\s+.*'
0040 | 0001 | '\\s*([^\\s\\(\\)]*)\\s*'
0041 | 0001 | '\\s*(([^,]|(,\\s*\\d))+)'
0042 | 0001 | '\\s*[:_\t]+\\s*|\\s{2,}|\n'
0043 | 0001 | '^MemTotal:\\s*(\\d*)\\s*kB'
0044 | 0001 | '^\\s*\\*(?P<fromStar>\\s*)'
0045 | 0001 | '<\\s*[a-z]+\\s*[\\w"=\\.]*>'
0046 | 0001 | '\\A\\s*(\\w[\\w\\d]*)\\s*\\Z'
0047 | 0001 | '^[S7]\\s*[T8]\\s*[O6]\\s*[P7]$'
0048 | 0001 | '^\\s*"\\s*(?P<arg0>[^"]+)\\s*"'
0049 | 0001 | '\\$Revision:\\s*([0-9]*)\\s*\\$'
0050 | 0001 | '^\\s*[A-Z/\\s-]+ATTRIBUTES\\s*$'
0051 | 0001 | '^ *\\/\\* *(?P<msg>.*) \\*\\/ *$'
0052 | 0001 | 'libbcc_([A-Z_]+)\\s*:=\\s*([01])'
0053 | 0001 | '^\\s*Tag\\s+Name\\s+VR\\s+VM\\s*$'
0054 | 0001 | '\\s*[,/&.]\\s*|\\s+and\\s+|\\s{2,}|\n'
0055 | 0001 | '^(\\s*iret)\\s*=\\s*.*CPU THROTTLE.*$'
0056 | 0001 | '\\s*([^\\s\\(\\)"\\\'\\-=\\[\\]]+)\\s*'
0057 | 0001 | '^\\s*\\"(.+)\\"\\s*,\\s*\\"(.+)\\"\\s*$'
0058 | 0001 | '\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/]+)\\s*'
0059 | 0001 | '[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*"[^"]*"'
0060 | 0001 | '^(.*\\n)*def\\s+step_init\\s*\\(\\s*\\)\\s*:'
0061 | 0001 | 'pref\\(\\"([^\\"]+)\\"\\s*,\\s*(\\S*)\\s*\\)'
0062 | 0001 | '(\\S+)\\s*[.]\\s*setshape\\s*[(]\\s*(\\S+)\\s*[)]'
0063 | 0001 | 'boost::statechart::state_machine<\\s*(\\w*),\\s*(\\w*)\\s*>'
0064 | 0001 | '^\\s*//\\s*wxGlade:\\s*add\\s+((?:\\w|:)+)\\s+event handlers\\s*$'
0065 | 0001 | '^\\s*([tlrbhwxy])\\s*([=%<>^_])\\s*([tlrbhwxy]?)\\s*(\\d*)\\s*#(\\d+)\\s*$'



cluster 6 stats:
nPatterns: 76.0
nProjects: 107
shortest: ^#, (?P<data>.*)
Features:

1: LIT|a literal character | 12.75
2: PNG|named capture group | 2.539473684210526
3: ADD|one-or-more repetition | 1.894736842105263
4: KLE|zero-or-more repetition | 1.513157894736842
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.105263157894737
6: DEC|any of: 0123456789 | 0.9473684210526315
7: QST|zero-or-one repetition | 0.9342105263157895
8: CCC|custom character class | 0.8289473684210527
9: ANY|any non-newline char | 0.7894736842105263
10: RNG|chars within a range | 0.5131578947368421
11: STR|start-of-line | 0.40789473684210525
12: CG|a capture group | 0.39473684210526316
13: END|end-of-line | 0.3684210526315789
14: NCG|group without capturing | 0.32894736842105265
15: NCCC|negated CCC | 0.3026315789473684
16: WRD|[a-zA-Z0-9\_] | 0.23684210526315788
17: OR|logical or | 0.2236842105263158
18: LZY|as few reps as possible | 0.19736842105263158
19: SNG|exactly n repetition | 0.18421052631578946
20: NWSP|any non-whitespace | 0.09210526315789473
21: BKRN|references NCG | 0.02631578947368421
22: ENDZ|absolute end of string | 0.02631578947368421
23: NLKA|sequence doesn't follow  | 0.02631578947368421
24: BKR|match the $i^{th}$ CG | 0.013157894736842105
25: DBB|$n\le x \le m$ repetition | 0.013157894736842105
26: LWB|at least n repetition | 0.013157894736842105
27: OPT|options wrapper | 0.013157894736842105


0000 | 0016 | '(?:<p>(?:&nbsp;|\\s|<br \\/>)*?</p>\\s*)+\\Z'
0001 | 0013 | '(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'
0002 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0003 | 0011 | '^(?P<proto>unix):(?P<path>.*)$'
0004 | 0009 | '\\s*(?P<red>\\d+)\\s+(?P<green>\\d+)\\s+(?P<blue>\\d+)\\s+(?P<name>.*)'
0005 | 0007 | '(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+).framework/\n    (?:Versions/(?P<version>[^/]+)/)?\n    (?P=shortname)\n    (?:_(?P<suffix>[^_]+))?\n)$\n'
0006 | 0006 | '(?:http://)?(?:(?P<user>\\w+):(?P<pass>.*)@)?(?P<host>[\\w\\-\\.]+)(?::(?P<port>\\d+))?'
0007 | 0005 | '[*]\\[(?P<abbr>[^\\]]*)\\][ ]?:\\s*(?P<title>.*)'
0008 | 0005 | '^601983(?P<copy>\\d{1})1(?P<jmbag>\\d{10})(?P<k>\\d{1})$'
0009 | 0004 | '(?P<table>\\w+)\\.(?P<field>\\w+)=(?P<value>.+)'
0010 | 0004 | '@(?P<dllname>.*),-(?P<index>\\d+)(?:;(?P<comment>.*))?'
0011 | 0004 | '(?P<fence>^~{3,})[ ]*(\\{?\\.(?P<lang>[a-zA-Z0-9_-]*)\\}?)?[ ]*\\n(?P<code>.*?)(?P=fence)[ ]*$'
0012 | 0003 | '(?P<address>.*?)(?:(?: \\(.*?@)|$)'
0013 | 0003 | 'graph(?P<graphNumber>\\d+)_(?P<res>.*?)_?(?P<optNumber>\\d+)?$'
0014 | 0003 | '(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$'
0015 | 0003 | '(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*!\\s*(?P<cmd>.*)'
0016 | 0003 | u'^(?P<initial>\\d{1})(?P<yy>\\d\\d)(?P<mm>\\d\\d)(?P<dd>\\d\\d)(?P<mid>\\d{4})(?P<checksum>\\d{1})'
0017 | 0003 | '^\\s*\\d+\\s+(?P<name>\\S+)\\s+(?P<size>-?\\d+)\\s+(?P<bytesLeaked>-?\\d+)\\s+-?\\d+\\s+(?P<numLeaked>-?\\d+)'
0018 | 0003 | '%(?:(?P<cn>[0-9]+)\\$)?(?P<width>[0-9]+)?(?:.(?P<pres>[0-9]+))?(?P<size>[hL]|(?:ll?))?(?P<type>[dciouxXefgpCSsn])'
0019 | 0003 | 'DOCTYPE\\s+(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'
0020 | 0003 | '(?P<replace>(?P<type>[\\^](?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'
0021 | 0002 | 'Line:(?P<line>\\d+)\\s*(?P<message>.+)'
0022 | 0002 | 'LayoutTests/platform/(?P<platform>[^/]+)/'
0023 | 0002 | '(--|-|\\+)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?'
0024 | 0002 | '(?P<name>[\\w .-]+)\\s*\\(\\s*(?P<ver>[^\\s)]+)\\)$'
0025 | 0002 | '(?P<names>\\w+[-A-Za-z0-9|]*)?(?P<spec>!|[=:][infs]@?)?'
0026 | 0002 | '\\s+at\\s(?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?'
0027 | 0002 | 'use\\s+encoding(?:::source)?\\s+([\'"])(?P<encoding>[\\w-]+)\\1'
0028 | 0002 | '^\\s*\\# DEBUG\\(filename=(?P<filename>.*?), lineno=(?P<lineno>\\d+)\\)$'
0029 | 0002 | '\\s+at\\s(?:new\\s)?(?P<func>.+)\\s\\((?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?\\)'
0030 | 0002 | '^\\s*@property(-(?P<type>read|write))?\\s+((?P<citdl>\\w+)\\s+)?(?P<name>\\$\\w+)(?:\\s+(?P<doc>.*?))?'
0031 | 0001 | '^#, (?P<data>.*)'
0032 | 0001 | '^\\*(?P<table>[a-z]+)'
0033 | 0001 | '.*://(?P<namespace>.+)'
0034 | 0001 | 'author: (?P<name>.*?);'
0035 | 0001 | '^msgstr "(?P<data>.*)"$'
0036 | 0001 | '^r(?P<svn_revision>\\d+)'
0037 | 0001 | '(?P<year>[12]{1}[0-9]{3})'
0038 | 0001 | '##(?P<key>.+?)=(?P<val>.+)'
0039 | 0001 | 'Working file: (?P<filename>.*)'
0040 | 0001 | '(<s>\\s*(?P<sent>.+?)\\s*</s>)+'
0041 | 0001 | '^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'
0042 | 0001 | '^#~ msgid_plural "(?P<data>.*)"$'
0043 | 0001 | '^\\s*?([*]|/\\*\\*)(?P<line>.*?)'
0044 | 0001 | '(?P<name>[^=]+)="(?P<value>[^"]*)" *'
0045 | 0001 | '(|.*/)applications/(?P<appname>[^/]+)'
0046 | 0001 | '.*:(?P<line>\\d+)[ \t]+(?P<message>.*)'
0047 | 0001 | ':(?P<chain>[A-Z]+) +(?P<policy>[A-Z]+)'
0048 | 0001 | 'S(?P<season>[0-9]*)E(?P<episode>[0-9]*)'
0049 | 0001 | '^\\s*(?P<word>\\S+)\\_(?P<tag>\\S+)\\s*$'
0050 | 0001 | '^(?P<area>[17]\\d\\d\\d)(?P<station>\\d+)$'
0051 | 0001 | 'http://(?P<ip>[0-9\\.]+):(?P<port>[0-9]+)/.*'
0052 | 0001 | '\\s*Option\\s+"XkbLayout"\\s+"(?P<kt>[a-z-]+)"'
0053 | 0001 | '[^:]+:(?P<line>\\d+):\\d+: error: (?P<error>.+)'
0054 | 0001 | '^Currently Active Slave:\\s*(?P<active>eth[0-9]+)'
0055 | 0001 | '\\((?P<flags>.*)\\) "(?P<sep>.*)" ".*/(?P<mbx>.*)"'
0056 | 0001 | '^(?P<z>\\d+)/(?P<x>\\d+)/(?P<y>\\d+)\\.(?P<e>\\w+)$'
0057 | 0001 | '^(?P<unitformat>.+) \\((?P<bytes>[0-9\\.]+) bytes\\)'
0058 | 0001 | '^(?P<area>[235]\\d)(?P<area2>\\d{4})(?P<station>\\d+)$'
0059 | 0001 | '\\d+ loops, best of \\d+: (?P<time>[0-9.]+) sec per loop'
0060 | 0001 | '(?P<cf>[\\S]+)+-(?P<tmp>tmp-)?[\\S]+-(?P<suffix>[a-zA-Z.]+)'
0061 | 0001 | '(?P<year>\\d{4})( (?P<month>[A-Za-z]{3})( (?P<day>\\d+))?)?$'
0062 | 0001 | '^(?P<area>1\\d1|11\\d|8\\d\\d)(?P<area2>\\d{3})(?P<station>\\d+)$'
0063 | 0001 | 'NIST score = ([0-9.]+)\\s+BLEU score = ([0-9.]+)\\s+for system "(.*)"'
0064 | 0001 | '^(?P<level>\\*+)(\\s+(?P<title>.*?))?\\s*(\\s(?P<tags>:[\\w_:@]+:))?$'
0065 | 0001 | '{{[ ]?placeholder[ ]?\\([ ]?"(?P<placeholder>[a-zA-Z0-9]+)"[ ]?\\)[ ]?}}'
0066 | 0001 | '(?P<prefix>^\\s*function\\s+)(?P<main>[^$]+[&a-zA-Z0-9_]+)(?P<suffix>.*$)'
0067 | 0001 | '^\\s*(?P<user>\\S+)\\s*(?P<name>\\S+)\\s*(?P<pid>\\d+)\\s*(?P<usage_bytes>\\d+)$'
0068 | 0001 | '(?P<unsupported> \\.)? (?P<match> ((?P<scope> (\\w+\\.)* \\w+) \\.)? (?P<complete>\\w*) $)'
0069 | 0001 | '^\\s*void\\s*operator\\s*=\\s*\\(\\s*const\\s*\\s*&\\s*\\)\\s*;\\s*\\/\\/\\s*Not\\s*[iI]mplemented(\\.)*'
0070 | 0001 | '(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'
0071 | 0001 | '^.*: \\[Full GC (?P<start_size>[^ ]+)K->(?P<end_size>[^ ]+)K\\((?P<heap_size>[^ ]+)\\), (?P<gc_time>[^ ]+) secs\\]$'
0072 | 0001 | '((<property\\s+name="(?P<name>[^>]+)">(?P<text>.+?)</property>)|(?P<display><display\\s+call="(?P<command>[^"]+)">))'
0073 | 0001 | '^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.\\d+)(rc(?P<release_candidate>\\d+))?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'
0074 | 0001 | '(?P<type>[ACMD]) (?P<file>.*) (?P<revspec>rev:revid:[-\\d]+) (?P<parentrevspec>rev:revid:[-\\d]+) src:(?P<srcpath>.*) dst:(?P<dstpath>.*)$'
0075 | 0001 | '\\A\n(?:\n   (?P<fill>.)?\n   (?P<align>[<>=^])\n)?\n(?P<sign>[-+ ])?\n(?P<alt>\\#)?\n(?P<zeropad>0)?\n(?P<minimumwidth>(?!0)\\d+)?\n(?P<thousands_sep>,)?\n(?:\\.(?P<precision>0|(?!0)\\d+))?\n(?P<type>[eEfFgGn%])?\n\\Z\n'



cluster 7 stats:
nPatterns: 47.0
nProjects: 103
shortest: foo
Features:

1: LIT|a literal character | 17.80851063829787
2: ANY|any non-newline char | 0.40425531914893614
3: KLE|zero-or-more repetition | 0.2127659574468085
4: ADD|one-or-more repetition | 0.14893617021276595
5: CG|a capture group | 0.10638297872340426
6: LZY|as few reps as possible | 0.06382978723404255
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.0425531914893617
8: DEC|any of: 0123456789 | 0.02127659574468085
9: LKB|matching sequence precedes | 0.02127659574468085
10: NCG|group without capturing | 0.02127659574468085
11: OR|logical or | 0.02127659574468085
12: STR|start-of-line | 0.02127659574468085
13: WNW|word/non-word boundary | 0.02127659574468085


0000 | 0038 | 'shutdown_session\\)\\('
0001 | 0013 | 'Control-'
0002 | 0010 | 'foo'
0003 | 0007 | '^createdb: database creation failed: ERROR:  database ".+" already exists'
0004 | 0004 | 'digest '
0005 | 0004 | 'searchplugins\\/.+\\.xml'
0006 | 0003 | ':title'
0007 | 0002 | 'test4'
0008 | 0002 | 'Debian'
0009 | 0002 | 'Resigned'
0010 | 0002 | 'b2g-l10n.js'
0011 | 0002 | '\\btrigexpand'
0012 | 0002 | 'request\\.module'
0013 | 0002 | 'Please choose another session'
0014 | 0002 | 'attempt model run (.*?) one more '
0015 | 0002 | 'model run (.*?) commencing on node'
0016 | 0001 | 'Comments'
0017 | 0001 | 'Resolved'
0018 | 0001 | 'subject='
0019 | 0001 | 'Not Found'
0020 | 0001 | 'Postponed'
0021 | 0001 | 'Response:'
0022 | 0001 | ' sslmode=.+'
0023 | 0001 | 'subsection{'
0024 | 0001 | 'AuthenticAMD'
0025 | 0001 | 'CyrixInstead'
0026 | 0001 | 'bill-actions'
0027 | 0001 | 'internal log'
0028 | 0001 | '404 Not Found'
0029 | 0001 | 'Percent owned'
0030 | 0001 | '.*SPARCstation-5'
0031 | 0001 | '\ndescription:\n'
0032 | 0001 | '(?<=Authority: ).+'
0033 | 0001 | 'Assertion failed: '
0034 | 0001 | 'smallint.* unsigned'
0035 | 0001 | 'Connection timed out'
0036 | 0001 | 'Error: unable to free'
0037 | 0001 | 'Library Persistent ID'
0038 | 0001 | 'FocusedApplication(.+)/'
0039 | 0001 | 'Connection reset by peer'
0040 | 0001 | '.*Why is My App Over Quota'
0041 | 0001 | 'dhcp.option.ntp_server.\\d'
0042 | 0001 | '\\s*<TestFunction name=\\s*'
0043 | 0001 | 'Downloading.*setuptools.*egg\n'
0044 | 0001 | 'WARN: target directory .* exists'
0045 | 0001 | '\\[info\\] Set current project to (.+) \\(in build file:'
0046 | 0001 | '\\/\\* Begin PBXHeadersBuildPhase section \\*\\/\n((?:.|\n)+?)\\/\\* End PBXHeadersBuildPhase section \\*\\/'



cluster 8 stats:
nPatterns: 35.0
nProjects: 98
shortest: \x1b\[[^h]+h
Features:

1: LIT|a literal character | 15.2
2: CG|a capture group | 1.0571428571428572
3: NCCC|negated CCC | 1.0
4: KLE|zero-or-more repetition | 0.9714285714285714
5: ADD|one-or-more repetition | 0.8
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6285714285714286
7: CCC|custom character class | 0.37142857142857144
8: ANY|any non-newline char | 0.22857142857142856
9: OR|logical or | 0.17142857142857143
10: WNW|word/non-word boundary | 0.14285714285714285
11: LZY|as few reps as possible | 0.11428571428571428
12: NCG|group without capturing | 0.11428571428571428
13: QST|zero-or-one repetition | 0.11428571428571428
14: PNG|named capture group | 0.08571428571428572
15: DEC|any of: 0123456789 | 0.05714285714285714
16: OPT|options wrapper | 0.05714285714285714
17: END|end-of-line | 0.02857142857142857
18: NWSP|any non-whitespace | 0.02857142857142857
19: RNG|chars within a range | 0.02857142857142857
20: STR|start-of-line | 0.02857142857142857


0000 | 0035 | '<!\\s+([^<>]*)>'
0001 | 0016 | '^-r\\s*([^ ])?'
0002 | 0011 | 'encoding\\s*=\\s*[\'"]([^"\']+)["\']'
0003 | 0009 | '\\\\line([iv]+){'
0004 | 0004 | "__version__ = '([^']+)'"
0005 | 0004 | u'(?:W/)?"((?:\\\\.|[^"])*)"'
0006 | 0004 | '<base\\s+href\\s*=\\s*[\'"]?([^\'">]+)'
0007 | 0003 | '\\x1b\\[[^h]+h'
0008 | 0003 | '\\sfile:\\s+"([^"]*)"'
0009 | 0002 | '(?m)&mediaURL=([^&]+)'
0010 | 0002 | '[$][{]\\d+:([^}]+)[}]'
0011 | 0002 | '\\bexpires=([^;]+)(?i)'
0012 | 0002 | '[&?]versionId=([^&]+)($|=|&)'
0013 | 0002 | '\\s*__version__\\s*=\\s*(("([^"]|\\\\")*"|\'([^\']|\\\\\')*\'))'
0014 | 0001 | 'baseUrl>([^<]+)'
0015 | 0001 | 'name=\\"q\\">([^<]*)'
0016 | 0001 | "APACHEPATH.'([^']*?)'"
0017 | 0001 | '#include\\s+<([^>]+)>'
0018 | 0001 | ' *\\bservicefp="([^"]*)"'
0019 | 0001 | '<hostname name="([^"]*)"'
0020 | 0001 | 'L"\\\\0(\\d)" L"([^"]*)"'
0021 | 0001 | '\\bplural\\s*=\\s*([^;]+)'
0022 | 0001 | 'Mean sample size: ([.0-9]+)'
0023 | 0001 | 'android:versionName="([^"]+)"'
0024 | 0001 | 'invalid cidr value: "([^"]+)"'
0025 | 0001 | '\\ssubroutine\\s(.+)\\([^()]*\\)'
0026 | 0001 | 'id="__VIEWSTATE" value="([^"]*)"'
0027 | 0001 | '<img.+?src="(?P<filename>[^"]+?)"'
0028 | 0001 | '<br />\\s*([^<]+)<br />\\s*([^<]+)<'
0029 | 0001 | '<meta http-equiv="Content-Type".*?>'
0030 | 0001 | '\\s*<?xml\\b.*\\bencoding="([^"]+)"'
0031 | 0001 | '<img[^>]*src="(?P<url>http://[^"]*)"'
0032 | 0001 | '\\#[\\s]*include[\\s]*[<"](\\S+)[">]'
0033 | 0001 | '<meta property="og:title" content="(?P<title>[^"]*)" />'
0034 | 0001 | '(?:string:\\$\\{portal_url\\}/([^."]+.js)")|(?:\\<link href="([^."]*.css)")'



cluster 9 stats:
nPatterns: 34.0
nProjects: 69
shortest: ^$
Features:

1: LIT|a literal character | 3.2941176470588234
2: STR|start-of-line | 0.5588235294117647
3: END|end-of-line | 0.47058823529411764
4: ANY|any non-newline char | 0.17647058823529413
5: ADD|one-or-more repetition | 0.08823529411764706
6: CCC|custom character class | 0.029411764705882353
7: KLE|zero-or-more repetition | 0.029411764705882353
8: NWSP|any non-whitespace | 0.029411764705882353
9: QST|zero-or-one repetition | 0.029411764705882353
10: WRD|[a-zA-Z0-9\_] | 0.029411764705882353


0000 | 0013 | 'Key-'
0001 | 0007 | '^$'
0002 | 0006 | '^Expected$'
0003 | 0005 | 'dev$'
0004 | 0004 | '^%'
0005 | 0003 | '#.*$'
0006 | 0003 | '^6\\.'
0007 | 0003 | '^the '
0008 | 0003 | '^/dev/'
0009 | 0003 | u'\\.models$'
0010 | 0002 | 'el6'
0011 | 0002 | '^.+$'
0012 | 0002 | '^bob'
0013 | 0002 | '.py\\w?$'
0014 | 0002 | '/dev/vd\\S+'
0015 | 0001 | ' $'
0016 | 0001 | '^G'
0017 | 0001 | '^p'
0018 | 0001 | 'y$'
0019 | 0001 | '^  '
0020 | 0001 | '^!$'
0021 | 0001 | '.htm'
0022 | 0001 | '.py$'
0023 | 0001 | 'ife$'
0024 | 0001 | '^enum'
0025 | 0001 | '^eth$'
0026 | 0001 | 'ooth$'
0027 | 0001 | '\\.php'
0028 | 0001 | '^nodev'
0029 | 0001 | '^GROUP:'
0030 | 0001 | '^def .+'
0031 | 0001 | '^ja_JP$'
0032 | 0001 | '^Latexmk'
0033 | 0001 | 'l[eo]af$'



cluster 10 stats:
nPatterns: 34.0
nProjects: 62
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 15.529411764705882
2: KLE|zero-or-more repetition | 1.2058823529411764
3: ANY|any non-newline char | 0.8529411764705882
4: LZY|as few reps as possible | 0.7941176470588235
5: CG|a capture group | 0.6764705882352942
6: NCCC|negated CCC | 0.4411764705882353
7: ADD|one-or-more repetition | 0.2647058823529412
8: OPT|options wrapper | 0.23529411764705882
9: DEC|any of: 0123456789 | 0.14705882352941177
10: QST|zero-or-one repetition | 0.14705882352941177
11: CCC|custom character class | 0.08823529411764706
12: NCG|group without capturing | 0.08823529411764706
13: OR|logical or | 0.08823529411764706
14: WRD|[a-zA-Z0-9\_] | 0.08823529411764706
15: BKR|match the $i^{th}$ CG | 0.058823529411764705
16: STR|start-of-line | 0.058823529411764705
17: LWB|at least n repetition | 0.029411764705882353
18: NWRD|non-word chars | 0.029411764705882353
19: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.029411764705882353


0000 | 0019 | '<[^>]*?>'
0001 | 0008 | '</?xsl:([^>]*)/?>?'
0002 | 0008 | '^<A HREF="(\\d\\.\\d)/">Lua \\1</A>'
0003 | 0003 | '.*brick_.*?(n?)_wg.*'
0004 | 0002 | '(?s)<!--.*?-->'
0005 | 0002 | '<pre>.*?</pre>'
0006 | 0002 | '<id>([^<]+)</id>'
0007 | 0002 | '<noscript>.*?</noscript>'
0008 | 0002 | '(?ms)By:\\s*<a .*?>(.+?)<'
0009 | 0002 | '(?i)<img.*?src.*?=.*?"(.+?)".*?>'
0010 | 0002 | '(?s)<failure (.*?)>.*?</failure>'
0011 | 0001 | '<<<<NAME>>>>'
0012 | 0001 | '<uuid>.*</uuid>'
0013 | 0001 | '<(hr|br)[^>]*?/>'
0014 | 0001 | '<uuid.*?uuid>\\n  '
0015 | 0001 | '<script.*?</script>'
0016 | 0001 | '<Term>([^<]+)</Term>'
0017 | 0001 | '<genre>(.*?)</genre>'
0018 | 0001 | '<rating>(.*?)</rating>'
0019 | 0001 | 'DataText4>([^<]*)</td>'
0020 | 0001 | '(?ims)<tr[^>]*>.*?</tr>'
0021 | 0001 | '(?is)<tr [^>]*>.*?</tr>'
0022 | 0001 | '(?m)(?:^[ \\t]*\\n){1,}'
0023 | 0001 | '<style [\\W\\w\n]*?</style>'
0024 | 0001 | '(?s)id="TEXT_PH">(.*?)</span>'
0025 | 0001 | '<table id="showall" .*?</table>'
0026 | 0001 | '(?:aka) <em>"(.*?)(<br>|<\\/td>)'
0027 | 0001 | '<(\\w+)(?: [^>]+)?>([^<>]*)</\\1>'
0028 | 0001 | '<h\\d[^>]*>presenter notes</h\\d>'
0029 | 0001 | '<a [^>]*href="([^"]+)"[^>]*>.*?</a>'
0030 | 0001 | '<sync start="(\\d+)">([^<]*)</sync>'
0031 | 0001 | '<div class="filmo-episodes">.*?</div>'
0032 | 0001 | '<title>(.*)</title>|<TITLE>(.*)</TITLE>'
0033 | 0001 | '<countryName>([\\w ,\\.]+)</countryName>'



cluster 11 stats:
nPatterns: 48.0
nProjects: 57
shortest: ^/cgi-bin/
Features:

1: LIT|a literal character | 20.895833333333332
2: ANY|any non-newline char | 1.4375
3: KLE|zero-or-more repetition | 1.1041666666666667
4: STR|start-of-line | 0.6458333333333334
5: END|end-of-line | 0.5625
6: CG|a capture group | 0.3333333333333333
7: ADD|one-or-more repetition | 0.25
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1875
9: QST|zero-or-one repetition | 0.08333333333333333
10: LZY|as few reps as possible | 0.0625
11: DEC|any of: 0123456789 | 0.041666666666666664
12: OR|logical or | 0.041666666666666664
13: CCC|custom character class | 0.020833333333333332
14: NCCC|negated CCC | 0.020833333333333332
15: NWSP|any non-whitespace | 0.020833333333333332
16: OPT|options wrapper | 0.020833333333333332
17: PNG|named capture group | 0.020833333333333332
18: WNW|word/non-word boundary | 0.020833333333333332


0000 | 0017 | '^running .*'
0001 | 0003 | 'unzip: exiting'
0002 | 0003 | 'sources.redhat.com'
0003 | 0003 | '^\\s+File .*erroneous\\.py., line \\d+, in test_fail$'
0004 | 0002 | '\\[.* test environment .*\\n'
0005 | 0002 | '^[modprobe|insmod].*xen-vbd.*'
0006 | 0002 | '(initrd(.*).img|ramdisk.image.gz)'
0007 | 0002 | '\\s*<table id="datatype-pseudotypes-table">'
0008 | 0002 | '^\\s+raise FoolishError, .I am a broken setUp method.$'
0009 | 0002 | '^Attached scsi disk (.+) at scsi(.+), channel (.+), id (.+), lun (.+)$'
0010 | 0001 | '^/cgi-bin/'
0011 | 0001 | '/testing/.*'
0012 | 0001 | '.*mandriva.*'
0013 | 0001 | 'seed_hosts:.*'
0014 | 0001 | 'typecode\\s*='
0015 | 0001 | '^JSC::UString$'
0016 | 0001 | '^WTF::CString$'
0017 | 0001 | '^removed:\\s*$'
0018 | 0001 | 'technorati.com'
0019 | 0001 | '%search_string%'
0020 | 0001 | '^is_dhcp_scope$'
0021 | 0001 | '^.*VTK_LEGACY.*$'
0022 | 0001 | '^invalid_netmask'
0023 | 0001 | '^std::stack<.*>$'
0024 | 0001 | 'line-height:.*?;'
0025 | 0001 | '^.*RLELossless.*$'
0026 | 0001 | '<td class="checkbox"'
0027 | 0001 | '^#include "(Support/.*)"'
0028 | 0001 | '^std::__debug::list<.*>$'
0029 | 0001 | '^std::unordered_set<.*>$'
0030 | 0001 | '^Spare.Part.Number:.(.*)$'
0031 | 0001 | 'mk/images/members/.*?.jpg'
0032 | 0001 | '^END .*\\t----\\t----\\t.*$'
0033 | 0001 | '^Table B.1.? .* Private .*$'
0034 | 0001 | '^(?P<download_dir>.*/)[^/]*$'
0035 | 0001 | '^WebCore::KURLGooglePrivate$'
0036 | 0001 | 'extdemo.c\n.+\\extdemo.exp\n'
0037 | 0001 | '^std::unordered_multimap<.*>$'
0038 | 0001 | '^std::unordered_multiset<.*>$'
0039 | 0001 | 'update_(smoke)?test_(.*)\\.py$'
0040 | 0001 | '^std::_List_const_iterator<.*>$'
0041 | 0001 | '^std::tr1::unordered_multiset<.*>$'
0042 | 0001 | '^#synchronous_standby_names\\s*=.*$'
0043 | 0001 | '(?m)^.*#o3d\\s+MatrixLoadOrder\\b.*$'
0044 | 0001 | '^std::__debug::unordered_multimap<.*>$'
0045 | 0001 | '^\\s*(else.*|end\\s*|elsif.*|rescue.*|when.*|ensure.*)$'
0046 | 0001 | '<script>document\\.domain="xunlei\\.com";var btResult =(\\{.*\\});</script>'
0047 | 0001 | "^Function.*has unrooted.*of type.*live across GC call ('?)(.*?)('?) at \\S+:\\d+$"



cluster 12 stats:
nPatterns: 28.0
nProjects: 53
shortest: (\s)
Features:

1: LIT|a literal character | 2.25
2: CG|a capture group | 0.8214285714285714
3: CCC|custom character class | 0.17857142857142858
4: ADD|one-or-more repetition | 0.14285714285714285
5: DEC|any of: 0123456789 | 0.14285714285714285
6: NLKA|sequence doesn't follow  | 0.10714285714285714
7: NLKB|sequence doesn't precede | 0.10714285714285714
8: OR|logical or | 0.10714285714285714
9: SNG|exactly n repetition | 0.10714285714285714
10: NDEC|any non-decimal | 0.07142857142857142
11: STR|start-of-line | 0.07142857142857142
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.07142857142857142
13: ANY|any non-newline char | 0.03571428571428571
14: LKA|matching sequence follows | 0.03571428571428571
15: NWRD|non-word chars | 0.03571428571428571
16: NWSP|any non-whitespace | 0.03571428571428571
17: OPT|options wrapper | 0.03571428571428571
18: QST|zero-or-one repetition | 0.03571428571428571
19: WRD|[a-zA-Z0-9\_] | 0.03571428571428571


0000 | 0012 | '(?m)^\\.'
0001 | 0009 | '({)|(})'
0002 | 0008 | '(a|(b))'
0003 | 0008 | '<\\?(?!xml)'
0004 | 0008 | '(a(?!\\s[abc]))'
0005 | 0007 | '(\\s)'
0006 | 0005 | '(\\d+)bit'
0007 | 0005 | '(?<!\\\\),'
0008 | 0004 | u'(?<!%)%s'
0009 | 0003 | '(&&)'
0010 | 0003 | '(\\d)'
0011 | 0002 | '(\\W)'
0012 | 0002 | '(\\d{4})'
0013 | 0002 | '(iex|\\.{3})> '
0014 | 0001 | '(\\S)'
0015 | 0001 | '(%\\w)'
0016 | 0001 | '([<>])'
0017 | 0001 | '([|&])'
0018 | 0001 | '(\\D+)'
0019 | 0001 | '^(\\-l)'
0020 | 0001 | u'-(?=-)'
0021 | 0001 | '(\\d{3})'
0022 | 0001 | '>(?!\\})'
0023 | 0001 | '(\\{.+\\})'
0024 | 0001 | '(<br/>\n?)+'
0025 | 0001 | '([{}_#%&$])'
0026 | 0001 | '(?<!\\\\)\\|'
0027 | 0001 | '(\\D[123])_D'



cluster 13 stats:
nPatterns: 11.0
nProjects: 46
shortest: default
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 0.18181818181818182
3: CCC|custom character class | 0.18181818181818182
4: CG|a capture group | 0.18181818181818182
5: LZY|as few reps as possible | 0.09090909090909091
6: OR|logical or | 0.09090909090909091
7: RNG|chars within a range | 0.09090909090909091
8: STR|start-of-line | 0.09090909090909091
9: WRD|[a-zA-Z0-9\_] | 0.09090909090909091


0000 | 0038 | 'alloc_fabric_acl\\)\\('
0001 | 0038 | 'get_fabric_proto_ident'
0002 | 0038 | 'release_fabric_acl\\)\\('
0003 | 0014 | '\\*release_cmd\\)\\('
0004 | 0002 | 'default'
0005 | 0002 | 'clocksource=[a-z\\- ]+'
0006 | 0001 | 'multiattack5='
0007 | 0001 | 'class (\\w+?)\\('
0008 | 0001 | 'webattack_account='
0009 | 0001 | '\\\\begin{tabularx}'
0010 | 0001 | '^(ip_tables|iptable_filter|iptable_nat)[ \\t]'



cluster 14 stats:
nPatterns: 1.0
nProjects: 40
shortest: (?m)^[ ]*(?=\n)
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LKA|matching sequence follows | 1.0
5: OPT|options wrapper | 1.0
6: STR|start-of-line | 1.0


0000 | 0040 | '(?m)^[ ]*(?=\n)'



cluster 15 stats:
nPatterns: 26.0
nProjects: 34
shortest: REBOL$
Features:

1: LIT|a literal character | 13.76923076923077
2: STR|start-of-line | 0.3076923076923077
3: OR|logical or | 0.23076923076923078
4: CG|a capture group | 0.15384615384615385
5: ANY|any non-newline char | 0.07692307692307693
6: END|end-of-line | 0.07692307692307693
7: KLE|zero-or-more repetition | 0.07692307692307693
8: CCC|custom character class | 0.038461538461538464


0000 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'
0001 | 0005 | 'REBOL$'
0002 | 0003 | '^--- NEW FILE'
0003 | 0002 | 'ERROR FAIL'
0004 | 0002 | '^SESSIONID-'
0005 | 0002 | '^\\${VISUAL[:}/]'
0006 | 0001 | 'HEADER'
0007 | 0001 | '^PDBID'
0008 | 0001 | 'WMS|OWS'
0009 | 0001 | '^FINISH'
0010 | 0001 | '#EXTINF:'
0011 | 0001 | 'CONFDEFS'
0012 | 0001 | 'TIME_UTC'
0013 | 0001 | 'SENDMAIL='
0014 | 0001 | '^(Sch|S)A'
0015 | 0001 | '(CONECT|MASTER)'
0016 | 0001 | 'PLPYTHON_LIBDIR'
0017 | 0001 | 'TEST-UNEXPECTED-'
0018 | 0001 | 'WEBATTACK_SSL=ON'
0019 | 0001 | 'COMMAND_CENTER=ON'
0020 | 0001 | '#REQUIRED|#IMPLIED'
0021 | 0001 | 'RESIDUE NUMBERS :(.*)'
0022 | 0001 | 'SELF_SIGNED_APPLET=ON'
0023 | 0001 | '^AUTOTEST_TEST_COMPLETE:(.*)$'
0024 | 0001 | 'KVM_TEST_VIRTIO_NETWORK_INSTALLER'
0025 | 0001 | '^LOL|EVOLVE|ASAP|WEB-DL|IMMERSE|PROPER'



cluster 16 stats:
nPatterns: 4.0
nProjects: 32
shortest: /
Features:

1: LIT|a literal character | 3.5
2: QST|zero-or-one repetition | 0.5
3: OR|logical or | 0.25


0000 | 0030 | '/'
0001 | 0006 | '<!--|-->'
0002 | 0002 | '</?u>'
0003 | 0001 | '/?>'



cluster 17 stats:
nPatterns: 17.0
nProjects: 28
shortest: date
Features:

1: LIT|a literal character | 10.588235294117647
2: ANY|any non-newline char | 0.11764705882352941
3: END|end-of-line | 0.11764705882352941
4: STR|start-of-line | 0.11764705882352941
5: CG|a capture group | 0.058823529411764705
6: OR|logical or | 0.058823529411764705


0000 | 0011 | '/ParamTest'
0001 | 0002 | 'date'
0002 | 0002 | 'processor'
0003 | 0002 | 'Audio Files'
0004 | 0001 | 'Village'
0005 | 0001 | 'no EDMs'
0006 | 0001 | 'Database'
0007 | 0001 | 'orgname='
0008 | 0001 | 'WordPress'
0009 | 0001 | 'wireless='
0010 | 0001 | 'More Games'
0011 | 0001 | 'google_sql'
0012 | 0001 | 'WindowsError'
0013 | 0001 | '(^True$|^False$)'
0014 | 0001 | '// IWYU pragma: '
0015 | 0001 | '<pre><a name="foo-1">'
0016 | 0001 | 'org.mpris.MediaPlayer2'



cluster 18 stats:
nPatterns: 20.0
nProjects: 26
shortest:   http://
Features:

1: LIT|a literal character | 18.85
2: QST|zero-or-one repetition | 0.75
3: ADD|one-or-more repetition | 0.6
4: ANY|any non-newline char | 0.6
5: CG|a capture group | 0.45
6: END|end-of-line | 0.45
7: STR|start-of-line | 0.4
8: CCC|custom character class | 0.3
9: KLE|zero-or-more repetition | 0.2
10: NCCC|negated CCC | 0.2
11: NCG|group without capturing | 0.15
12: NLKB|sequence doesn't precede | 0.15
13: NWSP|any non-whitespace | 0.15
14: OR|logical or | 0.15
15: WRD|[a-zA-Z0-9\_] | 0.1
16: LKA|matching sequence follows | 0.05
17: LWB|at least n repetition | 0.05
18: LZY|as few reps as possible | 0.05
19: NLKA|sequence doesn't follow  | 0.05
20: RNG|chars within a range | 0.05
21: SNG|exactly n repetition | 0.05
22: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.05


0000 | 0006 | '^https?://\\S+$'
0001 | 0004 | '^https?://github.com/[^/]+/?$'
0002 | 0002 | '  http://'
0003 | 0002 | 'https?://.*'
0004 | 0001 | '(/s/https?:)/+'
0005 | 0001 | '^/var/log/[^/]+$'
0006 | 0001 | '^https?:\\/\\/.+'
0007 | 0001 | '(http://[^/]+):80'
0008 | 0001 | '/project(s)?|//.+'
0009 | 0001 | '/prefs(?:/([^/]+))?$'
0010 | 0001 | '/about(?:_trac)?(?:/.+)?$'
0011 | 0001 | '^http://instagr\\.am/p/[\\S]*$'
0012 | 0001 | 'http(s)?://(www.)?facebook.com/'
0013 | 0001 | 'http(s)?://(www.)?linkedin.com/'
0014 | 0001 | '(?<!http:)(?<!https:)(?<!ftp:)//'
0015 | 0001 | '<a href="(?!http|ftp|mailto|/).*</a>'
0016 | 0001 | 'http://.*imdb\\.com/title/tt([0-9]{7})/quotes'
0017 | 0001 | '^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)'
0018 | 0001 | '^http://www\\.google\\.com/calendar/embed\\?[\\w&;=\\%]+$'
0019 | 0001 | u'^<html><a href="http://example.com/reset/[\\w/-]+/">Link</a></html>$'



cluster 19 stats:
nPatterns: 13.0
nProjects: 19
shortest: TORINO2:\s\d+
Features:

1: LIT|a literal character | 21.23076923076923
2: CG|a capture group | 1.1538461538461537
3: ADD|one-or-more repetition | 1.0769230769230769
4: DEC|any of: 0123456789 | 0.6923076923076923
5: KLE|zero-or-more repetition | 0.5384615384615384
6: ANY|any non-newline char | 0.46153846153846156
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.38461538461538464
8: STR|start-of-line | 0.23076923076923078
9: CCC|custom character class | 0.15384615384615385
10: END|end-of-line | 0.15384615384615385
11: NWRD|non-word chars | 0.15384615384615385
12: RNG|chars within a range | 0.15384615384615385
13: NWSP|any non-whitespace | 0.07692307692307693
14: WRD|[a-zA-Z0-9\_] | 0.07692307692307693


0000 | 0004 | 'Content-Length: (\\d+)'
0001 | 0004 | '^\\s*T_GENERIC_PROTOCOL: (\\d+) calls to (.*) with a (.*):$'
0002 | 0003 | '#define\\WDB_VERSION_PATCH\\W(\\d+)'
0003 | 0003 | '^\\s*public static final int ([A-Z_]+) = (\\d+);$'
0004 | 0001 | "VERSION.*'(.+)'"
0005 | 0001 | 'TORINO2:\\s\\d+'
0006 | 0001 | '^### SALT: (\\w+)'
0007 | 0001 | '\tDLL Name: (\\S+)'
0008 | 0001 | 'wx_major_version_number=(\\d+)'
0009 | 0001 | 'LL_VERSION_MINOR\\s=\\s([0-9]+)'
0010 | 0001 | 'const S32 LL_VERSION_MAJOR = (\\d+);'
0011 | 0001 | 'const S32 LL_VERSION_PATCH = (\\d+);'
0012 | 0001 | '.*DCHECK\\(.*args\\.length\\(\\) == (\\d+)\\);'



cluster 20 stats:
nPatterns: 14.0
nProjects: 18
shortest: .*elf
Features:

1: LIT|a literal character | 6.642857142857143
2: ANY|any non-newline char | 1.2857142857142858
3: KLE|zero-or-more repetition | 1.1428571428571428
4: LZY|as few reps as possible | 0.5
5: WNW|word/non-word boundary | 0.2857142857142857
6: ADD|one-or-more repetition | 0.07142857142857142
7: CCC|custom character class | 0.07142857142857142
8: CG|a capture group | 0.07142857142857142
9: NWSP|any non-whitespace | 0.07142857142857142
10: OR|logical or | 0.07142857142857142
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.07142857142857142


0000 | 0008 | '.*kallsyms.*'
0001 | 0002 | u'.*?\\S\\.\\s'
0002 | 0001 | '.*elf'
0003 | 0001 | 'rel.*'
0004 | 0001 | ".*?'''"
0005 | 0001 | '.*?_info'
0006 | 0001 | '.+?/Misc'
0007 | 0001 | 'linux-.*'
0008 | 0001 | '.*metis.*'
0009 | 0001 | '.*?\\blm\\b'
0010 | 0001 | '.*?Athlon HX\\b'
0011 | 0001 | '.*?Pentium III\\b'
0012 | 0001 | '.*film source: 29.97.*'
0013 | 0001 | '(.*[*?[\\\\]|ignorecase\\:)'



cluster 21 stats:
nPatterns: 35.0
nProjects: 18
shortest: [\x00-\x08\x0e-\x1f]
Features:

1: LIT|a literal character | 22.457142857142856
2: DEC|any of: 0123456789 | 1.5714285714285714
3: CG|a capture group | 1.1714285714285715
4: OR|logical or | 0.37142857142857144
5: KLE|zero-or-more repetition | 0.34285714285714286
6: CCC|custom character class | 0.2857142857142857
7: ANY|any non-newline char | 0.2571428571428571
8: ADD|one-or-more repetition | 0.22857142857142856
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.22857142857142856
10: NWRD|non-word chars | 0.17142857142857143
11: QST|zero-or-one repetition | 0.17142857142857143
12: LZY|as few reps as possible | 0.14285714285714285
13: RNG|chars within a range | 0.11428571428571428
14: WRD|[a-zA-Z0-9\_] | 0.11428571428571428
15: NCG|group without capturing | 0.05714285714285714
16: NWSP|any non-whitespace | 0.02857142857142857


0000 | 0008 | '[\\x00-\\x08\\x0e-\\x1f]'
0001 | 0002 | '[\x02\x1f\x16\x0f\x03]'
0002 | 0001 | '\\${\\W*next.body\\(\\)\\W*}'
0003 | 0001 | '[\\x00\\/\\\\:\\*\\?\\"<>\\|]'
0004 | 0001 | '\\W\xd1\x8e\xd0\xb0\xd0\xbe\\W'
0005 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0006 | 0001 | '\xd1\x87\xd0\xb5\xd1\x85\xd0\xbe\xd0\xb2'
0007 | 0001 | '\\[commit=(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)\\]'
0008 | 0001 | '\x01\x12\x00\x03\x00\x00\x00\x01\x00(.)\x00\x00'
0009 | 0001 | '.*(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)'
0010 | 0001 | '\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd[e .\n]'
0011 | 0001 | '#date(\\s+(\\S+))?\\s+(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)'
0012 | 0001 | '\xd0\xbc\xd0\xb0\xd1\x80\xd1\x8c\xd0\xb8\xd0\xbd\xd0\xbe'
0013 | 0001 | '<a(.*?)href="(.*?)"(.*?)\xd7\x94\xd7\x91\xd7\x90(.*?)</a>'
0014 | 0001 | '\xd0\xbe\xd1\x82\xd1\x80\xd0\xb0\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb5'
0015 | 0001 | '(\xd0\xbb\xd0\xb0\xd0\xb4\xd0\xbe\xd0\xb6\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0016 | 0001 | '\xd1\x82\xd1\x80\xd1\x83\xd0\xb1\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0017 | 0001 | '<p>(?:\\s|<br\\s*/?>)*\\x07(\\d+)\\x07(?:\\s|<br\\s*/?>)*</p>|\\x07(\\d+)\\x07'
0018 | 0001 | '\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xba\xd0\xbe\xd1\x81\xd0\xb8\xd0\xbd\xd0\xbe'
0019 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0020 | 0001 | '\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe\xd1\x80\xd1\x81\xd0\xba'
0021 | 0001 | '<a href="(.*?)" title="\xd7\xa7\xd7\xa8\xd7\x90 \xd7\x91\xd7\x94\xd7\xa8\xd7\x97\xd7\x91\xd7\x94"'
0022 | 0001 | '(\xd0\xb3\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xb2\xd0\xbe\xd1\x80)'
0023 | 0001 | '\xd0\xb2\xd0\xb0\xd1\x80\xd1\x88\xd0\xb0\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0024 | 0001 | '<div class="idh">(\xe5\xb7\xb2\xe8\xbf\x9e\xe7\xbb\xad\xe7\xad\xbe\xe5\x88\xb0\\d+\xe5\xa4\xa9)</div>'
0025 | 0001 | '<td class="Day" bgcolor="#990000" >\\s+\xf1\xe3\xf8 \xe4\xe9\xe5\xed \xec(.+), <span style=color:#c0c0c0>'
0026 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xb0\xd1\x82\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0027 | 0001 | '\xd0\xbe\xd0\xba\xd1\x82\xd1\x8f\xd0\xb1\xd1\x80\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0028 | 0001 | '\xd1\x86\xd0\xb5\xd0\xbd\xd1\x82\xd1\x80\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd(\xd1\x8b\xd0\xb9|\xd0\xbe\xd0\xbc)'
0029 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb4\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0030 | 0001 | '\xd1\x88\xd0\xbe\xd1\x81\xd1\x81\xd0\xb5 \xd1\x8d\xd0\xbd\xd1\x82\xd1\x83\xd0\xb7\xd0\xb8\xd0\xb0\xd1\x81\xd1\x82\xd0\xbe\xd0\xb2'
0031 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'
0032 | 0001 | '\xd1\x81\xd1\x80\xd0\xb5\xd1\x82\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80'
0033 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80|\xd0\xb1-\xd1\x80\\.?)\\s?(\xd0\xb4\xd0\xbc\\.?|\xd0\xb4\xd0\xbc\xd0\xb8\xd1\x82\xd1\x80\xd0\xb8\xd1\x8f) \xd0\xb4\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0034 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



cluster 22 stats:
nPatterns: 11.0
nProjects: 16
shortest: OK
Features:

1: LIT|a literal character | 5.454545454545454
2: ANY|any non-newline char | 0.36363636363636365
3: KLE|zero-or-more repetition | 0.18181818181818182
4: CG|a capture group | 0.09090909090909091
5: STR|start-of-line | 0.09090909090909091
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.09090909090909091


0000 | 0004 | '\\s*SELECT'
0001 | 0003 | '__FAIL(.*)__FAIL'
0002 | 0002 | '127.0.0.1:0'
0003 | 0001 | 'OK'
0004 | 0001 | 'TA'
0005 | 0001 | 'LGA'
0006 | 0001 | 'BB01'
0007 | 0001 | 'ARRAY'
0008 | 0001 | 'BOOST'
0009 | 0001 | 'FLOAT'
0010 | 0001 | '^DATABASE'



cluster 23 stats:
nPatterns: 12.0
nProjects: 16
shortest: .*Variadic(?:DynCast)?AllOfMatcher\s*<\n                       \s*([^\s,]+)\s*(?:,\n                       \s*([^\s>]+)\s*)?>\n                       \s*([^\s;]+)\s*;\s*$
Features:

1: LIT|a literal character | 414.0
2: KLE|zero-or-more repetition | 6.583333333333333
3: CG|a capture group | 4.333333333333333
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.333333333333333
5: ANY|any non-newline char | 3.75
6: CCC|custom character class | 3.1666666666666665
7: QST|zero-or-one repetition | 2.9166666666666665
8: ADD|one-or-more repetition | 2.6666666666666665
9: NCG|group without capturing | 2.6666666666666665
10: RNG|chars within a range | 2.6666666666666665
11: NCCC|negated CCC | 1.9166666666666667
12: PNG|named capture group | 1.5
13: END|end-of-line | 1.4166666666666667
14: LZY|as few reps as possible | 1.3333333333333333
15: OR|logical or | 1.25
16: DEC|any of: 0123456789 | 0.8333333333333334
17: STR|start-of-line | 0.6666666666666666
18: DBB|$n\le x \le m$ repetition | 0.3333333333333333
19: LKA|matching sequence follows | 0.25
20: BKR|match the $i^{th}$ CG | 0.16666666666666666
21: ENDZ|absolute end of string | 0.16666666666666666
22: NLKB|sequence doesn't precede | 0.08333333333333333
23: NWSP|any non-whitespace | 0.08333333333333333
24: WRD|[a-zA-Z0-9\_] | 0.08333333333333333


0000 | 0003 | '        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)              # ...a number (with at least one digit)\n        (?P<int>\\d*)             # having a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'
0001 | 0003 | '    # indirect offset\n                ^\\(\n                (?P<base>&?0                  # just zero\n                        |&?[1-9]{1,1}[0-9]* # decimal\n                        |&?0[0-7]*          # octal\n                        |&?0x[0-9A-F]+      # hex\n                )\n                (?P<type>\n                        \\.         # this dot might be alone\n                        [BSL]? # one of this chars in either case\n                )?\n                (?P<sign>\n                        [-+]{0,1}\n                )?\n                (?P<off>0              # just zero\n                        |[1-9]{1,1}[0-9]*  # decimal\n                        |0[0-7]*           # octal\n                        |0x[0-9a-f]+       # hex\n                )?\n                \\)$'
0002 | 0003 | '^\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    *'
0003 | 0002 | '\n    (\\n)?                            # leading line = $1\n    (^[ \\t]*)                        # leading whitespace = $2\n    ([*+-]|\\d+[.]) [ \\t]+            # list marker = $3\n    ((?:.+?)                         # list item text = $4\n    (\\n{1,2}))\n    (?= \\n* (\\Z | \\2 ([*+-]|\\d+[.]) [ \\t]+))\n    '
0004 | 0002 | '\n        ^\n        \\s*\n        (?P<operator>(==|!=|<=|>=|<|>))\n        \\s*\n        (?P<version>\n            [^\\s]* # We just match everything, except for whitespace since this\n                   # is a "legacy" specifier and the version string can be just\n                   # about anything.\n        )\n        \\s*\n        $\n        '
0005 | 0002 | ' (                        # wrap whole match in $1\n                  !\\[\n                    (.*?)               # alt text = $2\n                  \\]\n                  \\(                    # literal paren\n                        [ \\t]*\n                        <?(\\S+?)>?      # src url = $3\n                        [ \\t]*\n                        (               # $4\n                        ([\\\'\\"])        # quote char = $5\n                          (.*?)         # title = $6\n                          \\5            # matching quote\n                          [ \\t]*\n                        )?              # title is optional\n                  \\)\n                )\n    '
0006 | 0001 | '.*Variadic(?:DynCast)?AllOfMatcher\\s*<\n                       \\s*([^\\s,]+)\\s*(?:,\n                       \\s*([^\\s>]+)\\s*)?>\n                       \\s*([^\\s;]+)\\s*;\\s*$'
0007 | 0001 | '\n    ::(?=[^=])|            # two :: (but NOT ::=)\n    :[a-zA-Z][a-zA-Z0-9]+| # :foo\n    `|                     # ` (seldom used by itself)\n    (?<!\\.)\\.\\.[ \\t]*\\w+:  # .. foo: (but NOT ... else:)\n    '
0008 | 0001 | "\n    (                       # Wrap whole match in $1\n     (\n       ^[ \\t]*&gt;[ \\t]?       # '>' at the start of a line\n       .+\\n                 # rest of the first line\n       (.+\\n)*              # subsequent consecutive lines\n       \\n*                  # blanks\n      )+\n    )"
0009 | 0001 | '^(?P<scheme>[a-zA-Z0-9]+)://                         # scheme\n                        ((?P<avatar>[^:@]+)(:(?P<password>[^@]+))?@)?       # avatar name and password (optional)\n                        (?P<host>[^:/]+)(:(?P<port>\\d+))?                   # host, port (optional)\n                        (?P<path>/.*)                                       # path\n                       $'
0010 | 0001 | '\n            (?:^[ \\t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        '
0011 | 0001 | '^\\s*AST_POLYMORPHIC_MATCHER(_P)?(.?)(?:_OVERLOAD)?\\(\n                          \\s*([^\\s,]+)\\s*,\n                          \\s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\\(([^)]*)\\)\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'



cluster 24 stats:
nPatterns: 1.0
nProjects: 12
shortest:  *, *
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0


0000 | 0012 | ' *, *'



cluster 25 stats:
nPatterns: 2.0
nProjects: 11
shortest: ^@executable_path/
Features:

1: LIT|a literal character | 20.5
2: STR|start-of-line | 1.0
3: KLE|zero-or-more repetition | 0.5


0000 | 0010 | '^#! */usr/local/bin/python'
0001 | 0001 | '^@executable_path/'



cluster 26 stats:
nPatterns: 3.0
nProjects: 10
shortest: sun
Features:

1: LIT|a literal character | 5.0
2: STR|start-of-line | 0.3333333333333333


0000 | 0008 | 'wuzzy'
0001 | 0001 | 'sun'
0002 | 0001 | '^summary'



cluster 27 stats:
nPatterns: 4.0
nProjects: 10
shortest: (?i)python.exe
Features:

1: LIT|a literal character | 12.75
2: ANY|any non-newline char | 1.0
3: OPT|options wrapper | 0.75
4: CG|a capture group | 0.5
5: KLE|zero-or-more repetition | 0.5


0000 | 0007 | '(?i)python.exe'
0001 | 0002 | '(?i)handy(.*)nummer'
0002 | 0002 | '(?i)pager(.*)nummer'
0003 | 0001 | 'devicemanager.DMError'



cluster 28 stats:
nPatterns: 8.0
nProjects: 10
shortest: type=(B|R|)
Features:

1: LIT|a literal character | 11.0
2: OR|logical or | 1.0
3: CCC|custom character class | 0.625
4: CG|a capture group | 0.375
5: END|end-of-line | 0.25
6: ADD|one-or-more repetition | 0.125
7: ANY|any non-newline char | 0.125
8: DEC|any of: 0123456789 | 0.125
9: LKA|matching sequence follows | 0.125
10: NCG|group without capturing | 0.125
11: STR|start-of-line | 0.125
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125


0000 | 0002 | 'type=(B|R|)'
0001 | 0002 | '\\\\(t|n|r|"|\\\\)'
0002 | 0002 | ':|\\*|\\?|"|<|>|\\|'
0003 | 0001 | ' |,|"|=|[|]'
0004 | 0001 | '[;\\s\\/\\+]$|^$|(?=: ).'
0005 | 0001 | u'(?:\\.svg|\\.png|\\.jpg)'
0006 | 0001 | '([+*/\\%^\\&|-]|<<|>>|\\*\\*|//)='
0007 | 0001 | '\\d+|>>|<<|[<>!=]=|&&|\\|\\||[-+*/%^&<>?:|!()n]'



cluster 29 stats:
nPatterns: 7.0
nProjects: 9
shortest: "(png|jpeg|csv|netcdf|tiff)"
Features:

1: LIT|a literal character | 32.0
2: CG|a capture group | 1.4285714285714286
3: OR|logical or | 1.1428571428571428
4: DEC|any of: 0123456789 | 0.42857142857142855
5: ADD|one-or-more repetition | 0.2857142857142857
6: ANY|any non-newline char | 0.2857142857142857
7: DBB|$n\le x \le m$ repetition | 0.14285714285714285
8: KLE|zero-or-more repetition | 0.14285714285714285
9: LWB|at least n repetition | 0.14285714285714285
10: NCG|group without capturing | 0.14285714285714285
11: STR|start-of-line | 0.14285714285714285
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0003 | '^(pgpgin|pgpgout|pswpin|pswpout)\\s(\\d+)'
0001 | 0002 | '(mapperprop|mapper|table|column|session|attribute|engine):(.*)'
0002 | 0001 | '"(png|jpeg|csv|netcdf|tiff)"'
0003 | 0001 | '@(?:end|implementation|protocol)'
0004 | 0001 | 'ip(engine|controller)-.+\\.(log|err|out)'
0005 | 0001 | '\\d{1,} (minutes|minute|hours|hour|day|days) ago'
0006 | 0001 | u'(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec) (\\d{1,2})'



cluster 30 stats:
nPatterns: 4.0
nProjects: 8
shortest: 0D
Features:

1: LIT|a literal character | 3.0


0000 | 0003 | '0D'
0001 | 0003 | 'PM'
0002 | 0001 | '%PDF'
0003 | 0001 | 'SID='



cluster 31 stats:
nPatterns: 8.0
nProjects: 8
shortest: ^1.2.840.10008.[0-9.]+ (.*)$
Features:

1: LIT|a literal character | 26.75
2: ANY|any non-newline char | 4.75
3: CG|a capture group | 1.625
4: ADD|one-or-more repetition | 1.0
5: CCC|custom character class | 1.0
6: RNG|chars within a range | 1.0
7: END|end-of-line | 0.625
8: STR|start-of-line | 0.625
9: KLE|zero-or-more repetition | 0.375


0000 | 0003 | '[ \t]+([A-Z0-9]+) \\/\\* PBXTargetDependency \\*\\/,\n'
0001 | 0002 | 'FlashCopy Mapping, id \\[([0-9]+)\\], successfully created'
0002 | 0001 | '^1.2.840.10008.[0-9.]+ (.*)$'
0003 | 0001 | '^Fan.#([0-9]+).information:$'
0004 | 0001 | '(....)-(..)-(..)T(..):(..):(..)....Z'
0005 | 0001 | '^Server.Blade.#([0-9]+).Information:$'
0006 | 0001 | '^1.2.840.10008.[0-9.]+ (.*) \\(Retired\\)$'
0007 | 0001 | '^1.2.840.10008.[0-9.]+ (.*) Well-known frame of reference$'



cluster 32 stats:
nPatterns: 1.0
nProjects: 7
shortest: (?<!\\)([aAbBcdDEfFgGhHiIjlLmMnNOPrsStTUuwWyYzZ])
Features:

1: LIT|a literal character | 39.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: NLKB|sequence doesn't precede | 1.0


0000 | 0007 | '(?<!\\\\)([aAbBcdDEfFgGhHiIjlLmMnNOPrsStTUuwWyYzZ])'



cluster 33 stats:
nPatterns: 3.0
nProjects: 7
shortest: \shan(ds)ome\s
Features:

1: LIT|a literal character | 12.666666666666666
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.3333333333333335
3: KLE|zero-or-more repetition | 1.0
4: ADD|one-or-more repetition | 0.6666666666666666
5: STR|start-of-line | 0.6666666666666666
6: CG|a capture group | 0.3333333333333333


0000 | 0005 | '^\\.\\.\\s+autosummary::\\s*'
0001 | 0001 | '\\shan(ds)ome\\s'
0002 | 0001 | '^\\s*\\.\\.\\s+autosummary::\\s*'



cluster 34 stats:
nPatterns: 7.0
nProjects: 7
shortest: (\.pc|/bin/.+-config)$
Features:

1: LIT|a literal character | 21.428571428571427
2: ADD|one-or-more repetition | 1.1428571428571428
3: DEC|any of: 0123456789 | 1.0
4: ANY|any non-newline char | 0.7142857142857143
5: CG|a capture group | 0.7142857142857143
6: END|end-of-line | 0.5714285714285714
7: STR|start-of-line | 0.5714285714285714
8: OR|logical or | 0.42857142857142855
9: CCC|custom character class | 0.14285714285714285
10: KLE|zero-or-more repetition | 0.14285714285714285
11: NCCC|negated CCC | 0.14285714285714285
12: NLKA|sequence doesn't follow  | 0.14285714285714285
13: QST|zero-or-one repetition | 0.14285714285714285
14: WRD|[a-zA-Z0-9\_] | 0.14285714285714285


0000 | 0002 | '^www\\.|^(?!http)\\w[^@]+\\.(com|edu|gov|int|mil|net|org)$'
0001 | 0001 | '(\\.pc|/bin/.+-config)$'
0002 | 0001 | 'dhcp.pool.allow_booting.\\d'
0003 | 0001 | 'nic\\.(\\d+)\\.mac_address\\.0'
0004 | 0001 | '^nic\\.\\d+\\.dns_auto_build\\.\\d+$'
0005 | 0001 | '^nic\\.\\d+\\.dns_has_conflict\\.\\d+$'
0006 | 0001 | 'Intel(\\(R\\))? (.*) processor [\\d]+MHz'



cluster 35 stats:
nPatterns: 5.0
nProjects: 7
shortest: :( *\n     \|\n)\x02
Features:

1: LIT|a literal character | 46.0
2: KLE|zero-or-more repetition | 1.6
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: OR|logical or | 1.0
6: ADD|one-or-more repetition | 0.8
7: ANY|any non-newline char | 0.8
8: CCC|custom character class | 0.8
9: RNG|chars within a range | 0.8
10: QST|zero-or-one repetition | 0.6
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6
12: PNG|named capture group | 0.4
13: NCG|group without capturing | 0.2
14: OPT|options wrapper | 0.2


0000 | 0002 | ':( *\n     \\|\n)\x02'
0001 | 0002 | '(?x)(\n        (?:0|[1-9]\\d*)\n        (\\.\\d+)?\n        ([eE][-+]?\\d+)? |\n        (0x[a-fA-F0-9]+)\n    )'
0002 | 0002 | '\\s*\n      (?P<mnemonic>JMP|JRP|LDN|STOP|STO|SUB|CMP)  \n       \\s* \n      (?P<arg>\\d+)        # numeric argument'
0003 | 0001 | '\n        \\(CODE .*\\)\n        |\\(ID .*\\d\\)\n    '
0004 | 0001 | '\n                <.*>_CODE\n                |\\s.*_ID\n        '



cluster 36 stats:
nPatterns: 3.0
nProjects: 6
shortest: gml:coordinates>([-\d\.]+),([-\d\.]+)<
Features:

1: LIT|a literal character | 33.333333333333336
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.3333333333333333
4: DEC|any of: 0123456789 | 1.0
5: ANY|any non-newline char | 0.6666666666666666
6: CCC|custom character class | 0.6666666666666666
7: END|end-of-line | 0.6666666666666666
8: KLE|zero-or-more repetition | 0.6666666666666666
9: NCCC|negated CCC | 0.6666666666666666
10: QST|zero-or-one repetition | 0.6666666666666666
11: STR|start-of-line | 0.6666666666666666


0000 | 0004 | u'^{"type":"Point","coordinates":\\[-95.363151,29.763374,18(\\.0+)?\\]}$'
0001 | 0001 | 'gml:coordinates>([-\\d\\.]+),([-\\d\\.]+)<'
0002 | 0001 | '^reporter:counter:([^,]*),([^,]*),(-?\\d+)$'



cluster 37 stats:
nPatterns: 7.0
nProjects: 6
shortest: ^new file mode (.+)
Features:

1: LIT|a literal character | 19.142857142857142
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: ANY|any non-newline char | 0.8571428571428571
5: ADD|one-or-more repetition | 0.5714285714285714
6: NCCC|negated CCC | 0.42857142857142855
7: STR|start-of-line | 0.42857142857142855
8: CCC|custom character class | 0.14285714285714285
9: WRD|[a-zA-Z0-9\_] | 0.14285714285714285
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0002 | '[^aeiouy]*[aeiouy]+[^aeiouy](\\w*)'
0001 | 0001 | '^new file mode (.+)'
0002 | 0001 | '^GlueSiteUniqueID=(.*)'
0003 | 0001 | '^GlueSiteUniqueID: (.*)'
0004 | 0001 | '//\\s+FaketimeFlags:(.*)'
0005 | 0001 | 'build/bdist\\.[^/]+/egg/(.*)'
0006 | 0001 | 'GlueForeignKey: GlueSiteUniqueID=(.*)'



cluster 38 stats:
nPatterns: 5.0
nProjects: 5
shortest: _h?480p\.mov$
Features:

1: LIT|a literal character | 13.2
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 0.6
4: KLE|zero-or-more repetition | 0.6
5: QST|zero-or-one repetition | 0.4
6: CCC|custom character class | 0.2
7: CG|a capture group | 0.2
8: OR|logical or | 0.2
9: RNG|chars within a range | 0.2


0000 | 0001 | u'_h?480p\\.mov$'
0001 | 0001 | '.*@example\\.com$'
0002 | 0001 | '[a-z]*.example.com'
0003 | 0001 | '__init__.py(c|o)?$'
0004 | 0001 | 'exampleLocalVar.*abcde'



cluster 39 stats:
nPatterns: 1.0
nProjects: 4
shortest: Ran (\d+) tests
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0004 | 'Ran (\\d+) tests'



cluster 40 stats:
nPatterns: 3.0
nProjects: 4
shortest: diff -
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 0.3333333333333333
3: KLE|zero-or-more repetition | 0.3333333333333333
4: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0002 | 'diff -'
0001 | 0001 | 'child *::'
0002 | 0001 | 'Audio: \\w+'



cluster 41 stats:
nPatterns: 4.0
nProjects: 4
shortest: try
Features:

1: LIT|a literal character | 5.0


0000 | 0001 | 'try'
0001 | 0001 | 'bvecs'
0002 | 0001 | 'tree='
0003 | 0001 | "':true,"



cluster 42 stats:
nPatterns: 2.0
nProjects: 4
shortest: @@BINARYDIR@@
Features:

1: LIT|a literal character | 16.5


0000 | 0004 | '@@BINARYDIR@@'
0001 | 0004 | '@@PACKAGE_PROVIDES@@'



cluster 43 stats:
nPatterns: 3.0
nProjects: 4
shortest: \bminus\b
Features:

1: LIT|a literal character | 9.666666666666666
2: WNW|word/non-word boundary | 2.0


0000 | 0002 | '\\bminus\\b'
0001 | 0001 | '\\bmethod=text\\b'
0002 | 0001 | '\\bLCOV_EXCL_END\\b'



cluster 44 stats:
nPatterns: 3.0
nProjects: 4
shortest: j2sdk(.+)/jre/lib/i386/client/libjvm.so
Features:

1: LIT|a literal character | 55.666666666666664
2: ANY|any non-newline char | 1.3333333333333333
3: CG|a capture group | 1.0
4: ADD|one-or-more repetition | 0.6666666666666666
5: KLE|zero-or-more repetition | 0.3333333333333333
6: LZY|as few reps as possible | 0.3333333333333333


0000 | 0002 | '<title>(.+?) - Wikipedia, the free encyclopedia</title>'
0001 | 0001 | 'j2sdk(.+)/jre/lib/i386/client/libjvm.so'
0002 | 0001 | ' border-color : #e7d796;margin-bottom : 1em; color : #9a8c59;">Article note: (.*)</div>'



cluster 45 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^@[Dd][Aa][Tt][Aa]
Features:

1: LIT|a literal character | 9.0
2: CCC|custom character class | 4.0
3: STR|start-of-line | 1.0


0000 | 0003 | '^@[Dd][Aa][Tt][Aa]'



cluster 46 stats:
nPatterns: 1.0
nProjects: 3
shortest: browser.search.order.([1-9])
Features:

1: LIT|a literal character | 20.0
2: ANY|any non-newline char | 3.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0003 | 'browser.search.order.([1-9])'



cluster 47 stats:
nPatterns: 2.0
nProjects: 3
shortest: (\d+) seconds
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0002 | '(\\d+) megabytes'
0001 | 0001 | '(\\d+) seconds'



cluster 48 stats:
nPatterns: 3.0
nProjects: 3
shortest: irr.ru
Features:

1: LIT|a literal character | 7.333333333333333
2: ANY|any non-newline char | 1.3333333333333333
3: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0001 | 'irr.ru'
0001 | 0001 | 'init.*.rc'
0002 | 0001 | 'in-addr.arpa'



cluster 49 stats:
nPatterns: 2.0
nProjects: 3
shortest: \(used in test .+\) 
Features:

1: LIT|a literal character | 16.5
2: CG|a capture group | 1.0
3: ADD|one-or-more repetition | 0.5
4: ANY|any non-newline char | 0.5
5: KLE|zero-or-more repetition | 0.5
6: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | '\\(used in test .+\\) '
0001 | 0001 | '(build_git_sha = ")(\\w)*'



cluster 50 stats:
nPatterns: 4.0
nProjects: 3
shortest: (?i)\b(T)(is)\b
Features:

1: LIT|a literal character | 6.75
2: CG|a capture group | 1.75
3: WNW|word/non-word boundary | 1.5
4: OPT|options wrapper | 1.0
5: ANY|any non-newline char | 0.25
6: KLE|zero-or-more repetition | 0.25
7: LZY|as few reps as possible | 0.25
8: QST|zero-or-one repetition | 0.25
9: STR|start-of-line | 0.25


0000 | 0002 | '(?sm)\\A.*?!( LaTeX Error:)?'
0001 | 0001 | '(?i)\\b(T)(is)\\b'
0002 | 0001 | '(?i)\\b(T)(was)\\b'
0003 | 0001 | '(?i)\\b(can)(not)\\b'



cluster 51 stats:
nPatterns: 4.0
nProjects: 3
shortest: \.egg(?:-info)?(?:/|$)
Features:

1: LIT|a literal character | 11.0
2: CCC|custom character class | 2.0
3: OR|logical or | 1.5
4: NCG|group without capturing | 1.0
5: RNG|chars within a range | 1.0
6: CG|a capture group | 0.75
7: END|end-of-line | 0.75
8: QST|zero-or-one repetition | 0.75
9: NLKA|sequence doesn't follow  | 0.25
10: NLKB|sequence doesn't precede | 0.25
11: OPT|options wrapper | 0.25


0000 | 0001 | '\\.egg(?:-info)?(?:/|$)'
0001 | 0001 | '[$_]?(?:is|has)($|[A-Z_])'
0002 | 0001 | '[$_]?(?:set|add)($|[A-Z_])'
0003 | 0001 | '(?i)(?<![A-Z])E([ABCD]X|[SD]I)(?![A-Z])'



cluster 52 stats:
nPatterns: 2.0
nProjects: 3
shortest: (-----BEGIN CERTIFICATE-----\n.+?\n-----END CERTIFICATE-----)
Features:

1: LIT|a literal character | 56.0
2: CG|a capture group | 1.5
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: LZY|as few reps as possible | 1.0
6: CCC|custom character class | 0.5
7: KLE|zero-or-more repetition | 0.5
8: NCG|group without capturing | 0.5
9: OR|logical or | 0.5
10: RNG|chars within a range | 0.5


0000 | 0002 | '((?:DEBUG|INFO|NOTICE|WARNING|ERROR|FATAL|HINT|DETAIL|CONTEXT|LINE [0-9]+):)(.*?\\n)'
0001 | 0001 | '(-----BEGIN CERTIFICATE-----\\n.+?\\n-----END CERTIFICATE-----)'



cluster 53 stats:
nPatterns: 4.0
nProjects: 3
shortest: "v8_revision": "123455"
Features:

1: LIT|a literal character | 21.5
2: CG|a capture group | 1.5
3: ADD|one-or-more repetition | 1.0
4: RNG|chars within a range | 1.0
5: ANY|any non-newline char | 0.75
6: CCC|custom character class | 0.75
7: LZY|as few reps as possible | 0.75
8: OR|logical or | 0.75
9: QST|zero-or-one repetition | 0.5
10: KLE|zero-or-more repetition | 0.25
11: LKA|matching sequence follows | 0.25
12: LKB|matching sequence precedes | 0.25
13: SNG|exactly n repetition | 0.25
14: STR|start-of-line | 0.25


0000 | 0001 | '"v8_revision": "123455"'
0001 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'
0002 | 0001 | '/(release|recording)/([0-9a-z\\-]{36})'
0003 | 0001 | '^(.+?)/|/?(.+?)/main/?.*?/([0-9]+|CHECKEDOUT)'



cluster 54 stats:
nPatterns: 1.0
nProjects: 2
shortest: &#8216;
Features:

1: LIT|a literal character | 7.0


0000 | 0002 | '&#8216;'



cluster 55 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^Vendor:
Features:

1: LIT|a literal character | 7.0
2: STR|start-of-line | 1.0


0000 | 0002 | '^Vendor:'



cluster 56 stats:
nPatterns: 2.0
nProjects: 2
shortest: _$
Features:

1: LIT|a literal character | 1.5
2: END|end-of-line | 0.5


0000 | 0001 | '_$'
0001 | 0001 | '__'



cluster 57 stats:
nPatterns: 1.0
nProjects: 2
shortest: This is file for test_formatted_disk.
Features:

1: LIT|a literal character | 36.0
2: ANY|any non-newline char | 1.0


0000 | 0002 | 'This is file for test_formatted_disk.'



cluster 58 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(dict|dictionary|map|mapping) from ([\w\.]+) to ([\w\.]+)$
Features:

1: LIT|a literal character | 36.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: CCC|custom character class | 2.0
5: WRD|[a-zA-Z0-9\_] | 2.0
6: END|end-of-line | 1.0
7: OR|logical or | 1.0
8: STR|start-of-line | 1.0


0000 | 0002 | '^(dict|dictionary|map|mapping) from ([\\w\\.]+) to ([\\w\\.]+)$'



cluster 59 stats:
nPatterns: 2.0
nProjects: 2
shortest: (\d+) leaks? excluded
Features:

1: LIT|a literal character | 23.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: QST|zero-or-one repetition | 0.5


0000 | 0001 | '(\\d+) leaks? excluded'
0001 | 0001 | 'Job <(\\d+)>: Job has already finished'



cluster 60 stats:
nPatterns: 2.0
nProjects: 2
shortest: (Input \#.*)\n(Must|At\sleast)
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 1.5
5: OR|logical or | 0.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '(Input \\#.*)\n(Must|At\\sleast)'
0001 | 0001 | 'About\\((.*)\\).should_not_include\\((.*)\\)'



cluster 61 stats:
nPatterns: 3.0
nProjects: 2
shortest: [-d]  (setuptools|distribute)
Features:

1: LIT|a literal character | 27.333333333333332
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: ADD|one-or-more repetition | 0.3333333333333333
5: CCC|custom character class | 0.3333333333333333
6: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0001 | '[-d]  (setuptools|distribute)'
0001 | 0001 | 'Got (setuptools|distribute) \\S+'
0002 | 0001 | 'This is (pdfTeXk|latex2e|latex|XeTeXk)'



cluster 62 stats:
nPatterns: 2.0
nProjects: 2
shortest: <\w+[^>]*>|</\w+>|[\w\']+|\s+|[^\w\'\s<>/]+
Features:

1: LIT|a literal character | 23.5
2: ADD|one-or-more repetition | 3.5
3: WRD|[a-zA-Z0-9\_] | 2.0
4: NCCC|negated CCC | 1.5
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: DEC|any of: 0123456789 | 1.0
8: END|end-of-line | 1.0
9: KLE|zero-or-more repetition | 1.0
10: OR|logical or | 1.0
11: STR|start-of-line | 1.0
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
13: CCC|custom character class | 0.5
14: NLKA|sequence doesn't follow  | 0.5
15: QST|zero-or-one repetition | 0.5
16: RNG|chars within a range | 0.5


0000 | 0001 | "<\\w+[^>]*>|</\\w+>|[\\w\\']+|\\s+|[^\\w\\'\\s<>/]+"
0001 | 0001 | '^(?!^(PRN|AUX|CLOCK\\$|NUL|CON|COM\\d|LPT\\d|\\..*)(\\..+)?$)[^\\x00-\\x1f\\\\?*:\\";|/]+$'



cluster 63 stats:
nPatterns: 1.0
nProjects: 1
shortest:  ( +)|^ 
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: OR|logical or | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | ' ( +)|^ '



cluster 64 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^ascii\.
Features:

1: LIT|a literal character | 6.0
2: STR|start-of-line | 1.0


0000 | 0001 | '^ascii\\.'



cluster 65 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^class .+
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^class .+'



cluster 66 stats:
nPatterns: 1.0
nProjects: 1
shortest: \/title\/tt
Features:

1: LIT|a literal character | 9.0


0000 | 0001 | '\\/title\\/tt'



cluster 67 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.(txt|anno)$
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: OR|logical or | 1.0


0000 | 0001 | '\\.(txt|anno)$'



cluster 68 stats:
nPatterns: 1.0
nProjects: 1
shortest: arrResume\[\d*\]
Features:

1: LIT|a literal character | 11.0
2: DEC|any of: 0123456789 | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'arrResume\\[\\d*\\]'



cluster 69 stats:
nPatterns: 1.0
nProjects: 1
shortest: [^{}]*{[^{}]*}[^{}]*
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 3.0
3: NCCC|negated CCC | 3.0


0000 | 0001 | '[^{}]*{[^{}]*}[^{}]*'



cluster 70 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[Image:.*\]\]
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '\\[\\[Image:.*\\]\\]'



cluster 71 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.?\.?\.\.\.\.$
Features:

1: LIT|a literal character | 6.0
2: QST|zero-or-one repetition | 2.0
3: END|end-of-line | 1.0


0000 | 0001 | '\\.?\\.?\\.\\.\\.\\.$'



cluster 72 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(In \[\d+\]: |\s*\.{3,}: ?)
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: KLE|zero-or-more repetition | 1.0
6: LWB|at least n repetition | 1.0
7: OR|logical or | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'



cluster 73 stats:
nPatterns: 2.0
nProjects: 1
shortest: .+(?<=archives/)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: LKB|matching sequence precedes | 1.0


0000 | 0001 | '.+(?<=archives/)'
0001 | 0001 | '.+(?<=spektakl/)'



cluster 74 stats:
nPatterns: 1.0
nProjects: 1
shortest: [\-]{5}END( RSA| DSA)? PRIVATE KEY[\-]{5}
Features:

1: LIT|a literal character | 25.0
2: CCC|custom character class | 2.0
3: SNG|exactly n repetition | 2.0
4: CG|a capture group | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0001 | '[\\-]{5}END( RSA| DSA)? PRIVATE KEY[\\-]{5}'



cluster 75 stats:
nPatterns: 2.0
nProjects: 1
shortest: ''(?P<t>[^\s']+( +[^\s']+)*)''
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 3.0
3: NCCC|negated CCC | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: KLE|zero-or-more repetition | 1.0
6: PNG|named capture group | 1.0
7: CG|a capture group | 0.5
8: NCG|group without capturing | 0.5


0000 | 0001 | "''(?P<t>[^\\s']+( +[^\\s']+)*)''"
0001 | 0001 | "''(?P<t>[^\\s']+(?: +[^\\s']+)*)''"



