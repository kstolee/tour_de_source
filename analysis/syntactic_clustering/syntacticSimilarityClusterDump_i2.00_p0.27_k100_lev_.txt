Cluster stats:

nClusters: 141
TotalPatterns: 1332
totalnProjects: 727
suffix: _i2.00_p0.27_k100_lev_


cluster 0 stats:
nPatterns: 200.0
nProjects: 309
shortest: ^[0-9]
Features:

1: LIT|a literal character | 11.305
2: RNG|chars within a range | 2.99
3: CCC|custom character class | 1.775
4: ADD|one-or-more repetition | 1.08
5: CG|a capture group | 1.055
6: KLE|zero-or-more repetition | 0.645
7: END|end-of-line | 0.375
8: STR|start-of-line | 0.35
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25
10: QST|zero-or-one repetition | 0.24
11: ANY|any non-newline char | 0.195
12: OR|logical or | 0.175
13: SNG|exactly n repetition | 0.13
14: NCCC|negated CCC | 0.12
15: DEC|any of: 0123456789 | 0.075
16: NCG|group without capturing | 0.06
17: DBB|$n\le x \le m$ repetition | 0.055
18: WRD|[a-zA-Z0-9\_] | 0.04
19: LZY|as few reps as possible | 0.03
20: LWB|at least n repetition | 0.02
21: WNW|word/non-word boundary | 0.02
22: ENDZ|absolute end of string | 0.01
23: LKA|matching sequence follows | 0.01
24: NLKA|sequence doesn't follow  | 0.01
25: NLKB|sequence doesn't precede | 0.01
26: LKB|matching sequence precedes | 0.005
27: OPT|options wrapper | 0.005
28: PNG|named capture group | 0.005


0000 | 0057 | '<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'
0001 | 0039 | '([\x80-\x9f])'
0002 | 0020 | '[^a-zA-Z0-9]'
0003 | 0018 | '[a-zA-Z][-_.:a-zA-Z0-9]*\\s*'
0004 | 0016 | '&([a-zA-Z][a-zA-Z0-9]*|#[0-9]*)?|<([a-zA-Z][^<>]*|/([a-zA-Z][^<>]*)?|![^<>]*)?'
0005 | 0015 | '[a-zA-Z][-.a-zA-Z0-9:_]*'
0006 | 0015 | '[a-zA-Z][-_.a-zA-Z0-9:]*\\s*'
0007 | 0014 | '^(.*):([0-9]+)$'
0008 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0009 | 0014 | '\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*))?'
0010 | 0012 | '\\$([a-zA-Z_][a-zA-Z_0-9]*)'
0011 | 0011 | '(In \\[[0-9]+\\]: )|(   \\.\\.\\.+:)'
0012 | 0009 | '([a-z0-9])([A-Z])'
0013 | 0008 | '[a-f0-9]+\\s+<.*:$'
0014 | 0007 | '^py[0-9]{2}$'
0015 | 0006 | '[0-9]+,[0-9]+'
0016 | 0006 | '&#(\\d+|[xX][0-9a-fA-F]+);'
0017 | 0005 | '^[a-z]+$'
0018 | 0005 | ', ([a-zA-Z0-9_]+)='
0019 | 0004 | ' at 0x[0-9a-f]+'
0020 | 0004 | '%(?![0-9A-Fa-f]{2})'
0021 | 0004 | '(.*) \\(([0-9]+)\\)$'
0022 | 0004 | u'&(#?[xX]?(?:[0-9a-fA-F]+|\\w{1,8}));'
0023 | 0004 | '^[A-Z0-9][a-z0-9]*(-[A-Z0-9][a-z0-9]*)*$'
0024 | 0003 | u'^[A-Z]{,3}$'
0025 | 0003 | '([A-Z][a-z]+)'
0026 | 0003 | '[0-9]+\\.[0-9]+'
0027 | 0003 | '([0-9]+):([0-9]+)'
0028 | 0003 | '^#[0-9A-Fa-f]{6}$'
0029 | 0003 | 'vport[0-9]p[0-9]+'
0030 | 0003 | u'^[-a-zA-Z0-9_]+$'
0031 | 0003 | '([-0-9.]+)([a-zA-Z]+)'
0032 | 0003 | '\\\\([0-3][0-7][0-7])'
0033 | 0003 | '\\\\u([0-9a-fA-F]{4})'
0034 | 0003 | u'^[1-9]\\d{2} ?\\d{2}$'
0035 | 0003 | '^[a-z0-9][a-z0-9_]{2,}$'
0036 | 0003 | '^[a-zA-Z0-9\\.\\-:+"]+$'
0037 | 0003 | '\\\\([0-9a-fA-F]{1,6})\\s?'
0038 | 0003 | '^struct +[a-zA-Z_][a-zA-Z0-9_]* *{$'
0039 | 0003 | '^\\s*#define SSH_([A-Z_]+)\\s+([0-9x]*)\\s*$'
0040 | 0003 | '&(?:#((?:\\d+)|(?:[xX][0-9a-fA-F]+));?|(\\w+);)'
0041 | 0003 | '^content-range: bytes ([0-9]+)-([0-9]+)/([0-9]+)$'
0042 | 0003 | '[ \t]+([A-Z0-9]+) \\/\\* PBXTargetDependency \\*\\/,\n'
0043 | 0002 | '^[0-9]'
0044 | 0002 | ':[0-9]*$'
0045 | 0002 | u'^[ -~]*$'
0046 | 0002 | '^([0-9]+)$'
0047 | 0002 | '^[0-9]{2}$'
0048 | 0002 | '^[0-9]{4}$'
0049 | 0002 | '^/dev/[a-z]+$'
0050 | 0002 | '(?i)([a-z]{2})'
0051 | 0002 | '[a-zA-Z_]\\w*$'
0052 | 0002 | u'--cols=[0-9]+'
0053 | 0002 | '[a-fA-F0-9]{1,4}'
0054 | 0002 | '([0-9]+)_([0-9]+)'
0055 | 0002 | '^[a-zA-Z0-9\\-]+$'
0056 | 0002 | '^md5=([a-f0-9]+)$'
0057 | 0002 | '^[a-zA-Z0-9_\\.]+$'
0058 | 0002 | '^[-+]?([0][0-7,]*)$'
0059 | 0002 | '([a-zA-Z]+)([A-Z][a-z])'
0060 | 0002 | '[A-Za-z_][A-Za-z0-9_]*$'
0061 | 0002 | '\\("id", "([0-9]+)"\\);'
0062 | 0002 | '^[-+]?(0|[1-9][0-9,]*)$'
0063 | 0002 | '([\\-0-9])|([\\-0-9]/[0-9])'
0064 | 0002 | '(~?\\b[a-zA-Z_][a-zA-Z0-9_]*)\\b'
0065 | 0002 | '(?:const-)?([A-Za-z0-9]+)\\*?\\s+'
0066 | 0002 | '&([a-zA-Z][a-zA-Z0-9]*)[^a-zA-Z0-9]'
0067 | 0002 | '^(\\-[3-9]{1,}|\\-{3,}|\\-[1-9][0-9]+)$'
0068 | 0002 | '^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'
0069 | 0002 | 'irb\\([a-zA-Z_][a-zA-Z0-9_]*\\):\\d{3}:\\d+[>*] '
0070 | 0002 | '^([ \\|0-9-]*)(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'
0071 | 0001 | '^[a-z]'
0072 | 0001 | '[0-9.]+'
0073 | 0001 | '[0-9]+:'
0074 | 0001 | '[a-z ]+'
0075 | 0001 | '[a-z%]+$'
0076 | 0001 | 'l[eo]af$'
0077 | 0001 | '^[+0-9]+$'
0078 | 0001 | '[A-Za-z_]+'
0079 | 0001 | '^-[LRuYz]$'
0080 | 0001 | '^[a-zA-Z]*'
0081 | 0001 | '^lib[^-]+-'
0082 | 0001 | u'[a-zA-Z]+'
0083 | 0001 | '([0-9\\-]+)'
0084 | 0001 | '(\\*|[0-9])'
0085 | 0001 | '.*[0-9]{6}$'
0086 | 0001 | '@([a-z_]+)@'
0087 | 0001 | '[^a-fA-F\\d]'
0088 | 0001 | '^.*[0-9]dev$'
0089 | 0001 | '-clone[1-9]*$'
0090 | 0001 | 'MSIE [1-7]\\b'
0091 | 0001 | '^A[0-9][^ ]+$'
0092 | 0001 | "[a-z\\-' \n\t]"
0093 | 0001 | '([\x00-\x7f]+)'
0094 | 0001 | '.*\\.([0-9]+)$'
0095 | 0001 | '@([a-zA-Z_]+)@'
0096 | 0001 | '[#][\\dA-F]{3}'
0097 | 0001 | '[0-9]+[a-zA-Z]'
0098 | 0001 | '[^0-9a-zA-Z._]'
0099 | 0001 | '[^a-zA-Z0-9_]+'
0100 | 0001 | '^=== ([A-Z_]+)'
0101 | 0001 | '^[a-zA-Z]\\w*$'
0102 | 0001 | '([A-Za-z0-9_]*)'
0103 | 0001 | 'N=50: ([.0-9]+)'
0104 | 0001 | '[a-zA-Z.;?<>-]+'
0105 | 0001 | '\x1b\\[[0-9;]*m'
0106 | 0001 | '([a-zA-Z0-9_.]+)'
0107 | 0001 | '^[0-9a-zA-Z- ]+$'
0108 | 0001 | '{[a-zA-Z_ 0-9]+}'
0109 | 0001 | u"([a-z]+)([,']*)"
0110 | 0001 | u'^[a-zA-Z0-9_]+$'
0111 | 0001 | "(^[A-Za-z\\' ]+$)"
0112 | 0001 | ' for ([0-9.]+)\\Z'
0113 | 0001 | '#[0-9a-fA-F]{3,6}'
0114 | 0001 | '[A-Z][A-Za-z]+\\('
0115 | 0001 | '[a-zA-Z0-9_\\-]+$'
0116 | 0001 | '[a-zA-Z]:(/|\\\\)'
0117 | 0001 | '^[A-Za-z0-9_]+\\('
0118 | 0001 | '^[a-zA-Z0-9]{40}$'
0119 | 0001 | 'ID_LENGTH=([0-9]*)'
0120 | 0001 | '^([0-9a-f]+) (.*)$'
0121 | 0001 | '^0x[a-fA-F0-9]{6}$'
0122 | 0001 | '^[a-z]\\d(?:,\\d)*'
0123 | 0001 | '</?\\s*[a-zA-Z0-9]+'
0124 | 0001 | '[0-9\\- \\(\\)]{14}'
0125 | 0001 | '[^-a-zA-Z_\\.0-9:]+'
0126 | 0001 | '^[0-9A-Z\\.]{1,10}$'
0127 | 0001 | u'\\xa7([0-9a-zA-Z])'
0128 | 0001 | "\\{([a-zA-Z\\']+)\\}"
0129 | 0001 | '^m_([0-9]+)_([0-9]+)'
0130 | 0001 | '(?:([0-9a-f]+):)?(.*)'
0131 | 0001 | '\\%\\([a-zA-Z0-9]+\\)'
0132 | 0001 | '^(scsi|ide)[0-9]+[^:]'
0133 | 0001 | '^[a-zA-Z0-9_\\-\\.]+$'
0134 | 0001 | '(.*)-[0-9_]+(.*[.]lib)'
0135 | 0001 | '(.cp\\(tt[0-9{7}]+\\))'
0136 | 0001 | 'Real/event = [0-9\\.]+'
0137 | 0001 | '[a-zA-Z][a-zA-Z0-9_]*$'
0138 | 0001 | u'Python ([a-z0-9\\.]+)'
0139 | 0001 | ', ([0-9]+\\.[0-9]+) fps'
0140 | 0001 | '^[ ]{0,3}:[ ]{1,3}(.*)$'
0141 | 0001 | '^\\s*=[A-Za-z_]+\\w*.*$'
0142 | 0001 | 'lighttpd-([0-9\\.]+) .*'
0143 | 0001 | '([A-Z]+_[a-z0-9]+\\.txt)'
0144 | 0001 | '(prot_[a-z0-9]+\\.fasta)'
0145 | 0001 | 'sta.b (tcc__[fr][0-9]*)$'
0146 | 0001 | '(?P<year>[12]{1}[0-9]{3})'
0147 | 0001 | '([A-Z][0-9]{2})([0-9]{3})'
0148 | 0001 | '[-+*/!@$%^&=.a-zA-Z0-9_]+'
0149 | 0001 | '(<([a-z0-9\\:\\-_]+)\\s+>)'
0150 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}'
0151 | 0001 | '^([-+]?[0-9]+)\\.([0-9]+)$'
0152 | 0001 | '^/[a-zA-Z0-9_-]{28}/file1$'
0153 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,}$'
0154 | 0001 | '[a-zA-Z_:][\\w\\.\\-_:]*\\Z'
0155 | 0001 | '\\\\([ \tn\\\\]|[0-7]{3,3})'
0156 | 0001 | 'data-i18n-[a-z0-9]+="(.+?)"'
0157 | 0001 | '([0-9]+\\.[0-9]+\\.[0-9]+).*'
0158 | 0001 | '[a-zA-Z0-9]+(-[a-zA-Z0-9]+)?'
0159 | 0001 | '(?<=\\(|\\))[a-z|A-Z]*(?=\\()'
0160 | 0001 | '([A-Za-z]+)(\\[[A-Za-z,]+\\])?'
0161 | 0001 | '^@[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0162 | 0001 | '(\\s+|\\A)#([a-zA-Z0-9\\-_]*)\\b'
0163 | 0001 | 'Content-Type: ?([a-zA-Z0-9\\-/]*)'
0164 | 0001 | '[a-zA-Z0-9_\\.]+/[a-zA-Z0-9_\\.]+'
0165 | 0001 | '^[\\(\\[\\{]([a-zA-Z])[\\]\\}\\)]'
0166 | 0001 | 'snapshot-pos,(0x[a-f0-9]+),(\\d+)'
0167 | 0001 | '&([a-zA-Z][-.a-zA-Z0-9]*|#[0-9]*)?'
0168 | 0001 | '[a-zA-Z0-9_]+:[a-zA-Z0-9_\\.\\-\\s]+'
0169 | 0001 | ' +([0-9]+) , ([0-9]+) *([0-9]+) *(.+)'
0170 | 0001 | '^([0-9a-fA-F]+) ([0-9a-fA-F]+)xx(.*)$'
0171 | 0001 | 'gene_name \\"([a-zA-Z-_\\/|.0-9]+)\\"'
0172 | 0001 | '^[-a-z0-9_.]+@[-a-z0-9]+\\.+[a-z]{2,6}'
0173 | 0001 | '#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])'
0174 | 0001 | '([0-9]+)[ \t]*([<>][=]?|=)[ \t]*([0-9]+)'
0175 | 0001 | '^(.*) Transfer Syntax PS ?[0-9].1?[0-9]$'
0176 | 0001 | '\\s*(class|def)\\s+[a-zA-Z_][a-zA-Z0-9_]*'
0177 | 0001 | "[A-Za-z0-9;/?:@&=+$,\\-_\\.!~*'\\(\\)%#]+$"
0178 | 0001 | '((\\[\\w*|[0-9]+\\.)(\\:|)).*(\\]|\\.[0-9]+)'
0179 | 0001 | '\\$\\{([_a-zA-Z][_a-zA-Z0-9]+)(\\?[^}]+)?\\}'
0180 | 0001 | '([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'
0181 | 0001 | '(/.*?)(\\(([0-9]+)\\)|):.*(Error|Warning):\\s*(.*)$'
0182 | 0001 | '^(svn\\+ssh|http|https|svn)://([-a-zA-Z0-9.]*@)(.*)$'
0183 | 0001 | '([A-Za-z0-9_]+\\s+)+([*A-Za-z0-9_::]+)\\s*\\([^)]*\\)'
0184 | 0001 | '[a-zA-Z0-9 !@#$%^&*()\\-_=+\\\\|`[\\]{};:\'\\",\\.<>]'
0185 | 0001 | '([a-zA-Z]|[0-9])(([a-zA-Z]|[0-9]|-)*([a-zA-Z]|[0-9]))?$'
0186 | 0001 | '^(.+?)[ \\._\\-][Ss]([0-9]+)[\\.\\- ]?[Ee]([0-9]+)[^\\/]*$'
0187 | 0001 | '^\\-?([0-9]+\\.?[0-9]*|[0-9]*\\.?[0-9]+)((E|e)\\-?[0-9]+)?$'
0188 | 0001 | '^(.+?)[ \\._\\-]\\[[Ss]([0-9]+?)\\]_\\[[Ee]([0-9]+?)\\]?[^\\/]*$'
0189 | 0001 | '([A-Za-z]+://)?(([A-Za-z0-9]+)(:[^:@]+)?@)?([^:/]+)(:[0-9]+)?(/.*)?'
0190 | 0001 | '^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$'
0191 | 0001 | '^([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*)(\\.([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*))*$'
0192 | 0001 | "^\\s*([A-Za-z0-9 '/-]+)\\s+\\(([0-9]+),([0-9A-Fa-fx]+)\\)\\s+([1-3])\\s+.*$"
0193 | 0001 | '(public|private|protected)\\s([A-Za-z0-9_]+\\s+)+([A-Za-z0-9_]+)\\s*\\([^)]*\\)'
0194 | 0001 | '^\\([0-9a-fA-Fx]+,[0-9a-fA-F]+\\)\\s+(.*)\\s+[A-Z][A-Z]\\s+([0-9n-]+)\\s+RET\\s*$'
0195 | 0001 | '^\\(([0-9a-fA-Fx]+),([0-9a-fA-F]+)\\)\\s+(.*)\\s+([A-Z][A-Z])\\s+([0-9n-]+)\\s+(RET)\\s*$'
0196 | 0001 | '(?<!\\")(?<!\\\\.)(?:[a-z|A-Z]+[0-9]+:?(?:[a-z|A-Z]+[0-9]+\\:?)?)(?:(?=[+\\-*/% \\,)])|(?!.))'
0197 | 0001 | '^\\s*([A-Za-z0-9> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+VR = ([A-Z][A-Z]), VM = ([0-9n-]+)\\s+(.*)\\s*$'
0198 | 0001 | '^\\s*([A-Za-z0-9()> -]+)\\s+\\(([0-9]+),([0-9A-Fx]+)\\)\\s+([A-Z][A-Z])\\s+([1-9n-]+)\\s+([A-Za-z_0-9. ]+)\\s*$'
0199 | 0001 | "([\\w.!~*'|;:&=+$,-]+@)?(([A-Za-z0-9]+[A-Za-z0-9\\-]*[A-Za-z0-9]+\\.)*([A-Za-z0-9]+\\.)*)*([A-Za-z]+[A-Za-z0-9\\-]*[A-Za-z0-9]+)\\.?(:\\d*)*$"



cluster 1 stats:
nPatterns: 57.0
nProjects: 262
shortest: s
Features:

1: LIT|a literal character | 1.3859649122807018
2: ADD|one-or-more repetition | 0.42105263157894735
3: END|end-of-line | 0.19298245614035087
4: STR|start-of-line | 0.19298245614035087
5: DEC|any of: 0123456789 | 0.17543859649122806
6: WRD|[a-zA-Z0-9\_] | 0.10526315789473684
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.08771929824561403
8: NWSP|any non-whitespace | 0.05263157894736842
9: SNG|exactly n repetition | 0.05263157894736842
10: WNW|word/non-word boundary | 0.05263157894736842
11: KLE|zero-or-more repetition | 0.03508771929824561
12: NWRD|non-word chars | 0.03508771929824561
13: OR|logical or | 0.03508771929824561
14: CG|a capture group | 0.017543859649122806
15: DBB|$n\le x \le m$ repetition | 0.017543859649122806
16: LWB|at least n repetition | 0.017543859649122806
17: QST|zero-or-one repetition | 0.017543859649122806


0000 | 0078 | '\\s'
0001 | 0049 | '^\\d+$'
0002 | 0041 | '\n'
0003 | 0038 | '\\(\\*'
0004 | 0026 | '\\W+'
0005 | 0020 | '>\\s+<'
0006 | 0015 | '\\b\\w+\\b'
0007 | 0013 | '\\]\\]>'
0008 | 0012 | '^\\d{11}$'
0009 | 0010 | '\\w'
0010 | 0009 | '^-?\\d+$'
0011 | 0008 | 'b*'
0012 | 0008 | 'b+'
0013 | 0008 | '\n+'
0014 | 0008 | '^(\\w){1,2}$'
0015 | 0007 | '\t'
0016 | 0007 | 'a\\s'
0017 | 0007 | '\\\\\\\\'
0018 | 0007 | '\\\\EOF\\b'
0019 | 0006 | '^\\W+'
0020 | 0005 | '^\\d{5}$'
0021 | 0004 | '\\\\$'
0022 | 0004 | '\\d+-'
0023 | 0004 | u'>\\s+<'
0024 | 0003 | "\\\\'"
0025 | 0003 | '\\\\*\\n'
0026 | 0003 | '\\w+\\.rb'
0027 | 0003 | u'^\\d{11}$'
0028 | 0002 | 's'
0029 | 0002 | u"'"
0030 | 0002 | '\\-'
0031 | 0002 | '\\t+'
0032 | 0002 | '\\\\`'
0033 | 0002 | '\\n +'
0034 | 0002 | '\\n+$'
0035 | 0002 | '-\\d+$'
0036 | 0002 | '\\*\\S'
0037 | 0002 | ' {2,}\n'
0038 | 0002 | '\\.\\.\\.'
0039 | 0001 | 'sun'
0040 | 0001 | u'-+'
0041 | 0001 | u'-h'
0042 | 0001 | u'\n'
0043 | 0001 | '<\\w'
0044 | 0001 | '/\\d+'
0045 | 0001 | '2\\.3'
0046 | 0001 | '\\s+<'
0047 | 0001 | '\n\n+'
0048 | 0001 | '^\\S+'
0049 | 0001 | u'\\-+'
0050 | 0001 | '%\\w+%'
0051 | 0001 | '\\$\\d'
0052 | 0001 | '\\S+\\.a'
0053 | 0001 | '\\n|\\\\'
0054 | 0001 | '\\+vot\\+'
0055 | 0001 | '^\\.\\d+$'
0056 | 0001 | '^\\.|~$|^\\$'



cluster 2 stats:
nPatterns: 128.0
nProjects: 156
shortest: p=(\d+)
Features:

1: LIT|a literal character | 5.1015625
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.8046875
4: DEC|any of: 0123456789 | 1.34375
5: KLE|zero-or-more repetition | 0.53125
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.53125
7: QST|zero-or-one repetition | 0.4609375
8: ANY|any non-newline char | 0.40625
9: WRD|[a-zA-Z0-9\_] | 0.359375
10: END|end-of-line | 0.2578125
11: CCC|custom character class | 0.25
12: STR|start-of-line | 0.2421875
13: OR|logical or | 0.1953125
14: NCG|group without capturing | 0.1640625
15: NWSP|any non-whitespace | 0.125
16: NCCC|negated CCC | 0.1171875
17: LZY|as few reps as possible | 0.0859375
18: SNG|exactly n repetition | 0.0390625
19: NDEC|any non-decimal | 0.03125
20: NLKA|sequence doesn't follow  | 0.03125
21: DBB|$n\le x \le m$ repetition | 0.015625
22: RNG|chars within a range | 0.015625
23: BKR|match the $i^{th}$ CG | 0.0078125
24: ENDZ|absolute end of string | 0.0078125
25: LWB|at least n repetition | 0.0078125
26: NLKB|sequence doesn't precede | 0.0078125
27: NWRD|non-word chars | 0.0078125
28: WNW|word/non-word boundary | 0.0078125


0000 | 0019 | '\\$(\\w+|\\{[^}]*\\})'
0001 | 0019 | '(?<![\\w])(\\d+)L(?![\\w])'
0002 | 0016 | '&(?!(\\w+|#\\d+);)'
0003 | 0016 | 'macosx-(\\d+)\\.(\\d+)-(.*)'
0004 | 0012 | '(?:(\\w+)=)?(.+)'
0005 | 0012 | '(\\(|\\)|\\s+|-)'
0006 | 0007 | '([(\\[{])|([)}\\])])'
0007 | 0006 | 'nsyms\\s+(\\d+)'
0008 | 0005 | '\\s+(\\d+),$'
0009 | 0005 | '\\s+{(\\d+), "(\\w+)", (\\d+), (\\d+), states_(\\d+),$'
0010 | 0004 | '(\\S+)\\s*(.*)'
0011 | 0004 | u'^(-?\\d+)(\\d{3})'
0012 | 0004 | u'&(?!(\\w+|#\\d+);)'
0013 | 0004 | u'^\\S+@\\S+\\.\\S+$'
0014 | 0004 | '(\\d+)-(\\d+)-(\\d+)'
0015 | 0004 | '.*_([vV]\\d+\\.\\d+)$'
0016 | 0004 | '.*/.*_V(\\d+\\.\\d+)/mongo'
0017 | 0004 | '(\\d+)\\.(\\d+)(\\.(\\d+))?(b(\\d+))?'
0018 | 0003 | '(-)(\\d+)$'
0019 | 0003 | 'L -(\\d+) -\\d+'
0020 | 0003 | '(\\S+)\\s+(..+$)'
0021 | 0003 | u'(?:(\\w+)=)?(.+)'
0022 | 0003 | 'MemFree:\\s+(\\d+).*'
0023 | 0003 | '^\\s*([A-Z_]+): (\\d+)'
0024 | 0003 | '__(\\w+?)__\\s*=\\s*(.*)'
0025 | 0003 | u'^(\\d{3})-(\\d{3})-(\\d{3})$'
0026 | 0002 | '(\\w+\\W*)'
0027 | 0002 | 'Target\\s+(\\d+)'
0028 | 0002 | '^undo\\s+(\\d+)$'
0029 | 0002 | '((\\d*?)\\d{1,3})$'
0030 | 0002 | '(\\D)\\.(?!\\s)(\\D)'
0031 | 0002 | '(^|\\\\n)([^\\\\]*)$'
0032 | 0002 | '^(Y|X|A|N) ([\\S ]+)$'
0033 | 0002 | '(.+)_(\\d+)_(\\d+)_(.+)'
0034 | 0002 | 'Allocation:\\s+(\\S+.*)'
0035 | 0002 | '([idel])|(\\d+):|(-?\\d+)'
0036 | 0002 | '(id|.+_id)(\\d+)((?:-bb)?)'
0037 | 0002 | 'descr\\s+(\\S+?):\\s*(.*)$'
0038 | 0002 | '^(\\d*)\\.(\\d*)\\[(\\d+)\\]$'
0039 | 0002 | '^(\\w+)\\s*:\\s+(\\d+)\\s\\w+'
0040 | 0002 | '^(\\s+\\(copy-func\\s+)(\\w+)(.*)$'
0041 | 0002 | '%module(\\s*\\(.*\\))?\\s+("?)(.+)\\2'
0042 | 0002 | 'fail:(\\d+).*?fail:(\\d+).*fail:(\\d+)'
0043 | 0002 | '^(\\s+\\(c-name\\s+)([^\\s]+)(\\s*\\))$'
0044 | 0002 | '((?:[^{}]?[<>=^])?)([-+ ]?)(#?)(\\d*)(,?)((?:\\.\\d+)?)(.?)$'
0045 | 0002 | '\\s*import\\s+(\\S+)\\.([^\\s.]+)\\s+as\\s+(\\S+)(\\s+for\\s+(\\S+))?'
0046 | 0001 | ' ( +)|^ '
0047 | 0001 | 'p=(\\d+)'
0048 | 0001 | '\\((\\w+)'
0049 | 0001 | '\\d+:\\d+'
0050 | 0001 | '^(\\w+):$'
0051 | 0001 | 'new(\\w+)'
0052 | 0001 | '(ajax)\\d+'
0053 | 0001 | '\\(\\d+\\)'
0054 | 0001 | '\\s*(\\S+)'
0055 | 0001 | '(\\d\\.\\d)'
0056 | 0001 | '^\\d+:\\d+$'
0057 | 0001 | '\x1b\\[\\d+m'
0058 | 0001 | '^(\\d+)\\s*$'
0059 | 0001 | '^\\-+\\+\\-+$'
0060 | 0001 | '^\\s+(\\w+) ='
0061 | 0001 | '^nic\\.(\\d+)'
0062 | 0001 | '([^:]+):(\\S+)'
0063 | 0001 | 'Model:\\s+(.+)'
0064 | 0001 | '^(\\w+)\\([^;]'
0065 | 0001 | '^(\\w+)\\-\\-$'
0066 | 0001 | '(/dev/loop\\d+)'
0067 | 0001 | '(\\S+):\\s*(.*)'
0068 | 0001 | 'TORINO2:\\s\\d+'
0069 | 0001 | '(.*)\\(\\d+\\) :'
0070 | 0001 | '([^*]+)\\*(\\d+)'
0071 | 0001 | '(\\A|\\s)#(\\w+)'
0072 | 0001 | '(\\D*)(\\d*)(.*)'
0073 | 0001 | 'UNSEEN\\s+(\\d+)'
0074 | 0001 | '^(\\w+\\.)+\\w+$'
0075 | 0001 | '([\\d]+) ([\\d]+)'
0076 | 0001 | '/?\\w+/\\w+[.]xsd'
0077 | 0001 | 'Firefox/([\\d.]+)'
0078 | 0001 | '^#?(\\d+)-(\\d+)$'
0079 | 0001 | '#(\\w+)|\\[(.+)\\]'
0080 | 0001 | '(\\\\\\*)([\\w ]+)'
0081 | 0001 | '(\\d+)\\((\\d+)\\)'
0082 | 0001 | 'MESSAGES\\s+(\\d+)'
0083 | 0001 | '[Ff]ile(\\d+)=(.+)'
0084 | 0001 | '\\b(\\d+)\\.(\\d+)'
0085 | 0001 | '\\d+(.\\d*)?|.\\d+'
0086 | 0001 | '-?(\\d*)([.]?\\d*)?'
0087 | 0001 | '(\\w+)(?:\\:(\\w+))?'
0088 | 0001 | 'Change\\s+(\\d+)\\s+'
0089 | 0001 | '\\w+ Y(\\d+) N(\\d+)'
0090 | 0001 | '^\\d+\\-\\d+\\-\\d+$'
0091 | 0001 | '<(\\w+)(\\s.*)?[^/]?>'
0092 | 0001 | '(\\w+)(?:=([^\\s;]+))?'
0093 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'
0094 | 0001 | '^\\d+(-\\d+)?|\\.\\w+$'
0095 | 0001 | '(\\d+\\.\\d+(\\.\\d+)?)'
0096 | 0001 | '\\d\\d-\\w\\w\\w-\\d\\d'
0097 | 0001 | '^core = "?(\\d+\\.x)"?$'
0098 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'
0099 | 0001 | '^@@.*\\+(\\d+)(,(\\d+))?'
0100 | 0001 | '([\\w\\.-]+)\\s+([^(]+).*'
0101 | 0001 | u'(?:\\s*).+?\\.(?:\\s+|$)'
0102 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'
0103 | 0001 | '(\\d+)\\s(\\D+)\\s(\\d{4})'
0104 | 0001 | '\\((\\d+)-(\\d+)-(\\d+)\\)'
0105 | 0001 | '#define\\s+(\\S+)\\s+(\\S+)'
0106 | 0001 | '/./(.+?)/season (\\d{1,2})$'
0107 | 0001 | '.*clock (\\d+)\\s(\\w+).*\\n'
0108 | 0001 | '([a-z]\\d?)=\\s+(\\d+\\.\\d+)'
0109 | 0001 | '/libedit[\\.\\d+]*\\.dylib\\s'
0110 | 0001 | '(block|unblock) (\\d+) (\\d+)$'
0111 | 0001 | '^(.*?\\.pyc?):(\\d+):\\s+(.*)$'
0112 | 0001 | u'<.*?>|((?:\\w[-\\w]*|&.*?;)+)'
0113 | 0001 | 'WordNet (\\d+\\.\\d+) Copyright'
0114 | 0001 | '\\$(\\d+)|\\$\\{(\\d+):[^\\}]+\\}'
0115 | 0001 | '^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'
0116 | 0001 | '\\d+ \\((.+)\\) vs. \\d+ \\((.+)\\)'
0117 | 0001 | '^([^:]*):(\\d+):\\s+(pdfTeX warning.*)'
0118 | 0001 | 'javascript:SndSelf\\((\\d+),(\\d+)\\);'
0119 | 0001 | '(\\w+)\\((-?\\d+.?\\d*),(-?\\d+.?\\d*)\\)'
0120 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0121 | 0001 | '\\[commit=(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)\\]'
0122 | 0001 | 'git version (\\d+)\\.(\\d+)(\\.\\d+)?(\\.\\d+)?'
0123 | 0001 | '([+-])?(?:(?:(\\d?\\d):)?(\\d?\\d):)?(\\d?\\d)\\Z'
0124 | 0001 | '(\\d+)\\s+\\w+\\s+(\\w+)\\s+(\\w+)\\s+\\w+\\s+(\\w+).*'
0125 | 0001 | "([\\w.!~*'|;:&=+$,-]+@)?\\d+\\.\\d+\\.\\d+\\.\\d+(:\\d*)*$"
0126 | 0001 | '([-+]?((?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[eE]((?:[-+]?\\d+)?)|(\\d+\\.\\d*))'
0127 | 0001 | '^\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?(?:\\.post\\d+)?(?:\\.dev\\d+)?$'



cluster 3 stats:
nPatterns: 93.0
nProjects: 146
shortest: #.*
Features:

1: LIT|a literal character | 4.526881720430108
2: KLE|zero-or-more repetition | 1.5053763440860215
3: ANY|any non-newline char | 1.4193548387096775
4: CG|a capture group | 1.2043010752688172
5: END|end-of-line | 0.3763440860215054
6: STR|start-of-line | 0.3548387096774194
7: LZY|as few reps as possible | 0.2903225806451613
8: ADD|one-or-more repetition | 0.17204301075268819
9: QST|zero-or-one repetition | 0.12903225806451613
10: CCC|custom character class | 0.11827956989247312
11: NCCC|negated CCC | 0.10752688172043011
12: OR|logical or | 0.10752688172043011
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.10752688172043011
14: NCG|group without capturing | 0.053763440860215055
15: RNG|chars within a range | 0.053763440860215055
16: DEC|any of: 0123456789 | 0.043010752688172046
17: BKR|match the $i^{th}$ CG | 0.021505376344086023
18: NLKB|sequence doesn't precede | 0.021505376344086023
19: OPT|options wrapper | 0.021505376344086023
20: WRD|[a-zA-Z0-9\_] | 0.021505376344086023
21: DBB|$n\le x \le m$ repetition | 0.010752688172043012
22: ENDZ|absolute end of string | 0.010752688172043012
23: LWB|at least n repetition | 0.010752688172043012


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0016 | '#.*'
0002 | 0014 | '^(.*)#([^#]*)$'
0003 | 0013 | '^ *\n'
0004 | 0012 | '(?m)^\\.'
0005 | 0008 | 'Wrote: (.*)'
0006 | 0007 | '^[ ]{4,7}((\\d+\\.)|[*+-])[ ].*'
0007 | 0006 | '^..?\\...?'
0008 | 0006 | '\\([^)]*\\)'
0009 | 0005 | "^'(.*)'$"
0010 | 0005 | '.*\\.__.*?__'
0011 | 0004 | '{([^}]*)}(.*)'
0012 | 0004 | '10\\^\\{(.+)\\}'
0013 | 0004 | '^(CONFIG_\\w+)=(.*)$'
0014 | 0003 | '#.*$'
0015 | 0003 | '^6\\.'
0016 | 0003 | 'o:(.*)s'
0017 | 0003 | "'\\?(.)'"
0018 | 0003 | '.*\\.zip'
0019 | 0003 | '(.+)=(.+)'
0020 | 0003 | '(.*)//(.*)'
0021 | 0003 | 'offset (.*) sec'
0022 | 0003 | '^ *(.*) *( *) *$'
0023 | 0003 | '(.*)\\[(.*)\\](.*)'
0024 | 0003 | '.*brick_.*?(n?)_wg.*'
0025 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0026 | 0003 | '^(.*?)(?:-dev|-\\d.*)$'
0027 | 0003 | '([^\\(]*)(\\((.*)%(.*)\\))?'
0028 | 0003 | '^(.*?)\\s?((?:ssh\\-|ecds).+)$'
0029 | 0002 | '(.*)'
0030 | 0002 | '(.*)\n'
0031 | 0002 | '.*\\*$'
0032 | 0002 | '^.*\\/'
0033 | 0002 | '\\?(.*)'
0034 | 0002 | '^yt-(.*)$'
0035 | 0002 | '127.0.0.1:0'
0036 | 0002 | '(.*) cache:$'
0037 | 0002 | '^(.+?)_(.+)$'
0038 | 0002 | '([^#:]*#)(.*)'
0039 | 0002 | '  ([^:]*):  (.*)'
0040 | 0002 | '^(Q|QQ)\\<(.+)\\>$'
0041 | 0002 | '\\.\\. (.+?)::(.*)$'
0042 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0043 | 0002 | '"(.*)"\\s*->\\s*"(.*)"'
0044 | 0002 | '.*?_([a-z]*)_pid(\\d*)$'
0045 | 0002 | '^([A-Z].*?\\.(?:\\s|$))'
0046 | 0002 | "PREFIX\\('.*?'\\)(.*?)\\(.*"
0047 | 0002 | '^--([^\\n]+)\\n(.*?)\\n--\\1$'
0048 | 0001 | '%(..)'
0049 | 0001 | '\\(.*$'
0050 | 0001 | '\\.0*$'
0051 | 0001 | '%%.*?\n'
0052 | 0001 | '(.).\\1'
0053 | 0001 | '^//(.*)'
0054 | 0001 | '\\) (.*)'
0055 | 0001 | '.*?: (.*)'
0056 | 0001 | 'Auth=(.*)'
0057 | 0001 | '^(.*)"""$'
0058 | 0001 | 'iso.*?\\-'
0059 | 0001 | '{{(.+?)}}'
0060 | 0001 | '(.*?)=(.*)'
0061 | 0001 | '/\\(.*\\)/'
0062 | 0001 | '^([.]*).*$'
0063 | 0001 | '^.*\\.xsd$'
0064 | 0001 | '^.*\\.zip$'
0065 | 0001 | '.*/([^?#]*)'
0066 | 0001 | '//.*\\r?\\n'
0067 | 0001 | '\\. *(\n|$)'
0068 | 0001 | '^lib(.*).a$'
0069 | 0001 | "{'(.*':.*)'}"
0070 | 0001 | '^"(.*)"\\s*$'
0071 | 0001 | '^(.*\\.arc)$'
0072 | 0001 | '^\\[(.*)\\]$'
0073 | 0001 | '(/\\*.*?\\*/)'
0074 | 0001 | '^(\\s*lib.*)+'
0075 | 0001 | '.*\\?ptr=(.*)$'
0076 | 0001 | '^.*\\.tar.bz2$'
0077 | 0001 | '^u_(.*)_level$'
0078 | 0001 | 'test_(.*)\\.js$'
0079 | 0001 | ".*'(.*)'.*'(.*)'.*"
0080 | 0001 | 'OUTPUT *(.*\\.aux)'
0081 | 0001 | "#([^']+?)# \\(qv\\)"
0082 | 0001 | "u?'(.*)' != u?'(.*)'"
0083 | 0001 | '\\((.*)/(.*)/(.*)\\)'
0084 | 0001 | '(.*)\\s(ASC|DESC)(.*)'
0085 | 0001 | '.*?_([a-z]*)_pid\\d*$'
0086 | 0001 | '\n?(\\w*)\\:\\s(.*)\n'
0087 | 0001 | '(?m)(?:^[ \\t]*\\n){1,}'
0088 | 0001 | '([a-z]+)=(".*?"|[^,]*)(?:\\Z|, *)'
0089 | 0001 | 'medea\\._addMod\\(.*?,\\[(.*?)\\]'
0090 | 0001 | '(.*?)user (.*?)system (.*?)elapsed'
0091 | 0001 | 'r?u?\\\'(.*?)(?<!\\\\)\\\'|"(.*?)(?<!\\\\)"'
0092 | 0001 | "([a-z_]+) '(.*)'\\t(.*)\\tLoc=<(.*):(.*):(.*)>"



cluster 4 stats:
nPatterns: 85.0
nProjects: 120
shortest: [,;]
Features:

1: LIT|a literal character | 4.035294117647059
2: CCC|custom character class | 0.7764705882352941
3: ADD|one-or-more repetition | 0.5058823529411764
4: KLE|zero-or-more repetition | 0.2823529411764706
5: NCCC|negated CCC | 0.23529411764705882
6: WRD|[a-zA-Z0-9\_] | 0.23529411764705882
7: STR|start-of-line | 0.18823529411764706
8: CG|a capture group | 0.16470588235294117
9: END|end-of-line | 0.1411764705882353
10: DEC|any of: 0123456789 | 0.10588235294117647
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.08235294117647059
12: ANY|any non-newline char | 0.07058823529411765
13: OR|logical or | 0.03529411764705882
14: QST|zero-or-one repetition | 0.03529411764705882
15: RNG|chars within a range | 0.023529411764705882
16: VWSP|matches U+000B | 0.023529411764705882
17: LKA|matching sequence follows | 0.011764705882352941
18: NCG|group without capturing | 0.011764705882352941
19: NWSP|any non-whitespace | 0.011764705882352941


0000 | 0024 | '[*?[]'
0001 | 0014 | '^[ \t]*$'
0002 | 0012 | ' *, *'
0003 | 0011 | '^[\\d,]+$'
0004 | 0009 | '[\n@{}&<>]'
0005 | 0007 | '[ \n]*{'
0006 | 0007 | '([\\t ]+)'
0007 | 0005 | '[^\\w]'
0008 | 0005 | '(^[^\\.]+)\\.'
0009 | 0004 | '[&<>"]'
0010 | 0004 | '%[^\\r\\n\\v]*'
0011 | 0004 | 'In\\ \\[\\d+\\]: '
0012 | 0003 | '[,;]'
0013 | 0003 | '[-/.: ]+'
0014 | 0003 | '^[\\w\\.\\-\\/]*$'
0015 | 0002 | '[:@/]'
0016 | 0002 | '[xh]vc0'
0017 | 0002 | '[\x01-\x1f]'
0018 | 0002 | '\\[\\d\\]\\s+='
0019 | 0002 | '[^\\w\\-\\.\\/]+'
0020 | 0002 | ',[ ]*([-]?\\d+|n)'
0021 | 0002 | '[ \\t]*\\.[ \\t]*'
0022 | 0002 | '\\(live[^\\)]*\\)'
0023 | 0002 | 'repo\\=cdrom[\\:\\w\\d\\/]*'
0024 | 0002 | 'autoyast\\=[\\w\\d\\:\\.\\/]+'
0025 | 0001 | '[<&]'
0026 | 0001 | '[\n]'
0027 | 0001 | '[ \t]'
0028 | 0001 | '[,\n]'
0029 | 0001 | '[.:-]'
0030 | 0001 | '[\\)]'
0031 | 0001 | '[\n,]'
0032 | 0001 | "[^<']*"
0033 | 0001 | '[,;:].'
0034 | 0001 | '[\\+-]'
0035 | 0001 | ':[\\s]+'
0036 | 0001 | '[\\n,]+'
0037 | 0001 | '[\r\n]*'
0038 | 0001 | '^[^\\.]+'
0039 | 0001 | '([^\\{])<'
0040 | 0001 | '[\\w\\.]+'
0041 | 0001 | '[^\\w\\-]'
0042 | 0001 | '[uU][\'"]'
0043 | 0001 | '^[^\\$]+$'
0044 | 0001 | '([;,\\s]+)'
0045 | 0001 | '[ \r\n\t]+'
0046 | 0001 | '[\'"\\s;]+'
0047 | 0001 | '[\t\r\n]+$'
0048 | 0001 | '[^\\w\\-]+'
0049 | 0001 | '^([-\\w]+)'
0050 | 0001 | '^[\\d.:]+$'
0051 | 0001 | '\\\\[\\\\]?'
0052 | 0001 | '^[^\\.]+\\.'
0053 | 0001 | '&([^;\\s]+);'
0054 | 0001 | 'LSID=[^\\n]+'
0055 | 0001 | '[   \\r\\n]+'
0056 | 0001 | '[ _.\\[\\]]+'
0057 | 0001 | '["\\(\\) ,-]'
0058 | 0001 | '^[-\\.\\w]+$'
0059 | 0001 | '^\\$[\\w=]+$'
0060 | 0001 | '^[\\w,./=-]*$'
0061 | 0001 | '([\\+\\-\\^]+)'
0062 | 0001 | '\\\\n|\\\\\\\\'
0063 | 0001 | '^[\\w\\-\\_]+$'
0064 | 0001 | '.*\\r(?=[^\\n])'
0065 | 0001 | '[\\[\\]\\(\\);]'
0066 | 0001 | '</TEXT>[\\s\\S]*'
0067 | 0001 | '[\\w\\d\\-_\\.]+'
0068 | 0001 | '[\\w\\d_\\.\\-]+'
0069 | 0001 | '[][\\()<>@,:;".]'
0070 | 0001 | '\\[\\[(.+)\\]\\]'
0071 | 0001 | '^[^ :]+:[^ ]+ - '
0072 | 0001 | '[ \r\t]*\n[ \r\t]*'
0073 | 0001 | '[.:, !?+=\\(\\)/]+'
0074 | 0001 | '[\\w0-9\\.\\_\\-]+'
0075 | 0001 | u'[_.,\\[\\]\\(\\):]'
0076 | 0001 | '\\[\\[Image:.*\\]\\]'
0077 | 0001 | '[ \\t]*\\n([^\\r\\n])'
0078 | 0001 | '\\[\\[([^\\]]+)\\]\\]'
0079 | 0001 | '([\\w\\-\\.]+@[\\w\\-\\.]+)'
0080 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'
0081 | 0001 | '^END .*\\t----\\t----\\t.*$'
0082 | 0001 | '[ \\f\\t]*(?:\\r\\n|\\r|\\n)'
0083 | 0001 | '\\s*([^;# \\t\\n\\r\\f\\v]+)'
0084 | 0001 | '[\\x00\\/\\\\:\\*\\?\\"<>\\|]'



cluster 5 stats:
nPatterns: 50.0
nProjects: 111
shortest: \s*\S+
Features:

1: LIT|a literal character | 4.66
2: KLE|zero-or-more repetition | 1.96
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.92
4: ADD|one-or-more repetition | 0.72
5: CG|a capture group | 0.66
6: STR|start-of-line | 0.36
7: CCC|custom character class | 0.28
8: ANY|any non-newline char | 0.26
9: END|end-of-line | 0.2
10: WRD|[a-zA-Z0-9\_] | 0.2
11: NCCC|negated CCC | 0.18
12: QST|zero-or-one repetition | 0.14
13: OR|logical or | 0.12
14: RNG|chars within a range | 0.1
15: DEC|any of: 0123456789 | 0.08
16: LZY|as few reps as possible | 0.08
17: NWSP|any non-whitespace | 0.08
18: ENDZ|absolute end of string | 0.02
19: NCG|group without capturing | 0.02
20: PNG|named capture group | 0.02
21: WNW|word/non-word boundary | 0.02


0000 | 0018 | '^\\s*blocktrans(?:\\s+|$)'
0001 | 0016 | '<(/?)\\s*i\\s*>'
0002 | 0016 | 'hg\\s*pull\\s*(.*)\\s*'
0003 | 0011 | '\\$else\\s+'
0004 | 0008 | '\\s*/\\*\\s*\\*/'
0005 | 0007 | '\\s*-e\\s+'
0006 | 0007 | '\\s*([a-f0-9]+):\\s*(\\S.*)'
0007 | 0007 | '^\\s+:toctree:\\s*(.*?)\\s*$'
0008 | 0005 | '^[\r\n]*(\\s*)'
0009 | 0005 | '^(\\s*<[^>]+>\\s*)'
0010 | 0004 | '\\s*SELECT'
0011 | 0004 | u'^\\s*[^#\\s].*'
0012 | 0004 | '\\s*\\(0[0-7]+\\).*'
0013 | 0004 | '\\s*\\(\\d+[ulUL]*\\).*'
0014 | 0003 | '\\A\\s\\s\\S+,'
0015 | 0003 | u'<(/?)\\s*i\\s*>'
0016 | 0003 | "\\s+\\(default:\\s+\\'(.*)\\'\\)$"
0017 | 0003 | '([^:#]*)\\s*:?\\s*([^#]*?)(\\s+#.*|$)'
0018 | 0002 | '^\\s*\\#+\\s*'
0019 | 0002 | '((^|\\n)\\s*)@'
0020 | 0002 | '\\/\\*[\\s\\S]*?\\*\\/'
0021 | 0002 | '^(}|struct\\s+\\w+);\\s*$'
0022 | 0001 | '\\s*\\S+'
0023 | 0001 | '\\s*=+>\\s*'
0024 | 0001 | '\\s*\\;\\s*'
0025 | 0001 | 'type\\b\\s*'
0026 | 0001 | '\\*/\\s+/\\*'
0027 | 0001 | '\\s*\\*/\\s*'
0028 | 0001 | '\\s+---?\\s+'
0029 | 0001 | '^\\s*\\w*\\s*$'
0030 | 0001 | '^message:\\s*$'
0031 | 0001 | '^\\s*msgid\\s+"'
0032 | 0001 | '\\s*longitude\\s*'
0033 | 0001 | '^\\s*[\\w-]+\\s*$'
0034 | 0001 | '\\s*global\\s+(.*)'
0035 | 0001 | '\\s*(-?\\w+:\\w+)+,*'
0036 | 0001 | '<\\s*/?\\s*([^\\s>]+)'
0037 | 0001 | 'seeds:(\\s*-.*)*\\s*#'
0038 | 0001 | '\\|\\s+([^\\|*])\\s+.*'
0039 | 0001 | '\\s*([^\\s\\(\\)]*)\\s*'
0040 | 0001 | '\\s*(([^,]|(,\\s*\\d))+)'
0041 | 0001 | '(\\s)*class(\\s)+(\\w)+.*'
0042 | 0001 | '^MemTotal:\\s*(\\d*)\\s*kB'
0043 | 0001 | '^function\\s*(\\w+)\\s*\\('
0044 | 0001 | '<\\s*[a-z]+\\s*[\\w"=\\.]*>'
0045 | 0001 | '\\A\\s*(\\w[\\w\\d]*)\\s*\\Z'
0046 | 0001 | '\\sdo(\\s+\\|.*?\\|)?\\s*(#|$)'
0047 | 0001 | '^[S7]\\s*[T8]\\s*[O6]\\s*[P7]$'
0048 | 0001 | '^\\s*"\\s*(?P<arg0>[^"]+)\\s*"'
0049 | 0001 | '\\$Revision:\\s*([0-9]*)\\s*\\$'



cluster 6 stats:
nPatterns: 18.0
nProjects: 94
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 12.61111111111111
2: KLE|zero-or-more repetition | 1.3333333333333333
3: CG|a capture group | 1.0
4: ANY|any non-newline char | 0.8333333333333334
5: LZY|as few reps as possible | 0.8333333333333334
6: NCCC|negated CCC | 0.6666666666666666
7: ADD|one-or-more repetition | 0.4444444444444444
8: OPT|options wrapper | 0.3888888888888889
9: QST|zero-or-one repetition | 0.2222222222222222
10: OR|logical or | 0.16666666666666666
11: NCG|group without capturing | 0.1111111111111111
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1111111111111111
13: BKR|match the $i^{th}$ CG | 0.05555555555555555
14: CCC|custom character class | 0.05555555555555555
15: DEC|any of: 0123456789 | 0.05555555555555555
16: LKA|matching sequence follows | 0.05555555555555555
17: STR|start-of-line | 0.05555555555555555
18: WRD|[a-zA-Z0-9\_] | 0.05555555555555555


0000 | 0040 | '(?m)^[ ]*(?=\n)'
0001 | 0035 | '<!\\s+([^<>]*)>'
0002 | 0019 | '<[^>]*?>'
0003 | 0008 | '</?xsl:([^>]*)/?>?'
0004 | 0002 | '<id>([^<]+)</id>'
0005 | 0002 | '(?ms)By:\\s*<a .*?>(.+?)<'
0006 | 0002 | '(?i)<img.*?src.*?=.*?"(.+?)".*?>'
0007 | 0002 | '(?s)<failure (.*?)>.*?</failure>'
0008 | 0001 | '<(hr|br)[^>]*?/>'
0009 | 0001 | '<Term>([^<]+)</Term>'
0010 | 0001 | 'DataText4>([^<]*)</td>'
0011 | 0001 | '(?ims)<tr[^>]*>.*?</tr>'
0012 | 0001 | '(?is)<tr [^>]*>.*?</tr>'
0013 | 0001 | '(?s)id="TEXT_PH">(.*?)</span>'
0014 | 0001 | '(?:aka) <em>"(.*?)(<br>|<\\/td>)'
0015 | 0001 | '<(\\w+)(?: [^>]+)?>([^<>]*)</\\1>'
0016 | 0001 | '<sync start="(\\d+)">([^<]*)</sync>'
0017 | 0001 | '<title>(.*)</title>|<TITLE>(.*)</TITLE>'



cluster 7 stats:
nPatterns: 51.0
nProjects: 89
shortest: ##(?P<key>.+?)=(?P<val>.+)
Features:

1: LIT|a literal character | 10.568627450980392
2: PNG|named capture group | 2.8823529411764706
3: ADD|one-or-more repetition | 2.2941176470588234
4: KLE|zero-or-more repetition | 2.0588235294117645
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.6470588235294117
6: DEC|any of: 0123456789 | 1.2941176470588236
7: QST|zero-or-one repetition | 0.9411764705882353
8: ANY|any non-newline char | 0.8431372549019608
9: CCC|custom character class | 0.7647058823529411
10: CG|a capture group | 0.6666666666666666
11: END|end-of-line | 0.45098039215686275
12: NCCC|negated CCC | 0.4117647058823529
13: RNG|chars within a range | 0.4117647058823529
14: WRD|[a-zA-Z0-9\_] | 0.37254901960784315
15: STR|start-of-line | 0.35294117647058826
16: NCG|group without capturing | 0.2549019607843137
17: SNG|exactly n repetition | 0.23529411764705882
18: OR|logical or | 0.19607843137254902
19: NWSP|any non-whitespace | 0.13725490196078433
20: LZY|as few reps as possible | 0.11764705882352941
21: DBB|$n\le x \le m$ repetition | 0.0196078431372549


0000 | 0013 | '(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'
0001 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0002 | 0011 | '^(?P<proto>unix):(?P<path>.*)$'
0003 | 0009 | '\\s*(?P<red>\\d+)\\s+(?P<green>\\d+)\\s+(?P<blue>\\d+)\\s+(?P<name>.*)'
0004 | 0006 | '(?:http://)?(?:(?P<user>\\w+):(?P<pass>.*)@)?(?P<host>[\\w\\-\\.]+)(?::(?P<port>\\d+))?'
0005 | 0005 | '[*]\\[(?P<abbr>[^\\]]*)\\][ ]?:\\s*(?P<title>.*)'
0006 | 0005 | '^601983(?P<copy>\\d{1})1(?P<jmbag>\\d{10})(?P<k>\\d{1})$'
0007 | 0004 | '(?P<table>\\w+)\\.(?P<field>\\w+)=(?P<value>.+)'
0008 | 0004 | '@(?P<dllname>.*),-(?P<index>\\d+)(?:;(?P<comment>.*))?'
0009 | 0003 | 'graph(?P<graphNumber>\\d+)_(?P<res>.*?)_?(?P<optNumber>\\d+)?$'
0010 | 0003 | '(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$'
0011 | 0003 | '(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*!\\s*(?P<cmd>.*)'
0012 | 0003 | u'^(?P<initial>\\d{1})(?P<yy>\\d\\d)(?P<mm>\\d\\d)(?P<dd>\\d\\d)(?P<mid>\\d{4})(?P<checksum>\\d{1})'
0013 | 0003 | '^\\s*\\d+\\s+(?P<name>\\S+)\\s+(?P<size>-?\\d+)\\s+(?P<bytesLeaked>-?\\d+)\\s+-?\\d+\\s+(?P<numLeaked>-?\\d+)'
0014 | 0003 | '%(?:(?P<cn>[0-9]+)\\$)?(?P<width>[0-9]+)?(?:.(?P<pres>[0-9]+))?(?P<size>[hL]|(?:ll?))?(?P<type>[dciouxXefgpCSsn])'
0015 | 0003 | 'DOCTYPE\\s+(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'
0016 | 0002 | 'Line:(?P<line>\\d+)\\s*(?P<message>.+)'
0017 | 0002 | '(--|-|\\+)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?'
0018 | 0002 | '(?P<name>[\\w .-]+)\\s*\\(\\s*(?P<ver>[^\\s)]+)\\)$'
0019 | 0002 | '(?P<names>\\w+[-A-Za-z0-9|]*)?(?P<spec>!|[=:][infs]@?)?'
0020 | 0002 | '\\s+at\\s(?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?'
0021 | 0002 | '\\s+at\\s(?:new\\s)?(?P<func>.+)\\s\\((?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?\\)'
0022 | 0002 | '^\\s*@property(-(?P<type>read|write))?\\s+((?P<citdl>\\w+)\\s+)?(?P<name>\\$\\w+)(?:\\s+(?P<doc>.*?))?'
0023 | 0001 | '##(?P<key>.+?)=(?P<val>.+)'
0024 | 0001 | '(<s>\\s*(?P<sent>.+?)\\s*</s>)+'
0025 | 0001 | '^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'
0026 | 0001 | '(?P<name>[^=]+)="(?P<value>[^"]*)" *'
0027 | 0001 | '.*:(?P<line>\\d+)[ \t]+(?P<message>.*)'
0028 | 0001 | 'S(?P<season>[0-9]*)E(?P<episode>[0-9]*)'
0029 | 0001 | '^\\s*(?P<word>\\S+)\\_(?P<tag>\\S+)\\s*$'
0030 | 0001 | '^(?P<area>[17]\\d\\d\\d)(?P<station>\\d+)$'
0031 | 0001 | 'http://(?P<ip>[0-9\\.]+):(?P<port>[0-9]+)/.*'
0032 | 0001 | '[^:]+:(?P<line>\\d+):\\d+: error: (?P<error>.+)'
0033 | 0001 | '\\((?P<flags>.*)\\) "(?P<sep>.*)" ".*/(?P<mbx>.*)"'
0034 | 0001 | '^(?P<z>\\d+)/(?P<x>\\d+)/(?P<y>\\d+)\\.(?P<e>\\w+)$'
0035 | 0001 | '^(?P<area>[235]\\d)(?P<area2>\\d{4})(?P<station>\\d+)$'
0036 | 0001 | '(?P<cf>[\\S]+)+-(?P<tmp>tmp-)?[\\S]+-(?P<suffix>[a-zA-Z.]+)'
0037 | 0001 | '(?P<year>\\d{4})( (?P<month>[A-Za-z]{3})( (?P<day>\\d+))?)?$'
0038 | 0001 | '^(?P<area>1\\d1|11\\d|8\\d\\d)(?P<area2>\\d{3})(?P<station>\\d+)$'
0039 | 0001 | '^(?P<level>\\*+)(\\s+(?P<title>.*?))?\\s*(\\s(?P<tags>:[\\w_:@]+:))?$'
0040 | 0001 | '(?P<prefix>^\\s*function\\s+)(?P<main>[^$]+[&a-zA-Z0-9_]+)(?P<suffix>.*$)'
0041 | 0001 | '([\\w.+]+)\\s*.*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'
0042 | 0001 | '^\\s*(?P<user>\\S+)\\s*(?P<name>\\S+)\\s*(?P<pid>\\d+)\\s*(?P<usage_bytes>\\d+)$'
0043 | 0001 | '(?P<unsupported> \\.)? (?P<match> ((?P<scope> (\\w+\\.)* \\w+) \\.)? (?P<complete>\\w*) $)'
0044 | 0001 | '^\\s*void\\s*operator\\s*=\\s*\\(\\s*const\\s*\\s*&\\s*\\)\\s*;\\s*\\/\\/\\s*Not\\s*[iI]mplemented(\\.)*'
0045 | 0001 | '(\\s*DRI_CONF_DESC\\s*\\(\\s*)([a-z]+)(\\s*,\\s*)(gettext\\s*\\(\\s*")(.*)("\\s*\\))(\\s*\\)[ \\t]*\\\\?)$'
0046 | 0001 | '(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'
0047 | 0001 | '^.*: \\[Full GC (?P<start_size>[^ ]+)K->(?P<end_size>[^ ]+)K\\((?P<heap_size>[^ ]+)\\), (?P<gc_time>[^ ]+) secs\\]$'
0048 | 0001 | '((<property\\s+name="(?P<name>[^>]+)">(?P<text>.+?)</property>)|(?P<display><display\\s+call="(?P<command>[^"]+)">))'
0049 | 0001 | '^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.\\d+)(rc(?P<release_candidate>\\d+))?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'
0050 | 0001 | '(?P<type>[ACMD]) (?P<file>.*) (?P<revspec>rev:revid:[-\\d]+) (?P<parentrevspec>rev:revid:[-\\d]+) src:(?P<srcpath>.*) dst:(?P<dstpath>.*)$'



cluster 8 stats:
nPatterns: 14.0
nProjects: 81
shortest: \s*
Features:

1: LIT|a literal character | 1.2142857142857142
2: KLE|zero-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.9285714285714286
4: END|end-of-line | 0.35714285714285715
5: STR|start-of-line | 0.2857142857142857
6: CG|a capture group | 0.14285714285714285
7: CCC|custom character class | 0.07142857142857142
8: NDEC|any non-decimal | 0.07142857142857142
9: OPT|options wrapper | 0.07142857142857142
10: QST|zero-or-one repetition | 0.07142857142857142


0000 | 0048 | '^\\s*$'
0001 | 0030 | '\\s*'
0002 | 0005 | ';\\s*'
0003 | 0005 | '\\)\\s*'
0004 | 0005 | '(}?\\s*)$'
0005 | 0004 | ',\\s*$'
0006 | 0003 | '(""")\\s*$'
0007 | 0002 | '---\\s*$'
0008 | 0001 | ':\\s*'
0009 | 0001 | '^\\D*'
0010 | 0001 | '^\\s*\\['
0011 | 0001 | '(?m)^\\s*'
0012 | 0001 | '\\-\\s*\\>'
0013 | 0001 | '[-+]\\s*\\('



cluster 9 stats:
nPatterns: 38.0
nProjects: 77
shortest: \x1b\[[^h]+h
Features:

1: LIT|a literal character | 13.473684210526315
2: CG|a capture group | 0.9736842105263158
3: ADD|one-or-more repetition | 0.9473684210526315
4: KLE|zero-or-more repetition | 0.8421052631578947
5: NCCC|negated CCC | 0.7631578947368421
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.7105263157894737
7: CCC|custom character class | 0.631578947368421
8: ANY|any non-newline char | 0.23684210526315788
9: QST|zero-or-one repetition | 0.21052631578947367
10: LZY|as few reps as possible | 0.13157894736842105
11: WNW|word/non-word boundary | 0.13157894736842105
12: PNG|named capture group | 0.10526315789473684
13: DEC|any of: 0123456789 | 0.07894736842105263
14: NCG|group without capturing | 0.07894736842105263
15: END|end-of-line | 0.05263157894736842
16: OPT|options wrapper | 0.05263157894736842
17: OR|logical or | 0.05263157894736842
18: RNG|chars within a range | 0.05263157894736842
19: STR|start-of-line | 0.05263157894736842
20: WRD|[a-zA-Z0-9\_] | 0.05263157894736842
21: BKR|match the $i^{th}$ CG | 0.02631578947368421
22: NWSP|any non-whitespace | 0.02631578947368421


0000 | 0016 | '^-r\\s*([^ ])?'
0001 | 0011 | 'encoding\\s*=\\s*[\'"]([^"\']+)["\']'
0002 | 0009 | '\\\\line([iv]+){'
0003 | 0008 | '\\{include\\s+file=.*?\\}'
0004 | 0004 | "__version__ = '([^']+)'"
0005 | 0004 | u'(?:W/)?"((?:\\\\.|[^"])*)"'
0006 | 0004 | '<base\\s+href\\s*=\\s*[\'"]?([^\'">]+)'
0007 | 0003 | '\\x1b\\[[^h]+h'
0008 | 0003 | '\\sfile:\\s+"([^"]*)"'
0009 | 0003 | '^<type [\'"](.+)[\'"]>$'
0010 | 0002 | '(?m)&mediaURL=([^&]+)'
0011 | 0002 | '[$][{]\\d+:([^}]+)[}]'
0012 | 0002 | '\\bexpires=([^;]+)(?i)'
0013 | 0002 | '[&?]versionId=([^&]+)($|=|&)'
0014 | 0002 | 'href\\s*=\\s*[\'"]?<([\\w\\.]+)>[\'"]?\\s*(,?)'
0015 | 0002 | 'use\\s+encoding(?:::source)?\\s+([\'"])(?P<encoding>[\\w-]+)\\1'
0016 | 0001 | 'baseUrl>([^<]+)'
0017 | 0001 | 'Mobile; rv:([\\d.]+)'
0018 | 0001 | 'name=\\"q\\">([^<]*)'
0019 | 0001 | "APACHEPATH.'([^']*?)'"
0020 | 0001 | '#include\\s+<([^>]+)>'
0021 | 0001 | 'var-bind=[\'"](.*)["\']'
0022 | 0001 | ' *\\bservicefp="([^"]*)"'
0023 | 0001 | '<hostname name="([^"]*)"'
0024 | 0001 | 'L"\\\\0(\\d)" L"([^"]*)"'
0025 | 0001 | '\\bplural\\s*=\\s*([^;]+)'
0026 | 0001 | '__version__ = (\\(.*?\\))'
0027 | 0001 | 'Mean sample size: ([.0-9]+)'
0028 | 0001 | 'android:versionName="([^"]+)"'
0029 | 0001 | 'invalid cidr value: "([^"]+)"'
0030 | 0001 | '\\ssubroutine\\s(.+)\\([^()]*\\)'
0031 | 0001 | 'id="__VIEWSTATE" value="([^"]*)"'
0032 | 0001 | '<img.+?src="(?P<filename>[^"]+?)"'
0033 | 0001 | '<br />\\s*([^<]+)<br />\\s*([^<]+)<'
0034 | 0001 | '\\s*<?xml\\b.*\\bencoding="([^"]+)"'
0035 | 0001 | '<img[^>]*src="(?P<url>http://[^"]*)"'
0036 | 0001 | '\\#[\\s]*include[\\s]*[<"](\\S+)[">]'
0037 | 0001 | '\\s*Option\\s+"XkbLayout"\\s+"(?P<kt>[a-z-]+)"'



cluster 10 stats:
nPatterns: 23.0
nProjects: 52
shortest: ([A-Z]{2}\w{8})\w{24}
Features:

1: LIT|a literal character | 8.043478260869565
2: DEC|any of: 0123456789 | 4.434782608695652
3: CG|a capture group | 4.0
4: SNG|exactly n repetition | 2.130434782608696
5: ANY|any non-newline char | 1.173913043478261
6: CCC|custom character class | 1.0869565217391304
7: ADD|one-or-more repetition | 0.8695652173913043
8: WRD|[a-zA-Z0-9\_] | 0.6521739130434783
9: KLE|zero-or-more repetition | 0.6086956521739131
10: QST|zero-or-one repetition | 0.4782608695652174
11: RNG|chars within a range | 0.4782608695652174
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4782608695652174
13: DBB|$n\le x \le m$ repetition | 0.43478260869565216
14: NCG|group without capturing | 0.43478260869565216
15: OR|logical or | 0.34782608695652173
16: WNW|word/non-word boundary | 0.34782608695652173
17: LKB|matching sequence precedes | 0.13043478260869565
18: LWB|at least n repetition | 0.13043478260869565
19: END|end-of-line | 0.08695652173913043
20: LKA|matching sequence follows | 0.08695652173913043
21: STR|start-of-line | 0.08695652173913043
22: ENDZ|absolute end of string | 0.043478260869565216
23: LZY|as few reps as possible | 0.043478260869565216
24: NCCC|negated CCC | 0.043478260869565216
25: NWSP|any non-whitespace | 0.043478260869565216


0000 | 0019 | '(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})'
0001 | 0009 | '^\\d{4}-\\d{1,2}-\\d{1,2}$'
0002 | 0008 | '(?:;\\s*|\\s+)(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*;|(?:\\(|\\[|;)\\s*(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*(?:\\]|\\)|;)'
0003 | 0005 | '(\\s+|-*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'
0004 | 0003 | '(\\d{4})-(\\d{2})-(\\d{2})\\s+(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d+)?'
0005 | 0001 | '([A-Z]{2}\\w{8})\\w{24}'
0006 | 0001 | '\\.[a-z]+-\\d{2}[mud]{0,3}$'
0007 | 0001 | '(.{8})(.{4})(.{4})(.{4})(.{12})'
0008 | 0001 | '(....)-(..)-(..)T(..):(..):(..)....Z'
0009 | 0001 | 'inet addr:((\\d{1,3}\\.){3}\\d{1,3})'
0010 | 0001 | '9(?:\\d[ \\-\\)\\(\\dx\\.]{0,2}){6,10}'
0011 | 0001 | '/posts/([\\d]{4})/([\\d]{2})/([\\d]{2})'
0012 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'
0013 | 0001 | '(?<=\\\\u)([0-9a-f]{4})|(?<=\\\\U)([0-9a-f]{8})'
0014 | 0001 | '.*(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)'
0015 | 0001 | '([NS])(\\d\\d)_(\\d{6})([EW])(\\d\\d\\d)_(\\d{6})'
0016 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2}) / (\\d+)[\\s\t]*([0-9:, -]+)'
0017 | 0001 | '#date(\\s+(\\S+))?\\s+(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)'
0018 | 0001 | '(\\\\)((@\\d:)?[\\w @\\-\\./\\(\\),\\[\\]]*)(\\t*:) *(.*)'
0019 | 0001 | '(\\d+)-(\\d+)-(\\d+)(?: (\\d+):(\\d+):(\\d+)(?:\\.(\\d+))?)?'
0020 | 0001 | '^(?:\\d{4}-\\d{2}-\\d{2} |)\\[?(\\d{2}:\\d{2}:\\d{2})\\]? \\[?(?:[^\\]]+?/|)([A-Z]+)\\]:? (.*)'
0021 | 0001 | 'B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5}).*\\Z'
0022 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'



cluster 11 stats:
nPatterns: 28.0
nProjects: 43
shortest: (\s)
Features:

1: LIT|a literal character | 2.3214285714285716
2: CG|a capture group | 0.9642857142857143
3: DEC|any of: 0123456789 | 0.25
4: ADD|one-or-more repetition | 0.21428571428571427
5: CCC|custom character class | 0.21428571428571427
6: OR|logical or | 0.21428571428571427
7: SNG|exactly n repetition | 0.14285714285714285
8: STR|start-of-line | 0.14285714285714285
9: NLKA|sequence doesn't follow  | 0.10714285714285714
10: ANY|any non-newline char | 0.07142857142857142
11: NDEC|any non-decimal | 0.07142857142857142
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.07142857142857142
13: END|end-of-line | 0.03571428571428571
14: LKA|matching sequence follows | 0.03571428571428571
15: NWRD|non-word chars | 0.03571428571428571
16: NWSP|any non-whitespace | 0.03571428571428571
17: QST|zero-or-one repetition | 0.03571428571428571
18: WRD|[a-zA-Z0-9\_] | 0.03571428571428571


0000 | 0009 | '({)|(})'
0001 | 0008 | '(a|(b))'
0002 | 0008 | '<\\?(?!xml)'
0003 | 0008 | '(a(?!\\s[abc]))'
0004 | 0007 | '(\\s)'
0005 | 0003 | '(&&)'
0006 | 0003 | '(\\d)'
0007 | 0002 | '(\\W)'
0008 | 0002 | '(\\d{4})'
0009 | 0002 | '(iex|\\.{3})> '
0010 | 0002 | '^(\\-2|\\-{2})$'
0011 | 0001 | '(\\S)'
0012 | 0001 | '(%\\w)'
0013 | 0001 | '([<>])'
0014 | 0001 | '([|&])'
0015 | 0001 | '(\\D+)'
0016 | 0001 | '^(\\-l)'
0017 | 0001 | u'-(?=-)'
0018 | 0001 | '(\\d{3})'
0019 | 0001 | '>(?!\\})'
0020 | 0001 | '(\\d\\d?)'
0021 | 0001 | '^(Sch|S)A'
0022 | 0001 | '(\\d|\\.)+'
0023 | 0001 | '(\\{.+\\})'
0024 | 0001 | '([{}_#%&$])'
0025 | 0001 | '(\\D[123])_D'
0026 | 0001 | '(\\d+[dwhms])'
0027 | 0001 | '^//(\\[.+\\])+\n'



cluster 12 stats:
nPatterns: 2.0
nProjects: 39
shortest: subroutine( .+?)\(
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 0.5
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: LZY|as few reps as possible | 0.5


0000 | 0038 | 'shutdown_session\\)\\('
0001 | 0001 | 'subroutine( .+?)\\('



cluster 13 stats:
nPatterns: 5.0
nProjects: 39
shortest: class (\w+?)\(
Features:

1: LIT|a literal character | 16.2
2: ADD|one-or-more repetition | 0.2
3: CG|a capture group | 0.2
4: LZY|as few reps as possible | 0.2
5: WRD|[a-zA-Z0-9\_] | 0.2


0000 | 0038 | 'alloc_fabric_acl\\)\\('
0001 | 0038 | 'get_fabric_proto_ident'
0002 | 0038 | 'release_fabric_acl\\)\\('
0003 | 0014 | '\\*release_cmd\\)\\('
0004 | 0001 | 'class (\\w+?)\\('



cluster 14 stats:
nPatterns: 4.0
nProjects: 33
shortest: /
Features:

1: LIT|a literal character | 3.25
2: QST|zero-or-one repetition | 0.75
3: ADD|one-or-more repetition | 0.25
4: CG|a capture group | 0.25


0000 | 0030 | '/'
0001 | 0002 | '</?u>'
0002 | 0001 | '/?>'
0003 | 0001 | '(<br/>\n?)+'



cluster 15 stats:
nPatterns: 17.0
nProjects: 28
shortest: ^$
Features:

1: LIT|a literal character | 1.8235294117647058
2: END|end-of-line | 0.5882352941176471
3: STR|start-of-line | 0.5294117647058824
4: ANY|any non-newline char | 0.17647058823529413
5: ADD|one-or-more repetition | 0.058823529411764705
6: QST|zero-or-one repetition | 0.058823529411764705
7: WRD|[a-zA-Z0-9\_] | 0.058823529411764705


0000 | 0007 | '^$'
0001 | 0004 | '^%'
0002 | 0002 | '^.+$'
0003 | 0002 | '.py\\w?$'
0004 | 0001 | ' $'
0005 | 0001 | '^G'
0006 | 0001 | '^p'
0007 | 0001 | '_$'
0008 | 0001 | '__'
0009 | 0001 | 'y$'
0010 | 0001 | '^  '
0011 | 0001 | '^!$'
0012 | 0001 | '.py$'
0013 | 0001 | '\\$$'
0014 | 0001 | '\\.php'
0015 | 0001 | '^GROUP:'
0016 | 0001 | '^ja_JP$'



cluster 16 stats:
nPatterns: 13.0
nProjects: 28
shortest: n_(?:.*?)
Features:

1: LIT|a literal character | 9.384615384615385
2: ANY|any non-newline char | 1.0769230769230769
3: KLE|zero-or-more repetition | 1.0769230769230769
4: LZY|as few reps as possible | 0.9230769230769231
5: CG|a capture group | 0.7692307692307693
6: NCG|group without capturing | 0.23076923076923078
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.15384615384615385
8: OR|logical or | 0.07692307692307693


0000 | 0009 | '@code{(.*?)}'
0001 | 0008 | 'name="(.*?)"'
0002 | 0003 | '<tchar=(.*?)>'
0003 | 0001 | 'n_(?:.*?)'
0004 | 0001 | 'link="(.*?)"'
0005 | 0001 | 'ov_tree(?:.*?)'
0006 | 0001 | '"title":"(.*?)",'
0007 | 0001 | 'line-height:.*?;'
0008 | 0001 | 'localtime=(.*)\t'
0009 | 0001 | '.*\\<use (.*?)\\>'
0010 | 0001 | 'lc_1div8_1div1(?:.*?)'
0011 | 0001 | '\\$((Id|File|Log).*?)\\$'
0012 | 0001 | '<xnat:Subject\\sID="(.*?)"\\s'



cluster 17 stats:
nPatterns: 21.0
nProjects: 27
shortest: sChamber=(\w)
Features:

1: LIT|a literal character | 12.19047619047619
2: ADD|one-or-more repetition | 0.9523809523809523
3: CG|a capture group | 0.9523809523809523
4: DEC|any of: 0123456789 | 0.8095238095238095
5: KLE|zero-or-more repetition | 0.6666666666666666
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6190476190476191
7: CCC|custom character class | 0.23809523809523808
8: STR|start-of-line | 0.19047619047619047
9: NWSP|any non-whitespace | 0.14285714285714285
10: WRD|[a-zA-Z0-9\_] | 0.14285714285714285
11: ANY|any non-newline char | 0.09523809523809523
12: PNG|named capture group | 0.09523809523809523
13: QST|zero-or-one repetition | 0.047619047619047616
14: RNG|chars within a range | 0.047619047619047616
15: SNG|exactly n repetition | 0.047619047619047616


0000 | 0004 | '^v(ersion)?\\s*(\\d+)'
0001 | 0004 | '[\\?\\&]gsessionid=(\\w*\\-)'
0002 | 0004 | '\\d+ GNU.sparse.numbytes=(\\d+)\\n'
0003 | 0003 | 'successes=(\\d+)'
0004 | 0003 | 'expectedFailures=(\\d+)'
0005 | 0002 | u'cms/page/(\\d+)'
0006 | 0002 | 'ErrorReturnCode_(\\d+)'
0007 | 0002 | 'BuildID\\s*=\\s*"(\\d{10})"'
0008 | 0001 | 'sChamber=(\\w)'
0009 | 0001 | 'sms_so_l_(\\d+)'
0010 | 0001 | 'branch type (\\d)'
0011 | 0001 | 'arrResume\\[\\d*\\]'
0012 | 0001 | 'MAJOR\\s*=\\s*(\\d+)'
0013 | 0001 | '^Name\\s*:\\s*(\\S+)'
0014 | 0001 | '^Version\\s*:\\s*(\\S+)'
0015 | 0001 | '^r(?P<svn_revision>\\d+)'
0016 | 0001 | '\\[new branch\\]\\s+(\\S+)'
0017 | 0001 | 'wx_major_version_number=(\\d+)'
0018 | 0001 | 'libbcc_([A-Z_]+)\\s*:=\\s*([01])'
0019 | 0001 | 'X-Transmission-Session-Id:\\s*(\\w+)'
0020 | 0001 | 'ATLAS version (?P<version>\\d+[.]\\d+[.]\\d+)'



cluster 18 stats:
nPatterns: 9.0
nProjects: 24
shortest: Debian
Features:

1: LIT|a literal character | 10.555555555555555
2: ANY|any non-newline char | 0.1111111111111111
3: KLE|zero-or-more repetition | 0.1111111111111111


0000 | 0013 | 'Control-'
0001 | 0002 | 'Debian'
0002 | 0002 | 'Resigned'
0003 | 0001 | 'Resolved'
0004 | 0001 | 'Postponed'
0005 | 0001 | 'Response:'
0006 | 0001 | 'CyrixInstead'
0007 | 0001 | 'Assertion failed: '
0008 | 0001 | 'smallint.* unsigned'



cluster 19 stats:
nPatterns: 14.0
nProjects: 23
shortest:   http://
Features:

1: LIT|a literal character | 15.142857142857142
2: ADD|one-or-more repetition | 0.5714285714285714
3: QST|zero-or-one repetition | 0.5714285714285714
4: STR|start-of-line | 0.42857142857142855
5: ANY|any non-newline char | 0.35714285714285715
6: CG|a capture group | 0.35714285714285715
7: END|end-of-line | 0.35714285714285715
8: KLE|zero-or-more repetition | 0.2857142857142857
9: NCCC|negated CCC | 0.2857142857142857
10: CCC|custom character class | 0.21428571428571427
11: NLKB|sequence doesn't precede | 0.21428571428571427
12: NWSP|any non-whitespace | 0.14285714285714285
13: NCG|group without capturing | 0.07142857142857142
14: OR|logical or | 0.07142857142857142
15: RNG|chars within a range | 0.07142857142857142
16: SNG|exactly n repetition | 0.07142857142857142
17: WRD|[a-zA-Z0-9\_] | 0.07142857142857142


0000 | 0006 | '^https?://\\S+$'
0001 | 0004 | '^https?://github.com/[^/]+/?$'
0002 | 0002 | '  http://'
0003 | 0002 | 'https?://.*'
0004 | 0001 | '(/s/https?:)/+'
0005 | 0001 | '^https?:\\/\\/.+'
0006 | 0001 | '(http://[^/]+):80'
0007 | 0001 | '/project(s)?|//.+'
0008 | 0001 | '/prefs(?:/([^/]+))?$'
0009 | 0001 | '^file\\:\\/\\/[^\\?]*'
0010 | 0001 | '^http://instagr\\.am/p/[\\S]*$'
0011 | 0001 | '(?<!http:)(?<!https:)(?<!ftp:)//'
0012 | 0001 | 'http://.*imdb\\.com/title/tt([0-9]{7})/quotes'
0013 | 0001 | '^http://www\\.google\\.com/calendar/embed\\?[\\w&;=\\%]+$'



cluster 20 stats:
nPatterns: 8.0
nProjects: 22
shortest: linux-.*
Features:

1: LIT|a literal character | 16.25
2: ANY|any non-newline char | 1.375
3: KLE|zero-or-more repetition | 0.875
4: CG|a capture group | 0.75
5: STR|start-of-line | 0.625
6: ADD|one-or-more repetition | 0.25
7: END|end-of-line | 0.125
8: NCCC|negated CCC | 0.125


0000 | 0017 | '^running .*'
0001 | 0001 | 'linux-.*'
0002 | 0001 | '^new file mode (.+)'
0003 | 0001 | '^GlueSiteUniqueID=(.*)'
0004 | 0001 | '^GlueSiteUniqueID: (.*)'
0005 | 0001 | '^Spare.Part.Number:.(.*)$'
0006 | 0001 | 'build/bdist\\.[^/]+/egg/(.*)'
0007 | 0001 | 'GlueForeignKey: GlueSiteUniqueID=(.*)'



cluster 21 stats:
nPatterns: 7.0
nProjects: 19
shortest: date
Features:

1: LIT|a literal character | 8.142857142857142
2: STR|start-of-line | 0.2857142857142857


0000 | 0011 | '/ParamTest'
0001 | 0003 | ':title'
0002 | 0002 | 'date'
0003 | 0001 | 'Village'
0004 | 0001 | 'Database'
0005 | 0001 | '^Latexmk'
0006 | 0001 | '^invalid_netmask'



cluster 22 stats:
nPatterns: 2.0
nProjects: 17
shortest: (?:<p>(?:&nbsp;|\s|<br \/>)*?</p>\s*)+\Z
Features:

1: LIT|a literal character | 20.0
2: KLE|zero-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: NCG|group without capturing | 2.0
5: OR|logical or | 2.0
6: ADD|one-or-more repetition | 1.5
7: CG|a capture group | 1.0
8: DEC|any of: 0123456789 | 1.0
9: QST|zero-or-one repetition | 1.0
10: ENDZ|absolute end of string | 0.5
11: LZY|as few reps as possible | 0.5


0000 | 0016 | '(?:<p>(?:&nbsp;|\\s|<br \\/>)*?</p>\\s*)+\\Z'
0001 | 0001 | '<p>(?:\\s|<br\\s*/?>)*\\x07(\\d+)\\x07(?:\\s|<br\\s*/?>)*</p>|\\x07(\\d+)\\x07'



cluster 23 stats:
nPatterns: 7.0
nProjects: 16
shortest: ^summary
Features:

1: LIT|a literal character | 8.571428571428571
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.8571428571428572
3: KLE|zero-or-more repetition | 1.2857142857142858
4: STR|start-of-line | 0.5714285714285714
5: ADD|one-or-more repetition | 0.42857142857142855
6: CG|a capture group | 0.2857142857142857
7: CCC|custom character class | 0.14285714285714285
8: NLKA|sequence doesn't follow  | 0.14285714285714285
9: PNG|named capture group | 0.14285714285714285
10: QST|zero-or-one repetition | 0.14285714285714285
11: WRD|[a-zA-Z0-9\_] | 0.14285714285714285


0000 | 0005 | '([\\w\\-]+\\s*:)(?!:)\\s*'
0001 | 0005 | '^\\.\\.\\s+autosummary::\\s*'
0002 | 0003 | '\\s*,?\\s*new Array\\('
0003 | 0001 | '^summary'
0004 | 0001 | '\\shan(ds)ome\\s'
0005 | 0001 | '^\\s*\\*(?P<fromStar>\\s*)'
0006 | 0001 | '^\\s*\\.\\.\\s+autosummary::\\s*'



cluster 24 stats:
nPatterns: 11.0
nProjects: 16
shortest: \n    ::(?=[^=])|            # two :: (but NOT ::=)\n    :[a-zA-Z][a-zA-Z0-9]+| # :foo\n    `|                     # ` (seldom used by itself)\n    (?<!\.)\.\.[ \t]*\w+:  # .. foo: (but NOT ... else:)\n    
Features:

1: LIT|a literal character | 442.0
2: KLE|zero-or-more repetition | 6.363636363636363
3: CG|a capture group | 4.454545454545454
4: ANY|any non-newline char | 4.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.727272727272727
6: CCC|custom character class | 3.4545454545454546
7: QST|zero-or-one repetition | 3.0
8: RNG|chars within a range | 2.909090909090909
9: NCG|group without capturing | 2.727272727272727
10: ADD|one-or-more repetition | 2.6363636363636362
11: NCCC|negated CCC | 1.8181818181818181
12: PNG|named capture group | 1.6363636363636365
13: END|end-of-line | 1.4545454545454546
14: LZY|as few reps as possible | 1.4545454545454546
15: OR|logical or | 1.3636363636363635
16: DEC|any of: 0123456789 | 0.9090909090909091
17: STR|start-of-line | 0.7272727272727273
18: DBB|$n\le x \le m$ repetition | 0.36363636363636365
19: LKA|matching sequence follows | 0.2727272727272727
20: BKR|match the $i^{th}$ CG | 0.18181818181818182
21: ENDZ|absolute end of string | 0.18181818181818182
22: NLKB|sequence doesn't precede | 0.09090909090909091
23: NWSP|any non-whitespace | 0.09090909090909091
24: WRD|[a-zA-Z0-9\_] | 0.09090909090909091


0000 | 0003 | '        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)              # ...a number (with at least one digit)\n        (?P<int>\\d*)             # having a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'
0001 | 0003 | '    # indirect offset\n                ^\\(\n                (?P<base>&?0                  # just zero\n                        |&?[1-9]{1,1}[0-9]* # decimal\n                        |&?0[0-7]*          # octal\n                        |&?0x[0-9A-F]+      # hex\n                )\n                (?P<type>\n                        \\.         # this dot might be alone\n                        [BSL]? # one of this chars in either case\n                )?\n                (?P<sign>\n                        [-+]{0,1}\n                )?\n                (?P<off>0              # just zero\n                        |[1-9]{1,1}[0-9]*  # decimal\n                        |0[0-7]*           # octal\n                        |0x[0-9a-f]+       # hex\n                )?\n                \\)$'
0002 | 0003 | '^\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    *'
0003 | 0002 | '\n    (\\n)?                            # leading line = $1\n    (^[ \\t]*)                        # leading whitespace = $2\n    ([*+-]|\\d+[.]) [ \\t]+            # list marker = $3\n    ((?:.+?)                         # list item text = $4\n    (\\n{1,2}))\n    (?= \\n* (\\Z | \\2 ([*+-]|\\d+[.]) [ \\t]+))\n    '
0004 | 0002 | '\n        ^\n        \\s*\n        (?P<operator>(==|!=|<=|>=|<|>))\n        \\s*\n        (?P<version>\n            [^\\s]* # We just match everything, except for whitespace since this\n                   # is a "legacy" specifier and the version string can be just\n                   # about anything.\n        )\n        \\s*\n        $\n        '
0005 | 0002 | ' (                        # wrap whole match in $1\n                  !\\[\n                    (.*?)               # alt text = $2\n                  \\]\n                  \\(                    # literal paren\n                        [ \\t]*\n                        <?(\\S+?)>?      # src url = $3\n                        [ \\t]*\n                        (               # $4\n                        ([\\\'\\"])        # quote char = $5\n                          (.*?)         # title = $6\n                          \\5            # matching quote\n                          [ \\t]*\n                        )?              # title is optional\n                  \\)\n                )\n    '
0006 | 0001 | '\n    ::(?=[^=])|            # two :: (but NOT ::=)\n    :[a-zA-Z][a-zA-Z0-9]+| # :foo\n    `|                     # ` (seldom used by itself)\n    (?<!\\.)\\.\\.[ \\t]*\\w+:  # .. foo: (but NOT ... else:)\n    '
0007 | 0001 | "\n    (                       # Wrap whole match in $1\n     (\n       ^[ \\t]*&gt;[ \\t]?       # '>' at the start of a line\n       .+\\n                 # rest of the first line\n       (.+\\n)*              # subsequent consecutive lines\n       \\n*                  # blanks\n      )+\n    )"
0008 | 0001 | '^(?P<scheme>[a-zA-Z0-9]+)://                         # scheme\n                        ((?P<avatar>[^:@]+)(:(?P<password>[^@]+))?@)?       # avatar name and password (optional)\n                        (?P<host>[^:/]+)(:(?P<port>\\d+))?                   # host, port (optional)\n                        (?P<path>/.*)                                       # path\n                       $'
0009 | 0001 | '\n            (?:^[ \\t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        '
0010 | 0001 | '^\\s*AST_POLYMORPHIC_MATCHER(_P)?(.?)(?:_OVERLOAD)?\\(\n                          \\s*([^\\s,]+)\\s*,\n                          \\s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\\(([^)]*)\\)\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'



cluster 25 stats:
nPatterns: 6.0
nProjects: 15
shortest: dev$
Features:

1: LIT|a literal character | 5.5
2: STR|start-of-line | 0.6666666666666666
3: DEC|any of: 0123456789 | 0.3333333333333333
4: ADD|one-or-more repetition | 0.16666666666666666
5: END|end-of-line | 0.16666666666666666
6: NWSP|any non-whitespace | 0.16666666666666666


0000 | 0005 | 'dev$'
0001 | 0003 | '^the '
0002 | 0003 | '^/dev/'
0003 | 0002 | '/dev/vd\\S+'
0004 | 0001 | '^/cgi-bin/'
0005 | 0001 | '^wsj/\\d\\d/'



cluster 26 stats:
nPatterns: 12.0
nProjects: 15
shortest: \s*[:_\t]+\s*|\s{2,}|\n
Features:

1: LIT|a literal character | 12.5
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.166666666666667
3: KLE|zero-or-more repetition | 3.5833333333333335
4: ADD|one-or-more repetition | 1.8333333333333333
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 0.8333333333333334
7: CCC|custom character class | 0.75
8: END|end-of-line | 0.75
9: STR|start-of-line | 0.6666666666666666
10: OR|logical or | 0.4166666666666667
11: RNG|chars within a range | 0.25
12: LWB|at least n repetition | 0.16666666666666666
13: NWSP|any non-whitespace | 0.16666666666666666
14: WRD|[a-zA-Z0-9\_] | 0.16666666666666666
15: LZY|as few reps as possible | 0.08333333333333333
16: NCG|group without capturing | 0.08333333333333333
17: QST|zero-or-one repetition | 0.08333333333333333


0000 | 0006 | '^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$'
0001 | 0001 | '\\s*[:_\t]+\\s*|\\s{2,}|\n'
0002 | 0001 | '^\\s*[A-Z/\\s-]+ATTRIBUTES\\s*$'
0003 | 0001 | '^\\s*Tag\\s+Name\\s+VR\\s+VM\\s*$'
0004 | 0001 | u'\\s*(.+)\\s*:\\s*([-a-zA-Z]+)\\s*$'
0005 | 0001 | '\\s*[,/&.]\\s*|\\s+and\\s+|\\s{2,}|\n'
0006 | 0001 | '^(\\s*iret)\\s*=\\s*.*CPU THROTTLE.*$'
0007 | 0001 | "\\s*SELECT\\s+.+?\\s+FROM\\s+[']?(\\w+)"
0008 | 0001 | '^\\s*\\"(.+)\\"\\s*,\\s*\\"(.+)\\"\\s*$'
0009 | 0001 | '(\\S+)\\s*[.]\\s*setshape\\s*[(]\\s*(\\S+)\\s*[)]'
0010 | 0001 | '^\\s*(else.*|end\\s*|elsif.*|rescue.*|when.*|ensure.*)$'
0011 | 0001 | '^\\s*//\\s*wxGlade:\\s*add\\s+((?:\\w|:)+)\\s+event handlers\\s*$'



cluster 27 stats:
nPatterns: 7.0
nProjects: 15
shortest: \s?((["][^"]*["]|[\'][^\']*[\'])\s+dluohs)
Features:

1: LIT|a literal character | 20.857142857142858
2: KLE|zero-or-more repetition | 4.285714285714286
3: CG|a capture group | 3.2857142857142856
4: OR|logical or | 2.7142857142857144
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.4285714285714284
6: NCCC|negated CCC | 2.142857142857143
7: NCG|group without capturing | 1.5714285714285714
8: CCC|custom character class | 1.4285714285714286
9: RNG|chars within a range | 1.2857142857142858
10: ANY|any non-newline char | 1.1428571428571428
11: LZY|as few reps as possible | 1.0
12: ADD|one-or-more repetition | 0.8571428571428571
13: QST|zero-or-one repetition | 0.5714285714285714
14: END|end-of-line | 0.42857142857142855
15: STR|start-of-line | 0.2857142857142857


0000 | 0004 | '^\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\\s*'
0001 | 0004 | u'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\\s*'
0002 | 0003 | '\\s?((["][^"]*["]|[\'][^\']*[\'])\\s+dluohs)'
0003 | 0003 | '[a-zA-Z_][0-9a-zA-Z_+-]*|[0-9+-][0-9a-zA-Z_.+-]*|"([^"\n\\\\]|\\\\.)*("|\\\\?$)|\'([^\'\n\\\\]|\\\\.)*(\'|\\\\?$)'
0004 | 0002 | '\\s*__version__\\s*=\\s*(("([^"]|\\\\")*"|\'([^\']|\\\\\')*\'))'
0005 | 0001 | u'\\n\\s*ACCEPTS:\\s*((?:.|\\n)*?)(?:$|(?:\\n\\n))'
0006 | 0001 | '((,([\\s\\r\\n]*)(\\]))|(,([\\s\\r\\n]*)(\\})))|("(?:\\\\.|[^"\\\\])*"|\'(?:\\\\.|[^\'\\\\])*\'|.[^,"\']*)'



cluster 28 stats:
nPatterns: 5.0
nProjects: 14
shortest: (?<!\\),
Features:

1: LIT|a literal character | 3.0
2: NLKB|sequence doesn't precede | 1.0
3: CG|a capture group | 0.6
4: KLE|zero-or-more repetition | 0.4
5: ANY|any non-newline char | 0.2
6: LZY|as few reps as possible | 0.2
7: QST|zero-or-one repetition | 0.2


0000 | 0005 | '(?<!\\\\),'
0001 | 0004 | u'(?<!%)%s'
0002 | 0004 | '((?<!\\\\)(\\\\\\\\)*)\\.'
0003 | 0002 | "'(.*?)(?<!\\\\)',?"
0004 | 0001 | '(?<!\\\\)\\|'



cluster 29 stats:
nPatterns: 27.0
nProjects: 14
shortest: [\x00-\x08\x0e-\x1f]
Features:

1: LIT|a literal character | 25.22222222222222
2: CG|a capture group | 0.5925925925925926
3: OR|logical or | 0.37037037037037035
4: NWRD|non-word chars | 0.14814814814814814
5: ADD|one-or-more repetition | 0.1111111111111111
6: ANY|any non-newline char | 0.1111111111111111
7: CCC|custom character class | 0.1111111111111111
8: QST|zero-or-one repetition | 0.1111111111111111
9: RNG|chars within a range | 0.07407407407407407
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.07407407407407407
11: DEC|any of: 0123456789 | 0.037037037037037035
12: KLE|zero-or-more repetition | 0.037037037037037035
13: LZY|as few reps as possible | 0.037037037037037035


0000 | 0008 | '[\\x00-\\x08\\x0e-\\x1f]'
0001 | 0002 | '[\x02\x1f\x16\x0f\x03]'
0002 | 0001 | '\\W\xd1\x8e\xd0\xb0\xd0\xbe\\W'
0003 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0004 | 0001 | '\xd1\x87\xd0\xb5\xd1\x85\xd0\xbe\xd0\xb2'
0005 | 0001 | '\x01\x12\x00\x03\x00\x00\x00\x01\x00(.)\x00\x00'
0006 | 0001 | '\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd[e .\n]'
0007 | 0001 | '\xd0\xbc\xd0\xb0\xd1\x80\xd1\x8c\xd0\xb8\xd0\xbd\xd0\xbe'
0008 | 0001 | '\xd0\xbe\xd1\x82\xd1\x80\xd0\xb0\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb5'
0009 | 0001 | '(\xd0\xbb\xd0\xb0\xd0\xb4\xd0\xbe\xd0\xb6\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0010 | 0001 | '\xd1\x82\xd1\x80\xd1\x83\xd0\xb1\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0011 | 0001 | '\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xba\xd0\xbe\xd1\x81\xd0\xb8\xd0\xbd\xd0\xbe'
0012 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0013 | 0001 | '\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe\xd1\x80\xd1\x81\xd0\xba'
0014 | 0001 | '<a href="(.*?)" title="\xd7\xa7\xd7\xa8\xd7\x90 \xd7\x91\xd7\x94\xd7\xa8\xd7\x97\xd7\x91\xd7\x94"'
0015 | 0001 | '(\xd0\xb3\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xb2\xd0\xbe\xd1\x80)'
0016 | 0001 | '\xd0\xb2\xd0\xb0\xd1\x80\xd1\x88\xd0\xb0\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0017 | 0001 | '<div class="idh">(\xe5\xb7\xb2\xe8\xbf\x9e\xe7\xbb\xad\xe7\xad\xbe\xe5\x88\xb0\\d+\xe5\xa4\xa9)</div>'
0018 | 0001 | '<td class="Day" bgcolor="#990000" >\\s+\xf1\xe3\xf8 \xe4\xe9\xe5\xed \xec(.+), <span style=color:#c0c0c0>'
0019 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xb0\xd1\x82\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0020 | 0001 | '\xd0\xbe\xd0\xba\xd1\x82\xd1\x8f\xd0\xb1\xd1\x80\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0021 | 0001 | '\xd1\x86\xd0\xb5\xd0\xbd\xd1\x82\xd1\x80\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd(\xd1\x8b\xd0\xb9|\xd0\xbe\xd0\xbc)'
0022 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb4\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0023 | 0001 | '\xd1\x88\xd0\xbe\xd1\x81\xd1\x81\xd0\xb5 \xd1\x8d\xd0\xbd\xd1\x82\xd1\x83\xd0\xb7\xd0\xb8\xd0\xb0\xd1\x81\xd1\x82\xd0\xbe\xd0\xb2'
0024 | 0001 | '\xd1\x81\xd1\x80\xd0\xb5\xd1\x82\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80'
0025 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80|\xd0\xb1-\xd1\x80\\.?)\\s?(\xd0\xb4\xd0\xbc\\.?|\xd0\xb4\xd0\xbc\xd0\xb8\xd1\x82\xd1\x80\xd0\xb8\xd1\x8f) \xd0\xb4\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0026 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



cluster 30 stats:
nPatterns: 4.0
nProjects: 13
shortest: ^/r/([^/]{2,})
Features:

1: LIT|a literal character | 10.0
2: STR|start-of-line | 1.0
3: KLE|zero-or-more repetition | 0.75
4: NCCC|negated CCC | 0.75
5: END|end-of-line | 0.5
6: ADD|one-or-more repetition | 0.25
7: ANY|any non-newline char | 0.25
8: CG|a capture group | 0.25
9: LWB|at least n repetition | 0.25
10: PNG|named capture group | 0.25


0000 | 0010 | '^#! */usr/local/bin/python'
0001 | 0001 | '^/r/([^/]{2,})'
0002 | 0001 | '^/var/log/[^/]+$'
0003 | 0001 | '^(?P<download_dir>.*/)[^/]*$'



cluster 31 stats:
nPatterns: 3.0
nProjects: 13
shortest: [ \t]*File.*line (\d+)
Features:

1: LIT|a literal character | 18.333333333333332
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.6666666666666667
4: KLE|zero-or-more repetition | 1.6666666666666667
5: ADD|one-or-more repetition | 1.3333333333333333
6: DEC|any of: 0123456789 | 1.0
7: CCC|custom character class | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333
9: LZY|as few reps as possible | 0.3333333333333333
10: QST|zero-or-one repetition | 0.3333333333333333
11: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0011 | '(.*  )(\\w+)(( &lt;cycle.*&gt;)? \\[\\d+\\])\\n'
0001 | 0001 | '[ \t]*File.*line (\\d+)'
0002 | 0001 | 'LaTeX Warning.*?input line (\\d+).$'



cluster 32 stats:
nPatterns: 6.0
nProjects: 13
shortest: .*metis.*
Features:

1: LIT|a literal character | 9.166666666666666
2: ANY|any non-newline char | 2.1666666666666665
3: KLE|zero-or-more repetition | 2.1666666666666665
4: CG|a capture group | 0.5
5: DEC|any of: 0123456789 | 0.16666666666666666
6: END|end-of-line | 0.16666666666666666


0000 | 0008 | '.*kallsyms.*'
0001 | 0001 | '.*metis.*'
0002 | 0001 | '.*mandriva.*'
0003 | 0001 | '.*Firefox/(\\d*).*'
0004 | 0001 | '(.*)callsign\\=(.*)$'
0005 | 0001 | '.*film source: 29.97.*'



cluster 33 stats:
nPatterns: 6.0
nProjects: 13
shortest: \s+([!{};:>+\(\)\],])
Features:

1: LIT|a literal character | 10.666666666666666
2: KLE|zero-or-more repetition | 2.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.5
4: CG|a capture group | 1.1666666666666667
5: NCCC|negated CCC | 1.1666666666666667
6: ADD|one-or-more repetition | 1.0
7: CCC|custom character class | 0.3333333333333333
8: LZY|as few reps as possible | 0.16666666666666666
9: NCG|group without capturing | 0.16666666666666666
10: NWSP|any non-whitespace | 0.16666666666666666
11: QST|zero-or-one repetition | 0.16666666666666666
12: RNG|chars within a range | 0.16666666666666666
13: VWSP|matches U+000B | 0.16666666666666666


0000 | 0006 | ',\\s*([^\\s;,\\n]+)(?:[^,]*?;\\s*q=([0-9.]*))?'
0001 | 0004 | '\\s+([!{};:>+\\(\\)\\],])'
0002 | 0001 | '\\s*([^\\s\\(\\)"\\\'\\-=\\[\\]]+)\\s*'
0003 | 0001 | '\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/]+)\\s*'
0004 | 0001 | '[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*"[^"]*"'
0005 | 0001 | 'pref\\(\\"([^\\"]+)\\"\\s*,\\s*(\\S*)\\s*\\)'



cluster 34 stats:
nPatterns: 6.0
nProjects: 12
shortest: (\d+)bit
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: QST|zero-or-one repetition | 0.16666666666666666


0000 | 0005 | '(\\d+)bit'
0001 | 0004 | 'Ran (\\d+) tests'
0002 | 0002 | '(\\d+) megabytes'
0003 | 0001 | '(\\d+) seconds'
0004 | 0001 | '(\\d+) leaks? excluded'
0005 | 0001 | 'Job <(\\d+)>: Job has already finished'



cluster 35 stats:
nPatterns: 10.0
nProjects: 12
shortest: <(.*?)(?<!-)>
Features:

1: LIT|a literal character | 15.5
2: KLE|zero-or-more repetition | 0.9
3: ANY|any non-newline char | 0.8
4: LZY|as few reps as possible | 0.8
5: CG|a capture group | 0.4
6: CCC|custom character class | 0.2
7: WRD|[a-zA-Z0-9\_] | 0.2
8: ADD|one-or-more repetition | 0.1
9: NLKB|sequence doesn't precede | 0.1
10: NWRD|non-word chars | 0.1


0000 | 0002 | '<pre>.*?</pre>'
0001 | 0002 | '<noscript>.*?</noscript>'
0002 | 0001 | '<(.*?)(?<!-)>'
0003 | 0001 | '<uuid>.*</uuid>'
0004 | 0001 | '<uuid.*?uuid>\\n  '
0005 | 0001 | '<script.*?</script>'
0006 | 0001 | '<genre>(.*?)</genre>'
0007 | 0001 | '<rating>(.*?)</rating>'
0008 | 0001 | '<style [\\W\\w\n]*?</style>'
0009 | 0001 | '<countryName>([\\w ,\\.]+)</countryName>'



cluster 36 stats:
nPatterns: 5.0
nProjects: 12
shortest: From .*?([\w.]+@[\w.]+)
Features:

1: LIT|a literal character | 31.2
2: CG|a capture group | 2.4
3: ADD|one-or-more repetition | 2.0
4: CCC|custom character class | 1.6
5: DEC|any of: 0123456789 | 1.4
6: ANY|any non-newline char | 1.0
7: WRD|[a-zA-Z0-9\_] | 0.8
8: END|end-of-line | 0.6
9: QST|zero-or-one repetition | 0.6
10: KLE|zero-or-more repetition | 0.4
11: OR|logical or | 0.4
12: STR|start-of-line | 0.4
13: LZY|as few reps as possible | 0.2


0000 | 0004 | u'^{"type":"Point","coordinates":\\[-95.363151,29.763374,18(\\.0+)?\\]}$'
0001 | 0003 | 'From .*?([\\w.]+@[\\w.]+)'
0002 | 0002 | '^(dict|dictionary|map|mapping) from ([\\w\\.]+) to ([\\w\\.]+)$'
0003 | 0002 | 'pip \\d(\\.[\\d])+(\\.?(rc|dev|pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'
0004 | 0001 | 'gml:coordinates>([-\\d\\.]+),([-\\d\\.]+)<'



cluster 37 stats:
nPatterns: 7.0
nProjects: 11
shortest: bvecs
Features:

1: LIT|a literal character | 10.285714285714286
2: ANY|any non-newline char | 0.14285714285714285
3: END|end-of-line | 0.14285714285714285
4: KLE|zero-or-more repetition | 0.14285714285714285
5: STR|start-of-line | 0.14285714285714285


0000 | 0006 | '^Expected$'
0001 | 0001 | 'bvecs'
0002 | 0001 | 'subject='
0003 | 0001 | 'subsection{'
0004 | 0001 | 'bill-actions'
0005 | 0001 | '.*SPARCstation-5'
0006 | 0001 | '\ndescription:\n'



cluster 38 stats:
nPatterns: 5.0
nProjects: 11
shortest: [ \t]+(?=\n)
Features:

1: LIT|a literal character | 4.2
2: ANY|any non-newline char | 0.6
3: CG|a capture group | 0.6
4: END|end-of-line | 0.6
5: KLE|zero-or-more repetition | 0.6
6: NLKA|sequence doesn't follow  | 0.6
7: OR|logical or | 0.6
8: CCC|custom character class | 0.4
9: LKA|matching sequence follows | 0.4
10: LZY|as few reps as possible | 0.4
11: NLKB|sequence doesn't precede | 0.4
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4
13: ADD|one-or-more repetition | 0.2
14: OPT|options wrapper | 0.2
15: STR|start-of-line | 0.2


0000 | 0005 | '(<|>|\\+(?!\\s*\\+|$))'
0001 | 0003 | '[ \t]+(?=\n)'
0002 | 0001 | '(?<!\\|)\\|(?!\\|)'
0003 | 0001 | '[;\\s\\/\\+]$|^$|(?=: ).'
0004 | 0001 | '(.*?)(<\\%(?!\\%).*?(?<!\\%)\\%>)(?sm)'



cluster 39 stats:
nPatterns: 3.0
nProjects: 11
shortest: <\w+[^>]*>|</\w+>|[\w\']+|\s+|[^\w\'\s<>/]+
Features:

1: LIT|a literal character | 21.666666666666668
2: ADD|one-or-more repetition | 3.3333333333333335
3: NCCC|negated CCC | 3.0
4: KLE|zero-or-more repetition | 2.3333333333333335
5: OR|logical or | 2.3333333333333335
6: WRD|[a-zA-Z0-9\_] | 2.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
8: CCC|custom character class | 1.3333333333333333
9: LKA|matching sequence follows | 1.3333333333333333
10: CG|a capture group | 1.0
11: QST|zero-or-one repetition | 0.6666666666666666
12: ANY|any non-newline char | 0.3333333333333333
13: LZY|as few reps as possible | 0.3333333333333333
14: NCG|group without capturing | 0.3333333333333333


0000 | 0007 | '([^\'"<>]|"[^"]*"(?=>|/|\\s|\\w+=)|\'[^\']*\'(?=>|/|\\s|\\w+=))*(?=[<>])|.*?(?=[<>])'
0001 | 0003 | '(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/\\[\\]\\(\\)@=\\s]+)|\\s+'
0002 | 0001 | "<\\w+[^>]*>|</\\w+>|[\\w\\']+|\\s+|[^\\w\\'\\s<>/]+"



cluster 40 stats:
nPatterns: 5.0
nProjects: 10
shortest: ife$
Features:

1: LIT|a literal character | 6.0
2: END|end-of-line | 0.2


0000 | 0004 | 'digest '
0001 | 0002 | 'test4'
0002 | 0002 | 'diff -'
0003 | 0001 | 'ife$'
0004 | 0001 | '\\/title\\/tt'



cluster 41 stats:
nPatterns: 4.0
nProjects: 10
shortest: (?m)^(.)
Features:

1: LIT|a literal character | 7.75
2: ANY|any non-newline char | 1.0
3: OPT|options wrapper | 1.0
4: CG|a capture group | 0.75
5: KLE|zero-or-more repetition | 0.5
6: STR|start-of-line | 0.25


0000 | 0007 | '(?i)python.exe'
0001 | 0002 | '(?i)handy(.*)nummer'
0002 | 0002 | '(?i)pager(.*)nummer'
0003 | 0001 | '(?m)^(.)'



cluster 42 stats:
nPatterns: 7.0
nProjects: 10
shortest: VERSION.*'(.+)'
Features:

1: LIT|a literal character | 22.571428571428573
2: ADD|one-or-more repetition | 1.1428571428571428
3: CG|a capture group | 1.1428571428571428
4: DEC|any of: 0123456789 | 0.7142857142857143
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.42857142857142855
6: ANY|any non-newline char | 0.2857142857142857
7: CCC|custom character class | 0.2857142857142857
8: KLE|zero-or-more repetition | 0.2857142857142857
9: NWRD|non-word chars | 0.2857142857142857
10: RNG|chars within a range | 0.2857142857142857
11: END|end-of-line | 0.14285714285714285
12: STR|start-of-line | 0.14285714285714285


0000 | 0004 | 'Content-Length: (\\d+)'
0001 | 0003 | '#define\\WDB_VERSION_PATCH\\W(\\d+)'
0002 | 0003 | '^\\s*public static final int ([A-Z_]+) = (\\d+);$'
0003 | 0001 | "VERSION.*'(.+)'"
0004 | 0001 | 'LL_VERSION_MINOR\\s=\\s([0-9]+)'
0005 | 0001 | 'const S32 LL_VERSION_MAJOR = (\\d+);'
0006 | 0001 | 'const S32 LL_VERSION_PATCH = (\\d+);'



cluster 43 stats:
nPatterns: 3.0
nProjects: 9
shortest: [^{}]*{[^{}]*}[^{}]*
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 1.6666666666666667
3: NCCC|negated CCC | 1.6666666666666667
4: CG|a capture group | 1.0
5: NCG|group without capturing | 1.0
6: OR|logical or | 1.0
7: ADD|one-or-more repetition | 0.6666666666666666
8: LZY|as few reps as possible | 0.6666666666666666
9: ANY|any non-newline char | 0.3333333333333333
10: DBB|$n\le x \le m$ repetition | 0.3333333333333333
11: QST|zero-or-one repetition | 0.3333333333333333
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0007 | 'a(?:b|(c|e){1,2}?|d)+?(.)'
0001 | 0001 | '[^{}]*{[^{}]*}[^{}]*'
0002 | 0001 | '((?:[^,{}]|(?:{[^{}]*}))+),?\\s*'



cluster 44 stats:
nPatterns: 2.0
nProjects: 8
shortest: <!--|-->
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 0.5
3: KLE|zero-or-more repetition | 0.5
4: LZY|as few reps as possible | 0.5
5: OPT|options wrapper | 0.5
6: OR|logical or | 0.5


0000 | 0006 | '<!--|-->'
0001 | 0002 | '(?s)<!--.*?-->'



cluster 45 stats:
nPatterns: 7.0
nProjects: 8
shortest: %PDF
Features:

1: LIT|a literal character | 6.571428571428571
2: STR|start-of-line | 0.42857142857142855


0000 | 0002 | '^SESSIONID-'
0001 | 0001 | '%PDF'
0002 | 0001 | 'SID='
0003 | 0001 | '^PDBID'
0004 | 0001 | '^FINISH'
0005 | 0001 | '#EXTINF:'
0006 | 0001 | 'SENDMAIL='



cluster 46 stats:
nPatterns: 3.0
nProjects: 8
shortest: (.*[*?[\\]|ignorecase\:)
Features:

1: LIT|a literal character | 13.0
2: CG|a capture group | 1.6666666666666667
3: KLE|zero-or-more repetition | 1.3333333333333333
4: NCCC|negated CCC | 1.3333333333333333
5: CCC|custom character class | 1.0
6: ANY|any non-newline char | 0.6666666666666666
7: OR|logical or | 0.6666666666666666
8: QST|zero-or-one repetition | 0.6666666666666666
9: END|end-of-line | 0.3333333333333333
10: LZY|as few reps as possible | 0.3333333333333333
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0006 | '(.*?[\\[\\{\\(,])(\\s*)([\\[\\{\\(])'
0001 | 0001 | '(.*[*?[\\\\]|ignorecase\\:)'
0002 | 0001 | u'[^\r\n\t ]?([^\r\n\t ]| [^\r\n\t ])*[^\r\n\t ]?$'



cluster 47 stats:
nPatterns: 6.0
nProjects: 8
shortest: ^### SALT: (\w+)
Features:

1: LIT|a literal character | 11.833333333333334
2: ADD|one-or-more repetition | 1.1666666666666667
3: CG|a capture group | 1.1666666666666667
4: WRD|[a-zA-Z0-9\_] | 0.8333333333333334
5: NWSP|any non-whitespace | 0.3333333333333333
6: STR|start-of-line | 0.3333333333333333
7: ANY|any non-newline char | 0.16666666666666666
8: END|end-of-line | 0.16666666666666666
9: KLE|zero-or-more repetition | 0.16666666666666666
10: NCG|group without capturing | 0.16666666666666666
11: OPT|options wrapper | 0.16666666666666666
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.16666666666666666


0000 | 0003 | '\\s+Flags for (\\S.+):$'
0001 | 0001 | '^### SALT: (\\w+)'
0002 | 0001 | '\tDLL Name: (\\S+)'
0003 | 0001 | 'file format: (\\w+)'
0004 | 0001 | '(build_git_sha = ")(\\w)*'
0005 | 0001 | '(?m)^uniform (?:\\w+) (\\w+)'



cluster 48 stats:
nPatterns: 1.0
nProjects: 7
shortest: \s*-e\s+.*#egg=(.*)$
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 3.0
3: ANY|any non-newline char | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0


0000 | 0007 | '\\s*-e\\s+.*#egg=(.*)$'



cluster 49 stats:
nPatterns: 6.0
nProjects: 7
shortest: no EDMs
Features:

1: LIT|a literal character | 11.0


0000 | 0002 | 'Audio Files'
0001 | 0001 | 'no EDMs'
0002 | 0001 | 'orgname='
0003 | 0001 | 'WordPress'
0004 | 0001 | 'More Games'
0005 | 0001 | '<pre><a name="foo-1">'



cluster 50 stats:
nPatterns: 5.0
nProjects: 7
shortest: _h?480p\.mov$
Features:

1: LIT|a literal character | 12.6
2: ANY|any non-newline char | 1.2
3: END|end-of-line | 0.4
4: KLE|zero-or-more repetition | 0.4
5: CCC|custom character class | 0.2
6: QST|zero-or-one repetition | 0.2
7: RNG|chars within a range | 0.2


0000 | 0003 | 'sources.redhat.com'
0001 | 0001 | 'technorati.com'
0002 | 0001 | u'_h?480p\\.mov$'
0003 | 0001 | '.*@example\\.com$'
0004 | 0001 | '[a-z]*.example.com'



cluster 51 stats:
nPatterns: 5.0
nProjects: 7
shortest:  |,|"|=|[|]
Features:

1: LIT|a literal character | 8.6
2: OR|logical or | 1.0
3: CCC|custom character class | 0.6
4: CG|a capture group | 0.6


0000 | 0002 | '\\\\(t|n|r|"|\\\\)'
0001 | 0002 | ':|\\*|\\?|"|<|>|\\|'
0002 | 0001 | ' |,|"|=|[|]'
0003 | 0001 | '([[ ~^:?*]|\\.\\.)'
0004 | 0001 | '([+*/\\%^\\&|-]|<<|>>|\\*\\*|//)='



cluster 52 stats:
nPatterns: 4.0
nProjects: 7
shortest: \.?\.?\.\.\.\.$
Features:

1: LIT|a literal character | 10.0
2: QST|zero-or-one repetition | 1.5
3: END|end-of-line | 0.75
4: ANY|any non-newline char | 0.5
5: LZY|as few reps as possible | 0.5
6: OR|logical or | 0.5
7: STR|start-of-line | 0.5
8: ADD|one-or-more repetition | 0.25
9: DEC|any of: 0123456789 | 0.25
10: KLE|zero-or-more repetition | 0.25
11: NCG|group without capturing | 0.25


0000 | 0004 | '#\\{?foreach\\}?\\(.+?\\).*?#\\{?end\\}?'
0001 | 0001 | '\\.?\\.?\\.\\.\\.\\.$'
0002 | 0001 | '^\\.|^\\d\\.$|\\.\\.$'
0003 | 0001 | u'(?:\\.svg|\\.png|\\.jpg)'



cluster 53 stats:
nPatterns: 6.0
nProjects: 7
shortest: ^JSC::UString$
Features:

1: LIT|a literal character | 16.833333333333332
2: ANY|any non-newline char | 0.8333333333333334
3: END|end-of-line | 0.6666666666666666
4: STR|start-of-line | 0.6666666666666666
5: KLE|zero-or-more repetition | 0.3333333333333333
6: ADD|one-or-more repetition | 0.16666666666666666
7: QST|zero-or-one repetition | 0.16666666666666666


0000 | 0004 | 'searchplugins\\/.+\\.xml'
0001 | 0001 | '^JSC::UString$'
0002 | 0001 | '^WTF::CString$'
0003 | 0001 | '%search_string%'
0004 | 0001 | '^Table B.1.? .* Private .*$'
0005 | 0001 | '^WebCore::KURLGooglePrivate$'



cluster 54 stats:
nPatterns: 3.0
nProjects: 7
shortest: {{[ ]?placeholder[ ]?\([ ]?"(?P<placeholder>[a-zA-Z0-9]+)"[ ]?\)[ ]?}}
Features:

1: LIT|a literal character | 21.0
2: QST|zero-or-one repetition | 4.666666666666667
3: CCC|custom character class | 4.0
4: PNG|named capture group | 3.0
5: RNG|chars within a range | 3.0
6: KLE|zero-or-more repetition | 2.3333333333333335
7: ADD|one-or-more repetition | 0.6666666666666666
8: ANY|any non-newline char | 0.6666666666666666
9: CG|a capture group | 0.6666666666666666
10: LZY|as few reps as possible | 0.6666666666666666
11: NCG|group without capturing | 0.6666666666666666
12: BKRN|references NCG | 0.3333333333333333
13: END|end-of-line | 0.3333333333333333
14: LWB|at least n repetition | 0.3333333333333333
15: OR|logical or | 0.3333333333333333
16: STR|start-of-line | 0.3333333333333333
17: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0004 | '(?P<fence>^~{3,})[ ]*(\\{?\\.(?P<lang>[a-zA-Z0-9_-]*)\\}?)?[ ]*\\n(?P<code>.*?)(?P=fence)[ ]*$'
0001 | 0003 | '(?P<replace>(?P<type>[\\^](?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'
0002 | 0001 | '{{[ ]?placeholder[ ]?\\([ ]?"(?P<placeholder>[a-zA-Z0-9]+)"[ ]?\\)[ ]?}}'



cluster 55 stats:
nPatterns: 2.0
nProjects: 7
shortest: (?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\w+).framework/\n    (?:Versions/(?P<version>[^/]+)/)?\n    (?P=shortname)\n    (?:_(?P<suffix>[^_]+))?\n)$\n
Features:

1: LIT|a literal character | 44.5
2: PNG|named capture group | 7.0
3: QST|zero-or-one repetition | 5.5
4: ADD|one-or-more repetition | 2.5
5: NCG|group without capturing | 2.5
6: ANY|any non-newline char | 1.5
7: CCC|custom character class | 1.5
8: STR|start-of-line | 1.5
9: DEC|any of: 0123456789 | 1.0
10: NCCC|negated CCC | 1.0
11: NLKA|sequence doesn't follow  | 1.0
12: OR|logical or | 1.0
13: BKRN|references NCG | 0.5
14: ENDZ|absolute end of string | 0.5
15: END|end-of-line | 0.5
16: KLE|zero-or-more repetition | 0.5
17: OPT|options wrapper | 0.5
18: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0007 | '(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+).framework/\n    (?:Versions/(?P<version>[^/]+)/)?\n    (?P=shortname)\n    (?:_(?P<suffix>[^_]+))?\n)$\n'
0001 | 0001 | '\\A\n(?:\n   (?P<fill>.)?\n   (?P<align>[<>=^])\n)?\n(?P<sign>[-+ ])?\n(?P<alt>\\#)?\n(?P<zeropad>0)?\n(?P<minimumwidth>(?!0)\\d+)?\n(?P<thousands_sep>,)?\n(?:\\.(?P<precision>0|(?!0)\\d+))?\n(?P<type>[eEfFgGn%])?\n\\Z\n'



cluster 56 stats:
nPatterns: 3.0
nProjects: 6
shortest: \.models$
Features:

1: LIT|a literal character | 11.0
2: KLE|zero-or-more repetition | 0.6666666666666666
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
4: END|end-of-line | 0.3333333333333333


0000 | 0003 | u'\\.models$'
0001 | 0002 | 'request\\.module'
0002 | 0001 | 'release\\s*=\\s*True'



cluster 57 stats:
nPatterns: 5.0
nProjects: 6
shortest: try
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 0.2
3: CG|a capture group | 0.2
4: OR|logical or | 0.2


0000 | 0002 | 'type=(B|R|)'
0001 | 0001 | 'try'
0002 | 0001 | 'tree='
0003 | 0001 | "':true,"
0004 | 0001 | '[@:]number'



cluster 58 stats:
nPatterns: 5.0
nProjects: 6
shortest: processor
Features:

1: LIT|a literal character | 9.0
2: KLE|zero-or-more repetition | 0.4
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4
4: END|end-of-line | 0.2
5: STR|start-of-line | 0.2


0000 | 0002 | 'processor'
0001 | 0001 | 'wireless='
0002 | 0001 | 'google_sql'
0003 | 0001 | 'typecode\\s*='
0004 | 0001 | '^removed:\\s*$'



cluster 59 stats:
nPatterns: 4.0
nProjects: 6
shortest: ^([^:]*):[^:]*$
Features:

1: LIT|a literal character | 8.25
2: KLE|zero-or-more repetition | 2.0
3: NCCC|negated CCC | 1.75
4: CG|a capture group | 1.5
5: END|end-of-line | 1.0
6: STR|start-of-line | 0.75
7: DEC|any of: 0123456789 | 0.5
8: ADD|one-or-more repetition | 0.25
9: OR|logical or | 0.25
10: QST|zero-or-one repetition | 0.25


0000 | 0002 | '^([^:]*):[^:]*$'
0001 | 0002 | '^[^{]*\\}|\\{[^}]*$'
0002 | 0001 | '\\[([^]]*)\\]:(\\d*)$'
0003 | 0001 | '^reporter:counter:([^,]*),([^,]*),(-?\\d+)$'



cluster 60 stats:
nPatterns: 4.0
nProjects: 6
shortest: (\w+)\s*District\s*(\d+)
Features:

1: LIT|a literal character | 16.0
2: CG|a capture group | 2.25
3: ADD|one-or-more repetition | 1.75
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.75
5: KLE|zero-or-more repetition | 1.25
6: DEC|any of: 0123456789 | 0.75
7: OR|logical or | 0.75
8: ANY|any non-newline char | 0.5
9: STR|start-of-line | 0.5
10: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0003 | '^(pgpgin|pgpgout|pswpin|pswpout)\\s(\\d+)'
0001 | 0001 | '(\\w+)\\s*District\\s*(\\d+)'
0002 | 0001 | '(Input \\#.*)\n(Must|At\\sleast)'
0003 | 0001 | '^(\\(*time|(.*\\s+time))\\s+<=\\s+(\\d+)'



cluster 61 stats:
nPatterns: 4.0
nProjects: 6
shortest: exampleLocalVar.*abcde
Features:

1: LIT|a literal character | 34.25
2: ANY|any non-newline char | 0.75
3: KLE|zero-or-more repetition | 0.75
4: LZY|as few reps as possible | 0.5
5: ADD|one-or-more repetition | 0.25
6: CG|a capture group | 0.25
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0002 | '\\s*<table id="datatype-pseudotypes-table">'
0001 | 0002 | '<title>(.+?) - Wikipedia, the free encyclopedia</title>'
0002 | 0001 | 'exampleLocalVar.*abcde'
0003 | 0001 | '<table id="showall" .*?</table>'



cluster 62 stats:
nPatterns: 4.0
nProjects: 6
shortest: ==\d+==\s+still\s+reachable:\s+([0-9,]+)\s+bytes
Features:

1: LIT|a literal character | 36.25
2: ADD|one-or-more repetition | 4.75
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.5
4: CG|a capture group | 2.0
5: CCC|custom character class | 1.5
6: RNG|chars within a range | 1.5
7: ANY|any non-newline char | 0.25
8: DEC|any of: 0123456789 | 0.25
9: KLE|zero-or-more repetition | 0.25
10: OR|logical or | 0.25


0000 | 0003 | '==\\d+==\\s+still\\s+reachable:\\s+([0-9,]+)\\s+bytes'
0001 | 0001 | '(#\tmodified:\\s+|#\tnew file:\\s+|#\tdeleted:\\s+)'
0002 | 0001 | 'NIST score = ([0-9.]+)\\s+BLEU score = ([0-9.]+)\\s+for system "(.*)"'
0003 | 0001 | 'mapped\\:\\s([0-9]+)K\\s+writeable/private:\\s([0-9]+)K\\s+shared:\\s+([0-9]+)K'



cluster 63 stats:
nPatterns: 5.0
nProjects: 6
shortest: \n        \(CODE .*\)\n        |\(ID .*\d\)\n    
Features:

1: LIT|a literal character | 65.0
2: KLE|zero-or-more repetition | 3.2
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.8
4: ADD|one-or-more repetition | 1.4
5: CG|a capture group | 1.4
6: ANY|any non-newline char | 1.0
7: DEC|any of: 0123456789 | 1.0
8: OR|logical or | 1.0
9: QST|zero-or-one repetition | 1.0
10: CCC|custom character class | 0.8
11: RNG|chars within a range | 0.8
12: NCCC|negated CCC | 0.6
13: NCG|group without capturing | 0.6
14: PNG|named capture group | 0.4
15: END|end-of-line | 0.2
16: OPT|options wrapper | 0.2


0000 | 0002 | '(?x)(\n        (?:0|[1-9]\\d*)\n        (\\.\\d+)?\n        ([eE][-+]?\\d+)? |\n        (0x[a-fA-F0-9]+)\n    )'
0001 | 0002 | '\\s*\n      (?P<mnemonic>JMP|JRP|LDN|STOP|STO|SUB|CMP)  \n       \\s* \n      (?P<arg>\\d+)        # numeric argument'
0002 | 0001 | '\n        \\(CODE .*\\)\n        |\\(ID .*\\d\\)\n    '
0003 | 0001 | '\n                <.*>_CODE\n                |\\s.*_ID\n        '
0004 | 0001 | '.*Variadic(?:DynCast)?AllOfMatcher\\s*<\n                       \\s*([^\\s,]+)\\s*(?:,\n                       \\s*([^\\s>]+)\\s*)?>\n                       \\s*([^\\s;]+)\\s*;\\s*$'



cluster 64 stats:
nPatterns: 7.0
nProjects: 6
shortest: [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}_cc.csv
Features:

1: LIT|a literal character | 32.142857142857146
2: RNG|chars within a range | 9.428571428571429
3: CCC|custom character class | 8.285714285714286
4: SNG|exactly n repetition | 2.857142857142857
5: CG|a capture group | 2.2857142857142856
6: OR|logical or | 1.4285714285714286
7: QST|zero-or-one repetition | 1.0
8: DBB|$n\le x \le m$ repetition | 0.7142857142857143
9: ANY|any non-newline char | 0.42857142857142855
10: NCG|group without capturing | 0.42857142857142855
11: ADD|one-or-more repetition | 0.2857142857142857
12: END|end-of-line | 0.2857142857142857
13: KLE|zero-or-more repetition | 0.14285714285714285
14: STR|start-of-line | 0.14285714285714285


0000 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}_cc.csv'
0001 | 0001 | 'cc_[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.csv'
0002 | 0001 | '((2[0-5]|1[0-9]|[0-9])?[0-9]\\.){3}((2[0-5]|1[0-9]|[0-9])?[0-9])'
0003 | 0001 | '\\\\(u[dD][89aAbB][0-9a-fA-F]{2}\\\\u[0-9a-fA-F]{4}|u[0-9a-fA-F]{4}|.|$)'
0004 | 0001 | '(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)-){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'
0005 | 0001 | '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
0006 | 0001 | '(((http|https)://)|(www\\.))+(([a-zA-Z0-9\\._-]+\\.[a-zA-Z]{2,6})|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(/[a-zA-Z0-9\\&amp;%_\\./-~-]*)?'



cluster 65 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^DATABASE
Features:

1: LIT|a literal character | 8.0
2: CCC|custom character class | 2.3333333333333335
3: STR|start-of-line | 0.6666666666666666


0000 | 0003 | '^@[Dd][Aa][Tt][Aa]'
0001 | 0001 | '^DATABASE'
0002 | 0001 | '[-][-]link[-]'



cluster 66 stats:
nPatterns: 5.0
nProjects: 5
shortest: default
Features:

1: LIT|a literal character | 6.2
2: ADD|one-or-more repetition | 0.8
3: ANY|any non-newline char | 0.8
4: STR|start-of-line | 0.4
5: CCC|custom character class | 0.2


0000 | 0002 | 'default'
0001 | 0001 | '^def .+'
0002 | 0001 | '^class .+'
0003 | 0001 | 'f[lie]=.+'
0004 | 0001 | ' sslmode=.+'



cluster 67 stats:
nPatterns: 3.0
nProjects: 5
shortest: browser.search.order.([1-9])
Features:

1: LIT|a literal character | 25.0
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.3333333333333333
4: CG|a capture group | 1.3333333333333333
5: ANY|any non-newline char | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 0.3333333333333333
8: OR|logical or | 0.3333333333333333
9: SNG|exactly n repetition | 0.3333333333333333
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0003 | 'browser.search.order.([1-9])'
0001 | 0001 | '/(release|recording)/([0-9a-z\\-]{36})'
0002 | 0001 | 'interface[\\s]*\\[[^\\]]*Conditional=([\\_0-9a-zA-Z&|]*)'



cluster 68 stats:
nPatterns: 6.0
nProjects: 5
shortest: ^.*VTK_LEGACY.*$
Features:

1: LIT|a literal character | 16.5
2: KLE|zero-or-more repetition | 2.1666666666666665
3: ANY|any non-newline char | 1.6666666666666667
4: CG|a capture group | 1.0
5: END|end-of-line | 0.6666666666666666
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
7: STR|start-of-line | 0.5
8: ADD|one-or-more repetition | 0.16666666666666666


0000 | 0001 | '^.*VTK_LEGACY.*$'
0001 | 0001 | 'RESIDUE NUMBERS :(.*)'
0002 | 0001 | 'NPY_NO_EXPORT\\s+(.*)$'
0003 | 0001 | 'Set TRANSCOMM\\s*=\\s*(.*)$'
0004 | 0001 | '^AUTOTEST_TEST_COMPLETE:(.*)$'
0005 | 0001 | '^\\+.*VTK_LEGACY_BODY\\((.*),\\s*"(.*)"\\).*\n'



cluster 69 stats:
nPatterns: 7.0
nProjects: 5
shortest: ((?P<day>\d+)d)
Features:

1: LIT|a literal character | 9.0
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.8571428571428571
4: PNG|named capture group | 0.8571428571428571
5: STR|start-of-line | 0.7142857142857143
6: CG|a capture group | 0.42857142857142855
7: LZY|as few reps as possible | 0.42857142857142855
8: END|end-of-line | 0.2857142857142857
9: ADD|one-or-more repetition | 0.14285714285714285
10: CCC|custom character class | 0.14285714285714285
11: DEC|any of: 0123456789 | 0.14285714285714285
12: OR|logical or | 0.14285714285714285
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0001 | '((?P<day>\\d+)d)'
0001 | 0001 | '^#, (?P<data>.*)'
0002 | 0001 | 'author: (?P<name>.*?);'
0003 | 0001 | '^msgstr "(?P<data>.*)"$'
0004 | 0001 | '^#include "(Support/.*)"'
0005 | 0001 | '^#~ msgid_plural "(?P<data>.*)"$'
0006 | 0001 | '^\\s*?([*]|/\\*\\*)(?P<line>.*?)'



cluster 70 stats:
nPatterns: 5.0
nProjects: 5
shortest: (varchar|char)\((\d+)\)
Features:

1: LIT|a literal character | 20.4
2: CG|a capture group | 1.6
3: ADD|one-or-more repetition | 1.2
4: DEC|any of: 0123456789 | 1.0
5: KLE|zero-or-more repetition | 1.0
6: ANY|any non-newline char | 0.6
7: OR|logical or | 0.6
8: NWSP|any non-whitespace | 0.4
9: CCC|custom character class | 0.2
10: NCCC|negated CCC | 0.2
11: QST|zero-or-one repetition | 0.2
12: WNW|word/non-word boundary | 0.2
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0001 | '(varchar|char)\\((\\d+)\\)'
0001 | 0001 | 'yvsearch(\\d+|all)?:[\\s\\S]+'
0002 | 0001 | 'rFAILED.*\\(failures=(\\d+)\\)'
0003 | 0001 | '.*DCHECK\\(.*args\\.length\\(\\) == (\\d+)\\);'
0004 | 0001 | 'Mozilla (Firefox|Iceweasel|Fennec)\\b[^ ]* ((\\d+)\\.\\S*)'



cluster 71 stats:
nPatterns: 3.0
nProjects: 4
shortest: ^bob
Features:

1: LIT|a literal character | 3.3333333333333335
2: STR|start-of-line | 0.6666666666666666
3: WNW|word/non-word boundary | 0.3333333333333333


0000 | 0002 | '^bob'
0001 | 0001 | '\\bod'
0002 | 0001 | '^nodev'



cluster 72 stats:
nPatterns: 3.0
nProjects: 4
shortest: ^enum
Features:

1: LIT|a literal character | 5.333333333333333
2: STR|start-of-line | 1.0
3: KLE|zero-or-more repetition | 0.3333333333333333
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0002 | '^Vendor:'
0001 | 0001 | '^enum'
0002 | 0001 | '^\\s*endif'



cluster 73 stats:
nPatterns: 2.0
nProjects: 4
shortest: @@BINARYDIR@@
Features:

1: LIT|a literal character | 16.5


0000 | 0004 | '@@BINARYDIR@@'
0001 | 0004 | '@@PACKAGE_PROVIDES@@'



cluster 74 stats:
nPatterns: 3.0
nProjects: 4
shortest: level\d+
Features:

1: LIT|a literal character | 8.333333333333334
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0002 | '\\.repeat\\d+'
0001 | 0001 | 'level\\d+'
0002 | 0001 | 'SEDE clienti:\\s\\d+'



cluster 75 stats:
nPatterns: 3.0
nProjects: 4
shortest: \bminus\b
Features:

1: LIT|a literal character | 10.666666666666666
2: WNW|word/non-word boundary | 1.3333333333333333


0000 | 0002 | '\\bminus\\b'
0001 | 0001 | '\\bmethod=text\\b'
0002 | 0001 | '\\\\begin{tabularx}'



cluster 76 stats:
nPatterns: 2.0
nProjects: 4
shortest: .*(?P<urn>urn\:nbn\:.*?)\<
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 1.5
5: NCG|group without capturing | 1.0
6: PNG|named capture group | 1.0
7: END|end-of-line | 0.5
8: OR|logical or | 0.5


0000 | 0003 | '(?P<address>.*?)(?:(?: \\(.*?@)|$)'
0001 | 0001 | '.*(?P<urn>urn\\:nbn\\:.*?)\\<'



cluster 77 stats:
nPatterns: 3.0
nProjects: 4
shortest: WindowsError
Features:

1: LIT|a literal character | 20.333333333333332
2: ANY|any non-newline char | 0.3333333333333333


0000 | 0002 | 'Please choose another session'
0001 | 0001 | 'WindowsError'
0002 | 0001 | 'devicemanager.DMError'



cluster 78 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^#synchronous_standby_names\s*=.*$
Features:

1: LIT|a literal character | 32.5
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
8: DEC|any of: 0123456789 | 0.5


0000 | 0003 | '^\\s+File .*erroneous\\.py., line \\d+, in test_fail$'
0001 | 0001 | '^#synchronous_standby_names\\s*=.*$'



cluster 79 stats:
nPatterns: 3.0
nProjects: 4
shortest: clocksource=[a-z\- ]+
Features:

1: LIT|a literal character | 17.0
2: RNG|chars within a range | 1.6666666666666667
3: CCC|custom character class | 1.3333333333333333
4: CG|a capture group | 1.0
5: ADD|one-or-more repetition | 0.6666666666666666
6: KLE|zero-or-more repetition | 0.6666666666666666
7: OR|logical or | 0.3333333333333333
8: WNW|word/non-word boundary | 0.3333333333333333


0000 | 0002 | 'clocksource=[a-z\\- ]+'
0001 | 0001 | '\\bsource\\.([a-z+\\-]+)'
0002 | 0001 | '\\*(fore|back)ground:[ ]*(#[A-Za-z0-9]*)'



cluster 80 stats:
nPatterns: 5.0
nProjects: 4
shortest: .+?/Misc
Features:

1: LIT|a literal character | 7.4
2: ANY|any non-newline char | 1.2
3: ADD|one-or-more repetition | 1.0
4: LKB|matching sequence precedes | 0.6
5: KLE|zero-or-more repetition | 0.2
6: LZY|as few reps as possible | 0.2
7: PNG|named capture group | 0.2


0000 | 0001 | '.+?/Misc'
0001 | 0001 | '.+(?<=archives/)'
0002 | 0001 | '.+(?<=spektakl/)'
0003 | 0001 | '(?<=Authority: ).+'
0004 | 0001 | '.*://(?P<namespace>.+)'



cluster 81 stats:
nPatterns: 7.0
nProjects: 4
shortest: .*elf
Features:

1: LIT|a literal character | 4.857142857142857
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 0.8571428571428571
5: WNW|word/non-word boundary | 0.5714285714285714
6: NWSP|any non-whitespace | 0.14285714285714285
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0002 | u'.*?\\S\\.\\s'
0001 | 0001 | '.*elf'
0002 | 0001 | ".*?'''"
0003 | 0001 | '.*?_info'
0004 | 0001 | '.*?\\blm\\b'
0005 | 0001 | '.*?Athlon HX\\b'
0006 | 0001 | '.*?Pentium III\\b'



cluster 82 stats:
nPatterns: 4.0
nProjects: 4
shortest: Model name:\s+(.*)
Features:

1: LIT|a literal character | 14.75
2: CG|a capture group | 1.75
3: ANY|any non-newline char | 1.25
4: KLE|zero-or-more repetition | 1.25
5: NWRD|non-word chars | 0.75
6: ADD|one-or-more repetition | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
8: END|end-of-line | 0.25
9: LZY|as few reps as possible | 0.25
10: QST|zero-or-one repetition | 0.25
11: SNG|exactly n repetition | 0.25


0000 | 0001 | 'Model name:\\s+(.*)'
0001 | 0001 | '//\\s+FaketimeFlags:(.*)'
0002 | 0001 | 'update_(smoke)?test_(.*)\\.py$'
0003 | 0001 | '(#\trenamed:\\W{4})(.*?)\\W->\\W(.*)'



cluster 83 stats:
nPatterns: 3.0
nProjects: 4
shortest: \[.* test environment .*\n
Features:

1: LIT|a literal character | 30.666666666666668
2: KLE|zero-or-more repetition | 1.3333333333333333
3: ANY|any non-newline char | 1.0
4: LZY|as few reps as possible | 0.3333333333333333
5: NCCC|negated CCC | 0.3333333333333333
6: PNG|named capture group | 0.3333333333333333


0000 | 0002 | '\\[.* test environment .*\\n'
0001 | 0001 | '<meta http-equiv="Content-Type".*?>'
0002 | 0001 | '<meta property="og:title" content="(?P<title>[^"]*)" />'



cluster 84 stats:
nPatterns: 3.0
nProjects: 4
shortest: (|.*/)applications/(?P<appname>[^/]+)
Features:

1: LIT|a literal character | 22.0
2: ADD|one-or-more repetition | 1.0
3: PNG|named capture group | 1.0
4: KLE|zero-or-more repetition | 0.6666666666666666
5: NCCC|negated CCC | 0.6666666666666666
6: ANY|any non-newline char | 0.3333333333333333
7: CCC|custom character class | 0.3333333333333333
8: CG|a capture group | 0.3333333333333333
9: OR|logical or | 0.3333333333333333
10: RNG|chars within a range | 0.3333333333333333
11: STR|start-of-line | 0.3333333333333333
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0002 | 'LayoutTests/platform/(?P<platform>[^/]+)/'
0001 | 0001 | '(|.*/)applications/(?P<appname>[^/]+)'
0002 | 0001 | '^Currently Active Slave:\\s*(?P<active>eth[0-9]+)'



cluster 85 stats:
nPatterns: 3.0
nProjects: 4
shortest: Apple (?:clang|LLVM) version (\d+\.\d+)
Features:

1: LIT|a literal character | 32.333333333333336
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.6666666666666665
4: DEC|any of: 0123456789 | 2.3333333333333335
5: QST|zero-or-one repetition | 1.3333333333333333
6: CCC|custom character class | 0.3333333333333333
7: NCG|group without capturing | 0.3333333333333333
8: OR|logical or | 0.3333333333333333
9: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0002 | '(\\d+) files? changed, (\\d+) insertions?\\(\\+\\), (\\d+) deletions?\\(\\-\\)'
0001 | 0001 | u'Apple (?:clang|LLVM) version (\\d+\\.\\d+)'
0002 | 0001 | '(takes [\\w ]+ )(\\d+)( arguments? \\()(\\d+)( given\\))'



cluster 86 stats:
nPatterns: 6.0
nProjects: 4
shortest: \.(txt|anno)$
Features:

1: LIT|a literal character | 14.833333333333334
2: DEC|any of: 0123456789 | 1.5
3: ADD|one-or-more repetition | 1.0
4: END|end-of-line | 0.8333333333333334
5: CG|a capture group | 0.5
6: STR|start-of-line | 0.5
7: OR|logical or | 0.3333333333333333
8: ANY|any non-newline char | 0.16666666666666666


0000 | 0001 | '\\.(txt|anno)$'
0001 | 0001 | '^func_i\\d\\d\\d\\d$'
0002 | 0001 | '(\\.pc|/bin/.+-config)$'
0003 | 0001 | 'nic\\.(\\d+)\\.mac_address\\.0'
0004 | 0001 | '^nic\\.\\d+\\.dns_auto_build\\.\\d+$'
0005 | 0001 | '^nic\\.\\d+\\.dns_has_conflict\\.\\d+$'



cluster 87 stats:
nPatterns: 4.0
nProjects: 4
shortest: <a [^>]*href="([^"]+)"[^>]*>.*?</a>
Features:

1: LIT|a literal character | 22.75
2: KLE|zero-or-more repetition | 3.75
3: ANY|any non-newline char | 2.75
4: CG|a capture group | 2.5
5: LZY|as few reps as possible | 2.5
6: ADD|one-or-more repetition | 1.0
7: NCCC|negated CCC | 0.75
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
9: CCC|custom character class | 0.5
10: RNG|chars within a range | 0.5
11: NLKA|sequence doesn't follow  | 0.25
12: OR|logical or | 0.25
13: STR|start-of-line | 0.25


0000 | 0001 | '<a [^>]*href="([^"]+)"[^>]*>.*?</a>'
0001 | 0001 | '<a href="(?!http|ftp|mailto|/).*</a>'
0002 | 0001 | '<a(.*?)href="(.*?)"(.*?)\xd7\x94\xd7\x91\xd7\x90(.*?)</a>'
0003 | 0001 | '^\\s*<p.*?begin="(.*?)\\.([0-9]+)"\\s+.*?end="(.*?)\\.([0-9]+)"\\s*>(.*?)</p>'



cluster 88 stats:
nPatterns: 4.0
nProjects: 4
shortest: \${\W*next.body\(\)\W*}
Features:

1: LIT|a literal character | 21.75
2: KLE|zero-or-more repetition | 4.75
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.25
4: CG|a capture group | 2.0
5: CCC|custom character class | 0.75
6: ADD|one-or-more repetition | 0.5
7: ANY|any non-newline char | 0.5
8: DEC|any of: 0123456789 | 0.5
9: NWRD|non-word chars | 0.5
10: STR|start-of-line | 0.5
11: WRD|[a-zA-Z0-9\_] | 0.5
12: END|end-of-line | 0.25
13: QST|zero-or-one repetition | 0.25


0000 | 0001 | '\\${\\W*next.body\\(\\)\\W*}'
0001 | 0001 | '^(.*\\n)*def\\s+step_init\\s*\\(\\s*\\)\\s*:'
0002 | 0001 | 'boost::statechart::state_machine<\\s*(\\w*),\\s*(\\w*)\\s*>'
0003 | 0001 | '^\\s*([tlrbhwxy])\\s*([=%<>^_])\\s*([tlrbhwxy]?)\\s*(\\d*)\\s*#(\\d+)\\s*$'



cluster 89 stats:
nPatterns: 2.0
nProjects: 3
shortest: el6
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 0.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0002 | 'el6'
0001 | 0001 | 'rel.*'



cluster 90 stats:
nPatterns: 2.0
nProjects: 3
shortest: ARRAY
Features:

1: LIT|a literal character | 7.5


0000 | 0002 | 'ERROR FAIL'
0001 | 0001 | 'ARRAY'



cluster 91 stats:
nPatterns: 2.0
nProjects: 3
shortest: \n     #
Features:

1: LIT|a literal character | 9.0
2: CG|a capture group | 0.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0002 | ':( *\n     \\|\n)\x02'
0001 | 0001 | '\n     #'



cluster 92 stats:
nPatterns: 3.0
nProjects: 3
shortest: irr.ru
Features:

1: LIT|a literal character | 7.333333333333333
2: ANY|any non-newline char | 1.3333333333333333
3: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0001 | 'irr.ru'
0001 | 0001 | 'init.*.rc'
0002 | 0001 | 'in-addr.arpa'



cluster 93 stats:
nPatterns: 3.0
nProjects: 3
shortest: Not Found
Features:

1: LIT|a literal character | 11.666666666666666


0000 | 0001 | 'Not Found'
0001 | 0001 | '404 Not Found'
0002 | 0001 | 'Percent owned'



cluster 94 stats:
nPatterns: 2.0
nProjects: 3
shortest: This is file for test_formatted_disk.
Features:

1: LIT|a literal character | 34.5
2: ANY|any non-newline char | 0.5
3: CG|a capture group | 0.5
4: OR|logical or | 0.5


0000 | 0002 | 'This is file for test_formatted_disk.'
0001 | 0001 | 'This is (pdfTeXk|latex2e|latex|XeTeXk)'



cluster 95 stats:
nPatterns: 3.0
nProjects: 3
shortest: (\S+) Version (\S+)
Features:

1: LIT|a literal character | 15.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.6666666666666667
4: ANY|any non-newline char | 1.3333333333333333
5: KLE|zero-or-more repetition | 0.6666666666666666
6: NWSP|any non-whitespace | 0.6666666666666666
7: CCC|custom character class | 0.3333333333333333
8: DEC|any of: 0123456789 | 0.3333333333333333
9: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0001 | '(\\S+) Version (\\S+)'
0001 | 0001 | '.*Pop: (.+) Locus: (.+)'
0002 | 0001 | 'Intel(\\(R\\))? (.*) processor [\\d]+MHz'



cluster 96 stats:
nPatterns: 2.0
nProjects: 3
shortest: Working file: (?P<filename>.*)
Features:

1: LIT|a literal character | 20.5
2: KLE|zero-or-more repetition | 1.5
3: PNG|named capture group | 1.5
4: ANY|any non-newline char | 1.0
5: ADD|one-or-more repetition | 0.5
6: DEC|any of: 0123456789 | 0.5
7: END|end-of-line | 0.5
8: LZY|as few reps as possible | 0.5
9: STR|start-of-line | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '^\\s*\\# DEBUG\\(filename=(?P<filename>.*?), lineno=(?P<lineno>\\d+)\\)$'
0001 | 0001 | 'Working file: (?P<filename>.*)'



cluster 97 stats:
nPatterns: 4.0
nProjects: 3
shortest: (.)([A-Z])
Features:

1: LIT|a literal character | 9.0
2: CCC|custom character class | 2.25
3: CG|a capture group | 1.25
4: OR|logical or | 1.25
5: RNG|chars within a range | 1.25
6: END|end-of-line | 0.5
7: NCG|group without capturing | 0.5
8: QST|zero-or-one repetition | 0.5
9: ANY|any non-newline char | 0.25
10: NLKA|sequence doesn't follow  | 0.25
11: NLKB|sequence doesn't precede | 0.25
12: OPT|options wrapper | 0.25


0000 | 0001 | '(.)([A-Z])'
0001 | 0001 | '[$_]?(?:is|has)($|[A-Z_])'
0002 | 0001 | '[$_]?(?:set|add)($|[A-Z_])'
0003 | 0001 | '(?i)(?<![A-Z])E([ABCD]X|[SD]I)(?![A-Z])'



cluster 98 stats:
nPatterns: 2.0
nProjects: 2
shortest: TA
Features:

1: LIT|a literal character | 2.5


0000 | 0001 | 'TA'
0001 | 0001 | 'LGA'



cluster 99 stats:
nPatterns: 1.0
nProjects: 2
shortest: \((H|S)\)
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0


0000 | 0002 | '\\((H|S)\\)'



cluster 100 stats:
nPatterns: 2.0
nProjects: 2
shortest: BOOST
Features:

1: LIT|a literal character | 5.0


0000 | 0001 | 'BOOST'
0001 | 0001 | 'FLOAT'



cluster 101 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^eth$
Features:

1: LIT|a literal character | 3.5
2: END|end-of-line | 1.0
3: STR|start-of-line | 0.5


0000 | 0001 | '^eth$'
0001 | 0001 | 'ooth$'



cluster 102 stats:
nPatterns: 1.0
nProjects: 2
shortest: \[.*\d+ tests.*\n
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: DEC|any of: 0123456789 | 1.0


0000 | 0002 | '\\[.*\\d+ tests.*\\n'



cluster 103 stats:
nPatterns: 1.0
nProjects: 2
shortest: virtualenv_version = "(.*?)"
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0002 | 'virtualenv_version = "(.*?)"'



cluster 104 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^is_dhcp_scope$
Features:

1: LIT|a literal character | 12.5
2: END|end-of-line | 1.0
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: OR|logical or | 0.5
6: QST|zero-or-one repetition | 0.5
7: STR|start-of-line | 0.5


0000 | 0001 | '^is_dhcp_scope$'
0001 | 0001 | '__init__.py(c|o)?$'



cluster 105 stats:
nPatterns: 2.0
nProjects: 2
shortest: internal log
Features:

1: LIT|a literal character | 16.5


0000 | 0001 | 'internal log'
0001 | 0001 | 'Error: unable to free'



cluster 106 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^@executable_path/
Features:

1: LIT|a literal character | 10.0
2: STR|start-of-line | 1.0
3: ADD|one-or-more repetition | 0.5
4: CCC|custom character class | 0.5
5: PNG|named capture group | 0.5
6: RNG|chars within a range | 0.5


0000 | 0001 | '^@executable_path/'
0001 | 0001 | '^\\*(?P<table>[a-z]+)'



cluster 107 stats:
nPatterns: 2.0
nProjects: 2
shortest: (^True$|^False$)
Features:

1: LIT|a literal character | 12.0
2: CG|a capture group | 1.5
3: END|end-of-line | 1.0
4: OR|logical or | 1.0
5: STR|start-of-line | 1.0
6: KLE|zero-or-more repetition | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '(^True$|^False$)'
0001 | 0001 | '(module|def|class) (\\w*)'



cluster 108 stats:
nPatterns: 2.0
nProjects: 2
shortest: [QA]?[:;.]?\d\d
Features:

1: LIT|a literal character | 6.0
2: LZY|as few reps as possible | 2.5
3: ANY|any non-newline char | 1.5
4: KLE|zero-or-more repetition | 1.5
5: ADD|one-or-more repetition | 1.0
6: CCC|custom character class | 1.0
7: DEC|any of: 0123456789 | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0001 | '[QA]?[:;.]?\\d\\d'
0001 | 0001 | '\\[".*?\\]+?.*?\\[/".*?\\]+?'



cluster 109 stats:
nPatterns: 2.0
nProjects: 2
shortest: \(used in test .+\) 
Features:

1: LIT|a literal character | 17.5
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 0.5


0000 | 0002 | '\\(used in test .+\\) '
0001 | 0001 | 'FocusedApplication(.+)/'



cluster 110 stats:
nPatterns: 2.0
nProjects: 2
shortest: \.egg(?:-info)?(?:/|$)
Features:

1: LIT|a literal character | 11.0
2: NCG|group without capturing | 2.0
3: QST|zero-or-one repetition | 1.5
4: END|end-of-line | 1.0
5: ADD|one-or-more repetition | 0.5
6: ANY|any non-newline char | 0.5
7: OR|logical or | 0.5


0000 | 0001 | '\\.egg(?:-info)?(?:/|$)'
0001 | 0001 | '/about(?:_trac)?(?:/.+)?$'



cluster 111 stats:
nPatterns: 3.0
nProjects: 2
shortest: AuthenticAMD
Features:

1: LIT|a literal character | 14.333333333333334


0000 | 0001 | 'AuthenticAMD'
0001 | 0001 | 'multiattack5='
0002 | 0001 | 'webattack_account='



cluster 112 stats:
nPatterns: 2.0
nProjects: 2
shortest: <td class="checkbox"
Features:

1: LIT|a literal character | 27.0
2: ANY|any non-newline char | 0.5
3: KLE|zero-or-more repetition | 0.5
4: LZY|as few reps as possible | 0.5


0000 | 0001 | '<td class="checkbox"'
0001 | 0001 | '<div class="filmo-episodes">.*?</div>'



cluster 113 stats:
nPatterns: 2.0
nProjects: 2
shortest: attempt model run (.*?) one more 
Features:

1: LIT|a literal character | 28.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0002 | 'attempt model run (.*?) one more '
0001 | 0002 | 'model run (.*?) commencing on node'



cluster 114 stats:
nPatterns: 3.0
nProjects: 2
shortest: function( .+?)\(
Features:

1: LIT|a literal character | 18.0
2: ADD|one-or-more repetition | 0.3333333333333333
3: ANY|any non-newline char | 0.3333333333333333
4: CG|a capture group | 0.3333333333333333
5: LZY|as few reps as possible | 0.3333333333333333


0000 | 0001 | 'function( .+?)\\('
0001 | 0001 | 'Connection timed out'
0002 | 0001 | 'Connection reset by peer'



cluster 115 stats:
nPatterns: 3.0
nProjects: 2
shortest: ((?:"[^"\s]+")+)$
Features:

1: LIT|a literal character | 5.666666666666667
2: ADD|one-or-more repetition | 2.6666666666666665
3: NCCC|negated CCC | 1.6666666666666667
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.6666666666666667
5: CG|a capture group | 0.6666666666666666
6: KLE|zero-or-more repetition | 0.6666666666666666
7: NCG|group without capturing | 0.6666666666666666
8: PNG|named capture group | 0.6666666666666666
9: END|end-of-line | 0.3333333333333333


0000 | 0001 | '((?:"[^"\\s]+")+)$'
0001 | 0001 | "''(?P<t>[^\\s']+( +[^\\s']+)*)''"
0002 | 0001 | "''(?P<t>[^\\s']+(?: +[^\\s']+)*)''"



cluster 116 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(?P<unitformat>.+) \((?P<bytes>[0-9\.]+) bytes\)
Features:

1: LIT|a literal character | 23.0
2: ADD|one-or-more repetition | 2.5
3: PNG|named capture group | 1.5
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 1.0
6: RNG|chars within a range | 1.0
7: ANY|any non-newline char | 0.5
8: STR|start-of-line | 0.5


0000 | 0001 | '^(?P<unitformat>.+) \\((?P<bytes>[0-9\\.]+) bytes\\)'
0001 | 0001 | '\\d+ loops, best of \\d+: (?P<time>[0-9.]+) sec per loop'



cluster 117 stats:
nPatterns: 3.0
nProjects: 2
shortest: [-d]  (setuptools|distribute)
Features:

1: LIT|a literal character | 28.333333333333332
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: CCC|custom character class | 0.6666666666666666
5: ADD|one-or-more repetition | 0.3333333333333333
6: NWSP|any non-whitespace | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '[-d]  (setuptools|distribute)'
0001 | 0001 | 'Got (setuptools|distribute) \\S+'
0002 | 0001 | '^(ip_tables|iptable_filter|iptable_nat)[ \\t]'



cluster 118 stats:
nPatterns: 3.0
nProjects: 2
shortest: ("[^"]*?")|(\'[^\']*?\')
Features:

1: LIT|a literal character | 11.0
2: KLE|zero-or-more repetition | 2.6666666666666665
3: NCCC|negated CCC | 2.6666666666666665
4: CCC|custom character class | 1.6666666666666667
5: CG|a capture group | 1.6666666666666667
6: LZY|as few reps as possible | 1.0
7: OR|logical or | 1.0
8: ADD|one-or-more repetition | 0.3333333333333333
9: ANY|any non-newline char | 0.3333333333333333
10: LKA|matching sequence follows | 0.3333333333333333
11: LKB|matching sequence precedes | 0.3333333333333333
12: OPT|options wrapper | 0.3333333333333333
13: PNG|named capture group | 0.3333333333333333


0000 | 0001 | '("[^"]*?")|(\'[^\']*?\')'
0001 | 0001 | '(?s)(?<=\\n)([|][|].*?[|][|])(?=\\n[^|]|\\n[|][^|])'
0002 | 0001 | "[^']*('[^']*'[^']*)*\\:(?P<clob>CLOB\\('([^']+|'')*'\\))"



cluster 119 stats:
nPatterns: 3.0
nProjects: 2
shortest: ^((?:\[?\S+@[^$#%]+)[$#%])(.*\n?)
Features:

1: LIT|a literal character | 9.666666666666666
2: ADD|one-or-more repetition | 3.6666666666666665
3: CCC|custom character class | 2.6666666666666665
4: NWSP|any non-whitespace | 2.3333333333333335
5: CG|a capture group | 2.0
6: KLE|zero-or-more repetition | 2.0
7: NCG|group without capturing | 1.6666666666666667
8: QST|zero-or-one repetition | 1.6666666666666667
9: ANY|any non-newline char | 1.0
10: OR|logical or | 1.0
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
12: LZY|as few reps as possible | 0.6666666666666666
13: NCCC|negated CCC | 0.6666666666666666
14: STR|start-of-line | 0.6666666666666666
15: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
16: END|end-of-line | 0.3333333333333333
17: NWRD|non-word chars | 0.3333333333333333


0000 | 0002 | '^((?:\\(\\S+\\))?(?:|sh\\S*?|\\w+\\S+[@:]\\S+(?:\\s+\\S+)?|\\[\\S+[@:][^\\n]+\\].+)[$#%])(.*\\n?)'
0001 | 0001 | '^((?:\\[?\\S+@[^$#%]+)[$#%])(.*\\n?)'
0002 | 0001 | '(\\s*[\\w\\W]*?(?:\\.(\\s|$)|[\\n][\\t ]*[\\n]))'



cluster 120 stats:
nPatterns: 9.0
nProjects: 2
shortest: seed_hosts:.*
Features:

1: LIT|a literal character | 22.666666666666668
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: END|end-of-line | 0.8888888888888888
5: STR|start-of-line | 0.8888888888888888


0000 | 0001 | 'seed_hosts:.*'
0001 | 0001 | '^std::stack<.*>$'
0002 | 0001 | '^std::__debug::list<.*>$'
0003 | 0001 | '^std::unordered_set<.*>$'
0004 | 0001 | '^std::unordered_multimap<.*>$'
0005 | 0001 | '^std::unordered_multiset<.*>$'
0006 | 0001 | '^std::_List_const_iterator<.*>$'
0007 | 0001 | '^std::tr1::unordered_multiset<.*>$'
0008 | 0001 | '^std::__debug::unordered_multimap<.*>$'



cluster 121 stats:
nPatterns: 3.0
nProjects: 2
shortest: (`(?:[^`]|``)+`|\w+)(?:(?:\:)(`(?:[^`]|``)+`|\w+))?
Features:

1: LIT|a literal character | 33.333333333333336
2: NCG|group without capturing | 6.666666666666667
3: OR|logical or | 5.333333333333333
4: ADD|one-or-more repetition | 4.666666666666667
5: CG|a capture group | 3.0
6: NCCC|negated CCC | 3.0
7: WRD|[a-zA-Z0-9\_] | 2.3333333333333335
8: QST|zero-or-one repetition | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
10: CCC|custom character class | 0.6666666666666666
11: KLE|zero-or-more repetition | 0.6666666666666666
12: DBB|$n\le x \le m$ repetition | 0.3333333333333333
13: WNW|word/non-word boundary | 0.3333333333333333


0000 | 0001 | '(`(?:[^`]|``)+`|\\w+)(?:(?:\\:)(`(?:[^`]|``)+`|\\w+))?'
0001 | 0001 | '(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?(?:\\:)(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?'
0002 | 0001 | u'\\b((?:([\\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\\s&()]|&amp;|&quo\nt;)*(?:[^!"#$%&\'()*+,.:;<=>?@\\[\\]^`{|}~\\s]))|(?:\\((?:[^\\s&()]|&amp;|&quot;)*\\)))+)'



cluster 122 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^ascii\.
Features:

1: LIT|a literal character | 6.0
2: STR|start-of-line | 1.0


0000 | 0001 | '^ascii\\.'



cluster 123 stats:
nPatterns: 1.0
nProjects: 1
shortest: /testing/.*
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '/testing/.*'



cluster 124 stats:
nPatterns: 1.0
nProjects: 1
shortest: Audio: \w+
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'Audio: \\w+'



cluster 125 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(and)|(or)$
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 2.0
3: END|end-of-line | 1.0
4: OR|logical or | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^(and)|(or)$'



cluster 126 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*ri\/.*\.ri$
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0


0000 | 0001 | '.*ri\\/.*\\.ri$'



cluster 127 stats:
nPatterns: 1.0
nProjects: 1
shortest: Name=([\w\.]+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'Name=([\\w\\.]+)'



cluster 128 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^.*RLELossless.*$
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^.*RLELossless.*$'



cluster 129 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^Committed r([0-9]+)
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^Committed r([0-9]+)'



cluster 130 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*<TestFunction name=\s*
Features:

1: LIT|a literal character | 19.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0001 | '\\s*<TestFunction name=\\s*'



cluster 131 stats:
nPatterns: 1.0
nProjects: 1
shortest: :(?P<chain>[A-Z]+) +(?P<policy>[A-Z]+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 3.0
3: CCC|custom character class | 2.0
4: PNG|named capture group | 2.0
5: RNG|chars within a range | 2.0


0000 | 0001 | ':(?P<chain>[A-Z]+) +(?P<policy>[A-Z]+)'



cluster 132 stats:
nPatterns: 2.0
nProjects: 1
shortest: dhcp.option.ntp_server.\d
Features:

1: LIT|a literal character | 20.5
2: ANY|any non-newline char | 3.0
3: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'dhcp.option.ntp_server.\\d'
0001 | 0001 | 'dhcp.pool.allow_booting.\\d'



cluster 133 stats:
nPatterns: 2.0
nProjects: 1
shortest: "v8_revision": "123455"
Features:

1: LIT|a literal character | 21.0
2: ADD|one-or-more repetition | 0.5
3: CCC|custom character class | 0.5
4: CG|a capture group | 0.5
5: LKA|matching sequence follows | 0.5
6: LKB|matching sequence precedes | 0.5
7: RNG|chars within a range | 0.5


0000 | 0001 | '"v8_revision": "123455"'
0001 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'



cluster 134 stats:
nPatterns: 3.0
nProjects: 1
shortest: WEBATTACK_SSL=ON
Features:

1: LIT|a literal character | 18.0


0000 | 0001 | 'WEBATTACK_SSL=ON'
0001 | 0001 | 'COMMAND_CENTER=ON'
0002 | 0001 | 'SELF_SIGNED_APPLET=ON'



cluster 135 stats:
nPatterns: 3.0
nProjects: 1
shortest: (?i)\b(T)(is)\b
Features:

1: LIT|a literal character | 4.333333333333333
2: CG|a capture group | 2.0
3: WNW|word/non-word boundary | 2.0
4: OPT|options wrapper | 1.0


0000 | 0001 | '(?i)\\b(T)(is)\\b'
0001 | 0001 | '(?i)\\b(T)(was)\\b'
0002 | 0001 | '(?i)\\b(can)(not)\\b'



cluster 136 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^} *\/\* *(?P<n>.*) *\*\/$
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 4.0
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: PNG|named capture group | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^} *\\/\\* *(?P<n>.*) *\\*\\/$'
0001 | 0001 | '^ *\\/\\* *(?P<msg>.*) \\*\\/ *$'



cluster 137 stats:
nPatterns: 2.0
nProjects: 1
shortest: http(s)?://(www.)?facebook.com/
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: QST|zero-or-one repetition | 2.0


0000 | 0001 | 'http(s)?://(www.)?facebook.com/'
0001 | 0001 | 'http(s)?://(www.)?linkedin.com/'



cluster 138 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^Fan.#([0-9]+).information:$
Features:

1: LIT|a literal character | 22.0
2: ANY|any non-newline char | 2.5
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: RNG|chars within a range | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^Fan.#([0-9]+).information:$'
0001 | 0001 | '^Server.Blade.#([0-9]+).Information:$'



cluster 139 stats:
nPatterns: 2.0
nProjects: 1
shortest: About\((.*)\).should
Features:

1: LIT|a literal character | 20.0
2: ANY|any non-newline char | 2.5
3: CG|a capture group | 1.5
4: KLE|zero-or-more repetition | 1.5


0000 | 0001 | 'About\\((.*)\\).should'
0001 | 0001 | 'About\\((.*)\\).should_not_include\\((.*)\\)'



cluster 140 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^1.2.840.10008.[0-9.]+ (.*)$
Features:

1: LIT|a literal character | 27.333333333333332
2: ANY|any non-newline char | 5.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: RNG|chars within a range | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^1.2.840.10008.[0-9.]+ (.*)$'
0001 | 0001 | '^1.2.840.10008.[0-9.]+ (.*) \\(Retired\\)$'
0002 | 0001 | '^1.2.840.10008.[0-9.]+ (.*) Well-known frame of reference$'



