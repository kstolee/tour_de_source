Cluster stats:

nClusters: 155
TotalPatterns: 718
totalnProjects: 531
suffix: _i1.80_p0.50_k100_lev_


cluster 0 stats:
nPatterns: 14.0
nProjects: 85
shortest: \W+
Features:

1: ADD|one-or-more repetition | 1.0
2: LIT|a literal character | 0.6428571428571429
3: END|end-of-line | 0.35714285714285715
4: STR|start-of-line | 0.35714285714285715
5: DEC|any of: 0123456789 | 0.2857142857142857
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.21428571428571427
7: NWRD|non-word chars | 0.14285714285714285
8: WRD|[a-zA-Z0-9\_] | 0.14285714285714285
9: NWSP|any non-whitespace | 0.07142857142857142


0000 | 0026 | '\\W+'
0001 | 0015 | u'^\\d+$'
0002 | 0014 | '^\\s+$'
0003 | 0011 | '\\-+'
0004 | 0009 | ':\\d+$'
0005 | 0006 | '^\\W+'
0006 | 0003 | '//+'
0007 | 0001 | '/\\d+'
0008 | 0001 | '\\s+}'
0009 | 0001 | '^\\S+'
0010 | 0001 | '}\\s+'
0011 | 0001 | u'\\w+'
0012 | 0001 | 'p\\d+$'
0013 | 0001 | '^@\\w+$'



cluster 1 stats:
nPatterns: 10.0
nProjects: 75
shortest: \s*,\s*
Features:

1: KLE|zero-or-more repetition | 2.1
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: LIT|a literal character | 1.6
4: END|end-of-line | 0.3
5: QST|zero-or-one repetition | 0.2
6: ANY|any non-newline char | 0.1
7: OR|logical or | 0.1
8: PNG|named capture group | 0.1
9: STR|start-of-line | 0.1


0000 | 0054 | '\\s*,\\s*'
0001 | 0017 | '\\s*#?\\s*$'
0002 | 0002 | '\\s*\\[.*$'
0003 | 0002 | '\\s*\\{\\s*'
0004 | 0002 | u'\\s*,?\\s*'
0005 | 0002 | '^\\s*//\\s*$'
0006 | 0002 | '\\s*\n\\s*\n\\s*'
0007 | 0001 | '\\s*<p>\\s*'
0008 | 0001 | '\\s*\\(\\s*\\('
0009 | 0001 | '\\s*(?P<a>,|:)\\s*'



cluster 2 stats:
nPatterns: 22.0
nProjects: 73
shortest: ^\..*
Features:

1: LIT|a literal character | 2.4545454545454546
2: ANY|any non-newline char | 1.0454545454545454
3: KLE|zero-or-more repetition | 0.8636363636363636
4: CG|a capture group | 0.6363636363636364
5: STR|start-of-line | 0.5909090909090909
6: END|end-of-line | 0.5454545454545454
7: ADD|one-or-more repetition | 0.22727272727272727
8: CCC|custom character class | 0.18181818181818182
9: LZY|as few reps as possible | 0.045454545454545456
10: QST|zero-or-one repetition | 0.045454545454545456


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0021 | '\\(.*?\\)'
0002 | 0006 | '^\\[.*\\]$'
0003 | 0005 | "^'(.*)'$"
0004 | 0005 | '(.+)\\!$'
0005 | 0003 | '\\[.*\\]'
0006 | 0003 | '^\\[.*\\]'
0007 | 0003 | '^[\'"](.*)[\'"]$'
0008 | 0002 | 'tag:.*\\[(.*)\\]'
0009 | 0001 | "'(.*)'"
0010 | 0001 | '^\\..*'
0011 | 0001 | "'(.*)'$"
0012 | 0001 | '^-(.*)$'
0013 | 0001 | '{(.*)}$'
0014 | 0001 | "^'(.+)'@"
0015 | 0001 | '^(.*)"""$'
0016 | 0001 | '^\\{.+\\}'
0017 | 0001 | '(\\{.+\\})'
0018 | 0001 | '^\\(.*\\)$'
0019 | 0001 | '^\\[(.*)\\]$'
0020 | 0001 | '^\\..*\\.swp$'
0021 | 0001 | '[RL]\\{(.+)\\}'



cluster 3 stats:
nPatterns: 31.0
nProjects: 64
shortest: \d.\d.\d
Features:

1: ADD|one-or-more repetition | 3.4838709677419355
2: LIT|a literal character | 3.3225806451612905
3: CG|a capture group | 2.6774193548387095
4: DEC|any of: 0123456789 | 2.225806451612903
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6774193548387096
6: ANY|any non-newline char | 0.6129032258064516
7: KLE|zero-or-more repetition | 0.5483870967741935
8: NWSP|any non-whitespace | 0.5483870967741935
9: STR|start-of-line | 0.3548387096774194
10: WRD|[a-zA-Z0-9\_] | 0.3548387096774194
11: END|end-of-line | 0.3225806451612903
12: QST|zero-or-one repetition | 0.3225806451612903
13: CCC|custom character class | 0.16129032258064516
14: NCG|group without capturing | 0.12903225806451613
15: LZY|as few reps as possible | 0.06451612903225806
16: NCCC|negated CCC | 0.06451612903225806
17: NWRD|non-word chars | 0.06451612903225806
18: DBB|$n\le x \le m$ repetition | 0.03225806451612903


0000 | 0016 | '\\S+ (\\d+)\\.(\\d+)\\.?(\\d+)?'
0001 | 0012 | '(\\d+\\.\\d+\\.\\d+)'
0002 | 0004 | 'bytes=(\\d+)-(\\d+)'
0003 | 0003 | '(\\w+)-(\\w+)\\ : (.*)'
0004 | 0003 | '(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0005 | 0003 | '^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0006 | 0003 | '(\\d+):(\\d+):(\\d+)(?:\\.(\\d{0,6}))?'
0007 | 0003 | '(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)'
0008 | 0002 | '(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'
0009 | 0002 | '^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'
0010 | 0001 | '\\d.\\d.\\d'
0011 | 0001 | '^(\\S+ +\\S+)\\s*$'
0012 | 0001 | ' \\d+.\\d+ tb\\(r\\)'
0013 | 0001 | '^\\S+ (\\S+)@(\\S+)$'
0014 | 0001 | '(\\w+) (\\w)\\. (\\w+)'
0015 | 0001 | '^ (\\S+) (\\d+)/(\\d+)'
0016 | 0001 | '^(\\d+\\.x-)?(\\d+)\\..*$'
0017 | 0001 | '(\\d+)\\s+\\w+\\s+(\\w+).*'
0018 | 0001 | '.\\d+\\.\\d+\\.\\d+\\.\\d+'
0019 | 0001 | '^nic\\.\\d+\\.(.*)\\.\\d+$'
0020 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)(\\w?)'
0021 | 0001 | '^.*(\\d+){(\\d+),(\\d+),(.)}.*$'
0022 | 0001 | '(\\S+)\\s+(\\d)\\s+\\d+\\s+\\S+$'
0023 | 0001 | '^\\#!\\s?([^\\s]+)(?:\\s([^\\s]+))?'
0024 | 0001 | '^(\\S+)\\t(\\S+)\\t(\\S+)\\t(.+)\\n$'
0025 | 0001 | '^(\\d+)\\W(\\w+)\\W(\\w+)[ \t]+(.*)$'
0026 | 0001 | 'mass .*?(\\d+\\.\\d+).*?(\\d+\\.\\d+)'
0027 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'
0028 | 0001 | '(\\d+\\.\\d+\\.\\d+)[T\\.](\\d+(\\.\\d+)*)$'
0029 | 0001 | 'TOTAL\\s+(\\d+)\\s+[\\-\\d\\.]+\\%\\s+(\\d+)'
0030 | 0001 | '\\S+\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)%'



cluster 4 stats:
nPatterns: 28.0
nProjects: 59
shortest: [\s.]
Features:

1: LIT|a literal character | 2.7142857142857144
2: CCC|custom character class | 0.9642857142857143
3: CG|a capture group | 0.5
4: ADD|one-or-more repetition | 0.35714285714285715
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.21428571428571427
6: WRD|[a-zA-Z0-9\_] | 0.14285714285714285
7: DEC|any of: 0123456789 | 0.10714285714285714
8: KLE|zero-or-more repetition | 0.07142857142857142
9: NCCC|negated CCC | 0.07142857142857142
10: END|end-of-line | 0.03571428571428571
11: QST|zero-or-one repetition | 0.03571428571428571
12: RNG|chars within a range | 0.03571428571428571
13: STR|start-of-line | 0.03571428571428571


0000 | 0011 | '[\\s.]'
0001 | 0007 | '([\\t ]+)'
0002 | 0006 | '[\\r\\n]+'
0003 | 0004 | '[\n\r]'
0004 | 0004 | '([\\\\()\\r\\n])'
0005 | 0003 | '[./\\\\]'
0006 | 0003 | u'[\\-\\s]'
0007 | 0003 | '([\\s\\\\])'
0008 | 0003 | u'([^\\t -~])'
0009 | 0002 | '[\\d\\.]+'
0010 | 0002 | '\\n\\r?[\\t ]*$'
0011 | 0001 | '([|&])'
0012 | 0001 | '([()| ])'
0013 | 0001 | '[\\s,;:]'
0014 | 0001 | '([\\x7F])'
0015 | 0001 | "[\\s'\\\\]"
0016 | 0001 | '([$`\\\\])'
0017 | 0001 | '([\\t\\n])'
0018 | 0001 | '([\\{\\}])'
0019 | 0001 | '[ \r\n\t]+'
0020 | 0001 | '[\n\r\t ]+'
0021 | 0001 | '([\\w._-]+)'
0022 | 0001 | '([\\w\\d]+)'
0023 | 0001 | '[\\(\\)\\s,]+'
0024 | 0001 | '^[ \\t\\n\\r]'
0025 | 0001 | 'Name=([\\w\\.]+)'
0026 | 0001 | '[\\w\\d\\-_\\.]+'
0027 | 0001 | '[ \\t]*\\n([^\\r\\n])'



cluster 5 stats:
nPatterns: 16.0
nProjects: 55
shortest: /\*
Features:

1: LIT|a literal character | 1.875
2: KLE|zero-or-more repetition | 0.5
3: STR|start-of-line | 0.4375
4: ANY|any non-newline char | 0.125
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125
6: ADD|one-or-more repetition | 0.0625
7: CG|a capture group | 0.0625
8: DEC|any of: 0123456789 | 0.0625
9: QST|zero-or-one repetition | 0.0625


0000 | 0019 | '/\\*'
0001 | 0015 | '^\\s*\\n'
0002 | 0013 | '^ *\n'
0003 | 0012 | '^-*\n'
0004 | 0006 | '\\\\n'
0005 | 0005 | '/\\*\\*'
0006 | 0005 | '\\\\\\n'
0007 | 0003 | "\\\\'"
0008 | 0003 | '^-?\\d'
0009 | 0003 | '\\\\*\\#'
0010 | 0002 | '^.*\\/'
0011 | 0002 | '^\\s*\\*+/'
0012 | 0001 | '\\{\\}'
0013 | 0001 | '^.*\\('
0014 | 0001 | '\\n:\\n'
0015 | 0001 | '(\\\\*)\n'



cluster 6 stats:
nPatterns: 24.0
nProjects: 48
shortest: [a-zA-Z]
Features:

1: LIT|a literal character | 7.5
2: RNG|chars within a range | 2.7083333333333335
3: CCC|custom character class | 0.9166666666666666
4: KLE|zero-or-more repetition | 0.6666666666666666
5: CG|a capture group | 0.5
6: STR|start-of-line | 0.5
7: END|end-of-line | 0.4583333333333333
8: ADD|one-or-more repetition | 0.25
9: NCCC|negated CCC | 0.20833333333333334
10: ANY|any non-newline char | 0.125
11: DBB|$n\le x \le m$ repetition | 0.125
12: OR|logical or | 0.08333333333333333
13: WRD|[a-zA-Z0-9\_] | 0.08333333333333333
14: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.08333333333333333
15: NCG|group without capturing | 0.041666666666666664
16: QST|zero-or-one repetition | 0.041666666666666664
17: SNG|exactly n repetition | 0.041666666666666664


0000 | 0009 | '\\s*def\\s+(p_[a-zA-Z_0-9]*)\\('
0001 | 0008 | '^([a-zA-F0-9_-]*)[\\.]?.*$'
0002 | 0007 | '[a-zA-Z]'
0003 | 0007 | '^[a-zA-Z_]\\w*'
0004 | 0004 | '^[a-zA-Z0-9-]{1,100}$'
0005 | 0003 | '([a-zA-Z0-9]*)$'
0006 | 0003 | '^[+/0-9A-Za-z]*=*$'
0007 | 0003 | '^[0-9A-Za-z._-]{0,100}$'
0008 | 0002 | '^([a-zA-Z0-9_]+):( |$)'
0009 | 0001 | '^[a-zA-Z]*$'
0010 | 0001 | '^[a-zA-Z]+='
0011 | 0001 | '^[a-z0-9-]+$'
0012 | 0001 | '([^a-zA-Z_0-9])'
0013 | 0001 | '[^a-zA-Z0-9_ -]'
0014 | 0001 | '^[a-z|A-Z]\\w*$'
0015 | 0001 | '[^a-zA-Z0-9_\\.]'
0016 | 0001 | '([1-9][0-9]*)*(.*)'
0017 | 0001 | '[a-zA-Z0-9_]{2,10}'
0018 | 0001 | '([^A-Za-z0-9\\._-])'
0019 | 0001 | '^([a-fA-F0-9]{64})$'
0020 | 0001 | u'[^A-Za-z0-9_\\.\\-]'
0021 | 0001 | '^([a-zA-Z0-9_]*) *=.*$'
0022 | 0001 | '(?:[.~]|/[a-zA-Z_0-9]+)/'
0023 | 0001 | '\\$\\{([a-zA-Z0-9_-]+)\\}'



cluster 7 stats:
nPatterns: 18.0
nProjects: 47
shortest: (\W+)
Features:

1: LIT|a literal character | 1.7777777777777777
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 0.4444444444444444
5: END|end-of-line | 0.2777777777777778
6: DEC|any of: 0123456789 | 0.2222222222222222
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.16666666666666666
8: LZY|as few reps as possible | 0.1111111111111111
9: NWSP|any non-whitespace | 0.1111111111111111
10: STR|start-of-line | 0.1111111111111111
11: KLE|zero-or-more repetition | 0.05555555555555555
12: NWRD|non-word chars | 0.05555555555555555


0000 | 0009 | '(\\W+)'
0001 | 0009 | '^(\\s+)'
0002 | 0008 | '$(\\w+)'
0003 | 0005 | '\\s+(\\d+),$'
0004 | 0004 | '\\$(\\w+)'
0005 | 0003 | '\\${(\\w+)}'
0006 | 0002 | '\\|(\\S+)\\|'
0007 | 0002 | '->\\s*(\\S+)$'
0008 | 0001 | '(\\\\")'
0009 | 0001 | '(\\w+;)'
0010 | 0001 | ':(\\w+)'
0011 | 0001 | '^(\\?+)'
0012 | 0001 | '>(\\d+)$'
0013 | 0001 | '{(\\d+)\\}'
0014 | 0001 | u'tt(\\d+)/$'
0015 | 0001 | '\\{(\\w+)\\}'
0016 | 0001 | '\\$\\((\\w+?)\\)'
0017 | 0001 | 'class (\\w+?)\\('



cluster 8 stats:
nPatterns: 23.0
nProjects: 46
shortest: ^(\:)(.*)$
Features:

1: LIT|a literal character | 2.652173913043478
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 1.6956521739130435
4: ANY|any non-newline char | 1.391304347826087
5: ADD|one-or-more repetition | 1.1304347826086956
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.9130434782608695
7: END|end-of-line | 0.6956521739130435
8: STR|start-of-line | 0.5217391304347826
9: LZY|as few reps as possible | 0.34782608695652173
10: DEC|any of: 0123456789 | 0.17391304347826086
11: NWSP|any non-whitespace | 0.17391304347826086
12: WRD|[a-zA-Z0-9\_] | 0.17391304347826086
13: CCC|custom character class | 0.13043478260869565
14: RNG|chars within a range | 0.08695652173913043


0000 | 0017 | '([.\\w-]+)\\s*(.*)$'
0001 | 0009 | '^def\\s*(\\w+)\\s*=(.*)$'
0002 | 0006 | '(.*?)(#)(.*)'
0003 | 0003 | '^(\\s*)()(\\S+)(.*$)'
0004 | 0002 | '^(.+?)_(.+)$'
0005 | 0002 | '^(.+)<(.+)>(.*)$'
0006 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0007 | 0002 | '^(\\w+)\\s*=\\s*(.+)$'
0008 | 0001 | '^(\\:)(.*)$'
0009 | 0001 | '(.*?)[,(:].*'
0010 | 0001 | '^\\s*##(.*)$'
0011 | 0001 | '(.*?)\\s+<(.*)>'
0012 | 0001 | '^(.*?) - (.*?)$'
0013 | 0001 | '^(\\d+)\\s(.*)$'
0014 | 0001 | '{{.+?\\|(.+?)}}'
0015 | 0001 | '^\\+\\+\\+ (.*)$'
0016 | 0001 | '(.+):(\\d+): (.+)$'
0017 | 0001 | '^(.*)#{(\\w+)}(.*)$'
0018 | 0001 | 'MINOR\\s*=\\s*(\\d+)'
0019 | 0001 | '##\\s*(\\S+)\\s+(\\S*)'
0020 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'
0021 | 0001 | '\\s*(\\S+)\\s+/(.*)/\\s*$'
0022 | 0001 | '([a-zA-Z-]+)\\s*\\((.*)\\)'



cluster 9 stats:
nPatterns: 11.0
nProjects: 39
shortest: ^([@+])?.*
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0
3: CG|a capture group | 1.8181818181818181
4: ANY|any non-newline char | 1.0909090909090908
5: NCCC|negated CCC | 0.8181818181818182
6: STR|start-of-line | 0.7272727272727273
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6363636363636364
8: ADD|one-or-more repetition | 0.5454545454545454
9: QST|zero-or-one repetition | 0.45454545454545453
10: CCC|custom character class | 0.36363636363636365
11: END|end-of-line | 0.36363636363636365


0000 | 0015 | '^([^=]*)=(.*)$'
0001 | 0009 | '\\s*([^: ]*)\\s*:(.*)'
0002 | 0008 | '^([^:]*): *(.*)'
0003 | 0007 | '^([^@]*@)?([^:]*)(:.*)?'
0004 | 0003 | '^([^<]+)[<]?(.*)[>]?$'
0005 | 0002 | '\\s*modtime:\\s*(.*)'
0006 | 0001 | '^([@+])?.*'
0007 | 0001 | '([^:]*):(.*)'
0008 | 0001 | '^([#*]+)\\s.*'
0009 | 0001 | '^([^:]+):.(.*)$'
0010 | 0001 | '^([^:]+):\\s+(.+)\\s*$'



cluster 10 stats:
nPatterns: 5.0
nProjects: 37
shortest: _{2,}
Features:

1: LIT|a literal character | 0.8
2: LWB|at least n repetition | 0.6
3: DBB|$n\le x \le m$ repetition | 0.4
4: STR|start-of-line | 0.4
5: END|end-of-line | 0.2
6: NWSP|any non-whitespace | 0.2


0000 | 0026 | '\\n{2,}'
0001 | 0008 | '^x{1,2}$'
0002 | 0001 | '_{2,}'
0003 | 0001 | '^/{2,}'
0004 | 0001 | '\\S{1,10}'



cluster 11 stats:
nPatterns: 13.0
nProjects: 36
shortest: (\D)[.]
Features:

1: CG|a capture group | 1.4615384615384615
2: LIT|a literal character | 1.3846153846153846
3: KLE|zero-or-more repetition | 1.0769230769230769
4: ANY|any non-newline char | 0.7692307692307693
5: ADD|one-or-more repetition | 0.6153846153846154
6: NWSP|any non-whitespace | 0.3076923076923077
7: STR|start-of-line | 0.3076923076923077
8: WRD|[a-zA-Z0-9\_] | 0.3076923076923077
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3076923076923077
10: CCC|custom character class | 0.07692307692307693
11: NDEC|any non-decimal | 0.07692307692307693


0000 | 0013 | '^(\\s*)(\\w*)'
0001 | 0006 | '@(\\w*)(.*)'
0002 | 0005 | '(\\w+)(.*)'
0003 | 0004 | '(\\D)[.]'
0004 | 0003 | '(\\S+);.*'
0005 | 0002 | '(!\\S*)(.*)'
0006 | 0002 | '^(\\s*)<.+> '
0007 | 0001 | '^//(.*)'
0008 | 0001 | '\\) (.*)'
0009 | 0001 | '\\ //(.*)'
0010 | 0001 | '^(\\s+)\\S+'
0011 | 0001 | '(\\w+://)(.+)'
0012 | 0001 | '(\\S+):\\s*(.*)'



cluster 12 stats:
nPatterns: 21.0
nProjects: 36
shortest: ([0-9]+)
Features:

1: LIT|a literal character | 4.714285714285714
2: ADD|one-or-more repetition | 1.1904761904761905
3: RNG|chars within a range | 1.0476190476190477
4: CCC|custom character class | 0.9523809523809523
5: CG|a capture group | 0.7619047619047619
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333
7: KLE|zero-or-more repetition | 0.23809523809523808
8: STR|start-of-line | 0.23809523809523808
9: ANY|any non-newline char | 0.19047619047619047
10: END|end-of-line | 0.14285714285714285
11: WNW|word/non-word boundary | 0.09523809523809523
12: DEC|any of: 0123456789 | 0.047619047619047616
13: NCCC|negated CCC | 0.047619047619047616
14: QST|zero-or-one repetition | 0.047619047619047616
15: WRD|[a-zA-Z0-9\_] | 0.047619047619047616


0000 | 0013 | '([0-9]+)'
0001 | 0003 | '\\*\\s[^:]+:'
0002 | 0003 | '^(\\w+)=([a-f0-9]+)'
0003 | 0002 | '%([0-9]+)'
0004 | 0002 | '\\*\\*([0-9]+)'
0005 | 0002 | '^\\s*@([a-zA-Z]+)'
0006 | 0001 | "([0-9]+)'"
0007 | 0001 | ' - [0-9]+'
0008 | 0001 | '[0-9]+\\.'
0009 | 0001 | '\\([A-Z]\\) '
0010 | 0001 | '\\b[\\-_]\\b'
0011 | 0001 | '\\([\\d,]+\\)'
0012 | 0001 | 'total = [0-9]+'
0013 | 0001 | '([0-9]+)\\s+min'
0014 | 0001 | 'N=10: ([.0-9]+)'
0015 | 0001 | '^0x([0-9a-z]+)$'
0016 | 0001 | '^([0-9]+)-.+/.+$'
0017 | 0001 | '\\[ip:([0-9_]*)\\]'
0018 | 0001 | '\\s*([a-f0-9]+):.*'
0019 | 0001 | '^(-?[0-9\\.]+)\\s*cm$'
0020 | 0001 | '([0-9]+\\s+\\-\\s+)(.+)'



cluster 13 stats:
nPatterns: 10.0
nProjects: 33
shortest: [^.]*
Features:

1: LIT|a literal character | 5.1
2: NCCC|negated CCC | 1.0
3: KLE|zero-or-more repetition | 0.8
4: ADD|one-or-more repetition | 0.2
5: CCC|custom character class | 0.2
6: LZY|as few reps as possible | 0.2
7: NLKA|sequence doesn't follow  | 0.2
8: CG|a capture group | 0.1
9: OPT|options wrapper | 0.1
10: OR|logical or | 0.1
11: QST|zero-or-one repetition | 0.1
12: STR|start-of-line | 0.1
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1


0000 | 0019 | '<[^>]*?>'
0001 | 0006 | '[^.]*'
0002 | 0002 | '<![^>]*>'
0003 | 0001 | '<[Bb][Rr]/>'
0004 | 0001 | '<(?!!)[^>]+>'
0005 | 0001 | '<[^!][^>]*?>'
0006 | 0001 | '(?i)<br[^>]*>'
0007 | 0001 | '^(<[^>]*/>)\\s*'
0008 | 0001 | '<!--[^>]*-->|<!>'
0009 | 0001 | '<(?!/?TEXT)[^>]+>'



cluster 14 stats:
nPatterns: 2.0
nProjects: 32
shortest: ^<\?.*encoding=[\'"](.*?)[\'"].*\?>
Features:

1: LIT|a literal character | 19.0
2: ANY|any non-newline char | 2.5
3: KLE|zero-or-more repetition | 2.5
4: CCC|custom character class | 2.0
5: LZY|as few reps as possible | 1.5
6: CG|a capture group | 1.0
7: STR|start-of-line | 1.0
8: ADD|one-or-more repetition | 0.5


0000 | 0028 | '^<\\?.*encoding=[\'"](.*?)[\'"].*\\?>'
0001 | 0004 | '^<\\?xml.*?encoding=["\\\']*(.+?)["\\\'>]'



cluster 15 stats:
nPatterns: 4.0
nProjects: 30
shortest: \r
Features:

1: LIT|a literal character | 0.75
2: NWSP|any non-whitespace | 0.5


0000 | 0013 | '\\r'
0001 | 0007 | '\\|'
0002 | 0005 | ',\\S'
0003 | 0005 | u'\\S'



cluster 16 stats:
nPatterns: 8.0
nProjects: 30
shortest: ["]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0


0000 | 0022 | '[&<]'
0001 | 0004 | '[-.]'
0002 | 0002 | '[kK]'
0003 | 0001 | '["]'
0004 | 0001 | '[-:]'
0005 | 0001 | '[Yy]'
0006 | 0001 | '[x+]'
0007 | 0001 | '[\\-: ]'



cluster 17 stats:
nPatterns: 13.0
nProjects: 30
shortest: ^[0-9]{2}$
Features:

1: LIT|a literal character | 5.615384615384615
2: RNG|chars within a range | 2.3076923076923075
3: CCC|custom character class | 1.1538461538461537
4: SNG|exactly n repetition | 0.9230769230769231
5: END|end-of-line | 0.6153846153846154
6: STR|start-of-line | 0.46153846153846156
7: CG|a capture group | 0.38461538461538464
8: DBB|$n\le x \le m$ repetition | 0.15384615384615385
9: DEC|any of: 0123456789 | 0.15384615384615385
10: ADD|one-or-more repetition | 0.07692307692307693
11: OR|logical or | 0.07692307692307693
12: QST|zero-or-one repetition | 0.07692307692307693


0000 | 0010 | '0x([0-9a-fA-F]+)L?'
0001 | 0007 | 'md5=[0-9a-f]{32}$'
0002 | 0003 | '^#[0-9A-Fa-f]{6}$'
0003 | 0002 | '^[0-9]{2}$'
0004 | 0002 | '^\\#([0-9a-fA-F]{6})$'
0005 | 0001 | '[0-9a-f]{32}'
0006 | 0001 | '[#][\\dA-F]{3}'
0007 | 0001 | '[#][\\dA-F]{6}'
0008 | 0001 | '[0-9a-fA-F]{6}'
0009 | 0001 | '^[0-9a-f]{32}$'
0010 | 0001 | '#[0-9a-fA-F]{6}'
0011 | 0001 | '^([A-Fa-f0-9]{2,2}){3,4}$'
0012 | 0001 | '^([0-9a-fA-F]{2}(:|$)){6}$'



cluster 18 stats:
nPatterns: 10.0
nProjects: 28
shortest: [$]([A-Z_][A-Z0-9_]*)
Features:

1: LIT|a literal character | 13.3
2: RNG|chars within a range | 4.8
3: CCC|custom character class | 1.9
4: KLE|zero-or-more repetition | 1.0
5: CG|a capture group | 0.8
6: END|end-of-line | 0.3
7: NCCC|negated CCC | 0.3
8: STR|start-of-line | 0.3
9: ADD|one-or-more repetition | 0.2
10: OR|logical or | 0.2
11: DBB|$n\le x \le m$ repetition | 0.1
12: DEC|any of: 0123456789 | 0.1
13: NCG|group without capturing | 0.1
14: NLKA|sequence doesn't follow  | 0.1
15: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1


0000 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0001 | 0004 | '([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*'
0002 | 0002 | '<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'
0003 | 0002 | '@%\\(([a-zA-Z][a-zA-Z0-9_-]*)\\)s'
0004 | 0001 | '[$]([A-Z_][A-Z0-9_]*)'
0005 | 0001 | '([a-zA-Z_][a-zA-Z0-9_]*)'
0006 | 0001 | '\\?[a-zA-Z_][a-zA-Z0-9_]*$'
0007 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,4}$'
0008 | 0001 | '^&[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0009 | 0001 | '(^[^a-zA-Z\\._]+)|([^a-zA-Z\\._0-9]+)'



cluster 19 stats:
nPatterns: 2.0
nProjects: 25
shortest: "
Features:

1: LIT|a literal character | 1.5


0000 | 0024 | '"'
0001 | 0001 | u'"}'



cluster 20 stats:
nPatterns: 7.0
nProjects: 25
shortest: (.{60})
Features:

1: CG|a capture group | 1.4285714285714286
2: LIT|a literal character | 1.4285714285714286
3: ADD|one-or-more repetition | 0.7142857142857143
4: DEC|any of: 0123456789 | 0.7142857142857143
5: END|end-of-line | 0.7142857142857143
6: STR|start-of-line | 0.7142857142857143
7: ANY|any non-newline char | 0.5714285714285714
8: DBB|$n\le x \le m$ repetition | 0.42857142857142855
9: SNG|exactly n repetition | 0.42857142857142855
10: CCC|custom character class | 0.2857142857142857
11: NCCC|negated CCC | 0.2857142857142857
12: KLE|zero-or-more repetition | 0.14285714285714285
13: WRD|[a-zA-Z0-9\_] | 0.14285714285714285


0000 | 0012 | '^(\\d{10})$'
0001 | 0005 | '(.{60})'
0002 | 0003 | u'^(\\d{10})$'
0003 | 0003 | '^(.+)[:(]\\d+[:)]'
0004 | 0002 | '(.*)\\.\\w{3,4}$'
0005 | 0001 | '^(.+):(\\d{1,5})$'
0006 | 0001 | '^([^;]+);([^;]+):(\\d{1,5})$'



cluster 21 stats:
nPatterns: 4.0
nProjects: 24
shortest: ^(?:=)$
Features:

1: LIT|a literal character | 1.75
2: END|end-of-line | 0.75
3: NCG|group without capturing | 0.75
4: STR|start-of-line | 0.75
5: CG|a capture group | 0.25
6: OR|logical or | 0.25
7: QST|zero-or-one repetition | 0.25


0000 | 0021 | u'^(?:=)$'
0001 | 0003 | '^(?:=)$'
0002 | 0002 | '^(X|A)$'
0003 | 0001 | ':(?://)?'



cluster 22 stats:
nPatterns: 4.0
nProjects: 22
shortest: (\.|\s)
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.25
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.25
4: OR|logical or | 1.0
5: KLE|zero-or-more repetition | 0.5
6: ADD|one-or-more repetition | 0.25


0000 | 0017 | '(\\(|\\)|\\s+)'
0001 | 0003 | u'(\\.|\\s)'
0002 | 0003 | u'(\\.|\\s|/|-)'
0003 | 0003 | '(\\s*\\=)|(\\s*\\:)'



cluster 23 stats:
nPatterns: 4.0
nProjects: 22
shortest: ([$]{[^}]*})
Features:

1: LIT|a literal character | 3.5
2: CG|a capture group | 1.5
3: KLE|zero-or-more repetition | 1.25
4: NCCC|negated CCC | 0.75
5: ADD|one-or-more repetition | 0.5
6: CCC|custom character class | 0.5
7: ANY|any non-newline char | 0.25
8: LZY|as few reps as possible | 0.25
9: NWSP|any non-whitespace | 0.25
10: OR|logical or | 0.25
11: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0019 | '\\$(\\w+|\\{[^}]*\\})'
0001 | 0001 | '([$]{[^}]*})'
0002 | 0001 | '(\\$\\([^\\)]*\\))'
0003 | 0001 | '(\\S+)([ \t]*?)(.*)'



cluster 24 stats:
nPatterns: 6.0
nProjects: 22
shortest: "([^ ]+?)"
Features:

1: LIT|a literal character | 4.5
2: CG|a capture group | 1.0
3: NCCC|negated CCC | 1.0
4: ADD|one-or-more repetition | 0.6666666666666666
5: LZY|as few reps as possible | 0.6666666666666666
6: KLE|zero-or-more repetition | 0.3333333333333333
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.16666666666666666


0000 | 0016 | '``([^`\\s]+?)``'
0001 | 0002 | '\\[([^:]+?)\\]'
0002 | 0001 | '"([^ ]+?)"'
0003 | 0001 | '{([^}^{]*)}'
0004 | 0001 | '#\\{([^}]*)\\}'
0005 | 0001 | '{{{([^{]+?)}}}'



cluster 25 stats:
nPatterns: 6.0
nProjects: 22
shortest: [\x00-\x20]
Features:

1: LIT|a literal character | 2.1666666666666665
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0
4: ADD|one-or-more repetition | 0.16666666666666666
5: CG|a capture group | 0.16666666666666666
6: ENDZ|absolute end of string | 0.16666666666666666
7: KLE|zero-or-more repetition | 0.16666666666666666
8: STR|start-of-line | 0.16666666666666666


0000 | 0009 | '([\\x00-\\x7F])+'
0001 | 0007 | '[\\x00-\\x20]'
0002 | 0005 | '\\A[\\x00-\\x7f]*\\Z'
0003 | 0003 | '[\\x00-\\x1f]'
0004 | 0002 | '[=\x7f-\xff]'
0005 | 0001 | u'[\\000-\\037]'



cluster 26 stats:
nPatterns: 5.0
nProjects: 22
shortest: Revision: (.+)
Features:

1: LIT|a literal character | 13.8
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: CCC|custom character class | 0.6
5: RNG|chars within a range | 0.6
6: ANY|any non-newline char | 0.2
7: DEC|any of: 0123456789 | 0.2
8: LKA|matching sequence follows | 0.2
9: LKB|matching sequence precedes | 0.2
10: STR|start-of-line | 0.2


0000 | 0017 | 'Revision: (.+)'
0001 | 0002 | 'Revision: ([0-9]+)'
0002 | 0001 | 'User Serial:([0-9]+)'
0003 | 0001 | '^New Revision: (\\d+)'
0004 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'



cluster 27 stats:
nPatterns: 3.0
nProjects: 19
shortest: --
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 0.3333333333333333


0000 | 0017 | '--'
0001 | 0001 | u'-h'
0002 | 0001 | u'--+'



cluster 28 stats:
nPatterns: 2.0
nProjects: 19
shortest: url="([^"]+)"
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: STR|start-of-line | 0.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0018 | 'url="([^"]+)"'
0001 | 0001 | '^%include\\s"([^"]+)"'



cluster 29 stats:
nPatterns: 5.0
nProjects: 19
shortest: ^http://
Features:

1: LIT|a literal character | 9.4
2: STR|start-of-line | 0.8
3: CG|a capture group | 0.6
4: OR|logical or | 0.4
5: QST|zero-or-one repetition | 0.4


0000 | 0013 | '^http://'
0001 | 0002 | '  http://'
0002 | 0002 | '^http(s)?://'
0003 | 0001 | '^(http|https)://'
0004 | 0001 | '^(https?|ftp):\\/\\/'



cluster 30 stats:
nPatterns: 8.0
nProjects: 19
shortest: [A-Z_]+
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 2.25
3: ADD|one-or-more repetition | 0.75
4: CCC|custom character class | 0.75
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5
7: NCCC|negated CCC | 0.25
8: CG|a capture group | 0.125
9: LZY|as few reps as possible | 0.125
10: QST|zero-or-one repetition | 0.125


0000 | 0007 | '&#?[A-Za-z0-9]+?;'
0001 | 0004 | u'[^A-Za-z0-9.]+'
0002 | 0002 | '[A-Za-z]'
0003 | 0002 | '^[-_A-Za-z0-9]+$'
0004 | 0001 | '[A-Z_]+'
0005 | 0001 | '^[^A-Za-z_]$'
0006 | 0001 | '^@[A-Z0-9\\_]+$'
0007 | 0001 | "(^[A-Za-z\\' ]+$)"



cluster 31 stats:
nPatterns: 6.0
nProjects: 19
shortest: ^([A-Z]+)([1-9][0-9]*)$
Features:

1: LIT|a literal character | 9.833333333333334
2: CCC|custom character class | 3.1666666666666665
3: RNG|chars within a range | 3.1666666666666665
4: CG|a capture group | 2.6666666666666665
5: ADD|one-or-more repetition | 1.6666666666666667
6: KLE|zero-or-more repetition | 1.1666666666666667
7: STR|start-of-line | 1.0
8: END|end-of-line | 0.8333333333333334
9: OR|logical or | 0.5
10: ANY|any non-newline char | 0.3333333333333333
11: LWB|at least n repetition | 0.3333333333333333
12: LZY|as few reps as possible | 0.16666666666666666
13: SNG|exactly n repetition | 0.16666666666666666


0000 | 0009 | '^([A-Z]+)([1-9][0-9]*)$'
0001 | 0003 | '^@@ -([0-9]*),([0-9]*) \\+([0-9]*),([0-9]*) @@'
0002 | 0002 | '^v([0-9]+|[0-9]+\\.[0-9]+)(/.*|$)'
0003 | 0002 | '^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'
0004 | 0002 | '^(\\+[3-9]{1,}|\\+{3,}|\\+[1-9][0-9]+)$'
0005 | 0001 | '^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'



cluster 32 stats:
nPatterns: 6.0
nProjects: 18
shortest: ^[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]$
Features:

1: LIT|a literal character | 23.166666666666668
2: RNG|chars within a range | 8.833333333333334
3: CCC|custom character class | 3.5
4: CG|a capture group | 1.8333333333333333
5: KLE|zero-or-more repetition | 1.8333333333333333
6: QST|zero-or-one repetition | 0.8333333333333334
7: NCCC|negated CCC | 0.6666666666666666
8: ADD|one-or-more repetition | 0.5
9: END|end-of-line | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333
11: OR|logical or | 0.16666666666666666


0000 | 0013 | '^[a-zA-Z_][a-zA-Z_0-9]*(\\.[a-zA-Z_][a-zA-Z_0-9]*)*$'
0001 | 0004 | '\\$\\{?[a-zA-Z_][a-zA-Z0-9_]*(\\([^)]*\\))?(\\.[a-zA-Z0-9_]+(\\([^)]*\\))?)*\\}?'
0002 | 0001 | '^[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]$'
0003 | 0001 | '([^a-zA-Z0-9]*)([a-zA-Z0-9]+)([^a-zA-Z0-9]*)'
0004 | 0001 | '([a-zA-Z][a-zA-Z]|[iIxX]-([a-zA-Z])+)(-[a-zA-Z])*'
0005 | 0001 | '[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?'



cluster 33 stats:
nPatterns: 4.0
nProjects: 17
shortest: ()
Features:

1: CG|a capture group | 1.0
2: LIT|a literal character | 1.0
3: KLE|zero-or-more repetition | 0.75
4: ANY|any non-newline char | 0.25


0000 | 0015 | '()'
0001 | 0008 | '(:*)'
0002 | 0002 | '(Y=.*)'
0003 | 0001 | u'(x*)'



cluster 34 stats:
nPatterns: 3.0
nProjects: 15
shortest: \r|\n|\r\n
Features:

1: LIT|a literal character | 4.0
2: OR|logical or | 0.6666666666666666
3: QST|zero-or-one repetition | 0.6666666666666666
4: CG|a capture group | 0.3333333333333333
5: STR|start-of-line | 0.3333333333333333


0000 | 0011 | '^\\r?\\n\\r?\\n'
0001 | 0002 | '\r|\n|\r\n'
0002 | 0002 | '(\\r\\n|\\n|\\r)'



cluster 35 stats:
nPatterns: 2.0
nProjects: 15
shortest: coding[:=]\s*([-\w_.]+)
Features:

1: LIT|a literal character | 10.5
2: CCC|custom character class | 2.0
3: ADD|one-or-more repetition | 1.0
4: KLE|zero-or-more repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: CG|a capture group | 0.5
8: PNG|named capture group | 0.5


0000 | 0013 | 'coding[:=]\\s*([-\\w_.]+)'
0001 | 0002 | 'coding[:=]\\s*(?P<encoding>[-\\w.]+)'



cluster 36 stats:
nPatterns: 4.0
nProjects: 15
shortest: .*?\S\.\s
Features:

1: LIT|a literal character | 2.5
2: WNW|word/non-word boundary | 1.5
3: ANY|any non-newline char | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: CG|a capture group | 0.25
7: NWSP|any non-whitespace | 0.25
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0006 | '.*?\\b(as)\\b'
0001 | 0002 | u'.*?\\S\\.\\s'
0002 | 0001 | '.*?\\bpni\\b'
0003 | 0001 | '.*?\\bsse2\\b'



cluster 37 stats:
nPatterns: 4.0
nProjects: 15
shortest: :\s*(#.*)?$
Features:

1: LIT|a literal character | 3.25
2: KLE|zero-or-more repetition | 2.0
3: CG|a capture group | 1.25
4: ANY|any non-newline char | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
6: END|end-of-line | 0.5
7: LZY|as few reps as possible | 0.5
8: NCCC|negated CCC | 0.5
9: QST|zero-or-one repetition | 0.25
10: STR|start-of-line | 0.25


0000 | 0008 | '(\\$\\((.*?)\\))'
0001 | 0006 | '^\\s*\\((.*)\\)\\s*$'
0002 | 0002 | ':\\s*(#.*)?$'
0003 | 0001 | '[^\\(\\)]*\\((.*?)\\)[^\\(\\)]'



cluster 38 stats:
nPatterns: 3.0
nProjects: 15
shortest: ^(?P<number>\d{7})(?P<check>\d)$
Features:

1: DEC|any of: 0123456789 | 2.0
2: PNG|named capture group | 2.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0
5: SNG|exactly n repetition | 0.6666666666666666
6: DBB|$n\le x \le m$ repetition | 0.3333333333333333
7: LIT|a literal character | 0.3333333333333333
8: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0001 | 0003 | u'^(?P<number>\\d{7})(?P<check>\\d)$'
0002 | 0003 | u'^(?P<number>\\d{1,8})-?(?P<check>\\d)$'



cluster 39 stats:
nPatterns: 3.0
nProjects: 14
shortest: .*?\n
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: CCC|custom character class | 0.3333333333333333
5: LZY|as few reps as possible | 0.3333333333333333
6: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0012 | '.*?\\n'
0001 | 0001 | '.*\\n?'
0002 | 0001 | '.*[\\/]'



cluster 40 stats:
nPatterns: 3.0
nProjects: 14
shortest: (?i)b+
Features:

1: LIT|a literal character | 1.0
2: OPT|options wrapper | 1.0
3: ADD|one-or-more repetition | 0.6666666666666666
4: STR|start-of-line | 0.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0012 | '(?m)^\\.'
0001 | 0008 | '(?i)b+'
0002 | 0002 | '(?s)>\\s+'



cluster 41 stats:
nPatterns: 8.0
nProjects: 14
shortest: [ ]+
Features:

1: LIT|a literal character | 1.625
2: ADD|one-or-more repetition | 0.875
3: CCC|custom character class | 0.875
4: END|end-of-line | 0.125
5: KLE|zero-or-more repetition | 0.125
6: NCCC|negated CCC | 0.125
7: NWRD|non-word chars | 0.125
8: WRD|[a-zA-Z0-9\_] | 0.125


0000 | 0004 | '[ ]+'
0001 | 0003 | '[\n ]+$'
0002 | 0002 | "[\\w']+"
0003 | 0001 | "[^']+"
0004 | 0001 | '[*,]+'
0005 | 0001 | '[\t ]+'
0006 | 0001 | u'[\\W_]*'
0007 | 0001 | '[ \\t]+\\n'



cluster 42 stats:
nPatterns: 9.0
nProjects: 14
shortest: "(.*?)"
Features:

1: LIT|a literal character | 7.222222222222222
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: KLE|zero-or-more repetition | 0.8888888888888888
6: ADD|one-or-more repetition | 0.1111111111111111


0000 | 0003 | '"(.*?)"'
0001 | 0003 | '`(.+?)`'
0002 | 0002 | '<map id="(.*?)"'
0003 | 0001 | '{(.*?)}'
0004 | 0001 | 'href="(.*?)"'
0005 | 0001 | 'Href="(.*?)">'
0006 | 0001 | '"title":"(.*?)",'
0007 | 0001 | '<link href="(.*?)"'
0008 | 0001 | 'gene_id \\"(.*?)\\"'



cluster 43 stats:
nPatterns: 2.0
nProjects: 13
shortest: ^
Features:

1: STR|start-of-line | 1.0
2: LIT|a literal character | 0.5


0000 | 0002 | '^'
0001 | 0001 | '^p'



cluster 44 stats:
nPatterns: 2.0
nProjects: 13
shortest: ".*"$
Features:

1: LIT|a literal character | 1.5
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 0.5


0000 | 0011 | '".*"$'
0001 | 0002 | '#.*?$'



cluster 45 stats:
nPatterns: 3.0
nProjects: 13
shortest: \{\{.*?\}\}
Features:

1: LIT|a literal character | 6.333333333333333
2: ANY|any non-newline char | 0.6666666666666666
3: KLE|zero-or-more repetition | 0.6666666666666666
4: LZY|as few reps as possible | 0.6666666666666666
5: CG|a capture group | 0.3333333333333333


0000 | 0011 | '\\{\\{.*?\\}\\}'
0001 | 0001 | '\\[\\[(.*?)\\]\\]'
0002 | 0001 | '\\{\\{PACKAGE\\}\\}'



cluster 46 stats:
nPatterns: 2.0
nProjects: 13
shortest: SECRET|PASSWORD|PROFANITIES_LIST
Features:

1: LIT|a literal character | 34.5
2: OR|logical or | 1.0


0000 | 0008 | 'SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE'
0001 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'



cluster 47 stats:
nPatterns: 2.0
nProjects: 12
shortest: \\(.)
Features:

1: ANY|any non-newline char | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: NWNW|negated WNW | 1.0


0000 | 0008 | '\\B(b.)\\B'
0001 | 0004 | u'\\\\(.)'



cluster 48 stats:
nPatterns: 2.0
nProjects: 12
shortest: ^[1-9]\d{2} ?\d{2}$
Features:

1: DEC|any of: 0123456789 | 2.5
2: LIT|a literal character | 2.5
3: SNG|exactly n repetition | 2.5
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0
6: CCC|custom character class | 0.5
7: QST|zero-or-one repetition | 0.5
8: RNG|chars within a range | 0.5


0000 | 0011 | '^[1-9]\\d{2} ?\\d{2}$'
0001 | 0001 | '^\\d{4}\\.\\d{2}\\.\\d{2}$'



cluster 49 stats:
nPatterns: 5.0
nProjects: 12
shortest:  |\(
Features:

1: LIT|a literal character | 2.4
2: OR|logical or | 1.0
3: ANY|any non-newline char | 0.2
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0004 | ' |\\('
0001 | 0003 | '"|\\\\'
0002 | 0003 | '\\.|\\\\'
0003 | 0001 | '\\s|\\('
0004 | 0001 | '\\\\.|\\(\\?P='



cluster 50 stats:
nPatterns: 9.0
nProjects: 12
shortest: \d+:\d+
Features:

1: DEC|any of: 0123456789 | 2.2222222222222223
2: ADD|one-or-more repetition | 1.6666666666666667
3: LIT|a literal character | 1.5555555555555556
4: CG|a capture group | 0.8888888888888888
5: END|end-of-line | 0.4444444444444444
6: STR|start-of-line | 0.4444444444444444
7: QST|zero-or-one repetition | 0.3333333333333333
8: KLE|zero-or-more repetition | 0.2222222222222222
9: ENDZ|absolute end of string | 0.1111111111111111
10: LWB|at least n repetition | 0.1111111111111111


0000 | 0003 | '\\d+ (\\d+):'
0001 | 0003 | u'^\\d+(\\.\\d+)*$'
0002 | 0003 | 'pip(\\d(\\.\\d)?)?$'
0003 | 0002 | '\\d+(\\.\\d*)?'
0004 | 0001 | '\\d+:\\d+'
0005 | 0001 | '^\\d+-\\d+'
0006 | 0001 | '(\\d+):(\\d\\d)\\Z'
0007 | 0001 | '^\\d+(\\.\\d+){1,}$'
0008 | 0001 | '^\\d+\\-\\d+\\-\\d+$'



cluster 51 stats:
nPatterns: 4.0
nProjects: 11
shortest: <key>.*?</key>
Features:

1: LIT|a literal character | 13.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: CG|a capture group | 0.5


0000 | 0007 | '<title>(.*?)</title>'
0001 | 0003 | '<key>.*?</key>'
0002 | 0001 | '<url>.*?</url>'
0003 | 0001 | '<studio>(.*?)</studio>'



cluster 52 stats:
nPatterns: 3.0
nProjects: 10
shortest: &(?!\#)
Features:

1: LIT|a literal character | 2.0
2: NLKB|sequence doesn't precede | 0.6666666666666666
3: NLKA|sequence doesn't follow  | 0.3333333333333333


0000 | 0005 | '(?<!\\\\),'
0001 | 0004 | '&(?!\\#)'
0002 | 0001 | '(?<!\\\\)%'



cluster 53 stats:
nPatterns: 6.0
nProjects: 10
shortest: \w*
Features:

1: LIT|a literal character | 1.1666666666666667
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.8333333333333334
4: END|end-of-line | 0.3333333333333333
5: WRD|[a-zA-Z0-9\_] | 0.16666666666666666


0000 | 0003 | u'\\w*'
0001 | 0002 | 'a.*'
0002 | 0001 | 'SD.*'
0003 | 0001 | '//.*$'
0004 | 0001 | '\\/.*'
0005 | 0001 | '\\).*$'



cluster 54 stats:
nPatterns: 2.0
nProjects: 10
shortest: url\s*\(\s*[^#\s][^)]+?\)
Features:

1: LIT|a literal character | 7.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: ADD|one-or-more repetition | 1.0
6: LZY|as few reps as possible | 1.0


0000 | 0006 | 'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0001 | 0004 | u'url\\s*\\(\\s*[^#\\s][^)]+?\\)'



cluster 55 stats:
nPatterns: 2.0
nProjects: 9
shortest: \.|-
Features:

1: LIT|a literal character | 1.5
2: ANY|any non-newline char | 1.0
3: OR|logical or | 1.0


0000 | 0008 | '\\\\.|.'
0001 | 0001 | '\\.|-'



cluster 56 stats:
nPatterns: 6.0
nProjects: 9
shortest: \\x([0-9a-fA-F]{2}|[0-9a-fA-F])
Features:

1: LIT|a literal character | 13.166666666666666
2: RNG|chars within a range | 5.666666666666667
3: CCC|custom character class | 2.1666666666666665
4: SNG|exactly n repetition | 1.8333333333333333
5: CG|a capture group | 1.1666666666666667
6: ADD|one-or-more repetition | 0.5
7: DBB|$n\le x \le m$ repetition | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333
9: STR|start-of-line | 0.3333333333333333
10: WNW|word/non-word boundary | 0.3333333333333333
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333
12: NCCC|negated CCC | 0.16666666666666666
13: OR|logical or | 0.16666666666666666
14: QST|zero-or-one repetition | 0.16666666666666666


0000 | 0003 | '&#([xX]?[0-9a-fA-F]+)[^0-9a-fA-F]'
0001 | 0002 | '\\\\x([0-9a-fA-F]{2}|[0-9a-fA-F])'
0002 | 0001 | '\\s+(([0-9A-F]{2}:){5}[0-9A-F]{2})\\s+'
0003 | 0001 | '^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$'
0004 | 0001 | '\\b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\\b'
0005 | 0001 | '^([0-9a-fA-F]{1,2}:){5}[0-9a-fA-F]{1,2}$'



cluster 57 stats:
nPatterns: 2.0
nProjects: 8
shortest: (?P<a>x)
Features:

1: LIT|a literal character | 1.0
2: PNG|named capture group | 1.0


0000 | 0008 | '(?P<a>x)'
0001 | 0008 | '(?P<unk>x)'



cluster 58 stats:
nPatterns: 3.0
nProjects: 8
shortest: \$$
Features:

1: END|end-of-line | 1.0
2: KLE|zero-or-more repetition | 0.6666666666666666
3: LIT|a literal character | 0.6666666666666666
4: DEC|any of: 0123456789 | 0.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0006 | '\\s*>$'
0001 | 0001 | '\\$$'
0002 | 0001 | '\\d*$'



cluster 59 stats:
nPatterns: 3.0
nProjects: 8
shortest: [0-9]+,[0-9]+
Features:

1: LIT|a literal character | 7.666666666666667
2: CCC|custom character class | 2.0
3: RNG|chars within a range | 2.0
4: ADD|one-or-more repetition | 1.0
5: KLE|zero-or-more repetition | 1.0
6: ANY|any non-newline char | 0.6666666666666666
7: QST|zero-or-one repetition | 0.6666666666666666


0000 | 0006 | '[0-9]+,[0-9]+'
0001 | 0001 | '.*[0-9]_srcCol[0-9].*'
0002 | 0001 | '\\$[0-9]+\\,?\\.?[0-9]*'



cluster 60 stats:
nPatterns: 3.0
nProjects: 8
shortest: <root>([^<]*)</root>
Features:

1: LIT|a literal character | 14.666666666666666
2: CG|a capture group | 1.0
3: NCCC|negated CCC | 1.0
4: KLE|zero-or-more repetition | 0.6666666666666666
5: ADD|one-or-more repetition | 0.3333333333333333


0000 | 0006 | '<root>([^<]*)</root>'
0001 | 0001 | '<code>([^<]+)</code>'
0002 | 0001 | '<TITLE>([^<]*)</TITLE>'



cluster 61 stats:
nPatterns: 4.0
nProjects: 8
shortest: (\S+): (\S+)
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: DEC|any of: 0123456789 | 0.75
5: NWSP|any non-whitespace | 0.75
6: NCCC|negated CCC | 0.5
7: QST|zero-or-one repetition | 0.5
8: OR|logical or | 0.25


0000 | 0003 | '(\\S+): (\\S+)'
0001 | 0003 | '"([^"]+)"|(\\S+)'
0002 | 0001 | '([^*]+)\\*(\\d+)'
0003 | 0001 | '(-?\\d+):(-?\\d+)'



cluster 62 stats:
nPatterns: 4.0
nProjects: 8
shortest: ^ *(.*) *( *) *$
Features:

1: LIT|a literal character | 5.25
2: KLE|zero-or-more repetition | 3.0
3: ANY|any non-newline char | 2.25
4: CG|a capture group | 2.25
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0003 | '^ *(.*) *( *) *$'
0001 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0002 | 0001 | '^\\* (.*): (.*)\n$'
0003 | 0001 | '^(.*)PS 3.6-2007(.*)$'



cluster 63 stats:
nPatterns: 3.0
nProjects: 7
shortest: =[^,)]+\)$
Features:

1: LIT|a literal character | 3.3333333333333335
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: CG|a capture group | 0.6666666666666666
5: END|end-of-line | 0.6666666666666666
6: ANY|any non-newline char | 0.3333333333333333
7: KLE|zero-or-more repetition | 0.3333333333333333
8: SNG|exactly n repetition | 0.3333333333333333


0000 | 0005 | '=[^,)]+\\)$'
0001 | 0001 | '([^.()]+\\.){5}'
0002 | 0001 | '([^\\.])+\\..*$'



cluster 64 stats:
nPatterns: 2.0
nProjects: 7
shortest: (?<!\\)((\\\\)*)\\n
Features:

1: LIT|a literal character | 4.5
2: CG|a capture group | 1.5
3: KLE|zero-or-more repetition | 1.5
4: NCG|group without capturing | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: ADD|one-or-more repetition | 0.5
7: NLKB|sequence doesn't precede | 0.5
8: OR|logical or | 0.5


0000 | 0004 | '(?<!\\\\)((\\\\\\\\)*)\\\\n'
0001 | 0003 | '(?:\\s*|((?:\\\\\\\\)+))\\\\\\n\\s*'



cluster 65 stats:
nPatterns: 4.0
nProjects: 7
shortest: .*@.*\..*
Features:

1: LIT|a literal character | 2.75
2: KLE|zero-or-more repetition | 2.5
3: ANY|any non-newline char | 2.25
4: CG|a capture group | 0.75
5: DEC|any of: 0123456789 | 0.75
6: ADD|one-or-more repetition | 0.25
7: NCCC|negated CCC | 0.25


0000 | 0004 | '.*@.*\\..*'
0001 | 0001 | '[^.]*\\.\\..*'
0002 | 0001 | '.*(\\d).*(\\d).*'
0003 | 0001 | '.*video:(\\d+).*'



cluster 66 stats:
nPatterns: 3.0
nProjects: 7
shortest: (?:\d{1,3}\.){3}\d{1,3}
Features:

1: LIT|a literal character | 3.0
2: DBB|$n\le x \le m$ repetition | 2.6666666666666665
3: DEC|any of: 0123456789 | 2.0
4: CCC|custom character class | 0.6666666666666666
5: CG|a capture group | 0.6666666666666666
6: RNG|chars within a range | 0.6666666666666666
7: SNG|exactly n repetition | 0.6666666666666666
8: NCG|group without capturing | 0.3333333333333333


0000 | 0004 | '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'
0001 | 0002 | '(?:\\d{1,3}\\.){3}\\d{1,3}'
0002 | 0001 | '(([0-9]{1,3}\\.){3}[0-9]{1,3})'



cluster 67 stats:
nPatterns: 2.0
nProjects: 7
shortest: ([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)
Features:

1: LIT|a literal character | 15.0
2: CCC|custom character class | 5.0
3: RNG|chars within a range | 5.0
4: SNG|exactly n repetition | 4.5
5: CG|a capture group | 1.5
6: DBB|$n\le x \le m$ repetition | 1.0
7: ANY|any non-newline char | 0.5
8: END|end-of-line | 0.5
9: KLE|zero-or-more repetition | 0.5
10: STR|start-of-line | 0.5


0000 | 0006 | '([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)'
0001 | 0001 | '^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$'



cluster 68 stats:
nPatterns: 5.0
nProjects: 7
shortest: (\d\d\d\d)-(\d\d)-(\d\d)
Features:

1: DEC|any of: 0123456789 | 10.0
2: LIT|a literal character | 4.4
3: CG|a capture group | 2.8
4: ADD|one-or-more repetition | 0.2
5: ENDZ|absolute end of string | 0.2
6: END|end-of-line | 0.2
7: SNG|exactly n repetition | 0.2
8: STR|start-of-line | 0.2


0000 | 0004 | '^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$'
0001 | 0004 | '(\\d+)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)'
0002 | 0001 | '(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)'
0003 | 0001 | 'H(F)(DTE)(\\d\\d)(\\d\\d)(\\d\\d)\\Z'
0004 | 0001 | '\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d'



cluster 69 stats:
nPatterns: 3.0
nProjects: 6
shortest: \.exe$
Features:

1: LIT|a literal character | 4.0
2: END|end-of-line | 1.0


0000 | 0004 | '\\.exe$'
0001 | 0001 | '\\.mar$'
0002 | 0001 | '\\.php$'



cluster 70 stats:
nPatterns: 2.0
nProjects: 6
shortest: #\w\w\w\w\w\w$
Features:

1: WRD|[a-zA-Z0-9\_] | 4.5
2: DEC|any of: 0123456789 | 2.0
3: LIT|a literal character | 1.5
4: END|end-of-line | 0.5


0000 | 0005 | '#\\w\\w\\w\\w\\w\\w$'
0001 | 0001 | '\\d\\d-\\w\\w\\w-\\d\\d'



cluster 71 stats:
nPatterns: 2.0
nProjects: 6
shortest: #define NODE_MAJOR_VERSION
Features:

1: LIT|a literal character | 24.0
2: ADD|one-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
4: CG|a capture group | 0.5
5: DEC|any of: 0123456789 | 0.5


0000 | 0005 | '#define NODE_MAJOR_VERSION'
0001 | 0001 | '#define\\swxMAJOR_VERSION\\s+(\\d+)'



cluster 72 stats:
nPatterns: 4.0
nProjects: 6
shortest: ([+-]?\d+)
Features:

1: LIT|a literal character | 2.25
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: END|end-of-line | 0.5
7: QST|zero-or-one repetition | 0.5
8: SNG|exactly n repetition | 0.5
9: NWSP|any non-whitespace | 0.25
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0002 | '([+-]\\d{4})$'
0001 | 0002 | '([+-]?[\\d\\.]+)(\\S+)'
0002 | 0001 | '([+-]?\\d+)'
0003 | 0001 | '\\s+\\(\\d{4}\\)$'



cluster 73 stats:
nPatterns: 5.0
nProjects: 6
shortest: Model:\s+(.+)
Features:

1: LIT|a literal character | 5.4
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
5: DEC|any of: 0123456789 | 0.6
6: STR|start-of-line | 0.4
7: ANY|any non-newline char | 0.2
8: END|end-of-line | 0.2
9: NWSP|any non-whitespace | 0.2


0000 | 0002 | 'image:\\s+(\\S+)'
0001 | 0001 | 'Model:\\s+(.+)'
0002 | 0001 | '^Uid:\\s+(\\d+)'
0003 | 0001 | 'UNSEEN\\s+(\\d+)'
0004 | 0001 | '^PPid:\\s+(\\d+)$'



cluster 74 stats:
nPatterns: 4.0
nProjects: 6
shortest: (\s*)(\\.+?)(\s+)$
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 2.75
3: KLE|zero-or-more repetition | 1.75
4: LZY|as few reps as possible | 1.75
5: ANY|any non-newline char | 1.25
6: ADD|one-or-more repetition | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
8: NCCC|negated CCC | 0.5
9: OR|logical or | 0.5
10: END|end-of-line | 0.25
11: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0002 | '(.*?) (.*?) as (\\w+)'
0001 | 0002 | '(\\s*)(\\\\.+?)(\\s+)$'
0002 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'
0003 | 0001 | '("[^"]*?")|(\'[^\']*?\')'



cluster 75 stats:
nPatterns: 5.0
nProjects: 6
shortest: http://[^/]*(.*)
Features:

1: LIT|a literal character | 10.2
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 1.6
4: QST|zero-or-one repetition | 1.2
5: NCCC|negated CCC | 1.0
6: ADD|one-or-more repetition | 0.8
7: ANY|any non-newline char | 0.8
8: END|end-of-line | 0.4
9: NCG|group without capturing | 0.4
10: DEC|any of: 0123456789 | 0.2
11: LZY|as few reps as possible | 0.2
12: NWSP|any non-whitespace | 0.2
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0002 | 'http://([^/]+)(/\\S*)\\s*'
0001 | 0001 | 'http://[^/]*(.*)'
0002 | 0001 | 'https?://([^/]*?)(/.*)?'
0003 | 0001 | '/changeset(?:/([^/]+)(/.*)?)?$'
0004 | 0001 | 'http://([^/:]+)(?::(\\d+))?(/.*)?$'



cluster 76 stats:
nPatterns: 2.0
nProjects: 5
shortest: /$
Features:

1: END|end-of-line | 1.0
2: LIT|a literal character | 1.0


0000 | 0004 | '/$'
0001 | 0001 | '{$'



cluster 77 stats:
nPatterns: 2.0
nProjects: 5
shortest: and
Features:

1: LIT|a literal character | 3.5


0000 | 0003 | 'and'
0001 | 0001 | 'abcd'



cluster 78 stats:
nPatterns: 1.0
nProjects: 5
shortest: (\S+)\s+(\S+)
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 2.0
3: NWSP|any non-whitespace | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0005 | '(\\S+)\\s+(\\S+)'



cluster 79 stats:
nPatterns: 2.0
nProjects: 5
shortest: (?<!%)%(?!%)
Features:

1: LIT|a literal character | 3.5
2: NLKA|sequence doesn't follow  | 1.0
3: LKB|matching sequence precedes | 0.5
4: NLKB|sequence doesn't precede | 0.5


0000 | 0004 | u'(?<!%)%(?!%)'
0001 | 0001 | '/(?<=,)(?! )/'



cluster 80 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^[\w._-]+
Features:

1: LIT|a literal character | 3.6666666666666665
2: CCC|custom character class | 1.0
3: ADD|one-or-more repetition | 0.6666666666666666
4: STR|start-of-line | 0.6666666666666666
5: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
6: END|end-of-line | 0.3333333333333333
7: KLE|zero-or-more repetition | 0.3333333333333333
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0003 | '^[\\w\\.\\-\\/]*$'
0001 | 0001 | '^[\\w._-]+'
0002 | 0001 | '[\\s.,;_-]+'



cluster 81 stats:
nPatterns: 4.0
nProjects: 5
shortest: .*\.fw
Features:

1: LIT|a literal character | 4.25
2: ANY|any non-newline char | 1.25
3: KLE|zero-or-more repetition | 1.0
4: END|end-of-line | 0.25
5: STR|start-of-line | 0.25


0000 | 0003 | '.*\\.dmg'
0001 | 0003 | '.*\\.exe'
0002 | 0001 | '.*\\.fw'
0003 | 0001 | '^.*\\.img.gz$'



cluster 82 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^.*?(v[\d\.]+).*?$
Features:

1: LIT|a literal character | 3.3333333333333335
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 1.3333333333333333
6: CCC|custom character class | 1.0
7: END|end-of-line | 0.6666666666666666
8: STR|start-of-line | 0.6666666666666666
9: ADD|one-or-more repetition | 0.3333333333333333
10: DEC|any of: 0123456789 | 0.3333333333333333


0000 | 0002 | '^.*?(v[\\d\\.]+).*?$'
0001 | 0002 | '^(.*?)([\\[\\*\\?].*)$'
0002 | 0002 | '(.*?)([\\\\\\{\\}\\[\\]])(.*)'



cluster 83 stats:
nPatterns: 2.0
nProjects: 5
shortest: ([\d.]+) ([\d.]+) ([\d.]+) (\d+)/(\d+)
Features:

1: LIT|a literal character | 7.5
2: ADD|one-or-more repetition | 4.0
3: CG|a capture group | 4.0
4: CCC|custom character class | 3.0
5: DEC|any of: 0123456789 | 3.0
6: ANY|any non-newline char | 1.0
7: KLE|zero-or-more repetition | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: NCG|group without capturing | 0.5


0000 | 0003 | '([\\d.]+) ([\\d.]+) ([\\d.]+) (\\d+)/(\\d+)'
0001 | 0002 | '(?:([\\w ]+) ([\\w.]+) .*\\[.* ([\\d.]+)\\])'



cluster 84 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^https?://bitbucket.org/
Features:

1: LIT|a literal character | 24.333333333333332
2: QST|zero-or-one repetition | 1.6666666666666667
3: ADD|one-or-more repetition | 1.3333333333333333
4: NCCC|negated CCC | 1.3333333333333333
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 0.6666666666666666
7: END|end-of-line | 0.6666666666666666
8: STR|start-of-line | 0.6666666666666666


0000 | 0004 | '^https?://bitbucket.org/'
0001 | 0001 | '^https?://bitbucket.org/([^/]+/[^/]+)/?$'
0002 | 0001 | 'https?://github.com/([^/]+/[^/]+)/tags/?$'



cluster 85 stats:
nPatterns: 5.0
nProjects: 5
shortest: [\r\n\t ]+[\r\n]+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.8
3: CCC|custom character class | 1.8
4: WRD|[a-zA-Z0-9\_] | 1.8
5: CG|a capture group | 0.6
6: STR|start-of-line | 0.6
7: DEC|any of: 0123456789 | 0.4
8: END|end-of-line | 0.4
9: QST|zero-or-one repetition | 0.4
10: NCCC|negated CCC | 0.2


0000 | 0001 | '[\\r\\n\\t ]+[\\r\\n]+'
0001 | 0001 | '^[\\w\\d\\.]+@[\\w\\d\\.]+'
0002 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'
0003 | 0001 | '^([+\\-])?\\$([^\\$\\{\\}]+)$'
0004 | 0001 | '[\\w\\.\\-]+@[\\w\\.\\-]+\\.\\w\\w\\w'



cluster 86 stats:
nPatterns: 3.0
nProjects: 4
shortest: ^\(
Features:

1: LIT|a literal character | 1.6666666666666667
2: STR|start-of-line | 0.6666666666666666
3: NWRD|non-word chars | 0.3333333333333333


0000 | 0002 | '\\W_\\('
0001 | 0001 | '^\\('
0002 | 0001 | '^_\\('



cluster 87 stats:
nPatterns: 3.0
nProjects: 4
shortest: [^+0-9]
Features:

1: LIT|a literal character | 3.3333333333333335
2: NCCC|negated CCC | 1.0
3: RNG|chars within a range | 1.0


0000 | 0002 | '[^0-9:\\.]'
0001 | 0001 | '[^+0-9]'
0002 | 0001 | '[^0-9.]'



cluster 88 stats:
nPatterns: 3.0
nProjects: 4
shortest: \w+\s
Features:

1: ADD|one-or-more repetition | 1.3333333333333333
2: LIT|a literal character | 1.3333333333333333
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
4: STR|start-of-line | 0.6666666666666666
5: NWSP|any non-whitespace | 0.3333333333333333
6: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0002 | '^\\S+\\s+'
0001 | 0001 | '\\w+\\s'
0002 | 0001 | '^dim4\\s+'



cluster 89 stats:
nPatterns: 3.0
nProjects: 4
shortest: [^\w\-]
Features:

1: LIT|a literal character | 3.3333333333333335
2: NCCC|negated CCC | 0.6666666666666666
3: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
4: CCC|custom character class | 0.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0002 | "[$^#\\\\']"
0001 | 0001 | '[^\\w\\-]'
0002 | 0001 | '[^\\w\\s@+.-]'



cluster 90 stats:
nPatterns: 2.0
nProjects: 4
shortest: ([A-Z][a-z]+)
Features:

1: LIT|a literal character | 5.5
2: RNG|chars within a range | 2.5
3: CCC|custom character class | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: WNW|word/non-word boundary | 1.0


0000 | 0003 | '([A-Z][a-z]+)'
0001 | 0001 | '\\b[A-Z](\\.[A-Za-z])+\\b'



cluster 91 stats:
nPatterns: 4.0
nProjects: 4
shortest: \s*(;)
Features:

1: LIT|a literal character | 1.75
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.25
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: ADD|one-or-more repetition | 0.25
6: END|end-of-line | 0.25
7: OR|logical or | 0.25
8: QST|zero-or-one repetition | 0.25
9: STR|start-of-line | 0.25


0000 | 0001 | '\\s*(;)'
0001 | 0001 | '\\s*(<!>=)'
0002 | 0001 | '\\s*(\\n|$)'
0003 | 0001 | '^\\s*(\\s?>)+'



cluster 92 stats:
nPatterns: 4.0
nProjects: 4
shortest: :.*\.(\d+)
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: ANY|any non-newline char | 0.5
6: KLE|zero-or-more repetition | 0.5
7: LZY|as few reps as possible | 0.25


0000 | 0001 | ':.*\\.(\\d+)'
0001 | 0001 | 'id_.*=(\\d+)'
0002 | 0001 | '\\?Page=(\\d+)'
0003 | 0001 | 'width="(\\d+?)"'



cluster 93 stats:
nPatterns: 2.0
nProjects: 4
shortest: #\{?if\}?\(.+?\).*?#\{?end\}?
Features:

1: LIT|a literal character | 14.5
2: QST|zero-or-one repetition | 4.0
3: ANY|any non-newline char | 2.0
4: LZY|as few reps as possible | 2.0
5: KLE|zero-or-more repetition | 1.5
6: ADD|one-or-more repetition | 0.5


0000 | 0004 | '#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'
0001 | 0004 | '#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'



cluster 94 stats:
nPatterns: 4.0
nProjects: 4
shortest: (0|[1-9][0-9]*):
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 1.75
3: CG|a capture group | 1.75
4: RNG|chars within a range | 1.75
5: ADD|one-or-more repetition | 1.5
6: END|end-of-line | 0.5
7: STR|start-of-line | 0.5
8: KLE|zero-or-more repetition | 0.25
9: NCCC|negated CCC | 0.25
10: OR|logical or | 0.25
11: QST|zero-or-one repetition | 0.25


0000 | 0001 | '(0|[1-9][0-9]*):'
0001 | 0001 | '^([A-Z]+)([0-9]+)$'
0002 | 0001 | '^([^ ]+) = ([0-9\\.]+)$'
0003 | 0001 | '([a-z ]+)(\\([0-9]+\\))?'



cluster 95 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^http://testserver/somewhere/else/\?c=\d+#baz$
Features:

1: LIT|a literal character | 44.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0004 | '^http://testserver/somewhere/else/\\?c=\\d+#baz$'
0001 | 0004 | '^http://testserver/somewhere/else/\\?foo=bar&c=\\d+#baz$'



cluster 96 stats:
nPatterns: 4.0
nProjects: 4
shortest: <script .*?</script>
Features:

1: LIT|a literal character | 19.5
2: KLE|zero-or-more repetition | 1.75
3: ANY|any non-newline char | 1.0
4: LZY|as few reps as possible | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
6: ADD|one-or-more repetition | 0.25
7: CG|a capture group | 0.25
8: NCCC|negated CCC | 0.25


0000 | 0001 | '<script .*?</script>'
0001 | 0001 | '<script.*?>.*?</script>'
0002 | 0001 | '<\\s*script.*?<\\s*/script\\s*>'
0003 | 0001 | '<description>([^<]+)</description>'



cluster 97 stats:
nPatterns: 2.0
nProjects: 3
shortest: %(.)
Features:

1: ANY|any non-newline char | 1.5
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0


0000 | 0002 | '%(.)'
0001 | 0001 | '%(..)'



cluster 98 stats:
nPatterns: 2.0
nProjects: 3
shortest: [:@/]
Features:

1: LIT|a literal character | 3.5
2: CCC|custom character class | 1.0


0000 | 0002 | '[:@/]'
0001 | 0001 | '[;,/-]'



cluster 99 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^quit.*
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0


0000 | 0003 | '^quit.*'
0001 | 0003 | '^rebt.*'



cluster 100 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^[#/;]
Features:

1: LIT|a literal character | 2.5
2: CCC|custom character class | 1.0
3: STR|start-of-line | 1.0
4: KLE|zero-or-more repetition | 0.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '^[#/;]'
0001 | 0001 | '^\\s*[#;]'



cluster 101 stats:
nPatterns: 2.0
nProjects: 3
shortest: (\s|,)+
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: OR|logical or | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(\\s|,)+'
0001 | 0001 | '(\\s|_)+'



cluster 102 stats:
nPatterns: 2.0
nProjects: 3
shortest: \bcsc\b
Features:

1: LIT|a literal character | 3.0
2: WNW|word/non-word boundary | 1.5
3: CCC|custom character class | 0.5


0000 | 0002 | '\\bcsc\\b'
0001 | 0001 | '\\bc[cs]'



cluster 103 stats:
nPatterns: 3.0
nProjects: 3
shortest: pam
Features:

1: LIT|a literal character | 3.6666666666666665
2: END|end-of-line | 0.3333333333333333
3: STR|start-of-line | 0.3333333333333333


0000 | 0001 | 'pam'
0001 | 0001 | 'Game'
0002 | 0001 | '^name$'



cluster 104 stats:
nPatterns: 2.0
nProjects: 3
shortest: LR Number:
Features:

1: LIT|a literal character | 10.0


0000 | 0002 | 'LR Number:'
0001 | 0001 | 'Run number'



cluster 105 stats:
nPatterns: 2.0
nProjects: 3
shortest: ERROR FAIL
Features:

1: LIT|a literal character | 12.0


0000 | 0002 | 'ERROR FAIL'
0001 | 0001 | 'ERROR in BUILD'



cluster 106 stats:
nPatterns: 3.0
nProjects: 3
shortest: (\.py)$
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: ADD|one-or-more repetition | 0.6666666666666666
5: END|end-of-line | 0.6666666666666666
6: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
7: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0001 | '(\\.py)$'
0001 | 0001 | '(\\w+).py$'
0002 | 0001 | '.*/(\\w+).kcm'



cluster 107 stats:
nPatterns: 2.0
nProjects: 3
shortest: \.(js|java)(?:\.in)?$
Features:

1: LIT|a literal character | 11.5
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: NCG|group without capturing | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '\\.(js|java)(?:\\.in)?$'
0001 | 0001 | '\\.(js|jsm|java)(?:\\.in)?$'



cluster 108 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^\s+:template:\s*(.*?)\s*$
Features:

1: LIT|a literal character | 11.0
2: KLE|zero-or-more repetition | 3.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.5
4: CG|a capture group | 2.0
5: ANY|any non-newline char | 1.5
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: ADD|one-or-more repetition | 0.5
9: LZY|as few reps as possible | 0.5


0000 | 0002 | '^\\s+:template:\\s*(.*?)\\s*$'
0001 | 0001 | '^(.*)(\\stime\\selapsed:\\s*)(.*)\\s*$'



cluster 109 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^(?:852-?)?(\d{4})[-\.]?(\d{4})$
Features:

1: LIT|a literal character | 7.0
2: QST|zero-or-one repetition | 3.5
3: CG|a capture group | 3.0
4: DEC|any of: 0123456789 | 2.5
5: SNG|exactly n repetition | 2.5
6: CCC|custom character class | 1.5
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0
9: NCG|group without capturing | 0.5


0000 | 0002 | '^(?:852-?)?(\\d{4})[-\\.]?(\\d{4})$'
0001 | 0001 | '(^\\(?(\\d{3})\\)?[- .]?(\\d{3})[- .]?(\\d{4})$)'



cluster 110 stats:
nPatterns: 3.0
nProjects: 3
shortest: (\[\[)([^$]+)(\]\])
Features:

1: LIT|a literal character | 7.333333333333333
2: CG|a capture group | 2.3333333333333335
3: NCCC|negated CCC | 1.6666666666666667
4: ADD|one-or-more repetition | 1.0
5: KLE|zero-or-more repetition | 0.6666666666666666


0000 | 0001 | '(\\[\\[)([^$]+)(\\]\\])'
0001 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'
0002 | 0001 | '\\[\\[([^]|[:]*)\\|([^][]*)\\]\\]'



cluster 111 stats:
nPatterns: 3.0
nProjects: 3
shortest: [-+]?(\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?
Features:

1: LIT|a literal character | 8.0
2: DEC|any of: 0123456789 | 4.666666666666667
3: QST|zero-or-one repetition | 4.0
4: ADD|one-or-more repetition | 3.0
5: CCC|custom character class | 3.0
6: NCG|group without capturing | 2.0
7: CG|a capture group | 1.6666666666666667
8: KLE|zero-or-more repetition | 1.6666666666666667
9: OR|logical or | 1.0


0000 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0001 | 0001 | '[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'
0002 | 0001 | '([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'



cluster 112 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^.__
Features:

1: LIT|a literal character | 2.5
2: STR|start-of-line | 1.0
3: ANY|any non-newline char | 0.5


0000 | 0001 | '^.__'
0001 | 0001 | '^cm_'



cluster 113 stats:
nPatterns: 2.0
nProjects: 2
shortest: tree=
Features:

1: LIT|a literal character | 5.5


0000 | 0001 | 'tree='
0001 | 0001 | 'state='



cluster 114 stats:
nPatterns: 2.0
nProjects: 2
shortest: [().]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[().]'
0001 | 0001 | '[()\\134]'



cluster 115 stats:
nPatterns: 2.0
nProjects: 2
shortest: foo.*bar
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5


0000 | 0002 | 'foo.*bar'
0001 | 0002 | '.*foo.*bar'



cluster 116 stats:
nPatterns: 2.0
nProjects: 2
shortest: (.*) [^ ]
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: CCC|custom character class | 0.5
6: NCCC|negated CCC | 0.5
7: RNG|chars within a range | 0.5


0000 | 0001 | '(.*) [^ ]'
0001 | 0001 | '(.*): [0-9]'



cluster 117 stats:
nPatterns: 2.0
nProjects: 2
shortest: externalip=
Features:

1: LIT|a literal character | 11.5


0000 | 0001 | 'externalip='
0001 | 0001 | 'internal log'



cluster 118 stats:
nPatterns: 2.0
nProjects: 2
shortest: <div.*?>\n
Features:

1: LIT|a literal character | 6.5
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: LZY|as few reps as possible | 1.5
5: CG|a capture group | 0.5


0000 | 0001 | '<div.*?>\\n'
0001 | 0001 | '<div.*?>(.*?)</'



cluster 119 stats:
nPatterns: 2.0
nProjects: 2
shortest: tests\.py$
Features:

1: LIT|a literal character | 8.0
2: END|end-of-line | 1.0
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: KLE|zero-or-more repetition | 0.5


0000 | 0001 | 'tests\\.py$'
0001 | 0001 | 'test_(.*)\\.js$'



cluster 120 stats:
nPatterns: 2.0
nProjects: 2
shortest: test_file_commit1
Features:

1: LIT|a literal character | 17.0


0000 | 0002 | 'test_file_commit1'
0001 | 0002 | 'test_file_commit2'



cluster 121 stats:
nPatterns: 2.0
nProjects: 2
shortest: [a-zA-Z]:(/|\\)
Features:

1: LIT|a literal character | 7.0
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.5
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 0.5
6: NWSP|any non-whitespace | 0.5
7: OR|logical or | 0.5


0000 | 0001 | '[a-zA-Z]:(/|\\\\)'
0001 | 0001 | '[a-zA-Z]+://[\\S]+'



cluster 122 stats:
nPatterns: 2.0
nProjects: 2
shortest: \A#!.*node.*$
Features:

1: LIT|a literal character | 7.5
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0
6: NLKA|sequence doesn't follow  | 0.5


0000 | 0002 | '\\A#!.*node.*$'
0001 | 0002 | '\\A#!.*python(?!3).*$'



cluster 123 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^/var/log/[^/]+$
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: END|end-of-line | 1.0
4: NCCC|negated CCC | 1.0
5: STR|start-of-line | 1.0
6: CG|a capture group | 0.5


0000 | 0001 | '^/var/log/[^/]+$'
0001 | 0001 | '^/v2/images/([^\\/]+)$'



cluster 124 stats:
nPatterns: 2.0
nProjects: 2
shortest:  *\)(?P<comma>,?)
Features:

1: LIT|a literal character | 3.5
2: PNG|named capture group | 1.0
3: ADD|one-or-more repetition | 0.5
4: ANY|any non-newline char | 0.5
5: KLE|zero-or-more repetition | 0.5
6: LZY|as few reps as possible | 0.5
7: QST|zero-or-one repetition | 0.5


0000 | 0001 | ' *\\)(?P<comma>,?)'
0001 | 0001 | '\\{\\{(?P<comm>.+?)\\}\\}'



cluster 125 stats:
nPatterns: 2.0
nProjects: 2
shortest: [^a-z]([a-z]+)[^a-z]
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 3.0
3: NCCC|negated CCC | 2.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: ADD|one-or-more repetition | 0.5
7: SNG|exactly n repetition | 0.5


0000 | 0001 | '[^a-z]([a-z]+)[^a-z]'
0001 | 0001 | u'[^0-9]([0-9]{4})[^0-9]'



cluster 126 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([\d.]+)([^\s]+)
Features:

1: LIT|a literal character | 3.5
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.5
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 1.0
6: NCCC|negated CCC | 1.0
7: END|end-of-line | 0.5
8: KLE|zero-or-more repetition | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '([\\d.]+)([^\\s]+)'
0001 | 0001 | '([^\\-\\.]*)-([\\d+.\\-]+)$'



cluster 127 stats:
nPatterns: 2.0
nProjects: 2
shortest: /gs/[a-z0-9\.\-_]{3,}$
Features:

1: LIT|a literal character | 10.5
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.5
4: END|end-of-line | 1.0
5: LWB|at least n repetition | 1.0
6: STR|start-of-line | 0.5


0000 | 0001 | '/gs/[a-z0-9\\.\\-_]{3,}$'
0001 | 0001 | '^[a-z0-9][a-z0-9\\.\\-]{2,}$'



cluster 128 stats:
nPatterns: 3.0
nProjects: 2
shortest: (?i)handy(.*)nummer
Features:

1: LIT|a literal character | 12.666666666666666
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OPT|options wrapper | 1.0


0000 | 0002 | '(?i)handy(.*)nummer'
0001 | 0002 | '(?i)pager(.*)nummer'
0002 | 0002 | '(?i)gesch\xc3\xa4fts(.*)nummer'



cluster 129 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(\s+\(release-func\s+)(\w+)(.*)$
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: STR|start-of-line | 1.0
8: ANY|any non-newline char | 0.5
9: NCCC|negated CCC | 0.5
10: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | '^(\\s+\\(release-func\\s+)(\\w+)(.*)$'
0001 | 0002 | '^(\\s+\\(return-type\\s+)([^\\s]+)(\\s*\\))$'



cluster 130 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([\|\{\}\\\.\+\[\]\(\)])
Features:

1: LIT|a literal character | 12.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0


0000 | 0001 | '([\\|\\{\\}\\\\\\.\\+\\[\\]\\(\\)])'
0001 | 0001 | '([\\$\\^\\*\\+\\.\\?\\{\\}\\[\\]\\(\\)\\|\\\\])'



cluster 131 stats:
nPatterns: 4.0
nProjects: 2
shortest: diff --git a
Features:

1: LIT|a literal character | 13.75
2: CG|a capture group | 1.0
3: ADD|one-or-more repetition | 0.75
4: ANY|any non-newline char | 0.75
5: KLE|zero-or-more repetition | 0.5
6: NWSP|any non-whitespace | 0.5
7: END|end-of-line | 0.25
8: LZY|as few reps as possible | 0.25
9: STR|start-of-line | 0.25


0000 | 0001 | 'diff --git a'
0001 | 0001 | '.+?(diff --git a)'
0002 | 0001 | 'diff --git .* b/(.*)\n'
0003 | 0001 | '^diff --git a/(\\S+) b/(\\S+)$'



cluster 132 stats:
nPatterns: 3.0
nProjects: 2
shortest: LL_VERSION_BUILD\s=\s([0-9]+)
Features:

1: LIT|a literal character | 19.666666666666668
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | 'LL_VERSION_BUILD\\s=\\s([0-9]+)'
0001 | 0001 | 'IMP_VERSION_MAJOR\\s=\\s([0-9]+)'
0002 | 0001 | 'IMP_VERSION_PATCH\\s=\\s([0-9]+)'



cluster 133 stats:
nPatterns: 3.0
nProjects: 2
shortest: ^(?P<x>\d+)?(?:x(?P<y>\d+))?$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.3333333333333335
3: PNG|named capture group | 2.3333333333333335
4: QST|zero-or-one repetition | 2.0
5: DEC|any of: 0123456789 | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: CG|a capture group | 0.6666666666666666
10: NCG|group without capturing | 0.6666666666666666
11: NCCC|negated CCC | 0.3333333333333333


0000 | 0001 | '^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'
0001 | 0001 | '^{(?P<w>[^[\\]()]+)(?:\\[(?P<i>\\d+)\\])?}$'
0002 | 0001 | '^/?(?P<a>\\w+)(/(?P<c>\\w+)(/(?P<f>\\w+))?)?$'



cluster 134 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\d+) seconds.*?"
Features:

1: LIT|a literal character | 68.5
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 3.5
4: LZY|as few reps as possible | 3.5
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds.*?"'
0001 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds. Killing!"'



cluster 135 stats:
nPatterns: 20.0
nProjects: 2
shortest: (\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
Features:

1: LIT|a literal character | 30.6
2: CG|a capture group | 0.8
3: OR|logical or | 0.65
4: ANY|any non-newline char | 0.15
5: KLE|zero-or-more repetition | 0.05


0000 | 0001 | '(\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0001 | 0001 | '\xd0\xb0\xd0\xbb\xd1\x82\xd1\x83\xd1\x84\xd1\x8c\xd0\xb5\xd0\xb2\xd0\xbe'
0002 | 0001 | '\xd0\xb2\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe'
0003 | 0001 | '(\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0004 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xbe\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0005 | 0001 | '\xd1\x82\xd1\x83\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0006 | 0001 | '\xd0\x98\xd0\xb7\xd0\xb1\xd1\x80\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \\((.*)\\)<\\/a>'
0007 | 0001 | '\xd0\xbc\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0008 | 0001 | '\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x86\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xbe\xd1\x81\xd1\x82'
0009 | 0001 | '\xd1\x84\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xba'
0010 | 0001 | '\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0011 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xb0\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0012 | 0001 | '\xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0013 | 0001 | '\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0014 | 0001 | '\xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd1\x8c\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0'
0015 | 0001 | '(\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\\.)'
0016 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0017 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe-\xd1\x80\xd0\xb0\xd0\xb7\xd1\x83\xd0\xbc\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0018 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd1\x81\xd1\x82\xd0\xb0\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0019 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



cluster 136 stats:
nPatterns: 2.0
nProjects: 1
shortest: <=
Features:

1: LIT|a literal character | 2.0


0000 | 0001 | '<='
0001 | 0001 | '>='



cluster 137 stats:
nPatterns: 2.0
nProjects: 1
shortest: _L3\.
Features:

1: LIT|a literal character | 4.0


0000 | 0001 | '_L3\\.'
0001 | 0001 | '_MD\\.'



cluster 138 stats:
nPatterns: 2.0
nProjects: 1
shortest: guibg=#*(\w+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'guibg=#*(\\w+)'
0001 | 0001 | 'guifg=#*(\\w+)'



cluster 139 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^.*RLELossless.*$
Features:

1: LIT|a literal character | 11.5
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^.*RLELossless.*$'
0001 | 0001 | '^.*JPEGLossless.*$'



cluster 140 stats:
nPatterns: 2.0
nProjects: 1
shortest: Simple_1Of_1unk_svc
Features:

1: LIT|a literal character | 19.5


0000 | 0001 | 'Simple_1Of_1unk_svc'
0001 | 0001 | 'Simple_1Of_1unk_host'



cluster 141 stats:
nPatterns: 2.0
nProjects: 1
shortest: \bLCOV_EXCL_LINE\b
Features:

1: LIT|a literal character | 14.5
2: WNW|word/non-word boundary | 2.0


0000 | 0001 | '\\bLCOV_EXCL_LINE\\b'
0001 | 0001 | '\\bLCOV_EXCL_START\\b'



cluster 142 stats:
nPatterns: 2.0
nProjects: 1
shortest: <pre><a name="foo-1">
Features:

1: LIT|a literal character | 21.0


0000 | 0001 | '<pre><a name="foo-1">'
0001 | 0001 | '<pre><a name="foo-5">'



cluster 143 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^dhcp\.pool\.start$
Features:

1: LIT|a literal character | 15.5
2: END|end-of-line | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^dhcp\\.pool\\.start$'
0001 | 0001 | '^dhcp\\.scope\\.start$'



cluster 144 stats:
nPatterns: 2.0
nProjects: 1
shortest: <([\w]*)=([, \w]*)>
Features:

1: LIT|a literal character | 4.5
2: CCC|custom character class | 2.0
3: CG|a capture group | 2.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: ADD|one-or-more repetition | 1.5
6: KLE|zero-or-more repetition | 1.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '<([\\w]*)=([, \\w]*)>'
0001 | 0001 | '<([\\w ]+(,\\s*[\\w]+)+)>'



cluster 145 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^std::__debug::deque<.*>$
Features:

1: LIT|a literal character | 25.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^std::__debug::deque<.*>$'
0001 | 0001 | '^std::__debug::unordered_map<.*>$'



cluster 146 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^"(?P<data>.*)"$
Features:

1: LIT|a literal character | 5.333333333333333
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0
5: STR|start-of-line | 1.0
6: END|end-of-line | 0.6666666666666666


0000 | 0001 | '^"(?P<data>.*)"$'
0001 | 0001 | '^#: (?P<data>.*)'
0002 | 0001 | '^#~ msgid "(?P<data>.*)"$'



cluster 147 stats:
nPatterns: 2.0
nProjects: 1
shortest: (?!__init__)[0-9a-zA-Z_]*(\.py)?$
Features:

1: LIT|a literal character | 18.5
2: RNG|chars within a range | 3.0
3: QST|zero-or-one repetition | 1.5
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NLKA|sequence doesn't follow  | 1.0


0000 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'
0001 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'



cluster 148 stats:
nPatterns: 3.0
nProjects: 1
shortest: \W\xd0\xb2\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 7.333333333333333
2: NWRD|non-word chars | 2.0


0000 | 0001 | '\\W\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0002 | 0001 | '\\W\xd1\x81\xd0\xb7\xd0\xb0\xd0\xbe\\W'



cluster 149 stats:
nPatterns: 2.0
nProjects: 1
shortest: <a href="(http://\w+.craigslist.org/)">([\w ]+)</a>
Features:

1: LIT|a literal character | 38.5
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 2.5
4: WRD|[a-zA-Z0-9\_] | 2.5
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 2.0
7: KLE|zero-or-more repetition | 1.0
8: NWRD|non-word chars | 1.0


0000 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)</a>'
0001 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'



cluster 150 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^(?P<neg>-?)---(?P<D>\d\d)(?P<tz>Z|([-+]\d\d:\d\d))?$
Features:

1: LIT|a literal character | 7.0
2: DEC|any of: 0123456789 | 6.5
3: PNG|named capture group | 3.5
4: QST|zero-or-one repetition | 2.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0
8: OR|logical or | 1.0
9: STR|start-of-line | 1.0
10: LWB|at least n repetition | 0.5


0000 | 0001 | '^(?P<neg>-?)---(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0001 | 0001 | '^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'



cluster 151 stats:
nPatterns: 4.0
nProjects: 1
shortest: (\S+[.]savespace[(].*[)])
Features:

1: LIT|a literal character | 10.0
2: KLE|zero-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.75
4: CCC|custom character class | 2.25
5: ADD|one-or-more repetition | 1.75
6: CG|a capture group | 1.25
7: ANY|any non-newline char | 1.0
8: NWSP|any non-whitespace | 1.0
9: NCCC|negated CCC | 0.25


0000 | 0001 | '(\\S+[.]savespace[(].*[)])'
0001 | 0001 | '(\\S+)\\s*[.]\\s*type\\s*[(]\\s*[)]'
0002 | 0001 | '(\\S+\\s*)[.]shape\\s*=[^=]\\s*(.+)'
0003 | 0001 | '(\\S+\\s*[(].+),\\s*savespace\\s*=.+\\s*[)]'



cluster 152 stats:
nPatterns: 2.0
nProjects: 1
shortest: <(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w>--<(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w>
Features:

1: DEC|any of: 0123456789 | 20.0
2: LIT|a literal character | 18.0
3: CG|a capture group | 8.0
4: WRD|[a-zA-Z0-9\_] | 4.0
5: CCC|custom character class | 2.0
6: RNG|chars within a range | 2.0


0000 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>'
0001 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'



cluster 153 stats:
nPatterns: 2.0
nProjects: 1
shortest: (?x)\n            [\r\n]+(\S+)\n            [\r\n]+(\S+)\n            [\r\n]+.+[\r\n]+(\S+)\n
Features:

1: LIT|a literal character | 65.0
2: ADD|one-or-more repetition | 8.0
3: CCC|custom character class | 3.5
4: CG|a capture group | 3.0
5: NWSP|any non-whitespace | 3.0
6: ANY|any non-newline char | 1.5
7: KLE|zero-or-more repetition | 1.0
8: OPT|options wrapper | 1.0


0000 | 0001 | '(?x)\n            [\\r\\n]+(\\S+)\n            [\\r\\n]+(\\S+)\n            [\\r\\n]+.+[\\r\\n]+(\\S+)\n'
0001 | 0001 | '(?x)\n            [\\r\\n]+(\\S+)\\ \n            (\\S+)\\ +!\\ Time\\ domain.\\ *[\\r\\n]+\n            (\\S+)\\ +!\\ Number\\ of\\ tiers.\\ *[\\r\\n]+"\n'



cluster 154 stats:
nPatterns: 5.0
nProjects: 1
shortest: (\d{4})-(\d{2})-(\d{2})[\s\t]*([0-9:, -]+)
Features:

1: LIT|a literal character | 18.6
2: CCC|custom character class | 5.8
3: CG|a capture group | 5.6
4: KLE|zero-or-more repetition | 3.4
5: RNG|chars within a range | 3.4
6: ADD|one-or-more repetition | 2.6
7: DEC|any of: 0123456789 | 2.2
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
9: SNG|exactly n repetition | 0.6


0000 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'
0001 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*)[\\s\t]*([0-9:, -]+)'
0002 | 0001 | '([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+)[\\s\t]*([0-9:, -]+)'
0003 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'
0004 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'



