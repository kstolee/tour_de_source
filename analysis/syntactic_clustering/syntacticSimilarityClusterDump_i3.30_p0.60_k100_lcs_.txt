Cluster stats:

nClusters: 81
TotalPatterns: 195
totalnProjects: 296
suffix: _i3.30_p0.60_k100_lcs_


cluster 0 stats:
nPatterns: 3.0
nProjects: 44
shortest: \W+
Features:

1: ADD|one-or-more repetition | 1.0
2: NWRD|non-word chars | 1.0
3: CG|a capture group | 0.3333333333333333
4: STR|start-of-line | 0.3333333333333333


0000 | 0026 | '\\W+'
0001 | 0009 | '(\\W+)'
0002 | 0006 | '^\\W+'



cluster 1 stats:
nPatterns: 2.0
nProjects: 41
shortest: :\s*(#.*)?$
Features:

1: KLE|zero-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: QST|zero-or-one repetition | 1.0
7: CCC|custom character class | 0.5
8: STR|start-of-line | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0002 | ':\\s*(#.*)?$'



cluster 2 stats:
nPatterns: 3.0
nProjects: 30
shortest: --
Features:

1: LIT|a literal character | 1.6666666666666667
2: ADD|one-or-more repetition | 0.6666666666666666


0000 | 0017 | '--'
0001 | 0011 | '\\-+'
0002 | 0001 | u'--+'



cluster 3 stats:
nPatterns: 3.0
nProjects: 28
shortest: _{2,}
Features:

1: LIT|a literal character | 1.0
2: LWB|at least n repetition | 1.0
3: STR|start-of-line | 0.3333333333333333


0000 | 0026 | '\\n{2,}'
0001 | 0001 | '_{2,}'
0002 | 0001 | '^/{2,}'



cluster 4 stats:
nPatterns: 4.0
nProjects: 26
shortest: /\d+
Features:

1: ADD|one-or-more repetition | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 0.75
4: LIT|a literal character | 0.75
5: STR|start-of-line | 0.25


0000 | 0015 | u'^\\d+$'
0001 | 0009 | ':\\d+$'
0002 | 0001 | '/\\d+'
0003 | 0001 | 'p\\d+$'



cluster 5 stats:
nPatterns: 2.0
nProjects: 21
shortest: ^(?:=)$
Features:

1: END|end-of-line | 1.0
2: LIT|a literal character | 1.0
3: NCG|group without capturing | 1.0
4: STR|start-of-line | 1.0


0000 | 0021 | u'^(?:=)$'
0001 | 0003 | '^(?:=)$'



cluster 6 stats:
nPatterns: 2.0
nProjects: 21
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 3.5
2: KLE|zero-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: LZY|as few reps as possible | 0.5


0000 | 0019 | '<[^>]*?>'
0001 | 0002 | '<![^>]*>'



cluster 7 stats:
nPatterns: 2.0
nProjects: 21
shortest: url="([^"]+)"
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: NCCC|negated CCC | 1.0
5: NWSP|any non-whitespace | 0.5
6: OR|logical or | 0.5


0000 | 0018 | 'url="([^"]+)"'
0001 | 0003 | '"([^"]+)"|(\\S+)'



cluster 8 stats:
nPatterns: 6.0
nProjects: 20
shortest: ([0-9]+)
Features:

1: LIT|a literal character | 3.3333333333333335
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: RNG|chars within a range | 1.0
5: CG|a capture group | 0.6666666666666666


0000 | 0013 | '([0-9]+)'
0001 | 0002 | '%([0-9]+)'
0002 | 0002 | '\\*\\*([0-9]+)'
0003 | 0001 | "([0-9]+)'"
0004 | 0001 | ' - [0-9]+'
0005 | 0001 | '[0-9]+\\.'



cluster 9 stats:
nPatterns: 3.0
nProjects: 19
shortest: /\*
Features:

1: LIT|a literal character | 2.3333333333333335
2: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0019 | '/\\*'
0001 | 0005 | '/\\*\\*'
0002 | 0003 | '\\\\*\\#'



cluster 10 stats:
nPatterns: 2.0
nProjects: 19
shortest: Revision: (.+)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: ANY|any non-newline char | 0.5
5: CCC|custom character class | 0.5
6: RNG|chars within a range | 0.5


0000 | 0017 | 'Revision: (.+)'
0001 | 0002 | 'Revision: ([0-9]+)'



cluster 11 stats:
nPatterns: 2.0
nProjects: 16
shortest: ^\s*\n
Features:

1: LIT|a literal character | 1.5
2: KLE|zero-or-more repetition | 1.0
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
5: ADD|one-or-more repetition | 0.5


0000 | 0015 | '^\\s*\\n'
0001 | 0002 | '^\\s*\\*+/'



cluster 12 stats:
nPatterns: 3.0
nProjects: 16
shortest: \s+}
Features:

1: ADD|one-or-more repetition | 1.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
3: LIT|a literal character | 0.6666666666666666
4: END|end-of-line | 0.3333333333333333
5: STR|start-of-line | 0.3333333333333333


0000 | 0014 | '^\\s+$'
0001 | 0001 | '\\s+}'
0002 | 0001 | '}\\s+'



cluster 13 stats:
nPatterns: 4.0
nProjects: 16
shortest: [a-zA-Z]
Features:

1: LIT|a literal character | 4.5
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.0
4: STR|start-of-line | 0.75
5: KLE|zero-or-more repetition | 0.5
6: ADD|one-or-more repetition | 0.25
7: END|end-of-line | 0.25
8: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0007 | '[a-zA-Z]'
0001 | 0007 | '^[a-zA-Z_]\\w*'
0002 | 0001 | '^[a-zA-Z]*$'
0003 | 0001 | '^[a-zA-Z]+='



cluster 14 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^http://
Features:

1: LIT|a literal character | 8.0
2: STR|start-of-line | 0.5


0000 | 0013 | '^http://'
0001 | 0002 | '  http://'



cluster 15 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^(\d{10})$
Features:

1: CG|a capture group | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 1.0
4: SNG|exactly n repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0012 | '^(\\d{10})$'
0001 | 0003 | u'^(\\d{10})$'



cluster 16 stats:
nPatterns: 4.0
nProjects: 15
shortest: "|\\
Features:

1: LIT|a literal character | 1.75
2: OR|logical or | 1.0
3: ANY|any non-newline char | 0.5


0000 | 0008 | '\\\\.|.'
0001 | 0003 | '"|\\\\'
0002 | 0003 | '\\.|\\\\'
0003 | 0001 | '\\.|-'



cluster 17 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^(?P<number>\d{7})(?P<check>\d)$
Features:

1: DEC|any of: 0123456789 | 2.0
2: PNG|named capture group | 2.0
3: END|end-of-line | 1.0
4: SNG|exactly n repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0001 | 0003 | u'^(?P<number>\\d{7})(?P<check>\\d)$'



cluster 18 stats:
nPatterns: 2.0
nProjects: 14
shortest: .*?\n
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: LZY|as few reps as possible | 1.0
5: END|end-of-line | 0.5


0000 | 0012 | '.*?\\n'
0001 | 0002 | '#.*?$'



cluster 19 stats:
nPatterns: 3.0
nProjects: 14
shortest: \\n
Features:

1: LIT|a literal character | 2.0


0000 | 0006 | '\\\\n'
0001 | 0005 | '\\\\\\n'
0002 | 0003 | "\\\\'"



cluster 20 stats:
nPatterns: 3.0
nProjects: 14
shortest: ^ *\n
Features:

1: LIT|a literal character | 1.6666666666666667
2: KLE|zero-or-more repetition | 1.0
3: STR|start-of-line | 0.6666666666666666
4: ANY|any non-newline char | 0.3333333333333333
5: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0013 | '^ *\n'
0001 | 0012 | '^-*\n'
0002 | 0001 | '.*\\n?'



cluster 21 stats:
nPatterns: 4.0
nProjects: 14
shortest: $(\w+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: WRD|[a-zA-Z0-9\_] | 1.0
4: LIT|a literal character | 0.75
5: END|end-of-line | 0.25


0000 | 0008 | '$(\\w+)'
0001 | 0004 | '\\$(\\w+)'
0002 | 0001 | '(\\w+;)'
0003 | 0001 | ':(\\w+)'



cluster 22 stats:
nPatterns: 4.0
nProjects: 14
shortest: [0-9a-fA-F]{6}
Features:

1: LIT|a literal character | 7.25
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.0
4: SNG|exactly n repetition | 0.75
5: CG|a capture group | 0.5
6: ADD|one-or-more repetition | 0.25
7: END|end-of-line | 0.25
8: QST|zero-or-one repetition | 0.25
9: STR|start-of-line | 0.25


0000 | 0010 | '0x([0-9a-fA-F]+)L?'
0001 | 0002 | '^\\#([0-9a-fA-F]{6})$'
0002 | 0001 | '[0-9a-fA-F]{6}'
0003 | 0001 | '#[0-9a-fA-F]{6}'



cluster 23 stats:
nPatterns: 2.0
nProjects: 13
shortest: (\d+\.\d+\.\d+)
Features:

1: ADD|one-or-more repetition | 3.5
2: DEC|any of: 0123456789 | 3.5
3: LIT|a literal character | 2.5
4: ANY|any non-newline char | 0.5
5: CG|a capture group | 0.5


0000 | 0012 | '(\\d+\\.\\d+\\.\\d+)'
0001 | 0001 | '.\\d+\\.\\d+\\.\\d+\\.\\d+'



cluster 24 stats:
nPatterns: 2.0
nProjects: 13
shortest: SECRET|PASSWORD|PROFANITIES_LIST
Features:

1: LIT|a literal character | 34.5
2: OR|logical or | 1.0


0000 | 0008 | 'SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE'
0001 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'



cluster 25 stats:
nPatterns: 3.0
nProjects: 11
shortest: \[.*\]
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 0.6666666666666666
5: END|end-of-line | 0.3333333333333333


0000 | 0006 | '^\\[.*\\]$'
0001 | 0003 | '\\[.*\\]'
0002 | 0003 | '^\\[.*\\]'



cluster 26 stats:
nPatterns: 2.0
nProjects: 10
shortest: \S
Features:

1: NWSP|any non-whitespace | 1.0
2: LIT|a literal character | 0.5


0000 | 0005 | ',\\S'
0001 | 0005 | u'\\S'



cluster 27 stats:
nPatterns: 2.0
nProjects: 10
shortest: ^(\s+)
Features:

1: ADD|one-or-more repetition | 1.5
2: CG|a capture group | 1.0
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
5: NWSP|any non-whitespace | 0.5


0000 | 0009 | '^(\\s+)'
0001 | 0001 | '^(\\s+)\\S+'



cluster 28 stats:
nPatterns: 2.0
nProjects: 10
shortest: url\s*\(\s*[^#\s][^)]+?\)
Features:

1: LIT|a literal character | 7.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: ADD|one-or-more repetition | 1.0
6: LZY|as few reps as possible | 1.0


0000 | 0006 | 'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0001 | 0004 | u'url\\s*\\(\\s*[^#\\s][^)]+?\\)'



cluster 29 stats:
nPatterns: 2.0
nProjects: 9
shortest: ^[-_A-Za-z0-9]+$
Features:

1: LIT|a literal character | 8.5
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: END|end-of-line | 0.5
6: LZY|as few reps as possible | 0.5
7: QST|zero-or-one repetition | 0.5
8: STR|start-of-line | 0.5


0000 | 0007 | '&#?[A-Za-z0-9]+?;'
0001 | 0002 | '^[-_A-Za-z0-9]+$'



cluster 30 stats:
nPatterns: 3.0
nProjects: 9
shortest: [0-9a-f]{32}
Features:

1: LIT|a literal character | 5.333333333333333
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.0
4: SNG|exactly n repetition | 1.0
5: END|end-of-line | 0.6666666666666666
6: STR|start-of-line | 0.3333333333333333


0000 | 0007 | 'md5=[0-9a-f]{32}$'
0001 | 0001 | '[0-9a-f]{32}'
0002 | 0001 | '^[0-9a-f]{32}$'



cluster 31 stats:
nPatterns: 2.0
nProjects: 8
shortest: [\t ]+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 0.5


0000 | 0007 | '([\\t ]+)'
0001 | 0001 | '[\t ]+'



cluster 32 stats:
nPatterns: 2.0
nProjects: 8
shortest: @(\w*)(.*)
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: LIT|a literal character | 1.0
5: NWSP|any non-whitespace | 0.5
6: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0006 | '@(\\w*)(.*)'
0001 | 0002 | '(!\\S*)(.*)'



cluster 33 stats:
nPatterns: 2.0
nProjects: 7
shortest: \.exe$
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 0.5
3: END|end-of-line | 0.5
4: KLE|zero-or-more repetition | 0.5


0000 | 0004 | '\\.exe$'
0001 | 0003 | '.*\\.exe'



cluster 34 stats:
nPatterns: 3.0
nProjects: 7
shortest: %(.)
Features:

1: ANY|any non-newline char | 1.3333333333333333
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0


0000 | 0004 | u'\\\\(.)'
0001 | 0002 | '%(.)'
0002 | 0001 | '%(..)'



cluster 35 stats:
nPatterns: 2.0
nProjects: 7
shortest: [\x00-\x20]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0


0000 | 0007 | '[\\x00-\\x20]'
0001 | 0003 | '[\\x00-\\x1f]'



cluster 36 stats:
nPatterns: 3.0
nProjects: 7
shortest: '(.*)'
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: END|end-of-line | 0.6666666666666666
6: STR|start-of-line | 0.3333333333333333


0000 | 0005 | "^'(.*)'$"
0001 | 0001 | "'(.*)'"
0002 | 0001 | "'(.*)'$"



cluster 37 stats:
nPatterns: 3.0
nProjects: 7
shortest: \s+(\d+),$
Features:

1: LIT|a literal character | 3.3333333333333335
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: END|end-of-line | 0.6666666666666666
7: STR|start-of-line | 0.6666666666666666


0000 | 0005 | '\\s+(\\d+),$'
0001 | 0001 | '^Uid:\\s+(\\d+)'
0002 | 0001 | '^PPid:\\s+(\\d+)$'



cluster 38 stats:
nPatterns: 2.0
nProjects: 6
shortest: (?<!\\),
Features:

1: LIT|a literal character | 2.0
2: NLKB|sequence doesn't precede | 1.0


0000 | 0005 | '(?<!\\\\),'
0001 | 0001 | '(?<!\\\\)%'



cluster 39 stats:
nPatterns: 3.0
nProjects: 6
shortest: \w*
Features:

1: WRD|[a-zA-Z0-9\_] | 1.0
2: ADD|one-or-more repetition | 0.6666666666666666
3: KLE|zero-or-more repetition | 0.3333333333333333
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0003 | u'\\w*'
0001 | 0001 | u'\\w+'
0002 | 0001 | '\\w+\\s'



cluster 40 stats:
nPatterns: 2.0
nProjects: 6
shortest: (\S+)\s+(\S+)
Features:

1: ADD|one-or-more repetition | 2.5
2: CG|a capture group | 2.0
3: NWSP|any non-whitespace | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
5: KLE|zero-or-more repetition | 1.0
6: LIT|a literal character | 1.0


0000 | 0005 | '(\\S+)\\s+(\\S+)'
0001 | 0001 | '##\\s*(\\S+)\\s+(\\S*)'



cluster 41 stats:
nPatterns: 2.0
nProjects: 6
shortest: (\d+)\.(\d+)(?:\.(\d+))?
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 3.0
3: DEC|any of: 0123456789 | 3.0
4: LIT|a literal character | 2.0
5: NCG|group without capturing | 1.0
6: QST|zero-or-one repetition | 1.0
7: STR|start-of-line | 0.5


0000 | 0003 | '(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0001 | 0003 | '^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'



cluster 42 stats:
nPatterns: 3.0
nProjects: 6
shortest: [^A-Za-z0-9.]+
Features:

1: LIT|a literal character | 8.333333333333334
2: RNG|chars within a range | 3.0
3: NCCC|negated CCC | 1.0
4: ADD|one-or-more repetition | 0.3333333333333333
5: CG|a capture group | 0.3333333333333333


0000 | 0004 | u'[^A-Za-z0-9.]+'
0001 | 0001 | '([^A-Za-z0-9\\._-])'
0002 | 0001 | u'[^A-Za-z0-9_\\.\\-]'



cluster 43 stats:
nPatterns: 2.0
nProjects: 5
shortest:  |\(
Features:

1: LIT|a literal character | 1.5
2: OR|logical or | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0004 | ' |\\('
0001 | 0001 | '\\s|\\('



cluster 44 stats:
nPatterns: 2.0
nProjects: 5
shortest: "(.*?)"
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0003 | '"(.*?)"'
0001 | 0001 | '{(.*?)}'



cluster 45 stats:
nPatterns: 3.0
nProjects: 5
shortest: ([a-zA-Z0-9]*)$
Features:

1: LIT|a literal character | 7.666666666666667
2: RNG|chars within a range | 3.0
3: NCCC|negated CCC | 0.6666666666666666
4: CCC|custom character class | 0.3333333333333333
5: CG|a capture group | 0.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0003 | '([a-zA-Z0-9]*)$'
0001 | 0001 | '[^a-zA-Z0-9_ -]'
0002 | 0001 | '[^a-zA-Z0-9_\\.]'



cluster 46 stats:
nPatterns: 3.0
nProjects: 5
shortest: \d+(\.\d*)?
Features:

1: DEC|any of: 0123456789 | 2.0
2: ADD|one-or-more repetition | 1.6666666666666667
3: CG|a capture group | 1.0
4: LIT|a literal character | 1.0
5: END|end-of-line | 0.6666666666666666
6: KLE|zero-or-more repetition | 0.6666666666666666
7: STR|start-of-line | 0.6666666666666666
8: LWB|at least n repetition | 0.3333333333333333
9: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0003 | u'^\\d+(\\.\\d+)*$'
0001 | 0002 | '\\d+(\\.\\d*)?'
0002 | 0001 | '^\\d+(\\.\\d+){1,}$'



cluster 47 stats:
nPatterns: 2.0
nProjects: 5
shortest: ^https?://bitbucket.org/
Features:

1: LIT|a literal character | 23.0
2: QST|zero-or-one repetition | 1.5
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: NCCC|negated CCC | 1.0
6: STR|start-of-line | 1.0
7: CG|a capture group | 0.5
8: END|end-of-line | 0.5


0000 | 0004 | '^https?://bitbucket.org/'
0001 | 0001 | '^https?://bitbucket.org/([^/]+/[^/]+)/?$'



cluster 48 stats:
nPatterns: 3.0
nProjects: 4
shortest: \/.*
Features:

1: LIT|a literal character | 1.3333333333333333
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: END|end-of-line | 0.6666666666666666


0000 | 0001 | '//.*$'
0001 | 0001 | '\\/.*'
0002 | 0001 | '\\).*$'



cluster 49 stats:
nPatterns: 2.0
nProjects: 4
shortest: \${(\w+)}
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | '\\${(\\w+)}'
0001 | 0001 | '\\{(\\w+)\\}'



cluster 50 stats:
nPatterns: 2.0
nProjects: 4
shortest: \s*([a-f0-9]+):.*
Features:

1: LIT|a literal character | 5.0
2: RNG|chars within a range | 2.0
3: ADD|one-or-more repetition | 1.5
4: CG|a capture group | 1.5
5: CCC|custom character class | 1.0
6: KLE|zero-or-more repetition | 1.0
7: ANY|any non-newline char | 0.5
8: STR|start-of-line | 0.5
9: WRD|[a-zA-Z0-9\_] | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0003 | '^(\\w+)=([a-f0-9]+)'
0001 | 0001 | '\\s*([a-f0-9]+):.*'



cluster 51 stats:
nPatterns: 2.0
nProjects: 4
shortest: (\d+)\.(\d+)\.(\d+)\.(\d+)
Features:

1: CG|a capture group | 4.5
2: ADD|one-or-more repetition | 3.5
3: DEC|any of: 0123456789 | 3.5
4: LIT|a literal character | 3.5
5: ANY|any non-newline char | 1.0
6: KLE|zero-or-more repetition | 1.0
7: END|end-of-line | 0.5
8: STR|start-of-line | 0.5


0000 | 0002 | '(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'
0001 | 0002 | '^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'



cluster 52 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^http://testserver/somewhere/else/\?c=\d+#baz$
Features:

1: LIT|a literal character | 44.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0004 | '^http://testserver/somewhere/else/\\?c=\\d+#baz$'
0001 | 0004 | '^http://testserver/somewhere/else/\\?foo=bar&c=\\d+#baz$'



cluster 53 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^_\(
Features:

1: LIT|a literal character | 2.0
2: NWRD|non-word chars | 0.5
3: STR|start-of-line | 0.5


0000 | 0002 | '\\W_\\('
0001 | 0001 | '^_\\('



cluster 54 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^.*\/
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: STR|start-of-line | 1.0


0000 | 0002 | '^.*\\/'
0001 | 0001 | '^.*\\('



cluster 55 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^([a-zA-Z0-9_]+):( |$)
Features:

1: LIT|a literal character | 9.0
2: RNG|chars within a range | 3.0
3: CG|a capture group | 1.5
4: KLE|zero-or-more repetition | 1.5
5: CCC|custom character class | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: ADD|one-or-more repetition | 0.5
9: ANY|any non-newline char | 0.5
10: OR|logical or | 0.5


0000 | 0002 | '^([a-zA-Z0-9_]+):( |$)'
0001 | 0001 | '^([a-zA-Z0-9_]*) *=.*$'



cluster 56 stats:
nPatterns: 2.0
nProjects: 3
shortest: \.(js|java)(?:\.in)?$
Features:

1: LIT|a literal character | 11.5
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: NCG|group without capturing | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '\\.(js|java)(?:\\.in)?$'
0001 | 0001 | '\\.(js|jsm|java)(?:\\.in)?$'



cluster 57 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^([0-9]{4})\.([0-9]+)\.([0-9]+)$
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 3.5
3: CCC|custom character class | 3.0
4: RNG|chars within a range | 3.0
5: ADD|one-or-more repetition | 2.5
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: ANY|any non-newline char | 0.5
9: KLE|zero-or-more repetition | 0.5
10: LZY|as few reps as possible | 0.5
11: SNG|exactly n repetition | 0.5


0000 | 0002 | '^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'
0001 | 0001 | '^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'



cluster 58 stats:
nPatterns: 2.0
nProjects: 2
shortest: >(\d+)$
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 0.5


0000 | 0001 | '>(\\d+)$'
0001 | 0001 | '{(\\d+)\\}'



cluster 59 stats:
nPatterns: 2.0
nProjects: 2
shortest: foo.*bar
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5


0000 | 0002 | 'foo.*bar'
0001 | 0002 | '.*foo.*bar'



cluster 60 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\{.+\}
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 0.5
5: STR|start-of-line | 0.5


0000 | 0001 | '^\\{.+\\}'
0001 | 0001 | '(\\{.+\\})'



cluster 61 stats:
nPatterns: 2.0
nProjects: 2
shortest: (0|[1-9][0-9]*):
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 2.0
3: KLE|zero-or-more repetition | 2.0
4: RNG|chars within a range | 2.0
5: CG|a capture group | 1.5
6: ANY|any non-newline char | 0.5
7: OR|logical or | 0.5


0000 | 0001 | '(0|[1-9][0-9]*):'
0001 | 0001 | '([1-9][0-9]*)*(.*)'



cluster 62 stats:
nPatterns: 2.0
nProjects: 2
shortest: test_file_commit1
Features:

1: LIT|a literal character | 17.0


0000 | 0002 | 'test_file_commit1'
0001 | 0002 | 'test_file_commit2'



cluster 63 stats:
nPatterns: 3.0
nProjects: 2
shortest: href="(.*?)"
Features:

1: LIT|a literal character | 9.333333333333334
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | 'href="(.*?)"'
0001 | 0001 | 'Href="(.*?)">'
0002 | 0001 | '<link href="(.*?)"'



cluster 64 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([a-zA-Z_][a-zA-Z0-9_]*)
Features:

1: LIT|a literal character | 12.5
2: RNG|chars within a range | 5.0
3: CCC|custom character class | 2.0
4: KLE|zero-or-more repetition | 1.0
5: CG|a capture group | 0.5
6: END|end-of-line | 0.5


0000 | 0001 | '([a-zA-Z_][a-zA-Z0-9_]*)'
0001 | 0001 | '\\?[a-zA-Z_][a-zA-Z0-9_]*$'



cluster 65 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\d+) seconds.*?"
Features:

1: LIT|a literal character | 68.5
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 3.5
4: LZY|as few reps as possible | 3.5
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds.*?"'
0001 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds. Killing!"'



cluster 66 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^//(.*)
Features:

1: LIT|a literal character | 2.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 0.5


0000 | 0001 | '^//(.*)'
0001 | 0001 | '\\ //(.*)'



cluster 67 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^[\w._-]+
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: CG|a capture group | 0.5
6: STR|start-of-line | 0.5


0000 | 0001 | '^[\\w._-]+'
0001 | 0001 | '([\\w._-]+)'



cluster 68 stats:
nPatterns: 2.0
nProjects: 1
shortest: [#][\dA-F]{3}
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 2.0
3: DEC|any of: 0123456789 | 1.0
4: RNG|chars within a range | 1.0
5: SNG|exactly n repetition | 1.0


0000 | 0001 | '[#][\\dA-F]{3}'
0001 | 0001 | '[#][\\dA-F]{6}'



cluster 69 stats:
nPatterns: 2.0
nProjects: 1
shortest: guibg=#*(\w+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'guibg=#*(\\w+)'
0001 | 0001 | 'guifg=#*(\\w+)'



cluster 70 stats:
nPatterns: 2.0
nProjects: 1
shortest: diff --git a
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 0.5
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: LZY|as few reps as possible | 0.5


0000 | 0001 | 'diff --git a'
0001 | 0001 | '.+?(diff --git a)'



cluster 71 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^.*RLELossless.*$
Features:

1: LIT|a literal character | 11.5
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^.*RLELossless.*$'
0001 | 0001 | '^.*JPEGLossless.*$'



cluster 72 stats:
nPatterns: 2.0
nProjects: 1
shortest: Simple_1Of_1unk_svc
Features:

1: LIT|a literal character | 19.5


0000 | 0001 | 'Simple_1Of_1unk_svc'
0001 | 0001 | 'Simple_1Of_1unk_host'



cluster 73 stats:
nPatterns: 2.0
nProjects: 1
shortest: \bLCOV_EXCL_LINE\b
Features:

1: LIT|a literal character | 14.5
2: WNW|word/non-word boundary | 2.0


0000 | 0001 | '\\bLCOV_EXCL_LINE\\b'
0001 | 0001 | '\\bLCOV_EXCL_START\\b'



cluster 74 stats:
nPatterns: 2.0
nProjects: 1
shortest: <pre><a name="foo-1">
Features:

1: LIT|a literal character | 21.0


0000 | 0001 | '<pre><a name="foo-1">'
0001 | 0001 | '<pre><a name="foo-5">'



cluster 75 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^"(?P<data>.*)"$
Features:

1: LIT|a literal character | 5.333333333333333
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0
5: STR|start-of-line | 1.0
6: END|end-of-line | 0.6666666666666666


0000 | 0001 | '^"(?P<data>.*)"$'
0001 | 0001 | '^#: (?P<data>.*)'
0002 | 0001 | '^#~ msgid "(?P<data>.*)"$'



cluster 76 stats:
nPatterns: 2.0
nProjects: 1
shortest: (.+)[-_](\d+)\.(\d+)(\w?)
Features:

1: CG|a capture group | 4.5
2: ADD|one-or-more repetition | 3.5
3: LIT|a literal character | 3.5
4: DEC|any of: 0123456789 | 2.5
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: QST|zero-or-one repetition | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)(\\w?)'
0001 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'



cluster 77 stats:
nPatterns: 2.0
nProjects: 1
shortest: \W\xd0\xb2\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 7.0
2: NWRD|non-word chars | 2.0


0000 | 0001 | '\\W\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'



cluster 78 stats:
nPatterns: 2.0
nProjects: 1
shortest: (?!__init__)[0-9a-zA-Z_]*(\.py)?$
Features:

1: LIT|a literal character | 18.5
2: RNG|chars within a range | 3.0
3: QST|zero-or-one repetition | 1.5
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NLKA|sequence doesn't follow  | 1.0


0000 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'
0001 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'



cluster 79 stats:
nPatterns: 2.0
nProjects: 1
shortest: <a href="(http://\w+.craigslist.org/)">([\w ]+)</a>
Features:

1: LIT|a literal character | 38.5
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 2.5
4: WRD|[a-zA-Z0-9\_] | 2.5
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 2.0
7: KLE|zero-or-more repetition | 1.0
8: NWRD|non-word chars | 1.0


0000 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)</a>'
0001 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'



cluster 80 stats:
nPatterns: 2.0
nProjects: 1
shortest: ([a-z]*) ([\d-]+) ([a-z]*) - ([a-z]*) ([\d-]+) ([a-z]*) [\s\t]*([0-9:, -]+)
Features:

1: LIT|a literal character | 26.0
2: CCC|custom character class | 8.0
3: CG|a capture group | 7.5
4: KLE|zero-or-more repetition | 5.0
5: RNG|chars within a range | 5.0
6: ADD|one-or-more repetition | 3.5
7: DEC|any of: 0123456789 | 2.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'
0001 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'



