Cluster stats:

nClusters: 171
TotalPatterns: 488
totalnProjects: 431
suffix: _i3.30_p0.60_k100_sift_


cluster 0 stats:
nPatterns: 8.0
nProjects: 76
shortest: \s*,\s*
Features:

1: LIT|a literal character | 3.5
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.25
3: KLE|zero-or-more repetition | 2.125
4: QST|zero-or-one repetition | 0.25
5: ADD|one-or-more repetition | 0.125
6: END|end-of-line | 0.125


0000 | 0054 | '\\s*,\\s*'
0001 | 0017 | '\\s*#?\\s*$'
0002 | 0003 | '\\s*\\#\\s*include\\s+<cxxtest/'
0003 | 0002 | '\\s*\\{\\s*'
0004 | 0002 | u'\\s*,?\\s*'
0005 | 0002 | '\\s*\n\\s*\n\\s*'
0006 | 0001 | '\\s*<p>\\s*'
0007 | 0001 | '\\s*\\(\\s*\\('



cluster 1 stats:
nPatterns: 2.0
nProjects: 41
shortest: :\s*(#.*)?$
Features:

1: KLE|zero-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: QST|zero-or-one repetition | 1.0
7: CCC|custom character class | 0.5
8: STR|start-of-line | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0002 | ':\\s*(#.*)?$'



cluster 2 stats:
nPatterns: 12.0
nProjects: 33
shortest: ^(\s+)
Features:

1: CG|a capture group | 1.5833333333333333
2: ADD|one-or-more repetition | 1.3333333333333333
3: LIT|a literal character | 1.1666666666666667
4: STR|start-of-line | 0.8333333333333334
5: KLE|zero-or-more repetition | 0.75
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
7: END|end-of-line | 0.4166666666666667
8: ANY|any non-newline char | 0.3333333333333333
9: NWSP|any non-whitespace | 0.3333333333333333
10: DEC|any of: 0123456789 | 0.25
11: WRD|[a-zA-Z0-9\_] | 0.25
12: RNG|chars within a range | 0.16666666666666666
13: CCC|custom character class | 0.08333333333333333


0000 | 0013 | '^(\\s*)(\\w*)'
0001 | 0009 | '^(\\s+)'
0002 | 0003 | '^(\\w+)=([a-f0-9]+)'
0003 | 0003 | '^(\\s*)()(\\S+)(.*$)'
0004 | 0002 | '^(\\s*)<.+> '
0005 | 0002 | '^(\\w+)\\s*=\\s*(.+)$'
0006 | 0001 | '^(\\?+)'
0007 | 0001 | '>(\\d+)$'
0008 | 0001 | '{(\\d+)\\}'
0009 | 0001 | '^(\\s+)\\S+'
0010 | 0001 | '^(\\d+)\\s(.*)$'
0011 | 0001 | '^(\\S+ +\\S+)\\s*$'



cluster 3 stats:
nPatterns: 4.0
nProjects: 32
shortest: #
Features:

1: LIT|a literal character | 1.25
2: ANY|any non-newline char | 0.75
3: KLE|zero-or-more repetition | 0.75
4: END|end-of-line | 0.5
5: LZY|as few reps as possible | 0.25


0000 | 0017 | '#'
0001 | 0011 | '".*"$'
0002 | 0002 | 'a.*'
0003 | 0002 | '#.*?$'



cluster 4 stats:
nPatterns: 3.0
nProjects: 31
shortest: ,
Features:

1: LIT|a literal character | 1.3333333333333333
2: ADD|one-or-more repetition | 0.3333333333333333
3: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0030 | ','
0001 | 0005 | ',\\S'
0002 | 0001 | u',,+'



cluster 5 stats:
nPatterns: 9.0
nProjects: 30
shortest: ^
Features:

1: LIT|a literal character | 2.2222222222222223
2: STR|start-of-line | 1.0
3: KLE|zero-or-more repetition | 0.2222222222222222
4: ANY|any non-newline char | 0.1111111111111111


0000 | 0013 | '^ *\n'
0001 | 0012 | '^-*\n'
0002 | 0002 | '^'
0003 | 0001 | '^.__'
0004 | 0001 | '^\\('
0005 | 0001 | '^cm_'
0006 | 0001 | '^KEY_'
0007 | 0001 | '^_\\('
0008 | 0001 | '^enum'



cluster 6 stats:
nPatterns: 1.0
nProjects: 29
shortest: \W+
Features:

1: ADD|one-or-more repetition | 1.0
2: NWRD|non-word chars | 1.0


0000 | 0026 | '\\W+'



cluster 7 stats:
nPatterns: 3.0
nProjects: 28
shortest: "
Features:

1: LIT|a literal character | 1.6666666666666667
2: OR|logical or | 0.3333333333333333


0000 | 0024 | '"'
0001 | 0003 | '"|\\\\'
0002 | 0001 | u'"}'



cluster 8 stats:
nPatterns: 2.0
nProjects: 27
shortest: \n{2,}
Features:

1: LIT|a literal character | 1.0
2: LWB|at least n repetition | 1.0
3: STR|start-of-line | 0.5


0000 | 0026 | '\\n{2,}'
0001 | 0001 | '^/{2,}'



cluster 9 stats:
nPatterns: 4.0
nProjects: 26
shortest: /\d+
Features:

1: ADD|one-or-more repetition | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 0.75
4: LIT|a literal character | 0.75
5: STR|start-of-line | 0.25


0000 | 0015 | u'^\\d+$'
0001 | 0009 | ':\\d+$'
0002 | 0001 | '/\\d+'
0003 | 0001 | 'p\\d+$'



cluster 10 stats:
nPatterns: 4.0
nProjects: 26
shortest: \$(\w+)
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: KLE|zero-or-more repetition | 0.25
6: NCCC|negated CCC | 0.25
7: OR|logical or | 0.25


0000 | 0019 | '\\$(\\w+|\\{[^}]*\\})'
0001 | 0004 | '\\$(\\w+)'
0002 | 0003 | '\\${(\\w+)}'
0003 | 0001 | '\\{(\\w+)\\}'



cluster 11 stats:
nPatterns: 6.0
nProjects: 25
shortest: (\d+)\.(\d+)(?:\.(\d+))?
Features:

1: ADD|one-or-more repetition | 3.8333333333333335
2: CG|a capture group | 3.5
3: LIT|a literal character | 3.5
4: DEC|any of: 0123456789 | 3.3333333333333335
5: QST|zero-or-one repetition | 0.8333333333333334
6: KLE|zero-or-more repetition | 0.6666666666666666
7: ANY|any non-newline char | 0.5
8: NCG|group without capturing | 0.3333333333333333
9: PNG|named capture group | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333
12: CCC|custom character class | 0.16666666666666666
13: END|end-of-line | 0.16666666666666666
14: LZY|as few reps as possible | 0.16666666666666666
15: NCCC|negated CCC | 0.16666666666666666
16: NWSP|any non-whitespace | 0.16666666666666666
17: RNG|chars within a range | 0.16666666666666666


0000 | 0016 | '\\S+ (\\d+)\\.(\\d+)\\.?(\\d+)?'
0001 | 0003 | '(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0002 | 0003 | '^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0003 | 0002 | '(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'
0004 | 0002 | '^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'
0005 | 0001 | '[^\\d]+ (\\d+)\\.(\\d+)\\.(\\d+)\\s*\\((?P<datetime>.+?)\\)\\s*(?P<type>[a-z]+)?'



cluster 12 stats:
nPatterns: 2.0
nProjects: 22
shortest: \/.*
Features:

1: LIT|a literal character | 1.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 0.5


0000 | 0021 | '\\(.*?\\)'
0001 | 0001 | '\\/.*'



cluster 13 stats:
nPatterns: 4.0
nProjects: 22
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: LZY|as few reps as possible | 0.5
5: ADD|one-or-more repetition | 0.25
6: ANY|any non-newline char | 0.25
7: CG|a capture group | 0.25
8: OR|logical or | 0.25


0000 | 0019 | '<[^>]*?>'
0001 | 0002 | '<![^>]*>'
0002 | 0001 | '<!--[^>]*-->|<!>'
0003 | 0001 | '<h1[^>]*>(.+?)</h1>'



cluster 14 stats:
nPatterns: 5.0
nProjects: 22
shortest: [^A-Za-z0-9.]+
Features:

1: LIT|a literal character | 14.8
2: RNG|chars within a range | 3.6
3: NCCC|negated CCC | 1.2
4: ADD|one-or-more repetition | 0.2
5: CG|a capture group | 0.2


0000 | 0010 | '[^A-Za-z0-9]Q_OBJECT[^A-Za-z0-9]'
0001 | 0006 | "[^A-Za-z0-9\\-_.~!*'();:@&=+$,/?%#[\\]]"
0002 | 0004 | u'[^A-Za-z0-9.]+'
0003 | 0001 | '([^A-Za-z0-9\\._-])'
0004 | 0001 | u'[^A-Za-z0-9_\\.\\-]'



cluster 15 stats:
nPatterns: 2.0
nProjects: 21
shortest: ^(?:=)$
Features:

1: END|end-of-line | 1.0
2: LIT|a literal character | 1.0
3: NCG|group without capturing | 1.0
4: STR|start-of-line | 1.0


0000 | 0021 | u'^(?:=)$'
0001 | 0003 | '^(?:=)$'



cluster 16 stats:
nPatterns: 6.0
nProjects: 21
shortest: ([^:]*):(.*)
Features:

1: LIT|a literal character | 2.3333333333333335
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 1.6666666666666667
4: ANY|any non-newline char | 1.1666666666666667
5: NCCC|negated CCC | 1.0
6: ADD|one-or-more repetition | 0.8333333333333334
7: STR|start-of-line | 0.8333333333333334
8: END|end-of-line | 0.6666666666666666
9: CCC|custom character class | 0.3333333333333333
10: QST|zero-or-one repetition | 0.3333333333333333
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0015 | '^([^=]*)=(.*)$'
0001 | 0008 | '^([^:]*): *(.*)'
0002 | 0003 | '^([^<]+)[<]?(.*)[>]?$'
0003 | 0001 | '([^:]*):(.*)'
0004 | 0001 | '^([^:]+):.(.*)$'
0005 | 0001 | '^([^:]+):\\s+(.+)\\s*$'



cluster 17 stats:
nPatterns: 6.0
nProjects: 21
shortest: [$]([A-Z_][A-Z0-9_]*)
Features:

1: LIT|a literal character | 17.5
2: RNG|chars within a range | 6.333333333333333
3: CCC|custom character class | 2.8333333333333335
4: KLE|zero-or-more repetition | 1.5
5: CG|a capture group | 0.8333333333333334
6: END|end-of-line | 0.16666666666666666
7: NCG|group without capturing | 0.16666666666666666
8: NLKA|sequence doesn't follow  | 0.16666666666666666
9: OR|logical or | 0.16666666666666666
10: QST|zero-or-one repetition | 0.16666666666666666
11: STR|start-of-line | 0.16666666666666666
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.16666666666666666


0000 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0001 | 0013 | '^[a-zA-Z_][a-zA-Z_0-9]*(\\.[a-zA-Z_][a-zA-Z_0-9]*)*$'
0002 | 0004 | '([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*'
0003 | 0001 | '[$]([A-Z_][A-Z0-9_]*)'
0004 | 0001 | '([a-zA-Z_][a-zA-Z0-9_]*)'
0005 | 0001 | '[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?'



cluster 18 stats:
nPatterns: 3.0
nProjects: 20
shortest: --
Features:

1: LIT|a literal character | 2.6666666666666665
2: ADD|one-or-more repetition | 0.3333333333333333
3: ANY|any non-newline char | 0.3333333333333333
4: KLE|zero-or-more repetition | 0.3333333333333333
5: LZY|as few reps as possible | 0.3333333333333333


0000 | 0017 | '--'
0001 | 0002 | '--.*?--'
0002 | 0001 | u'--+'



cluster 19 stats:
nPatterns: 2.0
nProjects: 19
shortest: /\*
Features:

1: LIT|a literal character | 2.5


0000 | 0019 | '/\\*'
0001 | 0005 | '/\\*\\*'



cluster 20 stats:
nPatterns: 2.0
nProjects: 19
shortest: url
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 0.5
3: CG|a capture group | 0.5
4: NCCC|negated CCC | 0.5


0000 | 0018 | 'url="([^"]+)"'
0001 | 0001 | 'url'



cluster 21 stats:
nPatterns: 2.0
nProjects: 19
shortest: Revision: (.+)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: ANY|any non-newline char | 0.5
5: CCC|custom character class | 0.5
6: RNG|chars within a range | 0.5


0000 | 0017 | 'Revision: (.+)'
0001 | 0002 | 'Revision: ([0-9]+)'



cluster 22 stats:
nPatterns: 5.0
nProjects: 19
shortest: ^\s*\n
Features:

1: LIT|a literal character | 1.8
2: KLE|zero-or-more repetition | 1.6
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.4
4: STR|start-of-line | 1.0
5: END|end-of-line | 0.4
6: ADD|one-or-more repetition | 0.2
7: ANY|any non-newline char | 0.2
8: CCC|custom character class | 0.2
9: CG|a capture group | 0.2


0000 | 0015 | '^\\s*\\n'
0001 | 0006 | '^\\s*\\((.*)\\)\\s*$'
0002 | 0002 | '^\\s*\\*+/'
0003 | 0002 | '^\\s*//\\s*$'
0004 | 0001 | '^\\s*[#;]'



cluster 23 stats:
nPatterns: 9.0
nProjects: 19
shortest: ([a-zA-Z0-9]*)$
Features:

1: LIT|a literal character | 9.11111111111111
2: RNG|chars within a range | 3.6666666666666665
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 0.8888888888888888
5: CCC|custom character class | 0.7777777777777778
6: NCCC|negated CCC | 0.5555555555555556
7: END|end-of-line | 0.4444444444444444
8: STR|start-of-line | 0.3333333333333333
9: ADD|one-or-more repetition | 0.2222222222222222
10: ANY|any non-newline char | 0.2222222222222222
11: DBB|$n\le x \le m$ repetition | 0.1111111111111111
12: OR|logical or | 0.1111111111111111
13: QST|zero-or-one repetition | 0.1111111111111111


0000 | 0008 | '^([a-zA-F0-9_-]*)[\\.]?.*$'
0001 | 0003 | '([a-zA-Z0-9]*)$'
0002 | 0002 | '^([a-zA-Z0-9_]+):( |$)'
0003 | 0001 | '([^a-zA-Z_0-9])'
0004 | 0001 | '[^a-zA-Z0-9_ -]'
0005 | 0001 | '[^a-zA-Z0-9_\\.]'
0006 | 0001 | '[a-zA-Z0-9_]{2,10}'
0007 | 0001 | '^([a-zA-Z0-9_]*) *=.*$'
0008 | 0001 | '([^a-zA-Z0-9]*)([a-zA-Z0-9]+)([^a-zA-Z0-9]*)'



cluster 24 stats:
nPatterns: 5.0
nProjects: 17
shortest: \\n
Features:

1: LIT|a literal character | 1.8
2: ANY|any non-newline char | 0.2
3: CG|a capture group | 0.2
4: KLE|zero-or-more repetition | 0.2


0000 | 0006 | '\\\\n'
0001 | 0005 | '\\\\\\n'
0002 | 0004 | u'\\\\(.)'
0003 | 0003 | "\\\\'"
0004 | 0003 | '\\\\*\\#'



cluster 25 stats:
nPatterns: 5.0
nProjects: 17
shortest: \-+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: WRD|[a-zA-Z0-9\_] | 0.6
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4
5: ANY|any non-newline char | 0.2


0000 | 0011 | '\\-+'
0001 | 0001 | '\\s+}'
0002 | 0001 | u'\\w+'
0003 | 0001 | '\\w+\\s'
0004 | 0001 | '\\w+\\_steps.rb'



cluster 26 stats:
nPatterns: 6.0
nProjects: 17
shortest: ([0-9]+)
Features:

1: LIT|a literal character | 3.6666666666666665
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0
6: ANY|any non-newline char | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
8: END|end-of-line | 0.16666666666666666
9: STR|start-of-line | 0.16666666666666666


0000 | 0013 | '([0-9]+)'
0001 | 0001 | "([0-9]+)'"
0002 | 0001 | ' - [0-9]+'
0003 | 0001 | '([0-9]+)\\s+min'
0004 | 0001 | '^([0-9]+)-.+/.+$'
0005 | 0001 | '([0-9]+\\s+\\-\\s+)(.+)'



cluster 27 stats:
nPatterns: 6.0
nProjects: 16
shortest: .*?\n
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: WNW|word/non-word boundary | 1.0
5: LZY|as few reps as possible | 0.8333333333333334
6: CG|a capture group | 0.16666666666666666
7: NWSP|any non-whitespace | 0.16666666666666666
8: QST|zero-or-one repetition | 0.16666666666666666
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.16666666666666666


0000 | 0012 | '.*?\\n'
0001 | 0006 | '.*?\\b(as)\\b'
0002 | 0002 | u'.*?\\S\\.\\s'
0003 | 0001 | '.*\\n?'
0004 | 0001 | '.*?\\bpni\\b'
0005 | 0001 | '.*?\\bsse2\\b'



cluster 28 stats:
nPatterns: 5.0
nProjects: 16
shortest: (\d+\.\d+\.\d+)
Features:

1: ADD|one-or-more repetition | 3.8
2: DEC|any of: 0123456789 | 3.8
3: LIT|a literal character | 3.8
4: CG|a capture group | 1.2
5: ANY|any non-newline char | 0.6
6: KLE|zero-or-more repetition | 0.6
7: END|end-of-line | 0.4
8: LZY|as few reps as possible | 0.4
9: CCC|custom character class | 0.2
10: STR|start-of-line | 0.2


0000 | 0012 | '(\\d+\\.\\d+\\.\\d+)'
0001 | 0001 | '^\\d+\\-\\d+\\-\\d+$'
0002 | 0001 | '.\\d+\\.\\d+\\.\\d+\\.\\d+'
0003 | 0001 | 'mass .*?(\\d+\\.\\d+).*?(\\d+\\.\\d+)'
0004 | 0001 | '(\\d+\\.\\d+\\.\\d+)[T\\.](\\d+(\\.\\d+)*)$'



cluster 29 stats:
nPatterns: 2.0
nProjects: 15
shortest: }\s+
Features:

1: ADD|one-or-more repetition | 1.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
3: END|end-of-line | 0.5
4: LIT|a literal character | 0.5
5: STR|start-of-line | 0.5


0000 | 0014 | '^\\s+$'
0001 | 0001 | '}\\s+'



cluster 30 stats:
nPatterns: 2.0
nProjects: 15
shortest: \r
Features:

1: LIT|a literal character | 2.5
2: OR|logical or | 0.5


0000 | 0013 | '\\r'
0001 | 0002 | '\r|\n|\r\n'



cluster 31 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^(\d{10})$
Features:

1: CG|a capture group | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 1.0
4: SNG|exactly n repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0012 | '^(\\d{10})$'
0001 | 0003 | u'^(\\d{10})$'



cluster 32 stats:
nPatterns: 3.0
nProjects: 15
shortest: [\x00-\x20]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0
4: ADD|one-or-more repetition | 0.3333333333333333
5: CG|a capture group | 0.3333333333333333


0000 | 0009 | '([\\x00-\\x7F])+'
0001 | 0007 | '[\\x00-\\x20]'
0002 | 0003 | '[\\x00-\\x1f]'



cluster 33 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^(?P<number>\d{7})(?P<check>\d)$
Features:

1: DEC|any of: 0123456789 | 2.0
2: PNG|named capture group | 2.0
3: END|end-of-line | 1.0
4: SNG|exactly n repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0001 | 0003 | u'^(?P<number>\\d{7})(?P<check>\\d)$'



cluster 34 stats:
nPatterns: 2.0
nProjects: 14
shortest: ^http://
Features:

1: LIT|a literal character | 7.5
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: NCCC|negated CCC | 0.5
6: STR|start-of-line | 0.5


0000 | 0013 | '^http://'
0001 | 0001 | 'http://[^/]*(.*)'



cluster 35 stats:
nPatterns: 8.0
nProjects: 14
shortest: ^[a-zA-Z]*$
Features:

1: LIT|a literal character | 5.625
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.125
4: ADD|one-or-more repetition | 0.625
5: KLE|zero-or-more repetition | 0.625
6: STR|start-of-line | 0.625
7: CG|a capture group | 0.375
8: END|end-of-line | 0.375
9: WRD|[a-zA-Z0-9\_] | 0.25
10: ANY|any non-newline char | 0.125
11: NWSP|any non-whitespace | 0.125
12: OR|logical or | 0.125
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125


0000 | 0007 | '^[a-zA-Z_]\\w*'
0001 | 0001 | '^[a-zA-Z]*$'
0002 | 0001 | '^[a-zA-Z]+='
0003 | 0001 | '^[a-z0-9-]+$'
0004 | 0001 | '^[a-z|A-Z]\\w*$'
0005 | 0001 | '[a-zA-Z]:(/|\\\\)'
0006 | 0001 | '[a-zA-Z]+://[\\S]+'
0007 | 0001 | '([a-zA-Z-]+)\\s*\\((.*)\\)'



cluster 36 stats:
nPatterns: 3.0
nProjects: 13
shortest: [\s.]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
4: ADD|one-or-more repetition | 0.3333333333333333


0000 | 0011 | '[\\s.]'
0001 | 0001 | '[().]'
0002 | 0001 | '[\\s.,;_-]+'



cluster 37 stats:
nPatterns: 2.0
nProjects: 13
shortest: ^[0-9]{2}$
Features:

1: LIT|a literal character | 2.5
2: SNG|exactly n repetition | 1.5
3: CCC|custom character class | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: RNG|chars within a range | 1.0
7: STR|start-of-line | 1.0
8: QST|zero-or-one repetition | 0.5


0000 | 0011 | '^[1-9]\\d{2} ?\\d{2}$'
0001 | 0002 | '^[0-9]{2}$'



cluster 38 stats:
nPatterns: 2.0
nProjects: 13
shortest: SECRET|PASSWORD|PROFANITIES_LIST
Features:

1: LIT|a literal character | 34.5
2: OR|logical or | 1.0


0000 | 0008 | 'SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE'
0001 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'



cluster 39 stats:
nPatterns: 4.0
nProjects: 12
shortest: \[.*\]
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 0.75
5: END|end-of-line | 0.5
6: CG|a capture group | 0.25


0000 | 0006 | '^\\[.*\\]$'
0001 | 0003 | '\\[.*\\]'
0002 | 0003 | '^\\[.*\\]'
0003 | 0001 | '^\\[(.*)\\]$'



cluster 40 stats:
nPatterns: 4.0
nProjects: 11
shortest: $(\w+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: END|end-of-line | 0.5
6: ANY|any non-newline char | 0.25


0000 | 0008 | '$(\\w+)'
0001 | 0001 | '(\\w+;)'
0002 | 0001 | ':(\\w+)'
0003 | 0001 | '(\\w+).py$'



cluster 41 stats:
nPatterns: 3.0
nProjects: 11
shortest: \([A-Z]\) 
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 2.0
3: RNG|chars within a range | 2.0
4: CG|a capture group | 1.3333333333333333
5: ADD|one-or-more repetition | 1.0
6: END|end-of-line | 0.6666666666666666
7: STR|start-of-line | 0.6666666666666666
8: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0009 | '^([A-Z]+)([1-9][0-9]*)$'
0001 | 0001 | '\\([A-Z]\\) '
0002 | 0001 | '^([A-Z]+)([0-9]+)$'



cluster 42 stats:
nPatterns: 4.0
nProjects: 11
shortest: (?<!\\),
Features:

1: LIT|a literal character | 3.5
2: NLKB|sequence doesn't precede | 1.0
3: CG|a capture group | 0.5
4: ADD|one-or-more repetition | 0.25
5: KLE|zero-or-more repetition | 0.25
6: NCCC|negated CCC | 0.25


0000 | 0005 | '(?<!\\\\),'
0001 | 0004 | '(?<!\\\\)((\\\\\\\\)*)\\\\n'
0002 | 0001 | '(?<!\\\\)%'
0003 | 0001 | '(?<!\\\\)[^"\\]\\[\\$]+'



cluster 43 stats:
nPatterns: 2.0
nProjects: 10
shortest: (\W+)
Features:

1: CG|a capture group | 1.5
2: ADD|one-or-more repetition | 1.0
3: KLE|zero-or-more repetition | 1.0
4: ANY|any non-newline char | 0.5
5: LIT|a literal character | 0.5
6: NWRD|non-word chars | 0.5
7: NWSP|any non-whitespace | 0.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0009 | '(\\W+)'
0001 | 0001 | '(\\S+):\\s*(.*)'



cluster 44 stats:
nPatterns: 3.0
nProjects: 10
shortest: \w*
Features:

1: KLE|zero-or-more repetition | 1.0
2: END|end-of-line | 0.6666666666666666
3: DEC|any of: 0123456789 | 0.3333333333333333
4: LIT|a literal character | 0.3333333333333333
5: WRD|[a-zA-Z0-9\_] | 0.3333333333333333
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0006 | '\\s*>$'
0001 | 0003 | u'\\w*'
0002 | 0001 | '\\d*$'



cluster 45 stats:
nPatterns: 3.0
nProjects: 10
shortest: (:*)
Features:

1: LIT|a literal character | 1.3333333333333333
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: ANY|any non-newline char | 0.3333333333333333
5: NCCC|negated CCC | 0.3333333333333333


0000 | 0008 | '(:*)'
0001 | 0001 | u'(x*)'
0002 | 0001 | '(.*) [^ ]'



cluster 46 stats:
nPatterns: 2.0
nProjects: 10
shortest: ^0x([0-9a-z]+)$
Features:

1: LIT|a literal character | 7.5
2: RNG|chars within a range | 2.5
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 0.5
7: QST|zero-or-one repetition | 0.5
8: STR|start-of-line | 0.5


0000 | 0010 | '0x([0-9a-fA-F]+)L?'
0001 | 0001 | '^0x([0-9a-z]+)$'



cluster 47 stats:
nPatterns: 4.0
nProjects: 10
shortest: [\n\r]
Features:

1: LIT|a literal character | 1.75
2: CCC|custom character class | 1.0
3: ADD|one-or-more repetition | 0.25
4: DEC|any of: 0123456789 | 0.25
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0004 | '[\n\r]'
0001 | 0003 | u'[\\-\\s]'
0002 | 0002 | '[\\d\\.]+'
0003 | 0001 | '[\\-: ]'



cluster 48 stats:
nPatterns: 2.0
nProjects: 10
shortest: url\s*\(\s*[^#\s][^)]+?\)
Features:

1: LIT|a literal character | 7.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: ADD|one-or-more repetition | 1.0
6: LZY|as few reps as possible | 1.0


0000 | 0006 | 'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0001 | 0004 | u'url\\s*\\(\\s*[^#\\s][^)]+?\\)'



cluster 49 stats:
nPatterns: 5.0
nProjects: 10
shortest: \?[a-zA-Z_][a-zA-Z0-9_]*$
Features:

1: LIT|a literal character | 17.6
2: RNG|chars within a range | 5.8
3: CCC|custom character class | 2.2
4: KLE|zero-or-more repetition | 1.8
5: CG|a capture group | 1.2
6: QST|zero-or-one repetition | 0.8
7: NCCC|negated CCC | 0.6
8: END|end-of-line | 0.4
9: ADD|one-or-more repetition | 0.2
10: STR|start-of-line | 0.2


0000 | 0004 | '\\$\\{?[a-zA-Z_][a-zA-Z0-9_]*(\\([^)]*\\))?(\\.[a-zA-Z0-9_]+(\\([^)]*\\))?)*\\}?'
0001 | 0002 | '<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'
0002 | 0002 | '@%\\(([a-zA-Z][a-zA-Z0-9_-]*)\\)s'
0003 | 0001 | '\\?[a-zA-Z_][a-zA-Z0-9_]*$'
0004 | 0001 | '^&[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'



cluster 50 stats:
nPatterns: 2.0
nProjects: 9
shortest: \|
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 0.5
3: CG|a capture group | 0.5
4: NWSP|any non-whitespace | 0.5


0000 | 0007 | '\\|'
0001 | 0002 | '\\|(\\S+)\\|'



cluster 51 stats:
nPatterns: 2.0
nProjects: 9
shortest: (?i)b+
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 1.0
3: OPT|options wrapper | 1.0
4: ANY|any non-newline char | 0.5
5: END|end-of-line | 0.5


0000 | 0008 | '(?i)b+'
0001 | 0001 | '(?i).+\\.nfo$'



cluster 52 stats:
nPatterns: 2.0
nProjects: 9
shortest: \\.|.
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.5
3: OR|logical or | 1.0


0000 | 0008 | '\\\\.|.'
0001 | 0001 | '\\\\.|\\(\\?P='



cluster 53 stats:
nPatterns: 3.0
nProjects: 9
shortest: ^\W+
Features:

1: ADD|one-or-more repetition | 1.3333333333333333
2: STR|start-of-line | 1.0
3: NWSP|any non-whitespace | 0.6666666666666666
4: NWRD|non-word chars | 0.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0006 | '^\\W+'
0001 | 0002 | '^\\S+\\s+'
0002 | 0001 | '^\\S+'



cluster 54 stats:
nPatterns: 2.0
nProjects: 9
shortest: \$\((\w+?)\)
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 1.5
3: LZY|as few reps as possible | 1.0
4: ADD|one-or-more repetition | 0.5
5: ANY|any non-newline char | 0.5
6: KLE|zero-or-more repetition | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0008 | '(\\$\\((.*?)\\))'
0001 | 0001 | '\\$\\((\\w+?)\\)'



cluster 55 stats:
nPatterns: 2.0
nProjects: 9
shortest: ^[-_A-Za-z0-9]+$
Features:

1: LIT|a literal character | 8.5
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: END|end-of-line | 0.5
6: LZY|as few reps as possible | 0.5
7: QST|zero-or-one repetition | 0.5
8: STR|start-of-line | 0.5


0000 | 0007 | '&#?[A-Za-z0-9]+?;'
0001 | 0002 | '^[-_A-Za-z0-9]+$'



cluster 56 stats:
nPatterns: 3.0
nProjects: 9
shortest: (\S+);.*
Features:

1: CG|a capture group | 1.6666666666666667
2: ADD|one-or-more repetition | 1.3333333333333333
3: LIT|a literal character | 1.3333333333333333
4: ANY|any non-newline char | 1.0
5: KLE|zero-or-more repetition | 0.6666666666666666
6: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
7: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0005 | '(\\w+)(.*)'
0001 | 0003 | '(\\S+);.*'
0002 | 0001 | '(\\w+://)(.+)'



cluster 57 stats:
nPatterns: 3.0
nProjects: 9
shortest: \d+:\d+
Features:

1: ADD|one-or-more repetition | 2.0
2: DEC|any of: 0123456789 | 1.6666666666666667
3: LIT|a literal character | 1.3333333333333333
4: CG|a capture group | 0.6666666666666666
5: END|end-of-line | 0.3333333333333333
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0005 | '\\s+(\\d+),$'
0001 | 0003 | '\\d+ (\\d+):'
0002 | 0001 | '\\d+:\\d+'



cluster 58 stats:
nPatterns: 3.0
nProjects: 9
shortest: [0-9a-f]{32}
Features:

1: LIT|a literal character | 5.333333333333333
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.0
4: SNG|exactly n repetition | 1.0
5: END|end-of-line | 0.6666666666666666
6: STR|start-of-line | 0.3333333333333333


0000 | 0007 | 'md5=[0-9a-f]{32}$'
0001 | 0001 | '[0-9a-f]{32}'
0002 | 0001 | '^[0-9a-f]{32}$'



cluster 59 stats:
nPatterns: 3.0
nProjects: 9
shortest: (.*?)(#)(.*)
Features:

1: KLE|zero-or-more repetition | 2.6666666666666665
2: CG|a capture group | 2.3333333333333335
3: ANY|any non-newline char | 2.0
4: LIT|a literal character | 1.6666666666666667
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: LZY|as few reps as possible | 0.6666666666666666
7: ADD|one-or-more repetition | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333
9: STR|start-of-line | 0.3333333333333333


0000 | 0006 | '(.*?)(#)(.*)'
0001 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0002 | 0001 | '(.*?)\\s+<(.*)>'



cluster 60 stats:
nPatterns: 3.0
nProjects: 9
shortest: [0-9]+,[0-9]+
Features:

1: LIT|a literal character | 6.666666666666667
2: RNG|chars within a range | 2.6666666666666665
3: CCC|custom character class | 2.0
4: ADD|one-or-more repetition | 1.6666666666666667
5: CG|a capture group | 1.0
6: NCCC|negated CCC | 0.6666666666666666
7: OR|logical or | 0.6666666666666666
8: ANY|any non-newline char | 0.3333333333333333
9: END|end-of-line | 0.3333333333333333
10: KLE|zero-or-more repetition | 0.3333333333333333
11: SNG|exactly n repetition | 0.3333333333333333
12: STR|start-of-line | 0.3333333333333333


0000 | 0006 | '[0-9]+,[0-9]+'
0001 | 0002 | '^v([0-9]+|[0-9]+\\.[0-9]+)(/.*|$)'
0002 | 0001 | u'[^0-9]([0-9]{4})[^0-9]'



cluster 61 stats:
nPatterns: 8.0
nProjects: 9
shortest: \{\}
Features:

1: LIT|a literal character | 1.625
2: CCC|custom character class | 0.875
3: CG|a capture group | 0.75
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25
5: ADD|one-or-more repetition | 0.125
6: DEC|any of: 0123456789 | 0.125
7: WRD|[a-zA-Z0-9\_] | 0.125


0000 | 0003 | '([\\s\\\\])'
0001 | 0001 | '\\{\\}'
0002 | 0001 | '([\\x7F])'
0003 | 0001 | "[\\s'\\\\]"
0004 | 0001 | '([$`\\\\])'
0005 | 0001 | '([\\t\\n])'
0006 | 0001 | '([\\{\\}])'
0007 | 0001 | '([\\w\\d]+)'



cluster 62 stats:
nPatterns: 2.0
nProjects: 8
shortest: (?P<a>x)
Features:

1: LIT|a literal character | 1.0
2: PNG|named capture group | 1.0


0000 | 0008 | '(?P<a>x)'
0001 | 0008 | '(?P<unk>x)'



cluster 63 stats:
nPatterns: 2.0
nProjects: 8
shortest: @(\w*)(.*)
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: LIT|a literal character | 1.0
5: NWSP|any non-whitespace | 0.5
6: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0006 | '@(\\w*)(.*)'
0001 | 0002 | '(!\\S*)(.*)'



cluster 64 stats:
nPatterns: 3.0
nProjects: 8
shortest: ([A-Z]{2}[0-9]{2,3}-[0-9]{2})
Features:

1: LIT|a literal character | 12.333333333333334
2: CCC|custom character class | 4.333333333333333
3: RNG|chars within a range | 4.333333333333333
4: SNG|exactly n repetition | 3.6666666666666665
5: CG|a capture group | 1.3333333333333333
6: DBB|$n\le x \le m$ repetition | 1.0
7: ANY|any non-newline char | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333
9: KLE|zero-or-more repetition | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333


0000 | 0006 | '([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)'
0001 | 0001 | '([A-Z]{2}[0-9]{2,3}-[0-9]{2})'
0002 | 0001 | '^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$'



cluster 65 stats:
nPatterns: 1.0
nProjects: 7
shortest: [a-zA-Z]
Features:

1: LIT|a literal character | 4.0
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.0


0000 | 0007 | '[a-zA-Z]'



cluster 66 stats:
nPatterns: 1.0
nProjects: 7
shortest: ([\t ]+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0


0000 | 0007 | '([\\t ]+)'



cluster 67 stats:
nPatterns: 2.0
nProjects: 7
shortest: [^.]*
Features:

1: LIT|a literal character | 2.0
2: KLE|zero-or-more repetition | 1.5
3: NCCC|negated CCC | 1.0
4: ANY|any non-newline char | 0.5


0000 | 0006 | '[^.]*'
0001 | 0001 | '[^.]*\\.\\..*'



cluster 68 stats:
nPatterns: 3.0
nProjects: 7
shortest: ^-(.*)$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: STR|start-of-line | 1.0
5: END|end-of-line | 0.6666666666666666
6: KLE|zero-or-more repetition | 0.6666666666666666
7: ADD|one-or-more repetition | 0.3333333333333333


0000 | 0005 | "^'(.*)'$"
0001 | 0001 | '^-(.*)$'
0002 | 0001 | "^'(.+)'@"



cluster 69 stats:
nPatterns: 2.0
nProjects: 7
shortest: <root>([^<]*)</root>
Features:

1: LIT|a literal character | 14.0
2: CG|a capture group | 1.0
3: NCCC|negated CCC | 1.0
4: ADD|one-or-more repetition | 0.5
5: KLE|zero-or-more repetition | 0.5


0000 | 0006 | '<root>([^<]*)</root>'
0001 | 0001 | '<code>([^<]+)</code>'



cluster 70 stats:
nPatterns: 3.0
nProjects: 7
shortest: (\S+)\s+(\S+)
Features:

1: ADD|one-or-more repetition | 4.333333333333333
2: CG|a capture group | 2.6666666666666665
3: NWSP|any non-whitespace | 2.3333333333333335
4: LIT|a literal character | 1.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.3333333333333333
6: DEC|any of: 0123456789 | 0.6666666666666666
7: END|end-of-line | 0.6666666666666666
8: ANY|any non-newline char | 0.3333333333333333
9: STR|start-of-line | 0.3333333333333333


0000 | 0005 | '(\\S+)\\s+(\\S+)'
0001 | 0001 | '(\\S+)\\s+(\\d)\\s+\\d+\\s+\\S+$'
0002 | 0001 | '^(\\S+)\\t(\\S+)\\t(\\S+)\\t(.+)\\n$'



cluster 71 stats:
nPatterns: 1.0
nProjects: 6
shortest: [\r\n]+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0


0000 | 0006 | '[\\r\\n]+'



cluster 72 stats:
nPatterns: 2.0
nProjects: 6
shortest: \S
Features:

1: NWSP|any non-whitespace | 1.0
2: DBB|$n\le x \le m$ repetition | 0.5


0000 | 0005 | u'\\S'
0001 | 0001 | '\\S{1,10}'



cluster 73 stats:
nPatterns: 3.0
nProjects: 6
shortest: [\w']+
Features:

1: LIT|a literal character | 1.6666666666666667
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: END|end-of-line | 0.3333333333333333
5: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0003 | '[\n ]+$'
0001 | 0002 | "[\\w']+"
0002 | 0001 | '[\t ]+'



cluster 74 stats:
nPatterns: 3.0
nProjects: 6
shortest: "(.*?)"
Features:

1: LIT|a literal character | 2.3333333333333335
2: ANY|any non-newline char | 1.3333333333333333
3: CG|a capture group | 1.3333333333333333
4: KLE|zero-or-more repetition | 1.3333333333333333
5: LZY|as few reps as possible | 1.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0003 | '"(.*?)"'
0001 | 0001 | '{(.*?)}'
0002 | 0001 | '^(.*?) - (.*?)$'



cluster 75 stats:
nPatterns: 3.0
nProjects: 6
shortest: [A-Za-z]
Features:

1: LIT|a literal character | 4.666666666666667
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.3333333333333333
4: ADD|one-or-more repetition | 0.6666666666666666
5: CG|a capture group | 0.6666666666666666
6: END|end-of-line | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0003 | '([A-Z][a-z]+)'
0001 | 0002 | '[A-Za-z]'
0002 | 0001 | "(^[A-Za-z\\' ]+$)"



cluster 76 stats:
nPatterns: 2.0
nProjects: 6
shortest: #define NODE_MAJOR_VERSION
Features:

1: LIT|a literal character | 24.0
2: ADD|one-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
4: CG|a capture group | 0.5
5: DEC|any of: 0123456789 | 0.5


0000 | 0005 | '#define NODE_MAJOR_VERSION'
0001 | 0001 | '#define\\swxMAJOR_VERSION\\s+(\\d+)'



cluster 77 stats:
nPatterns: 2.0
nProjects: 6
shortest: (?:\d{1,3}\.){3}\d{1,3}
Features:

1: DBB|$n\le x \le m$ repetition | 3.0
2: DEC|any of: 0123456789 | 3.0
3: LIT|a literal character | 2.0
4: NCG|group without capturing | 0.5
5: SNG|exactly n repetition | 0.5


0000 | 0004 | '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'
0001 | 0002 | '(?:\\d{1,3}\\.){3}\\d{1,3}'



cluster 78 stats:
nPatterns: 3.0
nProjects: 6
shortest: ^\d+(\.\d+)*$
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: DEC|any of: 0123456789 | 2.0
4: CG|a capture group | 1.6666666666666667
5: END|end-of-line | 1.0
6: QST|zero-or-one repetition | 0.6666666666666666
7: STR|start-of-line | 0.6666666666666666
8: KLE|zero-or-more repetition | 0.3333333333333333
9: LWB|at least n repetition | 0.3333333333333333
10: OR|logical or | 0.3333333333333333


0000 | 0003 | u'^\\d+(\\.\\d+)*$'
0001 | 0003 | '(\\d+(\\.\\d+)?) (K|M|G|T)b?$'
0002 | 0001 | '^\\d+(\\.\\d+){1,}$'



cluster 79 stats:
nPatterns: 2.0
nProjects: 5
shortest: ["]
Features:

1: CCC|custom character class | 1.0
2: LIT|a literal character | 1.0
3: ADD|one-or-more repetition | 0.5


0000 | 0004 | '[ ]+'
0001 | 0001 | '["]'



cluster 80 stats:
nPatterns: 2.0
nProjects: 5
shortest: //+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 0.5
3: ANY|any non-newline char | 0.5
4: END|end-of-line | 0.5
5: KLE|zero-or-more repetition | 0.5


0000 | 0003 | '//+'
0001 | 0001 | '//.*$'



cluster 81 stats:
nPatterns: 2.0
nProjects: 5
shortest: [-.]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0


0000 | 0004 | '[-.]'
0001 | 0001 | '[-:]'



cluster 82 stats:
nPatterns: 2.0
nProjects: 5
shortest:   
Features:

1: LIT|a literal character | 5.5


0000 | 0003 | '  '
0001 | 0002 | '  http://'



cluster 83 stats:
nPatterns: 2.0
nProjects: 5
shortest: `(.+?)`
Features:

1: ADD|one-or-more repetition | 1.5
2: ANY|any non-newline char | 1.5
3: CG|a capture group | 1.5
4: LIT|a literal character | 1.5
5: LZY|as few reps as possible | 1.0
6: END|end-of-line | 0.5
7: STR|start-of-line | 0.5


0000 | 0003 | '`(.+?)`'
0001 | 0002 | '^(.+?)_(.+)$'



cluster 84 stats:
nPatterns: 3.0
nProjects: 5
shortest: "([^ ]+?)"
Features:

1: LIT|a literal character | 4.666666666666667
2: ADD|one-or-more repetition | 1.3333333333333333
3: CG|a capture group | 1.3333333333333333
4: NCCC|negated CCC | 1.0
5: LZY|as few reps as possible | 0.6666666666666666
6: NWSP|any non-whitespace | 0.3333333333333333
7: OR|logical or | 0.3333333333333333


0000 | 0003 | '"([^"]+)"|(\\S+)'
0001 | 0001 | '"([^ ]+?)"'
0002 | 0001 | "'([^']+?)' \\(qv\\)"



cluster 85 stats:
nPatterns: 2.0
nProjects: 5
shortest: ^https?://bitbucket.org/
Features:

1: LIT|a literal character | 23.0
2: QST|zero-or-one repetition | 1.5
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: NCCC|negated CCC | 1.0
6: STR|start-of-line | 1.0
7: CG|a capture group | 0.5
8: END|end-of-line | 0.5


0000 | 0004 | '^https?://bitbucket.org/'
0001 | 0001 | '^https?://bitbucket.org/([^/]+/[^/]+)/?$'



cluster 86 stats:
nPatterns: 2.0
nProjects: 5
shortest: (\d+):(\d\d)\Z
Features:

1: DEC|any of: 0123456789 | 7.0
2: CG|a capture group | 4.0
3: LIT|a literal character | 3.0
4: ADD|one-or-more repetition | 1.0
5: ENDZ|absolute end of string | 0.5


0000 | 0004 | '(\\d+)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)'
0001 | 0001 | '(\\d+):(\\d\\d)\\Z'



cluster 87 stats:
nPatterns: 3.0
nProjects: 5
shortest: #[0-9a-fA-F]{6}
Features:

1: LIT|a literal character | 9.333333333333334
2: RNG|chars within a range | 4.0
3: CCC|custom character class | 1.3333333333333333
4: SNG|exactly n repetition | 1.0
5: CG|a capture group | 0.6666666666666666
6: END|end-of-line | 0.3333333333333333
7: OR|logical or | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0002 | '^\\#([0-9a-fA-F]{6})$'
0001 | 0002 | '\\\\x([0-9a-fA-F]{2}|[0-9a-fA-F])'
0002 | 0001 | '#[0-9a-fA-F]{6}'



cluster 88 stats:
nPatterns: 2.0
nProjects: 5
shortest: ^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d$
Features:

1: DEC|any of: 0123456789 | 12.5
2: LIT|a literal character | 5.0
3: END|end-of-line | 0.5
4: SNG|exactly n repetition | 0.5
5: STR|start-of-line | 0.5


0000 | 0004 | '^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$'
0001 | 0001 | '\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d'



cluster 89 stats:
nPatterns: 2.0
nProjects: 4
shortest: \.|-
Features:

1: LIT|a literal character | 2.0
2: OR|logical or | 1.0


0000 | 0003 | '\\.|\\\\'
0001 | 0001 | '\\.|-'



cluster 90 stats:
nPatterns: 2.0
nProjects: 4
shortest: %([0-9]+)
Features:

1: LIT|a literal character | 3.5
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0002 | '%([0-9]+)'
0001 | 0002 | '\\*\\*([0-9]+)'



cluster 91 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^-?\d
Features:

1: LIT|a literal character | 2.0
2: DEC|any of: 0123456789 | 1.5
3: QST|zero-or-one repetition | 1.5
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: STR|start-of-line | 0.5


0000 | 0003 | '^-?\\d'
0001 | 0001 | '(-?\\d+):(-?\\d+)'



cluster 92 stats:
nPatterns: 3.0
nProjects: 4
shortest: .*\.fw
Features:

1: LIT|a literal character | 3.6666666666666665
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0003 | '.*\\.dmg'
0001 | 0003 | '.*\\.exe'
0002 | 0001 | '.*\\.fw'



cluster 93 stats:
nPatterns: 3.0
nProjects: 4
shortest: [^+0-9]
Features:

1: LIT|a literal character | 3.3333333333333335
2: NCCC|negated CCC | 1.0
3: RNG|chars within a range | 1.0


0000 | 0002 | '[^0-9:\\.]'
0001 | 0001 | '[^+0-9]'
0002 | 0001 | '[^0-9.]'



cluster 94 stats:
nPatterns: 3.0
nProjects: 4
shortest: ^.*\/
Features:

1: LIT|a literal character | 2.6666666666666665
2: ANY|any non-newline char | 1.3333333333333333
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0
5: END|end-of-line | 0.3333333333333333


0000 | 0002 | '^.*\\/'
0001 | 0001 | '^.*\\('
0002 | 0001 | '^.*\\.img.gz$'



cluster 95 stats:
nPatterns: 2.0
nProjects: 4
shortest: (\S+): (\S+)
Features:

1: ADD|one-or-more repetition | 2.5
2: NWSP|any non-whitespace | 2.5
3: CG|a capture group | 2.0
4: LIT|a literal character | 2.0
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0003 | '(\\S+): (\\S+)'
0001 | 0001 | '^\\S+ (\\S+)@(\\S+)$'



cluster 96 stats:
nPatterns: 3.0
nProjects: 4
shortest: \W_\(
Features:

1: LIT|a literal character | 1.6666666666666667
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
3: ADD|one-or-more repetition | 0.3333333333333333
4: DEC|any of: 0123456789 | 0.3333333333333333
5: END|end-of-line | 0.3333333333333333
6: NWRD|non-word chars | 0.3333333333333333
7: OR|logical or | 0.3333333333333333
8: SNG|exactly n repetition | 0.3333333333333333


0000 | 0002 | '\\W_\\('
0001 | 0001 | '\\s|\\('
0002 | 0001 | '\\s+\\(\\d{4}\\)$'



cluster 97 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^(.*)\[(.*)\](.*)$
Features:

1: CG|a capture group | 3.0
2: ANY|any non-newline char | 2.5
3: KLE|zero-or-more repetition | 2.5
4: LIT|a literal character | 2.5
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: ADD|one-or-more repetition | 0.5
8: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0001 | 0001 | '^(.*)#{(\\w+)}(.*)$'



cluster 98 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^[a-zA-Z0-9-]{1,100}$
Features:

1: LIT|a literal character | 8.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.0
4: DBB|$n\le x \le m$ repetition | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0004 | '^[a-zA-Z0-9-]{1,100}$'
0001 | 0003 | '^[0-9A-Za-z._-]{0,100}$'



cluster 99 stats:
nPatterns: 2.0
nProjects: 4
shortest: ([\d.]+)([^\s]+)
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 3.5
3: CG|a capture group | 3.5
4: DEC|any of: 0123456789 | 3.0
5: CCC|custom character class | 2.0
6: NCCC|negated CCC | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0003 | '([\\d.]+) ([\\d.]+) ([\\d.]+) (\\d+)/(\\d+)'
0001 | 0001 | '([\\d.]+)([^\\s]+)'



cluster 100 stats:
nPatterns: 4.0
nProjects: 4
shortest: [ \r\n\t]+
Features:

1: LIT|a literal character | 4.25
2: ADD|one-or-more repetition | 1.25
3: CCC|custom character class | 1.25
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0001 | '[ \r\n\t]+'
0001 | 0001 | '[\n\r\t ]+'
0002 | 0001 | '[\\(\\)\\s,]+'
0003 | 0001 | '[\\r\\n\\t ]+[\\r\\n]+'



cluster 101 stats:
nPatterns: 2.0
nProjects: 4
shortest: #\{?if\}?\(.+?\).*?#\{?end\}?
Features:

1: LIT|a literal character | 14.5
2: QST|zero-or-one repetition | 4.0
3: ANY|any non-newline char | 2.0
4: LZY|as few reps as possible | 2.0
5: KLE|zero-or-more repetition | 1.5
6: ADD|one-or-more repetition | 0.5


0000 | 0004 | '#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'
0001 | 0004 | '#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'



cluster 102 stats:
nPatterns: 3.0
nProjects: 4
shortest: http://([^/]+)(/\S*)\s*
Features:

1: LIT|a literal character | 10.0
2: CG|a capture group | 2.3333333333333335
3: KLE|zero-or-more repetition | 1.6666666666666667
4: QST|zero-or-one repetition | 1.3333333333333333
5: ADD|one-or-more repetition | 1.0
6: NCCC|negated CCC | 1.0
7: ANY|any non-newline char | 0.6666666666666666
8: DEC|any of: 0123456789 | 0.3333333333333333
9: END|end-of-line | 0.3333333333333333
10: LZY|as few reps as possible | 0.3333333333333333
11: NCG|group without capturing | 0.3333333333333333
12: NWSP|any non-whitespace | 0.3333333333333333
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0002 | 'http://([^/]+)(/\\S*)\\s*'
0001 | 0001 | 'https?://([^/]*?)(/.*)?'
0002 | 0001 | 'http://([^/:]+)(?::(\\d+))?(/.*)?$'



cluster 103 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^http://testserver/somewhere/else/\?c=\d+#baz$
Features:

1: LIT|a literal character | 44.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0004 | '^http://testserver/somewhere/else/\\?c=\\d+#baz$'
0001 | 0004 | '^http://testserver/somewhere/else/\\?foo=bar&c=\\d+#baz$'



cluster 104 stats:
nPatterns: 2.0
nProjects: 3
shortest: %(.)
Features:

1: ANY|any non-newline char | 1.5
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0


0000 | 0002 | '%(.)'
0001 | 0001 | '%(..)'



cluster 105 stats:
nPatterns: 2.0
nProjects: 3
shortest: [x+]
Features:

1: LIT|a literal character | 3.5
2: CCC|custom character class | 1.0


0000 | 0002 | '[xh]vc0'
0001 | 0001 | '[x+]'



cluster 106 stats:
nPatterns: 2.0
nProjects: 3
shortest: (\s|,)+
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: OR|logical or | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(\\s|,)+'
0001 | 0001 | '(\\s|_)+'



cluster 107 stats:
nPatterns: 2.0
nProjects: 3
shortest: ERROR FAIL
Features:

1: LIT|a literal character | 12.0


0000 | 0002 | 'ERROR FAIL'
0001 | 0001 | 'ERROR in BUILD'



cluster 108 stats:
nPatterns: 2.0
nProjects: 3
shortest: (\.|\s)
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | u'(\\.|\\s)'
0001 | 0003 | u'(\\.|\\s|/|-)'



cluster 109 stats:
nPatterns: 2.0
nProjects: 3
shortest: \d.\d.\d
Features:

1: DEC|any of: 0123456789 | 2.5
2: ANY|any non-newline char | 1.0
3: ADD|one-or-more repetition | 0.5
4: CG|a capture group | 0.5
5: KLE|zero-or-more repetition | 0.5
6: LIT|a literal character | 0.5
7: QST|zero-or-one repetition | 0.5


0000 | 0002 | '\\d+(\\.\\d*)?'
0001 | 0001 | '\\d.\\d.\\d'



cluster 110 stats:
nPatterns: 2.0
nProjects: 3
shortest: ([+-]?\d+)
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 1.5
3: CCC|custom character class | 1.5
4: CG|a capture group | 1.5
5: DEC|any of: 0123456789 | 1.0
6: QST|zero-or-one repetition | 1.0
7: NWSP|any non-whitespace | 0.5


0000 | 0002 | '([+-]?[\\d\\.]+)(\\S+)'
0001 | 0001 | '([+-]?\\d+)'



cluster 111 stats:
nPatterns: 3.0
nProjects: 3
shortest: \s*(;)
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
5: END|end-of-line | 0.3333333333333333
6: OR|logical or | 0.3333333333333333


0000 | 0001 | '\\s*(;)'
0001 | 0001 | '\\s*(<!>=)'
0002 | 0001 | '\\s*(\\n|$)'



cluster 112 stats:
nPatterns: 2.0
nProjects: 3
shortest: ->\s*(\S+)$
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: KLE|zero-or-more repetition | 1.5
5: NWSP|any non-whitespace | 1.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
7: END|end-of-line | 0.5


0000 | 0002 | '->\\s*(\\S+)$'
0001 | 0001 | '##\\s*(\\S+)\\s+(\\S*)'



cluster 113 stats:
nPatterns: 4.0
nProjects: 3
shortest: '(.*)'
Features:

1: LIT|a literal character | 2.25
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: END|end-of-line | 0.75
6: STR|start-of-line | 0.25


0000 | 0001 | "'(.*)'"
0001 | 0001 | "'(.*)'$"
0002 | 0001 | '{(.*)}$'
0003 | 0001 | '^(.*)"""$'



cluster 114 stats:
nPatterns: 3.0
nProjects: 3
shortest: {([^}^{]*)}
Features:

1: LIT|a literal character | 5.333333333333333
2: CG|a capture group | 1.0
3: NCCC|negated CCC | 1.0
4: KLE|zero-or-more repetition | 0.6666666666666666
5: ADD|one-or-more repetition | 0.3333333333333333
6: LZY|as few reps as possible | 0.3333333333333333


0000 | 0001 | '{([^}^{]*)}'
0001 | 0001 | '#\\{([^}]*)\\}'
0002 | 0001 | '{{{([^{]+?)}}}'



cluster 115 stats:
nPatterns: 3.0
nProjects: 3
shortest: <div.*?>\n
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 1.3333333333333333
3: KLE|zero-or-more repetition | 1.3333333333333333
4: LZY|as few reps as possible | 1.3333333333333333
5: CG|a capture group | 0.6666666666666666


0000 | 0001 | '<div.*?>\\n'
0001 | 0001 | '<div.*?>(.*?)</'
0002 | 0001 | '<studio>(.*?)</studio>'



cluster 116 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^([0-9]{4})\.([0-9]+)\.([0-9]+)$
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 3.5
3: CCC|custom character class | 3.0
4: RNG|chars within a range | 3.0
5: ADD|one-or-more repetition | 2.5
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: ANY|any non-newline char | 0.5
9: KLE|zero-or-more repetition | 0.5
10: LZY|as few reps as possible | 0.5
11: SNG|exactly n repetition | 0.5


0000 | 0002 | '^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'
0001 | 0001 | '^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'



cluster 117 stats:
nPatterns: 3.0
nProjects: 3
shortest: <script .*?</script>
Features:

1: LIT|a literal character | 16.666666666666668
2: KLE|zero-or-more repetition | 2.3333333333333335
3: ANY|any non-newline char | 1.3333333333333333
4: LZY|as few reps as possible | 1.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '<script .*?</script>'
0001 | 0001 | '<script.*?>.*?</script>'
0002 | 0001 | '<\\s*script.*?<\\s*/script\\s*>'



cluster 118 stats:
nPatterns: 3.0
nProjects: 3
shortest: [0-9a-fA-F]{6}
Features:

1: LIT|a literal character | 9.0
2: RNG|chars within a range | 4.0
3: SNG|exactly n repetition | 2.0
4: CCC|custom character class | 1.6666666666666667
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 0.6666666666666666
8: OR|logical or | 0.3333333333333333


0000 | 0001 | '[0-9a-fA-F]{6}'
0001 | 0001 | '^([0-9a-fA-F]{2}(:|$)){6}$'
0002 | 0001 | '^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$'



cluster 119 stats:
nPatterns: 2.0
nProjects: 2
shortest: pam
Features:

1: LIT|a literal character | 3.5


0000 | 0001 | 'pam'
0001 | 0001 | 'Game'



cluster 120 stats:
nPatterns: 2.0
nProjects: 2
shortest: [^']+
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 0.5
4: NCCC|negated CCC | 0.5


0000 | 0001 | "[^']+"
0001 | 0001 | '[*,]+'



cluster 121 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^p
Features:

1: LIT|a literal character | 4.5
2: STR|start-of-line | 1.0


0000 | 0001 | '^p'
0001 | 0001 | '^private_'



cluster 122 stats:
nPatterns: 2.0
nProjects: 2
shortest: (\\")
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 0.5


0000 | 0001 | '(\\\\")'
0001 | 0001 | '(\\\\*)\n'



cluster 123 stats:
nPatterns: 2.0
nProjects: 2
shortest: \.php$
Features:

1: LIT|a literal character | 4.5
2: END|end-of-line | 1.5
3: OR|logical or | 0.5


0000 | 0001 | '\\.php$'
0001 | 0001 | '\\.pyc$|~$'



cluster 124 stats:
nPatterns: 2.0
nProjects: 2
shortest: foo.*bar
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5


0000 | 0002 | 'foo.*bar'
0001 | 0002 | '.*foo.*bar'



cluster 125 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\..*
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0
5: END|end-of-line | 0.5


0000 | 0001 | '^\\..*'
0001 | 0001 | '^\\..*\\.swp$'



cluster 126 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\{.+\}
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 0.5
5: STR|start-of-line | 0.5


0000 | 0001 | '^\\{.+\\}'
0001 | 0001 | '(\\{.+\\})'



cluster 127 stats:
nPatterns: 2.0
nProjects: 2
shortest: [^\w\-]
Features:

1: LIT|a literal character | 2.5
2: NCCC|negated CCC | 1.0
3: WRD|[a-zA-Z0-9\_] | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '[^\\w\\-]'
0001 | 0001 | '[^\\w\\s@+.-]'



cluster 128 stats:
nPatterns: 2.0
nProjects: 2
shortest: </body
Features:

1: LIT|a literal character | 10.5
2: KLE|zero-or-more repetition | 0.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '</body'
0001 | 0001 | u'</tbody>\\s*<tbody>'



cluster 129 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\d+-\d+
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.0
3: DEC|any of: 0123456789 | 2.0
4: ANY|any non-newline char | 0.5
5: STR|start-of-line | 0.5


0000 | 0001 | '^\\d+-\\d+'
0001 | 0001 | ' \\d+.\\d+ tb\\(r\\)'



cluster 130 stats:
nPatterns: 2.0
nProjects: 2
shortest: [ \t]+\n
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 1.0
3: ADD|one-or-more repetition | 0.5
4: CG|a capture group | 0.5
5: KLE|zero-or-more repetition | 0.5
6: NCCC|negated CCC | 0.5


0000 | 0001 | '[ \\t]+\\n'
0001 | 0001 | '[ \\t]*\\n([^\\r\\n])'



cluster 131 stats:
nPatterns: 2.0
nProjects: 2
shortest: [0-9]+\.
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 1.5
3: RNG|chars within a range | 1.5
4: ADD|one-or-more repetition | 1.0
5: QST|zero-or-one repetition | 1.0
6: KLE|zero-or-more repetition | 0.5


0000 | 0001 | '[0-9]+\\.'
0001 | 0001 | '\\$[0-9]+\\,?\\.?[0-9]*'



cluster 132 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^Uid:\s+(\d+)
Features:

1: LIT|a literal character | 4.5
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: END|end-of-line | 0.5


0000 | 0001 | '^Uid:\\s+(\\d+)'
0001 | 0001 | '^PPid:\\s+(\\d+)$'



cluster 133 stats:
nPatterns: 2.0
nProjects: 2
shortest: (.*): [0-9]
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.5
3: CCC|custom character class | 1.5
4: CG|a capture group | 1.5
5: ADD|one-or-more repetition | 1.0
6: KLE|zero-or-more repetition | 1.0
7: RNG|chars within a range | 1.0
8: DBB|$n\le x \le m$ repetition | 0.5


0000 | 0001 | '(.*): [0-9]'
0001 | 0001 | '(.+):([0-9]+)[:]{0,1}.*'



cluster 134 stats:
nPatterns: 2.0
nProjects: 2
shortest: (0|[1-9][0-9]*):
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 2.0
3: KLE|zero-or-more repetition | 2.0
4: RNG|chars within a range | 2.0
5: CG|a capture group | 1.5
6: ANY|any non-newline char | 0.5
7: OR|logical or | 0.5


0000 | 0001 | '(0|[1-9][0-9]*):'
0001 | 0001 | '([1-9][0-9]*)*(.*)'



cluster 135 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?i)<br[^>]*>
Features:

1: LIT|a literal character | 5.5
2: KLE|zero-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: OPT|options wrapper | 1.0
5: ADD|one-or-more repetition | 0.5
6: OR|logical or | 0.5
7: QST|zero-or-one repetition | 0.5
8: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '(?i)<br[^>]*>'
0001 | 0001 | u'(?s)<[^>]*>|&#?\\w+;'



cluster 136 stats:
nPatterns: 2.0
nProjects: 2
shortest: test_file_commit1
Features:

1: LIT|a literal character | 17.0


0000 | 0002 | 'test_file_commit1'
0001 | 0002 | 'test_file_commit2'



cluster 137 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?i)handy(.*)nummer
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OPT|options wrapper | 1.0


0000 | 0002 | '(?i)handy(.*)nummer'
0001 | 0002 | '(?i)pager(.*)nummer'



cluster 138 stats:
nPatterns: 2.0
nProjects: 2
shortest:  *\)(?P<comma>,?)
Features:

1: LIT|a literal character | 3.5
2: PNG|named capture group | 1.0
3: ADD|one-or-more repetition | 0.5
4: ANY|any non-newline char | 0.5
5: KLE|zero-or-more repetition | 0.5
6: LZY|as few reps as possible | 0.5
7: QST|zero-or-one repetition | 0.5


0000 | 0001 | ' *\\)(?P<comma>,?)'
0001 | 0001 | '\\{\\{(?P<comm>.+?)\\}\\}'



cluster 139 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^([a-fA-F0-9]{64})$
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: DBB|$n\le x \le m$ repetition | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: SNG|exactly n repetition | 0.5


0000 | 0001 | '^([a-fA-F0-9]{64})$'
0001 | 0001 | '^([A-Fa-f0-9]{2,2}){3,4}$'



cluster 140 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^[a-zA-Z][a-zA-Z\d_]{2,4}$
Features:

1: LIT|a literal character | 9.5
2: RNG|chars within a range | 4.0
3: CCC|custom character class | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0
6: DBB|$n\le x \le m$ repetition | 0.5
7: DEC|any of: 0123456789 | 0.5
8: LWB|at least n repetition | 0.5


0000 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,4}$'
0001 | 0001 | '^[a-z0-9][a-z0-9\\.\\-]{2,}$'



cluster 141 stats:
nPatterns: 3.0
nProjects: 2
shortest: diff --git a
Features:

1: LIT|a literal character | 14.333333333333334
2: CG|a capture group | 1.0
3: ADD|one-or-more repetition | 0.6666666666666666
4: ANY|any non-newline char | 0.6666666666666666
5: KLE|zero-or-more repetition | 0.6666666666666666
6: NWSP|any non-whitespace | 0.6666666666666666
7: END|end-of-line | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0001 | 'diff --git a'
0001 | 0001 | 'diff --git .* b/(.*)\n'
0002 | 0001 | '^diff --git a/(\\S+) b/(\\S+)$'



cluster 142 stats:
nPatterns: 3.0
nProjects: 2
shortest: href="(.*?)"
Features:

1: LIT|a literal character | 19.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | 'href="(.*?)"'
0001 | 0001 | 'Href="(.*?)">'
0002 | 0001 | u'<a href="(.*?)" class="historylink">History</a>'



cluster 143 stats:
nPatterns: 2.0
nProjects: 2
shortest: \b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\b
Features:

1: LIT|a literal character | 13.0
2: RNG|chars within a range | 6.0
3: CCC|custom character class | 2.0
4: SNG|exactly n repetition | 2.0
5: CG|a capture group | 1.0
6: DBB|$n\le x \le m$ repetition | 1.0
7: WNW|word/non-word boundary | 1.0
8: END|end-of-line | 0.5
9: STR|start-of-line | 0.5


0000 | 0001 | '\\b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\\b'
0001 | 0001 | '^([0-9a-fA-F]{1,2}:){5}[0-9a-fA-F]{1,2}$'



cluster 144 stats:
nPatterns: 3.0
nProjects: 2
shortest: LL_VERSION_BUILD\s=\s([0-9]+)
Features:

1: LIT|a literal character | 19.666666666666668
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | 'LL_VERSION_BUILD\\s=\\s([0-9]+)'
0001 | 0001 | 'IMP_VERSION_MAJOR\\s=\\s([0-9]+)'
0002 | 0001 | 'IMP_VERSION_PATCH\\s=\\s([0-9]+)'



cluster 145 stats:
nPatterns: 2.0
nProjects: 2
shortest: [-+]?(?:\d+(?:\.\d*)?|\d*\.\d+)(?:[eE][-+]?\d+)?
Features:

1: LIT|a literal character | 8.0
2: DEC|any of: 0123456789 | 5.0
3: QST|zero-or-one repetition | 4.0
4: ADD|one-or-more repetition | 3.0
5: CCC|custom character class | 3.0
6: NCG|group without capturing | 3.0
7: KLE|zero-or-more repetition | 2.0
8: CG|a capture group | 1.0
9: OR|logical or | 1.0


0000 | 0001 | '[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'
0001 | 0001 | '([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'



cluster 146 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\d+) seconds.*?"
Features:

1: LIT|a literal character | 68.5
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 3.5
4: LZY|as few reps as possible | 3.5
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds.*?"'
0001 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds. Killing!"'



cluster 147 stats:
nPatterns: 14.0
nProjects: 2
shortest: \xd0\xb0\xd0\xbb\xd1\x82\xd1\x83\xd1\x84\xd1\x8c\xd0\xb5\xd0\xb2\xd0\xbe
Features:

1: LIT|a literal character | 26.928571428571427
2: CG|a capture group | 0.6428571428571429
3: OR|logical or | 0.5714285714285714
4: ANY|any non-newline char | 0.07142857142857142
5: KLE|zero-or-more repetition | 0.07142857142857142


0000 | 0001 | '\xd0\xb0\xd0\xbb\xd1\x82\xd1\x83\xd1\x84\xd1\x8c\xd0\xb5\xd0\xb2\xd0\xbe'
0001 | 0001 | '\xd0\xb2\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe'
0002 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xbe\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0003 | 0001 | '\xd1\x82\xd1\x83\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0004 | 0001 | '\xd0\x98\xd0\xb7\xd0\xb1\xd1\x80\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \\((.*)\\)<\\/a>'
0005 | 0001 | '\xd0\xbc\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0006 | 0001 | '\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x86\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xbe\xd1\x81\xd1\x82'
0007 | 0001 | '\xd1\x84\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xba'
0008 | 0001 | '\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0009 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xb0\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0010 | 0001 | '\xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0011 | 0001 | '\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0012 | 0001 | '\xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd1\x8c\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0'
0013 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe-\xd1\x80\xd0\xb0\xd0\xb7\xd1\x83\xd0\xbc\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'



cluster 148 stats:
nPatterns: 1.0
nProjects: 1
shortest: \).*$
Features:

1: ANY|any non-newline char | 1.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LIT|a literal character | 1.0


0000 | 0001 | '\\).*$'



cluster 149 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\(.*\)$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^\\(.*\\)$'



cluster 150 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\:)(.*)$
Features:

1: CG|a capture group | 2.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LIT|a literal character | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^(\\:)(.*)$'



cluster 151 stats:
nPatterns: 2.0
nProjects: 1
shortest: _L3\.
Features:

1: LIT|a literal character | 4.0


0000 | 0001 | '_L3\\.'
0001 | 0001 | '_MD\\.'



cluster 152 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^//(.*)
Features:

1: LIT|a literal character | 2.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 0.5


0000 | 0001 | '^//(.*)'
0001 | 0001 | '\\ //(.*)'



cluster 153 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^[\w._-]+
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: CG|a capture group | 0.5
6: STR|start-of-line | 0.5


0000 | 0001 | '^[\\w._-]+'
0001 | 0001 | '([\\w._-]+)'



cluster 154 stats:
nPatterns: 2.0
nProjects: 1
shortest: [#][\dA-F]{3}
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 2.0
3: DEC|any of: 0123456789 | 1.0
4: RNG|chars within a range | 1.0
5: SNG|exactly n repetition | 1.0


0000 | 0001 | '[#][\\dA-F]{3}'
0001 | 0001 | '[#][\\dA-F]{6}'



cluster 155 stats:
nPatterns: 2.0
nProjects: 1
shortest: guibg=#*(\w+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'guibg=#*(\\w+)'
0001 | 0001 | 'guifg=#*(\\w+)'



cluster 156 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^"(?P<data>.*)"$
Features:

1: LIT|a literal character | 2.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0
5: STR|start-of-line | 1.0
6: END|end-of-line | 0.5


0000 | 0001 | '^"(?P<data>.*)"$'
0001 | 0001 | '^#: (?P<data>.*)'



cluster 157 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^.*RLELossless.*$
Features:

1: LIT|a literal character | 11.5
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^.*RLELossless.*$'
0001 | 0001 | '^.*JPEGLossless.*$'



cluster 158 stats:
nPatterns: 2.0
nProjects: 1
shortest: Simple_1Of_1unk_svc
Features:

1: LIT|a literal character | 19.5


0000 | 0001 | 'Simple_1Of_1unk_svc'
0001 | 0001 | 'Simple_1Of_1unk_host'



cluster 159 stats:
nPatterns: 2.0
nProjects: 1
shortest: \bLCOV_EXCL_LINE\b
Features:

1: LIT|a literal character | 14.5
2: WNW|word/non-word boundary | 2.0


0000 | 0001 | '\\bLCOV_EXCL_LINE\\b'
0001 | 0001 | '\\bLCOV_EXCL_START\\b'



cluster 160 stats:
nPatterns: 2.0
nProjects: 1
shortest: <pre><a name="foo-1">
Features:

1: LIT|a literal character | 21.0


0000 | 0001 | '<pre><a name="foo-1">'
0001 | 0001 | '<pre><a name="foo-5">'



cluster 161 stats:
nPatterns: 2.0
nProjects: 1
shortest: [\w\d\-_\.]+
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.5
3: CCC|custom character class | 1.5
4: DEC|any of: 0123456789 | 1.5
5: WRD|[a-zA-Z0-9\_] | 1.5
6: STR|start-of-line | 0.5


0000 | 0001 | '[\\w\\d\\-_\\.]+'
0001 | 0001 | '^[\\w\\d\\.]+@[\\w\\d\\.]+'



cluster 162 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^dhcp\.pool\.start$
Features:

1: LIT|a literal character | 15.5
2: END|end-of-line | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^dhcp\\.pool\\.start$'
0001 | 0001 | '^dhcp\\.scope\\.start$'



cluster 163 stats:
nPatterns: 2.0
nProjects: 1
shortest: (.+)[-_](\d+)\.(\d+)(\w?)
Features:

1: CG|a capture group | 4.5
2: ADD|one-or-more repetition | 3.5
3: LIT|a literal character | 3.5
4: DEC|any of: 0123456789 | 2.5
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: QST|zero-or-one repetition | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)(\\w?)'
0001 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'



cluster 164 stats:
nPatterns: 2.0
nProjects: 1
shortest: (?!__init__)[0-9a-zA-Z_]*(\.py)?$
Features:

1: LIT|a literal character | 18.5
2: RNG|chars within a range | 3.0
3: QST|zero-or-one repetition | 1.5
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NLKA|sequence doesn't follow  | 1.0


0000 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'
0001 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'



cluster 165 stats:
nPatterns: 3.0
nProjects: 1
shortest: \W\xd0\xb2\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 7.333333333333333
2: NWRD|non-word chars | 2.0


0000 | 0001 | '\\W\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0002 | 0001 | '\\W\xd1\x81\xd0\xb7\xd0\xb0\xd0\xbe\\W'



cluster 166 stats:
nPatterns: 2.0
nProjects: 1
shortest: <a href="(http://\w+.craigslist.org/)">([\w ]+)</a>
Features:

1: LIT|a literal character | 38.5
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 2.5
4: WRD|[a-zA-Z0-9\_] | 2.5
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 2.0
7: KLE|zero-or-more repetition | 1.0
8: NWRD|non-word chars | 1.0


0000 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)</a>'
0001 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'



cluster 167 stats:
nPatterns: 3.0
nProjects: 1
shortest: ([a-z]*) ([\d-]+) ([a-z]*)[\s\t]*([0-9:, -]+)
Features:

1: LIT|a literal character | 22.0
2: CCC|custom character class | 7.0
3: CG|a capture group | 6.333333333333333
4: KLE|zero-or-more repetition | 4.333333333333333
5: RNG|chars within a range | 4.333333333333333
6: ADD|one-or-more repetition | 3.0
7: DEC|any of: 0123456789 | 2.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*)[\\s\t]*([0-9:, -]+)'
0001 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'
0002 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'



cluster 168 stats:
nPatterns: 3.0
nProjects: 1
shortest: (\d\d\d\d)-(\d\d)-(\d\d)
Features:

1: DEC|any of: 0123456789 | 16.0
2: LIT|a literal character | 12.666666666666666
3: CG|a capture group | 6.333333333333333
4: WRD|[a-zA-Z0-9\_] | 2.6666666666666665
5: CCC|custom character class | 1.3333333333333333
6: RNG|chars within a range | 1.3333333333333333


0000 | 0001 | '(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)'
0001 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>'
0002 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'



cluster 169 stats:
nPatterns: 2.0
nProjects: 1
shortest: (\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe
Features:

1: LIT|a literal character | 49.0
2: CG|a capture group | 1.5
3: OR|logical or | 1.5
4: ANY|any non-newline char | 1.0


0000 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0001 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd1\x81\xd1\x82\xd0\xb0\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'



cluster 170 stats:
nPatterns: 4.0
nProjects: 1
shortest: (\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
Features:

1: LIT|a literal character | 34.25
2: CG|a capture group | 1.0
3: OR|logical or | 0.5


0000 | 0001 | '(\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0001 | 0001 | '(\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0002 | 0001 | '(\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\\.)'
0003 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



