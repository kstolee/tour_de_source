Cluster stats:

nClusters: 682
TotalPatterns: 1332
totalnProjects: 727
suffix: _i4.00_p0.27_k100_lev_


cluster 0 stats:
nPatterns: 70.0
nProjects: 124
shortest: [a-z ]+
Features:

1: LIT|a literal character | 10.957142857142857
2: RNG|chars within a range | 3.4571428571428573
3: CCC|custom character class | 1.3714285714285714
4: ADD|one-or-more repetition | 0.7285714285714285
5: CG|a capture group | 0.38571428571428573
6: KLE|zero-or-more repetition | 0.38571428571428573
7: END|end-of-line | 0.2857142857142857
8: STR|start-of-line | 0.2857142857142857
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.11428571428571428
10: NCCC|negated CCC | 0.1
11: QST|zero-or-one repetition | 0.1
12: DEC|any of: 0123456789 | 0.05714285714285714
13: OR|logical or | 0.05714285714285714
14: SNG|exactly n repetition | 0.05714285714285714
15: WNW|word/non-word boundary | 0.04285714285714286
16: WRD|[a-zA-Z0-9\_] | 0.04285714285714286
17: DBB|$n\le x \le m$ repetition | 0.02857142857142857
18: LWB|at least n repetition | 0.02857142857142857
19: ANY|any non-newline char | 0.014285714285714285
20: ENDZ|absolute end of string | 0.014285714285714285
21: LZY|as few reps as possible | 0.014285714285714285


0000 | 0020 | '[^a-zA-Z0-9]'
0001 | 0018 | '[a-zA-Z][-_.:a-zA-Z0-9]*\\s*'
0002 | 0015 | '[a-zA-Z][-.a-zA-Z0-9:_]*'
0003 | 0015 | '[a-zA-Z][-_.a-zA-Z0-9:]*\\s*'
0004 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0005 | 0012 | '\\$([a-zA-Z_][a-zA-Z_0-9]*)'
0006 | 0005 | ', ([a-zA-Z0-9_]+)='
0007 | 0003 | u'^[-a-zA-Z0-9_]+$'
0008 | 0003 | '^[a-z0-9][a-z0-9_]{2,}$'
0009 | 0003 | '^[a-zA-Z0-9\\.\\-:+"]+$'
0010 | 0003 | '^struct +[a-zA-Z_][a-zA-Z0-9_]* *{$'
0011 | 0002 | '[a-zA-Z_]\\w*$'
0012 | 0002 | '[a-fA-F0-9]{1,4}'
0013 | 0002 | '^[a-zA-Z0-9\\-]+$'
0014 | 0002 | '^[a-zA-Z0-9_\\.]+$'
0015 | 0002 | '([a-zA-Z]+)([A-Z][a-z])'
0016 | 0002 | '[A-Za-z_][A-Za-z0-9_]*$'
0017 | 0002 | '(~?\\b[a-zA-Z_][a-zA-Z0-9_]*)\\b'
0018 | 0002 | '&([a-zA-Z][a-zA-Z0-9]*)[^a-zA-Z0-9]'
0019 | 0002 | 'irb\\([a-zA-Z_][a-zA-Z0-9_]*\\):\\d{3}:\\d+[>*] '
0020 | 0001 | '[a-z ]+'
0021 | 0001 | '[A-Za-z_]+'
0022 | 0001 | '^[a-zA-Z]*'
0023 | 0001 | u'[a-zA-Z]+'
0024 | 0001 | '[^a-fA-F\\d]'
0025 | 0001 | "[a-z\\-' \n\t]"
0026 | 0001 | '@([a-zA-Z_]+)@'
0027 | 0001 | '[0-9]+[a-zA-Z]'
0028 | 0001 | '[^0-9a-zA-Z._]'
0029 | 0001 | '[^a-zA-Z0-9_]+'
0030 | 0001 | '^[a-zA-Z]\\w*$'
0031 | 0001 | '([A-Za-z0-9_]*)'
0032 | 0001 | '[a-zA-Z.;?<>-]+'
0033 | 0001 | '([a-zA-Z0-9_.]+)'
0034 | 0001 | '^[0-9a-zA-Z- ]+$'
0035 | 0001 | '{[a-zA-Z_ 0-9]+}'
0036 | 0001 | u'^[a-zA-Z0-9_]+$'
0037 | 0001 | "(^[A-Za-z\\' ]+$)"
0038 | 0001 | '[A-Z][A-Za-z]+\\('
0039 | 0001 | '[a-zA-Z0-9_\\-]+$'
0040 | 0001 | '[a-zA-Z]:(/|\\\\)'
0041 | 0001 | '^[A-Za-z0-9_]+\\('
0042 | 0001 | '^[a-zA-Z0-9]{40}$'
0043 | 0001 | '^0x[a-fA-F0-9]{6}$'
0044 | 0001 | '</?\\s*[a-zA-Z0-9]+'
0045 | 0001 | '[^-a-zA-Z_\\.0-9:]+'
0046 | 0001 | "\\{([a-zA-Z\\']+)\\}"
0047 | 0001 | '\\%\\([a-zA-Z0-9]+\\)'
0048 | 0001 | '^[a-zA-Z0-9_\\-\\.]+$'
0049 | 0001 | '[a-zA-Z][a-zA-Z0-9_]*$'
0050 | 0001 | '([A-Z]+_[a-z0-9]+\\.txt)'
0051 | 0001 | '[-+*/!@$%^&=.a-zA-Z0-9_]+'
0052 | 0001 | '(<([a-z0-9\\:\\-_]+)\\s+>)'
0053 | 0001 | '^/[a-zA-Z0-9_-]{28}/file1$'
0054 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,}$'
0055 | 0001 | '[a-zA-Z_:][\\w\\.\\-_:]*\\Z'
0056 | 0001 | 'data-i18n-[a-z0-9]+="(.+?)"'
0057 | 0001 | '[a-zA-Z0-9]+(-[a-zA-Z0-9]+)?'
0058 | 0001 | '([A-Za-z]+)(\\[[A-Za-z,]+\\])?'
0059 | 0001 | '^@[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0060 | 0001 | '(\\s+|\\A)#([a-zA-Z0-9\\-_]*)\\b'
0061 | 0001 | 'Content-Type: ?([a-zA-Z0-9\\-/]*)'
0062 | 0001 | '[a-zA-Z0-9_\\.]+/[a-zA-Z0-9_\\.]+'
0063 | 0001 | '&([a-zA-Z][-.a-zA-Z0-9]*|#[0-9]*)?'
0064 | 0001 | '[a-zA-Z0-9_]+:[a-zA-Z0-9_\\.\\-\\s]+'
0065 | 0001 | 'gene_name \\"([a-zA-Z-_\\/|.0-9]+)\\"'
0066 | 0001 | '^[-a-z0-9_.]+@[-a-z0-9]+\\.+[a-z]{2,6}'
0067 | 0001 | '\\s*(class|def)\\s+[a-zA-Z_][a-zA-Z0-9_]*'
0068 | 0001 | '\\$\\{([_a-zA-Z][_a-zA-Z0-9]+)(\\?[^}]+)?\\}'
0069 | 0001 | '[a-zA-Z0-9 !@#$%^&*()\\-_=+\\\\|`[\\]{};:\'\\",\\.<>]'



cluster 1 stats:
nPatterns: 5.0
nProjects: 106
shortest: \s
Features:

1: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
2: KLE|zero-or-more repetition | 0.6
3: LIT|a literal character | 0.6


0000 | 0078 | '\\s'
0001 | 0030 | '\\s*'
0002 | 0007 | 'a\\s'
0003 | 0005 | ';\\s*'
0004 | 0001 | ':\\s*'



cluster 2 stats:
nPatterns: 8.0
nProjects: 69
shortest: ^\W+
Features:

1: ADD|one-or-more repetition | 0.875
2: DEC|any of: 0123456789 | 0.75
3: END|end-of-line | 0.625
4: LIT|a literal character | 0.625
5: STR|start-of-line | 0.5
6: NWRD|non-word chars | 0.125
7: QST|zero-or-one repetition | 0.125
8: SNG|exactly n repetition | 0.125


0000 | 0049 | '^\\d+$'
0001 | 0009 | '^-?\\d+$'
0002 | 0006 | '^\\W+'
0003 | 0005 | '^\\d{5}$'
0004 | 0004 | '\\d+-'
0005 | 0002 | '\\n+$'
0006 | 0002 | '-\\d+$'
0007 | 0001 | '/\\d+'



cluster 3 stats:
nPatterns: 5.0
nProjects: 62
shortest:  +([0-9]+) , ([0-9]+) *([0-9]+) *(.+)
Features:

1: LIT|a literal character | 20.0
2: CCC|custom character class | 3.6
3: ADD|one-or-more repetition | 3.0
4: CG|a capture group | 2.8
5: RNG|chars within a range | 2.6
6: KLE|zero-or-more repetition | 1.0
7: LZY|as few reps as possible | 0.8
8: ANY|any non-newline char | 0.6
9: NCCC|negated CCC | 0.6
10: END|end-of-line | 0.4
11: QST|zero-or-one repetition | 0.4
12: STR|start-of-line | 0.4


0000 | 0057 | '<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'
0001 | 0003 | '[ \t]+([A-Z0-9]+) \\/\\* PBXTargetDependency \\*\\/,\n'
0002 | 0001 | ' +([0-9]+) , ([0-9]+) *([0-9]+) *(.+)'
0003 | 0001 | '^(.+?)[ \\._\\-][Ss]([0-9]+)[\\.\\- ]?[Ee]([0-9]+)[^\\/]*$'
0004 | 0001 | '^(.+?)[ \\._\\-]\\[[Ss]([0-9]+?)\\]_\\[[Ee]([0-9]+?)\\]?[^\\/]*$'



cluster 4 stats:
nPatterns: 7.0
nProjects: 59
shortest: \n
Features:

1: LIT|a literal character | 1.0
2: WRD|[a-zA-Z0-9\_] | 0.2857142857142857
3: LWB|at least n repetition | 0.14285714285714285


0000 | 0041 | '\n'
0001 | 0010 | '\\w'
0002 | 0007 | '\t'
0003 | 0002 | '\\-'
0004 | 0002 | ' {2,}\n'
0005 | 0001 | u'\n'
0006 | 0001 | '<\\w'



cluster 5 stats:
nPatterns: 6.0
nProjects: 53
shortest: ^.+$
Features:

1: LIT|a literal character | 1.1666666666666667
2: END|end-of-line | 0.8333333333333334
3: KLE|zero-or-more repetition | 0.8333333333333334
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
5: STR|start-of-line | 0.5
6: ADD|one-or-more repetition | 0.16666666666666666
7: ANY|any non-newline char | 0.16666666666666666
8: CG|a capture group | 0.16666666666666666
9: NDEC|any non-decimal | 0.16666666666666666


0000 | 0048 | '^\\s*$'
0001 | 0004 | ',\\s*$'
0002 | 0003 | '(""")\\s*$'
0003 | 0002 | '^.+$'
0004 | 0002 | '---\\s*$'
0005 | 0001 | '^\\D*'



cluster 6 stats:
nPatterns: 19.0
nProjects: 51
shortest: [,;]
Features:

1: LIT|a literal character | 2.6842105263157894
2: CCC|custom character class | 0.9473684210526315
3: KLE|zero-or-more repetition | 0.10526315789473684
4: NCCC|negated CCC | 0.10526315789473684
5: ANY|any non-newline char | 0.05263157894736842
6: WRD|[a-zA-Z0-9\_] | 0.05263157894736842


0000 | 0024 | '[*?[]'
0001 | 0009 | '[\n@{}&<>]'
0002 | 0007 | '[ \n]*{'
0003 | 0005 | '[^\\w]'
0004 | 0004 | '[&<>"]'
0005 | 0003 | '[,;]'
0006 | 0002 | '[:@/]'
0007 | 0002 | '[xh]vc0'
0008 | 0001 | '[<&]'
0009 | 0001 | '[\n]'
0010 | 0001 | '[ \t]'
0011 | 0001 | '[,\n]'
0012 | 0001 | '[.:-]'
0013 | 0001 | '[\\)]'
0014 | 0001 | '[\n,]'
0015 | 0001 | "[^<']*"
0016 | 0001 | '[,;:].'
0017 | 0001 | '[\\+-]'
0018 | 0001 | '[uU][\'"]'



cluster 7 stats:
nPatterns: 1.0
nProjects: 41
shortest: ^[ ]*(#.*)?$
Features:

1: KLE|zero-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: QST|zero-or-one repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0041 | '^[ ]*(#.*)?$'



cluster 8 stats:
nPatterns: 7.0
nProjects: 41
shortest: -+
Features:

1: LIT|a literal character | 1.1428571428571428
2: ADD|one-or-more repetition | 0.8571428571428571
3: NWRD|non-word chars | 0.14285714285714285
4: WRD|[a-zA-Z0-9\_] | 0.14285714285714285


0000 | 0026 | '\\W+'
0001 | 0008 | '\n+'
0002 | 0002 | '\\t+'
0003 | 0001 | u'-+'
0004 | 0001 | u'-h'
0005 | 0001 | u'\\-+'
0006 | 0001 | '%\\w+%'



cluster 9 stats:
nPatterns: 1.0
nProjects: 40
shortest: (?m)^[ ]*(?=\n)
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LKA|matching sequence follows | 1.0
5: OPT|options wrapper | 1.0
6: STR|start-of-line | 1.0


0000 | 0040 | '(?m)^[ ]*(?=\n)'



cluster 10 stats:
nPatterns: 2.0
nProjects: 39
shortest: ([\x80-\x9f])
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: RNG|chars within a range | 1.0
5: ADD|one-or-more repetition | 0.5


0000 | 0039 | '([\x80-\x9f])'
0001 | 0001 | '([\x00-\x7f]+)'



cluster 11 stats:
nPatterns: 1.0
nProjects: 38
shortest: \(\*
Features:

1: LIT|a literal character | 2.0


0000 | 0038 | '\\(\\*'



cluster 12 stats:
nPatterns: 1.0
nProjects: 38
shortest: shutdown_session\)\(
Features:

1: LIT|a literal character | 18.0


0000 | 0038 | 'shutdown_session\\)\\('



cluster 13 stats:
nPatterns: 2.0
nProjects: 38
shortest: alloc_fabric_acl\)\(
Features:

1: LIT|a literal character | 20.0


0000 | 0038 | 'alloc_fabric_acl\\)\\('
0001 | 0038 | 'get_fabric_proto_ident'



cluster 14 stats:
nPatterns: 2.0
nProjects: 38
shortest: \*release_cmd\)\(
Features:

1: LIT|a literal character | 17.0


0000 | 0038 | 'release_fabric_acl\\)\\('
0001 | 0014 | '\\*release_cmd\\)\\('



cluster 15 stats:
nPatterns: 10.0
nProjects: 36
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 12.8
2: KLE|zero-or-more repetition | 1.7
3: ANY|any non-newline char | 1.3
4: LZY|as few reps as possible | 1.3
5: CG|a capture group | 0.9
6: NCCC|negated CCC | 0.5
7: OPT|options wrapper | 0.5
8: OR|logical or | 0.3
9: QST|zero-or-one repetition | 0.3
10: ADD|one-or-more repetition | 0.2
11: NCG|group without capturing | 0.1
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1


0000 | 0019 | '<[^>]*?>'
0001 | 0008 | '</?xsl:([^>]*)/?>?'
0002 | 0002 | '(?ms)By:\\s*<a .*?>(.+?)<'
0003 | 0002 | '(?i)<img.*?src.*?=.*?"(.+?)".*?>'
0004 | 0001 | '<(hr|br)[^>]*?/>'
0005 | 0001 | '(?ims)<tr[^>]*>.*?</tr>'
0006 | 0001 | '(?is)<tr [^>]*>.*?</tr>'
0007 | 0001 | '(?s)id="TEXT_PH">(.*?)</span>'
0008 | 0001 | '(?:aka) <em>"(.*?)(<br>|<\\/td>)'
0009 | 0001 | '<title>(.*)</title>|<TITLE>(.*)</TITLE>'



cluster 16 stats:
nPatterns: 1.0
nProjects: 35
shortest: <!\s+([^<>]*)>
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0035 | '<!\\s+([^<>]*)>'



cluster 17 stats:
nPatterns: 3.0
nProjects: 32
shortest: /
Features:

1: LIT|a literal character | 2.3333333333333335
2: QST|zero-or-one repetition | 0.6666666666666666


0000 | 0030 | '/'
0001 | 0002 | '</?u>'
0002 | 0001 | '/?>'



cluster 18 stats:
nPatterns: 13.0
nProjects: 31
shortest: ^[A-Z0-9][a-z0-9]*(-[A-Z0-9][a-z0-9]*)*$
Features:

1: LIT|a literal character | 29.615384615384617
2: RNG|chars within a range | 9.153846153846153
3: CCC|custom character class | 4.6923076923076925
4: CG|a capture group | 3.3076923076923075
5: KLE|zero-or-more repetition | 2.6153846153846154
6: QST|zero-or-one repetition | 1.9230769230769231
7: ADD|one-or-more repetition | 1.6923076923076923
8: OR|logical or | 1.3846153846153846
9: NCCC|negated CCC | 0.6923076923076923
10: END|end-of-line | 0.6153846153846154
11: ANY|any non-newline char | 0.38461538461538464
12: NCG|group without capturing | 0.38461538461538464
13: SNG|exactly n repetition | 0.3076923076923077
14: STR|start-of-line | 0.3076923076923077
15: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.23076923076923078
16: NLKB|sequence doesn't precede | 0.15384615384615385
17: DEC|any of: 0123456789 | 0.07692307692307693
18: LKA|matching sequence follows | 0.07692307692307693
19: NLKA|sequence doesn't follow  | 0.07692307692307693
20: WRD|[a-zA-Z0-9\_] | 0.07692307692307693


0000 | 0016 | '&([a-zA-Z][a-zA-Z0-9]*|#[0-9]*)?|<([a-zA-Z][^<>]*|/([a-zA-Z][^<>]*)?|![^<>]*)?'
0001 | 0014 | '\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*))?'
0002 | 0004 | '^[A-Z0-9][a-z0-9]*(-[A-Z0-9][a-z0-9]*)*$'
0003 | 0003 | '[a-zA-Z_][0-9a-zA-Z_+-]*|[0-9+-][0-9a-zA-Z_.+-]*|"([^"\n\\\\]|\\\\.)*("|\\\\?$)|\'([^\'\n\\\\]|\\\\.)*(\'|\\\\?$)'
0004 | 0001 | '#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])'
0005 | 0001 | '([a-zA-Z]|[0-9])(([a-zA-Z]|[0-9]|-)*([a-zA-Z]|[0-9]))?$'
0006 | 0001 | '^\\-?([0-9]+\\.?[0-9]*|[0-9]*\\.?[0-9]+)((E|e)\\-?[0-9]+)?$'
0007 | 0001 | '((2[0-5]|1[0-9]|[0-9])?[0-9]\\.){3}((2[0-5]|1[0-9]|[0-9])?[0-9])'
0008 | 0001 | '([A-Za-z]+://)?(([A-Za-z0-9]+)(:[^:@]+)?@)?([^:/]+)(:[0-9]+)?(/.*)?'
0009 | 0001 | '^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$'
0010 | 0001 | '^([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*)(\\.([a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*))*$'
0011 | 0001 | '(?<!\\")(?<!\\\\.)(?:[a-z|A-Z]+[0-9]+:?(?:[a-z|A-Z]+[0-9]+\\:?)?)(?:(?=[+\\-*/% \\,)])|(?!.))'
0012 | 0001 | "([\\w.!~*'|;:&=+$,-]+@)?(([A-Za-z0-9]+[A-Za-z0-9\\-]*[A-Za-z0-9]+\\.)*([A-Za-z0-9]+\\.)*)*([A-Za-z]+[A-Za-z0-9\\-]*[A-Za-z0-9]+)\\.?(:\\d*)*$"



cluster 19 stats:
nPatterns: 3.0
nProjects: 29
shortest: var-bind=[\'"](.*)["\']
Features:

1: LIT|a literal character | 14.333333333333334
2: CCC|custom character class | 1.6666666666666667
3: KLE|zero-or-more repetition | 1.6666666666666667
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.6666666666666667
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: NCCC|negated CCC | 0.6666666666666666
8: ANY|any non-newline char | 0.3333333333333333
9: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0011 | 'encoding\\s*=\\s*[\'"]([^"\']+)["\']'
0001 | 0004 | '<base\\s+href\\s*=\\s*[\'"]?([^\'">]+)'
0002 | 0001 | 'var-bind=[\'"](.*)["\']'



cluster 20 stats:
nPatterns: 13.0
nProjects: 29
shortest: [0-9]+,[0-9]+
Features:

1: LIT|a literal character | 7.923076923076923
2: CCC|custom character class | 2.1538461538461537
3: RNG|chars within a range | 1.9230769230769231
4: ADD|one-or-more repetition | 1.1538461538461537
5: CG|a capture group | 1.1538461538461537
6: KLE|zero-or-more repetition | 0.3076923076923077
7: ANY|any non-newline char | 0.23076923076923078
8: END|end-of-line | 0.15384615384615385
9: OR|logical or | 0.15384615384615385
10: STR|start-of-line | 0.15384615384615385
11: QST|zero-or-one repetition | 0.07692307692307693


0000 | 0006 | '[0-9]+,[0-9]+'
0001 | 0003 | '[0-9]+\\.[0-9]+'
0002 | 0003 | '([0-9]+):([0-9]+)'
0003 | 0003 | 'vport[0-9]p[0-9]+'
0004 | 0003 | '\\\\([0-3][0-7][0-7])'
0005 | 0002 | '([0-9]+)_([0-9]+)'
0006 | 0002 | '^[-+]?(0|[1-9][0-9,]*)$'
0007 | 0002 | '([\\-0-9])|([\\-0-9]/[0-9])'
0008 | 0001 | 'N=50: ([.0-9]+)'
0009 | 0001 | '^m_([0-9]+)_([0-9]+)'
0010 | 0001 | '(.*)-[0-9_]+(.*[.]lib)'
0011 | 0001 | ', ([0-9]+\\.[0-9]+) fps'
0012 | 0001 | 'sta.b (tcc__[fr][0-9]*)$'



cluster 21 stats:
nPatterns: 11.0
nProjects: 28
shortest: (\s)
Features:

1: LIT|a literal character | 1.7272727272727273
2: CG|a capture group | 0.8181818181818182
3: NLKA|sequence doesn't follow  | 0.18181818181818182
4: CCC|custom character class | 0.09090909090909091
5: DEC|any of: 0123456789 | 0.09090909090909091
6: LKA|matching sequence follows | 0.09090909090909091
7: NDEC|any non-decimal | 0.09090909090909091
8: NWRD|non-word chars | 0.09090909090909091
9: NWSP|any non-whitespace | 0.09090909090909091
10: OR|logical or | 0.09090909090909091
11: WRD|[a-zA-Z0-9\_] | 0.09090909090909091
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.09090909090909091


0000 | 0008 | '(a|(b))'
0001 | 0008 | '<\\?(?!xml)'
0002 | 0007 | '(\\s)'
0003 | 0003 | '(&&)'
0004 | 0003 | '(\\d)'
0005 | 0002 | '(\\W)'
0006 | 0001 | '(\\S)'
0007 | 0001 | '(%\\w)'
0008 | 0001 | u'-(?=-)'
0009 | 0001 | '>(?!\\})'
0010 | 0001 | '(\\D[123])_D'



cluster 22 stats:
nPatterns: 3.0
nProjects: 25
shortest: \s+<
Features:

1: LIT|a literal character | 1.6666666666666667
2: ADD|one-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0020 | '>\\s+<'
0001 | 0004 | u'>\\s+<'
0002 | 0001 | '\\s+<'



cluster 23 stats:
nPatterns: 4.0
nProjects: 24
shortest: \\$
Features:

1: LIT|a literal character | 1.75
2: END|end-of-line | 0.5


0000 | 0013 | '\\]\\]>'
0001 | 0004 | '\\\\$'
0002 | 0002 | '\\\\`'
0003 | 0001 | '\\$$'



cluster 24 stats:
nPatterns: 11.0
nProjects: 23
shortest: ^(?P<area>[17]\d\d\d)(?P<station>\d+)$
Features:

1: LIT|a literal character | 5.0
2: DEC|any of: 0123456789 | 3.5454545454545454
3: PNG|named capture group | 3.5454545454545454
4: ADD|one-or-more repetition | 1.8181818181818181
5: SNG|exactly n repetition | 0.8181818181818182
6: ANY|any non-newline char | 0.7272727272727273
7: END|end-of-line | 0.7272727272727273
8: KLE|zero-or-more repetition | 0.6363636363636364
9: STR|start-of-line | 0.6363636363636364
10: QST|zero-or-one repetition | 0.45454545454545453
11: CG|a capture group | 0.36363636363636365
12: OR|logical or | 0.36363636363636365
13: WRD|[a-zA-Z0-9\_] | 0.36363636363636365
14: NCG|group without capturing | 0.2727272727272727
15: CCC|custom character class | 0.18181818181818182
16: DBB|$n\le x \le m$ repetition | 0.09090909090909091
17: LZY|as few reps as possible | 0.09090909090909091


0000 | 0005 | '^601983(?P<copy>\\d{1})1(?P<jmbag>\\d{10})(?P<k>\\d{1})$'
0001 | 0004 | '(?P<table>\\w+)\\.(?P<field>\\w+)=(?P<value>.+)'
0002 | 0004 | '@(?P<dllname>.*),-(?P<index>\\d+)(?:;(?P<comment>.*))?'
0003 | 0003 | 'graph(?P<graphNumber>\\d+)_(?P<res>.*?)_?(?P<optNumber>\\d+)?$'
0004 | 0003 | u'^(?P<initial>\\d{1})(?P<yy>\\d\\d)(?P<mm>\\d\\d)(?P<dd>\\d\\d)(?P<mid>\\d{4})(?P<checksum>\\d{1})'
0005 | 0001 | '^(?P<area>[17]\\d\\d\\d)(?P<station>\\d+)$'
0006 | 0001 | '^(?P<z>\\d+)/(?P<x>\\d+)/(?P<y>\\d+)\\.(?P<e>\\w+)$'
0007 | 0001 | '^(?P<area>[235]\\d)(?P<area2>\\d{4})(?P<station>\\d+)$'
0008 | 0001 | '^(?P<area>1\\d1|11\\d|8\\d\\d)(?P<area2>\\d{3})(?P<station>\\d+)$'
0009 | 0001 | '(?:.*(/|\\\\))?(?P<artist>.*)(/|\\\\)(?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2}) - (?P<title>.*)\\.(?:\\w{2,5})$'
0010 | 0001 | '^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.\\d+)(rc(?P<release_candidate>\\d+))?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'



cluster 25 stats:
nPatterns: 9.0
nProjects: 23
shortest: \s+at\s(?P<file>[^:]+):?(?P<row>\d+)?:?(?P<col>\d+)?
Features:

1: LIT|a literal character | 19.88888888888889
2: ADD|one-or-more repetition | 4.444444444444445
3: PNG|named capture group | 4.111111111111111
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.7777777777777777
5: KLE|zero-or-more repetition | 2.2222222222222223
6: QST|zero-or-one repetition | 1.5555555555555556
7: DEC|any of: 0123456789 | 1.3333333333333333
8: ANY|any non-newline char | 1.1111111111111112
9: NCCC|negated CCC | 0.8888888888888888
10: CG|a capture group | 0.7777777777777778
11: WRD|[a-zA-Z0-9\_] | 0.5555555555555556
12: CCC|custom character class | 0.3333333333333333
13: END|end-of-line | 0.3333333333333333
14: OR|logical or | 0.3333333333333333
15: STR|start-of-line | 0.3333333333333333
16: LZY|as few reps as possible | 0.2222222222222222
17: NCG|group without capturing | 0.1111111111111111
18: NWSP|any non-whitespace | 0.1111111111111111


0000 | 0009 | '\\s*(?P<red>\\d+)\\s+(?P<green>\\d+)\\s+(?P<blue>\\d+)\\s+(?P<name>.*)'
0001 | 0003 | '^\\s*\\d+\\s+(?P<name>\\S+)\\s+(?P<size>-?\\d+)\\s+(?P<bytesLeaked>-?\\d+)\\s+-?\\d+\\s+(?P<numLeaked>-?\\d+)'
0002 | 0003 | 'DOCTYPE\\s+(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'
0003 | 0002 | '\\s+at\\s(?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?'
0004 | 0002 | '^\\s*@property(-(?P<type>read|write))?\\s+((?P<citdl>\\w+)\\s+)?(?P<name>\\$\\w+)(?:\\s+(?P<doc>.*?))?'
0005 | 0001 | '(?P<unsupported> \\.)? (?P<match> ((?P<scope> (\\w+\\.)* \\w+) \\.)? (?P<complete>\\w*) $)'
0006 | 0001 | '^.*: \\[Full GC (?P<start_size>[^ ]+)K->(?P<end_size>[^ ]+)K\\((?P<heap_size>[^ ]+)\\), (?P<gc_time>[^ ]+) secs\\]$'
0007 | 0001 | '((<property\\s+name="(?P<name>[^>]+)">(?P<text>.+?)</property>)|(?P<display><display\\s+call="(?P<command>[^"]+)">))'
0008 | 0001 | '(?P<type>[ACMD]) (?P<file>.*) (?P<revspec>rev:revid:[-\\d]+) (?P<parentrevspec>rev:revid:[-\\d]+) src:(?P<srcpath>.*) dst:(?P<dstpath>.*)$'



cluster 26 stats:
nPatterns: 3.0
nProjects: 22
shortest: (?:(\w+)=)?(.+)
Features:

1: LIT|a literal character | 2.3333333333333335
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.6666666666666667
4: ANY|any non-newline char | 1.0
5: NCG|group without capturing | 1.0
6: LZY|as few reps as possible | 0.6666666666666666
7: OR|logical or | 0.6666666666666666
8: QST|zero-or-one repetition | 0.6666666666666666
9: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
10: DBB|$n\le x \le m$ repetition | 0.3333333333333333


0000 | 0012 | '(?:(\\w+)=)?(.+)'
0001 | 0007 | 'a(?:b|(c|e){1,2}?|d)+?(.)'
0002 | 0003 | u'(?:(\\w+)=)?(.+)'



cluster 27 stats:
nPatterns: 6.0
nProjects: 22
shortest: [0-9]+:
Features:

1: LIT|a literal character | 4.833333333333333
2: RNG|chars within a range | 1.1666666666666667
3: CCC|custom character class | 1.0
4: ADD|one-or-more repetition | 0.8333333333333334
5: CG|a capture group | 0.8333333333333334
6: END|end-of-line | 0.6666666666666666
7: STR|start-of-line | 0.6666666666666666
8: KLE|zero-or-more repetition | 0.3333333333333333
9: ANY|any non-newline char | 0.16666666666666666
10: NCCC|negated CCC | 0.16666666666666666
11: OR|logical or | 0.16666666666666666


0000 | 0014 | '^(.*):([0-9]+)$'
0001 | 0002 | ':[0-9]*$'
0002 | 0002 | '^([0-9]+)$'
0003 | 0002 | '^md5=([a-f0-9]+)$'
0004 | 0001 | '[0-9]+:'
0005 | 0001 | '^(scsi|ide)[0-9]+[^:]'



cluster 28 stats:
nPatterns: 11.0
nProjects: 21
shortest: l[eo]af$
Features:

1: LIT|a literal character | 3.727272727272727
2: RNG|chars within a range | 1.1818181818181819
3: CCC|custom character class | 1.0909090909090908
4: SNG|exactly n repetition | 1.0
5: END|end-of-line | 0.8181818181818182
6: STR|start-of-line | 0.6363636363636364
7: DEC|any of: 0123456789 | 0.2727272727272727
8: WRD|[a-zA-Z0-9\_] | 0.18181818181818182
9: ANY|any non-newline char | 0.09090909090909091
10: CG|a capture group | 0.09090909090909091
11: DBB|$n\le x \le m$ repetition | 0.09090909090909091
12: KLE|zero-or-more repetition | 0.09090909090909091
13: QST|zero-or-one repetition | 0.09090909090909091


0000 | 0007 | '^py[0-9]{2}$'
0001 | 0003 | u'^[A-Z]{,3}$'
0002 | 0003 | '^#[0-9A-Fa-f]{6}$'
0003 | 0003 | u'^[1-9]\\d{2} ?\\d{2}$'
0004 | 0002 | '^[0-9]{2}$'
0005 | 0002 | '^[0-9]{4}$'
0006 | 0001 | 'l[eo]af$'
0007 | 0001 | '.*[0-9]{6}$'
0008 | 0001 | '[#][\\dA-F]{3}'
0009 | 0001 | '^[0-9A-Z\\.]{1,10}$'
0010 | 0001 | '([A-Z]{2}\\w{8})\\w{24}'



cluster 29 stats:
nPatterns: 2.0
nProjects: 20
shortest: &(?!(\w+|#\d+);)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: NLKA|sequence doesn't follow  | 1.0
6: OR|logical or | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0016 | '&(?!(\\w+|#\\d+);)'
0001 | 0004 | u'&(?!(\\w+|#\\d+);)'



cluster 30 stats:
nPatterns: 2.0
nProjects: 20
shortest: (\d{1,2})\.(\d{1,2})\.(\d{1,2})
Features:

1: LIT|a literal character | 6.5
2: CG|a capture group | 2.5
3: DBB|$n\le x \le m$ repetition | 2.5
4: DEC|any of: 0123456789 | 2.5
5: SNG|exactly n repetition | 0.5


0000 | 0019 | '(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})'
0001 | 0001 | 'inet addr:((\\d{1,3}\\.){3}\\d{1,3})'



cluster 31 stats:
nPatterns: 1.0
nProjects: 19
shortest: \$(\w+|\{[^}]*\})
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: OR|logical or | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0019 | '\\$(\\w+|\\{[^}]*\\})'



cluster 32 stats:
nPatterns: 1.0
nProjects: 19
shortest: (?<![\w])(\d+)L(?![\w])
Features:

1: CCC|custom character class | 2.0
2: WRD|[a-zA-Z0-9\_] | 2.0
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: LIT|a literal character | 1.0
7: NLKA|sequence doesn't follow  | 1.0
8: NLKB|sequence doesn't precede | 1.0


0000 | 0019 | '(?<![\\w])(\\d+)L(?![\\w])'



cluster 33 stats:
nPatterns: 2.0
nProjects: 19
shortest: <(/?)\s*i\s*>
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.0
5: QST|zero-or-one repetition | 1.0


0000 | 0016 | '<(/?)\\s*i\\s*>'
0001 | 0003 | u'<(/?)\\s*i\\s*>'



cluster 34 stats:
nPatterns: 1.0
nProjects: 18
shortest: ^\s*blocktrans(?:\s+|$)
Features:

1: LIT|a literal character | 10.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NCG|group without capturing | 1.0
7: OR|logical or | 1.0
8: STR|start-of-line | 1.0


0000 | 0018 | '^\\s*blocktrans(?:\\s+|$)'



cluster 35 stats:
nPatterns: 8.0
nProjects: 18
shortest: ^$
Features:

1: LIT|a literal character | 1.5
2: STR|start-of-line | 0.75
3: END|end-of-line | 0.625


0000 | 0007 | '^$'
0001 | 0004 | '^%'
0002 | 0001 | ' $'
0003 | 0001 | '^p'
0004 | 0001 | 'y$'
0005 | 0001 | '^  '
0006 | 0001 | '^!$'
0007 | 0001 | '^ja_JP$'



cluster 36 stats:
nPatterns: 1.0
nProjects: 17
shortest: ^running .*
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0


0000 | 0017 | '^running .*'



cluster 37 stats:
nPatterns: 2.0
nProjects: 17
shortest: (?:<p>(?:&nbsp;|\s|<br \/>)*?</p>\s*)+\Z
Features:

1: LIT|a literal character | 20.0
2: KLE|zero-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: NCG|group without capturing | 2.0
5: OR|logical or | 2.0
6: ADD|one-or-more repetition | 1.5
7: CG|a capture group | 1.0
8: DEC|any of: 0123456789 | 1.0
9: QST|zero-or-one repetition | 1.0
10: ENDZ|absolute end of string | 0.5
11: LZY|as few reps as possible | 0.5


0000 | 0016 | '(?:<p>(?:&nbsp;|\\s|<br \\/>)*?</p>\\s*)+\\Z'
0001 | 0001 | '<p>(?:\\s|<br\\s*/?>)*\\x07(\\d+)\\x07(?:\\s|<br\\s*/?>)*</p>|\\x07(\\d+)\\x07'



cluster 38 stats:
nPatterns: 9.0
nProjects: 17
shortest: (.{8})(.{4})(.{4})(.{4})(.{12})
Features:

1: LIT|a literal character | 9.444444444444445
2: DEC|any of: 0123456789 | 6.666666666666667
3: CG|a capture group | 6.0
4: SNG|exactly n repetition | 4.222222222222222
5: CCC|custom character class | 1.3333333333333333
6: ADD|one-or-more repetition | 0.8888888888888888
7: KLE|zero-or-more repetition | 0.8888888888888888
8: WNW|word/non-word boundary | 0.8888888888888888
9: WRD|[a-zA-Z0-9\_] | 0.8888888888888888
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.8888888888888888
11: ANY|any non-newline char | 0.7777777777777778
12: NCG|group without capturing | 0.7777777777777778
13: QST|zero-or-one repetition | 0.7777777777777778
14: OR|logical or | 0.6666666666666666
15: RNG|chars within a range | 0.5555555555555556
16: ENDZ|absolute end of string | 0.1111111111111111
17: LZY|as few reps as possible | 0.1111111111111111
18: NCCC|negated CCC | 0.1111111111111111
19: STR|start-of-line | 0.1111111111111111


0000 | 0008 | '(?:;\\s*|\\s+)(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*;|(?:\\(|\\[|;)\\s*(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*(?:\\]|\\)|;)'
0001 | 0003 | '(\\d{4})-(\\d{2})-(\\d{2})\\s+(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d+)?'
0002 | 0001 | '(.{8})(.{4})(.{4})(.{4})(.{12})'
0003 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'
0004 | 0001 | '([NS])(\\d\\d)_(\\d{6})([EW])(\\d\\d\\d)_(\\d{6})'
0005 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2}) / (\\d+)[\\s\t]*([0-9:, -]+)'
0006 | 0001 | '^(?:\\d{4}-\\d{2}-\\d{2} |)\\[?(\\d{2}:\\d{2}:\\d{2})\\]? \\[?(?:[^\\]]+?/|)([A-Z]+)\\]:? (.*)'
0007 | 0001 | 'B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5}).*\\Z'
0008 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'



cluster 39 stats:
nPatterns: 1.0
nProjects: 16
shortest: #.*
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0


0000 | 0016 | '#.*'



cluster 40 stats:
nPatterns: 1.0
nProjects: 16
shortest: ^-r\s*([^ ])?
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0
5: QST|zero-or-one repetition | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0016 | '^-r\\s*([^ ])?'



cluster 41 stats:
nPatterns: 1.0
nProjects: 16
shortest: hg\s*pull\s*(.*)\s*
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0


0000 | 0016 | 'hg\\s*pull\\s*(.*)\\s*'



cluster 42 stats:
nPatterns: 1.0
nProjects: 16
shortest: macosx-(\d+)\.(\d+)-(.*)
Features:

1: LIT|a literal character | 9.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: DEC|any of: 0123456789 | 2.0
5: ANY|any non-newline char | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0016 | 'macosx-(\\d+)\\.(\\d+)-(.*)'



cluster 43 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^\d{11}$
Features:

1: DEC|any of: 0123456789 | 1.0
2: END|end-of-line | 1.0
3: SNG|exactly n repetition | 1.0
4: STR|start-of-line | 1.0


0000 | 0012 | '^\\d{11}$'
0001 | 0003 | u'^\\d{11}$'



cluster 44 stats:
nPatterns: 2.0
nProjects: 15
shortest: \b\w+\b
Features:

1: LIT|a literal character | 2.0
2: WNW|word/non-word boundary | 1.5
3: ADD|one-or-more repetition | 0.5
4: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0015 | '\\b\\w+\\b'
0001 | 0007 | '\\\\EOF\\b'



cluster 45 stats:
nPatterns: 5.0
nProjects: 15
shortest: #[0-9a-fA-F]{3,6}
Features:

1: LIT|a literal character | 8.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.2
4: CG|a capture group | 0.6
5: DBB|$n\le x \le m$ repetition | 0.6
6: QST|zero-or-one repetition | 0.6
7: SNG|exactly n repetition | 0.4
8: ADD|one-or-more repetition | 0.2
9: NCG|group without capturing | 0.2
10: NLKA|sequence doesn't follow  | 0.2
11: OR|logical or | 0.2
12: WRD|[a-zA-Z0-9\_] | 0.2
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0004 | '%(?![0-9A-Fa-f]{2})'
0001 | 0004 | u'&(#?[xX]?(?:[0-9a-fA-F]+|\\w{1,8}));'
0002 | 0003 | '\\\\u([0-9a-fA-F]{4})'
0003 | 0003 | '\\\\([0-9a-fA-F]{1,6})\\s?'
0004 | 0001 | '#[0-9a-fA-F]{3,6}'



cluster 46 stats:
nPatterns: 1.0
nProjects: 14
shortest: ^[ \t]*$
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0014 | '^[ \t]*$'



cluster 47 stats:
nPatterns: 1.0
nProjects: 14
shortest: ^(.*)#([^#]*)$
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 2.0
3: LIT|a literal character | 2.0
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0
7: STR|start-of-line | 1.0


0000 | 0014 | '^(.*)#([^#]*)$'



cluster 48 stats:
nPatterns: 2.0
nProjects: 14
shortest: Control-
Features:

1: LIT|a literal character | 8.5


0000 | 0013 | 'Control-'
0001 | 0001 | 'Postponed'



cluster 49 stats:
nPatterns: 4.0
nProjects: 14
shortest: @code{(.*?)}
Features:

1: LIT|a literal character | 8.75
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: CG|a capture group | 0.75


0000 | 0009 | '@code{(.*?)}'
0001 | 0003 | '<tchar=(.*?)>'
0002 | 0001 | 'link="(.*?)"'
0003 | 0001 | 'line-height:.*?;'



cluster 50 stats:
nPatterns: 4.0
nProjects: 14
shortest: ^\d{4}-\d{1,2}-\d{1,2}$
Features:

1: LIT|a literal character | 5.0
2: DEC|any of: 0123456789 | 2.5
3: SNG|exactly n repetition | 2.0
4: CG|a capture group | 1.5
5: CCC|custom character class | 1.25
6: DBB|$n\le x \le m$ repetition | 0.75
7: END|end-of-line | 0.75
8: STR|start-of-line | 0.5
9: ADD|one-or-more repetition | 0.25
10: RNG|chars within a range | 0.25


0000 | 0009 | '^\\d{4}-\\d{1,2}-\\d{1,2}$'
0001 | 0003 | u'^(\\d{3})-(\\d{3})-(\\d{3})$'
0002 | 0001 | '\\.[a-z]+-\\d{2}[mud]{0,3}$'
0003 | 0001 | '/posts/([\\d]{4})/([\\d]{2})/([\\d]{2})'



cluster 51 stats:
nPatterns: 6.0
nProjects: 14
shortest: ^(?P<scheme>[a-zA-Z0-9]+)://                         # scheme\n                        ((?P<avatar>[^:@]+)(:(?P<password>[^@]+))?@)?       # avatar name and password (optional)\n                        (?P<host>[^:/]+)(:(?P<port>\d+))?                   # host, port (optional)\n                        (?P<path>/.*)                                       # path\n                       $
Features:

1: LIT|a literal character | 599.0
2: KLE|zero-or-more repetition | 9.833333333333334
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 6.166666666666667
4: ANY|any non-newline char | 5.166666666666667
5: CG|a capture group | 4.833333333333333
6: NCG|group without capturing | 4.5
7: QST|zero-or-one repetition | 4.5
8: RNG|chars within a range | 3.8333333333333335
9: CCC|custom character class | 3.5
10: NCCC|negated CCC | 3.0
11: PNG|named capture group | 2.6666666666666665
12: ADD|one-or-more repetition | 2.5
13: LZY|as few reps as possible | 2.5
14: END|end-of-line | 1.6666666666666667
15: OR|logical or | 1.6666666666666667
16: DEC|any of: 0123456789 | 1.3333333333333333
17: STR|start-of-line | 0.6666666666666666
18: DBB|$n\le x \le m$ repetition | 0.5
19: BKR|match the $i^{th}$ CG | 0.16666666666666666
20: ENDZ|absolute end of string | 0.16666666666666666
21: LKA|matching sequence follows | 0.16666666666666666
22: NWSP|any non-whitespace | 0.16666666666666666


0000 | 0003 | '        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)              # ...a number (with at least one digit)\n        (?P<int>\\d*)             # having a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'
0001 | 0003 | '    # indirect offset\n                ^\\(\n                (?P<base>&?0                  # just zero\n                        |&?[1-9]{1,1}[0-9]* # decimal\n                        |&?0[0-7]*          # octal\n                        |&?0x[0-9A-F]+      # hex\n                )\n                (?P<type>\n                        \\.         # this dot might be alone\n                        [BSL]? # one of this chars in either case\n                )?\n                (?P<sign>\n                        [-+]{0,1}\n                )?\n                (?P<off>0              # just zero\n                        |[1-9]{1,1}[0-9]*  # decimal\n                        |0[0-7]*           # octal\n                        |0x[0-9a-f]+       # hex\n                )?\n                \\)$'
0002 | 0003 | '^\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*list\\(\n                    (?:\n                        \\s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                        )\n                        \\s*,\\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s\\)][^,\\)]*?)       # unquoted\n                    )?                              # last one\n                \\)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\\s*,\\s*)|(?:\\s*$)            # comma\n        )\n    )\n    *'
0003 | 0002 | ' (                        # wrap whole match in $1\n                  !\\[\n                    (.*?)               # alt text = $2\n                  \\]\n                  \\(                    # literal paren\n                        [ \\t]*\n                        <?(\\S+?)>?      # src url = $3\n                        [ \\t]*\n                        (               # $4\n                        ([\\\'\\"])        # quote char = $5\n                          (.*?)         # title = $6\n                          \\5            # matching quote\n                          [ \\t]*\n                        )?              # title is optional\n                  \\)\n                )\n    '
0004 | 0001 | '^(?P<scheme>[a-zA-Z0-9]+)://                         # scheme\n                        ((?P<avatar>[^:@]+)(:(?P<password>[^@]+))?@)?       # avatar name and password (optional)\n                        (?P<host>[^:/]+)(:(?P<port>\\d+))?                   # host, port (optional)\n                        (?P<path>/.*)                                       # path\n                       $'
0005 | 0001 | '^\\s*AST_POLYMORPHIC_MATCHER(_P)?(.?)(?:_OVERLOAD)?\\(\n                          \\s*([^\\s,]+)\\s*,\n                          \\s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\\(([^)]*)\\)\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*([^\\s,]+)\\s*\n                          ,\\s*([^\\s,]+)\\s*)?\n                       (?:,\\s*\\d+\\s*)?\n                      \\)\\s*{\\s*$'



cluster 52 stats:
nPatterns: 1.0
nProjects: 13
shortest: ^ *\n
Features:

1: LIT|a literal character | 2.0
2: KLE|zero-or-more repetition | 1.0
3: STR|start-of-line | 1.0


0000 | 0013 | '^ *\n'



cluster 53 stats:
nPatterns: 4.0
nProjects: 13
shortest: \\\\
Features:

1: LIT|a literal character | 1.75
2: KLE|zero-or-more repetition | 0.25
3: NWSP|any non-whitespace | 0.25
4: OR|logical or | 0.25


0000 | 0007 | '\\\\\\\\'
0001 | 0003 | '\\\\*\\n'
0002 | 0002 | '\\*\\S'
0003 | 0001 | '\\n|\\\\'



cluster 54 stats:
nPatterns: 4.0
nProjects: 13
shortest: ({)|(})
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.25
3: SNG|exactly n repetition | 0.75
4: DEC|any of: 0123456789 | 0.5
5: OR|logical or | 0.5


0000 | 0009 | '({)|(})'
0001 | 0002 | '(\\d{4})'
0002 | 0002 | '(iex|\\.{3})> '
0003 | 0001 | '(\\d{3})'



cluster 55 stats:
nPatterns: 2.0
nProjects: 13
shortest: ^(?P<x>\d+)?(?:x(?P<y>\d+))?$
Features:

1: DEC|any of: 0123456789 | 2.0
2: PNG|named capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: END|end-of-line | 1.0
5: QST|zero-or-one repetition | 1.0
6: STR|start-of-line | 1.0
7: LIT|a literal character | 0.5
8: NCG|group without capturing | 0.5
9: SNG|exactly n repetition | 0.5


0000 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0001 | 0001 | '^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'



cluster 56 stats:
nPatterns: 3.0
nProjects: 13
shortest: [ \t]*File.*line (\d+)
Features:

1: LIT|a literal character | 18.333333333333332
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.6666666666666667
4: KLE|zero-or-more repetition | 1.6666666666666667
5: ADD|one-or-more repetition | 1.3333333333333333
6: DEC|any of: 0123456789 | 1.0
7: CCC|custom character class | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333
9: LZY|as few reps as possible | 0.3333333333333333
10: QST|zero-or-one repetition | 0.3333333333333333
11: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0011 | '(.*  )(\\w+)(( &lt;cycle.*&gt;)? \\[\\d+\\])\\n'
0001 | 0001 | '[ \t]*File.*line (\\d+)'
0002 | 0001 | 'LaTeX Warning.*?input line (\\d+).$'



cluster 57 stats:
nPatterns: 2.0
nProjects: 13
shortest: (?P<option>[^:=\s][^:=]*)\s*(?P<vi>[:=])\s*(?P<value>.*)$
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 4.0
3: PNG|named capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
5: NCCC|negated CCC | 2.0
6: ANY|any non-newline char | 1.0
7: CCC|custom character class | 1.0
8: END|end-of-line | 1.0
9: NCG|group without capturing | 0.5
10: QST|zero-or-one repetition | 0.5


0000 | 0013 | '(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'
0001 | 0003 | '(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$'



cluster 58 stats:
nPatterns: 1.0
nProjects: 12
shortest:  *, *
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0


0000 | 0012 | ' *, *'



cluster 59 stats:
nPatterns: 1.0
nProjects: 12
shortest: (?m)^\.
Features:

1: LIT|a literal character | 1.0
2: OPT|options wrapper | 1.0
3: STR|start-of-line | 1.0


0000 | 0012 | '(?m)^\\.'



cluster 60 stats:
nPatterns: 1.0
nProjects: 12
shortest: (\(|\)|\s+|-)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: OR|logical or | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0012 | '(\\(|\\)|\\s+|-)'



cluster 61 stats:
nPatterns: 2.0
nProjects: 12
shortest: ^[\d,]+$
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0
6: DEC|any of: 0123456789 | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0011 | '^[\\d,]+$'
0001 | 0001 | '^\\$[\\w=]+$'



cluster 62 stats:
nPatterns: 2.0
nProjects: 12
shortest: ##(?P<key>.+?)=(?P<val>.+)
Features:

1: LIT|a literal character | 4.0
2: PNG|named capture group | 2.0
3: ANY|any non-newline char | 1.5
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 0.5
6: KLE|zero-or-more repetition | 0.5
7: LZY|as few reps as possible | 0.5
8: STR|start-of-line | 0.5


0000 | 0011 | '^(?P<proto>unix):(?P<path>.*)$'
0001 | 0001 | '##(?P<key>.+?)=(?P<val>.+)'



cluster 63 stats:
nPatterns: 3.0
nProjects: 12
shortest: [\x01-\x1f]
Features:

1: LIT|a literal character | 3.6666666666666665
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0


0000 | 0008 | '[\\x00-\\x08\\x0e-\\x1f]'
0001 | 0002 | '[\x01-\x1f]'
0002 | 0002 | '[\x02\x1f\x16\x0f\x03]'



cluster 64 stats:
nPatterns: 3.0
nProjects: 12
shortest: ^/var/log/[^/]+$
Features:

1: LIT|a literal character | 12.0
2: KLE|zero-or-more repetition | 1.0
3: STR|start-of-line | 1.0
4: END|end-of-line | 0.6666666666666666
5: NCCC|negated CCC | 0.6666666666666666
6: ADD|one-or-more repetition | 0.3333333333333333
7: ANY|any non-newline char | 0.3333333333333333
8: PNG|named capture group | 0.3333333333333333


0000 | 0010 | '^#! */usr/local/bin/python'
0001 | 0001 | '^/var/log/[^/]+$'
0002 | 0001 | '^(?P<download_dir>.*/)[^/]*$'



cluster 65 stats:
nPatterns: 7.0
nProjects: 12
shortest: \d+(.\d*)?|.\d+
Features:

1: LIT|a literal character | 3.142857142857143
2: ADD|one-or-more repetition | 2.4285714285714284
3: CG|a capture group | 2.2857142857142856
4: DEC|any of: 0123456789 | 2.142857142857143
5: OR|logical or | 0.5714285714285714
6: QST|zero-or-one repetition | 0.5714285714285714
7: ANY|any non-newline char | 0.42857142857142855
8: WRD|[a-zA-Z0-9\_] | 0.2857142857142857
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2857142857142857
10: CCC|custom character class | 0.14285714285714285
11: END|end-of-line | 0.14285714285714285
12: KLE|zero-or-more repetition | 0.14285714285714285
13: NCG|group without capturing | 0.14285714285714285
14: NDEC|any non-decimal | 0.14285714285714285
15: SNG|exactly n repetition | 0.14285714285714285
16: STR|start-of-line | 0.14285714285714285


0000 | 0004 | '(\\d+)-(\\d+)-(\\d+)'
0001 | 0002 | '([idel])|(\\d+):|(-?\\d+)'
0002 | 0002 | '(id|.+_id)(\\d+)((?:-bb)?)'
0003 | 0001 | '\\d+(.\\d*)?|.\\d+'
0004 | 0001 | '\\w+ Y(\\d+) N(\\d+)'
0005 | 0001 | '^\\d+(-\\d+)?|\\.\\w+$'
0006 | 0001 | '(\\d+)\\s(\\D+)\\s(\\d{4})'



cluster 66 stats:
nPatterns: 4.0
nProjects: 12
shortest: \s?((["][^"]*["]|[\'][^\']*[\'])\s+dluohs)
Features:

1: LIT|a literal character | 15.25
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: NCG|group without capturing | 2.25
5: NCCC|negated CCC | 2.0
6: CG|a capture group | 1.75
7: LZY|as few reps as possible | 1.75
8: ADD|one-or-more repetition | 1.5
9: OR|logical or | 1.5
10: CCC|custom character class | 1.0
11: ANY|any non-newline char | 0.75
12: QST|zero-or-one repetition | 0.5
13: STR|start-of-line | 0.5
14: END|end-of-line | 0.25


0000 | 0004 | '^\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\\s*'
0001 | 0004 | u'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\\s*'
0002 | 0003 | '\\s?((["][^"]*["]|[\'][^\']*[\'])\\s+dluohs)'
0003 | 0001 | u'\\n\\s*ACCEPTS:\\s*((?:.|\\n)*?)(?:$|(?:\\n\\n))'



cluster 67 stats:
nPatterns: 1.0
nProjects: 11
shortest: /ParamTest
Features:

1: LIT|a literal character | 10.0


0000 | 0011 | '/ParamTest'



cluster 68 stats:
nPatterns: 1.0
nProjects: 11
shortest: \$else\s+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0011 | '\\$else\\s+'



cluster 69 stats:
nPatterns: 1.0
nProjects: 11
shortest: (In \[[0-9]+\]: )|(   \.\.\.+:)
Features:

1: LIT|a literal character | 16.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: CCC|custom character class | 1.0
5: OR|logical or | 1.0
6: RNG|chars within a range | 1.0


0000 | 0011 | '(In \\[[0-9]+\\]: )|(   \\.\\.\\.+:)'



cluster 70 stats:
nPatterns: 4.0
nProjects: 11
shortest: .*metis.*
Features:

1: LIT|a literal character | 9.5
2: ANY|any non-newline char | 2.25
3: KLE|zero-or-more repetition | 2.0


0000 | 0008 | '.*kallsyms.*'
0001 | 0001 | '.*metis.*'
0002 | 0001 | '.*mandriva.*'
0003 | 0001 | '.*film source: 29.97.*'



cluster 71 stats:
nPatterns: 6.0
nProjects: 11
shortest: \(.*$
Features:

1: LIT|a literal character | 2.3333333333333335
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 0.8333333333333334
4: KLE|zero-or-more repetition | 0.6666666666666666
5: ADD|one-or-more repetition | 0.16666666666666666
6: END|end-of-line | 0.16666666666666666
7: LZY|as few reps as possible | 0.16666666666666666
8: STR|start-of-line | 0.16666666666666666


0000 | 0003 | 'o:(.*)s'
0001 | 0003 | "'\\?(.)'"
0002 | 0002 | '\\?(.*)'
0003 | 0001 | '\\(.*$'
0004 | 0001 | '^//(.*)'
0005 | 0001 | '{{(.+?)}}'



cluster 72 stats:
nPatterns: 6.0
nProjects: 11
shortest: ^[a-z]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: END|end-of-line | 0.8333333333333334
4: RNG|chars within a range | 0.8333333333333334
5: STR|start-of-line | 0.8333333333333334
6: ADD|one-or-more repetition | 0.5
7: KLE|zero-or-more repetition | 0.16666666666666666


0000 | 0005 | '^[a-z]+$'
0001 | 0002 | u'^[ -~]*$'
0002 | 0001 | '^[a-z]'
0003 | 0001 | '[a-z%]+$'
0004 | 0001 | '^[+0-9]+$'
0005 | 0001 | '^-[LRuYz]$'



cluster 73 stats:
nPatterns: 6.0
nProjects: 11
shortest: sChamber=(\w)
Features:

1: LIT|a literal character | 12.333333333333334
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: ANY|any non-newline char | 0.3333333333333333
6: WRD|[a-zA-Z0-9\_] | 0.16666666666666666


0000 | 0004 | '\\d+ GNU.sparse.numbytes=(\\d+)\\n'
0001 | 0003 | 'successes=(\\d+)'
0002 | 0003 | 'expectedFailures=(\\d+)'
0003 | 0002 | u'cms/page/(\\d+)'
0004 | 0001 | 'sChamber=(\\w)'
0005 | 0001 | 'sms_so_l_(\\d+)'



cluster 74 stats:
nPatterns: 5.0
nProjects: 11
shortest: ^v(ersion)?\s*(\d+)
Features:

1: LIT|a literal character | 17.4
2: ADD|one-or-more repetition | 1.2
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: CCC|custom character class | 0.6
6: KLE|zero-or-more repetition | 0.6
7: WRD|[a-zA-Z0-9\_] | 0.4
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4
9: PNG|named capture group | 0.2
10: QST|zero-or-one repetition | 0.2
11: STR|start-of-line | 0.2


0000 | 0004 | '^v(ersion)?\\s*(\\d+)'
0001 | 0004 | '[\\?\\&]gsessionid=(\\w*\\-)'
0002 | 0001 | 'wx_major_version_number=(\\d+)'
0003 | 0001 | 'X-Transmission-Session-Id:\\s*(\\w+)'
0004 | 0001 | 'ATLAS version (?P<version>\\d+[.]\\d+[.]\\d+)'



cluster 75 stats:
nPatterns: 6.0
nProjects: 11
shortest: (\d+)\.(\d+)(\.(\d+))?(b(\d+))?
Features:

1: LIT|a literal character | 10.333333333333334
2: CG|a capture group | 4.0
3: DEC|any of: 0123456789 | 3.6666666666666665
4: ADD|one-or-more repetition | 3.1666666666666665
5: QST|zero-or-one repetition | 3.0
6: KLE|zero-or-more repetition | 1.3333333333333333
7: CCC|custom character class | 1.0
8: ANY|any non-newline char | 0.8333333333333334
9: END|end-of-line | 0.3333333333333333
10: NCG|group without capturing | 0.3333333333333333
11: WRD|[a-zA-Z0-9\_] | 0.3333333333333333
12: LZY|as few reps as possible | 0.16666666666666666
13: NCCC|negated CCC | 0.16666666666666666
14: OR|logical or | 0.16666666666666666


0000 | 0004 | '(\\d+)\\.(\\d+)(\\.(\\d+))?(b(\\d+))?'
0001 | 0002 | 'fail:(\\d+).*?fail:(\\d+).*fail:(\\d+)'
0002 | 0002 | '((?:[^{}]?[<>=^])?)([-+ ]?)(#?)(\\d*)(,?)((?:\\.\\d+)?)(.?)$'
0003 | 0001 | '(\\w+)\\((-?\\d+.?\\d*),(-?\\d+.?\\d*)\\)'
0004 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0005 | 0001 | "([\\w.!~*'|;:&=+$,-]+@)?\\d+\\.\\d+\\.\\d+\\.\\d+(:\\d*)*$"



cluster 76 stats:
nPatterns: 3.0
nProjects: 10
shortest: name="(.*?)"
Features:

1: LIT|a literal character | 12.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666


0000 | 0008 | 'name="(.*?)"'
0001 | 0001 | '"title":"(.*?)",'
0002 | 0001 | '<xnat:Subject\\sID="(.*?)"\\s'



cluster 77 stats:
nPatterns: 4.0
nProjects: 10
shortest: ^summary
Features:

1: LIT|a literal character | 12.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.75
3: KLE|zero-or-more repetition | 1.25
4: STR|start-of-line | 0.75
5: ADD|one-or-more repetition | 0.5
6: QST|zero-or-one repetition | 0.25


0000 | 0005 | '^\\.\\.\\s+autosummary::\\s*'
0001 | 0003 | '\\s*,?\\s*new Array\\('
0002 | 0001 | '^summary'
0003 | 0001 | '^\\s*\\.\\.\\s+autosummary::\\s*'



cluster 78 stats:
nPatterns: 5.0
nProjects: 10
shortest: nsyms\s+(\d+)
Features:

1: LIT|a literal character | 6.6
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: ANY|any non-newline char | 0.2
7: KLE|zero-or-more repetition | 0.2


0000 | 0006 | 'nsyms\\s+(\\d+)'
0001 | 0003 | 'MemFree:\\s+(\\d+).*'
0002 | 0002 | 'Target\\s+(\\d+)'
0003 | 0001 | 'UNSEEN\\s+(\\d+)'
0004 | 0001 | 'MESSAGES\\s+(\\d+)'



cluster 79 stats:
nPatterns: 2.0
nProjects: 10
shortest: ([^\'"<>]|"[^"]*"(?=>|/|\s|\w+=)|\'[^\']*\'(?=>|/|\s|\w+=))*(?=[<>])|.*?(?=[<>])
Features:

1: LIT|a literal character | 27.0
2: NCCC|negated CCC | 3.5
3: KLE|zero-or-more repetition | 3.0
4: OR|logical or | 3.0
5: ADD|one-or-more repetition | 2.5
6: LKA|matching sequence follows | 2.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
8: CCC|custom character class | 1.5
9: CG|a capture group | 1.5
10: QST|zero-or-one repetition | 1.0
11: WRD|[a-zA-Z0-9\_] | 1.0
12: ANY|any non-newline char | 0.5
13: LZY|as few reps as possible | 0.5
14: NCG|group without capturing | 0.5


0000 | 0007 | '([^\'"<>]|"[^"]*"(?=>|/|\\s|\\w+=)|\'[^\']*\'(?=>|/|\\s|\\w+=))*(?=[<>])|.*?(?=[<>])'
0001 | 0003 | '(\'[^\']*\'|"[^"]*"|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/\\[\\]\\(\\)@=\\s]+)|\\s+'



cluster 80 stats:
nPatterns: 8.0
nProjects: 10
shortest: name=\"q\">([^<]*)
Features:

1: LIT|a literal character | 14.75
2: CG|a capture group | 1.125
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0
5: ADD|one-or-more repetition | 0.5
6: WNW|word/non-word boundary | 0.375
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.375
8: ANY|any non-newline char | 0.125
9: DEC|any of: 0123456789 | 0.125
10: OPT|options wrapper | 0.125
11: QST|zero-or-one repetition | 0.125


0000 | 0003 | '\\sfile:\\s+"([^"]*)"'
0001 | 0002 | '(?m)&mediaURL=([^&]+)'
0002 | 0001 | 'name=\\"q\\">([^<]*)'
0003 | 0001 | ' *\\bservicefp="([^"]*)"'
0004 | 0001 | 'L"\\\\0(\\d)" L"([^"]*)"'
0005 | 0001 | 'invalid cidr value: "([^"]+)"'
0006 | 0001 | 'id="__VIEWSTATE" value="([^"]*)"'
0007 | 0001 | '\\s*<?xml\\b.*\\bencoding="([^"]+)"'



cluster 81 stats:
nPatterns: 1.0
nProjects: 9
shortest: \\line([iv]+){
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0


0000 | 0009 | '\\\\line([iv]+){'



cluster 82 stats:
nPatterns: 1.0
nProjects: 9
shortest: ([a-z0-9])([A-Z])
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0


0000 | 0009 | '([a-z0-9])([A-Z])'



cluster 83 stats:
nPatterns: 4.0
nProjects: 9
shortest: #.*$
Features:

1: LIT|a literal character | 1.5
2: ANY|any non-newline char | 1.25
3: KLE|zero-or-more repetition | 0.75
4: CG|a capture group | 0.5
5: END|end-of-line | 0.25


0000 | 0003 | '#.*$'
0001 | 0002 | '(.*)'
0002 | 0001 | '%(..)'
0003 | 0001 | '/\\(.*\\)/'



cluster 84 stats:
nPatterns: 3.0
nProjects: 9
shortest: (?<!\\),
Features:

1: LIT|a literal character | 2.3333333333333335
2: NLKB|sequence doesn't precede | 1.0


0000 | 0005 | '(?<!\\\\),'
0001 | 0004 | u'(?<!%)%s'
0002 | 0001 | '(?<!\\\\)\\|'



cluster 85 stats:
nPatterns: 3.0
nProjects: 9
shortest: (?i)python.exe
Features:

1: LIT|a literal character | 10.333333333333334
2: ANY|any non-newline char | 1.0
3: OPT|options wrapper | 1.0
4: CG|a capture group | 0.6666666666666666
5: KLE|zero-or-more repetition | 0.6666666666666666


0000 | 0007 | '(?i)python.exe'
0001 | 0002 | '(?i)handy(.*)nummer'
0002 | 0002 | '(?i)pager(.*)nummer'



cluster 86 stats:
nPatterns: 3.0
nProjects: 9
shortest: ^MemTotal:\s*(\d*)\s*kB
Features:

1: LIT|a literal character | 10.666666666666666
2: KLE|zero-or-more repetition | 2.6666666666666665
3: CG|a capture group | 1.6666666666666667
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.6666666666666667
5: ANY|any non-newline char | 1.0
6: NWRD|non-word chars | 1.0
7: LZY|as few reps as possible | 0.6666666666666666
8: STR|start-of-line | 0.6666666666666666
9: ADD|one-or-more repetition | 0.3333333333333333
10: DEC|any of: 0123456789 | 0.3333333333333333
11: END|end-of-line | 0.3333333333333333
12: SNG|exactly n repetition | 0.3333333333333333


0000 | 0007 | '^\\s+:toctree:\\s*(.*?)\\s*$'
0001 | 0001 | '^MemTotal:\\s*(\\d*)\\s*kB'
0002 | 0001 | '(#\trenamed:\\W{4})(.*?)\\W->\\W(.*)'



cluster 87 stats:
nPatterns: 5.0
nProjects: 9
shortest: (\d+) seconds
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: QST|zero-or-one repetition | 0.2


0000 | 0004 | 'Ran (\\d+) tests'
0001 | 0002 | '(\\d+) megabytes'
0002 | 0001 | '(\\d+) seconds'
0003 | 0001 | '(\\d+) leaks? excluded'
0004 | 0001 | 'Job <(\\d+)>: Job has already finished'



cluster 88 stats:
nPatterns: 2.0
nProjects: 8
shortest: b*
Features:

1: LIT|a literal character | 1.0
2: ADD|one-or-more repetition | 0.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0008 | 'b*'
0001 | 0008 | 'b+'



cluster 89 stats:
nPatterns: 1.0
nProjects: 8
shortest: Wrote: (.*)
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0008 | 'Wrote: (.*)'



cluster 90 stats:
nPatterns: 1.0
nProjects: 8
shortest: ^(\w){1,2}$
Features:

1: CG|a capture group | 1.0
2: DBB|$n\le x \le m$ repetition | 1.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0008 | '^(\\w){1,2}$'



cluster 91 stats:
nPatterns: 1.0
nProjects: 8
shortest: (a(?!\s[abc]))
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: NLKA|sequence doesn't follow  | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0008 | '(a(?!\\s[abc]))'



cluster 92 stats:
nPatterns: 1.0
nProjects: 8
shortest: \s*/\*\s*\*/
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0008 | '\\s*/\\*\\s*\\*/'



cluster 93 stats:
nPatterns: 1.0
nProjects: 8
shortest: [a-f0-9]+\s+<.*:$
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: RNG|chars within a range | 2.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0008 | '[a-f0-9]+\\s+<.*:$'



cluster 94 stats:
nPatterns: 1.0
nProjects: 8
shortest: \{include\s+file=.*?\}
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0008 | '\\{include\\s+file=.*?\\}'



cluster 95 stats:
nPatterns: 2.0
nProjects: 8
shortest: <!--|-->
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 0.5
3: KLE|zero-or-more repetition | 0.5
4: LZY|as few reps as possible | 0.5
5: OPT|options wrapper | 0.5
6: OR|logical or | 0.5


0000 | 0006 | '<!--|-->'
0001 | 0002 | '(?s)<!--.*?-->'



cluster 96 stats:
nPatterns: 3.0
nProjects: 8
shortest: {([^}]*)}(.*)
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ANY|any non-newline char | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0004 | '{([^}]*)}(.*)'
0001 | 0002 | '([^#:]*#)(.*)'
0002 | 0002 | '  ([^:]*):  (.*)'



cluster 97 stats:
nPatterns: 3.0
nProjects: 8
shortest: ^https?://\S+$
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: QST|zero-or-one repetition | 0.6666666666666666
4: STR|start-of-line | 0.6666666666666666
5: ANY|any non-newline char | 0.3333333333333333
6: CG|a capture group | 0.3333333333333333
7: END|end-of-line | 0.3333333333333333
8: NCCC|negated CCC | 0.3333333333333333
9: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0006 | '^https?://\\S+$'
0001 | 0001 | '^https?:\\/\\/.+'
0002 | 0001 | '(http://[^/]+):80'



cluster 98 stats:
nPatterns: 4.0
nProjects: 8
shortest: ^..?\...?
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 2.0
3: STR|start-of-line | 1.0
4: END|end-of-line | 0.75
5: KLE|zero-or-more repetition | 0.75
6: QST|zero-or-one repetition | 0.5


0000 | 0006 | '^..?\\...?'
0001 | 0001 | '^.*\\.xsd$'
0002 | 0001 | '^.*\\.zip$'
0003 | 0001 | '^.*\\.tar.bz2$'



cluster 99 stats:
nPatterns: 3.0
nProjects: 8
shortest: ^ *(.*) *( *) *$
Features:

1: LIT|a literal character | 3.6666666666666665
2: KLE|zero-or-more repetition | 2.6666666666666665
3: CG|a capture group | 2.3333333333333335
4: ANY|any non-newline char | 1.6666666666666667
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: ADD|one-or-more repetition | 0.3333333333333333
8: OR|logical or | 0.3333333333333333


0000 | 0003 | '^ *(.*) *( *) *$'
0001 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0002 | 0002 | '^(Q|QQ)\\<(.+)\\>$'



cluster 100 stats:
nPatterns: 4.0
nProjects: 8
shortest: (.+)=(.+)
Features:

1: LIT|a literal character | 3.5
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 1.5
5: ADD|one-or-more repetition | 0.5
6: QST|zero-or-one repetition | 0.5
7: LZY|as few reps as possible | 0.25


0000 | 0003 | '(.+)=(.+)'
0001 | 0003 | '(.*)//(.*)'
0002 | 0001 | '(.*?)=(.*)'
0003 | 0001 | "u?'(.*)' != u?'(.*)'"



cluster 101 stats:
nPatterns: 5.0
nProjects: 8
shortest: Debian
Features:

1: LIT|a literal character | 8.6


0000 | 0002 | 'Debian'
0001 | 0002 | 'Resigned'
0002 | 0001 | 'Resolved'
0003 | 0001 | 'Response:'
0004 | 0001 | 'CyrixInstead'



cluster 102 stats:
nPatterns: 6.0
nProjects: 8
shortest: \s*\;\s*
Features:

1: LIT|a literal character | 4.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.6666666666666667
3: KLE|zero-or-more repetition | 1.5
4: ADD|one-or-more repetition | 0.3333333333333333


0000 | 0004 | '\\s*SELECT'
0001 | 0001 | '\\s*=+>\\s*'
0002 | 0001 | '\\s*\\;\\s*'
0003 | 0001 | '\\*/\\s+/\\*'
0004 | 0001 | '\\s*\\*/\\s*'
0005 | 0001 | '\\s*longitude\\s*'



cluster 103 stats:
nPatterns: 7.0
nProjects: 8
shortest: [\w\.]+
Features:

1: LIT|a literal character | 2.7142857142857144
2: ADD|one-or-more repetition | 0.8571428571428571
3: CCC|custom character class | 0.7142857142857143
4: WRD|[a-zA-Z0-9\_] | 0.42857142857142855
5: NCCC|negated CCC | 0.2857142857142857
6: END|end-of-line | 0.14285714285714285
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0003 | '[-/.: ]+'
0001 | 0001 | '[\\w\\.]+'
0002 | 0001 | '[^\\w\\-]'
0003 | 0001 | '[\'"\\s;]+'
0004 | 0001 | '[\t\r\n]+$'
0005 | 0001 | '[^\\w\\-]+'
0006 | 0001 | '[ _.\\[\\]]+'



cluster 104 stats:
nPatterns: 6.0
nProjects: 8
shortest: [^\w\-\.\/]+
Features:

1: LIT|a literal character | 6.166666666666667
2: ADD|one-or-more repetition | 0.8333333333333334
3: CCC|custom character class | 0.8333333333333334
4: WRD|[a-zA-Z0-9\_] | 0.8333333333333334
5: DEC|any of: 0123456789 | 0.5
6: KLE|zero-or-more repetition | 0.16666666666666666
7: NCCC|negated CCC | 0.16666666666666666
8: RNG|chars within a range | 0.16666666666666666


0000 | 0002 | '[^\\w\\-\\.\\/]+'
0001 | 0002 | 'repo\\=cdrom[\\:\\w\\d\\/]*'
0002 | 0001 | '[\\w\\d\\-_\\.]+'
0003 | 0001 | '[\\w\\d_\\.\\-]+'
0004 | 0001 | '[.:, !?+=\\(\\)/]+'
0005 | 0001 | '[\\w0-9\\.\\_\\-]+'



cluster 105 stats:
nPatterns: 3.0
nProjects: 8
shortest: ^\s*\|\s.*\s\|\s*$|^\s*\+[=+-]+\+\s*$
Features:

1: LIT|a literal character | 21.0
2: KLE|zero-or-more repetition | 5.333333333333333
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.666666666666667
4: ANY|any non-newline char | 2.0
5: ADD|one-or-more repetition | 1.3333333333333333
6: END|end-of-line | 1.3333333333333333
7: STR|start-of-line | 1.3333333333333333
8: OR|logical or | 1.0
9: CG|a capture group | 0.6666666666666666
10: CCC|custom character class | 0.3333333333333333
11: NCG|group without capturing | 0.3333333333333333
12: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0006 | '^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$'
0001 | 0001 | '^\\s*(else.*|end\\s*|elsif.*|rescue.*|when.*|ensure.*)$'
0002 | 0001 | '^\\s*//\\s*wxGlade:\\s*add\\s+((?:\\w|:)+)\\s+event handlers\\s*$'



cluster 106 stats:
nPatterns: 6.0
nProjects: 8
shortest: VERSION.*'(.+)'
Features:

1: LIT|a literal character | 23.666666666666668
2: ADD|one-or-more repetition | 1.1666666666666667
3: CG|a capture group | 1.1666666666666667
4: DEC|any of: 0123456789 | 0.6666666666666666
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
6: ANY|any non-newline char | 0.3333333333333333
7: CCC|custom character class | 0.3333333333333333
8: KLE|zero-or-more repetition | 0.3333333333333333
9: NWRD|non-word chars | 0.3333333333333333
10: RNG|chars within a range | 0.3333333333333333
11: END|end-of-line | 0.16666666666666666
12: STR|start-of-line | 0.16666666666666666


0000 | 0003 | '#define\\WDB_VERSION_PATCH\\W(\\d+)'
0001 | 0003 | '^\\s*public static final int ([A-Z_]+) = (\\d+);$'
0002 | 0001 | "VERSION.*'(.+)'"
0003 | 0001 | 'LL_VERSION_MINOR\\s=\\s([0-9]+)'
0004 | 0001 | 'const S32 LL_VERSION_MAJOR = (\\d+);'
0005 | 0001 | 'const S32 LL_VERSION_PATCH = (\\d+);'



cluster 107 stats:
nPatterns: 1.0
nProjects: 7
shortest: ([\t ]+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0


0000 | 0007 | '([\\t ]+)'



cluster 108 stats:
nPatterns: 1.0
nProjects: 7
shortest: \s*-e\s+
Features:

1: LIT|a literal character | 2.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0007 | '\\s*-e\\s+'



cluster 109 stats:
nPatterns: 1.0
nProjects: 7
shortest: ([(\[{])|([)}\])])
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 2.0
3: CG|a capture group | 2.0
4: OR|logical or | 1.0


0000 | 0007 | '([(\\[{])|([)}\\])])'



cluster 110 stats:
nPatterns: 1.0
nProjects: 7
shortest: \s*-e\s+.*#egg=(.*)$
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 3.0
3: ANY|any non-newline char | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0


0000 | 0007 | '\\s*-e\\s+.*#egg=(.*)$'



cluster 111 stats:
nPatterns: 1.0
nProjects: 7
shortest: \s*([a-f0-9]+):\s*(\S.*)
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 3.0
3: CG|a capture group | 2.0
4: RNG|chars within a range | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ADD|one-or-more repetition | 1.0
7: ANY|any non-newline char | 1.0
8: CCC|custom character class | 1.0
9: NWSP|any non-whitespace | 1.0


0000 | 0007 | '\\s*([a-f0-9]+):\\s*(\\S.*)'



cluster 112 stats:
nPatterns: 3.0
nProjects: 7
shortest: ife$
Features:

1: LIT|a literal character | 5.0
2: END|end-of-line | 0.3333333333333333


0000 | 0004 | 'digest '
0001 | 0002 | 'test4'
0002 | 0001 | 'ife$'



cluster 113 stats:
nPatterns: 1.0
nProjects: 7
shortest: ^[ ]{4,7}((\d+\.)|[*+-])[ ].*
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 3.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: DBB|$n\le x \le m$ repetition | 1.0
7: DEC|any of: 0123456789 | 1.0
8: KLE|zero-or-more repetition | 1.0
9: OR|logical or | 1.0
10: STR|start-of-line | 1.0


0000 | 0007 | '^[ ]{4,7}((\\d+\\.)|[*+-])[ ].*'



cluster 114 stats:
nPatterns: 2.0
nProjects: 7
shortest: (.*[*?[\\]|ignorecase\:)
Features:

1: LIT|a literal character | 11.0
2: CG|a capture group | 2.0
3: CCC|custom character class | 1.5
4: KLE|zero-or-more repetition | 1.5
5: ANY|any non-newline char | 1.0
6: LZY|as few reps as possible | 0.5
7: OR|logical or | 0.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0006 | '(.*?[\\[\\{\\(,])(\\s*)([\\[\\{\\(])'
0001 | 0001 | '(.*[*?[\\\\]|ignorecase\\:)'



cluster 115 stats:
nPatterns: 3.0
nProjects: 7
shortest: (.*) \(([0-9]+)\)$
Features:

1: LIT|a literal character | 9.666666666666666
2: CG|a capture group | 1.3333333333333333
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: RNG|chars within a range | 1.0
6: ANY|any non-newline char | 0.6666666666666666
7: END|end-of-line | 0.3333333333333333
8: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0004 | '(.*) \\(([0-9]+)\\)$'
0001 | 0002 | '\\("id", "([0-9]+)"\\);'
0002 | 0001 | '(.cp\\(tt[0-9{7}]+\\))'



cluster 116 stats:
nPatterns: 2.0
nProjects: 7
shortest: Line:(?P<line>\d+)\s*(?P<message>.+)
Features:

1: LIT|a literal character | 5.5
2: KLE|zero-or-more repetition | 2.0
3: PNG|named capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
8: DEC|any of: 0123456789 | 0.5
9: NCCC|negated CCC | 0.5
10: QST|zero-or-one repetition | 0.5


0000 | 0005 | '[*]\\[(?P<abbr>[^\\]]*)\\][ ]?:\\s*(?P<title>.*)'
0001 | 0002 | 'Line:(?P<line>\\d+)\\s*(?P<message>.+)'



cluster 117 stats:
nPatterns: 5.0
nProjects: 7
shortest:   http://
Features:

1: LIT|a literal character | 11.0
2: NLKB|sequence doesn't precede | 0.6
3: QST|zero-or-one repetition | 0.6
4: ADD|one-or-more repetition | 0.4
5: ANY|any non-newline char | 0.4
6: CG|a capture group | 0.4
7: KLE|zero-or-more repetition | 0.2
8: OR|logical or | 0.2


0000 | 0002 | '  http://'
0001 | 0002 | 'https?://.*'
0002 | 0001 | '(/s/https?:)/+'
0003 | 0001 | '/project(s)?|//.+'
0004 | 0001 | '(?<!http:)(?<!https:)(?<!ftp:)//'



cluster 118 stats:
nPatterns: 4.0
nProjects: 7
shortest: (\d+\.\d+(\.\d+)?)
Features:

1: LIT|a literal character | 11.75
2: DEC|any of: 0123456789 | 2.0
3: ADD|one-or-more repetition | 1.75
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 0.75
6: ANY|any non-newline char | 0.5
7: CCC|custom character class | 0.25
8: QST|zero-or-one repetition | 0.25
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0004 | '.*/.*_V(\\d+\\.\\d+)/mongo'
0001 | 0001 | '(\\d+\\.\\d+(\\.\\d+)?)'
0002 | 0001 | '/libedit[\\.\\d+]*\\.dylib\\s'
0003 | 0001 | 'WordNet (\\d+\\.\\d+) Copyright'



cluster 119 stats:
nPatterns: 6.0
nProjects: 7
shortest: ^JSC::UString$
Features:

1: LIT|a literal character | 16.833333333333332
2: ANY|any non-newline char | 0.8333333333333334
3: END|end-of-line | 0.6666666666666666
4: STR|start-of-line | 0.6666666666666666
5: KLE|zero-or-more repetition | 0.3333333333333333
6: ADD|one-or-more repetition | 0.16666666666666666
7: QST|zero-or-one repetition | 0.16666666666666666


0000 | 0004 | 'searchplugins\\/.+\\.xml'
0001 | 0001 | '^JSC::UString$'
0002 | 0001 | '^WTF::CString$'
0003 | 0001 | '%search_string%'
0004 | 0001 | '^Table B.1.? .* Private .*$'
0005 | 0001 | '^WebCore::KURLGooglePrivate$'



cluster 120 stats:
nPatterns: 3.0
nProjects: 7
shortest: ([+-])?(?:(?:(\d?\d):)?(\d?\d):)?(\d?\d)\Z
Features:

1: LIT|a literal character | 9.666666666666666
2: DEC|any of: 0123456789 | 5.666666666666667
3: CG|a capture group | 5.333333333333333
4: ADD|one-or-more repetition | 4.333333333333333
5: QST|zero-or-one repetition | 2.6666666666666665
6: NCG|group without capturing | 1.3333333333333333
7: CCC|custom character class | 0.3333333333333333
8: ENDZ|absolute end of string | 0.3333333333333333
9: END|end-of-line | 0.3333333333333333
10: WRD|[a-zA-Z0-9\_] | 0.3333333333333333
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0005 | '\\s+{(\\d+), "(\\w+)", (\\d+), (\\d+), states_(\\d+),$'
0001 | 0001 | '([+-])?(?:(?:(\\d?\\d):)?(\\d?\\d):)?(\\d?\\d)\\Z'
0002 | 0001 | '(\\d+)-(\\d+)-(\\d+)(?: (\\d+):(\\d+):(\\d+)(?:\\.(\\d+))?)?'



cluster 121 stats:
nPatterns: 4.0
nProjects: 7
shortest: ^http://instagr\.am/p/[\S]*$
Features:

1: LIT|a literal character | 28.5
2: CCC|custom character class | 0.75
3: END|end-of-line | 0.75
4: STR|start-of-line | 0.75
5: ADD|one-or-more repetition | 0.5
6: ANY|any non-newline char | 0.5
7: KLE|zero-or-more repetition | 0.5
8: QST|zero-or-one repetition | 0.5
9: CG|a capture group | 0.25
10: NCCC|negated CCC | 0.25
11: NWSP|any non-whitespace | 0.25
12: RNG|chars within a range | 0.25
13: SNG|exactly n repetition | 0.25
14: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0004 | '^https?://github.com/[^/]+/?$'
0001 | 0001 | '^http://instagr\\.am/p/[\\S]*$'
0002 | 0001 | 'http://.*imdb\\.com/title/tt([0-9]{7})/quotes'
0003 | 0001 | '^http://www\\.google\\.com/calendar/embed\\?[\\w&;=\\%]+$'



cluster 122 stats:
nPatterns: 3.0
nProjects: 7
shortest: {{[ ]?placeholder[ ]?\([ ]?"(?P<placeholder>[a-zA-Z0-9]+)"[ ]?\)[ ]?}}
Features:

1: LIT|a literal character | 21.0
2: QST|zero-or-one repetition | 4.666666666666667
3: CCC|custom character class | 4.0
4: PNG|named capture group | 3.0
5: RNG|chars within a range | 3.0
6: KLE|zero-or-more repetition | 2.3333333333333335
7: ADD|one-or-more repetition | 0.6666666666666666
8: ANY|any non-newline char | 0.6666666666666666
9: CG|a capture group | 0.6666666666666666
10: LZY|as few reps as possible | 0.6666666666666666
11: NCG|group without capturing | 0.6666666666666666
12: BKRN|references NCG | 0.3333333333333333
13: END|end-of-line | 0.3333333333333333
14: LWB|at least n repetition | 0.3333333333333333
15: OR|logical or | 0.3333333333333333
16: STR|start-of-line | 0.3333333333333333
17: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0004 | '(?P<fence>^~{3,})[ ]*(\\{?\\.(?P<lang>[a-zA-Z0-9_-]*)\\}?)?[ ]*\\n(?P<code>.*?)(?P=fence)[ ]*$'
0001 | 0003 | '(?P<replace>(?P<type>[\\^](?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'
0002 | 0001 | '{{[ ]?placeholder[ ]?\\([ ]?"(?P<placeholder>[a-zA-Z0-9]+)"[ ]?\\)[ ]?}}'



cluster 123 stats:
nPatterns: 2.0
nProjects: 7
shortest: (?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\w+).framework/\n    (?:Versions/(?P<version>[^/]+)/)?\n    (?P=shortname)\n    (?:_(?P<suffix>[^_]+))?\n)$\n
Features:

1: LIT|a literal character | 44.5
2: PNG|named capture group | 7.0
3: QST|zero-or-one repetition | 5.5
4: ADD|one-or-more repetition | 2.5
5: NCG|group without capturing | 2.5
6: ANY|any non-newline char | 1.5
7: CCC|custom character class | 1.5
8: STR|start-of-line | 1.5
9: DEC|any of: 0123456789 | 1.0
10: NCCC|negated CCC | 1.0
11: NLKA|sequence doesn't follow  | 1.0
12: OR|logical or | 1.0
13: BKRN|references NCG | 0.5
14: ENDZ|absolute end of string | 0.5
15: END|end-of-line | 0.5
16: KLE|zero-or-more repetition | 0.5
17: OPT|options wrapper | 0.5
18: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0007 | '(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+).framework/\n    (?:Versions/(?P<version>[^/]+)/)?\n    (?P=shortname)\n    (?:_(?P<suffix>[^_]+))?\n)$\n'
0001 | 0001 | '\\A\n(?:\n   (?P<fill>.)?\n   (?P<align>[<>=^])\n)?\n(?P<sign>[-+ ])?\n(?P<alt>\\#)?\n(?P<zeropad>0)?\n(?P<minimumwidth>(?!0)\\d+)?\n(?P<thousands_sep>,)?\n(?:\\.(?P<precision>0|(?!0)\\d+))?\n(?P<type>[eEfFgGn%])?\n\\Z\n'



cluster 124 stats:
nPatterns: 1.0
nProjects: 6
shortest: ^Expected$
Features:

1: LIT|a literal character | 8.0
2: END|end-of-line | 1.0
3: STR|start-of-line | 1.0


0000 | 0006 | '^Expected$'



cluster 125 stats:
nPatterns: 1.0
nProjects: 6
shortest: \([^)]*\)
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0


0000 | 0006 | '\\([^)]*\\)'



cluster 126 stats:
nPatterns: 1.0
nProjects: 6
shortest: &#(\d+|[xX][0-9a-fA-F]+);
Features:

1: LIT|a literal character | 11.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 2.0
4: CCC|custom character class | 2.0
5: CG|a capture group | 1.0
6: DEC|any of: 0123456789 | 1.0
7: OR|logical or | 1.0


0000 | 0006 | '&#(\\d+|[xX][0-9a-fA-F]+);'



cluster 127 stats:
nPatterns: 3.0
nProjects: 6
shortest: ^/dev/
Features:

1: LIT|a literal character | 7.0
2: STR|start-of-line | 0.6666666666666666
3: ADD|one-or-more repetition | 0.3333333333333333
4: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0003 | '^/dev/'
0001 | 0002 | '/dev/vd\\S+'
0002 | 0001 | '^/cgi-bin/'



cluster 128 stats:
nPatterns: 1.0
nProjects: 6
shortest: ,\s*([^\s;,\n]+)(?:[^,]*?;\s*q=([0-9.]*))?
Features:

1: LIT|a literal character | 11.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: CG|a capture group | 2.0
5: NCCC|negated CCC | 2.0
6: ADD|one-or-more repetition | 1.0
7: CCC|custom character class | 1.0
8: LZY|as few reps as possible | 1.0
9: NCG|group without capturing | 1.0
10: QST|zero-or-one repetition | 1.0
11: RNG|chars within a range | 1.0


0000 | 0006 | ',\\s*([^\\s;,\\n]+)(?:[^,]*?;\\s*q=([0-9.]*))?'



cluster 129 stats:
nPatterns: 3.0
nProjects: 6
shortest: ([0-9\-]+)
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 1.3333333333333333
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 0.6666666666666666


0000 | 0004 | ' at 0x[0-9a-f]+'
0001 | 0001 | '([0-9\\-]+)'
0002 | 0001 | '@([a-z_]+)@'



cluster 130 stats:
nPatterns: 3.0
nProjects: 6
shortest: [\r\n]*
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 1.0
3: CCC|custom character class | 0.6666666666666666
4: NCCC|negated CCC | 0.3333333333333333
5: NWSP|any non-whitespace | 0.3333333333333333
6: VWSP|matches U+000B | 0.3333333333333333
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0004 | '%[^\\r\\n\\v]*'
0001 | 0001 | '[\r\n]*'
0002 | 0001 | '</TEXT>[\\s\\S]*'



cluster 131 stats:
nPatterns: 1.0
nProjects: 6
shortest: (?:http://)?(?:(?P<user>\w+):(?P<pass>.*)@)?(?P<host>[\w\-\.]+)(?::(?P<port>\d+))?
Features:

1: LIT|a literal character | 12.0
2: PNG|named capture group | 4.0
3: ADD|one-or-more repetition | 3.0
4: NCG|group without capturing | 3.0
5: QST|zero-or-one repetition | 3.0
6: WRD|[a-zA-Z0-9\_] | 2.0
7: ANY|any non-newline char | 1.0
8: CCC|custom character class | 1.0
9: DEC|any of: 0123456789 | 1.0
10: KLE|zero-or-more repetition | 1.0


0000 | 0006 | '(?:http://)?(?:(?P<user>\\w+):(?P<pass>.*)@)?(?P<host>[\\w\\-\\.]+)(?::(?P<port>\\d+))?'



cluster 132 stats:
nPatterns: 3.0
nProjects: 6
shortest: \.?\.?\.\.\.\.$
Features:

1: LIT|a literal character | 12.0
2: QST|zero-or-one repetition | 2.0
3: ANY|any non-newline char | 0.6666666666666666
4: LZY|as few reps as possible | 0.6666666666666666
5: ADD|one-or-more repetition | 0.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: KLE|zero-or-more repetition | 0.3333333333333333
8: NCG|group without capturing | 0.3333333333333333
9: OR|logical or | 0.3333333333333333


0000 | 0004 | '#\\{?foreach\\}?\\(.+?\\).*?#\\{?end\\}?'
0001 | 0001 | '\\.?\\.?\\.\\.\\.\\.$'
0002 | 0001 | u'(?:\\.svg|\\.png|\\.jpg)'



cluster 133 stats:
nPatterns: 5.0
nProjects: 6
shortest: (.+)_(\d+)_(\d+)_(.+)
Features:

1: LIT|a literal character | 7.8
2: ADD|one-or-more repetition | 2.8
3: CG|a capture group | 2.8
4: DEC|any of: 0123456789 | 2.2
5: ANY|any non-newline char | 0.6
6: KLE|zero-or-more repetition | 0.2
7: NCCC|negated CCC | 0.2
8: OR|logical or | 0.2
9: QST|zero-or-one repetition | 0.2
10: STR|start-of-line | 0.2


0000 | 0002 | '(.+)_(\\d+)_(\\d+)_(.+)'
0001 | 0001 | '^@@.*\\+(\\d+)(,(\\d+))?'
0002 | 0001 | '\\((\\d+)-(\\d+)-(\\d+)\\)'
0003 | 0001 | '\\$(\\d+)|\\$\\{(\\d+):[^\\}]+\\}'
0004 | 0001 | 'javascript:SndSelf\\((\\d+),(\\d+)\\);'



cluster 134 stats:
nPatterns: 5.0
nProjects: 6
shortest: \n        \(CODE .*\)\n        |\(ID .*\d\)\n    
Features:

1: LIT|a literal character | 65.0
2: KLE|zero-or-more repetition | 3.2
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.8
4: ADD|one-or-more repetition | 1.4
5: CG|a capture group | 1.4
6: ANY|any non-newline char | 1.0
7: DEC|any of: 0123456789 | 1.0
8: OR|logical or | 1.0
9: QST|zero-or-one repetition | 1.0
10: CCC|custom character class | 0.8
11: RNG|chars within a range | 0.8
12: NCCC|negated CCC | 0.6
13: NCG|group without capturing | 0.6
14: PNG|named capture group | 0.4
15: END|end-of-line | 0.2
16: OPT|options wrapper | 0.2


0000 | 0002 | '(?x)(\n        (?:0|[1-9]\\d*)\n        (\\.\\d+)?\n        ([eE][-+]?\\d+)? |\n        (0x[a-fA-F0-9]+)\n    )'
0001 | 0002 | '\\s*\n      (?P<mnemonic>JMP|JRP|LDN|STOP|STO|SUB|CMP)  \n       \\s* \n      (?P<arg>\\d+)        # numeric argument'
0002 | 0001 | '\n        \\(CODE .*\\)\n        |\\(ID .*\\d\\)\n    '
0003 | 0001 | '\n                <.*>_CODE\n                |\\s.*_ID\n        '
0004 | 0001 | '.*Variadic(?:DynCast)?AllOfMatcher\\s*<\n                       \\s*([^\\s,]+)\\s*(?:,\n                       \\s*([^\\s>]+)\\s*)?>\n                       \\s*([^\\s;]+)\\s*;\\s*$'



cluster 135 stats:
nPatterns: 1.0
nProjects: 5
shortest: dev$
Features:

1: LIT|a literal character | 3.0
2: END|end-of-line | 1.0


0000 | 0005 | 'dev$'



cluster 136 stats:
nPatterns: 1.0
nProjects: 5
shortest: \)\s*
Features:

1: KLE|zero-or-more repetition | 1.0
2: LIT|a literal character | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0005 | '\\)\\s*'



cluster 137 stats:
nPatterns: 1.0
nProjects: 5
shortest: ^'(.*)'$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0005 | "^'(.*)'$"



cluster 138 stats:
nPatterns: 1.0
nProjects: 5
shortest: (\d+)bit
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0005 | '(\\d+)bit'



cluster 139 stats:
nPatterns: 1.0
nProjects: 5
shortest: (}?\s*)$
Features:

1: CG|a capture group | 1.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LIT|a literal character | 1.0
5: QST|zero-or-one repetition | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0005 | '(}?\\s*)$'



cluster 140 stats:
nPatterns: 1.0
nProjects: 5
shortest: .*\.__.*?__
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 1.0


0000 | 0005 | '.*\\.__.*?__'



cluster 141 stats:
nPatterns: 1.0
nProjects: 5
shortest: \s+(\d+),$
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: LIT|a literal character | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0005 | '\\s+(\\d+),$'



cluster 142 stats:
nPatterns: 2.0
nProjects: 5
shortest: '
Features:

1: LIT|a literal character | 1.5


0000 | 0003 | "\\\\'"
0001 | 0002 | u"'"



cluster 143 stats:
nPatterns: 1.0
nProjects: 5
shortest: (^[^\.]+)\.
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: STR|start-of-line | 1.0


0000 | 0005 | '(^[^\\.]+)\\.'



cluster 144 stats:
nPatterns: 1.0
nProjects: 5
shortest: ^[\r\n]*(\s*)
Features:

1: KLE|zero-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0005 | '^[\r\n]*(\\s*)'



cluster 145 stats:
nPatterns: 1.0
nProjects: 5
shortest: ^(\s*<[^>]+>\s*)
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NCCC|negated CCC | 1.0
7: STR|start-of-line | 1.0


0000 | 0005 | '^(\\s*<[^>]+>\\s*)'



cluster 146 stats:
nPatterns: 1.0
nProjects: 5
shortest: (<|>|\+(?!\s*\+|$))
Features:

1: LIT|a literal character | 4.0
2: OR|logical or | 2.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NLKA|sequence doesn't follow  | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0005 | '(<|>|\\+(?!\\s*\\+|$))'



cluster 147 stats:
nPatterns: 1.0
nProjects: 5
shortest: ([\w\-]+\s*:)(?!:)\s*
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: NLKA|sequence doesn't follow  | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0005 | '([\\w\\-]+\\s*:)(?!:)\\s*'



cluster 148 stats:
nPatterns: 2.0
nProjects: 5
shortest: \.models$
Features:

1: LIT|a literal character | 10.5
2: END|end-of-line | 0.5


0000 | 0003 | u'\\.models$'
0001 | 0002 | 'request\\.module'



cluster 149 stats:
nPatterns: 2.0
nProjects: 5
shortest: (\S+)\s*(.*)
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: NWSP|any non-whitespace | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: LIT|a literal character | 0.5


0000 | 0004 | '(\\S+)\\s*(.*)'
0001 | 0001 | '(\\S+):\\s*(.*)'



cluster 150 stats:
nPatterns: 2.0
nProjects: 5
shortest: APACHEPATH.'([^']*?)'
Features:

1: LIT|a literal character | 15.0
2: CG|a capture group | 1.0
3: NCCC|negated CCC | 1.0
4: ADD|one-or-more repetition | 0.5
5: ANY|any non-newline char | 0.5
6: KLE|zero-or-more repetition | 0.5
7: LZY|as few reps as possible | 0.5


0000 | 0004 | "__version__ = '([^']+)'"
0001 | 0001 | "APACHEPATH.'([^']*?)'"



cluster 151 stats:
nPatterns: 2.0
nProjects: 5
shortest: \s*([^\s\(\)]*)\s*
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 0.5
5: ANY|any non-newline char | 0.5
6: CCC|custom character class | 0.5
7: CG|a capture group | 0.5
8: DEC|any of: 0123456789 | 0.5
9: NCCC|negated CCC | 0.5


0000 | 0004 | '\\s*\\(\\d+[ulUL]*\\).*'
0001 | 0001 | '\\s*([^\\s\\(\\)]*)\\s*'



cluster 152 stats:
nPatterns: 2.0
nProjects: 5
shortest: ErrorReturnCode_(\d+)
Features:

1: LIT|a literal character | 18.0
2: ANY|any non-newline char | 1.5
3: CG|a capture group | 1.0
4: ADD|one-or-more repetition | 0.5
5: CCC|custom character class | 0.5
6: DEC|any of: 0123456789 | 0.5
7: RNG|chars within a range | 0.5


0000 | 0003 | 'browser.search.order.([1-9])'
0001 | 0002 | 'ErrorReturnCode_(\\d+)'



cluster 153 stats:
nPatterns: 3.0
nProjects: 5
shortest: {'(.*':.*)'}
Features:

1: LIT|a literal character | 6.666666666666667
2: ANY|any non-newline char | 3.3333333333333335
3: KLE|zero-or-more repetition | 3.3333333333333335
4: CG|a capture group | 1.3333333333333333
5: LZY|as few reps as possible | 0.3333333333333333
6: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0003 | '.*brick_.*?(n?)_wg.*'
0001 | 0001 | "{'(.*':.*)'}"
0002 | 0001 | ".*'(.*)'.*'(.*)'.*"



cluster 154 stats:
nPatterns: 1.0
nProjects: 5
shortest: (\s+|-*\w{2,}-(?=\w{2,})|(?<=[\w\!\"\\'\&\.\,\?])-{2,}(?=\w))
Features:

1: LIT|a literal character | 11.0
2: WRD|[a-zA-Z0-9\_] | 4.0
3: LWB|at least n repetition | 3.0
4: LKA|matching sequence follows | 2.0
5: ADD|one-or-more repetition | 1.0
6: CCC|custom character class | 1.0
7: CG|a capture group | 1.0
8: KLE|zero-or-more repetition | 1.0
9: LKB|matching sequence precedes | 1.0
10: OR|logical or | 1.0
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0005 | '(\\s+|-*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'



cluster 155 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^(.*)\s*<(.*)>\s*$
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.3333333333333333
5: ANY|any non-newline char | 1.0
6: ADD|one-or-more repetition | 0.6666666666666666
7: END|end-of-line | 0.6666666666666666
8: STR|start-of-line | 0.6666666666666666
9: OR|logical or | 0.3333333333333333
10: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0001 | 0002 | '^(}|struct\\s+\\w+);\\s*$'
0002 | 0001 | 'seeds:(\\s*-.*)*\\s*#'



cluster 156 stats:
nPatterns: 3.0
nProjects: 5
shortest: (\w+)\s*District\s*(\d+)
Features:

1: LIT|a literal character | 17.666666666666668
2: CG|a capture group | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.3333333333333333
4: ADD|one-or-more repetition | 1.0
5: KLE|zero-or-more repetition | 1.0
6: DEC|any of: 0123456789 | 0.6666666666666666
7: OR|logical or | 0.6666666666666666
8: ANY|any non-newline char | 0.3333333333333333
9: STR|start-of-line | 0.3333333333333333
10: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0003 | '^(pgpgin|pgpgout|pswpin|pswpout)\\s(\\d+)'
0001 | 0001 | '(\\w+)\\s*District\\s*(\\d+)'
0002 | 0001 | '(Input \\#.*)\n(Must|At\\sleast)'



cluster 157 stats:
nPatterns: 2.0
nProjects: 5
shortest: gml:coordinates>([-\d\.]+),([-\d\.]+)<
Features:

1: LIT|a literal character | 39.0
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 0.5
8: QST|zero-or-one repetition | 0.5
9: STR|start-of-line | 0.5


0000 | 0004 | u'^{"type":"Point","coordinates":\\[-95.363151,29.763374,18(\\.0+)?\\]}$'
0001 | 0001 | 'gml:coordinates>([-\\d\\.]+),([-\\d\\.]+)<'



cluster 158 stats:
nPatterns: 4.0
nProjects: 5
shortest: (?P<year>[12]{1}[0-9]{3})
Features:

1: LIT|a literal character | 6.75
2: CCC|custom character class | 2.75
3: RNG|chars within a range | 2.5
4: SNG|exactly n repetition | 1.75
5: CG|a capture group | 0.75
6: LWB|at least n repetition | 0.5
7: ADD|one-or-more repetition | 0.25
8: END|end-of-line | 0.25
9: OR|logical or | 0.25
10: PNG|named capture group | 0.25
11: STR|start-of-line | 0.25


0000 | 0002 | '^(\\-[3-9]{1,}|\\-{3,}|\\-[1-9][0-9]+)$'
0001 | 0001 | '(?P<year>[12]{1}[0-9]{3})'
0002 | 0001 | '([A-Z][0-9]{2})([0-9]{3})'
0003 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}'



cluster 159 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^(.*) Transfer Syntax PS ?[0-9].1?[0-9]$
Features:

1: LIT|a literal character | 25.333333333333332
2: CG|a capture group | 2.3333333333333335
3: CCC|custom character class | 1.6666666666666667
4: RNG|chars within a range | 1.6666666666666667
5: ADD|one-or-more repetition | 1.3333333333333333
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0
10: ANY|any non-newline char | 0.6666666666666666
11: NCCC|negated CCC | 0.6666666666666666
12: DEC|any of: 0123456789 | 0.3333333333333333


0000 | 0003 | '^content-range: bytes ([0-9]+)-([0-9]+)/([0-9]+)$'
0001 | 0001 | '^(.*) Transfer Syntax PS ?[0-9].1?[0-9]$'
0002 | 0001 | '^reporter:counter:([^,]*),([^,]*),(-?\\d+)$'



cluster 160 stats:
nPatterns: 2.0
nProjects: 5
shortest: \s+at\s(?:new\s)?(?P<func>.+)\s\((?P<file>[^:]+):?(?P<row>\d+)?:?(?P<col>\d+)?\)
Features:

1: LIT|a literal character | 18.5
2: QST|zero-or-one repetition | 5.0
3: PNG|named capture group | 4.5
4: ADD|one-or-more repetition | 4.0
5: CCC|custom character class | 2.5
6: NCG|group without capturing | 2.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
8: RNG|chars within a range | 1.5
9: ANY|any non-newline char | 1.0
10: DEC|any of: 0123456789 | 1.0
11: NCCC|negated CCC | 0.5
12: OR|logical or | 0.5


0000 | 0003 | '%(?:(?P<cn>[0-9]+)\\$)?(?P<width>[0-9]+)?(?:.(?P<pres>[0-9]+))?(?P<size>[hL]|(?:ll?))?(?P<type>[dciouxXefgpCSsn])'
0001 | 0002 | '\\s+at\\s(?:new\\s)?(?P<func>.+)\\s\\((?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?\\)'



cluster 161 stats:
nPatterns: 3.0
nProjects: 5
shortest: (?P<lhs>(\s*)([\w\.]+)((\s*,\s*[\w\.]+)*))\s*=\s*!\s*(?P<cmd>.*)
Features:

1: LIT|a literal character | 25.666666666666668
2: KLE|zero-or-more repetition | 10.666666666666666
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 9.0
4: CG|a capture group | 4.0
5: CCC|custom character class | 1.6666666666666667
6: ADD|one-or-more repetition | 1.0
7: ANY|any non-newline char | 0.6666666666666666
8: PNG|named capture group | 0.6666666666666666
9: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
10: END|end-of-line | 0.3333333333333333
11: QST|zero-or-one repetition | 0.3333333333333333
12: RNG|chars within a range | 0.3333333333333333
13: STR|start-of-line | 0.3333333333333333


0000 | 0003 | '(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*!\\s*(?P<cmd>.*)'
0001 | 0001 | '^\\s*void\\s*operator\\s*=\\s*\\(\\s*const\\s*\\s*&\\s*\\)\\s*;\\s*\\/\\/\\s*Not\\s*[iI]mplemented(\\.)*'
0002 | 0001 | '(\\s*DRI_CONF_DESC\\s*\\(\\s*)([a-z]+)(\\s*,\\s*)(gettext\\s*\\(\\s*")(.*)("\\s*\\))(\\s*\\)[ \\t]*\\\\?)$'



cluster 162 stats:
nPatterns: 6.0
nProjects: 5
shortest: [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}_cc.csv
Features:

1: LIT|a literal character | 34.0
2: RNG|chars within a range | 9.666666666666666
3: CCC|custom character class | 8.333333333333334
4: SNG|exactly n repetition | 3.1666666666666665
5: CG|a capture group | 2.0
6: OR|logical or | 1.3333333333333333
7: DBB|$n\le x \le m$ repetition | 0.8333333333333334
8: QST|zero-or-one repetition | 0.8333333333333334
9: ANY|any non-newline char | 0.5
10: NCG|group without capturing | 0.5
11: ADD|one-or-more repetition | 0.3333333333333333
12: END|end-of-line | 0.3333333333333333
13: KLE|zero-or-more repetition | 0.16666666666666666
14: STR|start-of-line | 0.16666666666666666


0000 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}_cc.csv'
0001 | 0001 | 'cc_[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.csv'
0002 | 0001 | '\\\\(u[dD][89aAbB][0-9a-fA-F]{2}\\\\u[0-9a-fA-F]{4}|u[0-9a-fA-F]{4}|.|$)'
0003 | 0001 | '(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)-){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'
0004 | 0001 | '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
0005 | 0001 | '(((http|https)://)|(www\\.))+(([a-zA-Z0-9\\._-]+\\.[a-zA-Z]{2,6})|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(/[a-zA-Z0-9\\&amp;%_\\./-~-]*)?'



cluster 163 stats:
nPatterns: 5.0
nProjects: 5
shortest: \n    ::(?=[^=])|            # two :: (but NOT ::=)\n    :[a-zA-Z][a-zA-Z0-9]+| # :foo\n    `|                     # ` (seldom used by itself)\n    (?<!\.)\.\.[ \t]*\w+:  # .. foo: (but NOT ... else:)\n    
Features:

1: LIT|a literal character | 253.6
2: CG|a capture group | 4.0
3: CCC|custom character class | 3.4
4: ADD|one-or-more repetition | 2.8
5: ANY|any non-newline char | 2.6
6: KLE|zero-or-more repetition | 2.2
7: RNG|chars within a range | 1.8
8: END|end-of-line | 1.2
9: QST|zero-or-one repetition | 1.2
10: OR|logical or | 1.0
11: STR|start-of-line | 0.8
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.8
13: NCG|group without capturing | 0.6
14: DEC|any of: 0123456789 | 0.4
15: LKA|matching sequence follows | 0.4
16: NCCC|negated CCC | 0.4
17: PNG|named capture group | 0.4
18: BKR|match the $i^{th}$ CG | 0.2
19: DBB|$n\le x \le m$ repetition | 0.2
20: ENDZ|absolute end of string | 0.2
21: LZY|as few reps as possible | 0.2
22: NLKB|sequence doesn't precede | 0.2
23: WRD|[a-zA-Z0-9\_] | 0.2


0000 | 0002 | '\n    (\\n)?                            # leading line = $1\n    (^[ \\t]*)                        # leading whitespace = $2\n    ([*+-]|\\d+[.]) [ \\t]+            # list marker = $3\n    ((?:.+?)                         # list item text = $4\n    (\\n{1,2}))\n    (?= \\n* (\\Z | \\2 ([*+-]|\\d+[.]) [ \\t]+))\n    '
0001 | 0002 | '\n        ^\n        \\s*\n        (?P<operator>(==|!=|<=|>=|<|>))\n        \\s*\n        (?P<version>\n            [^\\s]* # We just match everything, except for whitespace since this\n                   # is a "legacy" specifier and the version string can be just\n                   # about anything.\n        )\n        \\s*\n        $\n        '
0002 | 0001 | '\n    ::(?=[^=])|            # two :: (but NOT ::=)\n    :[a-zA-Z][a-zA-Z0-9]+| # :foo\n    `|                     # ` (seldom used by itself)\n    (?<!\\.)\\.\\.[ \\t]*\\w+:  # .. foo: (but NOT ... else:)\n    '
0003 | 0001 | "\n    (                       # Wrap whole match in $1\n     (\n       ^[ \\t]*&gt;[ \\t]?       # '>' at the start of a line\n       .+\\n                 # rest of the first line\n       (.+\\n)*              # subsequent consecutive lines\n       \\n*                  # blanks\n      )+\n    )"
0004 | 0001 | '\n            (?:^[ \\t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        '



cluster 164 stats:
nPatterns: 1.0
nProjects: 4
shortest: 10\^\{(.+)\}
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0


0000 | 0004 | '10\\^\\{(.+)\\}'



cluster 165 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^\s*[^#\s].*
Features:

1: KLE|zero-or-more repetition | 2.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ANY|any non-newline char | 1.0
4: LIT|a literal character | 1.0
5: NCCC|negated CCC | 1.0
6: STR|start-of-line | 1.0


0000 | 0004 | u'^\\s*[^#\\s].*'



cluster 166 stats:
nPatterns: 1.0
nProjects: 4
shortest: In\ \[\d+\]: 
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0


0000 | 0004 | 'In\\ \\[\\d+\\]: '



cluster 167 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^(-?\d+)(\d{3})
Features:

1: CG|a capture group | 2.0
2: DEC|any of: 0123456789 | 2.0
3: ADD|one-or-more repetition | 1.0
4: LIT|a literal character | 1.0
5: QST|zero-or-one repetition | 1.0
6: SNG|exactly n repetition | 1.0
7: STR|start-of-line | 1.0


0000 | 0004 | u'^(-?\\d+)(\\d{3})'



cluster 168 stats:
nPatterns: 1.0
nProjects: 4
shortest: \s*\(0[0-7]+\).*
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: RNG|chars within a range | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0004 | '\\s*\\(0[0-7]+\\).*'



cluster 169 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^\S+@\S+\.\S+$
Features:

1: ADD|one-or-more repetition | 3.0
2: NWSP|any non-whitespace | 3.0
3: LIT|a literal character | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0004 | u'^\\S+@\\S+\\.\\S+$'



cluster 170 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^(CONFIG_\w+)=(.*)$
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: STR|start-of-line | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0004 | '^(CONFIG_\\w+)=(.*)$'



cluster 171 stats:
nPatterns: 1.0
nProjects: 4
shortest: .*_([vV]\d+\.\d+)$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.0
3: DEC|any of: 0123456789 | 2.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0
8: KLE|zero-or-more repetition | 1.0


0000 | 0004 | '.*_([vV]\\d+\\.\\d+)$'



cluster 172 stats:
nPatterns: 1.0
nProjects: 4
shortest: Content-Length: (\d+)
Features:

1: LIT|a literal character | 16.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0004 | 'Content-Length: (\\d+)'



cluster 173 stats:
nPatterns: 2.0
nProjects: 4
shortest: \S+\.a
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 1.0
3: NWSP|any non-whitespace | 0.5
4: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0003 | '\\w+\\.rb'
0001 | 0001 | '\\S+\\.a'



cluster 174 stats:
nPatterns: 1.0
nProjects: 4
shortest: ((?<!\\)(\\\\)*)\.
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 1.0
4: NLKB|sequence doesn't precede | 1.0


0000 | 0004 | '((?<!\\\\)(\\\\\\\\)*)\\.'



cluster 175 stats:
nPatterns: 1.0
nProjects: 4
shortest: \s+([!{};:>+\(\)\],])
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0004 | '\\s+([!{};:>+\\(\\)\\],])'



cluster 176 stats:
nPatterns: 1.0
nProjects: 4
shortest: (?:W/)?"((?:\\.|[^"])*)"
Features:

1: LIT|a literal character | 6.0
2: NCG|group without capturing | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NCCC|negated CCC | 1.0
7: OR|logical or | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0004 | u'(?:W/)?"((?:\\\\.|[^"])*)"'



cluster 177 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^DATABASE
Features:

1: LIT|a literal character | 8.5
2: CCC|custom character class | 2.0
3: STR|start-of-line | 1.0


0000 | 0003 | '^@[Dd][Aa][Tt][Aa]'
0001 | 0001 | '^DATABASE'



cluster 178 stats:
nPatterns: 3.0
nProjects: 4
shortest: (.*)\n
Features:

1: LIT|a literal character | 2.6666666666666665
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: CG|a capture group | 0.3333333333333333
5: LZY|as few reps as possible | 0.3333333333333333
6: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0002 | '(.*)\n'
0001 | 0001 | '%%.*?\n'
0002 | 0001 | '//.*\\r?\\n'



cluster 179 stats:
nPatterns: 3.0
nProjects: 4
shortest: ^FINISH
Features:

1: LIT|a literal character | 8.0
2: STR|start-of-line | 0.6666666666666666


0000 | 0002 | '^SESSIONID-'
0001 | 0001 | '^FINISH'
0002 | 0001 | '#EXTINF:'



cluster 180 stats:
nPatterns: 2.0
nProjects: 4
shortest: @@BINARYDIR@@
Features:

1: LIT|a literal character | 16.5


0000 | 0004 | '@@BINARYDIR@@'
0001 | 0004 | '@@PACKAGE_PROVIDES@@'



cluster 181 stats:
nPatterns: 3.0
nProjects: 4
shortest: processor
Features:

1: LIT|a literal character | 9.333333333333334


0000 | 0002 | 'processor'
0001 | 0001 | 'wireless='
0002 | 0001 | 'google_sql'



cluster 182 stats:
nPatterns: 2.0
nProjects: 4
shortest: [ \t]+(?=\n)
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: LKA|matching sequence follows | 1.0
5: ADD|one-or-more repetition | 0.5
6: ANY|any non-newline char | 0.5
7: OR|logical or | 0.5
8: STR|start-of-line | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0003 | '[ \t]+(?=\n)'
0001 | 0001 | '[;\\s\\/\\+]$|^$|(?=: ).'



cluster 183 stats:
nPatterns: 2.0
nProjects: 4
shortest: <script.*?</script>
Features:

1: LIT|a literal character | 18.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0


0000 | 0002 | '<noscript>.*?</noscript>'
0001 | 0001 | '<script.*?</script>'



cluster 184 stats:
nPatterns: 2.0
nProjects: 4
shortest: <pre>.*?</pre>
Features:

1: LIT|a literal character | 15.5
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: LZY|as few reps as possible | 1.5
5: CG|a capture group | 0.5
6: OPT|options wrapper | 0.5


0000 | 0002 | '<pre>.*?</pre>'
0001 | 0002 | '(?s)<failure (.*?)>.*?</failure>'



cluster 185 stats:
nPatterns: 2.0
nProjects: 4
shortest: (.*)\[(.*)\](.*)
Features:

1: LIT|a literal character | 10.5
2: ANY|any non-newline char | 3.0
3: CG|a capture group | 3.0
4: KLE|zero-or-more repetition | 3.0
5: LZY|as few reps as possible | 1.5


0000 | 0003 | '(.*)\\[(.*)\\](.*)'
0001 | 0001 | '(.*?)user (.*?)system (.*?)elapsed'



cluster 186 stats:
nPatterns: 4.0
nProjects: 4
shortest: bvecs
Features:

1: LIT|a literal character | 9.5
2: ANY|any non-newline char | 0.25
3: KLE|zero-or-more repetition | 0.25


0000 | 0001 | 'bvecs'
0001 | 0001 | 'subject='
0002 | 0001 | 'subsection{'
0003 | 0001 | '.*SPARCstation-5'



cluster 187 stats:
nPatterns: 3.0
nProjects: 4
shortest: \bminus\b
Features:

1: LIT|a literal character | 10.666666666666666
2: WNW|word/non-word boundary | 1.3333333333333333


0000 | 0002 | '\\bminus\\b'
0001 | 0001 | '\\bmethod=text\\b'
0002 | 0001 | '\\\\begin{tabularx}'



cluster 188 stats:
nPatterns: 3.0
nProjects: 4
shortest: WindowsError
Features:

1: LIT|a literal character | 20.333333333333332
2: ANY|any non-newline char | 0.3333333333333333


0000 | 0002 | 'Please choose another session'
0001 | 0001 | 'WindowsError'
0002 | 0001 | 'devicemanager.DMError'



cluster 189 stats:
nPatterns: 3.0
nProjects: 4
shortest:  |,|"|=|[|]
Features:

1: LIT|a literal character | 9.666666666666666
2: OR|logical or | 1.0
3: CCC|custom character class | 0.6666666666666666
4: CG|a capture group | 0.3333333333333333


0000 | 0002 | ':|\\*|\\?|"|<|>|\\|'
0001 | 0001 | ' |,|"|=|[|]'
0002 | 0001 | '([+*/\\%^\\&|-]|<<|>>|\\*\\*|//)='



cluster 190 stats:
nPatterns: 2.0
nProjects: 4
shortest: ([^\(]*)(\((.*)%(.*)\))?
Features:

1: LIT|a literal character | 10.0
2: CG|a capture group | 5.0
3: KLE|zero-or-more repetition | 4.0
4: ANY|any non-newline char | 3.5
5: ADD|one-or-more repetition | 0.5
6: CCC|custom character class | 0.5
7: NCCC|negated CCC | 0.5
8: QST|zero-or-one repetition | 0.5
9: RNG|chars within a range | 0.5


0000 | 0003 | '([^\\(]*)(\\((.*)%(.*)\\))?'
0001 | 0001 | "([a-z_]+) '(.*)'\\t(.*)\\tLoc=<(.*):(.*):(.*)>"



cluster 191 stats:
nPatterns: 3.0
nProjects: 4
shortest: MAJOR\s*=\s*(\d+)
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.0
5: ADD|one-or-more repetition | 0.6666666666666666
6: DEC|any of: 0123456789 | 0.6666666666666666
7: NWSP|any non-whitespace | 0.3333333333333333
8: SNG|exactly n repetition | 0.3333333333333333
9: STR|start-of-line | 0.3333333333333333


0000 | 0002 | 'BuildID\\s*=\\s*"(\\d{10})"'
0001 | 0001 | 'MAJOR\\s*=\\s*(\\d+)'
0002 | 0001 | '^Name\\s*:\\s*(\\S+)'



cluster 192 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^#synchronous_standby_names\s*=.*$
Features:

1: LIT|a literal character | 32.5
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
8: DEC|any of: 0123456789 | 0.5


0000 | 0003 | '^\\s+File .*erroneous\\.py., line \\d+, in test_fail$'
0001 | 0001 | '^#synchronous_standby_names\\s*=.*$'



cluster 193 stats:
nPatterns: 3.0
nProjects: 4
shortest: exampleLocalVar.*abcde
Features:

1: LIT|a literal character | 29.0
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.6666666666666666
4: LZY|as few reps as possible | 0.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0002 | '\\s*<table id="datatype-pseudotypes-table">'
0001 | 0001 | 'exampleLocalVar.*abcde'
0002 | 0001 | '<table id="showall" .*?</table>'



cluster 194 stats:
nPatterns: 3.0
nProjects: 4
shortest: (|.*/)applications/(?P<appname>[^/]+)
Features:

1: LIT|a literal character | 22.0
2: ADD|one-or-more repetition | 1.0
3: PNG|named capture group | 1.0
4: KLE|zero-or-more repetition | 0.6666666666666666
5: NCCC|negated CCC | 0.6666666666666666
6: ANY|any non-newline char | 0.3333333333333333
7: CCC|custom character class | 0.3333333333333333
8: CG|a capture group | 0.3333333333333333
9: OR|logical or | 0.3333333333333333
10: RNG|chars within a range | 0.3333333333333333
11: STR|start-of-line | 0.3333333333333333
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0002 | 'LayoutTests/platform/(?P<platform>[^/]+)/'
0001 | 0001 | '(|.*/)applications/(?P<appname>[^/]+)'
0002 | 0001 | '^Currently Active Slave:\\s*(?P<active>eth[0-9]+)'



cluster 195 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^(dict|dictionary|map|mapping) from ([\w\.]+) to ([\w\.]+)$
Features:

1: LIT|a literal character | 35.0
2: CG|a capture group | 4.0
3: ADD|one-or-more repetition | 2.5
4: DEC|any of: 0123456789 | 2.5
5: CCC|custom character class | 2.0
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 1.0
8: OR|logical or | 1.0
9: QST|zero-or-one repetition | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0
11: KLE|zero-or-more repetition | 0.5
12: STR|start-of-line | 0.5


0000 | 0002 | '^(dict|dictionary|map|mapping) from ([\\w\\.]+) to ([\\w\\.]+)$'
0001 | 0002 | 'pip \\d(\\.[\\d])+(\\.?(rc|dev|pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'



cluster 196 stats:
nPatterns: 25.0
nProjects: 4
shortest: \W\xd1\x8e\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 26.88
2: CG|a capture group | 0.64
3: OR|logical or | 0.4
4: NWRD|non-word chars | 0.16
5: ADD|one-or-more repetition | 0.12
6: ANY|any non-newline char | 0.12
7: QST|zero-or-one repetition | 0.12
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.08
9: CCC|custom character class | 0.04
10: DEC|any of: 0123456789 | 0.04
11: KLE|zero-or-more repetition | 0.04
12: LZY|as few reps as possible | 0.04


0000 | 0001 | '\\W\xd1\x8e\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0002 | 0001 | '\xd1\x87\xd0\xb5\xd1\x85\xd0\xbe\xd0\xb2'
0003 | 0001 | '\x01\x12\x00\x03\x00\x00\x00\x01\x00(.)\x00\x00'
0004 | 0001 | '\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd[e .\n]'
0005 | 0001 | '\xd0\xbc\xd0\xb0\xd1\x80\xd1\x8c\xd0\xb8\xd0\xbd\xd0\xbe'
0006 | 0001 | '\xd0\xbe\xd1\x82\xd1\x80\xd0\xb0\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb5'
0007 | 0001 | '(\xd0\xbb\xd0\xb0\xd0\xb4\xd0\xbe\xd0\xb6\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0008 | 0001 | '\xd1\x82\xd1\x80\xd1\x83\xd0\xb1\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0009 | 0001 | '\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xba\xd0\xbe\xd1\x81\xd0\xb8\xd0\xbd\xd0\xbe'
0010 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0011 | 0001 | '\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe\xd1\x80\xd1\x81\xd0\xba'
0012 | 0001 | '<a href="(.*?)" title="\xd7\xa7\xd7\xa8\xd7\x90 \xd7\x91\xd7\x94\xd7\xa8\xd7\x97\xd7\x91\xd7\x94"'
0013 | 0001 | '(\xd0\xb3\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xb2\xd0\xbe\xd1\x80)'
0014 | 0001 | '\xd0\xb2\xd0\xb0\xd1\x80\xd1\x88\xd0\xb0\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0015 | 0001 | '<div class="idh">(\xe5\xb7\xb2\xe8\xbf\x9e\xe7\xbb\xad\xe7\xad\xbe\xe5\x88\xb0\\d+\xe5\xa4\xa9)</div>'
0016 | 0001 | '<td class="Day" bgcolor="#990000" >\\s+\xf1\xe3\xf8 \xe4\xe9\xe5\xed \xec(.+), <span style=color:#c0c0c0>'
0017 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xb0\xd1\x82\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0018 | 0001 | '\xd0\xbe\xd0\xba\xd1\x82\xd1\x8f\xd0\xb1\xd1\x80\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0019 | 0001 | '\xd1\x86\xd0\xb5\xd0\xbd\xd1\x82\xd1\x80\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd(\xd1\x8b\xd0\xb9|\xd0\xbe\xd0\xbc)'
0020 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb4\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0021 | 0001 | '\xd1\x88\xd0\xbe\xd1\x81\xd1\x81\xd0\xb5 \xd1\x8d\xd0\xbd\xd1\x82\xd1\x83\xd0\xb7\xd0\xb8\xd0\xb0\xd1\x81\xd1\x82\xd0\xbe\xd0\xb2'
0022 | 0001 | '\xd1\x81\xd1\x80\xd0\xb5\xd1\x82\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80'
0023 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80|\xd0\xb1-\xd1\x80\\.?)\\s?(\xd0\xb4\xd0\xbc\\.?|\xd0\xb4\xd0\xbc\xd0\xb8\xd1\x82\xd1\x80\xd0\xb8\xd1\x8f) \xd0\xb4\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0024 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



cluster 197 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^6\.
Features:

1: LIT|a literal character | 2.0
2: STR|start-of-line | 1.0


0000 | 0003 | '^6\\.'



cluster 198 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^the 
Features:

1: LIT|a literal character | 4.0
2: STR|start-of-line | 1.0


0000 | 0003 | '^the '



cluster 199 stats:
nPatterns: 1.0
nProjects: 3
shortest: :title
Features:

1: LIT|a literal character | 6.0


0000 | 0003 | ':title'



cluster 200 stats:
nPatterns: 1.0
nProjects: 3
shortest: .*\.zip
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0003 | '.*\\.zip'



cluster 201 stats:
nPatterns: 1.0
nProjects: 3
shortest: (-)(\d+)$
Features:

1: CG|a capture group | 2.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: LIT|a literal character | 1.0


0000 | 0003 | '(-)(\\d+)$'



cluster 202 stats:
nPatterns: 2.0
nProjects: 3
shortest: s
Features:

1: LIT|a literal character | 2.0


0000 | 0002 | 's'
0001 | 0001 | 'sun'



cluster 203 stats:
nPatterns: 1.0
nProjects: 3
shortest: ([A-Z][a-z]+)
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 2.0
3: RNG|chars within a range | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0


0000 | 0003 | '([A-Z][a-z]+)'



cluster 204 stats:
nPatterns: 1.0
nProjects: 3
shortest: \A\s\s\S+,
Features:

1: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
2: ADD|one-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: NWSP|any non-whitespace | 1.0
5: STR|start-of-line | 1.0


0000 | 0003 | '\\A\\s\\s\\S+,'



cluster 205 stats:
nPatterns: 1.0
nProjects: 3
shortest: \x1b\[[^h]+h
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0


0000 | 0003 | '\\x1b\\[[^h]+h'



cluster 206 stats:
nPatterns: 1.0
nProjects: 3
shortest: L -(\d+) -\d+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 2.0
3: DEC|any of: 0123456789 | 2.0
4: CG|a capture group | 1.0


0000 | 0003 | 'L -(\\d+) -\\d+'



cluster 207 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^bob
Features:

1: LIT|a literal character | 2.5
2: STR|start-of-line | 0.5
3: WNW|word/non-word boundary | 0.5


0000 | 0002 | '^bob'
0001 | 0001 | '\\bod'



cluster 208 stats:
nPatterns: 1.0
nProjects: 3
shortest: offset (.*) sec
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0003 | 'offset (.*) sec'



cluster 209 stats:
nPatterns: 1.0
nProjects: 3
shortest: (\S+)\s+(..+$)
Features:

1: ADD|one-or-more repetition | 3.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: END|end-of-line | 1.0
5: NWSP|any non-whitespace | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | '(\\S+)\\s+(..+$)'



cluster 210 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^[\w\.\-\/]*$
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | '^[\\w\\.\\-\\/]*$'



cluster 211 stats:
nPatterns: 1.0
nProjects: 3
shortest: sources.redhat.com
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 2.0


0000 | 0003 | 'sources.redhat.com'



cluster 212 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^enum
Features:

1: LIT|a literal character | 5.5
2: STR|start-of-line | 1.0


0000 | 0002 | '^Vendor:'
0001 | 0001 | '^enum'



cluster 213 stats:
nPatterns: 2.0
nProjects: 3
shortest: 2\.3
Features:

1: LIT|a literal character | 3.0


0000 | 0002 | '\\.\\.\\.'
0001 | 0001 | '2\\.3'



cluster 214 stats:
nPatterns: 1.0
nProjects: 3
shortest: ([-0-9.]+)([a-zA-Z]+)
Features:

1: LIT|a literal character | 8.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 2.0
4: CCC|custom character class | 2.0
5: CG|a capture group | 2.0


0000 | 0003 | '([-0-9.]+)([a-zA-Z]+)'



cluster 215 stats:
nPatterns: 2.0
nProjects: 3
shortest: ARRAY
Features:

1: LIT|a literal character | 7.5


0000 | 0002 | 'ERROR FAIL'
0001 | 0001 | 'ARRAY'



cluster 216 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^(.*?)(?:-dev|-\d.*)$
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: END|end-of-line | 1.0
7: LZY|as few reps as possible | 1.0
8: NCG|group without capturing | 1.0
9: OR|logical or | 1.0
10: STR|start-of-line | 1.0


0000 | 0003 | '^(.*?)(?:-dev|-\\d.*)$'



cluster 217 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^\s*([A-Z_]+): (\d+)
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0
7: RNG|chars within a range | 1.0
8: STR|start-of-line | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | '^\\s*([A-Z_]+): (\\d+)'



cluster 218 stats:
nPatterns: 1.0
nProjects: 3
shortest: \s+Flags for (\S.+):$
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: NWSP|any non-whitespace | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | '\\s+Flags for (\\S.+):$'



cluster 219 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^<type [\'"](.+)[\'"]>$
Features:

1: LIT|a literal character | 11.0
2: CCC|custom character class | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0


0000 | 0003 | '^<type [\'"](.+)[\'"]>$'



cluster 220 stats:
nPatterns: 2.0
nProjects: 3
shortest: (.).\1
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 2.5
3: BKR|match the $i^{th}$ CG | 0.5
4: CG|a capture group | 0.5


0000 | 0002 | '127.0.0.1:0'
0001 | 0001 | '(.).\\1'



cluster 221 stats:
nPatterns: 1.0
nProjects: 3
shortest: __(\w+?)__\s*=\s*(.*)
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 3.0
3: CG|a capture group | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ADD|one-or-more repetition | 1.0
6: ANY|any non-newline char | 1.0
7: LZY|as few reps as possible | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | '__(\\w+?)__\\s*=\\s*(.*)'



cluster 222 stats:
nPatterns: 1.0
nProjects: 3
shortest: From .*?([\w.]+@[\w.]+)
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: KLE|zero-or-more repetition | 1.0
8: LZY|as few reps as possible | 1.0


0000 | 0003 | 'From .*?([\\w.]+@[\\w.]+)'



cluster 223 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^(.*\.arc)$
Features:

1: LIT|a literal character | 5.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 0.5


0000 | 0002 | '(.*) cache:$'
0001 | 0001 | '^(.*\\.arc)$'



cluster 224 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^(.*?)\s?((?:ssh\-|ecds).+)$
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: LZY|as few reps as possible | 1.0
8: NCG|group without capturing | 1.0
9: OR|logical or | 1.0
10: QST|zero-or-one repetition | 1.0
11: STR|start-of-line | 1.0
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | '^(.*?)\\s?((?:ssh\\-|ecds).+)$'



cluster 225 stats:
nPatterns: 2.0
nProjects: 3
shortest: type=(B|R|)
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 0.5
3: KLE|zero-or-more repetition | 0.5
4: OR|logical or | 0.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | 'type=(B|R|)'
0001 | 0001 | 'typecode\\s*='



cluster 226 stats:
nPatterns: 1.0
nProjects: 3
shortest: \s+\(default:\s+\'(.*)\'\)$
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0


0000 | 0003 | "\\s+\\(default:\\s+\\'(.*)\\'\\)$"



cluster 227 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^\s*\#+\s*
Features:

1: KLE|zero-or-more repetition | 2.5
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: STR|start-of-line | 1.0
4: ADD|one-or-more repetition | 0.5
5: END|end-of-line | 0.5
6: LIT|a literal character | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | '^\\s*\\#+\\s*'
0001 | 0001 | '^\\s*\\w*\\s*$'



cluster 228 stats:
nPatterns: 1.0
nProjects: 3
shortest: (?P<address>.*?)(?:(?: \(.*?@)|$)
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 2.0
5: NCG|group without capturing | 2.0
6: END|end-of-line | 1.0
7: OR|logical or | 1.0
8: PNG|named capture group | 1.0


0000 | 0003 | '(?P<address>.*?)(?:(?: \\(.*?@)|$)'



cluster 229 stats:
nPatterns: 3.0
nProjects: 3
shortest: ([<>])
Features:

1: LIT|a literal character | 3.6666666666666665
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0


0000 | 0001 | '([<>])'
0001 | 0001 | '([|&])'
0002 | 0001 | '([{}_#%&$])'



cluster 230 stats:
nPatterns: 2.0
nProjects: 3
shortest: \n     #
Features:

1: LIT|a literal character | 9.0
2: CG|a capture group | 0.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0002 | ':( *\n     \\|\n)\x02'
0001 | 0001 | '\n     #'



cluster 231 stats:
nPatterns: 1.0
nProjects: 3
shortest: ([^:#]*)\s*:?\s*([^#]*?)(\s+#.*|$)
Features:

1: KLE|zero-or-more repetition | 5.0
2: LIT|a literal character | 5.0
3: CG|a capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
5: NCCC|negated CCC | 2.0
6: ADD|one-or-more repetition | 1.0
7: ANY|any non-newline char | 1.0
8: END|end-of-line | 1.0
9: LZY|as few reps as possible | 1.0
10: OR|logical or | 1.0
11: QST|zero-or-one repetition | 1.0


0000 | 0003 | '([^:#]*)\\s*:?\\s*([^#]*?)(\\s+#.*|$)'



cluster 232 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^\s*#define SSH_([A-Z_]+)\s+([0-9x]*)\s*$
Features:

1: LIT|a literal character | 18.0
2: KLE|zero-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: ADD|one-or-more repetition | 2.0
5: CCC|custom character class | 2.0
6: CG|a capture group | 2.0
7: RNG|chars within a range | 2.0
8: END|end-of-line | 1.0
9: STR|start-of-line | 1.0


0000 | 0003 | '^\\s*#define SSH_([A-Z_]+)\\s+([0-9x]*)\\s*$'



cluster 233 stats:
nPatterns: 3.0
nProjects: 3
shortest: (\d\d?)
Features:

1: LIT|a literal character | 2.0
2: DEC|any of: 0123456789 | 1.6666666666666667
3: CG|a capture group | 1.0
4: ADD|one-or-more repetition | 0.3333333333333333
5: CCC|custom character class | 0.3333333333333333
6: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0001 | '(\\d\\d?)'
0001 | 0001 | '(\\d\\.\\d)'
0002 | 0001 | '(\\d+[dwhms])'



cluster 234 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^[^{]*\}|\{[^}]*$
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 2.5
3: NCCC|negated CCC | 2.5
4: END|end-of-line | 0.5
5: OR|logical or | 0.5
6: STR|start-of-line | 0.5


0000 | 0002 | '^[^{]*\\}|\\{[^}]*$'
0001 | 0001 | '[^{}]*{[^{}]*}[^{}]*'



cluster 235 stats:
nPatterns: 1.0
nProjects: 3
shortest: &(?:#((?:\d+)|(?:[xX][0-9a-fA-F]+));?|(\w+);)
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 3.0
3: NCG|group without capturing | 3.0
4: RNG|chars within a range | 3.0
5: CCC|custom character class | 2.0
6: CG|a capture group | 2.0
7: OR|logical or | 2.0
8: DEC|any of: 0123456789 | 1.0
9: QST|zero-or-one repetition | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | '&(?:#((?:\\d+)|(?:[xX][0-9a-fA-F]+));?|(\\w+);)'



cluster 236 stats:
nPatterns: 2.0
nProjects: 3
shortest: .*?_([a-z]*)_pid\d*$
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 3.0
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 1.0
8: LZY|as few reps as possible | 1.0
9: RNG|chars within a range | 1.0


0000 | 0002 | '.*?_([a-z]*)_pid(\\d*)$'
0001 | 0001 | '.*?_([a-z]*)_pid\\d*$'



cluster 237 stats:
nPatterns: 2.0
nProjects: 3
shortest: [ \t]*\.[ \t]*
Features:

1: LIT|a literal character | 10.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0002 | '[ \\t]*\\.[ \\t]*'
0001 | 0001 | '^END .*\\t----\\t----\\t.*$'



cluster 238 stats:
nPatterns: 3.0
nProjects: 3
shortest:  ( +)|^ 
Features:

1: LIT|a literal character | 3.6666666666666665
2: ADD|one-or-more repetition | 1.3333333333333333
3: WRD|[a-zA-Z0-9\_] | 1.0
4: CG|a capture group | 0.6666666666666666
5: STR|start-of-line | 0.6666666666666666
6: CCC|custom character class | 0.3333333333333333
7: NCCC|negated CCC | 0.3333333333333333
8: OR|logical or | 0.3333333333333333
9: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0001 | ' ( +)|^ '
0001 | 0001 | '^(\\w+)\\([^;]'
0002 | 0001 | '/?\\w+/\\w+[.]xsd'



cluster 239 stats:
nPatterns: 2.0
nProjects: 3
shortest: ((\d*?)\d{1,3})$
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 2.0
3: DEC|any of: 0123456789 | 1.5
4: ANY|any non-newline char | 1.0
5: DBB|$n\le x \le m$ repetition | 1.0
6: END|end-of-line | 1.0
7: LZY|as few reps as possible | 1.0
8: ADD|one-or-more repetition | 0.5
9: KLE|zero-or-more repetition | 0.5


0000 | 0002 | '((\\d*?)\\d{1,3})$'
0001 | 0001 | '/./(.+?)/season (\\d{1,2})$'



cluster 240 stats:
nPatterns: 1.0
nProjects: 3
shortest: ==\d+==\s+still\s+reachable:\s+([0-9,]+)\s+bytes
Features:

1: LIT|a literal character | 27.0
2: ADD|one-or-more repetition | 6.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: DEC|any of: 0123456789 | 1.0
7: RNG|chars within a range | 1.0


0000 | 0003 | '==\\d+==\\s+still\\s+reachable:\\s+([0-9,]+)\\s+bytes'



cluster 241 stats:
nPatterns: 3.0
nProjects: 3
shortest: ["\(\) ,-]
Features:

1: LIT|a literal character | 7.666666666666667
2: CCC|custom character class | 1.0


0000 | 0001 | '["\\(\\) ,-]'
0001 | 0001 | '[\\[\\]\\(\\);]'
0002 | 0001 | '[][\\()<>@,:;".]'



cluster 242 stats:
nPatterns: 2.0
nProjects: 3
shortest: <id>([^<]+)</id>
Features:

1: LIT|a literal character | 16.5
2: CG|a capture group | 1.5
3: ADD|one-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0
5: DEC|any of: 0123456789 | 0.5
6: KLE|zero-or-more repetition | 0.5


0000 | 0002 | '<id>([^<]+)</id>'
0001 | 0001 | '<sync start="(\\d+)">([^<]*)</sync>'



cluster 243 stats:
nPatterns: 2.0
nProjects: 3
shortest: (build_git_sha = ")(\w)*
Features:

1: LIT|a literal character | 20.0
2: CG|a capture group | 1.5
3: KLE|zero-or-more repetition | 1.0
4: ANY|any non-newline char | 0.5
5: LZY|as few reps as possible | 0.5
6: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | 'virtualenv_version = "(.*?)"'
0001 | 0001 | '(build_git_sha = ")(\\w)*'



cluster 244 stats:
nPatterns: 3.0
nProjects: 3
shortest: _h?480p\.mov$
Features:

1: LIT|a literal character | 11.333333333333334
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 0.6666666666666666
4: KLE|zero-or-more repetition | 0.6666666666666666
5: CCC|custom character class | 0.3333333333333333
6: QST|zero-or-one repetition | 0.3333333333333333
7: RNG|chars within a range | 0.3333333333333333


0000 | 0001 | u'_h?480p\\.mov$'
0001 | 0001 | '.*@example\\.com$'
0002 | 0001 | '[a-z]*.example.com'



cluster 245 stats:
nPatterns: 3.0
nProjects: 3
shortest: Model name:\s+(.*)
Features:

1: LIT|a literal character | 16.0
2: ADD|one-or-more repetition | 0.6666666666666666
3: ANY|any non-newline char | 0.6666666666666666
4: CG|a capture group | 0.6666666666666666
5: KLE|zero-or-more repetition | 0.6666666666666666
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666


0000 | 0001 | 'Model name:\\s+(.*)'
0001 | 0001 | '<pre><a name="foo-1">'
0002 | 0001 | '//\\s+FaketimeFlags:(.*)'



cluster 246 stats:
nPatterns: 4.0
nProjects: 3
shortest: .+?/Misc
Features:

1: LIT|a literal character | 6.5
2: ANY|any non-newline char | 1.25
3: ADD|one-or-more repetition | 1.0
4: LKB|matching sequence precedes | 0.5
5: KLE|zero-or-more repetition | 0.25
6: LZY|as few reps as possible | 0.25
7: PNG|named capture group | 0.25


0000 | 0001 | '.+?/Misc'
0001 | 0001 | '.+(?<=archives/)'
0002 | 0001 | '.+(?<=spektakl/)'
0003 | 0001 | '.*://(?P<namespace>.+)'



cluster 247 stats:
nPatterns: 2.0
nProjects: 3
shortest: This is file for test_formatted_disk.
Features:

1: LIT|a literal character | 34.5
2: ANY|any non-newline char | 0.5
3: CG|a capture group | 0.5
4: OR|logical or | 0.5


0000 | 0002 | 'This is file for test_formatted_disk.'
0001 | 0001 | 'This is (pdfTeXk|latex2e|latex|XeTeXk)'



cluster 248 stats:
nPatterns: 2.0
nProjects: 3
shortest: (?P<name>[^=]+)="(?P<value>[^"]*)" *
Features:

1: LIT|a literal character | 11.0
2: PNG|named capture group | 2.0
3: CCC|custom character class | 1.5
4: KLE|zero-or-more repetition | 1.5
5: QST|zero-or-one repetition | 1.5
6: RNG|chars within a range | 1.5
7: ADD|one-or-more repetition | 1.0
8: NCCC|negated CCC | 1.0
9: OR|logical or | 0.5
10: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | '(?P<names>\\w+[-A-Za-z0-9|]*)?(?P<spec>!|[=:][infs]@?)?'
0001 | 0001 | '(?P<name>[^=]+)="(?P<value>[^"]*)" *'



cluster 249 stats:
nPatterns: 3.0
nProjects: 3
shortest: smallint.* unsigned
Features:

1: LIT|a literal character | 24.666666666666668
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: CG|a capture group | 0.6666666666666666
5: LZY|as few reps as possible | 0.6666666666666666


0000 | 0002 | 'attempt model run (.*?) one more '
0001 | 0002 | 'model run (.*?) commencing on node'
0002 | 0001 | 'smallint.* unsigned'



cluster 250 stats:
nPatterns: 2.0
nProjects: 3
shortest: Working file: (?P<filename>.*)
Features:

1: LIT|a literal character | 20.5
2: KLE|zero-or-more repetition | 1.5
3: PNG|named capture group | 1.5
4: ANY|any non-newline char | 1.0
5: ADD|one-or-more repetition | 0.5
6: DEC|any of: 0123456789 | 0.5
7: END|end-of-line | 0.5
8: LZY|as few reps as possible | 0.5
9: STR|start-of-line | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '^\\s*\\# DEBUG\\(filename=(?P<filename>.*?), lineno=(?P<lineno>\\d+)\\)$'
0001 | 0001 | 'Working file: (?P<filename>.*)'



cluster 251 stats:
nPatterns: 3.0
nProjects: 3
shortest: ^\s*[A-Z/\s-]+ATTRIBUTES\s*$
Features:

1: LIT|a literal character | 12.0
2: KLE|zero-or-more repetition | 3.6666666666666665
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.3333333333333335
4: ANY|any non-newline char | 1.3333333333333333
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0
9: CCC|custom character class | 0.3333333333333333
10: RNG|chars within a range | 0.3333333333333333


0000 | 0001 | '^\\s*[A-Z/\\s-]+ATTRIBUTES\\s*$'
0001 | 0001 | '^(\\s*iret)\\s*=\\s*.*CPU THROTTLE.*$'
0002 | 0001 | '^\\s*\\"(.+)\\"\\s*,\\s*\\"(.+)\\"\\s*$'



cluster 252 stats:
nPatterns: 2.0
nProjects: 3
shortest: (takes [\w ]+ )(\d+)( arguments? \()(\d+)( given\))
Features:

1: LIT|a literal character | 36.0
2: CG|a capture group | 4.0
3: ADD|one-or-more repetition | 3.0
4: DEC|any of: 0123456789 | 2.5
5: QST|zero-or-one repetition | 2.0
6: CCC|custom character class | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | '(\\d+) files? changed, (\\d+) insertions?\\(\\+\\), (\\d+) deletions?\\(\\-\\)'
0001 | 0001 | '(takes [\\w ]+ )(\\d+)( arguments? \\()(\\d+)( given\\))'



cluster 253 stats:
nPatterns: 3.0
nProjects: 3
shortest: <a [^>]*href="([^"]+)"[^>]*>.*?</a>
Features:

1: LIT|a literal character | 21.333333333333332
2: KLE|zero-or-more repetition | 2.6666666666666665
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 1.6666666666666667
5: LZY|as few reps as possible | 1.6666666666666667
6: NCCC|negated CCC | 1.0
7: ADD|one-or-more repetition | 0.3333333333333333
8: NLKA|sequence doesn't follow  | 0.3333333333333333
9: OR|logical or | 0.3333333333333333


0000 | 0001 | '<a [^>]*href="([^"]+)"[^>]*>.*?</a>'
0001 | 0001 | '<a href="(?!http|ftp|mailto|/).*</a>'
0002 | 0001 | '<a(.*?)href="(.*?)"(.*?)\xd7\x94\xd7\x91\xd7\x90(.*?)</a>'



cluster 254 stats:
nPatterns: 3.0
nProjects: 3
shortest: \${\W*next.body\(\)\W*}
Features:

1: LIT|a literal character | 21.333333333333332
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.3333333333333335
4: CG|a capture group | 1.0
5: ANY|any non-newline char | 0.6666666666666666
6: NWRD|non-word chars | 0.6666666666666666
7: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
8: ADD|one-or-more repetition | 0.3333333333333333
9: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '\\${\\W*next.body\\(\\)\\W*}'
0001 | 0001 | '^(.*\\n)*def\\s+step_init\\s*\\(\\s*\\)\\s*:'
0002 | 0001 | 'boost::statechart::state_machine<\\s*(\\w*),\\s*(\\w*)\\s*>'



cluster 255 stats:
nPatterns: 2.0
nProjects: 3
shortest: \s*__version__\s*=\s*(("([^"]|\\")*"|\'([^\']|\\\')*\'))
Features:

1: LIT|a literal character | 21.5
2: CG|a capture group | 6.0
3: KLE|zero-or-more repetition | 5.0
4: OR|logical or | 4.0
5: NCCC|negated CCC | 2.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.5
7: ANY|any non-newline char | 1.5
8: CCC|custom character class | 1.0
9: NCG|group without capturing | 1.0


0000 | 0002 | '\\s*__version__\\s*=\\s*(("([^"]|\\\\")*"|\'([^\']|\\\\\')*\'))'
0001 | 0001 | '((,([\\s\\r\\n]*)(\\]))|(,([\\s\\r\\n]*)(\\})))|("(?:\\\\.|[^"\\\\])*"|\'(?:\\\\.|[^\'\\\\])*\'|.[^,"\']*)'



cluster 256 stats:
nPatterns: 3.0
nProjects: 3
shortest: (#\tmodified:\s+|#\tnew file:\s+|#\tdeleted:\s+)
Features:

1: LIT|a literal character | 39.333333333333336
2: ADD|one-or-more repetition | 4.333333333333333
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.3333333333333335
4: CG|a capture group | 2.3333333333333335
5: CCC|custom character class | 1.6666666666666667
6: RNG|chars within a range | 1.6666666666666667
7: ANY|any non-newline char | 0.3333333333333333
8: KLE|zero-or-more repetition | 0.3333333333333333
9: OR|logical or | 0.3333333333333333


0000 | 0001 | '(#\tmodified:\\s+|#\tnew file:\\s+|#\tdeleted:\\s+)'
0001 | 0001 | 'NIST score = ([0-9.]+)\\s+BLEU score = ([0-9.]+)\\s+for system "(.*)"'
0002 | 0001 | 'mapped\\:\\s([0-9]+)K\\s+writeable/private:\\s([0-9]+)K\\s+shared:\\s+([0-9]+)K'



cluster 257 stats:
nPatterns: 1.0
nProjects: 2
shortest: el6
Features:

1: LIT|a literal character | 3.0


0000 | 0002 | 'el6'



cluster 258 stats:
nPatterns: 1.0
nProjects: 2
shortest: date
Features:

1: LIT|a literal character | 4.0


0000 | 0002 | 'date'



cluster 259 stats:
nPatterns: 1.0
nProjects: 2
shortest: \n +
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0


0000 | 0002 | '\\n +'



cluster 260 stats:
nPatterns: 1.0
nProjects: 2
shortest: .*\*$
Features:

1: ANY|any non-newline char | 1.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LIT|a literal character | 1.0


0000 | 0002 | '.*\\*$'



cluster 261 stats:
nPatterns: 1.0
nProjects: 2
shortest: \$\d
Features:

1: DEC|any of: 0123456789 | 1.0
2: LIT|a literal character | 1.0


0000 | 0001 | '\\$\\d'



cluster 262 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^.*\/
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: STR|start-of-line | 1.0


0000 | 0002 | '^.*\\/'



cluster 263 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^[0-9]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0
4: STR|start-of-line | 1.0


0000 | 0002 | '^[0-9]'



cluster 264 stats:
nPatterns: 1.0
nProjects: 2
shortest: diff -
Features:

1: LIT|a literal character | 6.0


0000 | 0002 | 'diff -'



cluster 265 stats:
nPatterns: 1.0
nProjects: 2
shortest: default
Features:

1: LIT|a literal character | 7.0


0000 | 0002 | 'default'



cluster 266 stats:
nPatterns: 1.0
nProjects: 2
shortest: .py\w?$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: QST|zero-or-one repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '.py\\w?$'



cluster 267 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^yt-(.*)$
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0002 | '^yt-(.*)$'



cluster 268 stats:
nPatterns: 1.0
nProjects: 2
shortest: (\w+\W*)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NWRD|non-word chars | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '(\\w+\\W*)'



cluster 269 stats:
nPatterns: 2.0
nProjects: 2
shortest: _$
Features:

1: LIT|a literal character | 1.5
2: END|end-of-line | 0.5


0000 | 0001 | '_$'
0001 | 0001 | '__'



cluster 270 stats:
nPatterns: 1.0
nProjects: 2
shortest: Audio Files
Features:

1: LIT|a literal character | 11.0


0000 | 0002 | 'Audio Files'



cluster 271 stats:
nPatterns: 2.0
nProjects: 2
shortest: TA
Features:

1: LIT|a literal character | 2.5


0000 | 0001 | 'TA'
0001 | 0001 | 'LGA'



cluster 272 stats:
nPatterns: 1.0
nProjects: 2
shortest: \((H|S)\)
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0


0000 | 0002 | '\\((H|S)\\)'



cluster 273 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(.+?)_(.+)$
Features:

1: ADD|one-or-more repetition | 2.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: END|end-of-line | 1.0
5: LIT|a literal character | 1.0
6: LZY|as few reps as possible | 1.0
7: STR|start-of-line | 1.0


0000 | 0002 | '^(.+?)_(.+)$'



cluster 274 stats:
nPatterns: 1.0
nProjects: 2
shortest: \.repeat\d+
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0


0000 | 0002 | '\\.repeat\\d+'



cluster 275 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^/dev/[a-z]+$
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: END|end-of-line | 1.0
5: RNG|chars within a range | 1.0
6: STR|start-of-line | 1.0


0000 | 0002 | '^/dev/[a-z]+$'



cluster 276 stats:
nPatterns: 1.0
nProjects: 2
shortest: .*?\S\.\s
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: LZY|as few reps as possible | 1.0
5: NWSP|any non-whitespace | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | u'.*?\\S\\.\\s'



cluster 277 stats:
nPatterns: 1.0
nProjects: 2
shortest: ((^|\n)\s*)@
Features:

1: CG|a capture group | 2.0
2: LIT|a literal character | 2.0
3: KLE|zero-or-more repetition | 1.0
4: OR|logical or | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '((^|\\n)\\s*)@'



cluster 278 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?i)([a-z]{2})
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: OPT|options wrapper | 1.0
5: RNG|chars within a range | 1.0
6: SNG|exactly n repetition | 1.0


0000 | 0002 | '(?i)([a-z]{2})'



cluster 279 stats:
nPatterns: 1.0
nProjects: 2
shortest: \[\d\]\s+=
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '\\[\\d\\]\\s+='



cluster 280 stats:
nPatterns: 2.0
nProjects: 2
shortest: try
Features:

1: LIT|a literal character | 4.0


0000 | 0001 | 'try'
0001 | 0001 | 'tree='



cluster 281 stats:
nPatterns: 1.0
nProjects: 2
shortest: --cols=[0-9]+
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: RNG|chars within a range | 1.0


0000 | 0002 | u'--cols=[0-9]+'



cluster 282 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^([^:]*):[^:]*$
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0
3: NCCC|negated CCC | 2.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0002 | '^([^:]*):[^:]*$'



cluster 283 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\-2|\-{2})$
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: OR|logical or | 1.0
5: SNG|exactly n repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0002 | '^(\\-2|\\-{2})$'



cluster 284 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^G
Features:

1: LIT|a literal character | 3.5
2: STR|start-of-line | 1.0


0000 | 0001 | '^G'
0001 | 0001 | '^GROUP:'



cluster 285 stats:
nPatterns: 2.0
nProjects: 2
shortest: %PDF
Features:

1: LIT|a literal character | 4.5
2: STR|start-of-line | 0.5


0000 | 0001 | '%PDF'
0001 | 0001 | '^PDBID'



cluster 286 stats:
nPatterns: 2.0
nProjects: 2
shortest: BOOST
Features:

1: LIT|a literal character | 5.0


0000 | 0001 | 'BOOST'
0001 | 0001 | 'FLOAT'



cluster 287 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^eth$
Features:

1: LIT|a literal character | 3.5
2: END|end-of-line | 1.0
3: STR|start-of-line | 0.5


0000 | 0001 | '^eth$'
0001 | 0001 | 'ooth$'



cluster 288 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^undo\s+(\d+)$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '^undo\\s+(\\d+)$'



cluster 289 stats:
nPatterns: 1.0
nProjects: 2
shortest: ,[ ]*([-]?\d+|n)
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 2.0
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0
7: OR|logical or | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0002 | ',[ ]*([-]?\\d+|n)'



cluster 290 stats:
nPatterns: 1.0
nProjects: 2
shortest: \(live[^\)]*\)
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0


0000 | 0002 | '\\(live[^\\)]*\\)'



cluster 291 stats:
nPatterns: 1.0
nProjects: 2
shortest: '(.*?)(?<!\\)',?
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: NLKB|sequence doesn't precede | 1.0
7: QST|zero-or-one repetition | 1.0


0000 | 0002 | "'(.*?)(?<!\\\\)',?"



cluster 292 stats:
nPatterns: 2.0
nProjects: 2
shortest: \.0*$
Features:

1: LIT|a literal character | 3.0
2: END|end-of-line | 0.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0001 | '\\.0*$'
0001 | 0001 | '\\.php'



cluster 293 stats:
nPatterns: 1.0
nProjects: 2
shortest: \\(t|n|r|"|\\)
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0


0000 | 0002 | '\\\\(t|n|r|"|\\\\)'



cluster 294 stats:
nPatterns: 2.0
nProjects: 2
shortest: SID=
Features:

1: LIT|a literal character | 6.5


0000 | 0001 | 'SID='
0001 | 0001 | 'SENDMAIL='



cluster 295 stats:
nPatterns: 1.0
nProjects: 2
shortest: \.\. (.+?)::(.*)$
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: LZY|as few reps as possible | 1.0


0000 | 0002 | '\\.\\. (.+?)::(.*)$'



cluster 296 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^[-+]?([0][0-7,]*)$
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 3.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: QST|zero-or-one repetition | 1.0
7: RNG|chars within a range | 1.0
8: STR|start-of-line | 1.0


0000 | 0002 | '^[-+]?([0][0-7,]*)$'



cluster 297 stats:
nPatterns: 1.0
nProjects: 2
shortest: (\D)\.(?!\s)(\D)
Features:

1: CG|a capture group | 2.0
2: NDEC|any non-decimal | 2.0
3: LIT|a literal character | 1.0
4: NLKA|sequence doesn't follow  | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(\\D)\\.(?!\\s)(\\D)'



cluster 298 stats:
nPatterns: 1.0
nProjects: 2
shortest: (^|\\n)([^\\]*)$
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 2.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: OR|logical or | 1.0
7: STR|start-of-line | 1.0


0000 | 0002 | '(^|\\\\n)([^\\\\]*)$'



cluster 299 stats:
nPatterns: 1.0
nProjects: 2
shortest: \[.*\d+ tests.*\n
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: DEC|any of: 0123456789 | 1.0


0000 | 0002 | '\\[.*\\d+ tests.*\\n'



cluster 300 stats:
nPatterns: 1.0
nProjects: 2
shortest: [$][{]\d+:([^}]+)[}]
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 3.0
3: ADD|one-or-more repetition | 2.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: NCCC|negated CCC | 1.0


0000 | 0002 | '[$][{]\\d+:([^}]+)[}]'



cluster 301 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(Y|X|A|N) ([\S ]+)$
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: END|end-of-line | 1.0
6: NWSP|any non-whitespace | 1.0
7: OR|logical or | 1.0
8: STR|start-of-line | 1.0


0000 | 0002 | '^(Y|X|A|N) ([\\S ]+)$'



cluster 302 stats:
nPatterns: 2.0
nProjects: 2
shortest: irr.ru
Features:

1: LIT|a literal character | 5.5
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0001 | 'irr.ru'
0001 | 0001 | 'init.*.rc'



cluster 303 stats:
nPatterns: 1.0
nProjects: 2
shortest: "(.*)"\s*->\s*"(.*)"
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 4.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0002 | '"(.*)"\\s*->\\s*"(.*)"'



cluster 304 stats:
nPatterns: 1.0
nProjects: 2
shortest: \/\*[\s\S]*?\*\/
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: NWSP|any non-whitespace | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '\\/\\*[\\s\\S]*?\\*\\/'



cluster 305 stats:
nPatterns: 1.0
nProjects: 2
shortest: \bexpires=([^;]+)(?i)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: OPT|options wrapper | 1.0
6: WNW|word/non-word boundary | 1.0


0000 | 0002 | '\\bexpires=([^;]+)(?i)'



cluster 306 stats:
nPatterns: 1.0
nProjects: 2
shortest: clocksource=[a-z\- ]+
Features:

1: LIT|a literal character | 16.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: RNG|chars within a range | 1.0


0000 | 0002 | 'clocksource=[a-z\\- ]+'



cluster 307 stats:
nPatterns: 1.0
nProjects: 2
shortest: Allocation:\s+(\S+.*)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NWSP|any non-whitespace | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | 'Allocation:\\s+(\\S+.*)'



cluster 308 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^([A-Z].*?\.(?:\s|$))
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: LZY|as few reps as possible | 1.0
8: NCG|group without capturing | 1.0
9: OR|logical or | 1.0
10: RNG|chars within a range | 1.0
11: STR|start-of-line | 1.0
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '^([A-Z].*?\\.(?:\\s|$))'



cluster 309 stats:
nPatterns: 2.0
nProjects: 2
shortest: no EDMs
Features:

1: LIT|a literal character | 8.5


0000 | 0001 | 'no EDMs'
0001 | 0001 | 'More Games'



cluster 310 stats:
nPatterns: 2.0
nProjects: 2
shortest: Village
Features:

1: LIT|a literal character | 9.5


0000 | 0001 | 'Village'
0001 | 0001 | 'bill-actions'



cluster 311 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(.*)"""$
Features:

1: LIT|a literal character | 2.0
2: KLE|zero-or-more repetition | 1.5
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: CCC|custom character class | 0.5


0000 | 0001 | '^(.*)"""$'
0001 | 0001 | '^([.]*).*$'



cluster 312 stats:
nPatterns: 1.0
nProjects: 2
shortest: descr\s+(\S+?):\s*(.*)$
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 1.0
8: LZY|as few reps as possible | 1.0
9: NWSP|any non-whitespace | 1.0


0000 | 0002 | 'descr\\s+(\\S+?):\\s*(.*)$'



cluster 313 stats:
nPatterns: 1.0
nProjects: 2
shortest: PREFIX\('.*?'\)(.*?)\(.*
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 3.0
4: LZY|as few reps as possible | 2.0
5: CG|a capture group | 1.0


0000 | 0002 | "PREFIX\\('.*?'\\)(.*?)\\(.*"



cluster 314 stats:
nPatterns: 2.0
nProjects: 2
shortest: \-\s*\>
Features:

1: LIT|a literal character | 2.5
2: KLE|zero-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
4: CCC|custom character class | 0.5


0000 | 0001 | '\\-\\s*\\>'
0001 | 0001 | '[-+]\\s*\\('



cluster 315 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(Sch|S)A
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 1.5
3: OR|logical or | 1.0
4: STR|start-of-line | 1.0
5: END|end-of-line | 0.5


0000 | 0001 | '^(Sch|S)A'
0001 | 0001 | '^(and)|(or)$'



cluster 316 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([;,\s]+)
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
5: CCC|custom character class | 0.5
6: NCCC|negated CCC | 0.5


0000 | 0001 | '([;,\\s]+)'
0001 | 0001 | '&([^;\\s]+);'



cluster 317 stats:
nPatterns: 2.0
nProjects: 2
shortest: Not Found
Features:

1: LIT|a literal character | 11.0


0000 | 0001 | 'Not Found'
0001 | 0001 | '404 Not Found'



cluster 318 stats:
nPatterns: 1.0
nProjects: 2
shortest: [&?]versionId=([^&]+)($|=|&)
Features:

1: LIT|a literal character | 15.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0
7: OR|logical or | 1.0


0000 | 0002 | '[&?]versionId=([^&]+)($|=|&)'



cluster 319 stats:
nPatterns: 1.0
nProjects: 2
shortest: \[.* test environment .*\n
Features:

1: LIT|a literal character | 20.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0


0000 | 0002 | '\\[.* test environment .*\\n'



cluster 320 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\d*)\.(\d*)\[(\d+)\]$
Features:

1: CG|a capture group | 3.0
2: DEC|any of: 0123456789 | 3.0
3: LIT|a literal character | 3.0
4: KLE|zero-or-more repetition | 2.0
5: ADD|one-or-more repetition | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0


0000 | 0002 | '^(\\d*)\\.(\\d*)\\[(\\d+)\\]$'



cluster 321 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\w+)\s*:\s+(\d+)\s\w+
Features:

1: ADD|one-or-more repetition | 4.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: CG|a capture group | 2.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0
7: LIT|a literal character | 1.0
8: STR|start-of-line | 1.0


0000 | 0002 | '^(\\w+)\\s*:\\s+(\\d+)\\s\\w+'



cluster 322 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^--([^\n]+)\n(.*?)\n--\1$
Features:

1: LIT|a literal character | 7.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: BKR|match the $i^{th}$ CG | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: LZY|as few reps as possible | 1.0
9: NCCC|negated CCC | 1.0
10: STR|start-of-line | 1.0


0000 | 0002 | '^--([^\\n]+)\\n(.*?)\\n--\\1$'



cluster 323 stats:
nPatterns: 1.0
nProjects: 2
shortest: autoyast\=[\w\d\:\.\/]+
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: DEC|any of: 0123456789 | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | 'autoyast\\=[\\w\\d\\:\\.\\/]+'



cluster 324 stats:
nPatterns: 2.0
nProjects: 2
shortest: LSID=[^\n]+
Features:

1: LIT|a literal character | 6.5
2: ADD|one-or-more repetition | 0.5
3: CCC|custom character class | 0.5
4: NCCC|negated CCC | 0.5
5: RNG|chars within a range | 0.5
6: WNW|word/non-word boundary | 0.5


0000 | 0001 | 'LSID=[^\\n]+'
0001 | 0001 | 'MSIE [1-7]\\b'



cluster 325 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^"(.*)"\s*$
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 1.5
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '^"(.*)"\\s*$'
0001 | 0001 | '^u_(.*)_level$'



cluster 326 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?:const-)?([A-Za-z0-9]+)\*?\s+
Features:

1: LIT|a literal character | 13.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 2.0
4: QST|zero-or-one repetition | 2.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: NCG|group without capturing | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(?:const-)?([A-Za-z0-9]+)\\*?\\s+'



cluster 327 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*?: (.*)
Features:

1: LIT|a literal character | 6.5
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.5
4: CG|a capture group | 1.0
5: LZY|as few reps as possible | 0.5


0000 | 0001 | '.*?: (.*)'
0001 | 0001 | 'OUTPUT *(.*\\.aux)'



cluster 328 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^[\w\-\_]+$
Features:

1: LIT|a literal character | 3.5
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0
6: ADD|one-or-more repetition | 0.5
7: KLE|zero-or-more repetition | 0.5


0000 | 0001 | '^[\\w,./=-]*$'
0001 | 0001 | '^[\\w\\-\\_]+$'



cluster 329 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\s+\(copy-func\s+)(\w+)(.*)$
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '^(\\s+\\(copy-func\\s+)(\\w+)(.*)$'



cluster 330 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^A[0-9][^ ]+$
Features:

1: LIT|a literal character | 5.5
2: ADD|one-or-more repetition | 1.5
3: NCCC|negated CCC | 1.5
4: STR|start-of-line | 1.0
5: CCC|custom character class | 0.5
6: END|end-of-line | 0.5
7: RNG|chars within a range | 0.5


0000 | 0001 | '^A[0-9][^ ]+$'
0001 | 0001 | '^[^ :]+:[^ ]+ - '



cluster 331 stats:
nPatterns: 1.0
nProjects: 2
shortest: %module(\s*\(.*\))?\s+("?)(.+)\2
Features:

1: LIT|a literal character | 10.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: ANY|any non-newline char | 2.0
5: KLE|zero-or-more repetition | 2.0
6: QST|zero-or-one repetition | 2.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
8: BKR|match the $i^{th}$ CG | 1.0


0000 | 0002 | '%module(\\s*\\(.*\\))?\\s+("?)(.+)\\2'



cluster 332 stats:
nPatterns: 3.0
nProjects: 2
shortest: ^def .+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: STR|start-of-line | 0.6666666666666666
5: CCC|custom character class | 0.3333333333333333


0000 | 0001 | '^def .+'
0001 | 0001 | '^class .+'
0002 | 0001 | 'f[lie]=.+'



cluster 333 stats:
nPatterns: 2.0
nProjects: 2
shortest: <uuid>.*</uuid>
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 0.5


0000 | 0001 | '<uuid>.*</uuid>'
0001 | 0001 | '<uuid.*?uuid>\\n  '



cluster 334 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\s+\(c-name\s+)([^\s]+)(\s*\))$
Features:

1: LIT|a literal character | 8.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
3: ADD|one-or-more repetition | 3.0
4: CG|a capture group | 3.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0
8: STR|start-of-line | 1.0


0000 | 0002 | '^(\\s+\\(c-name\\s+)([^\\s]+)(\\s*\\))$'



cluster 335 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\-+\+\-+$
Features:

1: ADD|one-or-more repetition | 2.5
2: LIT|a literal character | 2.5
3: DEC|any of: 0123456789 | 1.5
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^\\-+\\+\\-+$'
0001 | 0001 | '^\\d+\\-\\d+\\-\\d+$'



cluster 336 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^is_dhcp_scope$
Features:

1: LIT|a literal character | 12.5
2: END|end-of-line | 1.0
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: OR|logical or | 0.5
6: QST|zero-or-one repetition | 0.5
7: STR|start-of-line | 0.5


0000 | 0001 | '^is_dhcp_scope$'
0001 | 0001 | '__init__.py(c|o)?$'



cluster 337 stats:
nPatterns: 2.0
nProjects: 2
shortest: internal log
Features:

1: LIT|a literal character | 16.5


0000 | 0001 | 'internal log'
0001 | 0001 | 'Error: unable to free'



cluster 338 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([^*]+)\*(\d+)
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: NCCC|negated CCC | 1.0
5: DEC|any of: 0123456789 | 0.5
6: LZY|as few reps as possible | 0.5


0000 | 0001 | '([^*]+)\\*(\\d+)'
0001 | 0001 | "#([^']+?)# \\(qv\\)"



cluster 339 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^### SALT: (\w+)
Features:

1: LIT|a literal character | 11.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: STR|start-of-line | 0.5


0000 | 0001 | '^### SALT: (\\w+)'
0001 | 0001 | 'file format: (\\w+)'



cluster 340 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^@executable_path/
Features:

1: LIT|a literal character | 10.0
2: STR|start-of-line | 1.0
3: ADD|one-or-more repetition | 0.5
4: CCC|custom character class | 0.5
5: PNG|named capture group | 0.5
6: RNG|chars within a range | 0.5


0000 | 0001 | '^@executable_path/'
0001 | 0001 | '^\\*(?P<table>[a-z]+)'



cluster 341 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(.*) ?\[([^ ]*) \+(0x[0-9A-F]{1,8})\](.*)$
Features:

1: LIT|a literal character | 12.0
2: CG|a capture group | 4.0
3: KLE|zero-or-more repetition | 3.0
4: ANY|any non-newline char | 2.0
5: RNG|chars within a range | 2.0
6: CCC|custom character class | 1.0
7: DBB|$n\le x \le m$ repetition | 1.0
8: END|end-of-line | 1.0
9: NCCC|negated CCC | 1.0
10: QST|zero-or-one repetition | 1.0
11: STR|start-of-line | 1.0


0000 | 0002 | '^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'



cluster 342 stats:
nPatterns: 1.0
nProjects: 2
shortest: href\s*=\s*[\'"]?<([\w\.]+)>[\'"]?\s*(,?)
Features:

1: LIT|a literal character | 13.0
2: CCC|custom character class | 3.0
3: KLE|zero-or-more repetition | 3.0
4: QST|zero-or-one repetition | 3.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
6: CG|a capture group | 2.0
7: ADD|one-or-more repetition | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | 'href\\s*=\\s*[\'"]?<([\\w\\.]+)>[\'"]?\\s*(,?)'



cluster 343 stats:
nPatterns: 2.0
nProjects: 2
shortest: (^True$|^False$)
Features:

1: LIT|a literal character | 12.0
2: CG|a capture group | 1.5
3: END|end-of-line | 1.0
4: OR|logical or | 1.0
5: STR|start-of-line | 1.0
6: KLE|zero-or-more repetition | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '(^True$|^False$)'
0001 | 0001 | '(module|def|class) (\\w*)'



cluster 344 stats:
nPatterns: 1.0
nProjects: 2
shortest: (--|-|\+)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?
Features:

1: LIT|a literal character | 13.0
2: RNG|chars within a range | 3.0
3: PNG|named capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: CG|a capture group | 1.0
8: KLE|zero-or-more repetition | 1.0
9: OR|logical or | 1.0
10: QST|zero-or-one repetition | 1.0


0000 | 0002 | '(--|-|\\+)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?'



cluster 345 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?P<name>[\w .-]+)\s*\(\s*(?P<ver>[^\s)]+)\)$
Features:

1: LIT|a literal character | 6.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: ADD|one-or-more repetition | 2.0
4: KLE|zero-or-more repetition | 2.0
5: PNG|named capture group | 2.0
6: CCC|custom character class | 1.0
7: END|end-of-line | 1.0
8: NCCC|negated CCC | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '(?P<name>[\\w .-]+)\\s*\\(\\s*(?P<ver>[^\\s)]+)\\)$'



cluster 346 stats:
nPatterns: 2.0
nProjects: 2
shortest: [QA]?[:;.]?\d\d
Features:

1: LIT|a literal character | 6.0
2: LZY|as few reps as possible | 2.5
3: ANY|any non-newline char | 1.5
4: KLE|zero-or-more repetition | 1.5
5: ADD|one-or-more repetition | 1.0
6: CCC|custom character class | 1.0
7: DEC|any of: 0123456789 | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0001 | '[QA]?[:;.]?\\d\\d'
0001 | 0001 | '\\[".*?\\]+?.*?\\[/".*?\\]+?'



cluster 347 stats:
nPatterns: 2.0
nProjects: 2
shortest: \(used in test .+\) 
Features:

1: LIT|a literal character | 17.5
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 0.5


0000 | 0002 | '\\(used in test .+\\) '
0001 | 0001 | 'FocusedApplication(.+)/'



cluster 348 stats:
nPatterns: 2.0
nProjects: 2
shortest: ((?:"[^"\s]+")+)$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.5
3: KLE|zero-or-more repetition | 1.5
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: LZY|as few reps as possible | 1.0
7: NCG|group without capturing | 1.0
8: OR|logical or | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0
10: CCC|custom character class | 0.5
11: END|end-of-line | 0.5
12: NCCC|negated CCC | 0.5
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '((?:"[^"\\s]+")+)$'
0001 | 0001 | u'<.*?>|((?:\\w[-\\w]*|&.*?;)+)'



cluster 349 stats:
nPatterns: 1.0
nProjects: 2
shortest: <title>(.+?) - Wikipedia, the free encyclopedia</title>
Features:

1: LIT|a literal character | 50.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0002 | '<title>(.+?) - Wikipedia, the free encyclopedia</title>'



cluster 350 stats:
nPatterns: 2.0
nProjects: 2
shortest: NPY_NO_EXPORT\s+(.*)$
Features:

1: LIT|a literal character | 13.5
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: ADD|one-or-more repetition | 0.5


0000 | 0001 | 'NPY_NO_EXPORT\\s+(.*)$'
0001 | 0001 | 'Set TRANSCOMM\\s*=\\s*(.*)$'



cluster 351 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^Version\s*:\s*(\S+)
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 1.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NWSP|any non-whitespace | 1.0
7: STR|start-of-line | 0.5


0000 | 0001 | '^Version\\s*:\\s*(\\S+)'
0001 | 0001 | '\\[new branch\\]\\s+(\\S+)'



cluster 352 stats:
nPatterns: 2.0
nProjects: 2
shortest: RESIDUE NUMBERS :(.*)
Features:

1: LIT|a literal character | 20.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0001 | 'RESIDUE NUMBERS :(.*)'
0001 | 0001 | '^AUTOTEST_TEST_COMPLETE:(.*)$'



cluster 353 stats:
nPatterns: 2.0
nProjects: 2
shortest: Cert\s+\d+:\s+(.*)$
Features:

1: LIT|a literal character | 12.5
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
8: DEC|any of: 0123456789 | 0.5
9: QST|zero-or-one repetition | 0.5


0000 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'
0001 | 0001 | 'update_(smoke)?test_(.*)\\.py$'



cluster 354 stats:
nPatterns: 2.0
nProjects: 2
shortest: \((.*)/(.*)/(.*)\)
Features:

1: LIT|a literal character | 10.5
2: ANY|any non-newline char | 2.5
3: KLE|zero-or-more repetition | 2.5
4: CG|a capture group | 2.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '\\((.*)/(.*)/(.*)\\)'
0001 | 0001 | 'medea\\._addMod\\(.*?,\\[(.*?)\\]'



cluster 355 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^([ \|0-9-]*)(.*) ?\[([^ ]*) \+(0x[0-9A-F]{1,8})\](.*)$
Features:

1: LIT|a literal character | 17.0
2: CG|a capture group | 5.0
3: KLE|zero-or-more repetition | 4.0
4: RNG|chars within a range | 3.0
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 2.0
7: DBB|$n\le x \le m$ repetition | 1.0
8: END|end-of-line | 1.0
9: NCCC|negated CCC | 1.0
10: QST|zero-or-one repetition | 1.0
11: STR|start-of-line | 1.0


0000 | 0002 | '^([ \\|0-9-]*)(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'



cluster 356 stats:
nPatterns: 2.0
nProjects: 2
shortest: (varchar|char)\((\d+)\)
Features:

1: LIT|a literal character | 12.5
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: DEC|any of: 0123456789 | 1.0
5: OR|logical or | 1.0
6: CCC|custom character class | 0.5
7: NWSP|any non-whitespace | 0.5
8: QST|zero-or-one repetition | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '(varchar|char)\\((\\d+)\\)'
0001 | 0001 | 'yvsearch(\\d+|all)?:[\\s\\S]+'



cluster 357 stats:
nPatterns: 2.0
nProjects: 2
shortest: <td class="checkbox"
Features:

1: LIT|a literal character | 27.0
2: ANY|any non-newline char | 0.5
3: KLE|zero-or-more repetition | 0.5
4: LZY|as few reps as possible | 0.5


0000 | 0001 | '<td class="checkbox"'
0001 | 0001 | '<div class="filmo-episodes">.*?</div>'



cluster 358 stats:
nPatterns: 1.0
nProjects: 2
shortest: use\s+encoding(?:::source)?\s+([\'"])(?P<encoding>[\w-]+)\1
Features:

1: LIT|a literal character | 22.0
2: ADD|one-or-more repetition | 3.0
3: CCC|custom character class | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: BKR|match the $i^{th}$ CG | 1.0
6: CG|a capture group | 1.0
7: NCG|group without capturing | 1.0
8: PNG|named capture group | 1.0
9: QST|zero-or-one repetition | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | 'use\\s+encoding(?:::source)?\\s+([\'"])(?P<encoding>[\\w-]+)\\1'



cluster 359 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*Pop: (.+) Locus: (.+)
Features:

1: LIT|a literal character | 18.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.5
5: KLE|zero-or-more repetition | 1.0
6: CCC|custom character class | 0.5
7: DEC|any of: 0123456789 | 0.5
8: QST|zero-or-one repetition | 0.5


0000 | 0001 | '.*Pop: (.+) Locus: (.+)'
0001 | 0001 | 'Intel(\\(R\\))? (.*) processor [\\d]+MHz'



cluster 360 stats:
nPatterns: 1.0
nProjects: 2
shortest: \s*import\s+(\S+)\.([^\s.]+)\s+as\s+(\S+)(\s+for\s+(\S+))?
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 9.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 7.0
4: CG|a capture group | 5.0
5: NWSP|any non-whitespace | 3.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0002 | '\\s*import\\s+(\\S+)\\.([^\\s.]+)\\s+as\\s+(\\S+)(\\s+for\\s+(\\S+))?'



cluster 361 stats:
nPatterns: 2.0
nProjects: 2
shortest: \bsource\.([a-z+\-]+)
Features:

1: LIT|a literal character | 17.5
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.5
4: CG|a capture group | 1.5
5: KLE|zero-or-more repetition | 1.0
6: ADD|one-or-more repetition | 0.5
7: OR|logical or | 0.5
8: WNW|word/non-word boundary | 0.5


0000 | 0001 | '\\bsource\\.([a-z+\\-]+)'
0001 | 0001 | '\\*(fore|back)ground:[ ]*(#[A-Za-z0-9]*)'



cluster 362 stats:
nPatterns: 2.0
nProjects: 2
shortest: [ \r\t]*\n[ \r\t]*
Features:

1: LIT|a literal character | 12.0
2: NCCC|negated CCC | 2.0
3: KLE|zero-or-more repetition | 1.5
4: CCC|custom character class | 1.0
5: QST|zero-or-one repetition | 1.0
6: CG|a capture group | 0.5
7: END|end-of-line | 0.5
8: OR|logical or | 0.5


0000 | 0001 | '[ \r\t]*\n[ \r\t]*'
0001 | 0001 | u'[^\r\n\t ]?([^\r\n\t ]| [^\r\n\t ])*[^\r\n\t ]?$'



cluster 363 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([0-9]+\.[0-9]+\.[0-9]+).*
Features:

1: LIT|a literal character | 10.0
2: CCC|custom character class | 4.5
3: ADD|one-or-more repetition | 2.5
4: RNG|chars within a range | 2.5
5: CG|a capture group | 2.0
6: KLE|zero-or-more repetition | 1.5
7: ANY|any non-newline char | 0.5
8: OR|logical or | 0.5
9: QST|zero-or-one repetition | 0.5


0000 | 0001 | '([0-9]+\\.[0-9]+\\.[0-9]+).*'
0001 | 0001 | '([0-9]+)[ \t]*([<>][=]?|=)[ \t]*([0-9]+)'



cluster 364 stats:
nPatterns: 2.0
nProjects: 2
shortest: <img.+?src="(?P<filename>[^"]+?)"
Features:

1: LIT|a literal character | 15.0
2: NCCC|negated CCC | 1.5
3: ADD|one-or-more repetition | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: PNG|named capture group | 1.0
7: ANY|any non-newline char | 0.5


0000 | 0001 | '<img.+?src="(?P<filename>[^"]+?)"'
0001 | 0001 | '<img[^>]*src="(?P<url>http://[^"]*)"'



cluster 365 stats:
nPatterns: 2.0
nProjects: 2
shortest: \s*[,/&.]\s*|\s+and\s+|\s{2,}|\n
Features:

1: LIT|a literal character | 9.5
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.5
3: ADD|one-or-more repetition | 3.5
4: KLE|zero-or-more repetition | 1.5
5: CCC|custom character class | 1.0
6: ANY|any non-newline char | 0.5
7: CG|a capture group | 0.5
8: LWB|at least n repetition | 0.5
9: LZY|as few reps as possible | 0.5
10: OR|logical or | 0.5
11: QST|zero-or-one repetition | 0.5
12: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '\\s*[,/&.]\\s*|\\s+and\\s+|\\s{2,}|\n'
0001 | 0001 | "\\s*SELECT\\s+.+?\\s+FROM\\s+[']?(\\w+)"



cluster 366 stats:
nPatterns: 2.0
nProjects: 2
shortest: rFAILED.*\(failures=(\d+)\)
Features:

1: LIT|a literal character | 22.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'rFAILED.*\\(failures=(\\d+)\\)'
0001 | 0001 | '.*DCHECK\\(.*args\\.length\\(\\) == (\\d+)\\);'



cluster 367 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*:(?P<line>\d+)[ \t]+(?P<message>.*)
Features:

1: LIT|a literal character | 7.5
2: ADD|one-or-more repetition | 3.0
3: PNG|named capture group | 2.0
4: ANY|any non-newline char | 1.5
5: DEC|any of: 0123456789 | 1.5
6: KLE|zero-or-more repetition | 1.0
7: CCC|custom character class | 0.5
8: NCCC|negated CCC | 0.5


0000 | 0001 | '.*:(?P<line>\\d+)[ \t]+(?P<message>.*)'
0001 | 0001 | '[^:]+:(?P<line>\\d+):\\d+: error: (?P<error>.+)'



cluster 368 stats:
nPatterns: 3.0
nProjects: 2
shortest: ^msgstr "(?P<data>.*)"$
Features:

1: LIT|a literal character | 15.333333333333334
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0
5: END|end-of-line | 0.6666666666666666
6: PNG|named capture group | 0.6666666666666666
7: CG|a capture group | 0.3333333333333333


0000 | 0001 | '^msgstr "(?P<data>.*)"$'
0001 | 0001 | '^#include "(Support/.*)"'
0002 | 0001 | '^#~ msgid_plural "(?P<data>.*)"$'



cluster 369 stats:
nPatterns: 2.0
nProjects: 2
shortest: \s*(.+)\s*:\s*([-a-zA-Z]+)\s*$
Features:

1: LIT|a literal character | 18.5
2: KLE|zero-or-more repetition | 3.0
3: CG|a capture group | 2.5
4: RNG|chars within a range | 2.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ADD|one-or-more repetition | 1.0
7: ANY|any non-newline char | 1.0
8: CCC|custom character class | 1.0
9: END|end-of-line | 1.0
10: OR|logical or | 0.5
11: STR|start-of-line | 0.5


0000 | 0001 | u'\\s*(.+)\\s*:\\s*([-a-zA-Z]+)\\s*$'
0001 | 0001 | '^(svn\\+ssh|http|https|svn)://([-a-zA-Z0-9.]*@)(.*)$'



cluster 370 stats:
nPatterns: 3.0
nProjects: 2
shortest: <genre>(.*?)</genre>
Features:

1: LIT|a literal character | 20.666666666666668
2: CG|a capture group | 1.0
3: ANY|any non-newline char | 0.6666666666666666
4: KLE|zero-or-more repetition | 0.6666666666666666
5: LZY|as few reps as possible | 0.6666666666666666
6: ADD|one-or-more repetition | 0.3333333333333333
7: CCC|custom character class | 0.3333333333333333
8: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0001 | '<genre>(.*?)</genre>'
0001 | 0001 | '<rating>(.*?)</rating>'
0002 | 0001 | '<countryName>([\\w ,\\.]+)</countryName>'



cluster 371 stats:
nPatterns: 2.0
nProjects: 2
shortest: <meta http-equiv="Content-Type".*?>
Features:

1: LIT|a literal character | 36.0
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.5
4: LZY|as few reps as possible | 0.5
5: NCCC|negated CCC | 0.5
6: PNG|named capture group | 0.5


0000 | 0001 | '<meta http-equiv="Content-Type".*?>'
0001 | 0001 | '<meta property="og:title" content="(?P<title>[^"]*)" />'



cluster 372 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^((?:\(\S+\))?(?:|sh\S*?|\w+\S+[@:]\S+(?:\s+\S+)?|\[\S+[@:][^\n]+\].+)[$#%])(.*\n?)
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 9.0
3: NWSP|any non-whitespace | 6.0
4: CCC|custom character class | 3.0
5: NCG|group without capturing | 3.0
6: QST|zero-or-one repetition | 3.0
7: ANY|any non-newline char | 2.0
8: CG|a capture group | 2.0
9: KLE|zero-or-more repetition | 2.0
10: LZY|as few reps as possible | 1.0
11: NCCC|negated CCC | 1.0
12: OR|logical or | 1.0
13: STR|start-of-line | 1.0
14: WRD|[a-zA-Z0-9\_] | 1.0
15: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '^((?:\\(\\S+\\))?(?:|sh\\S*?|\\w+\\S+[@:]\\S+(?:\\s+\\S+)?|\\[\\S+[@:][^\\n]+\\].+)[$#%])(.*\\n?)'



cluster 373 stats:
nPatterns: 2.0
nProjects: 2
shortest: /(release|recording)/([0-9a-z\-]{36})
Features:

1: LIT|a literal character | 27.5
2: RNG|chars within a range | 2.5
3: CCC|custom character class | 1.5
4: CG|a capture group | 1.5
5: KLE|zero-or-more repetition | 1.5
6: NCCC|negated CCC | 0.5
7: OR|logical or | 0.5
8: SNG|exactly n repetition | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '/(release|recording)/([0-9a-z\\-]{36})'
0001 | 0001 | 'interface[\\s]*\\[[^\\]]*Conditional=([\\_0-9a-zA-Z&|]*)'



cluster 374 stats:
nPatterns: 3.0
nProjects: 2
shortest: [$_]?(?:is|has)($|[A-Z_])
Features:

1: LIT|a literal character | 11.333333333333334
2: CCC|custom character class | 2.6666666666666665
3: OR|logical or | 1.6666666666666667
4: RNG|chars within a range | 1.3333333333333333
5: CG|a capture group | 1.0
6: END|end-of-line | 0.6666666666666666
7: NCG|group without capturing | 0.6666666666666666
8: QST|zero-or-one repetition | 0.6666666666666666
9: NLKA|sequence doesn't follow  | 0.3333333333333333
10: NLKB|sequence doesn't precede | 0.3333333333333333
11: OPT|options wrapper | 0.3333333333333333


0000 | 0001 | '[$_]?(?:is|has)($|[A-Z_])'
0001 | 0001 | '[$_]?(?:set|add)($|[A-Z_])'
0002 | 0001 | '(?i)(?<![A-Z])E([ABCD]X|[SD]I)(?![A-Z])'



cluster 375 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(?P<unitformat>.+) \((?P<bytes>[0-9\.]+) bytes\)
Features:

1: LIT|a literal character | 23.0
2: ADD|one-or-more repetition | 2.5
3: PNG|named capture group | 1.5
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 1.0
6: RNG|chars within a range | 1.0
7: ANY|any non-newline char | 0.5
8: STR|start-of-line | 0.5


0000 | 0001 | '^(?P<unitformat>.+) \\((?P<bytes>[0-9\\.]+) bytes\\)'
0001 | 0001 | '\\d+ loops, best of \\d+: (?P<time>[0-9.]+) sec per loop'



cluster 376 stats:
nPatterns: 3.0
nProjects: 2
shortest: [-d]  (setuptools|distribute)
Features:

1: LIT|a literal character | 28.333333333333332
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: CCC|custom character class | 0.6666666666666666
5: ADD|one-or-more repetition | 0.3333333333333333
6: NWSP|any non-whitespace | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '[-d]  (setuptools|distribute)'
0001 | 0001 | 'Got (setuptools|distribute) \\S+'
0002 | 0001 | '^(ip_tables|iptable_filter|iptable_nat)[ \\t]'



cluster 377 stats:
nPatterns: 4.0
nProjects: 2
shortest: ^GlueSiteUniqueID=(.*)
Features:

1: LIT|a literal character | 21.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 0.5
6: ADD|one-or-more repetition | 0.25
7: NCCC|negated CCC | 0.25


0000 | 0001 | '^GlueSiteUniqueID=(.*)'
0001 | 0001 | '^GlueSiteUniqueID: (.*)'
0002 | 0001 | 'build/bdist\\.[^/]+/egg/(.*)'
0003 | 0001 | 'GlueForeignKey: GlueSiteUniqueID=(.*)'



cluster 378 stats:
nPatterns: 2.0
nProjects: 2
shortest: (\S+)\s*[.]\s*setshape\s*[(]\s*(\S+)\s*[)]
Features:

1: LIT|a literal character | 17.0
2: KLE|zero-or-more repetition | 6.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.5
4: CG|a capture group | 3.5
5: CCC|custom character class | 3.0
6: ADD|one-or-more repetition | 1.5
7: DEC|any of: 0123456789 | 1.0
8: NWSP|any non-whitespace | 1.0
9: END|end-of-line | 0.5
10: QST|zero-or-one repetition | 0.5
11: STR|start-of-line | 0.5


0000 | 0001 | '(\\S+)\\s*[.]\\s*setshape\\s*[(]\\s*(\\S+)\\s*[)]'
0001 | 0001 | '^\\s*([tlrbhwxy])\\s*([=%<>^_])\\s*([tlrbhwxy]?)\\s*(\\d*)\\s*#(\\d+)\\s*$'



cluster 379 stats:
nPatterns: 4.0
nProjects: 2
shortest: (\.pc|/bin/.+-config)$
Features:

1: LIT|a literal character | 18.75
2: ADD|one-or-more repetition | 1.5
3: DEC|any of: 0123456789 | 1.25
4: END|end-of-line | 0.75
5: CG|a capture group | 0.5
6: STR|start-of-line | 0.5
7: ANY|any non-newline char | 0.25
8: OR|logical or | 0.25


0000 | 0001 | '(\\.pc|/bin/.+-config)$'
0001 | 0001 | 'nic\\.(\\d+)\\.mac_address\\.0'
0002 | 0001 | '^nic\\.\\d+\\.dns_auto_build\\.\\d+$'
0003 | 0001 | '^nic\\.\\d+\\.dns_has_conflict\\.\\d+$'



cluster 380 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(?P<level>\*+)(\s+(?P<title>.*?))?\s*(\s(?P<tags>:[\w_:@]+:))?$
Features:

1: ADD|one-or-more repetition | 3.5
2: PNG|named capture group | 3.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.5
4: KLE|zero-or-more repetition | 3.0
5: LIT|a literal character | 3.0
6: CG|a capture group | 1.0
7: DEC|any of: 0123456789 | 1.0
8: END|end-of-line | 1.0
9: NWSP|any non-whitespace | 1.0
10: QST|zero-or-one repetition | 1.0
11: STR|start-of-line | 1.0
12: ANY|any non-newline char | 0.5
13: CCC|custom character class | 0.5
14: LZY|as few reps as possible | 0.5
15: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '^(?P<level>\\*+)(\\s+(?P<title>.*?))?\\s*(\\s(?P<tags>:[\\w_:@]+:))?$'
0001 | 0001 | '^\\s*(?P<user>\\S+)\\s*(?P<name>\\S+)\\s*(?P<pid>\\d+)\\s*(?P<usage_bytes>\\d+)$'



cluster 381 stats:
nPatterns: 3.0
nProjects: 2
shortest: .*(\d\d\d\d)(\d\d)(\d\d)(\d\d)(\d\d)
Features:

1: DEC|any of: 0123456789 | 9.333333333333334
2: LIT|a literal character | 7.333333333333333
3: CG|a capture group | 3.0
4: CCC|custom character class | 1.3333333333333333
5: ADD|one-or-more repetition | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
7: ANY|any non-newline char | 0.3333333333333333
8: KLE|zero-or-more repetition | 0.3333333333333333
9: NWSP|any non-whitespace | 0.3333333333333333
10: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0001 | '\\[commit=(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)\\]'
0001 | 0001 | '.*(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)'
0002 | 0001 | '#date(\\s+(\\S+))?\\s+(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)'



cluster 382 stats:
nPatterns: 3.0
nProjects: 2
shortest: [A-Za-z0-9;/?:@&=+$,\-_\.!~*'\(\)%#]+$
Features:

1: LIT|a literal character | 28.666666666666668
2: RNG|chars within a range | 5.0
3: ADD|one-or-more repetition | 3.0
4: CCC|custom character class | 1.6666666666666667
5: CG|a capture group | 1.6666666666666667
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.6666666666666667
7: KLE|zero-or-more repetition | 1.3333333333333333
8: NCCC|negated CCC | 0.6666666666666666
9: END|end-of-line | 0.3333333333333333
10: OR|logical or | 0.3333333333333333


0000 | 0001 | "[A-Za-z0-9;/?:@&=+$,\\-_\\.!~*'\\(\\)%#]+$"
0001 | 0001 | '([A-Za-z0-9_]+\\s+)+([*A-Za-z0-9_::]+)\\s*\\([^)]*\\)'
0002 | 0001 | '(public|private|protected)\\s([A-Za-z0-9_]+\\s+)+([A-Za-z0-9_]+)\\s*\\([^)]*\\)'



cluster 383 stats:
nPatterns: 2.0
nProjects: 2
shortest: (`(?:[^`]|``)+`|\w+)(?:(?:\.)(`(?:[^`]|``)+`|\w+))?(?:\:)(`(?:[^`]|``)+`|\w+)(?:(?:\.)(`(?:[^`]|``)+`|\w+))?
Features:

1: LIT|a literal character | 44.5
2: NCG|group without capturing | 8.0
3: OR|logical or | 6.0
4: ADD|one-or-more repetition | 5.0
5: CG|a capture group | 3.5
6: NCCC|negated CCC | 3.5
7: WRD|[a-zA-Z0-9\_] | 2.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
9: CCC|custom character class | 1.0
10: KLE|zero-or-more repetition | 1.0
11: QST|zero-or-one repetition | 1.0
12: DBB|$n\le x \le m$ repetition | 0.5
13: WNW|word/non-word boundary | 0.5


0000 | 0001 | '(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?(?:\\:)(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?'
0001 | 0001 | u'\\b((?:([\\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\\s&()]|&amp;|&quo\nt;)*(?:[^!"#$%&\'()*+,.:;<=>?@\\[\\]^`{|}~\\s]))|(?:\\((?:[^\\s&()]|&amp;|&quot;)*\\)))+)'



cluster 384 stats:
nPatterns: 1.0
nProjects: 1
shortest: .py$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0


0000 | 0001 | '.py$'



cluster 385 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*elf
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '.*elf'



cluster 386 stats:
nPatterns: 1.0
nProjects: 1
shortest: \n\n+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0


0000 | 0001 | '\n\n+'



cluster 387 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\S+
Features:

1: ADD|one-or-more repetition | 1.0
2: NWSP|any non-whitespace | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^\\S+'



cluster 388 stats:
nPatterns: 1.0
nProjects: 1
shortest: rel.*
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'rel.*'



cluster 389 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\D+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: NDEC|any non-decimal | 1.0


0000 | 0001 | '(\\D+)'



cluster 390 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^nodev
Features:

1: LIT|a literal character | 5.0
2: STR|start-of-line | 1.0


0000 | 0001 | '^nodev'



cluster 391 stats:
nPatterns: 1.0
nProjects: 1
shortest: ':true,
Features:

1: LIT|a literal character | 7.0


0000 | 0001 | "':true,"



cluster 392 stats:
nPatterns: 1.0
nProjects: 1
shortest: :[\s]+
Features:

1: ADD|one-or-more repetition | 1.0
2: CCC|custom character class | 1.0
3: LIT|a literal character | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | ':[\\s]+'



cluster 393 stats:
nPatterns: 1.0
nProjects: 1
shortest: [0-9.]+
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: RNG|chars within a range | 1.0


0000 | 0001 | '[0-9.]+'



cluster 394 stats:
nPatterns: 1.0
nProjects: 1
shortest: [\n,]+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0


0000 | 0001 | '[\\n,]+'



cluster 395 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\-l)
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^(\\-l)'



cluster 396 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?m)^(.)
Features:

1: ANY|any non-newline char | 1.0
2: CG|a capture group | 1.0
3: OPT|options wrapper | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '(?m)^(.)'



cluster 397 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*?_info
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0


0000 | 0001 | '.*?_info'



cluster 398 stats:
nPatterns: 1.0
nProjects: 1
shortest: Database
Features:

1: LIT|a literal character | 8.0


0000 | 0001 | 'Database'



cluster 399 stats:
nPatterns: 1.0
nProjects: 1
shortest: \) (.*)
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '\\) (.*)'



cluster 400 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*\S+
Features:

1: ADD|one-or-more repetition | 1.0
2: KLE|zero-or-more repetition | 1.0
3: NWSP|any non-whitespace | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s*\\S+'



cluster 401 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^Latexmk
Features:

1: LIT|a literal character | 7.0
2: STR|start-of-line | 1.0


0000 | 0001 | '^Latexmk'



cluster 402 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[^\.]+
Features:

1: ADD|one-or-more repetition | 1.0
2: LIT|a literal character | 1.0
3: NCCC|negated CCC | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^[^\\.]+'



cluster 403 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*\[
Features:

1: KLE|zero-or-more repetition | 1.0
2: LIT|a literal character | 1.0
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^\\s*\\['



cluster 404 stats:
nPatterns: 1.0
nProjects: 1
shortest: linux-.*
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'linux-.*'



cluster 405 stats:
nPatterns: 1.0
nProjects: 1
shortest: orgname=
Features:

1: LIT|a literal character | 8.0


0000 | 0001 | 'orgname='



cluster 406 stats:
nPatterns: 1.0
nProjects: 1
shortest: p=(\d+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'p=(\\d+)'



cluster 407 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?m)^\s*
Features:

1: KLE|zero-or-more repetition | 1.0
2: OPT|options wrapper | 1.0
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(?m)^\\s*'



cluster 408 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^\{])<
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.0
3: NCCC|negated CCC | 1.0


0000 | 0001 | '([^\\{])<'



cluster 409 stats:
nPatterns: 1.0
nProjects: 1
shortest: Auth=(.*)
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'Auth=(.*)'



cluster 410 stats:
nPatterns: 1.0
nProjects: 1
shortest: WordPress
Features:

1: LIT|a literal character | 9.0


0000 | 0001 | 'WordPress'



cluster 411 stats:
nPatterns: 1.0
nProjects: 1
shortest: \((\w+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '\\((\\w+)'



cluster 412 stats:
nPatterns: 1.0
nProjects: 1
shortest: \+vot\+
Features:

1: LIT|a literal character | 5.0


0000 | 0001 | '\\+vot\\+'



cluster 413 stats:
nPatterns: 1.0
nProjects: 1
shortest: \d+:\d+
Features:

1: ADD|one-or-more repetition | 2.0
2: DEC|any of: 0123456789 | 2.0
3: LIT|a literal character | 1.0


0000 | 0001 | '\\d+:\\d+'



cluster 414 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\w+):$
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: LIT|a literal character | 1.0
5: STR|start-of-line | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^(\\w+):$'



cluster 415 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[^\$]+$
Features:

1: ADD|one-or-more repetition | 1.0
2: END|end-of-line | 1.0
3: LIT|a literal character | 1.0
4: NCCC|negated CCC | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^[^\\$]+$'



cluster 416 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\.\d+$
Features:

1: ADD|one-or-more repetition | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 1.0
4: LIT|a literal character | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^\\.\\d+$'



cluster 417 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^ascii\.
Features:

1: LIT|a literal character | 6.0
2: STR|start-of-line | 1.0


0000 | 0001 | '^ascii\\.'



cluster 418 stats:
nPatterns: 1.0
nProjects: 1
shortest: iso.*?\-
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0


0000 | 0001 | 'iso.*?\\-'



cluster 419 stats:
nPatterns: 1.0
nProjects: 1
shortest: level\d+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'level\\d+'



cluster 420 stats:
nPatterns: 1.0
nProjects: 1
shortest: n_(?:.*?)
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: NCG|group without capturing | 1.0


0000 | 0001 | 'n_(?:.*?)'



cluster 421 stats:
nPatterns: 1.0
nProjects: 1
shortest: new(\w+)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'new(\\w+)'



cluster 422 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.)([A-Z])
Features:

1: CG|a capture group | 2.0
2: LIT|a literal character | 2.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: RNG|chars within a range | 1.0


0000 | 0001 | '(.)([A-Z])'



cluster 423 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\d|\.)+
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: LIT|a literal character | 1.0
5: OR|logical or | 1.0


0000 | 0001 | '(\\d|\\.)+'



cluster 424 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\{.+\})
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0


0000 | 0001 | '(\\{.+\\})'



cluster 425 stats:
nPatterns: 1.0
nProjects: 1
shortest: (ajax)\d+
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '(ajax)\\d+'



cluster 426 stats:
nPatterns: 1.0
nProjects: 1
shortest: [ \r\n\t]+
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0


0000 | 0001 | '[ \r\n\t]+'



cluster 427 stats:
nPatterns: 1.0
nProjects: 1
shortest: [@:]number
Features:

1: LIT|a literal character | 8.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[@:]number'



cluster 428 stats:
nPatterns: 1.0
nProjects: 1
shortest: \(\d+\)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '\\(\\d+\\)'



cluster 429 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*(\S+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NWSP|any non-whitespace | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s*(\\S+)'



cluster 430 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([-\w]+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: LIT|a literal character | 1.0
5: STR|start-of-line | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^([-\\w]+)'



cluster 431 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[\d.:]+$
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^[\\d.:]+$'



cluster 432 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*endif
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 1.0
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^\\s*endif'



cluster 433 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^lib[^-]+-
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^lib[^-]+-'



cluster 434 stats:
nPatterns: 1.0
nProjects: 1
shortest:  sslmode=.+
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0


0000 | 0001 | ' sslmode=.+'



cluster 435 stats:
nPatterns: 1.0
nProjects: 1
shortest: (<br/>\n?)+
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: QST|zero-or-one repetition | 1.0


0000 | 0001 | '(<br/>\n?)+'



cluster 436 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\*|[0-9])
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: OR|logical or | 1.0
5: RNG|chars within a range | 1.0


0000 | 0001 | '(\\*|[0-9])'



cluster 437 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*/([^?#]*)
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '.*/([^?#]*)'



cluster 438 stats:
nPatterns: 1.0
nProjects: 1
shortest: /testing/.*
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '/testing/.*'



cluster 439 stats:
nPatterns: 1.0
nProjects: 1
shortest: Audio: \w+
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'Audio: \\w+'



cluster 440 stats:
nPatterns: 1.0
nProjects: 1
shortest: \. *(\n|$)
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OR|logical or | 1.0


0000 | 0001 | '\\. *(\n|$)'



cluster 441 stats:
nPatterns: 1.0
nProjects: 1
shortest: \\[\\]?
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: QST|zero-or-one repetition | 1.0


0000 | 0001 | '\\\\[\\\\]?'



cluster 442 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[^\.]+\.
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^[^\\.]+\\.'



cluster 443 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\d+:\d+$
Features:

1: ADD|one-or-more repetition | 2.0
2: DEC|any of: 0123456789 | 2.0
3: END|end-of-line | 1.0
4: LIT|a literal character | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^\\d+:\\d+$'



cluster 444 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^lib(.*).a$
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^lib(.*).a$'



cluster 445 stats:
nPatterns: 1.0
nProjects: 1
shortest: type\b\s*
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 1.0
3: WNW|word/non-word boundary | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'type\\b\\s*'



cluster 446 stats:
nPatterns: 1.0
nProjects: 1
shortest: AuthenticAMD
Features:

1: LIT|a literal character | 12.0


0000 | 0001 | 'AuthenticAMD'



cluster 447 stats:
nPatterns: 1.0
nProjects: 1
shortest: [   \r\n]+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0


0000 | 0001 | '[   \\r\\n]+'



cluster 448 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s+---?\s+
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: QST|zero-or-one repetition | 1.0


0000 | 0001 | '\\s+---?\\s+'



cluster 449 stats:
nPatterns: 1.0
nProjects: 1
shortest: \x1b\[\d+m
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '\x1b\\[\\d+m'



cluster 450 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\d+)\s*$
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^(\\d+)\\s*$'



cluster 451 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^.*[0-9]dev$
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: RNG|chars within a range | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^.*[0-9]dev$'



cluster 452 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[-\.\w]+$
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^[-\\.\\w]+$'



cluster 453 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\.|~$|^\$
Features:

1: LIT|a literal character | 3.0
2: STR|start-of-line | 2.0
3: END|end-of-line | 1.0
4: OR|logical or | 1.0


0000 | 0001 | '^\\.|~$|^\\$'



cluster 454 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\[(.*)\]$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^\\[(.*)\\]$'



cluster 455 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^wsj/\d\d/
Features:

1: LIT|a literal character | 5.0
2: DEC|any of: 0123456789 | 2.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^wsj/\\d\\d/'



cluster 456 stats:
nPatterns: 1.0
nProjects: 1
shortest: in-addr.arpa
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0


0000 | 0001 | 'in-addr.arpa'



cluster 457 stats:
nPatterns: 1.0
nProjects: 1
shortest: (/\*.*?\*/)
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '(/\\*.*?\\*/)'



cluster 458 stats:
nPatterns: 1.0
nProjects: 1
shortest: -clone[1-9]*$
Features:

1: LIT|a literal character | 8.0
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: RNG|chars within a range | 1.0


0000 | 0001 | '-clone[1-9]*$'



cluster 459 stats:
nPatterns: 1.0
nProjects: 1
shortest: <(.*?)(?<!-)>
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: NLKB|sequence doesn't precede | 1.0


0000 | 0001 | '<(.*?)(?<!-)>'



cluster 460 stats:
nPatterns: 1.0
nProjects: 1
shortest: Percent owned
Features:

1: LIT|a literal character | 13.0


0000 | 0001 | 'Percent owned'



cluster 461 stats:
nPatterns: 1.0
nProjects: 1
shortest: [-][-]link[-]
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 3.0


0000 | 0001 | '[-][-]link[-]'



cluster 462 stats:
nPatterns: 1.0
nProjects: 1
shortest: \/title\/tt
Features:

1: LIT|a literal character | 9.0


0000 | 0001 | '\\/title\\/tt'



cluster 463 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\s*lib.*)+
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^(\\s*lib.*)+'



cluster 464 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s+(\w+) =
Features:

1: ADD|one-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: CG|a capture group | 1.0
4: STR|start-of-line | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^\\s+(\\w+) ='



cluster 465 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^nic\.(\d+)
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^nic\\.(\\d+)'



cluster 466 stats:
nPatterns: 1.0
nProjects: 1
shortest: seed_hosts:.*
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'seed_hosts:.*'



cluster 467 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\+\-\^]+)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0


0000 | 0001 | '([\\+\\-\\^]+)'



cluster 468 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^:]+):(\S+)
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: LIT|a literal character | 2.0
4: NCCC|negated CCC | 1.0
5: NWSP|any non-whitespace | 1.0


0000 | 0001 | '([^:]+):(\\S+)'



cluster 469 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*\.([0-9]+)$
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: RNG|chars within a range | 1.0


0000 | 0001 | '.*\\.([0-9]+)$'



cluster 470 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*\?ptr=(.*)$
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0


0000 | 0001 | '.*\\?ptr=(.*)$'



cluster 471 stats:
nPatterns: 1.0
nProjects: 1
shortest: Model:\s+(.+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'Model:\\s+(.+)'



cluster 472 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.(txt|anno)$
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: OR|logical or | 1.0


0000 | 0001 | '\\.(txt|anno)$'



cluster 473 stats:
nPatterns: 1.0
nProjects: 1
shortest: \\n|\\\\
Features:

1: LIT|a literal character | 4.0
2: OR|logical or | 1.0


0000 | 0001 | '\\\\n|\\\\\\\\'



cluster 474 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\w+)\-\-$
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^(\\w+)\\-\\-$'



cluster 475 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^/r/([^/]{2,})
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.0
3: LWB|at least n repetition | 1.0
4: NCCC|negated CCC | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^/r/([^/]{2,})'



cluster 476 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^=== ([A-Z_]+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^=== ([A-Z_]+)'



cluster 477 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^message:\s*$
Features:

1: LIT|a literal character | 8.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^message:\\s*$'



cluster 478 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^removed:\s*$
Features:

1: LIT|a literal character | 8.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^removed:\\s*$'



cluster 479 stats:
nPatterns: 1.0
nProjects: 1
shortest: technorati.com
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 1.0


0000 | 0001 | 'technorati.com'



cluster 480 stats:
nPatterns: 1.0
nProjects: 1
shortest: (/dev/loop\d+)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '(/dev/loop\\d+)'



cluster 481 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*\r(?=[^\n])
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LKA|matching sequence follows | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '.*\\r(?=[^\\n])'



cluster 482 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*ri\/.*\.ri$
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0


0000 | 0001 | '.*ri\\/.*\\.ri$'



cluster 483 stats:
nPatterns: 1.0
nProjects: 1
shortest: TORINO2:\s\d+
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'TORINO2:\\s\\d+'



cluster 484 stats:
nPatterns: 1.0
nProjects: 1
shortest: \x1b\[[0-9;]*m
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: RNG|chars within a range | 1.0


0000 | 0001 | '\x1b\\[[0-9;]*m'



cluster 485 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*msgid\s+"
Features:

1: LIT|a literal character | 6.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*msgid\\s+"'



cluster 486 stats:
nPatterns: 1.0
nProjects: 1
shortest: baseUrl>([^<]+)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | 'baseUrl>([^<]+)'



cluster 487 stats:
nPatterns: 1.0
nProjects: 1
shortest: test_(.*)\.js$
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'test_(.*)\\.js$'



cluster 488 stats:
nPatterns: 1.0
nProjects: 1
shortest: ((?P<day>\d+)d)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: LIT|a literal character | 1.0
5: PNG|named capture group | 1.0


0000 | 0001 | '((?P<day>\\d+)d)'



cluster 489 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.*)\(\d+\) :
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '(.*)\\(\\d+\\) :'



cluster 490 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\A|\s)#(\w+)
Features:

1: CG|a capture group | 2.0
2: ADD|one-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: OR|logical or | 1.0
5: STR|start-of-line | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(\\A|\\s)#(\\w+)'



cluster 491 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\D*)(\d*)(.*)
Features:

1: CG|a capture group | 3.0
2: KLE|zero-or-more repetition | 3.0
3: ANY|any non-newline char | 1.0
4: DEC|any of: 0123456789 | 1.0
5: NDEC|any non-decimal | 1.0


0000 | 0001 | '(\\D*)(\\d*)(.*)'



cluster 492 stats:
nPatterns: 1.0
nProjects: 1
shortest: Name=([\w\.]+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'Name=([\\w\\.]+)'



cluster 493 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[(.+)\]\]
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0


0000 | 0001 | '\\[\\[(.+)\\]\\]'



cluster 494 stats:
nPatterns: 1.0
nProjects: 1
shortest: \shan(ds)ome\s
Features:

1: LIT|a literal character | 8.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: CG|a capture group | 1.0


0000 | 0001 | '\\shan(ds)ome\\s'



cluster 495 stats:
nPatterns: 1.0
nProjects: 1
shortest: \ndescription:\n
Features:

1: LIT|a literal character | 14.0


0000 | 0001 | '\ndescription:\n'



cluster 496 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^#, (?P<data>.*)
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^#, (?P<data>.*)'



cluster 497 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\w+\.)+\w+$
Features:

1: ADD|one-or-more repetition | 3.0
2: WRD|[a-zA-Z0-9\_] | 2.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: LIT|a literal character | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^(\\w+\\.)+\\w+$'



cluster 498 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^.*VTK_LEGACY.*$
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^.*VTK_LEGACY.*$'



cluster 499 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^//(\[.+\])+\n
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^//(\\[.+\\])+\n'



cluster 500 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^invalid_netmask
Features:

1: LIT|a literal character | 15.0
2: STR|start-of-line | 1.0


0000 | 0001 | '^invalid_netmask'



cluster 501 stats:
nPatterns: 1.0
nProjects: 1
shortest: class (\w+?)\(
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'class (\\w+?)\\('



cluster 502 stats:
nPatterns: 1.0
nProjects: 1
shortest: localtime=(.*)\t
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'localtime=(.*)\t'



cluster 503 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([a-z]+)([,']*)
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 2.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: KLE|zero-or-more repetition | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | u"([a-z]+)([,']*)"



cluster 504 stats:
nPatterns: 1.0
nProjects: 1
shortest:  for ([0-9.]+)\Z
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: ENDZ|absolute end of string | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | ' for ([0-9.]+)\\Z'



cluster 505 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\d]+) ([\d]+)
Features:

1: ADD|one-or-more repetition | 2.0
2: CCC|custom character class | 2.0
3: CG|a capture group | 2.0
4: DEC|any of: 0123456789 | 2.0
5: LIT|a literal character | 1.0


0000 | 0001 | '([\\d]+) ([\\d]+)'



cluster 506 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*\<use (.*?)\>
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '.*\\<use (.*?)\\>'



cluster 507 stats:
nPatterns: 1.0
nProjects: 1
shortest: Firefox/([\d.]+)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'Firefox/([\\d.]+)'



cluster 508 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^#?(\d+)-(\d+)$
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: DEC|any of: 0123456789 | 2.0
4: LIT|a literal character | 2.0
5: END|end-of-line | 1.0
6: QST|zero-or-one repetition | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^#?(\\d+)-(\\d+)$'



cluster 509 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^.*RLELossless.*$
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^.*RLELossless.*$'



cluster 510 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*[\w-]+\s*$
Features:

1: KLE|zero-or-more repetition | 2.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: END|end-of-line | 1.0
6: LIT|a literal character | 1.0
7: STR|start-of-line | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^\\s*[\\w-]+\\s*$'



cluster 511 stats:
nPatterns: 1.0
nProjects: 1
shortest: branch type (\d)
Features:

1: LIT|a literal character | 12.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'branch type (\\d)'



cluster 512 stats:
nPatterns: 1.0
nProjects: 1
shortest: function( .+?)\(
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | 'function( .+?)\\('



cluster 513 stats:
nPatterns: 1.0
nProjects: 1
shortest: #(\w+)|\[(.+)\]
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: OR|logical or | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '#(\\w+)|\\[(.+)\\]'



cluster 514 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?<!\|)\|(?!\|)
Features:

1: LIT|a literal character | 3.0
2: NLKA|sequence doesn't follow  | 1.0
3: NLKB|sequence doesn't precede | 1.0


0000 | 0001 | '(?<!\\|)\\|(?!\\|)'



cluster 515 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?<=Authority: ).+
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: LKB|matching sequence precedes | 1.0


0000 | 0001 | '(?<=Authority: ).+'



cluster 516 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([[ ~^:?*]|\.\.)
Features:

1: LIT|a literal character | 8.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: OR|logical or | 1.0


0000 | 0001 | '([[ ~^:?*]|\\.\\.)'



cluster 517 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\\\*)([\w ]+)
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(\\\\\\*)([\\w ]+)'



cluster 518 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\d+)\((\d+)\)
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: DEC|any of: 0123456789 | 2.0
4: LIT|a literal character | 2.0


0000 | 0001 | '(\\d+)\\((\\d+)\\)'



cluster 519 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*Firefox/(\d*).*
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 3.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '.*Firefox/(\\d*).*'



cluster 520 stats:
nPatterns: 1.0
nProjects: 1
shortest: Assertion failed: 
Features:

1: LIT|a literal character | 18.0


0000 | 0001 | 'Assertion failed: '



cluster 521 stats:
nPatterns: 1.0
nProjects: 1
shortest: ID_LENGTH=([0-9]*)
Features:

1: LIT|a literal character | 12.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: RNG|chars within a range | 1.0


0000 | 0001 | 'ID_LENGTH=([0-9]*)'



cluster 522 stats:
nPatterns: 1.0
nProjects: 1
shortest: [Ff]ile(\d+)=(.+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '[Ff]ile(\\d+)=(.+)'



cluster 523 stats:
nPatterns: 1.0
nProjects: 1
shortest: \b(\d+)\.(\d+)
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: DEC|any of: 0123456789 | 2.0
4: LIT|a literal character | 1.0
5: WNW|word/non-word boundary | 1.0


0000 | 0001 | '\\b(\\d+)\\.(\\d+)'



cluster 524 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*global\s+(.*)
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0


0000 | 0001 | '\\s*global\\s+(.*)'



cluster 525 stats:
nPatterns: 1.0
nProjects: 1
shortest: \tDLL Name: (\S+)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NWSP|any non-whitespace | 1.0


0000 | 0001 | '\tDLL Name: (\\S+)'



cluster 526 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([0-9a-f]+) (.*)$
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 2.0
3: RNG|chars within a range | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: END|end-of-line | 1.0
8: KLE|zero-or-more repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^([0-9a-f]+) (.*)$'



cluster 527 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[a-z]\d(?:,\d)*
Features:

1: LIT|a literal character | 3.0
2: DEC|any of: 0123456789 | 2.0
3: CCC|custom character class | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCG|group without capturing | 1.0
6: RNG|chars within a range | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^[a-z]\\d(?:,\\d)*'



cluster 528 stats:
nPatterns: 1.0
nProjects: 1
shortest: -?(\d*)([.]?\d*)?
Features:

1: QST|zero-or-one repetition | 3.0
2: CG|a capture group | 2.0
3: DEC|any of: 0123456789 | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LIT|a literal character | 2.0
6: CCC|custom character class | 1.0


0000 | 0001 | '-?(\\d*)([.]?\\d*)?'



cluster 529 stats:
nPatterns: 1.0
nProjects: 1
shortest: [0-9\- \(\)]{14}
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0
4: SNG|exactly n repetition | 1.0


0000 | 0001 | '[0-9\\- \\(\\)]{14}'



cluster 530 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^new file mode (.+)
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^new file mode (.+)'



cluster 531 stats:
nPatterns: 1.0
nProjects: 1
shortest: arrResume\[\d*\]
Features:

1: LIT|a literal character | 11.0
2: DEC|any of: 0123456789 | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'arrResume\\[\\d*\\]'



cluster 532 stats:
nPatterns: 1.0
nProjects: 1
shortest: subroutine( .+?)\(
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | 'subroutine( .+?)\\('



cluster 533 stats:
nPatterns: 1.0
nProjects: 1
shortest: [_.,\[\]\(\):]
Features:

1: LIT|a literal character | 8.0
2: CCC|custom character class | 1.0


0000 | 0001 | u'[_.,\\[\\]\\(\\):]'



cluster 534 stats:
nPatterns: 1.0
nProjects: 1
shortest: \xa7([0-9a-zA-Z])
Features:

1: LIT|a literal character | 7.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0


0000 | 0001 | u'\\xa7([0-9a-zA-Z])'



cluster 535 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.*)callsign\=(.*)$
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: END|end-of-line | 1.0


0000 | 0001 | '(.*)callsign\\=(.*)$'



cluster 536 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\w+)(?:\:(\w+))?
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: WRD|[a-zA-Z0-9\_] | 2.0
4: LIT|a literal character | 1.0
5: NCG|group without capturing | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0001 | '(\\w+)(?:\\:(\\w+))?'



cluster 537 stats:
nPatterns: 1.0
nProjects: 1
shortest: /prefs(?:/([^/]+))?$
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: NCCC|negated CCC | 1.0
6: NCG|group without capturing | 1.0
7: QST|zero-or-one repetition | 1.0


0000 | 0001 | '/prefs(?:/([^/]+))?$'



cluster 538 stats:
nPatterns: 1.0
nProjects: 1
shortest: <Term>([^<]+)</Term>
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '<Term>([^<]+)</Term>'



cluster 539 stats:
nPatterns: 1.0
nProjects: 1
shortest: Change\s+(\d+)\s+
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'Change\\s+(\\d+)\\s+'



cluster 540 stats:
nPatterns: 1.0
nProjects: 1
shortest: Mobile; rv:([\d.]+)
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'Mobile; rv:([\\d.]+)'



cluster 541 stats:
nPatterns: 1.0
nProjects: 1
shortest: SEDE clienti:\s\d+
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'SEDE clienti:\\s\\d+'



cluster 542 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[Image:.*\]\]
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '\\[\\[Image:.*\\]\\]'



cluster 543 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*(-?\w+:\w+)+,*
Features:

1: ADD|one-or-more repetition | 3.0
2: LIT|a literal character | 3.0
3: KLE|zero-or-more repetition | 2.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: CG|a capture group | 1.0
6: QST|zero-or-one repetition | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s*(-?\\w+:\\w+)+,*'



cluster 544 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^Committed r([0-9]+)
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^Committed r([0-9]+)'



cluster 545 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^func_i\d\d\d\d$
Features:

1: LIT|a literal character | 6.0
2: DEC|any of: 0123456789 | 4.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^func_i\\d\\d\\d\\d$'



cluster 546 stats:
nPatterns: 1.0
nProjects: 1
shortest: release\s*=\s*True
Features:

1: LIT|a literal character | 12.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0001 | 'release\\s*=\\s*True'



cluster 547 stats:
nPatterns: 1.0
nProjects: 1
shortest: #include\s+<([^>]+)>
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '#include\\s+<([^>]+)>'



cluster 548 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.*)\s(ASC|DESC)(.*)
Features:

1: LIT|a literal character | 7.0
2: CG|a capture group | 3.0
3: ANY|any non-newline char | 2.0
4: KLE|zero-or-more repetition | 2.0
5: OR|logical or | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(.*)\\s(ASC|DESC)(.*)'



cluster 549 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?:([0-9a-f]+):)?(.*)
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 2.0
3: RNG|chars within a range | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NCG|group without capturing | 1.0
9: QST|zero-or-one repetition | 1.0


0000 | 0001 | '(?:([0-9a-f]+):)?(.*)'



cluster 550 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\S+) Version (\S+)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: NWSP|any non-whitespace | 2.0


0000 | 0001 | '(\\S+) Version (\\S+)'



cluster 551 stats:
nPatterns: 1.0
nProjects: 1
shortest: <(\w+)(\s.*)?[^/]?>
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 2.0
3: QST|zero-or-one repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '<(\\w+)(\\s.*)?[^/]?>'



cluster 552 stats:
nPatterns: 1.0
nProjects: 1
shortest: <\s*/?\s*([^\s>]+)
Features:

1: LIT|a literal character | 3.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NCCC|negated CCC | 1.0
7: QST|zero-or-one repetition | 1.0


0000 | 0001 | '<\\s*/?\\s*([^\\s>]+)'



cluster 553 stats:
nPatterns: 1.0
nProjects: 1
shortest: [ \t]*\n([^\r\n])
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '[ \\t]*\\n([^\\r\\n])'



cluster 554 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[([^]]*)\]:(\d*)$
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 2.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0


0000 | 0001 | '\\[([^]]*)\\]:(\\d*)$'



cluster 555 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[([^\]]+)\]\]
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '\\[\\[([^\\]]+)\\]\\]'



cluster 556 stats:
nPatterns: 1.0
nProjects: 1
shortest: \n?(\w*)\:\s(.*)\n
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ANY|any non-newline char | 1.0
5: QST|zero-or-one repetition | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\n?(\\w*)\\:\\s(.*)\n'



cluster 557 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\.|^\d\.$|\.\.$
Features:

1: LIT|a literal character | 4.0
2: END|end-of-line | 2.0
3: STR|start-of-line | 2.0
4: DEC|any of: 0123456789 | 1.0
5: OR|logical or | 1.0


0000 | 0001 | '^\\.|^\\d\\.$|\\.\\.$'



cluster 558 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^file\:\/\/[^\?]*
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^file\\:\\/\\/[^\\?]*'



cluster 559 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\w+)(?:=([^\s;]+))?
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: LIT|a literal character | 2.0
4: NCCC|negated CCC | 1.0
5: NCG|group without capturing | 1.0
6: QST|zero-or-one repetition | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(\\w+)(?:=([^\\s;]+))?'



cluster 560 stats:
nPatterns: 1.0
nProjects: 1
shortest: DataText4>([^<]*)</td>
Features:

1: LIT|a literal character | 16.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | 'DataText4>([^<]*)</td>'



cluster 561 stats:
nPatterns: 1.0
nProjects: 1
shortest: Real/event = [0-9\.]+
Features:

1: LIT|a literal character | 16.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: RNG|chars within a range | 1.0


0000 | 0001 | 'Real/event = [0-9\\.]+'



cluster 562 stats:
nPatterns: 1.0
nProjects: 1
shortest: \|\s+([^\|*])\s+.*
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0


0000 | 0001 | '\\|\\s+([^\\|*])\\s+.*'



cluster 563 stats:
nPatterns: 1.0
nProjects: 1
shortest: author: (?P<name>.*?);
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: PNG|named capture group | 1.0


0000 | 0001 | 'author: (?P<name>.*?);'



cluster 564 stats:
nPatterns: 1.0
nProjects: 1
shortest: Python ([a-z0-9\.]+)
Features:

1: LIT|a literal character | 12.0
2: RNG|chars within a range | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0


0000 | 0001 | u'Python ([a-z0-9\\.]+)'



cluster 565 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?m)(?:^[ \t]*\n){1,}
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LWB|at least n repetition | 1.0
5: NCG|group without capturing | 1.0
6: OPT|options wrapper | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '(?m)(?:^[ \\t]*\\n){1,}'



cluster 566 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.egg(?:-info)?(?:/|$)
Features:

1: LIT|a literal character | 10.0
2: NCG|group without capturing | 2.0
3: END|end-of-line | 1.0
4: OR|logical or | 1.0
5: QST|zero-or-one repetition | 1.0


0000 | 0001 | '\\.egg(?:-info)?(?:/|$)'



cluster 567 stats:
nPatterns: 1.0
nProjects: 1
shortest: \d\d-\w\w\w-\d\d
Features:

1: DEC|any of: 0123456789 | 4.0
2: WRD|[a-zA-Z0-9\_] | 3.0
3: LIT|a literal character | 2.0


0000 | 0001 | '\\d\\d-\\w\\w\\w-\\d\\d'



cluster 568 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[ ]{0,3}:[ ]{1,3}(.*)$
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 2.0
3: DBB|$n\le x \le m$ repetition | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^[ ]{0,3}:[ ]{1,3}(.*)$'



cluster 569 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*=[A-Za-z_]+\w*.*$
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 3.0
3: RNG|chars within a range | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^\\s*=[A-Za-z_]+\\w*.*$'



cluster 570 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^core = "?(\d+\.x)"?$
Features:

1: LIT|a literal character | 11.0
2: QST|zero-or-one repetition | 2.0
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^core = "?(\\d+\\.x)"?$'



cluster 571 stats:
nPatterns: 1.0
nProjects: 1
shortest: lighttpd-([0-9\.]+) .*
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0
7: RNG|chars within a range | 1.0


0000 | 0001 | 'lighttpd-([0-9\\.]+) .*'



cluster 572 stats:
nPatterns: 1.0
nProjects: 1
shortest: (".*?")|(\'.*?\')|(\s+)
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 3.0
3: ANY|any non-newline char | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 2.0
6: ADD|one-or-more repetition | 1.0
7: OR|logical or | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'



cluster 573 stats:
nPatterns: 1.0
nProjects: 1
shortest: (prot_[a-z0-9]+\.fasta)
Features:

1: LIT|a literal character | 15.0
2: RNG|chars within a range | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0


0000 | 0001 | '(prot_[a-z0-9]+\\.fasta)'



cluster 574 stats:
nPatterns: 1.0
nProjects: 1
shortest: <hostname name="([^"]*)"
Features:

1: LIT|a literal character | 18.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '<hostname name="([^"]*)"'



cluster 575 stats:
nPatterns: 1.0
nProjects: 1
shortest: \$((Id|File|Log).*?)\$
Features:

1: LIT|a literal character | 11.0
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: OR|logical or | 1.0


0000 | 0001 | '\\$((Id|File|Log).*?)\\$'



cluster 576 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*(([^,]|(,\s*\d))+)
Features:

1: CG|a capture group | 3.0
2: KLE|zero-or-more repetition | 2.0
3: LIT|a literal character | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ADD|one-or-more repetition | 1.0
6: DEC|any of: 0123456789 | 1.0
7: NCCC|negated CCC | 1.0
8: OR|logical or | 1.0


0000 | 0001 | '\\s*(([^,]|(,\\s*\\d))+)'



cluster 577 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^r(?P<svn_revision>\d+)
Features:

1: ADD|one-or-more repetition | 1.0
2: DEC|any of: 0123456789 | 1.0
3: LIT|a literal character | 1.0
4: PNG|named capture group | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^r(?P<svn_revision>\\d+)'



cluster 578 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\w\.-]+)\s+([^(]+).*
Features:

1: ADD|one-or-more repetition | 3.0
2: LIT|a literal character | 3.0
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '([\\w\\.-]+)\\s+([^(]+).*'



cluster 579 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\s)*class(\s)+(\w)+.*
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: KLE|zero-or-more repetition | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ANY|any non-newline char | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(\\s)*class(\\s)+(\\w)+.*'



cluster 580 stats:
nPatterns: 1.0
nProjects: 1
shortest: /about(?:_trac)?(?:/.+)?$
Features:

1: LIT|a literal character | 12.0
2: NCG|group without capturing | 2.0
3: QST|zero-or-one repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: END|end-of-line | 1.0


0000 | 0001 | '/about(?:_trac)?(?:/.+)?$'



cluster 581 stats:
nPatterns: 1.0
nProjects: 1
shortest: \bplural\s*=\s*([^;]+)
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NCCC|negated CCC | 1.0
7: WNW|word/non-word boundary | 1.0


0000 | 0001 | '\\bplural\\s*=\\s*([^;]+)'



cluster 582 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^Spare.Part.Number:.(.*)$
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 4.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^Spare.Part.Number:.(.*)$'



cluster 583 stats:
nPatterns: 1.0
nProjects: 1
shortest: __version__ = (\(.*?\))
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '__version__ = (\\(.*?\\))'



cluster 584 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?:\s*).+?\.(?:\s+|$)
Features:

1: ADD|one-or-more repetition | 2.0
2: NCG|group without capturing | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: LIT|a literal character | 1.0
8: LZY|as few reps as possible | 1.0
9: OR|logical or | 1.0


0000 | 0001 | u'(?:\\s*).+?\\.(?:\\s+|$)'



cluster 585 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[([^:]+):([^|\]]+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: NCCC|negated CCC | 2.0


0000 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'



cluster 586 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*[:_\t]+\s*|\s{2,}|\n
Features:

1: LIT|a literal character | 4.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: CCC|custom character class | 1.0
6: LWB|at least n repetition | 1.0
7: OR|logical or | 1.0


0000 | 0001 | '\\s*[:_\t]+\\s*|\\s{2,}|\n'



cluster 587 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([-+]?[0-9]+)\.([0-9]+)$
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 3.0
3: ADD|one-or-more repetition | 2.0
4: CG|a capture group | 2.0
5: RNG|chars within a range | 2.0
6: END|end-of-line | 1.0
7: QST|zero-or-one repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^([-+]?[0-9]+)\\.([0-9]+)$'



cluster 588 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*\*(?P<fromStar>\s*)
Features:

1: KLE|zero-or-more repetition | 2.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: LIT|a literal character | 1.0
4: PNG|named capture group | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*\\*(?P<fromStar>\\s*)'



cluster 589 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^function\s*(\w+)\s*\(
Features:

1: LIT|a literal character | 9.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: STR|start-of-line | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^function\\s*(\\w+)\\s*\\('



cluster 590 stats:
nPatterns: 1.0
nProjects: 1
shortest: #define\s+(\S+)\s+(\S+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 4.0
3: CG|a capture group | 2.0
4: NWSP|any non-whitespace | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0001 | '#define\\s+(\\S+)\\s+(\\S+)'



cluster 591 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\w\-\.]+@[\w\-\.]+)
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: CG|a capture group | 1.0


0000 | 0001 | '([\\w\\-\\.]+@[\\w\\-\\.]+)'



cluster 592 stats:
nPatterns: 1.0
nProjects: 1
shortest: <\s*[a-z]+\s*[\w"=\.]*>
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 3.0
3: CCC|custom character class | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ADD|one-or-more repetition | 1.0
6: RNG|chars within a range | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '<\\s*[a-z]+\\s*[\\w"=\\.]*>'



cluster 593 stats:
nPatterns: 1.0
nProjects: 1
shortest: <style [\W\w\n]*?</style>
Features:

1: LIT|a literal character | 16.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: NWRD|non-word chars | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '<style [\\W\\w\n]*?</style>'



cluster 594 stats:
nPatterns: 1.0
nProjects: 1
shortest: Mean sample size: ([.0-9]+)
Features:

1: LIT|a literal character | 21.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0001 | 'Mean sample size: ([.0-9]+)'



cluster 595 stats:
nPatterns: 1.0
nProjects: 1
shortest: \\([ \tn\\]|[0-7]{3,3})
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 2.0
3: CG|a capture group | 1.0
4: DBB|$n\le x \le m$ repetition | 1.0
5: OR|logical or | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | '\\\\([ \tn\\\\]|[0-7]{3,3})'



cluster 596 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*<TestFunction name=\s*
Features:

1: LIT|a literal character | 19.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0001 | '\\s*<TestFunction name=\\s*'



cluster 597 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([\w\-]+/)?[\w\-\.]+$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: QST|zero-or-one repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'



cluster 598 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?m)^uniform (?:\w+) (\w+)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 2.0
3: WRD|[a-zA-Z0-9\_] | 2.0
4: CG|a capture group | 1.0
5: NCG|group without capturing | 1.0
6: OPT|options wrapper | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '(?m)^uniform (?:\\w+) (\\w+)'



cluster 599 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*clock (\d+)\s(\w+).*\n
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 2.0
5: KLE|zero-or-more repetition | 2.0
6: DEC|any of: 0123456789 | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '.*clock (\\d+)\\s(\\w+).*\\n'



cluster 600 stats:
nPatterns: 1.0
nProjects: 1
shortest: [ \f\t]*(?:\r\n|\r|\n)
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCG|group without capturing | 1.0
5: OR|logical or | 1.0


0000 | 0001 | '[ \\f\\t]*(?:\\r\\n|\\r|\\n)'



cluster 601 stats:
nPatterns: 1.0
nProjects: 1
shortest: \A\s*(\w[\w\d]*)\s*\Z
Features:

1: KLE|zero-or-more repetition | 3.0
2: WRD|[a-zA-Z0-9\_] | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: DEC|any of: 0123456789 | 1.0
7: ENDZ|absolute end of string | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '\\A\\s*(\\w[\\w\\d]*)\\s*\\Z'



cluster 602 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*([^;# \t\n\r\f\v]+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: VWSP|matches U+000B | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s*([^;# \\t\\n\\r\\f\\v]+)'



cluster 603 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?<=\(|\))[a-z|A-Z]*(?=\()
Features:

1: LIT|a literal character | 8.0
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LKA|matching sequence follows | 1.0
6: LKB|matching sequence precedes | 1.0
7: OR|logical or | 1.0


0000 | 0001 | '(?<=\\(|\\))[a-z|A-Z]*(?=\\()'



cluster 604 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([a-z]\d?)=\s+(\d+\.\d+)
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 3.0
3: DEC|any of: 0123456789 | 3.0
4: CG|a capture group | 2.0
5: CCC|custom character class | 1.0
6: QST|zero-or-one repetition | 1.0
7: RNG|chars within a range | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '([a-z]\\d?)=\\s+(\\d+\\.\\d+)'



cluster 605 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*(?P<urn>urn\:nbn\:.*?)\<
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 1.0
5: PNG|named capture group | 1.0


0000 | 0001 | '.*(?P<urn>urn\\:nbn\\:.*?)\\<'



cluster 606 stats:
nPatterns: 1.0
nProjects: 1
shortest: [\x00\/\\:\*\?\"<>\|]
Features:

1: LIT|a literal character | 10.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[\\x00\\/\\\\:\\*\\?\\"<>\\|]'



cluster 607 stats:
nPatterns: 1.0
nProjects: 1
shortest: android:versionName="([^"]+)"
Features:

1: LIT|a literal character | 23.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | 'android:versionName="([^"]+)"'



cluster 608 stats:
nPatterns: 1.0
nProjects: 1
shortest: (block|unblock) (\d+) (\d+)$
Features:

1: LIT|a literal character | 14.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: DEC|any of: 0123456789 | 2.0
5: END|end-of-line | 1.0
6: OR|logical or | 1.0


0000 | 0001 | '(block|unblock) (\\d+) (\\d+)$'



cluster 609 stats:
nPatterns: 1.0
nProjects: 1
shortest: \sdo(\s+\|.*?\|)?\s*(#|$)
Features:

1: LIT|a literal character | 5.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: ADD|one-or-more repetition | 1.0
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 1.0
8: LZY|as few reps as possible | 1.0
9: OR|logical or | 1.0
10: QST|zero-or-one repetition | 1.0


0000 | 0001 | '\\sdo(\\s+\\|.*?\\|)?\\s*(#|$)'



cluster 610 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.*?\.pyc?):(\d+):\s+(.*)$
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: ANY|any non-newline char | 2.0
5: KLE|zero-or-more repetition | 2.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 1.0
8: LZY|as few reps as possible | 1.0
9: QST|zero-or-one repetition | 1.0
10: STR|start-of-line | 1.0
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^(.*?\\.pyc?):(\\d+):\\s+(.*)$'



cluster 611 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[S7]\s*[T8]\s*[O6]\s*[P7]$
Features:

1: LIT|a literal character | 8.0
2: CCC|custom character class | 4.0
3: KLE|zero-or-more repetition | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^[S7]\\s*[T8]\\s*[O6]\\s*[P7]$'



cluster 612 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*"\s*(?P<arg0>[^"]+)\s*"
Features:

1: KLE|zero-or-more repetition | 3.0
2: LIT|a literal character | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: ADD|one-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: PNG|named capture group | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*"\\s*(?P<arg0>[^"]+)\\s*"'



cluster 613 stats:
nPatterns: 1.0
nProjects: 1
shortest: (<s>\s*(?P<sent>.+?)\s*</s>)+
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 2.0
3: KLE|zero-or-more repetition | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: LZY|as few reps as possible | 1.0
8: PNG|named capture group | 1.0


0000 | 0001 | '(<s>\\s*(?P<sent>.+?)\\s*</s>)+'



cluster 614 stats:
nPatterns: 1.0
nProjects: 1
shortest: \$Revision:\s*([0-9]*)\s*\$
Features:

1: LIT|a literal character | 13.0
2: KLE|zero-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | '\\$Revision:\\s*([0-9]*)\\s*\\$'



cluster 615 stats:
nPatterns: 1.0
nProjects: 1
shortest: ((?:[^,{}]|(?:{[^{}]*}))+),?\s*
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 2.0
3: NCCC|negated CCC | 2.0
4: NCG|group without capturing | 2.0
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: OR|logical or | 1.0
8: QST|zero-or-one repetition | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '((?:[^,{}]|(?:{[^{}]*}))+),?\\s*'



cluster 616 stats:
nPatterns: 1.0
nProjects: 1
shortest: \ssubroutine\s(.+)\([^()]*\)
Features:

1: LIT|a literal character | 14.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0


0000 | 0001 | '\\ssubroutine\\s(.+)\\([^()]*\\)'



cluster 617 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*?([*]|/\*\*)(?P<line>.*?)
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 2.0
3: LZY|as few reps as possible | 2.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: OR|logical or | 1.0
8: PNG|named capture group | 1.0
9: STR|start-of-line | 1.0
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^\\s*?([*]|/\\*\\*)(?P<line>.*?)'



cluster 618 stats:
nPatterns: 1.0
nProjects: 1
shortest: libbcc_([A-Z_]+)\s*:=\s*([01])
Features:

1: LIT|a literal character | 14.0
2: CCC|custom character class | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ADD|one-or-more repetition | 1.0
7: RNG|chars within a range | 1.0


0000 | 0001 | 'libbcc_([A-Z_]+)\\s*:=\\s*([01])'



cluster 619 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([a-z]+)=(".*?"|[^,]*)(?:\Z|, *)
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 3.0
3: CG|a capture group | 2.0
4: OR|logical or | 2.0
5: ADD|one-or-more repetition | 1.0
6: ANY|any non-newline char | 1.0
7: CCC|custom character class | 1.0
8: ENDZ|absolute end of string | 1.0
9: LZY|as few reps as possible | 1.0
10: NCCC|negated CCC | 1.0
11: NCG|group without capturing | 1.0
12: RNG|chars within a range | 1.0


0000 | 0001 | '([a-z]+)=(".*?"|[^,]*)(?:\\Z|, *)'



cluster 620 stats:
nPatterns: 1.0
nProjects: 1
shortest: <(\w+)(?: [^>]+)?>([^<>]*)</\1>
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: NCCC|negated CCC | 2.0
5: BKR|match the $i^{th}$ CG | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCG|group without capturing | 1.0
8: QST|zero-or-one repetition | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '<(\\w+)(?: [^>]+)?>([^<>]*)</\\1>'



cluster 621 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(In \[\d+\]: |\s*\.{3,}: ?)
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: KLE|zero-or-more repetition | 1.0
6: LWB|at least n repetition | 1.0
7: OR|logical or | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'



cluster 622 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[\(\[\{]([a-zA-Z])[\]\}\)]
Features:

1: LIT|a literal character | 10.0
2: CCC|custom character class | 3.0
3: RNG|chars within a range | 2.0
4: CG|a capture group | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^[\\(\\[\\{]([a-zA-Z])[\\]\\}\\)]'



cluster 623 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*Tag\s+Name\s+VR\s+VM\s*$
Features:

1: LIT|a literal character | 11.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
3: ADD|one-or-more repetition | 3.0
4: KLE|zero-or-more repetition | 2.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*Tag\\s+Name\\s+VR\\s+VM\\s*$'



cluster 624 stats:
nPatterns: 1.0
nProjects: 1
shortest: snapshot-pos,(0x[a-f0-9]+),(\d+)
Features:

1: LIT|a literal character | 20.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: RNG|chars within a range | 2.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'snapshot-pos,(0x[a-f0-9]+),(\\d+)'



cluster 625 stats:
nPatterns: 1.0
nProjects: 1
shortest: <br />\s*([^<]+)<br />\s*([^<]+)<
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: NCCC|negated CCC | 2.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0001 | '<br />\\s*([^<]+)<br />\\s*([^<]+)<'



cluster 626 stats:
nPatterns: 1.0
nProjects: 1
shortest: \d+ \((.+)\) vs. \d+ \((.+)\)
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 4.0
3: ANY|any non-newline char | 3.0
4: CG|a capture group | 2.0
5: DEC|any of: 0123456789 | 2.0


0000 | 0001 | '\\d+ \\((.+)\\) vs. \\d+ \\((.+)\\)'



cluster 627 stats:
nPatterns: 1.0
nProjects: 1
shortest: (....)-(..)-(..)T(..):(..):(..)....Z
Features:

1: ANY|any non-newline char | 18.0
2: CG|a capture group | 6.0
3: LIT|a literal character | 6.0


0000 | 0001 | '(....)-(..)-(..)T(..):(..):(..)....Z'



cluster 628 stats:
nPatterns: 1.0
nProjects: 1
shortest: \#[\s]*include[\s]*[<"](\S+)[">]
Features:

1: LIT|a literal character | 12.0
2: CCC|custom character class | 4.0
3: KLE|zero-or-more repetition | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: NWSP|any non-whitespace | 1.0


0000 | 0001 | '\\#[\\s]*include[\\s]*[<"](\\S+)[">]'



cluster 629 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^((?:\[?\S+@[^$#%]+)[$#%])(.*\n?)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: QST|zero-or-one repetition | 2.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NCCC|negated CCC | 1.0
9: NCG|group without capturing | 1.0
10: NWSP|any non-whitespace | 1.0
11: STR|start-of-line | 1.0


0000 | 0001 | '^((?:\\[?\\S+@[^$#%]+)[$#%])(.*\\n?)'



cluster 630 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([0-9a-fA-F]+) ([0-9a-fA-F]+)xx(.*)$
Features:

1: LIT|a literal character | 15.0
2: RNG|chars within a range | 6.0
3: CG|a capture group | 3.0
4: ADD|one-or-more repetition | 2.0
5: CCC|custom character class | 2.0
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 1.0
8: KLE|zero-or-more repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^([0-9a-fA-F]+) ([0-9a-fA-F]+)xx(.*)$'



cluster 631 stats:
nPatterns: 2.0
nProjects: 1
shortest: multiattack5=
Features:

1: LIT|a literal character | 15.5


0000 | 0001 | 'multiattack5='
0001 | 0001 | 'webattack_account='



cluster 632 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.*?)(<\%(?!\%).*?(?<!\%)\%>)(?sm)
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 2.0
6: NLKA|sequence doesn't follow  | 1.0
7: NLKB|sequence doesn't precede | 1.0
8: OPT|options wrapper | 1.0


0000 | 0001 | '(.*?)(<\\%(?!\\%).*?(?<!\\%)\\%>)(?sm)'



cluster 633 stats:
nPatterns: 1.0
nProjects: 1
shortest: 9(?:\d[ \-\)\(\dx\.]{0,2}){6,10}
Features:

1: LIT|a literal character | 7.0
2: DBB|$n\le x \le m$ repetition | 2.0
3: DEC|any of: 0123456789 | 2.0
4: CCC|custom character class | 1.0
5: NCG|group without capturing | 1.0


0000 | 0001 | '9(?:\\d[ \\-\\)\\(\\dx\\.]{0,2}){6,10}'



cluster 634 stats:
nPatterns: 1.0
nProjects: 1
shortest: :(?P<chain>[A-Z]+) +(?P<policy>[A-Z]+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 3.0
3: CCC|custom character class | 2.0
4: PNG|named capture group | 2.0
5: RNG|chars within a range | 2.0


0000 | 0001 | ':(?P<chain>[A-Z]+) +(?P<policy>[A-Z]+)'



cluster 635 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([^:]*):(\d+):\s+(pdfTeX warning.*)
Features:

1: LIT|a literal character | 17.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: KLE|zero-or-more repetition | 2.0
5: ANY|any non-newline char | 1.0
6: DEC|any of: 0123456789 | 1.0
7: NCCC|negated CCC | 1.0
8: STR|start-of-line | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^([^:]*):(\\d+):\\s+(pdfTeX warning.*)'



cluster 636 stats:
nPatterns: 1.0
nProjects: 1
shortest: S(?P<season>[0-9]*)E(?P<episode>[0-9]*)
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 2.0
3: KLE|zero-or-more repetition | 2.0
4: PNG|named capture group | 2.0
5: RNG|chars within a range | 2.0


0000 | 0001 | 'S(?P<season>[0-9]*)E(?P<episode>[0-9]*)'



cluster 637 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\(*time|(.*\s+time))\s+<=\s+(\d+)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 4.0
3: CG|a capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
5: KLE|zero-or-more repetition | 2.0
6: ANY|any non-newline char | 1.0
7: DEC|any of: 0123456789 | 1.0
8: OR|logical or | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^(\\(*time|(.*\\s+time))\\s+<=\\s+(\\d+)'



cluster 638 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*(?P<word>\S+)\_(?P<tag>\S+)\s*$
Features:

1: ADD|one-or-more repetition | 2.0
2: KLE|zero-or-more repetition | 2.0
3: NWSP|any non-whitespace | 2.0
4: PNG|named capture group | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: END|end-of-line | 1.0
7: LIT|a literal character | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*(?P<word>\\S+)\\_(?P<tag>\\S+)\\s*$'



cluster 639 stats:
nPatterns: 2.0
nProjects: 1
shortest: ov_tree(?:.*?)
Features:

1: LIT|a literal character | 10.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: NCG|group without capturing | 1.0


0000 | 0001 | 'ov_tree(?:.*?)'
0001 | 0001 | 'lc_1div8_1div1(?:.*?)'



cluster 640 stats:
nPatterns: 1.0
nProjects: 1
shortest: [^ \t\n\r\f\v"\\']+\s*\=\s*"[^"]*"
Features:

1: LIT|a literal character | 12.0
2: KLE|zero-or-more repetition | 3.0
3: NCCC|negated CCC | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ADD|one-or-more repetition | 1.0
6: VWSP|matches U+000B | 1.0


0000 | 0001 | '[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*"[^"]*"'



cluster 641 stats:
nPatterns: 1.0
nProjects: 1
shortest: r?u?\\'(.*?)(?<!\\)\\'|"(.*?)(?<!\\)"
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 2.0
6: NLKB|sequence doesn't precede | 2.0
7: QST|zero-or-one repetition | 2.0
8: OR|logical or | 1.0


0000 | 0001 | 'r?u?\\\'(.*?)(?<!\\\\)\\\'|"(.*?)(?<!\\\\)"'



cluster 642 stats:
nPatterns: 1.0
nProjects: 1
shortest: ((\[\w*|[0-9]+\.)(\:|)).*(\]|\.[0-9]+)
Features:

1: LIT|a literal character | 9.0
2: CG|a capture group | 4.0
3: OR|logical or | 3.0
4: ADD|one-or-more repetition | 2.0
5: CCC|custom character class | 2.0
6: KLE|zero-or-more repetition | 2.0
7: RNG|chars within a range | 2.0
8: ANY|any non-newline char | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '((\\[\\w*|[0-9]+\\.)(\\:|)).*(\\]|\\.[0-9]+)'



cluster 643 stats:
nPatterns: 1.0
nProjects: 1
shortest: http://(?P<ip>[0-9\.]+):(?P<port>[0-9]+)/.*
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: PNG|named capture group | 2.0
5: RNG|chars within a range | 2.0
6: ANY|any non-newline char | 1.0
7: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'http://(?P<ip>[0-9\\.]+):(?P<port>[0-9]+)/.*'



cluster 644 stats:
nPatterns: 1.0
nProjects: 1
shortest: pref\(\"([^\"]+)\"\s*,\s*(\S*)\s*\)
Features:

1: LIT|a literal character | 10.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: CG|a capture group | 2.0
5: ADD|one-or-more repetition | 1.0
6: NCCC|negated CCC | 1.0
7: NWSP|any non-whitespace | 1.0


0000 | 0001 | 'pref\\(\\"([^\\"]+)\\"\\s*,\\s*(\\S*)\\s*\\)'



cluster 645 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*Option\s+"XkbLayout"\s+"(?P<kt>[a-z-]+)"
Features:

1: LIT|a literal character | 22.0
2: ADD|one-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: CCC|custom character class | 1.0
5: KLE|zero-or-more repetition | 1.0
6: PNG|named capture group | 1.0
7: RNG|chars within a range | 1.0


0000 | 0001 | '\\s*Option\\s+"XkbLayout"\\s+"(?P<kt>[a-z-]+)"'



cluster 646 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\+.*VTK_LEGACY_BODY\((.*),\s*"(.*)"\).*\n
Features:

1: LIT|a literal character | 22.0
2: KLE|zero-or-more repetition | 5.0
3: ANY|any non-newline char | 4.0
4: CG|a capture group | 2.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^\\+.*VTK_LEGACY_BODY\\((.*),\\s*"(.*)"\\).*\n'



cluster 647 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?<=\\u)([0-9a-f]{4})|(?<=\\U)([0-9a-f]{8})
Features:

1: LIT|a literal character | 12.0
2: RNG|chars within a range | 4.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: LKB|matching sequence precedes | 2.0
6: SNG|exactly n repetition | 2.0
7: OR|logical or | 1.0


0000 | 0001 | '(?<=\\\\u)([0-9a-f]{4})|(?<=\\\\U)([0-9a-f]{8})'



cluster 648 stats:
nPatterns: 1.0
nProjects: 1
shortest: git version (\d+)\.(\d+)(\.\d+)?(\.\d+)?
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 4.0
3: CG|a capture group | 4.0
4: DEC|any of: 0123456789 | 4.0
5: QST|zero-or-one repetition | 2.0


0000 | 0001 | 'git version (\\d+)\\.(\\d+)(\\.\\d+)?(\\.\\d+)?'



cluster 649 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\s*[\w\W]*?(?:\.(\s|$)|[\n][\t ]*[\n]))
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 4.0
3: KLE|zero-or-more repetition | 3.0
4: CG|a capture group | 2.0
5: OR|logical or | 2.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
7: END|end-of-line | 1.0
8: LZY|as few reps as possible | 1.0
9: NCG|group without capturing | 1.0
10: NWRD|non-word chars | 1.0
11: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(\\s*[\\w\\W]*?(?:\\.(\\s|$)|[\\n][\\t ]*[\\n]))'



cluster 650 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\-]?\d*)\s*([A-Za-z]+([\-@]\d*[A-Za-z]+)?)
Features:

1: LIT|a literal character | 11.0
2: CCC|custom character class | 4.0
3: RNG|chars within a range | 4.0
4: CG|a capture group | 3.0
5: KLE|zero-or-more repetition | 3.0
6: ADD|one-or-more repetition | 2.0
7: DEC|any of: 0123456789 | 2.0
8: QST|zero-or-one repetition | 2.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'



cluster 651 stats:
nPatterns: 2.0
nProjects: 1
shortest: Connection timed out
Features:

1: LIT|a literal character | 22.0


0000 | 0001 | 'Connection timed out'
0001 | 0001 | 'Connection reset by peer'



cluster 652 stats:
nPatterns: 1.0
nProjects: 1
shortest: \((?P<flags>.*)\) "(?P<sep>.*)" ".*/(?P<mbx>.*)"
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 4.0
4: PNG|named capture group | 3.0


0000 | 0001 | '\\((?P<flags>.*)\\) "(?P<sep>.*)" ".*/(?P<mbx>.*)"'



cluster 653 stats:
nPatterns: 1.0
nProjects: 1
shortest: <\w+[^>]*>|</\w+>|[\w\']+|\s+|[^\w\'\s<>/]+
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 5.0
3: WRD|[a-zA-Z0-9\_] | 4.0
4: NCCC|negated CCC | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: CCC|custom character class | 1.0
7: KLE|zero-or-more repetition | 1.0
8: OR|logical or | 1.0


0000 | 0001 | "<\\w+[^>]*>|</\\w+>|[\\w\\']+|\\s+|[^\\w\\'\\s<>/]+"



cluster 654 stats:
nPatterns: 1.0
nProjects: 1
shortest: (/.*?)(\(([0-9]+)\)|):.*(Error|Warning):\s*(.*)$
Features:

1: LIT|a literal character | 19.0
2: CG|a capture group | 5.0
3: KLE|zero-or-more repetition | 4.0
4: ANY|any non-newline char | 3.0
5: OR|logical or | 2.0
6: ADD|one-or-more repetition | 1.0
7: CCC|custom character class | 1.0
8: END|end-of-line | 1.0
9: LZY|as few reps as possible | 1.0
10: RNG|chars within a range | 1.0
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(/.*?)(\\(([0-9]+)\\)|):.*(Error|Warning):\\s*(.*)$'



cluster 655 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?s)(?<=\n)([|][|].*?[|][|])(?=\n[^|]|\n[|][^|])
Features:

1: LIT|a literal character | 10.0
2: CCC|custom character class | 5.0
3: NCCC|negated CCC | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0
7: LKA|matching sequence follows | 1.0
8: LKB|matching sequence precedes | 1.0
9: LZY|as few reps as possible | 1.0
10: OPT|options wrapper | 1.0
11: OR|logical or | 1.0


0000 | 0001 | '(?s)(?<=\\n)([|][|].*?[|][|])(?=\\n[^|]|\\n[|][^|])'



cluster 656 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\d+)\s+\w+\s+(\w+)\s+(\w+)\s+\w+\s+(\w+).*
Features:

1: ADD|one-or-more repetition | 11.0
2: WRD|[a-zA-Z0-9\_] | 5.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
4: CG|a capture group | 4.0
5: ANY|any non-newline char | 1.0
6: DEC|any of: 0123456789 | 1.0
7: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '(\\d+)\\s+\\w+\\s+(\\w+)\\s+(\\w+)\\s+\\w+\\s+(\\w+).*'



cluster 657 stats:
nPatterns: 1.0
nProjects: 1
shortest: (`(?:[^`]|``)+`|\w+)(?:(?:\:)(`(?:[^`]|``)+`|\w+))?
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 4.0
3: NCG|group without capturing | 4.0
4: OR|logical or | 4.0
5: CG|a capture group | 2.0
6: NCCC|negated CCC | 2.0
7: WRD|[a-zA-Z0-9\_] | 2.0
8: QST|zero-or-one repetition | 1.0


0000 | 0001 | '(`(?:[^`]|``)+`|\\w+)(?:(?:\\:)(`(?:[^`]|``)+`|\\w+))?'



cluster 658 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\\)((@\d:)?[\w @\-\./\(\),\[\]]*)(\t*:) *(.*)
Features:

1: LIT|a literal character | 16.0
2: CG|a capture group | 5.0
3: KLE|zero-or-more repetition | 4.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0
7: QST|zero-or-one repetition | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(\\\\)((@\\d:)?[\\w @\\-\\./\\(\\),\\[\\]]*)(\\t*:) *(.*)'



cluster 659 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?P<cf>[\S]+)+-(?P<tmp>tmp-)?[\S]+-(?P<suffix>[a-zA-Z.]+)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 4.0
3: CCC|custom character class | 3.0
4: PNG|named capture group | 3.0
5: NWSP|any non-whitespace | 2.0
6: RNG|chars within a range | 2.0
7: QST|zero-or-one repetition | 1.0


0000 | 0001 | '(?P<cf>[\\S]+)+-(?P<tmp>tmp-)?[\\S]+-(?P<suffix>[a-zA-Z.]+)'



cluster 660 stats:
nPatterns: 2.0
nProjects: 1
shortest: dhcp.option.ntp_server.\d
Features:

1: LIT|a literal character | 20.5
2: ANY|any non-newline char | 3.0
3: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'dhcp.option.ntp_server.\\d'
0001 | 0001 | 'dhcp.pool.allow_booting.\\d'



cluster 661 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?P<year>\d{4})( (?P<month>[A-Za-z]{3})( (?P<day>\d+))?)?$
Features:

1: LIT|a literal character | 6.0
2: PNG|named capture group | 3.0
3: CG|a capture group | 2.0
4: DEC|any of: 0123456789 | 2.0
5: QST|zero-or-one repetition | 2.0
6: RNG|chars within a range | 2.0
7: SNG|exactly n repetition | 2.0
8: ADD|one-or-more repetition | 1.0
9: CCC|custom character class | 1.0
10: END|end-of-line | 1.0


0000 | 0001 | '(?P<year>\\d{4})( (?P<month>[A-Za-z]{3})( (?P<day>\\d+))?)?$'



cluster 662 stats:
nPatterns: 2.0
nProjects: 1
shortest: "v8_revision": "123455"
Features:

1: LIT|a literal character | 21.0
2: ADD|one-or-more repetition | 0.5
3: CCC|custom character class | 0.5
4: CG|a capture group | 0.5
5: LKA|matching sequence follows | 0.5
6: LKB|matching sequence precedes | 0.5
7: RNG|chars within a range | 0.5


0000 | 0001 | '"v8_revision": "123455"'
0001 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'



cluster 663 stats:
nPatterns: 3.0
nProjects: 1
shortest: WEBATTACK_SSL=ON
Features:

1: LIT|a literal character | 18.0


0000 | 0001 | 'WEBATTACK_SSL=ON'
0001 | 0001 | 'COMMAND_CENTER=ON'
0002 | 0001 | 'SELF_SIGNED_APPLET=ON'



cluster 664 stats:
nPatterns: 4.0
nProjects: 1
shortest: .*?'''
Features:

1: LIT|a literal character | 6.25
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: WNW|word/non-word boundary | 1.0


0000 | 0001 | ".*?'''"
0001 | 0001 | '.*?\\blm\\b'
0002 | 0001 | '.*?Athlon HX\\b'
0003 | 0001 | '.*?Pentium III\\b'



cluster 665 stats:
nPatterns: 3.0
nProjects: 1
shortest: (?i)\b(T)(is)\b
Features:

1: LIT|a literal character | 4.333333333333333
2: CG|a capture group | 2.0
3: WNW|word/non-word boundary | 2.0
4: OPT|options wrapper | 1.0


0000 | 0001 | '(?i)\\b(T)(is)\\b'
0001 | 0001 | '(?i)\\b(T)(was)\\b'
0002 | 0001 | '(?i)\\b(can)(not)\\b'



cluster 666 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^} *\/\* *(?P<n>.*) *\*\/$
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 4.0
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: PNG|named capture group | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^} *\\/\\* *(?P<n>.*) *\\*\\/$'
0001 | 0001 | '^ *\\/\\* *(?P<msg>.*) \\*\\/ *$'



cluster 667 stats:
nPatterns: 2.0
nProjects: 1
shortest: http(s)?://(www.)?facebook.com/
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: QST|zero-or-one repetition | 2.0


0000 | 0001 | 'http(s)?://(www.)?facebook.com/'
0001 | 0001 | 'http(s)?://(www.)?linkedin.com/'



cluster 668 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^Fan.#([0-9]+).information:$
Features:

1: LIT|a literal character | 22.0
2: ANY|any non-newline char | 2.5
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: RNG|chars within a range | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^Fan.#([0-9]+).information:$'
0001 | 0001 | '^Server.Blade.#([0-9]+).Information:$'



cluster 669 stats:
nPatterns: 2.0
nProjects: 1
shortest: ''(?P<t>[^\s']+( +[^\s']+)*)''
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 3.0
3: NCCC|negated CCC | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: KLE|zero-or-more repetition | 1.0
6: PNG|named capture group | 1.0
7: CG|a capture group | 0.5
8: NCG|group without capturing | 0.5


0000 | 0001 | "''(?P<t>[^\\s']+( +[^\\s']+)*)''"
0001 | 0001 | "''(?P<t>[^\\s']+(?: +[^\\s']+)*)''"



cluster 670 stats:
nPatterns: 2.0
nProjects: 1
shortest: About\((.*)\).should
Features:

1: LIT|a literal character | 20.0
2: ANY|any non-newline char | 2.5
3: CG|a capture group | 1.5
4: KLE|zero-or-more repetition | 1.5


0000 | 0001 | 'About\\((.*)\\).should'
0001 | 0001 | 'About\\((.*)\\).should_not_include\\((.*)\\)'



cluster 671 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?P<prefix>^\s*function\s+)(?P<main>[^$]+[&a-zA-Z0-9_]+)(?P<suffix>.*$)
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 3.0
3: PNG|named capture group | 3.0
4: RNG|chars within a range | 3.0
5: KLE|zero-or-more repetition | 2.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
7: ANY|any non-newline char | 1.0
8: CCC|custom character class | 1.0
9: END|end-of-line | 1.0
10: NCCC|negated CCC | 1.0
11: STR|start-of-line | 1.0


0000 | 0001 | '(?P<prefix>^\\s*function\\s+)(?P<main>[^$]+[&a-zA-Z0-9_]+)(?P<suffix>.*$)'



cluster 672 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([-+]?((?:\d+(?:\.\d*)?|\d*\.\d+))[eE]((?:[-+]?\d+)?)|(\d+\.\d*))
Features:

1: LIT|a literal character | 9.0
2: DEC|any of: 0123456789 | 7.0
3: ADD|one-or-more repetition | 4.0
4: CG|a capture group | 4.0
5: QST|zero-or-one repetition | 4.0
6: CCC|custom character class | 3.0
7: KLE|zero-or-more repetition | 3.0
8: NCG|group without capturing | 3.0
9: OR|logical or | 2.0


0000 | 0001 | '([-+]?((?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[eE]((?:[-+]?\\d+)?)|(\\d+\\.\\d*))'



cluster 673 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*<p.*?begin="(.*?)\.([0-9]+)"\s+.*?end="(.*?)\.([0-9]+)"\s*>(.*?)</p>
Features:

1: LIT|a literal character | 27.0
2: KLE|zero-or-more repetition | 7.0
3: ANY|any non-newline char | 5.0
4: CG|a capture group | 5.0
5: LZY|as few reps as possible | 5.0
6: ADD|one-or-more repetition | 3.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
8: CCC|custom character class | 2.0
9: RNG|chars within a range | 2.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*<p.*?begin="(.*?)\\.([0-9]+)"\\s+.*?end="(.*?)\\.([0-9]+)"\\s*>(.*?)</p>'



cluster 674 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\w.+]+)\s*.*\(#?([^,]+),\s*([\w ]+),\s*([\w :]+)\)\s*\[([^\]]+)\]?
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 5.0
3: CG|a capture group | 5.0
4: KLE|zero-or-more repetition | 5.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
6: CCC|custom character class | 3.0
7: WRD|[a-zA-Z0-9\_] | 3.0
8: NCCC|negated CCC | 2.0
9: QST|zero-or-one repetition | 2.0
10: ANY|any non-newline char | 1.0


0000 | 0001 | '([\\w.+]+)\\s*.*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'



cluster 675 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\d+(?:\.\d+)+(?:(?:[abc]|rc)\d+(?:\.\d+)*)?(?:\.post\d+)?(?:\.dev\d+)?$
Features:

1: LIT|a literal character | 16.0
2: ADD|one-or-more repetition | 7.0
3: DEC|any of: 0123456789 | 6.0
4: NCG|group without capturing | 6.0
5: QST|zero-or-one repetition | 3.0
6: CCC|custom character class | 1.0
7: END|end-of-line | 1.0
8: KLE|zero-or-more repetition | 1.0
9: OR|logical or | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?(?:\\.post\\d+)?(?:\\.dev\\d+)?$'



cluster 676 stats:
nPatterns: 2.0
nProjects: 1
shortest: \s*([^\s\(\)"\\'\-=\[\]]+)\s*
Features:

1: LIT|a literal character | 10.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NCCC|negated CCC | 1.0


0000 | 0001 | '\\s*([^\\s\\(\\)"\\\'\\-=\\[\\]]+)\\s*'
0001 | 0001 | '\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/]+)\\s*'



cluster 677 stats:
nPatterns: 2.0
nProjects: 1
shortest: ("[^"]*?")|(\'[^\']*?\')
Features:

1: LIT|a literal character | 11.5
2: KLE|zero-or-more repetition | 3.5
3: NCCC|negated CCC | 3.0
4: CG|a capture group | 2.0
5: LZY|as few reps as possible | 1.0
6: OR|logical or | 1.0
7: ADD|one-or-more repetition | 0.5
8: PNG|named capture group | 0.5


0000 | 0001 | '("[^"]*?")|(\'[^\']*?\')'
0001 | 0001 | "[^']*('[^']*'[^']*)*\\:(?P<clob>CLOB\\('([^']+|'')*'\\))"



cluster 678 stats:
nPatterns: 2.0
nProjects: 1
shortest: Apple (?:clang|LLVM) version (\d+\.\d+)
Features:

1: LIT|a literal character | 29.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.5
4: DEC|any of: 0123456789 | 1.5
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: NCCC|negated CCC | 0.5
8: NCG|group without capturing | 0.5
9: NWSP|any non-whitespace | 0.5
10: WNW|word/non-word boundary | 0.5


0000 | 0001 | u'Apple (?:clang|LLVM) version (\\d+\\.\\d+)'
0001 | 0001 | 'Mozilla (Firefox|Iceweasel|Fennec)\\b[^ ]* ((\\d+)\\.\\S*)'



cluster 679 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^1.2.840.10008.[0-9.]+ (.*)$
Features:

1: LIT|a literal character | 27.333333333333332
2: ANY|any non-newline char | 5.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: RNG|chars within a range | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^1.2.840.10008.[0-9.]+ (.*)$'
0001 | 0001 | '^1.2.840.10008.[0-9.]+ (.*) \\(Retired\\)$'
0002 | 0001 | '^1.2.840.10008.[0-9.]+ (.*) Well-known frame of reference$'



cluster 680 stats:
nPatterns: 8.0
nProjects: 1
shortest: ^std::stack<.*>$
Features:

1: LIT|a literal character | 24.125
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^std::stack<.*>$'
0001 | 0001 | '^std::__debug::list<.*>$'
0002 | 0001 | '^std::unordered_set<.*>$'
0003 | 0001 | '^std::unordered_multimap<.*>$'
0004 | 0001 | '^std::unordered_multiset<.*>$'
0005 | 0001 | '^std::_List_const_iterator<.*>$'
0006 | 0001 | '^std::tr1::unordered_multiset<.*>$'
0007 | 0001 | '^std::__debug::unordered_multimap<.*>$'



cluster 681 stats:
nPatterns: 5.0
nProjects: 1
shortest: ^\s*([A-Za-z0-9 '/-]+)\s+\(([0-9]+),([0-9A-Fa-fx]+)\)\s+([1-3])\s+.*$
Features:

1: LIT|a literal character | 30.6
2: RNG|chars within a range | 9.4
3: ADD|one-or-more repetition | 7.2
4: CCC|custom character class | 5.4
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
6: CG|a capture group | 4.8
7: KLE|zero-or-more repetition | 2.2
8: END|end-of-line | 1.0
9: STR|start-of-line | 1.0
10: ANY|any non-newline char | 0.8


0000 | 0001 | "^\\s*([A-Za-z0-9 '/-]+)\\s+\\(([0-9]+),([0-9A-Fa-fx]+)\\)\\s+([1-3])\\s+.*$"
0001 | 0001 | '^\\([0-9a-fA-Fx]+,[0-9a-fA-F]+\\)\\s+(.*)\\s+[A-Z][A-Z]\\s+([0-9n-]+)\\s+RET\\s*$'
0002 | 0001 | '^\\(([0-9a-fA-Fx]+),([0-9a-fA-F]+)\\)\\s+(.*)\\s+([A-Z][A-Z])\\s+([0-9n-]+)\\s+(RET)\\s*$'
0003 | 0001 | '^\\s*([A-Za-z0-9> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+VR = ([A-Z][A-Z]), VM = ([0-9n-]+)\\s+(.*)\\s*$'
0004 | 0001 | '^\\s*([A-Za-z0-9()> -]+)\\s+\\(([0-9]+),([0-9A-Fx]+)\\)\\s+([A-Z][A-Z])\\s+([1-9n-]+)\\s+([A-Za-z_0-9. ]+)\\s*$'



