Cluster stats:

nClusters: 286
TotalPatterns: 932
totalnProjects: 623
suffix: _i4.00_p0.27_k100_lcs_


cluster 0 stats:
nPatterns: 54.0
nProjects: 112
shortest: [a-zA-Z]+
Features:

1: LIT|a literal character | 11.574074074074074
2: RNG|chars within a range | 3.6481481481481484
3: CCC|custom character class | 1.4444444444444444
4: ADD|one-or-more repetition | 0.6296296296296297
5: KLE|zero-or-more repetition | 0.6296296296296297
6: CG|a capture group | 0.46296296296296297
7: END|end-of-line | 0.3148148148148148
8: STR|start-of-line | 0.2962962962962963
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.18518518518518517
10: NCCC|negated CCC | 0.14814814814814814
11: OR|logical or | 0.12962962962962962
12: QST|zero-or-one repetition | 0.12962962962962962
13: DEC|any of: 0123456789 | 0.05555555555555555
14: SNG|exactly n repetition | 0.05555555555555555
15: WNW|word/non-word boundary | 0.05555555555555555
16: WRD|[a-zA-Z0-9\_] | 0.05555555555555555
17: ANY|any non-newline char | 0.037037037037037035
18: ENDZ|absolute end of string | 0.018518518518518517
19: LWB|at least n repetition | 0.018518518518518517
20: LZY|as few reps as possible | 0.018518518518518517


0000 | 0020 | '[^a-zA-Z0-9]'
0001 | 0018 | '[a-zA-Z][-_.:a-zA-Z0-9]*\\s*'
0002 | 0016 | '&([a-zA-Z][a-zA-Z0-9]*|#[0-9]*)?|<([a-zA-Z][^<>]*|/([a-zA-Z][^<>]*)?|![^<>]*)?'
0003 | 0015 | '[a-zA-Z][-.a-zA-Z0-9:_]*'
0004 | 0015 | '[a-zA-Z][-_.a-zA-Z0-9:]*\\s*'
0005 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0006 | 0012 | '\\$([a-zA-Z_][a-zA-Z_0-9]*)'
0007 | 0005 | ', ([a-zA-Z0-9_]+)='
0008 | 0003 | u'^[-a-zA-Z0-9_]+$'
0009 | 0003 | '([-0-9.]+)([a-zA-Z]+)'
0010 | 0003 | '^[a-zA-Z0-9\\.\\-:+"]+$'
0011 | 0003 | '^struct +[a-zA-Z_][a-zA-Z0-9_]* *{$'
0012 | 0002 | '[a-zA-Z_]\\w*$'
0013 | 0002 | '^[a-zA-Z0-9\\-]+$'
0014 | 0002 | '^[a-zA-Z0-9_\\.]+$'
0015 | 0002 | '([a-zA-Z]+)([A-Z][a-z])'
0016 | 0002 | '(~?\\b[a-zA-Z_][a-zA-Z0-9_]*)\\b'
0017 | 0002 | '&([a-zA-Z][a-zA-Z0-9]*)[^a-zA-Z0-9]'
0018 | 0002 | 'irb\\([a-zA-Z_][a-zA-Z0-9_]*\\):\\d{3}:\\d+[>*] '
0019 | 0001 | '^[a-zA-Z]*'
0020 | 0001 | u'[a-zA-Z]+'
0021 | 0001 | '@([a-zA-Z_]+)@'
0022 | 0001 | '[^0-9a-zA-Z._]'
0023 | 0001 | '[^a-zA-Z0-9_]+'
0024 | 0001 | '^[a-zA-Z]\\w*$'
0025 | 0001 | '[a-zA-Z.;?<>-]+'
0026 | 0001 | '([a-zA-Z0-9_.]+)'
0027 | 0001 | '^[0-9a-zA-Z- ]+$'
0028 | 0001 | '{[a-zA-Z_ 0-9]+}'
0029 | 0001 | u'^[a-zA-Z0-9_]+$'
0030 | 0001 | '[a-zA-Z0-9_\\-]+$'
0031 | 0001 | '[a-zA-Z]:(/|\\\\)'
0032 | 0001 | '^[a-zA-Z0-9]{40}$'
0033 | 0001 | '[^-a-zA-Z_\\.0-9:]+'
0034 | 0001 | u'\\xa7([0-9a-zA-Z])'
0035 | 0001 | "\\{([a-zA-Z\\']+)\\}"
0036 | 0001 | '\\%\\([a-zA-Z0-9]+\\)'
0037 | 0001 | '^[a-zA-Z0-9_\\-\\.]+$'
0038 | 0001 | '[a-zA-Z][a-zA-Z0-9_]*$'
0039 | 0001 | '[-+*/!@$%^&=.a-zA-Z0-9_]+'
0040 | 0001 | '^/[a-zA-Z0-9_-]{28}/file1$'
0041 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,}$'
0042 | 0001 | '[a-zA-Z_:][\\w\\.\\-_:]*\\Z'
0043 | 0001 | '[a-zA-Z0-9]+(-[a-zA-Z0-9]+)?'
0044 | 0001 | '^@[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0045 | 0001 | '(\\s+|\\A)#([a-zA-Z0-9\\-_]*)\\b'
0046 | 0001 | 'Content-Type: ?([a-zA-Z0-9\\-/]*)'
0047 | 0001 | '[a-zA-Z0-9_\\.]+/[a-zA-Z0-9_\\.]+'
0048 | 0001 | '^[\\(\\[\\{]([a-zA-Z])[\\]\\}\\)]'
0049 | 0001 | '&([a-zA-Z][-.a-zA-Z0-9]*|#[0-9]*)?'
0050 | 0001 | '<meta http-equiv="Content-Type".*?>'
0051 | 0001 | u'\\s*(.+)\\s*:\\s*([-a-zA-Z]+)\\s*$'
0052 | 0001 | '[a-zA-Z0-9_]+:[a-zA-Z0-9_\\.\\-\\s]+'
0053 | 0001 | '\\s*(class|def)\\s+[a-zA-Z_][a-zA-Z0-9_]*'



cluster 1 stats:
nPatterns: 5.0
nProjects: 102
shortest: s
Features:

1: LIT|a literal character | 1.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6
3: KLE|zero-or-more repetition | 0.2


0000 | 0078 | '\\s'
0001 | 0030 | '\\s*'
0002 | 0007 | 'a\\s'
0003 | 0002 | 's'
0004 | 0001 | 'sun'



cluster 2 stats:
nPatterns: 30.0
nProjects: 90
shortest: ;\s*
Features:

1: LIT|a literal character | 2.6666666666666665
2: KLE|zero-or-more repetition | 1.3
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.3
4: STR|start-of-line | 0.4
5: END|end-of-line | 0.3
6: ADD|one-or-more repetition | 0.23333333333333334
7: CCC|custom character class | 0.1
8: ANY|any non-newline char | 0.06666666666666667
9: CG|a capture group | 0.06666666666666667
10: WRD|[a-zA-Z0-9\_] | 0.06666666666666667
11: NCCC|negated CCC | 0.03333333333333333
12: NWSP|any non-whitespace | 0.03333333333333333
13: OPT|options wrapper | 0.03333333333333333
14: QST|zero-or-one repetition | 0.03333333333333333
15: RNG|chars within a range | 0.03333333333333333
16: WNW|word/non-word boundary | 0.03333333333333333


0000 | 0048 | '^\\s*$'
0001 | 0008 | '\\s*/\\*\\s*\\*/'
0002 | 0007 | '\\s*-e\\s+'
0003 | 0005 | ';\\s*'
0004 | 0005 | '\\)\\s*'
0005 | 0005 | '(}?\\s*)$'
0006 | 0004 | ',\\s*$'
0007 | 0004 | '\\s*SELECT'
0008 | 0004 | u'^\\s*[^#\\s].*'
0009 | 0004 | '\\s*\\(0[0-7]+\\).*'
0010 | 0003 | '(""")\\s*$'
0011 | 0002 | '---\\s*$'
0012 | 0002 | '^Vendor:'
0013 | 0002 | '^\\s*\\#+\\s*'
0014 | 0001 | ':\\s*'
0015 | 0001 | '\\s*\\S+'
0016 | 0001 | '^\\s*\\['
0017 | 0001 | '(?m)^\\s*'
0018 | 0001 | '\\-\\s*\\>'
0019 | 0001 | '^\\s*endif'
0020 | 0001 | '[-+]\\s*\\('
0021 | 0001 | '\\s*=+>\\s*'
0022 | 0001 | '\\s*\\;\\s*'
0023 | 0001 | 'type\\b\\s*'
0024 | 0001 | '\\s*\\*/\\s*'
0025 | 0001 | '^\\s*\\w*\\s*$'
0026 | 0001 | '^message:\\s*$'
0027 | 0001 | '^removed:\\s*$'
0028 | 0001 | '^\\s*msgid\\s+"'
0029 | 0001 | '^\\s*[\\w-]+\\s*$'



cluster 3 stats:
nPatterns: 30.0
nProjects: 71
shortest: #.*
Features:

1: LIT|a literal character | 3.4
2: ANY|any non-newline char | 1.1
3: CG|a capture group | 1.0333333333333334
4: KLE|zero-or-more repetition | 1.0333333333333334
5: END|end-of-line | 0.3
6: STR|start-of-line | 0.26666666666666666
7: ADD|one-or-more repetition | 0.1
8: NCCC|negated CCC | 0.1
9: DEC|any of: 0123456789 | 0.06666666666666667
10: BKR|match the $i^{th}$ CG | 0.03333333333333333
11: NDEC|any non-decimal | 0.03333333333333333


0000 | 0016 | '#.*'
0001 | 0014 | '^(.*)#([^#]*)$'
0002 | 0008 | 'Wrote: (.*)'
0003 | 0004 | '{([^}]*)}(.*)'
0004 | 0003 | '#.*$'
0005 | 0003 | 'o:(.*)s'
0006 | 0003 | "'\\?(.)'"
0007 | 0003 | '(.*)//(.*)'
0008 | 0003 | '__FAIL(.*)__FAIL'
0009 | 0002 | '(.*)'
0010 | 0002 | '(.*)\n'
0011 | 0002 | '\\?(.*)'
0012 | 0002 | '^yt-(.*)$'
0013 | 0002 | '(.*) cache:$'
0014 | 0002 | '([^#:]*#)(.*)'
0015 | 0001 | '%(..)'
0016 | 0001 | '\\(.*$'
0017 | 0001 | '(.).\\1'
0018 | 0001 | '^//(.*)'
0019 | 0001 | '\\) (.*)'
0020 | 0001 | 'Auth=(.*)'
0021 | 0001 | '^(.*)"""$'
0022 | 0001 | '/\\(.*\\)/'
0023 | 0001 | '^lib(.*).a$'
0024 | 0001 | 'AuthenticAMD'
0025 | 0001 | '^\\[(.*)\\]$'
0026 | 0001 | '^u_(.*)_level$'
0027 | 0001 | '(.*)\\(\\d+\\) :'
0028 | 0001 | '(\\D*)(\\d*)(.*)'
0029 | 0001 | '^//(\\[.+\\])+\n'



cluster 4 stats:
nPatterns: 12.0
nProjects: 67
shortest: \d+-
Features:

1: LIT|a literal character | 1.8333333333333333
2: DEC|any of: 0123456789 | 1.0833333333333333
3: ADD|one-or-more repetition | 1.0
4: END|end-of-line | 0.4166666666666667
5: STR|start-of-line | 0.4166666666666667
6: ANY|any non-newline char | 0.08333333333333333
7: CG|a capture group | 0.08333333333333333
8: QST|zero-or-one repetition | 0.08333333333333333
9: SNG|exactly n repetition | 0.08333333333333333


0000 | 0049 | '^\\d+$'
0001 | 0009 | '^-?\\d+$'
0002 | 0005 | '^\\d{5}$'
0003 | 0004 | '\\d+-'
0004 | 0002 | '^.+$'
0005 | 0002 | '\\.repeat\\d+'
0006 | 0001 | '/\\d+'
0007 | 0001 | '\\$\\d'
0008 | 0001 | '\\d+:\\d+'
0009 | 0001 | 'level\\d+'
0010 | 0001 | '(ajax)\\d+'
0011 | 0001 | '^\\d+:\\d+$'



cluster 5 stats:
nPatterns: 31.0
nProjects: 63
shortest: ^[0-9]
Features:

1: LIT|a literal character | 6.225806451612903
2: RNG|chars within a range | 1.3870967741935485
3: CCC|custom character class | 1.3225806451612903
4: ADD|one-or-more repetition | 1.2580645161290323
5: CG|a capture group | 0.8387096774193549
6: STR|start-of-line | 0.41935483870967744
7: END|end-of-line | 0.3548387096774194
8: KLE|zero-or-more repetition | 0.3225806451612903
9: ANY|any non-newline char | 0.25806451612903225
10: NCCC|negated CCC | 0.12903225806451613
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.0967741935483871
12: OR|logical or | 0.06451612903225806
13: DEC|any of: 0123456789 | 0.03225806451612903
14: NWSP|any non-whitespace | 0.03225806451612903
15: QST|zero-or-one repetition | 0.03225806451612903
16: SNG|exactly n repetition | 0.03225806451612903
17: WRD|[a-zA-Z0-9\_] | 0.03225806451612903


0000 | 0014 | '^(.*):([0-9]+)$'
0001 | 0008 | '[a-f0-9]+\\s+<.*:$'
0002 | 0007 | '\\s*([a-f0-9]+):\\s*(\\S.*)'
0003 | 0006 | '[0-9]+,[0-9]+'
0004 | 0004 | '(.*) \\(([0-9]+)\\)$'
0005 | 0003 | '[0-9]+\\.[0-9]+'
0006 | 0003 | '([0-9]+):([0-9]+)'
0007 | 0003 | 'vport[0-9]p[0-9]+'
0008 | 0002 | '^[0-9]'
0009 | 0002 | '^([0-9]+)$'
0010 | 0002 | u'--cols=[0-9]+'
0011 | 0002 | '([0-9]+)_([0-9]+)'
0012 | 0002 | '^md5=([a-f0-9]+)$'
0013 | 0002 | '\\("id", "([0-9]+)"\\);'
0014 | 0001 | '[0-9.]+'
0015 | 0001 | '[0-9]+:'
0016 | 0001 | '^[+0-9]+$'
0017 | 0001 | '^([-\\w]+)'
0018 | 0001 | '(\\*|[0-9])'
0019 | 0001 | '.*[0-9]{6}$'
0020 | 0001 | '^.*[0-9]dev$'
0021 | 0001 | '^A[0-9][^ ]+$'
0022 | 0001 | '.*\\.([0-9]+)$'
0023 | 0001 | '^[^ :]+:[^ ]+ - '
0024 | 0001 | '^Committed r([0-9]+)'
0025 | 0001 | '^m_([0-9]+)_([0-9]+)'
0026 | 0001 | '^(scsi|ide)[0-9]+[^:]'
0027 | 0001 | ', ([0-9]+\\.[0-9]+) fps'
0028 | 0001 | '^([-+]?[0-9]+)\\.([0-9]+)$'
0029 | 0001 | '([0-9]+\\.[0-9]+\\.[0-9]+).*'
0030 | 0001 | 'snapshot-pos,(0x[a-f0-9]+),(\\d+)'



cluster 6 stats:
nPatterns: 8.0
nProjects: 57
shortest: \n
Features:

1: LIT|a literal character | 1.375
2: ADD|one-or-more repetition | 0.5
3: END|end-of-line | 0.125
4: LWB|at least n repetition | 0.125


0000 | 0041 | '\n'
0001 | 0008 | '\n+'
0002 | 0007 | '\t'
0003 | 0002 | '\\n +'
0004 | 0002 | '\\n+$'
0005 | 0002 | ' {2,}\n'
0006 | 0001 | u'\n'
0007 | 0001 | '\n\n+'



cluster 7 stats:
nPatterns: 4.0
nProjects: 48
shortest: [\x01-\x1f]
Features:

1: LIT|a literal character | 2.5
2: RNG|chars within a range | 1.25
3: CCC|custom character class | 1.0
4: CG|a capture group | 0.5
5: ADD|one-or-more repetition | 0.25


0000 | 0039 | '([\x80-\x9f])'
0001 | 0008 | '[\\x00-\\x08\\x0e-\\x1f]'
0002 | 0002 | '[\x01-\x1f]'
0003 | 0001 | '([\x00-\x7f]+)'



cluster 8 stats:
nPatterns: 3.0
nProjects: 43
shortest: ^[ ]*(#.*)?$
Features:

1: LIT|a literal character | 2.6666666666666665
2: CCC|custom character class | 1.3333333333333333
3: KLE|zero-or-more repetition | 1.3333333333333333
4: CG|a capture group | 0.6666666666666666
5: QST|zero-or-one repetition | 0.6666666666666666
6: STR|start-of-line | 0.6666666666666666
7: ADD|one-or-more repetition | 0.3333333333333333
8: ANY|any non-newline char | 0.3333333333333333
9: DEC|any of: 0123456789 | 0.3333333333333333
10: END|end-of-line | 0.3333333333333333
11: LKA|matching sequence follows | 0.3333333333333333
12: OPT|options wrapper | 0.3333333333333333
13: OR|logical or | 0.3333333333333333


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0040 | '(?m)^[ ]*(?=\n)'
0002 | 0002 | ',[ ]*([-]?\\d+|n)'



cluster 9 stats:
nPatterns: 2.0
nProjects: 42
shortest: shutdown_session\)\(
Features:

1: LIT|a literal character | 16.0
2: CCC|custom character class | 0.5
3: CG|a capture group | 0.5
4: KLE|zero-or-more repetition | 0.5
5: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0038 | 'shutdown_session\\)\\('
0001 | 0004 | '[\\?\\&]gsessionid=(\\w*\\-)'



cluster 10 stats:
nPatterns: 3.0
nProjects: 41
shortest: \(\*
Features:

1: CG|a capture group | 0.6666666666666666
2: LIT|a literal character | 0.6666666666666666
3: NWRD|non-word chars | 0.3333333333333333
4: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0038 | '\\(\\*'
0001 | 0002 | '(\\W)'
0002 | 0001 | '(\\S)'



cluster 11 stats:
nPatterns: 6.0
nProjects: 38
shortest: \s+<
Features:

1: LIT|a literal character | 2.8333333333333335
2: ADD|one-or-more repetition | 1.1666666666666667
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.1666666666666667
4: QST|zero-or-one repetition | 0.16666666666666666


0000 | 0020 | '>\\s+<'
0001 | 0011 | '\\$else\\s+'
0002 | 0004 | u'>\\s+<'
0003 | 0001 | '\\s+<'
0004 | 0001 | '\\*/\\s+/\\*'
0005 | 0001 | '\\s+---?\\s+'



cluster 12 stats:
nPatterns: 4.0
nProjects: 38
shortest: &(?!(\w+|#\d+);)
Features:

1: LIT|a literal character | 3.5
2: ADD|one-or-more repetition | 1.25
3: OR|logical or | 1.0
4: CG|a capture group | 0.75
5: KLE|zero-or-more repetition | 0.75
6: NCCC|negated CCC | 0.75
7: WRD|[a-zA-Z0-9\_] | 0.75
8: DEC|any of: 0123456789 | 0.5
9: NLKA|sequence doesn't follow  | 0.5
10: END|end-of-line | 0.25
11: STR|start-of-line | 0.25


0000 | 0019 | '\\$(\\w+|\\{[^}]*\\})'
0001 | 0016 | '&(?!(\\w+|#\\d+);)'
0002 | 0004 | u'&(?!(\\w+|#\\d+);)'
0003 | 0002 | '^[^{]*\\}|\\{[^}]*$'



cluster 13 stats:
nPatterns: 4.0
nProjects: 38
shortest: \*release_cmd\)\(
Features:

1: LIT|a literal character | 18.5


0000 | 0038 | 'alloc_fabric_acl\\)\\('
0001 | 0038 | 'get_fabric_proto_ident'
0002 | 0038 | 'release_fabric_acl\\)\\('
0003 | 0014 | '\\*release_cmd\\)\\('



cluster 14 stats:
nPatterns: 22.0
nProjects: 38
shortest: \s+(\d+),$
Features:

1: LIT|a literal character | 6.136363636363637
2: ADD|one-or-more repetition | 1.6818181818181819
3: CG|a capture group | 1.2272727272727273
4: DEC|any of: 0123456789 | 1.1363636363636365
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4090909090909091
6: ANY|any non-newline char | 0.22727272727272727
7: KLE|zero-or-more repetition | 0.18181818181818182
8: END|end-of-line | 0.13636363636363635
9: STR|start-of-line | 0.13636363636363635
10: CCC|custom character class | 0.09090909090909091
11: QST|zero-or-one repetition | 0.09090909090909091
12: NCCC|negated CCC | 0.045454545454545456
13: WRD|[a-zA-Z0-9\_] | 0.045454545454545456


0000 | 0008 | '.*kallsyms.*'
0001 | 0006 | 'nsyms\\s+(\\d+)'
0002 | 0005 | '\\s+(\\d+),$'
0003 | 0003 | 'L -(\\d+) -\\d+'
0004 | 0003 | 'successes=(\\d+)'
0005 | 0003 | 'MemFree:\\s+(\\d+).*'
0006 | 0002 | '(\\d+) megabytes'
0007 | 0002 | 'Target\\s+(\\d+)'
0008 | 0002 | '^undo\\s+(\\d+)$'
0009 | 0002 | u'cms/page/(\\d+)'
0010 | 0001 | '(\\d+[dwhms])'
0011 | 0001 | '(\\d+) seconds'
0012 | 0001 | '(/dev/loop\\d+)'
0013 | 0001 | 'sms_so_l_(\\d+)'
0014 | 0001 | '([^*]+)\\*(\\d+)'
0015 | 0001 | 'UNSEEN\\s+(\\d+)'
0016 | 0001 | '^#?(\\d+)-(\\d+)$'
0017 | 0001 | 'MESSAGES\\s+(\\d+)'
0018 | 0001 | '[Ff]ile(\\d+)=(.+)'
0019 | 0001 | 'Change\\s+(\\d+)\\s+'
0020 | 0001 | '\\w+ Y(\\d+) N(\\d+)'
0021 | 0001 | '^@@.*\\+(\\d+)(,(\\d+))?'



cluster 15 stats:
nPatterns: 3.0
nProjects: 37
shortest: <!\s+([^<>]*)>
Features:

1: LIT|a literal character | 3.6666666666666665
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.3333333333333333
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.3333333333333333
5: KLE|zero-or-more repetition | 1.0
6: NCCC|negated CCC | 1.0
7: ANY|any non-newline char | 0.6666666666666666
8: CCC|custom character class | 0.3333333333333333
9: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0035 | '<!\\s+([^<>]*)>'
0001 | 0001 | '\\|\\s+([^\\|*])\\s+.*'
0002 | 0001 | '([\\w\\.-]+)\\s+([^(]+).*'



cluster 16 stats:
nPatterns: 6.0
nProjects: 35
shortest: \-
Features:

1: LIT|a literal character | 1.0
2: ADD|one-or-more repetition | 0.6666666666666666
3: NWRD|non-word chars | 0.16666666666666666


0000 | 0026 | '\\W+'
0001 | 0002 | '\\-'
0002 | 0002 | '\\t+'
0003 | 0001 | u'-+'
0004 | 0001 | u'-h'
0005 | 0001 | u'\\-+'



cluster 17 stats:
nPatterns: 3.0
nProjects: 32
shortest: /
Features:

1: LIT|a literal character | 2.3333333333333335
2: QST|zero-or-one repetition | 0.6666666666666666


0000 | 0030 | '/'
0001 | 0002 | '</?u>'
0002 | 0001 | '/?>'



cluster 18 stats:
nPatterns: 8.0
nProjects: 30
shortest: [*?[]
Features:

1: LIT|a literal character | 3.125
2: ANY|any non-newline char | 0.875
3: KLE|zero-or-more repetition | 0.875
4: LZY|as few reps as possible | 0.875
5: WNW|word/non-word boundary | 0.25
6: CCC|custom character class | 0.125
7: CG|a capture group | 0.125
8: NWSP|any non-whitespace | 0.125
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125


0000 | 0024 | '[*?[]'
0001 | 0002 | u'.*?\\S\\.\\s'
0002 | 0001 | ".*?'''"
0003 | 0001 | '%%.*?\n'
0004 | 0001 | '.*?_info'
0005 | 0001 | 'iso.*?\\-'
0006 | 0001 | '.*?\\blm\\b'
0007 | 0001 | '(/\\*.*?\\*/)'



cluster 19 stats:
nPatterns: 3.0
nProjects: 30
shortest: encoding\s*=\s*[\'"]([^"\']+)["\']
Features:

1: LIT|a literal character | 14.333333333333334
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.6666666666666665
3: KLE|zero-or-more repetition | 2.3333333333333335
4: CCC|custom character class | 2.0
5: ADD|one-or-more repetition | 1.3333333333333333
6: CG|a capture group | 1.3333333333333333
7: QST|zero-or-one repetition | 1.3333333333333333
8: NCCC|negated CCC | 0.6666666666666666
9: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0011 | 'encoding\\s*=\\s*[\'"]([^"\']+)["\']'
0001 | 0004 | '<base\\s+href\\s*=\\s*[\'"]?([^\'">]+)'
0002 | 0002 | 'href\\s*=\\s*[\'"]?<([\\w\\.]+)>[\'"]?\\s*(,?)'



cluster 20 stats:
nPatterns: 14.0
nProjects: 28
shortest: %\w+%
Features:

1: LIT|a literal character | 2.642857142857143
2: WRD|[a-zA-Z0-9\_] | 1.0714285714285714
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 0.9285714285714286
5: STR|start-of-line | 0.5
6: END|end-of-line | 0.2857142857142857
7: WNW|word/non-word boundary | 0.14285714285714285
8: DBB|$n\le x \le m$ repetition | 0.07142857142857142
9: KLE|zero-or-more repetition | 0.07142857142857142
10: NCCC|negated CCC | 0.07142857142857142
11: NWRD|non-word chars | 0.07142857142857142
12: OR|logical or | 0.07142857142857142
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.07142857142857142


0000 | 0015 | '\\b\\w+\\b'
0001 | 0008 | '^(\\w){1,2}$'
0002 | 0002 | '(\\w+\\W*)'
0003 | 0001 | '%\\w+%'
0004 | 0001 | '(%\\w)'
0005 | 0001 | '\\((\\w+)'
0006 | 0001 | '^(\\w+):$'
0007 | 0001 | 'new(\\w+)'
0008 | 0001 | '^(\\w+)\\([^;]'
0009 | 0001 | '^(\\w+)\\-\\-$'
0010 | 0001 | '(\\A|\\s)#(\\w+)'
0011 | 0001 | '^(\\w+\\.)+\\w+$'
0012 | 0001 | '^### SALT: (\\w+)'
0013 | 0001 | 'file format: (\\w+)'



cluster 21 stats:
nPatterns: 3.0
nProjects: 27
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 6.666666666666667
2: KLE|zero-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: QST|zero-or-one repetition | 1.0
5: CG|a capture group | 0.6666666666666666
6: LZY|as few reps as possible | 0.6666666666666666
7: OR|logical or | 0.3333333333333333


0000 | 0019 | '<[^>]*?>'
0001 | 0008 | '</?xsl:([^>]*)/?>?'
0002 | 0001 | '<(hr|br)[^>]*?/>'



cluster 22 stats:
nPatterns: 2.0
nProjects: 25
shortest: ^ *\n
Features:

1: LIT|a literal character | 2.5
2: KLE|zero-or-more repetition | 1.5
3: STR|start-of-line | 0.5


0000 | 0013 | '^ *\n'
0001 | 0012 | ' *, *'



cluster 23 stats:
nPatterns: 8.0
nProjects: 25
shortest: [ \t]
Features:

1: LIT|a literal character | 3.625
2: CCC|custom character class | 1.25
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 0.375
5: END|end-of-line | 0.25
6: ADD|one-or-more repetition | 0.125
7: CG|a capture group | 0.125
8: LKA|matching sequence follows | 0.125
9: LWB|at least n repetition | 0.125
10: NCCC|negated CCC | 0.125
11: NCG|group without capturing | 0.125
12: OPT|options wrapper | 0.125
13: RNG|chars within a range | 0.125


0000 | 0014 | '^[ \t]*$'
0001 | 0003 | '[ \t]+(?=\n)'
0002 | 0002 | u'^[ -~]*$'
0003 | 0002 | '[ \\t]*\\.[ \\t]*'
0004 | 0001 | '[ \t]'
0005 | 0001 | '[ \r\t]*\n[ \r\t]*'
0006 | 0001 | '[ \\t]*\\n([^\\r\\n])'
0007 | 0001 | '(?m)(?:^[ \\t]*\\n){1,}'



cluster 24 stats:
nPatterns: 10.0
nProjects: 25
shortest: ^[a-z]
Features:

1: LIT|a literal character | 3.3
2: CCC|custom character class | 1.1
3: ADD|one-or-more repetition | 0.7
4: RNG|chars within a range | 0.7
5: STR|start-of-line | 0.7
6: END|end-of-line | 0.6
7: DEC|any of: 0123456789 | 0.4
8: CG|a capture group | 0.2
9: KLE|zero-or-more repetition | 0.2
10: NCG|group without capturing | 0.1
11: WRD|[a-zA-Z0-9\_] | 0.1


0000 | 0011 | '^[\\d,]+$'
0001 | 0005 | '^[a-z]+$'
0002 | 0002 | '^/dev/[a-z]+$'
0003 | 0001 | '^[a-z]'
0004 | 0001 | '[a-z%]+$'
0005 | 0001 | '^[\\d.:]+$'
0006 | 0001 | '^\\$[\\w=]+$'
0007 | 0001 | "[a-z\\-' \n\t]"
0008 | 0001 | u"([a-z]+)([,']*)"
0009 | 0001 | '^[a-z]\\d(?:,\\d)*'



cluster 25 stats:
nPatterns: 7.0
nProjects: 23
shortest: @code{(.*?)}
Features:

1: LIT|a literal character | 11.142857142857142
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: CG|a capture group | 0.8571428571428571
5: LZY|as few reps as possible | 0.8571428571428571
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2857142857142857


0000 | 0009 | '@code{(.*?)}'
0001 | 0008 | 'name="(.*?)"'
0002 | 0003 | '<tchar=(.*?)>'
0003 | 0001 | '"title":"(.*?)",'
0004 | 0001 | '.*\\<use (.*?)\\>'
0005 | 0001 | '<pre><a name="foo-1">'
0006 | 0001 | '<xnat:Subject\\sID="(.*?)"\\s'



cluster 26 stats:
nPatterns: 10.0
nProjects: 23
shortest: [#][\dA-F]{3}
Features:

1: LIT|a literal character | 8.9
2: RNG|chars within a range | 2.9
3: CCC|custom character class | 1.5
4: CG|a capture group | 1.1
5: ADD|one-or-more repetition | 1.0
6: NCG|group without capturing | 0.5
7: QST|zero-or-one repetition | 0.5
8: OR|logical or | 0.4
9: DBB|$n\le x \le m$ repetition | 0.3
10: DEC|any of: 0123456789 | 0.3
11: ANY|any non-newline char | 0.2
12: KLE|zero-or-more repetition | 0.2
13: SNG|exactly n repetition | 0.2
14: WRD|[a-zA-Z0-9\_] | 0.2
15: END|end-of-line | 0.1
16: STR|start-of-line | 0.1
17: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1


0000 | 0006 | '&#(\\d+|[xX][0-9a-fA-F]+);'
0001 | 0004 | ' at 0x[0-9a-f]+'
0002 | 0004 | u'&(#?[xX]?(?:[0-9a-fA-F]+|\\w{1,8}));'
0003 | 0003 | '\\\\u([0-9a-fA-F]{4})'
0004 | 0003 | '\\\\([0-9a-fA-F]{1,6})\\s?'
0005 | 0003 | '&(?:#((?:\\d+)|(?:[xX][0-9a-fA-F]+));?|(\\w+);)'
0006 | 0001 | '[#][\\dA-F]{3}'
0007 | 0001 | '#[0-9a-fA-F]{3,6}'
0008 | 0001 | '(?:([0-9a-f]+):)?(.*)'
0009 | 0001 | '^([0-9a-fA-F]+) ([0-9a-fA-F]+)xx(.*)$'



cluster 27 stats:
nPatterns: 3.0
nProjects: 21
shortest: ^running .*
Features:

1: LIT|a literal character | 10.333333333333334
2: ANY|any non-newline char | 0.6666666666666666
3: KLE|zero-or-more repetition | 0.6666666666666666
4: STR|start-of-line | 0.3333333333333333


0000 | 0017 | '^running .*'
0001 | 0003 | 'unzip: exiting'
0002 | 0001 | '/testing/.*'



cluster 28 stats:
nPatterns: 3.0
nProjects: 21
shortest: ((^|\n)\s*)@
Features:

1: LIT|a literal character | 3.3333333333333335
2: KLE|zero-or-more repetition | 1.6666666666666667
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.6666666666666667
4: CG|a capture group | 1.3333333333333333
5: QST|zero-or-one repetition | 0.6666666666666666
6: OR|logical or | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0016 | '<(/?)\\s*i\\s*>'
0001 | 0003 | u'<(/?)\\s*i\\s*>'
0002 | 0002 | '((^|\\n)\\s*)@'



cluster 29 stats:
nPatterns: 3.0
nProjects: 21
shortest: \b(\d+)\.(\d+)
Features:

1: LIT|a literal character | 4.333333333333333
2: CG|a capture group | 3.6666666666666665
3: ADD|one-or-more repetition | 2.6666666666666665
4: DEC|any of: 0123456789 | 2.6666666666666665
5: QST|zero-or-one repetition | 0.6666666666666666
6: ANY|any non-newline char | 0.3333333333333333
7: KLE|zero-or-more repetition | 0.3333333333333333
8: WNW|word/non-word boundary | 0.3333333333333333


0000 | 0016 | 'macosx-(\\d+)\\.(\\d+)-(.*)'
0001 | 0004 | '(\\d+)\\.(\\d+)(\\.(\\d+))?(b(\\d+))?'
0002 | 0001 | '\\b(\\d+)\\.(\\d+)'



cluster 30 stats:
nPatterns: 2.0
nProjects: 20
shortest: /./(.+?)/season (\d{1,2})$
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 2.5
3: DBB|$n\le x \le m$ repetition | 2.0
4: DEC|any of: 0123456789 | 2.0
5: ANY|any non-newline char | 1.0
6: ADD|one-or-more repetition | 0.5
7: END|end-of-line | 0.5
8: LZY|as few reps as possible | 0.5


0000 | 0019 | '(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})'
0001 | 0001 | '/./(.+?)/season (\\d{1,2})$'



cluster 31 stats:
nPatterns: 4.0
nProjects: 19
shortest: \\$
Features:

1: LIT|a literal character | 2.0
2: END|end-of-line | 0.5
3: WNW|word/non-word boundary | 0.25


0000 | 0007 | '\\\\EOF\\b'
0001 | 0004 | '\\\\$'
0002 | 0002 | '\\\\`'
0003 | 0001 | '\\$$'



cluster 32 stats:
nPatterns: 2.0
nProjects: 19
shortest: (?:\s*).+?\.(?:\s+|$)
Features:

1: LIT|a literal character | 5.5
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.5
4: NCG|group without capturing | 1.5
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: OR|logical or | 1.0
8: ANY|any non-newline char | 0.5
9: LZY|as few reps as possible | 0.5
10: STR|start-of-line | 0.5


0000 | 0018 | '^\\s*blocktrans(?:\\s+|$)'
0001 | 0001 | u'(?:\\s*).+?\\.(?:\\s+|$)'



cluster 33 stats:
nPatterns: 4.0
nProjects: 18
shortest: ^-r\s*([^ ])?
Features:

1: KLE|zero-or-more repetition | 2.25
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.25
3: LIT|a literal character | 2.0
4: CG|a capture group | 1.0
5: NCCC|negated CCC | 0.75
6: QST|zero-or-one repetition | 0.5
7: STR|start-of-line | 0.5
8: WRD|[a-zA-Z0-9\_] | 0.5
9: ADD|one-or-more repetition | 0.25
10: CCC|custom character class | 0.25
11: DEC|any of: 0123456789 | 0.25
12: ENDZ|absolute end of string | 0.25


0000 | 0016 | '^-r\\s*([^ ])?'
0001 | 0001 | '<\\s*/?\\s*([^\\s>]+)'
0002 | 0001 | '\\s*([^\\s\\(\\)]*)\\s*'
0003 | 0001 | '\\A\\s*(\\w[\\w\\d]*)\\s*\\Z'



cluster 34 stats:
nPatterns: 2.0
nProjects: 17
shortest: hg\s*pull\s*(.*)\s*
Features:

1: LIT|a literal character | 6.5
2: KLE|zero-or-more repetition | 3.0
3: CG|a capture group | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.5
6: OR|logical or | 0.5


0000 | 0016 | 'hg\\s*pull\\s*(.*)\\s*'
0001 | 0001 | '(.*)\\s(ASC|DESC)(.*)'



cluster 35 stats:
nPatterns: 7.0
nProjects: 17
shortest:   http://
Features:

1: LIT|a literal character | 10.142857142857142
2: QST|zero-or-one repetition | 0.8571428571428571
3: ADD|one-or-more repetition | 0.5714285714285714
4: STR|start-of-line | 0.5714285714285714
5: ANY|any non-newline char | 0.42857142857142855
6: END|end-of-line | 0.2857142857142857
7: KLE|zero-or-more repetition | 0.2857142857142857
8: NCCC|negated CCC | 0.2857142857142857
9: CG|a capture group | 0.14285714285714285
10: NWSP|any non-whitespace | 0.14285714285714285


0000 | 0006 | '^https?://\\S+$'
0001 | 0004 | '^https?://github.com/[^/]+/?$'
0002 | 0002 | '  http://'
0003 | 0002 | 'https?://.*'
0004 | 0001 | '(/s/https?:)/+'
0005 | 0001 | '^https?:\\/\\/.+'
0006 | 0001 | '^file\\:\\/\\/[^\\?]*'



cluster 36 stats:
nPatterns: 5.0
nProjects: 16
shortest: [<&]
Features:

1: LIT|a literal character | 3.4
2: CCC|custom character class | 1.0
3: CG|a capture group | 0.4


0000 | 0009 | '[\n@{}&<>]'
0001 | 0004 | '[&<>"]'
0002 | 0001 | '[<&]'
0003 | 0001 | '([<>])'
0004 | 0001 | '([|&])'



cluster 37 stats:
nPatterns: 5.0
nProjects: 16
shortest: \]\]>
Features:

1: LIT|a literal character | 5.4
2: CCC|custom character class | 0.8
3: ADD|one-or-more repetition | 0.2


0000 | 0013 | '\\]\\]>'
0001 | 0001 | '[ _.\\[\\]]+'
0002 | 0001 | '["\\(\\) ,-]'
0003 | 0001 | '[\\[\\]\\(\\);]'
0004 | 0001 | u'[_.,\\[\\]\\(\\):]'



cluster 38 stats:
nPatterns: 9.0
nProjects: 16
shortest: .*\*$
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.3333333333333333
3: KLE|zero-or-more repetition | 1.2222222222222223
4: END|end-of-line | 0.5555555555555556
5: STR|start-of-line | 0.4444444444444444
6: LZY|as few reps as possible | 0.1111111111111111
7: QST|zero-or-one repetition | 0.1111111111111111


0000 | 0005 | '.*\\.__.*?__'
0001 | 0003 | '.*\\.zip'
0002 | 0002 | '.*\\*$'
0003 | 0002 | '^.*\\/'
0004 | 0001 | '^.*\\.xsd$'
0005 | 0001 | '^.*\\.zip$'
0006 | 0001 | '//.*\\r?\\n'
0007 | 0001 | '^.*\\.tar.bz2$'
0008 | 0001 | '.*ri\\/.*\\.ri$'



cluster 39 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^\d{11}$
Features:

1: DEC|any of: 0123456789 | 1.0
2: END|end-of-line | 1.0
3: SNG|exactly n repetition | 1.0
4: STR|start-of-line | 1.0


0000 | 0012 | '^\\d{11}$'
0001 | 0003 | u'^\\d{11}$'



cluster 40 stats:
nPatterns: 2.0
nProjects: 15
shortest: (?:(\w+)=)?(.+)
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.0
4: LIT|a literal character | 1.0
5: NCG|group without capturing | 1.0
6: QST|zero-or-one repetition | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0012 | '(?:(\\w+)=)?(.+)'
0001 | 0003 | u'(?:(\\w+)=)?(.+)'



cluster 41 stats:
nPatterns: 4.0
nProjects: 15
shortest: foo
Features:

1: LIT|a literal character | 4.0
2: END|end-of-line | 0.25
3: STR|start-of-line | 0.25


0000 | 0010 | 'foo'
0001 | 0003 | '^the '
0002 | 0001 | 'ooth$'
0003 | 0001 | '\\+vot\\+'



cluster 42 stats:
nPatterns: 9.0
nProjects: 14
shortest: p=(\d+)
Features:

1: LIT|a literal character | 4.111111111111111
2: CG|a capture group | 1.5555555555555556
3: ADD|one-or-more repetition | 1.3333333333333333
4: DEC|any of: 0123456789 | 1.2222222222222223
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4444444444444444
6: KLE|zero-or-more repetition | 0.3333333333333333
7: ANY|any non-newline char | 0.2222222222222222
8: END|end-of-line | 0.2222222222222222
9: STR|start-of-line | 0.2222222222222222
10: NDEC|any non-decimal | 0.1111111111111111
11: SNG|exactly n repetition | 0.1111111111111111
12: WRD|[a-zA-Z0-9\_] | 0.1111111111111111


0000 | 0005 | '(\\d+)bit'
0001 | 0003 | '(-)(\\d+)$'
0002 | 0001 | 'p=(\\d+)'
0003 | 0001 | '^(\\d+)\\s*$'
0004 | 0001 | '^nic\\.(\\d+)'
0005 | 0001 | '(\\d+)\\((\\d+)\\)'
0006 | 0001 | '(\\d+)\\s(\\D+)\\s(\\d{4})'
0007 | 0001 | '.*clock (\\d+)\\s(\\w+).*\\n'
0008 | 0001 | 'nic\\.(\\d+)\\.mac_address\\.0'



cluster 43 stats:
nPatterns: 2.0
nProjects: 13
shortest: test4
Features:

1: LIT|a literal character | 7.5


0000 | 0011 | '/ParamTest'
0001 | 0002 | 'test4'



cluster 44 stats:
nPatterns: 4.0
nProjects: 13
shortest: [ \n]*{
Features:

1: LIT|a literal character | 3.25
2: CCC|custom character class | 0.75
3: KLE|zero-or-more repetition | 0.75
4: ADD|one-or-more repetition | 0.25
5: NCCC|negated CCC | 0.25
6: VWSP|matches U+000B | 0.25


0000 | 0007 | '[ \n]*{'
0001 | 0004 | '%[^\\r\\n\\v]*'
0002 | 0001 | '[\r\n]*'
0003 | 0001 | '[   \\r\\n]+'



cluster 45 stats:
nPatterns: 6.0
nProjects: 13
shortest: dev$
Features:

1: LIT|a literal character | 5.666666666666667
2: STR|start-of-line | 0.3333333333333333
3: ADD|one-or-more repetition | 0.16666666666666666
4: END|end-of-line | 0.16666666666666666
5: NWSP|any non-whitespace | 0.16666666666666666


0000 | 0005 | 'dev$'
0001 | 0003 | '^/dev/'
0002 | 0002 | 'default'
0003 | 0002 | '/dev/vd\\S+'
0004 | 0001 | '^nodev'
0005 | 0001 | 'no EDMs'



cluster 46 stats:
nPatterns: 4.0
nProjects: 13
shortest: .*\?ptr=(.*)$
Features:

1: LIT|a literal character | 7.25
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.75
4: CG|a capture group | 1.5
5: END|end-of-line | 1.0
6: ADD|one-or-more repetition | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
8: STR|start-of-line | 0.25
9: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0007 | '\\s*-e\\s+.*#egg=(.*)$'
0001 | 0004 | '^(CONFIG_\\w+)=(.*)$'
0002 | 0001 | '.*\\?ptr=(.*)$'
0003 | 0001 | '(.*)callsign\\=(.*)$'



cluster 47 stats:
nPatterns: 5.0
nProjects: 13
shortest: (?<!\\),
Features:

1: LIT|a literal character | 2.8
2: NLKB|sequence doesn't precede | 1.0
3: CG|a capture group | 0.4
4: KLE|zero-or-more repetition | 0.2
5: NLKA|sequence doesn't follow  | 0.2


0000 | 0005 | '(?<!\\\\),'
0001 | 0004 | u'(?<!%)%s'
0002 | 0004 | '((?<!\\\\)(\\\\\\\\)*)\\.'
0003 | 0001 | '(?<!\\\\)\\|'
0004 | 0001 | '(?<!\\|)\\|(?!\\|)'



cluster 48 stats:
nPatterns: 7.0
nProjects: 13
shortest: (\d)
Features:

1: CG|a capture group | 1.2857142857142858
2: DEC|any of: 0123456789 | 1.2857142857142858
3: LIT|a literal character | 1.2857142857142858
4: SNG|exactly n repetition | 0.8571428571428571
5: OR|logical or | 0.2857142857142857
6: ADD|one-or-more repetition | 0.14285714285714285
7: END|end-of-line | 0.14285714285714285
8: QST|zero-or-one repetition | 0.14285714285714285
9: STR|start-of-line | 0.14285714285714285


0000 | 0003 | '(\\d)'
0001 | 0003 | u'^(\\d{3})-(\\d{3})-(\\d{3})$'
0002 | 0002 | '(\\d{4})'
0003 | 0002 | '(iex|\\.{3})> '
0004 | 0001 | '(\\d{3})'
0005 | 0001 | '(\\d\\d?)'
0006 | 0001 | '(\\d|\\.)+'



cluster 49 stats:
nPatterns: 2.0
nProjects: 13
shortest: (?P<option>[^:=\s][^:=]*)\s*(?P<vi>[:=])\s*(?P<value>.*)$
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 4.0
3: PNG|named capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
5: NCCC|negated CCC | 2.0
6: ANY|any non-newline char | 1.0
7: CCC|custom character class | 1.0
8: END|end-of-line | 1.0
9: NCG|group without capturing | 0.5
10: QST|zero-or-one repetition | 0.5


0000 | 0013 | '(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'
0001 | 0003 | '(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$'



cluster 50 stats:
nPatterns: 1.0
nProjects: 12
shortest: (?m)^\.
Features:

1: LIT|a literal character | 1.0
2: OPT|options wrapper | 1.0
3: STR|start-of-line | 1.0


0000 | 0012 | '(?m)^\\.'



cluster 51 stats:
nPatterns: 4.0
nProjects: 12
shortest: ^$
Features:

1: LIT|a literal character | 1.0
2: END|end-of-line | 0.75
3: STR|start-of-line | 0.75


0000 | 0007 | '^$'
0001 | 0001 | ' $'
0002 | 0001 | '^  '
0003 | 0001 | '^!$'



cluster 52 stats:
nPatterns: 2.0
nProjects: 11
shortest: \w
Features:

1: WRD|[a-zA-Z0-9\_] | 1.0
2: LIT|a literal character | 0.5


0000 | 0010 | '\\w'
0001 | 0001 | '<\\w'



cluster 53 stats:
nPatterns: 4.0
nProjects: 11
shortest: -(?=-)
Features:

1: LIT|a literal character | 2.75
2: NLKA|sequence doesn't follow  | 0.5
3: ADD|one-or-more repetition | 0.25
4: ANY|any non-newline char | 0.25
5: CG|a capture group | 0.25
6: LKA|matching sequence follows | 0.25


0000 | 0008 | '<\\?(?!xml)'
0001 | 0001 | u'-(?=-)'
0002 | 0001 | '>(?!\\})'
0003 | 0001 | '(\\{.+\\})'



cluster 54 stats:
nPatterns: 2.0
nProjects: 10
shortest: (a(?!\s[abc]))
Features:

1: LIT|a literal character | 2.5
2: CG|a capture group | 1.5
3: NDEC|any non-decimal | 1.0
4: NLKA|sequence doesn't follow  | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: CCC|custom character class | 0.5


0000 | 0008 | '(a(?!\\s[abc]))'
0001 | 0002 | '(\\D)\\.(?!\\s)(\\D)'



cluster 55 stats:
nPatterns: 3.0
nProjects: 10
shortest: ^[0-9]{2}$
Features:

1: LIT|a literal character | 2.6666666666666665
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: RNG|chars within a range | 1.0
5: SNG|exactly n repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0007 | '^py[0-9]{2}$'
0001 | 0002 | '^[0-9]{2}$'
0002 | 0002 | '^[0-9]{4}$'



cluster 56 stats:
nPatterns: 5.0
nProjects: 10
shortest: ^6\.
Features:

1: LIT|a literal character | 2.2
2: ADD|one-or-more repetition | 0.8
3: NWSP|any non-whitespace | 0.8
4: END|end-of-line | 0.4
5: STR|start-of-line | 0.4
6: KLE|zero-or-more repetition | 0.2


0000 | 0004 | u'^\\S+@\\S+\\.\\S+$'
0001 | 0003 | '^6\\.'
0002 | 0001 | '2\\.3'
0003 | 0001 | '\\.0*$'
0004 | 0001 | '\\S+\\.a'



cluster 57 stats:
nPatterns: 3.0
nProjects: 10
shortest: #include\s+<([^>]+)>
Features:

1: LIT|a literal character | 14.666666666666666
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 0.6666666666666666
4: CG|a capture group | 0.6666666666666666
5: KLE|zero-or-more repetition | 0.6666666666666666
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
7: LZY|as few reps as possible | 0.3333333333333333
8: NCCC|negated CCC | 0.3333333333333333
9: STR|start-of-line | 0.3333333333333333


0000 | 0008 | '\\{include\\s+file=.*?\\}'
0001 | 0001 | '#include\\s+<([^>]+)>'
0002 | 0001 | '^#include "(Support/.*)"'



cluster 58 stats:
nPatterns: 6.0
nProjects: 10
shortest: ^[^\.]+
Features:

1: LIT|a literal character | 1.8333333333333333
2: STR|start-of-line | 1.0
3: NCCC|negated CCC | 0.8333333333333334
4: ADD|one-or-more repetition | 0.6666666666666666
5: CG|a capture group | 0.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: OR|logical or | 0.16666666666666666


0000 | 0005 | '(^[^\\.]+)\\.'
0001 | 0001 | '^[^\\.]+'
0002 | 0001 | '([^\\{])<'
0003 | 0001 | '^[^\\$]+$'
0004 | 0001 | '^[^\\.]+\\.'
0005 | 0001 | '^\\.|~$|^\\$'



cluster 59 stats:
nPatterns: 4.0
nProjects: 10
shortest: ([\w\-]+\s*:)(?!:)\s*
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.75
3: CCC|custom character class | 1.75
4: WRD|[a-zA-Z0-9\_] | 1.75
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 0.75
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
8: ANY|any non-newline char | 0.25
9: END|end-of-line | 0.25
10: LZY|as few reps as possible | 0.25
11: NLKA|sequence doesn't follow  | 0.25
12: QST|zero-or-one repetition | 0.25
13: STR|start-of-line | 0.25


0000 | 0005 | '([\\w\\-]+\\s*:)(?!:)\\s*'
0001 | 0003 | 'From .*?([\\w.]+@[\\w.]+)'
0002 | 0001 | '([\\w\\-\\.]+@[\\w\\-\\.]+)'
0003 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'



cluster 60 stats:
nPatterns: 1.0
nProjects: 9
shortest: ([a-z0-9])([A-Z])
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0


0000 | 0009 | '([a-z0-9])([A-Z])'



cluster 61 stats:
nPatterns: 2.0
nProjects: 9
shortest: ({)|(})
Features:

1: CG|a capture group | 2.0
2: LIT|a literal character | 2.0
3: OR|logical or | 1.0


0000 | 0009 | '({)|(})'
0001 | 0008 | '(a|(b))'



cluster 62 stats:
nPatterns: 2.0
nProjects: 9
shortest: ([\t ]+)
Features:

1: LIT|a literal character | 3.5
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 0.5


0000 | 0007 | '([\\t ]+)'
0001 | 0003 | '[-/.: ]+'



cluster 63 stats:
nPatterns: 3.0
nProjects: 9
shortest: [^\w]
Features:

1: LIT|a literal character | 1.0
2: NCCC|negated CCC | 1.0
3: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
4: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0005 | '[^\\w]'
0001 | 0001 | "[^<']*"
0002 | 0001 | '[^\\w\\-]'



cluster 64 stats:
nPatterns: 2.0
nProjects: 9
shortest: (?i)python.exe
Features:

1: LIT|a literal character | 5.5
2: OPT|options wrapper | 1.0
3: ANY|any non-newline char | 0.5
4: CCC|custom character class | 0.5
5: CG|a capture group | 0.5
6: RNG|chars within a range | 0.5
7: SNG|exactly n repetition | 0.5


0000 | 0007 | '(?i)python.exe'
0001 | 0002 | '(?i)([a-z]{2})'



cluster 65 stats:
nPatterns: 4.0
nProjects: 9
shortest: \\\\
Features:

1: LIT|a literal character | 2.75
2: OR|logical or | 0.75
3: CG|a capture group | 0.25
4: END|end-of-line | 0.25
5: KLE|zero-or-more repetition | 0.25


0000 | 0007 | '\\\\\\\\'
0001 | 0001 | '\\n|\\\\'
0002 | 0001 | '\\. *(\n|$)'
0003 | 0001 | '\\\\n|\\\\\\\\'



cluster 66 stats:
nPatterns: 4.0
nProjects: 9
shortest: subject=
Features:

1: LIT|a literal character | 9.75
2: END|end-of-line | 0.25
3: STR|start-of-line | 0.25


0000 | 0006 | '^Expected$'
0001 | 0001 | 'subject='
0002 | 0001 | 'subsection{'
0003 | 0001 | 'bill-actions'



cluster 67 stats:
nPatterns: 5.0
nProjects: 9
shortest: (.)([A-Z])
Features:

1: LIT|a literal character | 3.4
2: CCC|custom character class | 1.2
3: RNG|chars within a range | 1.2
4: CG|a capture group | 0.8
5: SNG|exactly n repetition | 0.6
6: ADD|one-or-more repetition | 0.4
7: STR|start-of-line | 0.4
8: WRD|[a-zA-Z0-9\_] | 0.4
9: ANY|any non-newline char | 0.2
10: END|end-of-line | 0.2
11: PNG|named capture group | 0.2


0000 | 0003 | u'^[A-Z]{,3}$'
0001 | 0003 | '([A-Z][a-z]+)'
0002 | 0001 | '(.)([A-Z])'
0003 | 0001 | '^\\*(?P<table>[a-z]+)'
0004 | 0001 | '([A-Z]{2}\\w{8})\\w{24}'



cluster 68 stats:
nPatterns: 7.0
nProjects: 9
shortest: .*_([vV]\d+\.\d+)$
Features:

1: LIT|a literal character | 7.428571428571429
2: ADD|one-or-more repetition | 2.2857142857142856
3: DEC|any of: 0123456789 | 2.142857142857143
4: CG|a capture group | 1.2857142857142858
5: QST|zero-or-one repetition | 0.7142857142857143
6: ANY|any non-newline char | 0.42857142857142855
7: END|end-of-line | 0.42857142857142855
8: KLE|zero-or-more repetition | 0.42857142857142855
9: CCC|custom character class | 0.2857142857142857
10: STR|start-of-line | 0.2857142857142857
11: OR|logical or | 0.14285714285714285
12: RNG|chars within a range | 0.14285714285714285
13: WRD|[a-zA-Z0-9\_] | 0.14285714285714285
14: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0004 | '.*_([vV]\\d+\\.\\d+)$'
0001 | 0004 | '.*/.*_V(\\d+\\.\\d+)/mongo'
0002 | 0001 | '^\\d+(-\\d+)?|\\.\\w+$'
0003 | 0001 | '(\\d+\\.\\d+(\\.\\d+)?)'
0004 | 0001 | '^core = "?(\\d+\\.x)"?$'
0005 | 0001 | '([a-z]\\d?)=\\s+(\\d+\\.\\d+)'
0006 | 0001 | 'WordNet (\\d+\\.\\d+) Copyright'



cluster 69 stats:
nPatterns: 2.0
nProjects: 8
shortest: b*
Features:

1: LIT|a literal character | 1.0
2: ADD|one-or-more repetition | 0.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0008 | 'b*'
0001 | 0008 | 'b+'



cluster 70 stats:
nPatterns: 2.0
nProjects: 8
shortest: <!--|-->
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 0.5
3: KLE|zero-or-more repetition | 0.5
4: LZY|as few reps as possible | 0.5
5: OPT|options wrapper | 0.5
6: OR|logical or | 0.5


0000 | 0006 | '<!--|-->'
0001 | 0002 | '(?s)<!--.*?-->'



cluster 71 stats:
nPatterns: 2.0
nProjects: 8
shortest: \([^)]*\)
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0


0000 | 0006 | '\\([^)]*\\)'
0001 | 0002 | '\\(live[^\\)]*\\)'



cluster 72 stats:
nPatterns: 2.0
nProjects: 8
shortest: (\S+):\s*(.*)
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 2.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.5
5: ADD|one-or-more repetition | 1.0
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 0.5
8: LZY|as few reps as possible | 0.5
9: NWSP|any non-whitespace | 0.5
10: STR|start-of-line | 0.5


0000 | 0007 | '^\\s+:toctree:\\s*(.*?)\\s*$'
0001 | 0001 | '(\\S+):\\s*(.*)'



cluster 73 stats:
nPatterns: 3.0
nProjects: 8
shortest: ^#[0-9A-Fa-f]{6}$
Features:

1: LIT|a literal character | 6.333333333333333
2: RNG|chars within a range | 2.6666666666666665
3: CCC|custom character class | 1.0
4: END|end-of-line | 0.6666666666666666
5: SNG|exactly n repetition | 0.6666666666666666
6: STR|start-of-line | 0.6666666666666666
7: DBB|$n\le x \le m$ repetition | 0.3333333333333333
8: NLKA|sequence doesn't follow  | 0.3333333333333333


0000 | 0004 | '%(?![0-9A-Fa-f]{2})'
0001 | 0003 | '^#[0-9A-Fa-f]{6}$'
0002 | 0001 | '^[0-9A-Z\\.]{1,10}$'



cluster 74 stats:
nPatterns: 4.0
nProjects: 8
shortest: __version__ = '([^']+)'
Features:

1: LIT|a literal character | 20.0
2: CG|a capture group | 1.0
3: ADD|one-or-more repetition | 0.5
4: ANY|any non-newline char | 0.5
5: KLE|zero-or-more repetition | 0.5
6: LZY|as few reps as possible | 0.5
7: DEC|any of: 0123456789 | 0.25
8: NCCC|negated CCC | 0.25


0000 | 0004 | "__version__ = '([^']+)'"
0001 | 0002 | 'virtualenv_version = "(.*?)"'
0002 | 0001 | '__version__ = (\\(.*?\\))'
0003 | 0001 | 'wx_major_version_number=(\\d+)'



cluster 75 stats:
nPatterns: 2.0
nProjects: 8
shortest: ^\s+.*context\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\s*
Features:

1: LIT|a literal character | 18.5
2: KLE|zero-or-more repetition | 5.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: LZY|as few reps as possible | 3.0
5: NCCC|negated CCC | 3.0
6: NCG|group without capturing | 3.0
7: ADD|one-or-more repetition | 2.5
8: CG|a capture group | 2.0
9: OR|logical or | 1.5
10: ANY|any non-newline char | 1.0
11: STR|start-of-line | 1.0
12: QST|zero-or-one repetition | 0.5


0000 | 0004 | '^\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\\s*'
0001 | 0004 | u'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\\s*'



cluster 76 stats:
nPatterns: 1.0
nProjects: 7
shortest: (\s)
Features:

1: CG|a capture group | 1.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0007 | '(\\s)'



cluster 77 stats:
nPatterns: 2.0
nProjects: 7
shortest: ^\W+
Features:

1: STR|start-of-line | 1.0
2: ADD|one-or-more repetition | 0.5
3: KLE|zero-or-more repetition | 0.5
4: NDEC|any non-decimal | 0.5
5: NWRD|non-word chars | 0.5


0000 | 0006 | '^\\W+'
0001 | 0001 | '^\\D*'



cluster 78 stats:
nPatterns: 2.0
nProjects: 7
shortest: ^\s*([A-Z_]+): (\d+)
Features:

1: LIT|a literal character | 10.5
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: DEC|any of: 0123456789 | 1.0
5: CCC|custom character class | 0.5
6: KLE|zero-or-more repetition | 0.5
7: RNG|chars within a range | 0.5
8: STR|start-of-line | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0004 | 'Content-Length: (\\d+)'
0001 | 0003 | '^\\s*([A-Z_]+): (\\d+)'



cluster 79 stats:
nPatterns: 3.0
nProjects: 7
shortest: 10\^\{(.+)\}
Features:

1: LIT|a literal character | 4.666666666666667
2: CG|a capture group | 1.3333333333333333
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 0.3333333333333333
6: OR|logical or | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0004 | '10\\^\\{(.+)\\}'
0001 | 0002 | '^(Q|QQ)\\<(.+)\\>$'
0002 | 0001 | '\\[\\[(.+)\\]\\]'



cluster 80 stats:
nPatterns: 3.0
nProjects: 7
shortest: Ran (\d+) tests
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: ANY|any non-newline char | 0.6666666666666666
5: CG|a capture group | 0.6666666666666666
6: KLE|zero-or-more repetition | 0.6666666666666666
7: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0004 | 'Ran (\\d+) tests'
0001 | 0002 | '\\[.*\\d+ tests.*\\n'
0002 | 0001 | '(\\d+) leaks? excluded'



cluster 81 stats:
nPatterns: 3.0
nProjects: 7
shortest: ^summary
Features:

1: LIT|a literal character | 12.333333333333334
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.6666666666666667
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0
5: ADD|one-or-more repetition | 0.6666666666666666


0000 | 0005 | '^\\.\\.\\s+autosummary::\\s*'
0001 | 0001 | '^summary'
0002 | 0001 | '^\\s*\\.\\.\\s+autosummary::\\s*'



cluster 82 stats:
nPatterns: 4.0
nProjects: 7
shortest: sources.redhat.com
Features:

1: LIT|a literal character | 15.0
2: ANY|any non-newline char | 1.25
3: ADD|one-or-more repetition | 0.5
4: CCC|custom character class | 0.5
5: KLE|zero-or-more repetition | 0.5
6: RNG|chars within a range | 0.5
7: CG|a capture group | 0.25
8: WNW|word/non-word boundary | 0.25


0000 | 0003 | 'sources.redhat.com'
0001 | 0002 | 'clocksource=[a-z\\- ]+'
0002 | 0001 | '.*film source: 29.97.*'
0003 | 0001 | '\\bsource\\.([a-z+\\-]+)'



cluster 83 stats:
nPatterns: 4.0
nProjects: 7
shortest: <(.*?)(?<!-)>
Features:

1: LIT|a literal character | 5.5
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: CG|a capture group | 1.25
5: LZY|as few reps as possible | 1.25
6: NLKB|sequence doesn't precede | 1.0
7: QST|zero-or-one repetition | 0.75
8: OR|logical or | 0.5
9: DEC|any of: 0123456789 | 0.25
10: END|end-of-line | 0.25
11: NCG|group without capturing | 0.25
12: STR|start-of-line | 0.25


0000 | 0003 | '^(.*?)(?:-dev|-\\d.*)$'
0001 | 0002 | "'(.*?)(?<!\\\\)',?"
0002 | 0001 | '<(.*?)(?<!-)>'
0003 | 0001 | 'r?u?\\\'(.*?)(?<!\\\\)\\\'|"(.*?)(?<!\\\\)"'



cluster 84 stats:
nPatterns: 6.0
nProjects: 7
shortest: baseUrl>([^<]+)
Features:

1: LIT|a literal character | 13.666666666666666
2: CG|a capture group | 1.1666666666666667
3: NCCC|negated CCC | 1.0
4: ADD|one-or-more repetition | 0.6666666666666666
5: KLE|zero-or-more repetition | 0.5
6: DEC|any of: 0123456789 | 0.16666666666666666


0000 | 0002 | '<id>([^<]+)</id>'
0001 | 0001 | 'baseUrl>([^<]+)'
0002 | 0001 | '<Term>([^<]+)</Term>'
0003 | 0001 | 'name=\\"q\\">([^<]*)'
0004 | 0001 | 'DataText4>([^<]*)</td>'
0005 | 0001 | '<sync start="(\\d+)">([^<]*)</sync>'



cluster 85 stats:
nPatterns: 2.0
nProjects: 6
shortest: BOOST
Features:

1: LIT|a literal character | 5.0
2: END|end-of-line | 0.5


0000 | 0005 | 'REBOL$'
0001 | 0001 | 'BOOST'



cluster 86 stats:
nPatterns: 4.0
nProjects: 6
shortest: ^%
Features:

1: LIT|a literal character | 2.25
2: STR|start-of-line | 1.0


0000 | 0004 | '^%'
0001 | 0001 | '^G'
0002 | 0001 | '^p'
0003 | 0001 | '^GROUP:'



cluster 87 stats:
nPatterns: 2.0
nProjects: 6
shortest: ^(\s*lib.*)+
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: STR|start-of-line | 1.0
7: ANY|any non-newline char | 0.5
8: NCCC|negated CCC | 0.5


0000 | 0005 | '^(\\s*<[^>]+>\\s*)'
0001 | 0001 | '^(\\s*lib.*)+'



cluster 88 stats:
nPatterns: 2.0
nProjects: 6
shortest: ^(-?\d+)(\d{3})
Features:

1: LIT|a literal character | 3.5
2: CG|a capture group | 2.5
3: DEC|any of: 0123456789 | 2.0
4: ADD|one-or-more repetition | 1.5
5: QST|zero-or-one repetition | 1.0
6: CCC|custom character class | 0.5
7: OR|logical or | 0.5
8: SNG|exactly n repetition | 0.5
9: STR|start-of-line | 0.5


0000 | 0004 | u'^(-?\\d+)(\\d{3})'
0001 | 0002 | '([idel])|(\\d+):|(-?\\d+)'



cluster 89 stats:
nPatterns: 3.0
nProjects: 6
shortest: \.models$
Features:

1: LIT|a literal character | 10.333333333333334
2: END|end-of-line | 0.6666666666666666
3: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0003 | u'\\.models$'
0001 | 0002 | 'request\\.module'
0002 | 0001 | u'_h?480p\\.mov$'



cluster 90 stats:
nPatterns: 3.0
nProjects: 6
shortest: \A\s\s\S+,
Features:

1: LIT|a literal character | 4.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.3333333333333333
3: NWSP|any non-whitespace | 1.0
4: CCC|custom character class | 0.6666666666666666
5: KLE|zero-or-more repetition | 0.6666666666666666
6: ADD|one-or-more repetition | 0.3333333333333333
7: LZY|as few reps as possible | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0003 | '\\A\\s\\s\\S+,'
0001 | 0002 | '\\/\\*[\\s\\S]*?\\*\\/'
0002 | 0001 | '</TEXT>[\\s\\S]*'



cluster 91 stats:
nPatterns: 2.0
nProjects: 6
shortest: ^[a-z0-9][a-z0-9_]{2,}$
Features:

1: LIT|a literal character | 13.0
2: RNG|chars within a range | 6.0
3: CCC|custom character class | 3.0
4: KLE|zero-or-more repetition | 1.5
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: CG|a capture group | 0.5
8: LWB|at least n repetition | 0.5


0000 | 0004 | '^[A-Z0-9][a-z0-9]*(-[A-Z0-9][a-z0-9]*)*$'
0001 | 0003 | '^[a-z0-9][a-z0-9_]{2,}$'



cluster 92 stats:
nPatterns: 5.0
nProjects: 6
shortest: Resigned
Features:

1: LIT|a literal character | 10.2
2: ANY|any non-newline char | 0.2
3: KLE|zero-or-more repetition | 0.2


0000 | 0002 | 'Resigned'
0001 | 0001 | 'Resolved'
0002 | 0001 | 'Postponed'
0003 | 0001 | 'Response:'
0004 | 0001 | 'smallint.* unsigned'



cluster 93 stats:
nPatterns: 4.0
nProjects: 6
shortest: ^JSC::UString$
Features:

1: LIT|a literal character | 14.25
2: END|end-of-line | 0.5
3: STR|start-of-line | 0.5
4: ADD|one-or-more repetition | 0.25
5: ANY|any non-newline char | 0.25


0000 | 0004 | 'searchplugins\\/.+\\.xml'
0001 | 0001 | '^JSC::UString$'
0002 | 0001 | '^WTF::CString$'
0003 | 0001 | '%search_string%'



cluster 94 stats:
nPatterns: 3.0
nProjects: 6
shortest: __(\w+?)__\s*=\s*(.*)
Features:

1: LIT|a literal character | 9.666666666666666
2: KLE|zero-or-more repetition | 2.6666666666666665
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.3333333333333333
5: ANY|any non-newline char | 0.6666666666666666
6: ADD|one-or-more repetition | 0.3333333333333333
7: DEC|any of: 0123456789 | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333
9: LZY|as few reps as possible | 0.3333333333333333
10: SNG|exactly n repetition | 0.3333333333333333
11: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0003 | '__(\\w+?)__\\s*=\\s*(.*)'
0001 | 0002 | 'BuildID\\s*=\\s*"(\\d{10})"'
0002 | 0001 | 'Set TRANSCOMM\\s*=\\s*(.*)$'



cluster 95 stats:
nPatterns: 5.0
nProjects: 6
shortest: (.*)\[(.*)\](.*)
Features:

1: LIT|a literal character | 4.4
2: CG|a capture group | 2.4
3: KLE|zero-or-more repetition | 2.4
4: ANY|any non-newline char | 2.2
5: END|end-of-line | 0.2
6: QST|zero-or-one repetition | 0.2
7: STR|start-of-line | 0.2
8: WRD|[a-zA-Z0-9\_] | 0.2
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0003 | '(.*)\\[(.*)\\](.*)'
0001 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0002 | 0001 | 'localtime=(.*)\t'
0003 | 0001 | '\\((.*)/(.*)/(.*)\\)'
0004 | 0001 | '\n?(\\w*)\\:\\s(.*)\n'



cluster 96 stats:
nPatterns: 5.0
nProjects: 6
shortest: \sfile:\s+"([^"]*)"
Features:

1: LIT|a literal character | 15.2
2: CG|a capture group | 1.2
3: KLE|zero-or-more repetition | 1.2
4: NCCC|negated CCC | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4
6: ADD|one-or-more repetition | 0.2
7: DEC|any of: 0123456789 | 0.2
8: WNW|word/non-word boundary | 0.2


0000 | 0003 | '\\sfile:\\s+"([^"]*)"'
0001 | 0001 | ' *\\bservicefp="([^"]*)"'
0002 | 0001 | '<hostname name="([^"]*)"'
0003 | 0001 | 'L"\\\\0(\\d)" L"([^"]*)"'
0004 | 0001 | 'id="__VIEWSTATE" value="([^"]*)"'



cluster 97 stats:
nPatterns: 2.0
nProjects: 5
shortest: '
Features:

1: LIT|a literal character | 1.5


0000 | 0003 | "\\\\'"
0001 | 0002 | u"'"



cluster 98 stats:
nPatterns: 1.0
nProjects: 5
shortest: ^[\r\n]*(\s*)
Features:

1: KLE|zero-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0005 | '^[\r\n]*(\\s*)'



cluster 99 stats:
nPatterns: 2.0
nProjects: 5
shortest: digest 
Features:

1: LIT|a literal character | 7.0


0000 | 0004 | 'digest '
0001 | 0001 | 'Village'



cluster 100 stats:
nPatterns: 2.0
nProjects: 5
shortest: ^'(.*)'$
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: CG|a capture group | 1.0
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0005 | "^'(.*)'$"
0001 | 0001 | "{'(.*':.*)'}"



cluster 101 stats:
nPatterns: 2.0
nProjects: 5
shortest: (.+)=(.+)
Features:

1: ADD|one-or-more repetition | 2.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: LIT|a literal character | 1.0
5: END|end-of-line | 0.5
6: LZY|as few reps as possible | 0.5
7: STR|start-of-line | 0.5


0000 | 0003 | '(.+)=(.+)'
0001 | 0002 | '^(.+?)_(.+)$'



cluster 102 stats:
nPatterns: 3.0
nProjects: 5
shortest: \x1b\[\d+m
Features:

1: LIT|a literal character | 4.333333333333333
2: ADD|one-or-more repetition | 0.6666666666666666
3: CCC|custom character class | 0.3333333333333333
4: DEC|any of: 0123456789 | 0.3333333333333333
5: KLE|zero-or-more repetition | 0.3333333333333333
6: NCCC|negated CCC | 0.3333333333333333
7: RNG|chars within a range | 0.3333333333333333


0000 | 0003 | '\\x1b\\[[^h]+h'
0001 | 0001 | '\x1b\\[\\d+m'
0002 | 0001 | '\x1b\\[[0-9;]*m'



cluster 103 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^[\w\-\_]+$
Features:

1: LIT|a literal character | 3.3333333333333335
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0
6: KLE|zero-or-more repetition | 0.6666666666666666
7: ADD|one-or-more repetition | 0.3333333333333333


0000 | 0003 | '^[\\w\\.\\-\\/]*$'
0001 | 0001 | '^[\\w,./=-]*$'
0002 | 0001 | '^[\\w\\-\\_]+$'



cluster 104 stats:
nPatterns: 2.0
nProjects: 5
shortest: rFAILED.*\(failures=(\d+)\)
Features:

1: LIT|a literal character | 19.0
2: ADD|one-or-more repetition | 1.5
3: ANY|any non-newline char | 1.5
4: DEC|any of: 0123456789 | 1.5
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 0.5


0000 | 0004 | '\\d+ GNU.sparse.numbytes=(\\d+)\\n'
0001 | 0001 | 'rFAILED.*\\(failures=(\\d+)\\)'



cluster 105 stats:
nPatterns: 3.0
nProjects: 5
shortest: \ndescription:\n
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 0.6666666666666666
3: KLE|zero-or-more repetition | 0.6666666666666666
4: LZY|as few reps as possible | 0.6666666666666666


0000 | 0002 | '<noscript>.*?</noscript>'
0001 | 0001 | '\ndescription:\n'
0002 | 0001 | '<script.*?</script>'



cluster 106 stats:
nPatterns: 4.0
nProjects: 5
shortest: [^\w\-]+
Features:

1: LIT|a literal character | 3.5
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 0.75
4: WRD|[a-zA-Z0-9\_] | 0.75
5: CCC|custom character class | 0.25
6: RNG|chars within a range | 0.25
7: STR|start-of-line | 0.25


0000 | 0002 | '[^\\w\\-\\.\\/]+'
0001 | 0001 | '[^\\w\\-]+'
0002 | 0001 | '^lib[^-]+-'
0003 | 0001 | '[\\w0-9\\.\\_\\-]+'



cluster 107 stats:
nPatterns: 4.0
nProjects: 5
shortest: (^[A-Za-z\' ]+$)
Features:

1: LIT|a literal character | 8.5
2: RNG|chars within a range | 2.75
3: CCC|custom character class | 1.5
4: ADD|one-or-more repetition | 0.75
5: CG|a capture group | 0.75
6: KLE|zero-or-more repetition | 0.75
7: ANY|any non-newline char | 0.5
8: END|end-of-line | 0.5
9: STR|start-of-line | 0.5


0000 | 0002 | '[A-Za-z_][A-Za-z0-9_]*$'
0001 | 0001 | "(^[A-Za-z\\' ]+$)"
0002 | 0001 | '^[A-Za-z0-9_]+\\('
0003 | 0001 | '(.*)-[0-9_]+(.*[.]lib)'



cluster 108 stats:
nPatterns: 4.0
nProjects: 5
shortest: [^a-fA-F\d]
Features:

1: LIT|a literal character | 9.25
2: RNG|chars within a range | 4.25
3: CCC|custom character class | 1.25
4: CG|a capture group | 0.75
5: DBB|$n\le x \le m$ repetition | 0.25
6: DEC|any of: 0123456789 | 0.25
7: END|end-of-line | 0.25
8: NCCC|negated CCC | 0.25
9: SNG|exactly n repetition | 0.25
10: STR|start-of-line | 0.25


0000 | 0002 | '[a-fA-F0-9]{1,4}'
0001 | 0001 | '[^a-fA-F\\d]'
0002 | 0001 | '^0x[a-fA-F0-9]{6}$'
0003 | 0001 | '#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])'



cluster 109 stats:
nPatterns: 5.0
nProjects: 5
shortest: [A-Za-z_]+
Features:

1: LIT|a literal character | 7.2
2: RNG|chars within a range | 2.8
3: CCC|custom character class | 1.4
4: ADD|one-or-more repetition | 1.0
5: KLE|zero-or-more repetition | 0.8
6: CG|a capture group | 0.6
7: ANY|any non-newline char | 0.2
8: END|end-of-line | 0.2
9: QST|zero-or-one repetition | 0.2
10: STR|start-of-line | 0.2
11: WRD|[a-zA-Z0-9\_] | 0.2
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0001 | '[A-Za-z_]+'
0001 | 0001 | '([A-Za-z0-9_]*)'
0002 | 0001 | '[A-Z][A-Za-z]+\\('
0003 | 0001 | '^\\s*=[A-Za-z_]+\\w*.*$'
0004 | 0001 | '([A-Za-z]+)(\\[[A-Za-z,]+\\])?'



cluster 110 stats:
nPatterns: 1.0
nProjects: 4
shortest: (\S+)\s*(.*)
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: NWSP|any non-whitespace | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0004 | '(\\S+)\\s*(.*)'



cluster 111 stats:
nPatterns: 2.0
nProjects: 4
shortest: [,;]
Features:

1: LIT|a literal character | 2.5
2: CCC|custom character class | 1.0
3: ANY|any non-newline char | 0.5


0000 | 0003 | '[,;]'
0001 | 0001 | '[,;:].'



cluster 112 stats:
nPatterns: 1.0
nProjects: 4
shortest: (\d+)-(\d+)-(\d+)
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 3.0
3: DEC|any of: 0123456789 | 3.0
4: LIT|a literal character | 2.0


0000 | 0004 | '(\\d+)-(\\d+)-(\\d+)'



cluster 113 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^v(ersion)?\s*(\d+)
Features:

1: LIT|a literal character | 7.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: DEC|any of: 0123456789 | 1.0
5: KLE|zero-or-more repetition | 1.0
6: QST|zero-or-one repetition | 1.0
7: STR|start-of-line | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0004 | '^v(ersion)?\\s*(\\d+)'



cluster 114 stats:
nPatterns: 2.0
nProjects: 4
shortest: :title
Features:

1: LIT|a literal character | 7.5


0000 | 0003 | ':title'
0001 | 0001 | '\\/title\\/tt'



cluster 115 stats:
nPatterns: 3.0
nProjects: 4
shortest: el6
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 0.6666666666666666
3: KLE|zero-or-more repetition | 0.6666666666666666


0000 | 0002 | 'el6'
0001 | 0001 | '.*elf'
0002 | 0001 | 'rel.*'



cluster 116 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^([^:]*):[^:]*$
Features:

1: LIT|a literal character | 4.5
2: KLE|zero-or-more repetition | 2.0
3: CG|a capture group | 1.5
4: NCCC|negated CCC | 1.5
5: ANY|any non-newline char | 0.5
6: END|end-of-line | 0.5
7: STR|start-of-line | 0.5


0000 | 0002 | '^([^:]*):[^:]*$'
0001 | 0002 | '  ([^:]*):  (.*)'



cluster 117 stats:
nPatterns: 4.0
nProjects: 4
shortest: [\n]
Features:

1: LIT|a literal character | 1.5
2: CCC|custom character class | 1.0
3: ADD|one-or-more repetition | 0.25


0000 | 0001 | '[\n]'
0001 | 0001 | '[\\)]'
0002 | 0001 | '[\n,]'
0003 | 0001 | '[\\n,]+'



cluster 118 stats:
nPatterns: 3.0
nProjects: 4
shortest: processor
Features:

1: LIT|a literal character | 9.0


0000 | 0002 | 'processor'
0001 | 0001 | 'WordPress'
0002 | 0001 | 'wireless='



cluster 119 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^ *(.*) *( *) *$
Features:

1: LIT|a literal character | 7.5
2: KLE|zero-or-more repetition | 3.5
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0003 | '^ *(.*) *( *) *$'
0001 | 0001 | 'OUTPUT *(.*\\.aux)'



cluster 120 stats:
nPatterns: 2.0
nProjects: 4
shortest:  for ([0-9.]+)\Z
Features:

1: LIT|a literal character | 9.5
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.0
4: ANY|any non-newline char | 0.5
5: CCC|custom character class | 0.5
6: ENDZ|absolute end of string | 0.5
7: END|end-of-line | 0.5
8: NWSP|any non-whitespace | 0.5
9: RNG|chars within a range | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0003 | '\\s+Flags for (\\S.+):$'
0001 | 0001 | ' for ([0-9.]+)\\Z'



cluster 121 stats:
nPatterns: 3.0
nProjects: 4
shortest: .+?/Misc
Features:

1: LIT|a literal character | 4.666666666666667
2: ANY|any non-newline char | 1.3333333333333333
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: LZY|as few reps as possible | 1.0
6: END|end-of-line | 0.3333333333333333
7: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0002 | '\\.\\. (.+?)::(.*)$'
0001 | 0001 | '.+?/Misc'
0002 | 0001 | '{{(.+?)}}'



cluster 122 stats:
nPatterns: 2.0
nProjects: 4
shortest: ErrorReturnCode_(\d+)
Features:

1: LIT|a literal character | 9.5
2: ADD|one-or-more repetition | 2.5
3: CG|a capture group | 2.5
4: DEC|any of: 0123456789 | 1.5
5: ANY|any non-newline char | 1.0


0000 | 0002 | 'ErrorReturnCode_(\\d+)'
0001 | 0002 | '(.+)_(\\d+)_(\\d+)_(.+)'



cluster 123 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^<type [\'"](.+)[\'"]>$
Features:

1: LIT|a literal character | 12.0
2: CCC|custom character class | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: ADD|one-or-more repetition | 0.5
6: END|end-of-line | 0.5
7: KLE|zero-or-more repetition | 0.5
8: STR|start-of-line | 0.5


0000 | 0003 | '^<type [\'"](.+)[\'"]>$'
0001 | 0001 | 'var-bind=[\'"](.*)["\']'



cluster 124 stats:
nPatterns: 3.0
nProjects: 4
shortest: type=(B|R|)
Features:

1: LIT|a literal character | 8.333333333333334
2: KLE|zero-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
4: CG|a capture group | 0.3333333333333333
5: OR|logical or | 0.3333333333333333


0000 | 0002 | 'type=(B|R|)'
0001 | 0001 | 'typecode\\s*='
0002 | 0001 | '\\s*longitude\\s*'



cluster 125 stats:
nPatterns: 2.0
nProjects: 4
shortest: (?m)&mediaURL=([^&]+)
Features:

1: LIT|a literal character | 13.0
2: CG|a capture group | 1.5
3: ADD|one-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0
5: CCC|custom character class | 0.5
6: END|end-of-line | 0.5
7: OPT|options wrapper | 0.5
8: OR|logical or | 0.5


0000 | 0002 | '(?m)&mediaURL=([^&]+)'
0001 | 0002 | '[&?]versionId=([^&]+)($|=|&)'



cluster 126 stats:
nPatterns: 2.0
nProjects: 4
shortest: In\ \[\d+\]: 
Features:

1: LIT|a literal character | 8.5
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: CG|a capture group | 0.5
5: KLE|zero-or-more repetition | 0.5
6: LWB|at least n repetition | 0.5
7: OR|logical or | 0.5
8: QST|zero-or-one repetition | 0.5
9: STR|start-of-line | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0004 | 'In\\ \\[\\d+\\]: '
0001 | 0001 | '^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'



cluster 127 stats:
nPatterns: 2.0
nProjects: 4
shortest: libbcc_([A-Z_]+)\s*:=\s*([01])
Features:

1: LIT|a literal character | 16.0
2: KLE|zero-or-more repetition | 2.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.5
4: CCC|custom character class | 2.0
5: CG|a capture group | 2.0
6: ADD|one-or-more repetition | 1.5
7: RNG|chars within a range | 1.5
8: END|end-of-line | 0.5
9: STR|start-of-line | 0.5


0000 | 0003 | '^\\s*#define SSH_([A-Z_]+)\\s+([0-9x]*)\\s*$'
0001 | 0001 | 'libbcc_([A-Z_]+)\\s*:=\\s*([01])'



cluster 128 stats:
nPatterns: 4.0
nProjects: 4
shortest: \s*global\s+(.*)
Features:

1: LIT|a literal character | 8.75
2: ADD|one-or-more repetition | 1.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
4: KLE|zero-or-more repetition | 1.25
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 0.5
8: DEC|any of: 0123456789 | 0.25


0000 | 0001 | '\\s*global\\s+(.*)'
0001 | 0001 | 'Model name:\\s+(.*)'
0002 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'
0003 | 0001 | 'NPY_NO_EXPORT\\s+(.*)$'



cluster 129 stats:
nPatterns: 3.0
nProjects: 4
shortest: Line:(?P<line>\d+)\s*(?P<message>.+)
Features:

1: LIT|a literal character | 6.666666666666667
2: ADD|one-or-more repetition | 2.6666666666666665
3: PNG|named capture group | 2.0
4: ANY|any non-newline char | 1.3333333333333333
5: DEC|any of: 0123456789 | 1.3333333333333333
6: KLE|zero-or-more repetition | 1.0
7: CCC|custom character class | 0.3333333333333333
8: NCCC|negated CCC | 0.3333333333333333
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0002 | 'Line:(?P<line>\\d+)\\s*(?P<message>.+)'
0001 | 0001 | '.*:(?P<line>\\d+)[ \t]+(?P<message>.*)'
0002 | 0001 | '[^:]+:(?P<line>\\d+):\\d+: error: (?P<error>.+)'



cluster 130 stats:
nPatterns: 4.0
nProjects: 4
shortest: LL_VERSION_MINOR\s=\s([0-9]+)
Features:

1: LIT|a literal character | 25.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 0.75
5: NWRD|non-word chars | 0.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
7: CCC|custom character class | 0.25
8: RNG|chars within a range | 0.25


0000 | 0003 | '#define\\WDB_VERSION_PATCH\\W(\\d+)'
0001 | 0001 | 'LL_VERSION_MINOR\\s=\\s([0-9]+)'
0002 | 0001 | 'const S32 LL_VERSION_MAJOR = (\\d+);'
0003 | 0001 | 'const S32 LL_VERSION_PATCH = (\\d+);'



cluster 131 stats:
nPatterns: 5.0
nProjects: 4
shortest: ([A-Z]+_[a-z0-9]+\.txt)
Features:

1: LIT|a literal character | 13.6
2: RNG|chars within a range | 2.8
3: ADD|one-or-more repetition | 2.0
4: CCC|custom character class | 1.6
5: CG|a capture group | 1.0
6: ANY|any non-newline char | 0.2
7: DBB|$n\le x \le m$ repetition | 0.2
8: LZY|as few reps as possible | 0.2
9: STR|start-of-line | 0.2
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0001 | '([A-Z]+_[a-z0-9]+\\.txt)'
0001 | 0001 | '(prot_[a-z0-9]+\\.fasta)'
0002 | 0001 | '(<([a-z0-9\\:\\-_]+)\\s+>)'
0003 | 0001 | 'data-i18n-[a-z0-9]+="(.+?)"'
0004 | 0001 | '^[-a-z0-9_.]+@[-a-z0-9]+\\.+[a-z]{2,6}'



cluster 132 stats:
nPatterns: 3.0
nProjects: 4
shortest: (\d{4})-(\d{2})-(\d{2})[\s\t]*([0-9:, -]+)
Features:

1: LIT|a literal character | 8.666666666666666
2: CG|a capture group | 5.333333333333333
3: DEC|any of: 0123456789 | 4.666666666666667
4: SNG|exactly n repetition | 4.0
5: ADD|one-or-more repetition | 1.6666666666666667
6: CCC|custom character class | 1.3333333333333333
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
8: KLE|zero-or-more repetition | 0.6666666666666666
9: RNG|chars within a range | 0.6666666666666666
10: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0003 | '(\\d{4})-(\\d{2})-(\\d{2})\\s+(\\d{2}):(\\d{2}):(\\d{2})(\\.\\d+)?'
0001 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'
0002 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2}) / (\\d+)[\\s\t]*([0-9:, -]+)'



cluster 133 stats:
nPatterns: 1.0
nProjects: 3
shortest: \\*\n
Features:

1: LIT|a literal character | 2.0
2: KLE|zero-or-more repetition | 1.0


0000 | 0003 | '\\\\*\\n'



cluster 134 stats:
nPatterns: 1.0
nProjects: 3
shortest: \w+\.rb
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | '\\w+\\.rb'



cluster 135 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^bob
Features:

1: LIT|a literal character | 2.5
2: STR|start-of-line | 0.5
3: WNW|word/non-word boundary | 0.5


0000 | 0002 | '^bob'
0001 | 0001 | '\\bod'



cluster 136 stats:
nPatterns: 1.0
nProjects: 3
shortest: offset (.*) sec
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0003 | 'offset (.*) sec'



cluster 137 stats:
nPatterns: 1.0
nProjects: 3
shortest: (\S+)\s+(..+$)
Features:

1: ADD|one-or-more repetition | 3.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: END|end-of-line | 1.0
5: NWSP|any non-whitespace | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | '(\\S+)\\s+(..+$)'



cluster 138 stats:
nPatterns: 2.0
nProjects: 3
shortest: ife$
Features:

1: LIT|a literal character | 4.5
2: END|end-of-line | 0.5


0000 | 0002 | 'diff -'
0001 | 0001 | 'ife$'



cluster 139 stats:
nPatterns: 2.0
nProjects: 3
shortest: .py$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: QST|zero-or-one repetition | 0.5
5: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | '.py\\w?$'
0001 | 0001 | '.py$'



cluster 140 stats:
nPatterns: 2.0
nProjects: 3
shortest: date
Features:

1: LIT|a literal character | 5.5
2: STR|start-of-line | 0.5


0000 | 0002 | 'date'
0001 | 0001 | '^Latexmk'



cluster 141 stats:
nPatterns: 1.0
nProjects: 3
shortest: expectedFailures=(\d+)
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0003 | 'expectedFailures=(\\d+)'



cluster 142 stats:
nPatterns: 2.0
nProjects: 3
shortest: SENDMAIL=
Features:

1: LIT|a literal character | 9.5


0000 | 0002 | 'ERROR FAIL'
0001 | 0001 | 'SENDMAIL='



cluster 143 stats:
nPatterns: 2.0
nProjects: 3
shortest: linux-.*
Features:

1: LIT|a literal character | 5.5
2: WNW|word/non-word boundary | 1.0
3: ANY|any non-newline char | 0.5
4: KLE|zero-or-more repetition | 0.5


0000 | 0002 | '\\bminus\\b'
0001 | 0001 | 'linux-.*'



cluster 144 stats:
nPatterns: 3.0
nProjects: 3
shortest: %PDF
Features:

1: LIT|a literal character | 4.333333333333333
2: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '%PDF'
0001 | 0001 | 'SID='
0002 | 0001 | '^PDBID'



cluster 145 stats:
nPatterns: 2.0
nProjects: 3
shortest: \((H|S)\)
Features:

1: LIT|a literal character | 4.5
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: STR|start-of-line | 0.5


0000 | 0002 | '\\((H|S)\\)'
0001 | 0001 | '^(Sch|S)A'



cluster 146 stats:
nPatterns: 2.0
nProjects: 3
shortest: :[0-9]*$
Features:

1: LIT|a literal character | 5.5
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: RNG|chars within a range | 1.0


0000 | 0002 | ':[0-9]*$'
0001 | 0001 | '-clone[1-9]*$'



cluster 147 stats:
nPatterns: 2.0
nProjects: 3
shortest: Audio: \w+
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 0.5
3: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | 'Audio Files'
0001 | 0001 | 'Audio: \\w+'



cluster 148 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^(\-l)
Features:

1: LIT|a literal character | 2.5
2: CG|a capture group | 1.0
3: STR|start-of-line | 1.0
4: END|end-of-line | 0.5
5: OR|logical or | 0.5
6: SNG|exactly n repetition | 0.5


0000 | 0002 | '^(\\-2|\\-{2})$'
0001 | 0001 | '^(\\-l)'



cluster 149 stats:
nPatterns: 2.0
nProjects: 3
shortest: -\d+$
Features:

1: ADD|one-or-more repetition | 2.0
2: DEC|any of: 0123456789 | 2.0
3: LIT|a literal character | 1.5
4: END|end-of-line | 1.0
5: STR|start-of-line | 0.5


0000 | 0002 | '-\\d+$'
0001 | 0001 | '^\\d+\\-\\d+\\-\\d+$'



cluster 150 stats:
nPatterns: 2.0
nProjects: 3
shortest: \n     #
Features:

1: LIT|a literal character | 9.0
2: CG|a capture group | 0.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0002 | ':( *\n     \\|\n)\x02'
0001 | 0001 | '\n     #'



cluster 151 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^"(.*)"\s*$
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 3.0
3: ANY|any non-newline char | 1.5
4: CG|a capture group | 1.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
6: END|end-of-line | 0.5
7: STR|start-of-line | 0.5


0000 | 0002 | '"(.*)"\\s*->\\s*"(.*)"'
0001 | 0001 | '^"(.*)"\\s*$'



cluster 152 stats:
nPatterns: 3.0
nProjects: 3
shortest: \(\d+\)
Features:

1: LIT|a literal character | 2.6666666666666665
2: DEC|any of: 0123456789 | 1.6666666666666667
3: ADD|one-or-more repetition | 0.3333333333333333
4: CG|a capture group | 0.3333333333333333
5: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '\\(\\d+\\)'
0001 | 0001 | '(\\d\\.\\d)'
0002 | 0001 | '^wsj/\\d\\d/'



cluster 153 stats:
nPatterns: 2.0
nProjects: 3
shortest: .*?_([a-z]*)_pid\d*$
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 3.0
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 1.0
8: LZY|as few reps as possible | 1.0
9: RNG|chars within a range | 1.0


0000 | 0002 | '.*?_([a-z]*)_pid(\\d*)$'
0001 | 0001 | '.*?_([a-z]*)_pid\\d*$'



cluster 154 stats:
nPatterns: 3.0
nProjects: 3
shortest: [\w\.]+
Features:

1: LIT|a literal character | 2.3333333333333335
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: DEC|any of: 0123456789 | 0.6666666666666666


0000 | 0001 | '[\\w\\.]+'
0001 | 0001 | '[\\w\\d\\-_\\.]+'
0002 | 0001 | '[\\w\\d_\\.\\-]+'



cluster 155 stats:
nPatterns: 2.0
nProjects: 3
shortest: \bexpires=([^;]+)(?i)
Features:

1: LIT|a literal character | 8.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: WNW|word/non-word boundary | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
8: OPT|options wrapper | 0.5


0000 | 0002 | '\\bexpires=([^;]+)(?i)'
0001 | 0001 | '\\bplural\\s*=\\s*([^;]+)'



cluster 156 stats:
nPatterns: 3.0
nProjects: 3
shortest: VERSION.*'(.+)'
Features:

1: LIT|a literal character | 7.666666666666667
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 2.6666666666666665
4: CG|a capture group | 1.6666666666666667
5: QST|zero-or-one repetition | 0.6666666666666666
6: ADD|one-or-more repetition | 0.3333333333333333


0000 | 0001 | "VERSION.*'(.+)'"
0001 | 0001 | ".*'(.*)'.*'(.*)'.*"
0002 | 0001 | "u?'(.*)' != u?'(.*)'"



cluster 157 stats:
nPatterns: 3.0
nProjects: 3
shortest: ^/var/log/[^/]+$
Features:

1: LIT|a literal character | 9.666666666666666
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: CG|a capture group | 0.6666666666666666
5: END|end-of-line | 0.6666666666666666
6: NCG|group without capturing | 0.3333333333333333
7: QST|zero-or-one repetition | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '^/var/log/[^/]+$'
0001 | 0001 | '(http://[^/]+):80'
0002 | 0001 | '/prefs(?:/([^/]+))?$'



cluster 158 stats:
nPatterns: 3.0
nProjects: 3
shortest: [QA]?[:;.]?\d\d
Features:

1: DEC|any of: 0123456789 | 2.3333333333333335
2: LIT|a literal character | 2.3333333333333335
3: QST|zero-or-one repetition | 2.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0
7: ADD|one-or-more repetition | 0.6666666666666666
8: ANY|any non-newline char | 0.6666666666666666
9: OR|logical or | 0.3333333333333333


0000 | 0001 | '[QA]?[:;.]?\\d\\d'
0001 | 0001 | '\\d+(.\\d*)?|.\\d+'
0002 | 0001 | '-?(\\d*)([.]?\\d*)?'



cluster 159 stats:
nPatterns: 3.0
nProjects: 3
shortest: .*@example\.com$
Features:

1: LIT|a literal character | 14.666666666666666
2: ANY|any non-newline char | 1.3333333333333333
3: KLE|zero-or-more repetition | 1.0
4: CCC|custom character class | 0.3333333333333333
5: END|end-of-line | 0.3333333333333333
6: RNG|chars within a range | 0.3333333333333333


0000 | 0001 | '.*@example\\.com$'
0001 | 0001 | '[a-z]*.example.com'
0002 | 0001 | 'exampleLocalVar.*abcde'



cluster 160 stats:
nPatterns: 3.0
nProjects: 3
shortest: (\w+)(?:\:(\w+))?
Features:

1: CG|a capture group | 2.0
2: LIT|a literal character | 2.0
3: ADD|one-or-more repetition | 1.6666666666666667
4: QST|zero-or-one repetition | 1.3333333333333333
5: WRD|[a-zA-Z0-9\_] | 1.3333333333333333
6: NCCC|negated CCC | 0.6666666666666666
7: NCG|group without capturing | 0.6666666666666666
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
9: ANY|any non-newline char | 0.3333333333333333
10: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0001 | '(\\w+)(?:\\:(\\w+))?'
0001 | 0001 | '<(\\w+)(\\s.*)?[^/]?>'
0002 | 0001 | '(\\w+)(?:=([^\\s;]+))?'



cluster 161 stats:
nPatterns: 2.0
nProjects: 3
shortest: (?:const-)?([A-Za-z0-9]+)\*?\s+
Features:

1: LIT|a literal character | 18.5
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.5
4: CG|a capture group | 1.5
5: ADD|one-or-more repetition | 1.0
6: KLE|zero-or-more repetition | 1.0
7: QST|zero-or-one repetition | 1.0
8: NCG|group without capturing | 0.5
9: OR|logical or | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '(?:const-)?([A-Za-z0-9]+)\\*?\\s+'
0001 | 0001 | '\\*(fore|back)ground:[ ]*(#[A-Za-z0-9]*)'



cluster 162 stats:
nPatterns: 3.0
nProjects: 3
shortest: Python ([a-z0-9\.]+)
Features:

1: LIT|a literal character | 13.666666666666666
2: RNG|chars within a range | 1.3333333333333333
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 0.6666666666666666
6: ANY|any non-newline char | 0.3333333333333333
7: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0001 | 'Real/event = [0-9\\.]+'
0001 | 0001 | u'Python ([a-z0-9\\.]+)'
0002 | 0001 | 'lighttpd-([0-9\\.]+) .*'



cluster 163 stats:
nPatterns: 3.0
nProjects: 3
shortest: branch type (\d)
Features:

1: LIT|a literal character | 10.333333333333334
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.3333333333333333
4: NWSP|any non-whitespace | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: DEC|any of: 0123456789 | 0.3333333333333333


0000 | 0001 | 'branch type (\\d)'
0001 | 0001 | '\\[new branch\\]\\s+(\\S+)'
0002 | 0001 | '#define\\s+(\\S+)\\s+(\\S+)'



cluster 164 stats:
nPatterns: 3.0
nProjects: 3
shortest: ID_LENGTH=([0-9]*)
Features:

1: LIT|a literal character | 13.0
2: KLE|zero-or-more repetition | 1.6666666666666667
3: CCC|custom character class | 1.3333333333333333
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
7: ANY|any non-newline char | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333


0000 | 0001 | 'ID_LENGTH=([0-9]*)'
0001 | 0001 | 'sta.b (tcc__[fr][0-9]*)$'
0002 | 0001 | '\\$Revision:\\s*([0-9]*)\\s*\\$'



cluster 165 stats:
nPatterns: 3.0
nProjects: 3
shortest: (?ims)<tr[^>]*>.*?</tr>
Features:

1: LIT|a literal character | 13.0
2: KLE|zero-or-more repetition | 2.3333333333333335
3: NCCC|negated CCC | 1.6666666666666667
4: ANY|any non-newline char | 1.0
5: LZY|as few reps as possible | 1.0
6: OPT|options wrapper | 0.6666666666666666
7: ADD|one-or-more repetition | 0.3333333333333333
8: CG|a capture group | 0.3333333333333333


0000 | 0001 | '(?ims)<tr[^>]*>.*?</tr>'
0001 | 0001 | '(?is)<tr [^>]*>.*?</tr>'
0002 | 0001 | '<a [^>]*href="([^"]+)"[^>]*>.*?</a>'



cluster 166 stats:
nPatterns: 3.0
nProjects: 3
shortest: </?\s*[a-zA-Z0-9]+
Features:

1: LIT|a literal character | 10.666666666666666
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.6666666666666667
4: ADD|one-or-more repetition | 1.3333333333333333
5: KLE|zero-or-more repetition | 1.3333333333333333
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: CG|a capture group | 0.6666666666666666
8: QST|zero-or-one repetition | 0.6666666666666666
9: NCCC|negated CCC | 0.3333333333333333
10: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0001 | '</?\\s*[a-zA-Z0-9]+'
0001 | 0001 | '<\\s*[a-z]+\\s*[\\w"=\\.]*>'
0002 | 0001 | '\\$\\{([_a-zA-Z][_a-zA-Z0-9]+)(\\?[^}]+)?\\}'



cluster 167 stats:
nPatterns: 3.0
nProjects: 3
shortest: android:versionName="([^"]+)"
Features:

1: LIT|a literal character | 20.666666666666668
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: KLE|zero-or-more repetition | 0.6666666666666666
6: WNW|word/non-word boundary | 0.6666666666666666
7: ANY|any non-newline char | 0.3333333333333333
8: QST|zero-or-one repetition | 0.3333333333333333
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0001 | 'android:versionName="([^"]+)"'
0001 | 0001 | 'invalid cidr value: "([^"]+)"'
0002 | 0001 | '\\s*<?xml\\b.*\\bencoding="([^"]+)"'



cluster 168 stats:
nPatterns: 3.0
nProjects: 3
shortest: \((\d+)-(\d+)-(\d+)\)
Features:

1: LIT|a literal character | 7.666666666666667
2: CG|a capture group | 4.0
3: ADD|one-or-more repetition | 3.6666666666666665
4: DEC|any of: 0123456789 | 3.6666666666666665
5: NCG|group without capturing | 0.6666666666666666
6: QST|zero-or-one repetition | 0.6666666666666666
7: OR|logical or | 0.3333333333333333


0000 | 0001 | '(varchar|char)\\((\\d+)\\)'
0001 | 0001 | '\\((\\d+)-(\\d+)-(\\d+)\\)'
0002 | 0001 | '(\\d+)-(\\d+)-(\\d+)(?: (\\d+):(\\d+):(\\d+)(?:\\.(\\d+))?)?'



cluster 169 stats:
nPatterns: 1.0
nProjects: 2
shortest: \*\S
Features:

1: LIT|a literal character | 1.0
2: NWSP|any non-whitespace | 1.0


0000 | 0002 | '\\*\\S'



cluster 170 stats:
nPatterns: 1.0
nProjects: 2
shortest: \.\.\.
Features:

1: LIT|a literal character | 3.0


0000 | 0002 | '\\.\\.\\.'



cluster 171 stats:
nPatterns: 2.0
nProjects: 2
shortest: _$
Features:

1: LIT|a literal character | 1.5
2: END|end-of-line | 0.5


0000 | 0001 | '_$'
0001 | 0001 | '__'



cluster 172 stats:
nPatterns: 2.0
nProjects: 2
shortest: TA
Features:

1: LIT|a literal character | 2.5


0000 | 0001 | 'TA'
0001 | 0001 | 'LGA'



cluster 173 stats:
nPatterns: 1.0
nProjects: 2
shortest: \[\d\]\s+=
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '\\[\\d\\]\\s+='



cluster 174 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^enum
Features:

1: LIT|a literal character | 3.5
2: STR|start-of-line | 1.0
3: END|end-of-line | 0.5


0000 | 0001 | '^enum'
0001 | 0001 | '^eth$'



cluster 175 stats:
nPatterns: 2.0
nProjects: 2
shortest: [.:-]
Features:

1: LIT|a literal character | 2.5
2: CCC|custom character class | 1.0


0000 | 0001 | '[.:-]'
0001 | 0001 | '[\\+-]'



cluster 176 stats:
nPatterns: 2.0
nProjects: 2
shortest: irr.ru
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 0.5


0000 | 0001 | 'irr.ru'
0001 | 0001 | "':true,"



cluster 177 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(.*)\s*<(.*)>\s*$
Features:

1: KLE|zero-or-more repetition | 4.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: LIT|a literal character | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0


0000 | 0002 | '^(.*)\\s*<(.*)>\\s*$'



cluster 178 stats:
nPatterns: 1.0
nProjects: 2
shortest: Allocation:\s+(\S+.*)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NWSP|any non-whitespace | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | 'Allocation:\\s+(\\S+.*)'



cluster 179 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^([A-Z].*?\.(?:\s|$))
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: LZY|as few reps as possible | 1.0
8: NCG|group without capturing | 1.0
9: OR|logical or | 1.0
10: RNG|chars within a range | 1.0
11: STR|start-of-line | 1.0
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '^([A-Z].*?\\.(?:\\s|$))'



cluster 180 stats:
nPatterns: 2.0
nProjects: 2
shortest: (\D+)
Features:

1: LIT|a literal character | 2.5
2: CG|a capture group | 1.0
3: NDEC|any non-decimal | 1.0
4: ADD|one-or-more repetition | 0.5
5: CCC|custom character class | 0.5


0000 | 0001 | '(\\D+)'
0001 | 0001 | '(\\D[123])_D'



cluster 181 stats:
nPatterns: 2.0
nProjects: 2
shortest: orgname=
Features:

1: LIT|a literal character | 9.0


0000 | 0001 | 'orgname='
0001 | 0001 | 'More Games'



cluster 182 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*?: (.*)
Features:

1: ANY|any non-newline char | 2.0
2: KLE|zero-or-more repetition | 2.0
3: CG|a capture group | 1.5
4: LIT|a literal character | 1.5
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '.*?: (.*)'
0001 | 0001 | '(.*?)=(.*)'



cluster 183 stats:
nPatterns: 2.0
nProjects: 2
shortest: [uU][\'"]
Features:

1: LIT|a literal character | 3.5
2: CCC|custom character class | 1.5
3: ADD|one-or-more repetition | 0.5
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '[uU][\'"]'
0001 | 0001 | '[\'"\\s;]+'



cluster 184 stats:
nPatterns: 1.0
nProjects: 2
shortest: descr\s+(\S+?):\s*(.*)$
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 1.0
8: LZY|as few reps as possible | 1.0
9: NWSP|any non-whitespace | 1.0


0000 | 0002 | 'descr\\s+(\\S+?):\\s*(.*)$'



cluster 185 stats:
nPatterns: 2.0
nProjects: 2
shortest: f[lie]=.+
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 0.5


0000 | 0001 | 'f[lie]=.+'
0001 | 0001 | ' sslmode=.+'



cluster 186 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([;,\s]+)
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
5: CCC|custom character class | 0.5
6: NCCC|negated CCC | 0.5


0000 | 0001 | '([;,\\s]+)'
0001 | 0001 | '&([^;\\s]+);'



cluster 187 stats:
nPatterns: 2.0
nProjects: 2
shortest: Not Found
Features:

1: LIT|a literal character | 11.0


0000 | 0001 | 'Not Found'
0001 | 0001 | '404 Not Found'



cluster 188 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\w+)\s*:\s+(\d+)\s\w+
Features:

1: ADD|one-or-more repetition | 4.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: CG|a capture group | 2.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0
7: LIT|a literal character | 1.0
8: STR|start-of-line | 1.0


0000 | 0002 | '^(\\w+)\\s*:\\s+(\\d+)\\s\\w+'



cluster 189 stats:
nPatterns: 2.0
nProjects: 2
shortest: [@:]number
Features:

1: LIT|a literal character | 8.5
2: CCC|custom character class | 0.5
3: CG|a capture group | 0.5
4: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '[@:]number'
0001 | 0001 | 'sChamber=(\\w)'



cluster 190 stats:
nPatterns: 2.0
nProjects: 2
shortest: link="(.*?)"
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 1.5
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: KLE|zero-or-more repetition | 0.5
6: LZY|as few reps as possible | 0.5


0000 | 0001 | 'link="(.*?)"'
0001 | 0001 | '[-][-]link[-]'



cluster 191 stats:
nPatterns: 2.0
nProjects: 2
shortest: LSID=[^\n]+
Features:

1: LIT|a literal character | 4.0
2: NCCC|negated CCC | 1.0
3: ADD|one-or-more repetition | 0.5
4: ANY|any non-newline char | 0.5
5: KLE|zero-or-more repetition | 0.5
6: LKA|matching sequence follows | 0.5


0000 | 0001 | 'LSID=[^\\n]+'
0001 | 0001 | '.*\\r(?=[^\\n])'



cluster 192 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\-+\+\-+$
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.5
3: CCC|custom character class | 0.5
4: CG|a capture group | 0.5
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0001 | '^\\-+\\+\\-+$'
0001 | 0001 | '([\\+\\-\\^]+)'



cluster 193 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([0-9\-]+)
Features:

1: LIT|a literal character | 4.5
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0
4: ADD|one-or-more repetition | 0.5
5: CG|a capture group | 0.5
6: SNG|exactly n repetition | 0.5


0000 | 0001 | '([0-9\\-]+)'
0001 | 0001 | '[0-9\\- \\(\\)]{14}'



cluster 194 stats:
nPatterns: 2.0
nProjects: 2
shortest: \s*(\S+)
Features:

1: LIT|a literal character | 2.5
2: KLE|zero-or-more repetition | 1.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NWSP|any non-whitespace | 1.0
7: STR|start-of-line | 0.5


0000 | 0001 | '\\s*(\\S+)'
0001 | 0001 | '^Name\\s*:\\s*(\\S+)'



cluster 195 stats:
nPatterns: 2.0
nProjects: 2
shortest: <uuid>.*</uuid>
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 0.5


0000 | 0001 | '<uuid>.*</uuid>'
0001 | 0001 | '<uuid.*?uuid>\\n  '



cluster 196 stats:
nPatterns: 2.0
nProjects: 2
shortest: Name=([\w\.]+)
Features:

1: LIT|a literal character | 4.5
2: CG|a capture group | 1.5
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'Name=([\\w\\.]+)'
0001 | 0001 | '(\\\\\\*)([\\w ]+)'



cluster 197 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([\d]+) ([\d]+)
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.5
4: CCC|custom character class | 1.5
5: DEC|any of: 0123456789 | 1.0
6: RNG|chars within a range | 1.0
7: ANY|any non-newline char | 0.5
8: END|end-of-line | 0.5
9: KLE|zero-or-more repetition | 0.5
10: STR|start-of-line | 0.5


0000 | 0001 | '([\\d]+) ([\\d]+)'
0001 | 0001 | '^([0-9a-f]+) (.*)$'



cluster 198 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?i)handy(.*)nummer
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OPT|options wrapper | 1.0


0000 | 0002 | '(?i)handy(.*)nummer'
0001 | 0002 | '(?i)pager(.*)nummer'



cluster 199 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([[ ~^:?*]|\.\.)
Features:

1: LIT|a literal character | 6.0
2: END|end-of-line | 1.0
3: OR|logical or | 1.0
4: STR|start-of-line | 1.0
5: CCC|custom character class | 0.5
6: CG|a capture group | 0.5
7: DEC|any of: 0123456789 | 0.5


0000 | 0001 | '([[ ~^:?*]|\\.\\.)'
0001 | 0001 | '^\\.|^\\d\\.$|\\.\\.$'



cluster 200 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*Firefox/(\d*).*
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 2.5
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.0
5: DEC|any of: 0123456789 | 1.0
6: END|end-of-line | 0.5
7: NCCC|negated CCC | 0.5


0000 | 0001 | '.*Firefox/(\\d*).*'
0001 | 0001 | '\\[([^]]*)\\]:(\\d*)$'



cluster 201 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^[-+]?([0][0-7,]*)$
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 3.0
3: RNG|chars within a range | 1.5
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: QST|zero-or-one repetition | 1.0
8: STR|start-of-line | 1.0
9: OR|logical or | 0.5


0000 | 0002 | '^[-+]?([0][0-7,]*)$'
0001 | 0002 | '^[-+]?(0|[1-9][0-9,]*)$'



cluster 202 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*://(?P<namespace>.+)
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0
5: ADD|one-or-more repetition | 0.5
6: LZY|as few reps as possible | 0.5


0000 | 0001 | '.*://(?P<namespace>.+)'
0001 | 0001 | 'author: (?P<name>.*?);'



cluster 203 stats:
nPatterns: 2.0
nProjects: 2
shortest: function( .+?)\(
Features:

1: LIT|a literal character | 14.5
2: KLE|zero-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
4: ADD|one-or-more repetition | 0.5
5: ANY|any non-newline char | 0.5
6: CG|a capture group | 0.5
7: LZY|as few reps as possible | 0.5


0000 | 0001 | 'function( .+?)\\('
0001 | 0001 | '\\s*<TestFunction name=\\s*'



cluster 204 stats:
nPatterns: 2.0
nProjects: 2
shortest: (".*?")|(\'.*?\')|(\s+)
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 2.5
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 2.0
5: ANY|any non-newline char | 1.0
6: NCCC|negated CCC | 1.0
7: OR|logical or | 1.0
8: ADD|one-or-more repetition | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'
0001 | 0001 | '("[^"]*?")|(\'[^\']*?\')'



cluster 205 stats:
nPatterns: 2.0
nProjects: 2
shortest: MAJOR\s*=\s*(\d+)
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.5
5: CG|a capture group | 1.5
6: DEC|any of: 0123456789 | 1.0
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | 'MAJOR\\s*=\\s*(\\d+)'
0001 | 0001 | '(\\w+)\\s*District\\s*(\\d+)'



cluster 206 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?P<year>[12]{1}[0-9]{3})
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 2.5
3: RNG|chars within a range | 2.0
4: SNG|exactly n repetition | 2.0
5: CG|a capture group | 1.0
6: PNG|named capture group | 0.5


0000 | 0001 | '(?P<year>[12]{1}[0-9]{3})'
0001 | 0001 | '([A-Z][0-9]{2})([0-9]{3})'



cluster 207 stats:
nPatterns: 2.0
nProjects: 2
shortest: [ \t]*File.*line (\d+)
Features:

1: LIT|a literal character | 17.5
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: DEC|any of: 0123456789 | 1.0
7: CCC|custom character class | 0.5
8: END|end-of-line | 0.5
9: LZY|as few reps as possible | 0.5


0000 | 0001 | '[ \t]*File.*line (\\d+)'
0001 | 0001 | 'LaTeX Warning.*?input line (\\d+).$'



cluster 208 stats:
nPatterns: 2.0
nProjects: 2
shortest: FocusedApplication(.+)/
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 0.5
6: NCCC|negated CCC | 0.5
7: OR|logical or | 0.5
8: PNG|named capture group | 0.5


0000 | 0001 | 'FocusedApplication(.+)/'
0001 | 0001 | '(|.*/)applications/(?P<appname>[^/]+)'



cluster 209 stats:
nPatterns: 2.0
nProjects: 2
shortest: Working file: (?P<filename>.*)
Features:

1: LIT|a literal character | 12.5
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: LZY|as few reps as possible | 1.0
5: PNG|named capture group | 1.0
6: KLE|zero-or-more repetition | 0.5
7: NCCC|negated CCC | 0.5


0000 | 0001 | 'Working file: (?P<filename>.*)'
0001 | 0001 | '<img.+?src="(?P<filename>[^"]+?)"'



cluster 210 stats:
nPatterns: 2.0
nProjects: 2
shortest: attempt model run (.*?) one more 
Features:

1: LIT|a literal character | 28.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0002 | 'attempt model run (.*?) one more '
0001 | 0002 | 'model run (.*?) commencing on node'



cluster 211 stats:
nPatterns: 3.0
nProjects: 2
shortest: \tDLL Name: (\S+)
Features:

1: LIT|a literal character | 9.333333333333334
2: ADD|one-or-more repetition | 1.3333333333333333
3: CG|a capture group | 1.3333333333333333
4: NWSP|any non-whitespace | 1.3333333333333333
5: KLE|zero-or-more repetition | 0.6666666666666666
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
7: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '\tDLL Name: (\\S+)'
0001 | 0001 | '(\\S+) Version (\\S+)'
0002 | 0001 | '^Version\\s*:\\s*(\\S+)'



cluster 212 stats:
nPatterns: 2.0
nProjects: 2
shortest: \s*([^;# \t\n\r\f\v]+)
Features:

1: LIT|a literal character | 9.5
2: KLE|zero-or-more repetition | 2.0
3: NCCC|negated CCC | 1.5
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
5: ADD|one-or-more repetition | 1.0
6: VWSP|matches U+000B | 1.0
7: CG|a capture group | 0.5


0000 | 0001 | '\\s*([^;# \\t\\n\\r\\f\\v]+)'
0001 | 0001 | '[^ \\t\\n\\r\\f\\v"\\\']+\\s*\\=\\s*"[^"]*"'



cluster 213 stats:
nPatterns: 3.0
nProjects: 2
shortest: <genre>(.*?)</genre>
Features:

1: LIT|a literal character | 17.333333333333332
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: OPT|options wrapper | 0.3333333333333333


0000 | 0001 | '<genre>(.*?)</genre>'
0001 | 0001 | '<rating>(.*?)</rating>'
0002 | 0001 | '(?s)id="TEXT_PH">(.*?)</span>'



cluster 214 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\s*\"(.+)\"\s*,\s*\"(.+)\"\s*$
Features:

1: LIT|a literal character | 7.5
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.5
4: CG|a capture group | 2.0
5: ADD|one-or-more repetition | 1.5
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 0.5
8: NCCC|negated CCC | 0.5
9: NWSP|any non-whitespace | 0.5
10: STR|start-of-line | 0.5


0000 | 0001 | '^\\s*\\"(.+)\\"\\s*,\\s*\\"(.+)\\"\\s*$'
0001 | 0001 | 'pref\\(\\"([^\\"]+)\\"\\s*,\\s*(\\S*)\\s*\\)'



cluster 215 stats:
nPatterns: 3.0
nProjects: 2
shortest: "v8_revision": "123455"
Features:

1: LIT|a literal character | 14.333333333333334
2: ADD|one-or-more repetition | 0.6666666666666666
3: CCC|custom character class | 0.3333333333333333
4: CG|a capture group | 0.3333333333333333
5: DEC|any of: 0123456789 | 0.3333333333333333
6: LKA|matching sequence follows | 0.3333333333333333
7: LKB|matching sequence precedes | 0.3333333333333333
8: PNG|named capture group | 0.3333333333333333
9: RNG|chars within a range | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '"v8_revision": "123455"'
0001 | 0001 | '^r(?P<svn_revision>\\d+)'
0002 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'



cluster 216 stats:
nPatterns: 2.0
nProjects: 2
shortest: Apple (?:clang|LLVM) version (\d+\.\d+)
Features:

1: LIT|a literal character | 20.0
2: ADD|one-or-more repetition | 3.0
3: DEC|any of: 0123456789 | 3.0
4: CG|a capture group | 2.5
5: QST|zero-or-one repetition | 1.0
6: NCG|group without capturing | 0.5
7: OR|logical or | 0.5


0000 | 0001 | u'Apple (?:clang|LLVM) version (\\d+\\.\\d+)'
0001 | 0001 | 'git version (\\d+)\\.(\\d+)(\\.\\d+)?(\\.\\d+)?'



cluster 217 stats:
nPatterns: 4.0
nProjects: 2
shortest: ((?P<day>\d+)d)
Features:

1: LIT|a literal character | 7.75
2: PNG|named capture group | 1.0
3: ANY|any non-newline char | 0.75
4: KLE|zero-or-more repetition | 0.75
5: STR|start-of-line | 0.75
6: END|end-of-line | 0.5
7: ADD|one-or-more repetition | 0.25
8: CG|a capture group | 0.25
9: DEC|any of: 0123456789 | 0.25


0000 | 0001 | '((?P<day>\\d+)d)'
0001 | 0001 | '^#, (?P<data>.*)'
0002 | 0001 | '^msgstr "(?P<data>.*)"$'
0003 | 0001 | '^#~ msgid_plural "(?P<data>.*)"$'



cluster 218 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(.*) ?\[([^ ]*) \+(0x[0-9A-F]{1,8})\](.*)$
Features:

1: LIT|a literal character | 14.5
2: CG|a capture group | 4.5
3: KLE|zero-or-more repetition | 3.5
4: RNG|chars within a range | 2.5
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 1.5
7: DBB|$n\le x \le m$ repetition | 1.0
8: END|end-of-line | 1.0
9: NCCC|negated CCC | 1.0
10: QST|zero-or-one repetition | 1.0
11: STR|start-of-line | 1.0


0000 | 0002 | '^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'
0001 | 0002 | '^([ \\|0-9-]*)(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'



cluster 219 stats:
nPatterns: 2.0
nProjects: 2
shortest: \s+at\s(?P<file>[^:]+):?(?P<row>\d+)?:?(?P<col>\d+)?
Features:

1: LIT|a literal character | 7.5
2: ADD|one-or-more repetition | 4.5
3: QST|zero-or-one repetition | 4.5
4: PNG|named capture group | 3.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
6: DEC|any of: 0123456789 | 2.0
7: NCCC|negated CCC | 1.0
8: ANY|any non-newline char | 0.5
9: NCG|group without capturing | 0.5


0000 | 0002 | '\\s+at\\s(?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?'
0001 | 0002 | '\\s+at\\s(?:new\\s)?(?P<func>.+)\\s\\((?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?\\)'



cluster 220 stats:
nPatterns: 1.0
nProjects: 1
shortest: y$
Features:

1: END|end-of-line | 1.0
2: LIT|a literal character | 1.0


0000 | 0001 | 'y$'



cluster 221 stats:
nPatterns: 1.0
nProjects: 1
shortest: try
Features:

1: LIT|a literal character | 3.0


0000 | 0001 | 'try'



cluster 222 stats:
nPatterns: 1.0
nProjects: 1
shortest: [,\n]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[,\n]'



cluster 223 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\S+
Features:

1: ADD|one-or-more repetition | 1.0
2: NWSP|any non-whitespace | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^\\S+'



cluster 224 stats:
nPatterns: 1.0
nProjects: 1
shortest: tree=
Features:

1: LIT|a literal character | 5.0


0000 | 0001 | 'tree='



cluster 225 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.php
Features:

1: LIT|a literal character | 4.0


0000 | 0001 | '\\.php'



cluster 226 stats:
nPatterns: 1.0
nProjects: 1
shortest: :[\s]+
Features:

1: ADD|one-or-more repetition | 1.0
2: CCC|custom character class | 1.0
3: LIT|a literal character | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | ':[\\s]+'



cluster 227 stats:
nPatterns: 1.0
nProjects: 1
shortest: [a-z ]+
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: RNG|chars within a range | 1.0


0000 | 0001 | '[a-z ]+'



cluster 228 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^def .+
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^def .+'



cluster 229 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?m)^(.)
Features:

1: ANY|any non-newline char | 1.0
2: CG|a capture group | 1.0
3: OPT|options wrapper | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '(?m)^(.)'



cluster 230 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\.\d+$
Features:

1: ADD|one-or-more repetition | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 1.0
4: LIT|a literal character | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^\\.\\d+$'



cluster 231 stats:
nPatterns: 1.0
nProjects: 1
shortest: [ \r\n\t]+
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0


0000 | 0001 | '[ \r\n\t]+'



cluster 232 stats:
nPatterns: 1.0
nProjects: 1
shortest: [\t\r\n]+$
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: END|end-of-line | 1.0


0000 | 0001 | '[\t\r\n]+$'



cluster 233 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([.]*).*$
Features:

1: KLE|zero-or-more repetition | 2.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: LIT|a literal character | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^([.]*).*$'



cluster 234 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*/([^?#]*)
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '.*/([^?#]*)'



cluster 235 stats:
nPatterns: 1.0
nProjects: 1
shortest: @([a-z_]+)@
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0001 | '@([a-z_]+)@'



cluster 236 stats:
nPatterns: 1.0
nProjects: 1
shortest: \\[\\]?
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: QST|zero-or-one repetition | 1.0


0000 | 0001 | '\\\\[\\\\]?'



cluster 237 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.*\.arc)$
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^(.*\\.arc)$'



cluster 238 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[-\.\w]+$
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^[-\\.\\w]+$'



cluster 239 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s+(\w+) =
Features:

1: ADD|one-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: CG|a capture group | 1.0
4: STR|start-of-line | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^\\s+(\\w+) ='



cluster 240 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^:]+):(\S+)
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: LIT|a literal character | 2.0
4: NCCC|negated CCC | 1.0
5: NWSP|any non-whitespace | 1.0


0000 | 0001 | '([^:]+):(\\S+)'



cluster 241 stats:
nPatterns: 1.0
nProjects: 1
shortest: Model:\s+(.+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'Model:\\s+(.+)'



cluster 242 stats:
nPatterns: 1.0
nProjects: 1
shortest: [0-9]+[a-zA-Z]
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 2.0
4: ADD|one-or-more repetition | 1.0


0000 | 0001 | '[0-9]+[a-zA-Z]'



cluster 243 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^/r/([^/]{2,})
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.0
3: LWB|at least n repetition | 1.0
4: NCCC|negated CCC | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^/r/([^/]{2,})'



cluster 244 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^=== ([A-Z_]+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^=== ([A-Z_]+)'



cluster 245 stats:
nPatterns: 1.0
nProjects: 1
shortest: #(\w+)|\[(.+)\]
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: OR|logical or | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '#(\\w+)|\\[(.+)\\]'



cluster 246 stats:
nPatterns: 1.0
nProjects: 1
shortest: release\s*=\s*True
Features:

1: LIT|a literal character | 12.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0001 | 'release\\s*=\\s*True'



cluster 247 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.?\.?\.\.\.\.$
Features:

1: LIT|a literal character | 6.0
2: QST|zero-or-one repetition | 2.0
3: END|end-of-line | 1.0


0000 | 0001 | '\\.?\\.?\\.\\.\\.\\.$'



cluster 248 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[([^\]]+)\]\]
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '\\[\\[([^\\]]+)\\]\\]'



cluster 249 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[([^:]+):([^|\]]+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: NCCC|negated CCC | 2.0


0000 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'



cluster 250 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^function\s*(\w+)\s*\(
Features:

1: LIT|a literal character | 9.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: STR|start-of-line | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^function\\s*(\\w+)\\s*\\('



cluster 251 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^class .+
Features:

1: LIT|a literal character | 6.5
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: LZY|as few reps as possible | 0.5
6: STR|start-of-line | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '^class .+'
0001 | 0001 | 'class (\\w+?)\\('



cluster 252 stats:
nPatterns: 2.0
nProjects: 1
shortest: multiattack5=
Features:

1: LIT|a literal character | 15.5


0000 | 0001 | 'multiattack5='
0001 | 0001 | 'webattack_account='



cluster 253 stats:
nPatterns: 2.0
nProjects: 1
shortest: .+(?<=archives/)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: LKB|matching sequence precedes | 1.0


0000 | 0001 | '.+(?<=archives/)'
0001 | 0001 | '.+(?<=spektakl/)'



cluster 254 stats:
nPatterns: 2.0
nProjects: 1
shortest: TORINO2:\s\d+
Features:

1: LIT|a literal character | 10.5
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'TORINO2:\\s\\d+'
0001 | 0001 | 'SEDE clienti:\\s\\d+'



cluster 255 stats:
nPatterns: 2.0
nProjects: 1
shortest: Firefox/([\d.]+)
Features:

1: LIT|a literal character | 10.5
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'Firefox/([\\d.]+)'
0001 | 0001 | 'Mobile; rv:([\\d.]+)'



cluster 256 stats:
nPatterns: 2.0
nProjects: 1
shortest: N=50: ([.0-9]+)
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0001 | 'N=50: ([.0-9]+)'
0001 | 0001 | 'Mean sample size: ([.0-9]+)'



cluster 257 stats:
nPatterns: 2.0
nProjects: 1
shortest: Connection timed out
Features:

1: LIT|a literal character | 22.0


0000 | 0001 | 'Connection timed out'
0001 | 0001 | 'Connection reset by peer'



cluster 258 stats:
nPatterns: 2.0
nProjects: 1
shortest: test_(.*)\.js$
Features:

1: LIT|a literal character | 14.0
2: CG|a capture group | 1.5
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: QST|zero-or-one repetition | 0.5


0000 | 0001 | 'test_(.*)\\.js$'
0001 | 0001 | 'update_(smoke)?test_(.*)\\.py$'



cluster 259 stats:
nPatterns: 3.0
nProjects: 1
shortest: n_(?:.*?)
Features:

1: LIT|a literal character | 7.666666666666667
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: NCG|group without capturing | 1.0


0000 | 0001 | 'n_(?:.*?)'
0001 | 0001 | 'ov_tree(?:.*?)'
0002 | 0001 | 'lc_1div8_1div1(?:.*?)'



cluster 260 stats:
nPatterns: 2.0
nProjects: 1
shortest: [$_]?(?:is|has)($|[A-Z_])
Features:

1: LIT|a literal character | 10.5
2: CCC|custom character class | 2.0
3: OR|logical or | 2.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: NCG|group without capturing | 1.0
7: QST|zero-or-one repetition | 1.0
8: RNG|chars within a range | 1.0


0000 | 0001 | '[$_]?(?:is|has)($|[A-Z_])'
0001 | 0001 | '[$_]?(?:set|add)($|[A-Z_])'



cluster 261 stats:
nPatterns: 2.0
nProjects: 1
shortest: subroutine( .+?)\(
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: KLE|zero-or-more repetition | 0.5
7: LZY|as few reps as possible | 0.5
8: NCCC|negated CCC | 0.5


0000 | 0001 | 'subroutine( .+?)\\('
0001 | 0001 | '\\ssubroutine\\s(.+)\\([^()]*\\)'



cluster 262 stats:
nPatterns: 3.0
nProjects: 1
shortest: (?i)\b(T)(is)\b
Features:

1: LIT|a literal character | 4.333333333333333
2: CG|a capture group | 2.0
3: WNW|word/non-word boundary | 2.0
4: OPT|options wrapper | 1.0


0000 | 0001 | '(?i)\\b(T)(is)\\b'
0001 | 0001 | '(?i)\\b(T)(was)\\b'
0002 | 0001 | '(?i)\\b(can)(not)\\b'



cluster 263 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^.*VTK_LEGACY.*$
Features:

1: LIT|a literal character | 16.0
2: KLE|zero-or-more repetition | 3.5
3: ANY|any non-newline char | 3.0
4: CG|a capture group | 1.0
5: STR|start-of-line | 1.0
6: END|end-of-line | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '^.*VTK_LEGACY.*$'
0001 | 0001 | '^\\+.*VTK_LEGACY_BODY\\((.*),\\s*"(.*)"\\).*\n'



cluster 264 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^} *\/\* *(?P<n>.*) *\*\/$
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 4.0
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: PNG|named capture group | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^} *\\/\\* *(?P<n>.*) *\\*\\/$'
0001 | 0001 | '^ *\\/\\* *(?P<msg>.*) \\*\\/ *$'



cluster 265 stats:
nPatterns: 2.0
nProjects: 1
shortest: http(s)?://(www.)?facebook.com/
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: QST|zero-or-one repetition | 2.0


0000 | 0001 | 'http(s)?://(www.)?facebook.com/'
0001 | 0001 | 'http(s)?://(www.)?linkedin.com/'



cluster 266 stats:
nPatterns: 2.0
nProjects: 1
shortest: \s*[:_\t]+\s*|\s{2,}|\n
Features:

1: LIT|a literal character | 6.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.5
5: CCC|custom character class | 1.0
6: LWB|at least n repetition | 1.0
7: OR|logical or | 1.0


0000 | 0001 | '\\s*[:_\t]+\\s*|\\s{2,}|\n'
0001 | 0001 | '\\s*[,/&.]\\s*|\\s+and\\s+|\\s{2,}|\n'



cluster 267 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^Fan.#([0-9]+).information:$
Features:

1: LIT|a literal character | 22.0
2: ANY|any non-newline char | 2.5
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: RNG|chars within a range | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^Fan.#([0-9]+).information:$'
0001 | 0001 | '^Server.Blade.#([0-9]+).Information:$'



cluster 268 stats:
nPatterns: 2.0
nProjects: 1
shortest: ''(?P<t>[^\s']+( +[^\s']+)*)''
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 3.0
3: NCCC|negated CCC | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: KLE|zero-or-more repetition | 1.0
6: PNG|named capture group | 1.0
7: CG|a capture group | 0.5
8: NCG|group without capturing | 0.5


0000 | 0001 | "''(?P<t>[^\\s']+( +[^\\s']+)*)''"
0001 | 0001 | "''(?P<t>[^\\s']+(?: +[^\\s']+)*)''"



cluster 269 stats:
nPatterns: 2.0
nProjects: 1
shortest: About\((.*)\).should
Features:

1: LIT|a literal character | 20.0
2: ANY|any non-newline char | 2.5
3: CG|a capture group | 1.5
4: KLE|zero-or-more repetition | 1.5


0000 | 0001 | 'About\\((.*)\\).should'
0001 | 0001 | 'About\\((.*)\\).should_not_include\\((.*)\\)'



cluster 270 stats:
nPatterns: 2.0
nProjects: 1
shortest: \W\xd1\x8e\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 7.0
2: NWRD|non-word chars | 2.0


0000 | 0001 | '\\W\xd1\x8e\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'



cluster 271 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^(.*?\.pyc?):(\d+):\s+(.*)$
Features:

1: LIT|a literal character | 11.5
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: KLE|zero-or-more repetition | 2.0
5: ANY|any non-newline char | 1.5
6: DEC|any of: 0123456789 | 1.0
7: STR|start-of-line | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
9: END|end-of-line | 0.5
10: LZY|as few reps as possible | 0.5
11: NCCC|negated CCC | 0.5
12: QST|zero-or-one repetition | 0.5


0000 | 0001 | '^(.*?\\.pyc?):(\\d+):\\s+(.*)$'
0001 | 0001 | '^([^:]*):(\\d+):\\s+(pdfTeX warning.*)'



cluster 272 stats:
nPatterns: 1.0
nProjects: 1
shortest: \xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xba\xd0\xbe\xd1\x81\xd0\xb8\xd0\xbd\xd0\xbe
Features:

1: LIT|a literal character | 20.0


0000 | 0001 | '\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xba\xd0\xbe\xd1\x81\xd0\xb8\xd0\xbd\xd0\xbe'



cluster 273 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^nic\.\d+\.dns_auto_build\.\d+$
Features:

1: LIT|a literal character | 21.0
2: ADD|one-or-more repetition | 2.0
3: DEC|any of: 0123456789 | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^nic\\.\\d+\\.dns_auto_build\\.\\d+$'
0001 | 0001 | '^nic\\.\\d+\\.dns_has_conflict\\.\\d+$'



cluster 274 stats:
nPatterns: 2.0
nProjects: 1
shortest: \s*([^\s\(\)"\\'\-=\[\]]+)\s*
Features:

1: LIT|a literal character | 10.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NCCC|negated CCC | 1.0


0000 | 0001 | '\\s*([^\\s\\(\\)"\\\'\\-=\\[\\]]+)\\s*'
0001 | 0001 | '\\s*([^\\s\\(\\)"\\\'\\-=,\\[\\]/]+)\\s*'



cluster 275 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^GlueSiteUniqueID=(.*)
Features:

1: LIT|a literal character | 22.666666666666668
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 0.6666666666666666


0000 | 0001 | '^GlueSiteUniqueID=(.*)'
0001 | 0001 | '^GlueSiteUniqueID: (.*)'
0002 | 0001 | 'GlueForeignKey: GlueSiteUniqueID=(.*)'



cluster 276 stats:
nPatterns: 3.0
nProjects: 1
shortest: [-d]  (setuptools|distribute)
Features:

1: LIT|a literal character | 24.666666666666668
2: ANY|any non-newline char | 0.6666666666666666
3: CG|a capture group | 0.6666666666666666
4: KLE|zero-or-more repetition | 0.6666666666666666
5: OR|logical or | 0.6666666666666666
6: ADD|one-or-more repetition | 0.3333333333333333
7: CCC|custom character class | 0.3333333333333333
8: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0001 | '[-d]  (setuptools|distribute)'
0001 | 0001 | 'Downloading.*setuptools.*egg\n'
0002 | 0001 | 'Got (setuptools|distribute) \\S+'



cluster 277 stats:
nPatterns: 2.0
nProjects: 1
shortest: \[commit=(\d\d\d\d[-/]\d\d[-/]\d\d)\]
Features:

1: LIT|a literal character | 11.0
2: DEC|any of: 0123456789 | 8.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: ADD|one-or-more repetition | 1.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: NWSP|any non-whitespace | 0.5
8: QST|zero-or-one repetition | 0.5


0000 | 0001 | '\\[commit=(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)\\]'
0001 | 0001 | '#date(\\s+(\\S+))?\\s+(\\d\\d\\d\\d[-/]\\d\\d[-/]\\d\\d)'



cluster 278 stats:
nPatterns: 2.0
nProjects: 1
shortest: \xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd[e .\n]
Features:

1: LIT|a literal character | 15.0
2: CCC|custom character class | 0.5


0000 | 0001 | '\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd[e .\n]'
0001 | 0001 | '\xd0\xbc\xd0\xb0\xd1\x80\xd1\x8c\xd0\xb8\xd0\xbd\xd0\xbe'



cluster 279 stats:
nPatterns: 2.0
nProjects: 1
shortest: ([A-Za-z0-9_]+\s+)+([*A-Za-z0-9_::]+)\s*\([^)]*\)
Features:

1: LIT|a literal character | 29.5
2: RNG|chars within a range | 6.0
3: ADD|one-or-more repetition | 4.0
4: CG|a capture group | 2.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.5
6: CCC|custom character class | 2.0
7: KLE|zero-or-more repetition | 2.0
8: NCCC|negated CCC | 1.0
9: OR|logical or | 0.5


0000 | 0001 | '([A-Za-z0-9_]+\\s+)+([*A-Za-z0-9_::]+)\\s*\\([^)]*\\)'
0001 | 0001 | '(public|private|protected)\\s([A-Za-z0-9_]+\\s+)+([A-Za-z0-9_]+)\\s*\\([^)]*\\)'



cluster 280 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^1.2.840.10008.[0-9.]+ (.*)$
Features:

1: LIT|a literal character | 27.333333333333332
2: ANY|any non-newline char | 5.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: RNG|chars within a range | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^1.2.840.10008.[0-9.]+ (.*)$'
0001 | 0001 | '^1.2.840.10008.[0-9.]+ (.*) \\(Retired\\)$'
0002 | 0001 | '^1.2.840.10008.[0-9.]+ (.*) Well-known frame of reference$'



cluster 281 stats:
nPatterns: 3.0
nProjects: 1
shortest: [0-9]{4}-[0-9]{2}-[0-9]{2}
Features:

1: LIT|a literal character | 18.0
2: CCC|custom character class | 5.0
3: RNG|chars within a range | 5.0
4: SNG|exactly n repetition | 5.0
5: ANY|any non-newline char | 0.6666666666666666


0000 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}'
0001 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}_cc.csv'
0002 | 0001 | 'cc_[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.csv'



cluster 282 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^(?P<area>[17]\d\d\d)(?P<station>\d+)$
Features:

1: DEC|any of: 0123456789 | 4.333333333333333
2: LIT|a literal character | 3.3333333333333335
3: PNG|named capture group | 2.6666666666666665
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: CCC|custom character class | 0.6666666666666666
8: SNG|exactly n repetition | 0.6666666666666666
9: OR|logical or | 0.3333333333333333


0000 | 0001 | '^(?P<area>[17]\\d\\d\\d)(?P<station>\\d+)$'
0001 | 0001 | '^(?P<area>[235]\\d)(?P<area2>\\d{4})(?P<station>\\d+)$'
0002 | 0001 | '^(?P<area>1\\d1|11\\d|8\\d\\d)(?P<area2>\\d{3})(?P<station>\\d+)$'



cluster 283 stats:
nPatterns: 6.0
nProjects: 1
shortest: ^std::__debug::list<.*>$
Features:

1: LIT|a literal character | 25.666666666666668
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^std::__debug::list<.*>$'
0001 | 0001 | '^std::unordered_set<.*>$'
0002 | 0001 | '^std::unordered_multimap<.*>$'
0003 | 0001 | '^std::unordered_multiset<.*>$'
0004 | 0001 | '^std::tr1::unordered_multiset<.*>$'
0005 | 0001 | '^std::__debug::unordered_multimap<.*>$'



cluster 284 stats:
nPatterns: 3.0
nProjects: 1
shortest: \xd0\xbe\xd1\x82\xd1\x80\xd0\xb0\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb5
Features:

1: LIT|a literal character | 20.0
2: CG|a capture group | 0.6666666666666666
3: OR|logical or | 0.3333333333333333


0000 | 0001 | '\xd0\xbe\xd1\x82\xd1\x80\xd0\xb0\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb5'
0001 | 0001 | '(\xd0\xbb\xd0\xb0\xd0\xb4\xd0\xbe\xd0\xb6\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0002 | 0001 | '\xd1\x86\xd0\xb5\xd0\xbd\xd1\x82\xd1\x80\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd(\xd1\x8b\xd0\xb9|\xd0\xbe\xd0\xbc)'



cluster 285 stats:
nPatterns: 6.0
nProjects: 1
shortest: \xd1\x82\xd1\x80\xd1\x83\xd0\xb1\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
Features:

1: LIT|a literal character | 23.166666666666668
2: CG|a capture group | 1.0
3: OR|logical or | 0.8333333333333334


0000 | 0001 | '\xd1\x82\xd1\x80\xd1\x83\xd0\xb1\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0001 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0002 | 0001 | '(\xd0\xb3\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xb2\xd0\xbe\xd1\x80)'
0003 | 0001 | '\xd0\xb2\xd0\xb0\xd1\x80\xd1\x88\xd0\xb0\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0004 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xb0\xd1\x82\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0005 | 0001 | '\xd0\xbe\xd0\xba\xd1\x82\xd1\x8f\xd0\xb1\xd1\x80\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'



