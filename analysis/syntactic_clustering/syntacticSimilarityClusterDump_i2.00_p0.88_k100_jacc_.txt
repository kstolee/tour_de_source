Cluster stats:

nClusters: 51
TotalPatterns: 109
totalnProjects: 180
suffix: _i2.00_p0.88_k100_jacc_


cluster 0 stats:
nPatterns: 2.0
nProjects: 42
shortest: \n
Features:

1: LIT|a literal character | 1.0


0000 | 0041 | '\n'
0001 | 0001 | u'\n'



cluster 1 stats:
nPatterns: 2.0
nProjects: 40
shortest: <!\s+([^<>]*)>
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 1.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NCCC|negated CCC | 1.0
7: STR|start-of-line | 0.5


0000 | 0035 | '<!\\s+([^<>]*)>'
0001 | 0005 | '^(\\s*<[^>]+>\\s*)'



cluster 2 stats:
nPatterns: 2.0
nProjects: 32
shortest: [a-zA-Z][-_.:a-zA-Z0-9]*\s*
Features:

1: LIT|a literal character | 14.0
2: RNG|chars within a range | 5.0
3: CCC|custom character class | 2.0
4: KLE|zero-or-more repetition | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0018 | '[a-zA-Z][-_.:a-zA-Z0-9]*\\s*'
0001 | 0015 | '[a-zA-Z][-_.a-zA-Z0-9:]*\\s*'



cluster 3 stats:
nPatterns: 2.0
nProjects: 24
shortest: >\s+<
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0020 | '>\\s+<'
0001 | 0004 | u'>\\s+<'



cluster 4 stats:
nPatterns: 2.0
nProjects: 20
shortest: &(?!(\w+|#\d+);)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: NLKA|sequence doesn't follow  | 1.0
6: OR|logical or | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0016 | '&(?!(\\w+|#\\d+);)'
0001 | 0004 | u'&(?!(\\w+|#\\d+);)'



cluster 5 stats:
nPatterns: 2.0
nProjects: 19
shortest: <(/?)\s*i\s*>
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.0
5: QST|zero-or-one repetition | 1.0


0000 | 0016 | '<(/?)\\s*i\\s*>'
0001 | 0003 | u'<(/?)\\s*i\\s*>'



cluster 6 stats:
nPatterns: 4.0
nProjects: 19
shortest: ^([.]*).*$
Features:

1: KLE|zero-or-more repetition | 2.0
2: CG|a capture group | 1.75
3: LIT|a literal character | 1.75
4: ANY|any non-newline char | 1.5
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: CCC|custom character class | 0.25
8: NCCC|negated CCC | 0.25


0000 | 0014 | '^(.*)#([^#]*)$'
0001 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0002 | 0001 | '^([.]*).*$'
0003 | 0001 | '^\\[(.*)\\]$'



cluster 7 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^\d{11}$
Features:

1: DEC|any of: 0123456789 | 1.0
2: END|end-of-line | 1.0
3: SNG|exactly n repetition | 1.0
4: STR|start-of-line | 1.0


0000 | 0012 | '^\\d{11}$'
0001 | 0003 | u'^\\d{11}$'



cluster 8 stats:
nPatterns: 2.0
nProjects: 15
shortest: (?:(\w+)=)?(.+)
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.0
4: LIT|a literal character | 1.0
5: NCG|group without capturing | 1.0
6: QST|zero-or-one repetition | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0012 | '(?:(\\w+)=)?(.+)'
0001 | 0003 | u'(?:(\\w+)=)?(.+)'



cluster 9 stats:
nPatterns: 2.0
nProjects: 15
shortest: [A-Za-z0-9;/?:@&=+$,\-_\.!~*'\(\)%#]+$
Features:

1: LIT|a literal character | 41.5
2: RNG|chars within a range | 5.5
3: KLE|zero-or-more repetition | 3.5
4: CCC|custom character class | 2.0
5: CG|a capture group | 1.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
7: NCCC|negated CCC | 1.0
8: ADD|one-or-more repetition | 0.5
9: END|end-of-line | 0.5
10: OR|logical or | 0.5
11: QST|zero-or-one repetition | 0.5


0000 | 0014 | '\\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|"[^"]*"|[][\\-a-zA-Z0-9./,:;+*%?!&$\\(\\)_#=~\\\'"@]*))?'
0001 | 0001 | "[A-Za-z0-9;/?:@&=+$,\\-_\\.!~*'\\(\\)%#]+$"



cluster 10 stats:
nPatterns: 2.0
nProjects: 13
shortest: (?P<option>[^:=\s][^:=]*)\s*(?P<vi>[:=])\s*(?P<value>.*)$
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 4.0
3: PNG|named capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
5: NCCC|negated CCC | 2.0
6: ANY|any non-newline char | 1.0
7: CCC|custom character class | 1.0
8: END|end-of-line | 1.0
9: NCG|group without capturing | 0.5
10: QST|zero-or-one repetition | 0.5


0000 | 0013 | '(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'
0001 | 0003 | '(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$'



cluster 11 stats:
nPatterns: 2.0
nProjects: 10
shortest: \\$
Features:

1: END|end-of-line | 1.0
2: LIT|a literal character | 1.0


0000 | 0004 | '\\\\$'
0001 | 0001 | '\\$$'



cluster 12 stats:
nPatterns: 2.0
nProjects: 9
shortest: \n+
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 1.0


0000 | 0008 | '\n+'
0001 | 0001 | '\n\n+'



cluster 13 stats:
nPatterns: 2.0
nProjects: 9
shortest: \s*\*/\s*
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0008 | '\\s*/\\*\\s*\\*/'
0001 | 0001 | '\\s*\\*/\\s*'



cluster 14 stats:
nPatterns: 2.0
nProjects: 8
shortest: ;\s*
Features:

1: KLE|zero-or-more repetition | 1.5
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
3: LIT|a literal character | 1.0


0000 | 0005 | ';\\s*'
0001 | 0001 | '\\s*\\;\\s*'



cluster 15 stats:
nPatterns: 2.0
nProjects: 8
shortest: ^\s+.*context\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\s*
Features:

1: LIT|a literal character | 18.5
2: KLE|zero-or-more repetition | 5.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: LZY|as few reps as possible | 3.0
5: NCCC|negated CCC | 3.0
6: NCG|group without capturing | 3.0
7: ADD|one-or-more repetition | 2.5
8: CG|a capture group | 2.0
9: OR|logical or | 1.5
10: ANY|any non-newline char | 1.0
11: STR|start-of-line | 1.0
12: QST|zero-or-one repetition | 0.5


0000 | 0004 | '^\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\\s*'
0001 | 0004 | u'^\\s*trans\\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\\s+.*context\\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\\s*'



cluster 16 stats:
nPatterns: 2.0
nProjects: 6
shortest: ^\.\.\s+autosummary::\s*
Features:

1: LIT|a literal character | 15.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.5
3: KLE|zero-or-more repetition | 1.5
4: ADD|one-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0005 | '^\\.\\.\\s+autosummary::\\s*'
0001 | 0001 | '^\\s*\\.\\.\\s+autosummary::\\s*'



cluster 17 stats:
nPatterns: 3.0
nProjects: 6
shortest: .*\.([0-9]+)$
Features:

1: LIT|a literal character | 5.333333333333333
2: ADD|one-or-more repetition | 1.6666666666666667
3: CCC|custom character class | 1.6666666666666667
4: RNG|chars within a range | 1.6666666666666667
5: CG|a capture group | 1.3333333333333333
6: ANY|any non-newline char | 1.0
7: KLE|zero-or-more repetition | 1.0
8: END|end-of-line | 0.6666666666666666


0000 | 0004 | '(.*) \\(([0-9]+)\\)$'
0001 | 0001 | '.*\\.([0-9]+)$'
0002 | 0001 | '([0-9]+\\.[0-9]+\\.[0-9]+).*'



cluster 18 stats:
nPatterns: 2.0
nProjects: 5
shortest: (\S+)\s*(.*)
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: NWSP|any non-whitespace | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: LIT|a literal character | 0.5


0000 | 0004 | '(\\S+)\\s*(.*)'
0001 | 0001 | '(\\S+):\\s*(.*)'



cluster 19 stats:
nPatterns: 2.0
nProjects: 5
shortest: ([A-Z][a-z]+)
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 2.5
4: CG|a capture group | 1.5
5: ADD|one-or-more repetition | 1.0


0000 | 0003 | '([A-Z][a-z]+)'
0001 | 0002 | '([a-zA-Z]+)([A-Z][a-z])'



cluster 20 stats:
nPatterns: 3.0
nProjects: 5
shortest: [^a-zA-Z0-9_]+
Features:

1: LIT|a literal character | 7.333333333333333
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 0.6666666666666666
5: END|end-of-line | 0.6666666666666666
6: STR|start-of-line | 0.6666666666666666
7: NCCC|negated CCC | 0.3333333333333333


0000 | 0003 | u'^[-a-zA-Z0-9_]+$'
0001 | 0001 | '[^a-zA-Z0-9_]+'
0002 | 0001 | u'^[a-zA-Z0-9_]+$'



cluster 21 stats:
nPatterns: 2.0
nProjects: 4
shortest: (\d+)-(\d+)-(\d+)
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 3.0
3: DEC|any of: 0123456789 | 3.0
4: LIT|a literal character | 3.0


0000 | 0004 | '(\\d+)-(\\d+)-(\\d+)'
0001 | 0001 | '\\((\\d+)-(\\d+)-(\\d+)\\)'



cluster 22 stats:
nPatterns: 2.0
nProjects: 3
shortest: <(.*?)(?<!-)>
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: CG|a capture group | 0.5
6: NLKB|sequence doesn't precede | 0.5
7: OPT|options wrapper | 0.5


0000 | 0002 | '(?s)<!--.*?-->'
0001 | 0001 | '<(.*?)(?<!-)>'



cluster 23 stats:
nPatterns: 2.0
nProjects: 3
shortest: ([a-zA-Z0-9_.]+)
Features:

1: LIT|a literal character | 8.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.5
4: CCC|custom character class | 1.5
5: CG|a capture group | 1.5


0000 | 0003 | '([-0-9.]+)([a-zA-Z]+)'
0001 | 0001 | '([a-zA-Z0-9_.]+)'



cluster 24 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^[a-zA-Z0-9_\.]+$
Features:

1: LIT|a literal character | 8.5
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0002 | '^[a-zA-Z0-9_\\.]+$'
0001 | 0001 | '^[a-zA-Z0-9_\\-\\.]+$'



cluster 25 stats:
nPatterns: 2.0
nProjects: 3
shortest: .*?_([a-z]*)_pid\d*$
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 3.0
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 1.0
8: LZY|as few reps as possible | 1.0
9: RNG|chars within a range | 1.0


0000 | 0002 | '.*?_([a-z]*)_pid(\\d*)$'
0001 | 0001 | '.*?_([a-z]*)_pid\\d*$'



cluster 26 stats:
nPatterns: 2.0
nProjects: 3
shortest: [a-zA-Z][a-zA-Z0-9_]*$
Features:

1: LIT|a literal character | 11.5
2: RNG|chars within a range | 5.0
3: CCC|custom character class | 2.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0


0000 | 0002 | '[A-Za-z_][A-Za-z0-9_]*$'
0001 | 0001 | '[a-zA-Z][a-zA-Z0-9_]*$'



cluster 27 stats:
nPatterns: 2.0
nProjects: 3
shortest: [$][{]\d+:([^}]+)[}]
Features:

1: LIT|a literal character | 5.5
2: ADD|one-or-more repetition | 2.5
3: CCC|custom character class | 1.5
4: CG|a capture group | 1.5
5: DEC|any of: 0123456789 | 1.5
6: NCCC|negated CCC | 1.0
7: OR|logical or | 0.5


0000 | 0002 | '[$][{]\\d+:([^}]+)[}]'
0001 | 0001 | '\\$(\\d+)|\\$\\{(\\d+):[^\\}]+\\}'



cluster 28 stats:
nPatterns: 2.0
nProjects: 2
shortest: [,\n]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[,\n]'
0001 | 0001 | '[\n,]'



cluster 29 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^[^\.]+
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^[^\\.]+'
0001 | 0001 | '^[^\\.]+\\.'



cluster 30 stats:
nPatterns: 2.0
nProjects: 2
shortest: [a-zA-Z]+
Features:

1: LIT|a literal character | 4.5
2: RNG|chars within a range | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0


0000 | 0001 | '[A-Za-z_]+'
0001 | 0001 | u'[a-zA-Z]+'



cluster 31 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^([-\w]+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: STR|start-of-line | 0.5
6: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '^([-\\w]+)'
0001 | 0001 | '([\\+\\-\\^]+)'



cluster 32 stats:
nPatterns: 2.0
nProjects: 2
shortest: \(\d+\)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.5
3: DEC|any of: 0123456789 | 1.5
4: CG|a capture group | 1.0


0000 | 0001 | '\\(\\d+\\)'
0001 | 0001 | '(\\d+)\\((\\d+)\\)'



cluster 33 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?<!\\)\|
Features:

1: LIT|a literal character | 2.5
2: NLKB|sequence doesn't precede | 1.0
3: NLKA|sequence doesn't follow  | 0.5


0000 | 0001 | '(?<!\\\\)\\|'
0001 | 0001 | '(?<!\\|)\\|(?!\\|)'



cluster 34 stats:
nPatterns: 2.0
nProjects: 2
shortest: /\(.*\)/
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 1.5


0000 | 0001 | '/\\(.*\\)/'
0001 | 0001 | '\\((.*)/(.*)/(.*)\\)'



cluster 35 stats:
nPatterns: 2.0
nProjects: 2
shortest: [\w\d\-_\.]+
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: DEC|any of: 0123456789 | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '[\\w\\d\\-_\\.]+'
0001 | 0001 | '[\\w\\d_\\.\\-]+'



cluster 36 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?ims)<tr[^>]*>.*?</tr>
Features:

1: LIT|a literal character | 10.5
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: LZY|as few reps as possible | 1.0
5: NCCC|negated CCC | 1.0
6: OPT|options wrapper | 1.0


0000 | 0001 | '(?ims)<tr[^>]*>.*?</tr>'
0001 | 0001 | '(?is)<tr [^>]*>.*?</tr>'



cluster 37 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(.*) ?\[([^ ]*) \+(0x[0-9A-F]{1,8})\](.*)$
Features:

1: LIT|a literal character | 14.5
2: CG|a capture group | 4.5
3: KLE|zero-or-more repetition | 3.5
4: RNG|chars within a range | 2.5
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 1.5
7: DBB|$n\le x \le m$ repetition | 1.0
8: END|end-of-line | 1.0
9: NCCC|negated CCC | 1.0
10: QST|zero-or-one repetition | 1.0
11: STR|start-of-line | 1.0


0000 | 0002 | '^(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'
0001 | 0002 | '^([ \\|0-9-]*)(.*) ?\\[([^ ]*) \\+(0x[0-9A-F]{1,8})\\](.*)$'



cluster 38 stats:
nPatterns: 2.0
nProjects: 2
shortest: [-+]?(\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?
Features:

1: LIT|a literal character | 8.5
2: DEC|any of: 0123456789 | 5.5
3: QST|zero-or-one repetition | 4.0
4: ADD|one-or-more repetition | 3.5
5: CG|a capture group | 3.5
6: CCC|custom character class | 3.0
7: KLE|zero-or-more repetition | 2.0
8: NCG|group without capturing | 1.5
9: OR|logical or | 1.5


0000 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0001 | 0001 | '([-+]?((?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[eE]((?:[-+]?\\d+)?)|(\\d+\\.\\d*))'



cluster 39 stats:
nPatterns: 2.0
nProjects: 2
shortest: \s+at\s(?P<file>[^:]+):?(?P<row>\d+)?:?(?P<col>\d+)?
Features:

1: LIT|a literal character | 7.5
2: ADD|one-or-more repetition | 4.5
3: QST|zero-or-one repetition | 4.5
4: PNG|named capture group | 3.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
6: DEC|any of: 0123456789 | 2.0
7: NCCC|negated CCC | 1.0
8: ANY|any non-newline char | 0.5
9: NCG|group without capturing | 0.5


0000 | 0002 | '\\s+at\\s(?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?'
0001 | 0002 | '\\s+at\\s(?:new\\s)?(?P<func>.+)\\s\\((?P<file>[^:]+):?(?P<row>\\d+)?:?(?P<col>\\d+)?\\)'



cluster 40 stats:
nPatterns: 2.0
nProjects: 1
shortest: \n|\\
Features:

1: LIT|a literal character | 3.0
2: OR|logical or | 1.0


0000 | 0001 | '\\n|\\\\'
0001 | 0001 | '\\\\n|\\\\\\\\'



cluster 41 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^std::unordered_multiset<.*>$
Features:

1: LIT|a literal character | 27.5
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^std::unordered_multiset<.*>$'
0001 | 0001 | '^std::tr1::unordered_multiset<.*>$'



cluster 42 stats:
nPatterns: 2.0
nProjects: 1
shortest: ''(?P<t>[^\s']+( +[^\s']+)*)''
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 3.0
3: NCCC|negated CCC | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: KLE|zero-or-more repetition | 1.0
6: PNG|named capture group | 1.0
7: CG|a capture group | 0.5
8: NCG|group without capturing | 0.5


0000 | 0001 | "''(?P<t>[^\\s']+( +[^\\s']+)*)''"
0001 | 0001 | "''(?P<t>[^\\s']+(?: +[^\\s']+)*)''"



cluster 43 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^std::unordered_multimap<.*>$
Features:

1: LIT|a literal character | 29.5
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^std::unordered_multimap<.*>$'
0001 | 0001 | '^std::__debug::unordered_multimap<.*>$'



cluster 44 stats:
nPatterns: 2.0
nProjects: 1
shortest: \W\xd1\x8e\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 7.0
2: NWRD|non-word chars | 2.0


0000 | 0001 | '\\W\xd1\x8e\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'



cluster 45 stats:
nPatterns: 2.0
nProjects: 1
shortest: (\d{4})-(\d{2})-(\d{2})[\s\t]*([0-9:, -]+)
Features:

1: LIT|a literal character | 10.5
2: CG|a capture group | 4.5
3: DEC|any of: 0123456789 | 3.5
4: SNG|exactly n repetition | 3.0
5: CCC|custom character class | 2.0
6: ADD|one-or-more repetition | 1.5
7: KLE|zero-or-more repetition | 1.0
8: RNG|chars within a range | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'
0001 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2}) / (\\d+)[\\s\t]*([0-9:, -]+)'



cluster 46 stats:
nPatterns: 2.0
nProjects: 1
shortest: [0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}_cc.csv
Features:

1: LIT|a literal character | 23.0
2: CCC|custom character class | 6.0
3: RNG|chars within a range | 6.0
4: SNG|exactly n repetition | 6.0
5: ANY|any non-newline char | 1.0


0000 | 0001 | '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}_cc.csv'
0001 | 0001 | 'cc_[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.csv'



cluster 47 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^(.+?)[ \._\-][Ss]([0-9]+)[\.\- ]?[Ee]([0-9]+)[^\/]*$
Features:

1: LIT|a literal character | 17.0
2: CCC|custom character class | 5.5
3: ADD|one-or-more repetition | 3.0
4: CG|a capture group | 3.0
5: LZY|as few reps as possible | 2.0
6: RNG|chars within a range | 2.0
7: ANY|any non-newline char | 1.0
8: END|end-of-line | 1.0
9: KLE|zero-or-more repetition | 1.0
10: NCCC|negated CCC | 1.0
11: QST|zero-or-one repetition | 1.0
12: STR|start-of-line | 1.0


0000 | 0001 | '^(.+?)[ \\._\\-][Ss]([0-9]+)[\\.\\- ]?[Ee]([0-9]+)[^\\/]*$'
0001 | 0001 | '^(.+?)[ \\._\\-]\\[[Ss]([0-9]+?)\\]_\\[[Ee]([0-9]+?)\\]?[^\\/]*$'



cluster 48 stats:
nPatterns: 2.0
nProjects: 1
shortest: (`(?:[^`]|``)+`|\w+)(?:(?:\:)(`(?:[^`]|``)+`|\w+))?
Features:

1: LIT|a literal character | 17.0
2: NCG|group without capturing | 6.5
3: ADD|one-or-more repetition | 6.0
4: OR|logical or | 6.0
5: CG|a capture group | 3.0
6: NCCC|negated CCC | 3.0
7: WRD|[a-zA-Z0-9\_] | 3.0
8: QST|zero-or-one repetition | 1.5


0000 | 0001 | '(`(?:[^`]|``)+`|\\w+)(?:(?:\\:)(`(?:[^`]|``)+`|\\w+))?'
0001 | 0001 | '(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?(?:\\:)(`(?:[^`]|``)+`|\\w+)(?:(?:\\.)(`(?:[^`]|``)+`|\\w+))?'



cluster 49 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^\([0-9a-fA-Fx]+,[0-9a-fA-F]+\)\s+(.*)\s+[A-Z][A-Z]\s+([0-9n-]+)\s+RET\s*$
Features:

1: LIT|a literal character | 27.0
2: RNG|chars within a range | 9.0
3: ADD|one-or-more repetition | 7.0
4: CCC|custom character class | 5.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
6: CG|a capture group | 4.0
7: KLE|zero-or-more repetition | 2.0
8: ANY|any non-newline char | 1.0
9: END|end-of-line | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^\\([0-9a-fA-Fx]+,[0-9a-fA-F]+\\)\\s+(.*)\\s+[A-Z][A-Z]\\s+([0-9n-]+)\\s+RET\\s*$'
0001 | 0001 | '^\\(([0-9a-fA-Fx]+),([0-9a-fA-F]+)\\)\\s+(.*)\\s+([A-Z][A-Z])\\s+([0-9n-]+)\\s+(RET)\\s*$'



cluster 50 stats:
nPatterns: 5.0
nProjects: 1
shortest: \xd1\x82\xd1\x80\xd1\x83\xd0\xb1\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
Features:

1: LIT|a literal character | 22.8
2: CG|a capture group | 1.0
3: OR|logical or | 1.0


0000 | 0001 | '\xd1\x82\xd1\x80\xd1\x83\xd0\xb1\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0001 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0002 | 0001 | '\xd0\xb2\xd0\xb0\xd1\x80\xd1\x88\xd0\xb0\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0003 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xb0\xd1\x82\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0004 | 0001 | '\xd0\xbe\xd0\xba\xd1\x82\xd1\x8f\xd0\xb1\xd1\x80\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'



