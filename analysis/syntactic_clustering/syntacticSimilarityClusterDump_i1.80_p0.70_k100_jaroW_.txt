Cluster stats:

nClusters: 206
TotalPatterns: 1098
totalnProjects: 685
suffix: _i1.80_p0.70_k100_jaroW_


cluster 0 stats:
nPatterns: 137.0
nProjects: 194
shortest: ^
Features:

1: LIT|a literal character | 3.9124087591240877
2: CG|a capture group | 0.9781021897810219
3: ADD|one-or-more repetition | 0.8175182481751825
4: STR|start-of-line | 0.7007299270072993
5: KLE|zero-or-more repetition | 0.5182481751824818
6: ANY|any non-newline char | 0.5109489051094891
7: END|end-of-line | 0.45255474452554745
8: DEC|any of: 0123456789 | 0.39416058394160586
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.291970802919708
10: CCC|custom character class | 0.22627737226277372
11: OR|logical or | 0.13138686131386862
12: QST|zero-or-one repetition | 0.11678832116788321
13: NWSP|any non-whitespace | 0.10948905109489052
14: WRD|[a-zA-Z0-9\_] | 0.10948905109489052
15: SNG|exactly n repetition | 0.10218978102189781
16: RNG|chars within a range | 0.0948905109489051
17: DBB|$n\le x \le m$ repetition | 0.08759124087591241
18: NCG|group without capturing | 0.08029197080291971
19: NCCC|negated CCC | 0.043795620437956206
20: LZY|as few reps as possible | 0.0364963503649635
21: NWRD|non-word chars | 0.029197080291970802
22: LWB|at least n repetition | 0.021897810218978103
23: BKR|match the $i^{th}$ CG | 0.0072992700729927005


0000 | 0021 | u'^(?:=)$'
0001 | 0021 | '\\(.*?\\)'
0002 | 0017 | '(\\(|\\)|\\s+)'
0003 | 0015 | u'^\\d+$'
0004 | 0012 | '^(\\d{10})$'
0005 | 0009 | '(\\W+)'
0006 | 0009 | ':\\d+$'
0007 | 0009 | '^(\\s+)'
0008 | 0009 | '(\\033|~{)'
0009 | 0008 | '(:*)'
0010 | 0008 | '$(\\w+)'
0011 | 0008 | '^x{1,2}$'
0012 | 0008 | '^(?:(a)|c)(\\1)$'
0013 | 0006 | '^\\W+'
0014 | 0006 | '^\\[.*\\]$'
0015 | 0005 | "^'(.*)'$"
0016 | 0005 | '(\\S+)\\s+(\\S+)'
0017 | 0005 | '^\\d{15}(\\d{2}[0-9xX])?$'
0018 | 0005 | '^(?:(?:00|\\+)386|0)(\\d{7,8})$'
0019 | 0004 | ' |\\('
0020 | 0004 | '^(\\s*)(def .+:|class .+:)'
0021 | 0003 | '^-?\\d'
0022 | 0003 | '"(.*?)"'
0023 | 0003 | '^(?:=)$'
0024 | 0003 | '^quit.*'
0025 | 0003 | '^rebt.*'
0026 | 0003 | '^\\[.*\\]'
0027 | 0003 | "(''')\\s*$"
0028 | 0003 | u'(\\.|\\s)'
0029 | 0003 | u'.{1,2047}'
0030 | 0003 | u'^(\\d{10})$'
0031 | 0003 | u'(\\.|\\s|/|-)'
0032 | 0003 | '^(.+)[:(]\\d+[:)]'
0033 | 0003 | u'^\\d+(\\.\\d+)*$'
0034 | 0003 | '^(\\w+)=([a-f0-9]+)'
0035 | 0003 | '^([^<]+)[<]?(.*)[>]?$'
0036 | 0003 | '^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0037 | 0002 | '^'
0038 | 0002 | '[:@/]'
0039 | 0002 | '(Y=.*)'
0040 | 0002 | '^[#/;]'
0041 | 0002 | '^(X|A)$'
0042 | 0002 | '^/admin'
0043 | 0002 | '(\\s|,)+'
0044 | 0002 | '^compile'
0045 | 0002 | '^\\S+\\s+'
0046 | 0002 | '^(.+?)_(.+)$'
0047 | 0002 | '^(\\s*)<.+> '
0048 | 0002 | '^(.+)<(.+)>(.*)$'
0049 | 0002 | '^\\s+:template:\\s*(.*?)\\s*$'
0050 | 0002 | '^(?:852-?)?(\\d{4})[-\\.]?(\\d{4})$'
0051 | 0002 | '^(\\s+\\(release-func\\s+)(\\w+)(.*)$'
0052 | 0002 | '^(\\+[3-9]{1,}|\\+{3,}|\\+[1-9][0-9]+)$'
0053 | 0002 | '^(\\s+\\(return-type\\s+)([^\\s]+)(\\s*\\))$'
0054 | 0001 | '^.__'
0055 | 0001 | '^\\('
0056 | 0001 | '^cm_'
0057 | 0001 | '^_\\('
0058 | 0001 | '^enum'
0059 | 0001 | u'(x*)'
0060 | 0001 | "'(.*)'"
0061 | 0001 | '^Shift'
0062 | 0001 | '^\\..*'
0063 | 0001 | "'(.*)'$"
0064 | 0001 | '(\\\\")'
0065 | 0001 | '(\\w+;)'
0066 | 0001 | ':(\\w+)'
0067 | 0001 | '^(\\?+)'
0068 | 0001 | '^-(.*)$'
0069 | 0001 | '^.const'
0070 | 0001 | '^//(.*)'
0071 | 0001 | '^@\\w+$'
0072 | 0001 | '^COMPND'
0073 | 0001 | '^ChkTeX'
0074 | 0001 | '^Tracks'
0075 | 0001 | '{(.*)}$'
0076 | 0001 | '{(.*?)}'
0077 | 0001 | "^'(.+)'@"
0078 | 0001 | '(\\.py)$'
0079 | 0001 | '(\\s|_)+'
0080 | 0001 | ':(?://)?'
0081 | 0001 | '>(\\d+)$'
0082 | 0001 | '\\) (.*)'
0083 | 0001 | '\\S{1,10}'
0084 | 0001 | '^(.*)"""$'
0085 | 0001 | '^(Sch|S)A'
0086 | 0001 | '^\\{.+\\}'
0087 | 0001 | '^private_'
0088 | 0001 | '(\\w+).py$'
0089 | 0001 | '(\\{.+\\})'
0090 | 0001 | '^([@+])?.*'
0091 | 0001 | '^/cgi-bin/'
0092 | 0001 | '^Note :.*$'
0093 | 0001 | '^SEQLENGTH'
0094 | 0001 | '^\\(.*\\)$'
0095 | 0001 | '^\\d+-\\d+'
0096 | 0001 | '{(\\d+)\\}'
0097 | 0001 | '\\A( *\\n)+'
0098 | 0001 | '^(\\:)(.*)$'
0099 | 0001 | '^(\\s+)\\S+'
0100 | 0001 | '^.htaccess$'
0101 | 0001 | '^[@]+|[@]+$'
0102 | 0001 | '^timeout.*/'
0103 | 0001 | u'tt(\\d+)/$'
0104 | 0001 | '^\\[(.*)\\]$'
0105 | 0001 | '(\\w+://)(.+)'
0106 | 0001 | '.*/(\\w+).kcm'
0107 | 0001 | '^\\..*\\.swp$'
0108 | 0001 | u'^ur\\d{7,8}$'
0109 | 0001 | '([^\\.])+\\..*$'
0110 | 0001 | '^([^:]+):.(.*)$'
0111 | 0001 | '^(\\d+)\\s(.*)$'
0112 | 0001 | '^/favicon\\.ico$'
0113 | 0001 | '^\\+\\+\\+ (.*)$'
0114 | 0001 | '^(.+):(\\d{1,5})$'
0115 | 0001 | '^(R|RR)(_(\\d+))?$'
0116 | 0001 | '^(\\S+ +\\S+)\\s*$'
0117 | 0001 | '^\\d+(\\.\\d+){1,}$'
0118 | 0001 | '^\\d+\\-\\d+\\-\\d+$'
0119 | 0001 | '(\\w+) (\\w)\\. (\\w+)'
0120 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'
0121 | 0001 | '^ (\\S+) (\\d+)/(\\d+)'
0122 | 0001 | '^queryCid(\\(.+\\))\\s*$'
0123 | 0001 | '(\\S+[.]savespace[(].*[)])'
0124 | 0001 | '^\\d{4}\\.\\d{2}\\.\\d{2}$'
0125 | 0001 | '^\\+.*VTK_LEGACY\\((.*)\\).*\n'
0126 | 0001 | '^\\#!\\s?([^\\s]+)(?:\\s([^\\s]+))?'
0127 | 0001 | '^(\\S+)\\t(\\S+)\\t(\\S+)\\t(.+)\\n$'
0128 | 0001 | '^(\\d+)\\W(\\w+)\\W(\\w+)[ \t]+(.*)$'
0129 | 0001 | '^(\\w+):\\s.*<(.*)>\\smtu\\s(\\d+)\\s.*'
0130 | 0001 | '^(?:[A-Z]{1}\\.{1}|[A-Z]{1}\\.{1}[A-Z]{1})+$'
0131 | 0001 | '^\\(\\[(\\S+)\\],\\[(\\S+)\\],\\[(\\S+)\\]\\)$'
0132 | 0001 | '^(\\s*(\\[\\[image((\\(.*\\))|())\\]\\])\\s*)+$'
0133 | 0001 | '^(\\d+)(?:([yzafpnumcdhkKMGTPEZY])(i)?)?([Bb])?$'
0134 | 0001 | '^(\\d{4,4}-\\d{2,2}-\\d{2,2}T\\d{2,2}:\\d{2,2}:\\d{2,2})\\.\\d*Z$'
0135 | 0001 | '^\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+cmyk'
0136 | 0001 | '^\\(([0-9a-fx]+),([0-9a-fx]+)\\)[ \t]+VERS=.*[ \t]+VR="(.*)"[ \t]+VM="(.*)"[ \t]+Keyword=.*[ \t]+Name="(.*)"$'



cluster 1 stats:
nPatterns: 32.0
nProjects: 105
shortest: \s*>$
Features:

1: LIT|a literal character | 6.4375
2: KLE|zero-or-more repetition | 2.21875
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.9375
4: CG|a capture group | 0.75
5: ANY|any non-newline char | 0.4375
6: ADD|one-or-more repetition | 0.3125
7: END|end-of-line | 0.28125
8: OR|logical or | 0.21875
9: NCCC|negated CCC | 0.125
10: CCC|custom character class | 0.09375
11: DEC|any of: 0123456789 | 0.0625
12: QST|zero-or-one repetition | 0.0625
13: RNG|chars within a range | 0.0625
14: STR|start-of-line | 0.0625
15: BKR|match the $i^{th}$ CG | 0.03125
16: LZY|as few reps as possible | 0.03125
17: NCG|group without capturing | 0.03125
18: NWSP|any non-whitespace | 0.03125
19: PNG|named capture group | 0.03125


0000 | 0054 | '\\s*,\\s*'
0001 | 0017 | '\\s*#?\\s*$'
0002 | 0016 | 'hg\\s*pull\\s*(.*)\\s*'
0003 | 0009 | '\\s*([^: ]*)\\s*:(.*)'
0004 | 0006 | '\\s*>$'
0005 | 0005 | '/\\*\\*'
0006 | 0004 | '\\s*# SOURCE LINE (\\d+)'
0007 | 0003 | '\\\\*\\#'
0008 | 0003 | '\\s*\\#\\s*include\\s+<cxxtest/'
0009 | 0002 | '\\s*\\[.*$'
0010 | 0002 | '^\\s*\\*+/'
0011 | 0002 | '\\s*\\{\\s*'
0012 | 0002 | u'\\s*,?\\s*'
0013 | 0002 | '^\\s*//\\s*$'
0014 | 0002 | '\\s*\n\\s*\n\\s*'
0015 | 0002 | '\\s*modtime:\\s*(.*)'
0016 | 0002 | '\\s*#*\\s*pylint:(.*)'
0017 | 0002 | '\\s*([^\\s\\(\\)"\\\'=,\\[\\]/\\?]+)\\s*'
0018 | 0001 | '\\s*(;)'
0019 | 0001 | '\\s*(<!>=)'
0020 | 0001 | '\\s*(\\n|$)'
0021 | 0001 | '\\s*<p>\\s*'
0022 | 0001 | '\\s*!important'
0023 | 0001 | '\\s*\\(\\s*\\('
0024 | 0001 | '\\s*(?P<a>,|:)\\s*'
0025 | 0001 | '\\s*([a-f0-9]+):.*'
0026 | 0001 | 'MINOR\\s*=\\s*(\\d+)'
0027 | 0001 | '\\s*libssl.so.0.9.8\\s*'
0028 | 0001 | '\\s*(\\S+)\\s+/(.*)/\\s*$'
0029 | 0001 | '\\s*(([\\\'"])(.*?[^\\\\])\\2)\\s*([},=]|$)'
0030 | 0001 | '\\s*(((if|while)\\s*\\(|else\\s*|else\\s+if\\s*\\(|for\\s*\\(.*\\))[^{;]*)'
0031 | 0001 | '\\s*//\\s*#(include|define|if|ifdef|elif|ifndef|endif|else)(?:\\s+(.*)\\s*$|($))'



cluster 2 stats:
nPatterns: 54.0
nProjects: 86
shortest: [A-Z_]+
Features:

1: LIT|a literal character | 12.648148148148149
2: RNG|chars within a range | 4.277777777777778
3: CCC|custom character class | 1.7592592592592593
4: CG|a capture group | 0.7037037037037037
5: ADD|one-or-more repetition | 0.5
6: END|end-of-line | 0.37037037037037035
7: STR|start-of-line | 0.37037037037037035
8: KLE|zero-or-more repetition | 0.3333333333333333
9: NCCC|negated CCC | 0.2962962962962963
10: OR|logical or | 0.18518518518518517
11: DBB|$n\le x \le m$ repetition | 0.09259259259259259
12: QST|zero-or-one repetition | 0.09259259259259259
13: SNG|exactly n repetition | 0.05555555555555555
14: LWB|at least n repetition | 0.037037037037037035
15: NCG|group without capturing | 0.037037037037037035
16: DEC|any of: 0123456789 | 0.018518518518518517
17: LZY|as few reps as possible | 0.018518518518518517
18: NLKA|sequence doesn't follow  | 0.018518518518518517
19: NWSP|any non-whitespace | 0.018518518518518517
20: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.018518518518518517


0000 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0001 | 0013 | '^[a-zA-Z_][a-zA-Z_0-9]*(\\.[a-zA-Z_][a-zA-Z_0-9]*)*$'
0002 | 0010 | '[^A-Za-z0-9]Q_OBJECT[^A-Za-z0-9]'
0003 | 0007 | '[a-zA-Z]'
0004 | 0007 | '&#?[A-Za-z0-9]+?;'
0005 | 0006 | "[^A-Za-z0-9\\-_.~!*'();:@&=+$,/?%#[\\]]"
0006 | 0004 | u'[^A-Za-z0-9.]+'
0007 | 0004 | '^[a-zA-Z0-9-]{1,100}$'
0008 | 0004 | '([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*'
0009 | 0003 | '([A-Z][a-z]+)'
0010 | 0003 | '^[0-9A-Za-z._-]{0,100}$'
0011 | 0002 | '[A-Za-z]'
0012 | 0002 | '^[-_A-Za-z0-9]+$'
0013 | 0002 | '^([a-zA-Z0-9_]+):( |$)'
0014 | 0002 | '@%\\(([a-zA-Z][a-zA-Z0-9_-]*)\\)s'
0015 | 0002 | 'SNIPPET::([A-Za-z0-9_\\-\\/\\.]+)'
0016 | 0002 | '[^A-Za-z0-9]?(?:file|source)=(http[^\\\'"&]*)'
0017 | 0001 | '[A-Z_]+'
0018 | 0001 | '^[a-zA-Z]+='
0019 | 0001 | '\\([A-Z]\\) '
0020 | 0001 | '^[^A-Za-z_]$'
0021 | 0001 | '^[a-z0-9-]+$'
0022 | 0001 | '([^a-zA-Z_0-9])'
0023 | 0001 | '[^a-zA-Z0-9_ -]'
0024 | 0001 | '^0x([0-9a-z]+)$'
0025 | 0001 | '^@[A-Z0-9\\_]+$'
0026 | 0001 | '[^a-zA-Z0-9_\\.]'
0027 | 0001 | "(^[A-Za-z\\' ]+$)"
0028 | 0001 | '[a-zA-Z]:(/|\\\\)'
0029 | 0001 | '[a-zA-Z0-9_]{2,10}'
0030 | 0001 | '[a-zA-Z]+://[\\S]+'
0031 | 0001 | '([^A-Za-z0-9\\._-])'
0032 | 0001 | '^([a-fA-F0-9]{64})$'
0033 | 0001 | '[^a-z]([a-z]+)[^a-z]'
0034 | 0001 | u'[^A-Za-z0-9_\\.\\-]'
0035 | 0001 | '[$]([A-Z_][A-Z0-9_]*)'
0036 | 0001 | '([a-z ]+)(\\([0-9]+\\))?'
0037 | 0001 | '([a-zA-Z_][a-zA-Z0-9_]*)'
0038 | 0001 | '/gs/[a-z0-9\\.\\-_]{3,}$'
0039 | 0001 | '(fasta_[a-z0-9]+\\.fasta)'
0040 | 0001 | '\\$\\{([a-zA-Z0-9_-]+)\\}'
0041 | 0001 | '\\?[a-zA-Z_][a-zA-Z0-9_]*$'
0042 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,4}$'
0043 | 0001 | '^[a-z0-9][a-z0-9\\.\\-]{2,}$'
0044 | 0001 | '([A-Z]{2}[0-9]{2,3}-[0-9]{2})'
0045 | 0001 | '^&[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0046 | 0001 | '^[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]$'
0047 | 0001 | '(^[^a-zA-Z\\._]+)|([^a-zA-Z\\._0-9]+)'
0048 | 0001 | '^([_A-Za-z][_A-Za-z0-9]*|\\.|\\.\\.)$'
0049 | 0001 | '([a-zA-Z][a-zA-Z]|[iIxX]-([a-zA-Z])+)(-[a-zA-Z])*'
0050 | 0001 | '[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?'
0051 | 0001 | '^([A-Za-z0-9 .#(),_/-]+) +\\(([0-9A-F]+), ?([0-9A-F]+)\\) ([A-Z][A-Z]) ([0-9]+)$'
0052 | 0001 | '([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])'
0053 | 0001 | '^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$'



cluster 3 stats:
nPatterns: 8.0
nProjects: 82
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 7.625
2: NCCC|negated CCC | 1.125
3: KLE|zero-or-more repetition | 1.0
4: CG|a capture group | 0.75
5: RNG|chars within a range | 0.5
6: ADD|one-or-more repetition | 0.375
7: LZY|as few reps as possible | 0.375
8: CCC|custom character class | 0.25
9: OR|logical or | 0.25
10: ANY|any non-newline char | 0.125
11: STR|start-of-line | 0.125
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125


0000 | 0057 | '<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'
0001 | 0019 | '<[^>]*?>'
0002 | 0002 | '<![^>]*>'
0003 | 0001 | '<[^!][^>]*?>'
0004 | 0001 | '<(![^-\\[]|\\?)'
0005 | 0001 | '^(<[^>]*/>)\\s*'
0006 | 0001 | '<!--[^>]*-->|<!>'
0007 | 0001 | '<h1[^>]*>(.+?)</h1>'



cluster 4 stats:
nPatterns: 39.0
nProjects: 71
shortest: ([|&])
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.205128205128205
3: CCC|custom character class | 1.1025641025641026
4: ADD|one-or-more repetition | 1.0512820512820513
5: RNG|chars within a range | 0.717948717948718
6: DEC|any of: 0123456789 | 0.28205128205128205
7: NCCC|negated CCC | 0.28205128205128205
8: ANY|any non-newline char | 0.15384615384615385
9: QST|zero-or-one repetition | 0.15384615384615385
10: SNG|exactly n repetition | 0.1282051282051282
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1282051282051282
12: END|end-of-line | 0.10256410256410256
13: KLE|zero-or-more repetition | 0.07692307692307693
14: OR|logical or | 0.07692307692307693
15: STR|start-of-line | 0.07692307692307693
16: DBB|$n\le x \le m$ repetition | 0.05128205128205128
17: LZY|as few reps as possible | 0.05128205128205128
18: NWSP|any non-whitespace | 0.05128205128205128
19: WRD|[a-zA-Z0-9\_] | 0.05128205128205128
20: NCG|group without capturing | 0.02564102564102564


0000 | 0013 | '([0-9]+)'
0001 | 0007 | '([\\t ]+)'
0002 | 0006 | '[0-9]+,[0-9]+'
0003 | 0006 | '([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)'
0004 | 0004 | '([\\\\()\\r\\n])'
0005 | 0003 | '([\\s\\\\])'
0006 | 0003 | u'([^\\t -~])'
0007 | 0003 | '([\\d.]+) ([\\d.]+) ([\\d.]+) (\\d+)/(\\d+)'
0008 | 0002 | '%([0-9]+)'
0009 | 0002 | '[^0-9:\\.]'
0010 | 0002 | '([+-]\\d{4})$'
0011 | 0002 | '\\*\\*([0-9]+)'
0012 | 0002 | '<<<(-?\\d+?)>>>'
0013 | 0002 | '([+-]?[\\d\\.]+)(\\S+)'
0014 | 0002 | '^v([0-9]+|[0-9]+\\.[0-9]+)(/.*|$)'
0015 | 0001 | '([|&])'
0016 | 0001 | '~[^01]'
0017 | 0001 | '[^+0-9]'
0018 | 0001 | '[^0-9.]'
0019 | 0001 | '([()| ])'
0020 | 0001 | "([0-9]+)'"
0021 | 0001 | ' - [0-9]+'
0022 | 0001 | '([\\x7F])'
0023 | 0001 | '[0-9]+\\.'
0024 | 0001 | '([$`\\\\])'
0025 | 0001 | '([\\t\\n])'
0026 | 0001 | '([\\{\\}])'
0027 | 0001 | '([+-]?\\d+)'
0028 | 0001 | '([\\w._-]+)'
0029 | 0001 | '([\\w\\d]+)'
0030 | 0001 | '(,\\n|[^\\n-])+'
0031 | 0001 | '([0-9]+)\\s+min'
0032 | 0001 | '^([0-9]+)-.+/.+$'
0033 | 0001 | '([\\d.]+)([^\\s]+)'
0034 | 0001 | '([0-9]+\\s+\\-\\s+)(.+)'
0035 | 0001 | u'[^0-9]([0-9]{4})[^0-9]'
0036 | 0001 | '([^!]+)(?:!([^+-]+)?([+-]\\S+)?)?'
0037 | 0001 | '([\\|\\{\\}\\\\\\.\\+\\[\\]\\(\\)])'
0038 | 0001 | '^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'



cluster 5 stats:
nPatterns: 7.0
nProjects: 69
shortest: [^']+
Features:

1: LIT|a literal character | 10.857142857142858
2: ADD|one-or-more repetition | 2.4285714285714284
3: CG|a capture group | 1.2857142857142858
4: NCCC|negated CCC | 1.1428571428571428
5: CCC|custom character class | 0.5714285714285714
6: DEC|any of: 0123456789 | 0.5714285714285714
7: KLE|zero-or-more repetition | 0.2857142857142857
8: LZY|as few reps as possible | 0.2857142857142857
9: PNG|named capture group | 0.2857142857142857
10: RNG|chars within a range | 0.2857142857142857
11: WRD|[a-zA-Z0-9\_] | 0.2857142857142857
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2857142857142857
13: ANY|any non-newline char | 0.14285714285714285
14: END|end-of-line | 0.14285714285714285
15: OR|logical or | 0.14285714285714285
16: QST|zero-or-one repetition | 0.14285714285714285
17: SNG|exactly n repetition | 0.14285714285714285


0000 | 0060 | '[^]]+?\\] +([0-9.]+): (\\w+) <-(\\w+)'
0001 | 0005 | '=[^,)]+\\)$'
0002 | 0002 | '[^%]+%[^.]+[.](compile)'
0003 | 0002 | '[^%]+%testing[.](expect-failure|expect-success)'
0004 | 0001 | "[^']+"
0005 | 0001 | '([^.()]+\\.){5}'
0006 | 0001 | '[^\\d]+ (\\d+)\\.(\\d+)\\.(\\d+)\\s*\\((?P<datetime>.+?)\\)\\s*(?P<type>[a-z]+)?'



cluster 6 stats:
nPatterns: 27.0
nProjects: 66
shortest: (\S+);.*
Features:

1: LIT|a literal character | 5.333333333333333
2: KLE|zero-or-more repetition | 2.185185185185185
3: CG|a capture group | 2.074074074074074
4: ANY|any non-newline char | 1.1111111111111112
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0740740740740742
6: ADD|one-or-more repetition | 0.9629629629629629
7: CCC|custom character class | 0.48148148148148145
8: LZY|as few reps as possible | 0.48148148148148145
9: NWSP|any non-whitespace | 0.37037037037037035
10: NCCC|negated CCC | 0.2222222222222222
11: WRD|[a-zA-Z0-9\_] | 0.2222222222222222
12: OR|logical or | 0.14814814814814814
13: RNG|chars within a range | 0.14814814814814814
14: END|end-of-line | 0.1111111111111111
15: QST|zero-or-one repetition | 0.1111111111111111
16: DEC|any of: 0123456789 | 0.07407407407407407
17: STR|start-of-line | 0.07407407407407407
18: LKB|matching sequence precedes | 0.037037037037037035
19: NCG|group without capturing | 0.037037037037037035


0000 | 0017 | '([.\\w-]+)\\s*(.*)$'
0001 | 0013 | '^(\\s*)(\\w*)'
0002 | 0006 | '@(\\w*)(.*)'
0003 | 0006 | '(.*?)(#)(.*)'
0004 | 0003 | '(\\S+);.*'
0005 | 0003 | '(\\s*\\=)|(\\s*\\:)'
0006 | 0002 | '(.*//.*?/)'
0007 | 0002 | '(!\\S*)(.*)'
0008 | 0002 | '(.*?) (.*?) as (\\w+)'
0009 | 0002 | '^(\\w+)\\s*=\\s*(.+)$'
0010 | 0002 | '([^:]*):\\s+scsi([0-9]+)\\s+channel=([0-9]+)\\s+id=([0-9]+)\\s+lun=([0-9]+)'
0011 | 0001 | '(.*?)[,(:].*'
0012 | 0001 | '([^:]*):(.*)'
0013 | 0001 | '(.*?)\\s+<(.*)>'
0014 | 0001 | '(\\S+):\\s*(.*)'
0015 | 0001 | '(\\S+)([ \t]*?)(.*)'
0016 | 0001 | '(\\\\.|[^#])*(#.*)?'
0017 | 0001 | '(?<=\\()\\w*\\,?\\s*'
0018 | 0001 | '##\\s*(\\S+)\\s+(\\S*)'
0019 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'
0020 | 0001 | '("[^"]*?")|(\'[^\']*?\')'
0021 | 0001 | '(\\s*configuration:)(.*)\n'
0022 | 0001 | '(\\s)*File "(.*?)", line \\d.+'
0023 | 0001 | '(\\S+)\\s*[.]\\s*type\\s*[(]\\s*[)]'
0024 | 0001 | '(\\S+\\s*)[.]shape\\s*=[^=]\\s*(.+)'
0025 | 0001 | '(\\S+\\s*[(].+),\\s*savespace\\s*=.+\\s*[)]'
0026 | 0001 | '(.*)@(.*?)(?: -> (file\\:\\/\\/\\/\\S*))?\\:(\\d*)$'



cluster 7 stats:
nPatterns: 30.0
nProjects: 59
shortest: [\s.]
Features:

1: LIT|a literal character | 3.4
2: CCC|custom character class | 1.0333333333333334
3: ADD|one-or-more repetition | 0.6666666666666666
4: WRD|[a-zA-Z0-9\_] | 0.4
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.26666666666666666
6: DEC|any of: 0123456789 | 0.16666666666666666
7: STR|start-of-line | 0.13333333333333333
8: ANY|any non-newline char | 0.06666666666666667
9: END|end-of-line | 0.06666666666666667
10: KLE|zero-or-more repetition | 0.06666666666666667
11: NCCC|negated CCC | 0.06666666666666667
12: OR|logical or | 0.03333333333333333


0000 | 0011 | '[\\s.]'
0001 | 0007 | '[<>\'"]'
0002 | 0006 | '[\\r\\n]+'
0003 | 0004 | '[\n\r]'
0004 | 0004 | '[-T:/.]|\\s+'
0005 | 0003 | '[\n ]+$'
0006 | 0003 | '[./\\\\]'
0007 | 0003 | u'[\\-\\s]'
0008 | 0002 | "[\\w']+"
0009 | 0002 | '[\\d\\.]+'
0010 | 0002 | "[$^#\\\\']"
0011 | 0001 | '[;,/-]'
0012 | 0001 | '[\t ]+'
0013 | 0001 | '[\\-: ]'
0014 | 0001 | '[\\s,;:]'
0015 | 0001 | '[^\\w\\-]'
0016 | 0001 | "[\\s'\\\\]"
0017 | 0001 | '[ \\t]+\\n'
0018 | 0001 | '[ \r\n\t]+'
0019 | 0001 | '[\n\r\t ]+'
0020 | 0001 | '^[\\w._-]+'
0021 | 0001 | '[\\s.,;_-]+'
0022 | 0001 | '[\\(\\)\\s,]+'
0023 | 0001 | '[^\\w\\s@+.-]'
0024 | 0001 | '^[ \\t\\n\\r]'
0025 | 0001 | '[\\w\\d\\-_\\.]+'
0026 | 0001 | '[\\r\\n\\t ]+[\\r\\n]+'
0027 | 0001 | '^[\\w\\d\\.]+@[\\w\\d\\.]+'
0028 | 0001 | '[\\w\\.\\-]+@[\\w\\.\\-]+\\.\\w\\w\\w'
0029 | 0001 | '^[\\d\\.]+ meV\xe2\x80\xbd .* \\- .*$'



cluster 8 stats:
nPatterns: 14.0
nProjects: 56
shortest: [ \*]*(.+)
Features:

1: LIT|a literal character | 7.428571428571429
2: CG|a capture group | 2.4285714285714284
3: KLE|zero-or-more repetition | 2.142857142857143
4: ANY|any non-newline char | 1.7857142857142858
5: ADD|one-or-more repetition | 1.0
6: STR|start-of-line | 0.9285714285714286
7: END|end-of-line | 0.7142857142857143
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6428571428571429
9: CCC|custom character class | 0.5714285714285714
10: RNG|chars within a range | 0.5714285714285714
11: DEC|any of: 0123456789 | 0.21428571428571427
12: LZY|as few reps as possible | 0.21428571428571427
13: NCCC|negated CCC | 0.14285714285714285
14: QST|zero-or-one repetition | 0.14285714285714285
15: NWSP|any non-whitespace | 0.07142857142857142
16: OR|logical or | 0.07142857142857142
17: SNG|exactly n repetition | 0.07142857142857142
18: WRD|[a-zA-Z0-9\_] | 0.07142857142857142


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0015 | '^([^=]*)=(.*)$'
0002 | 0003 | '^(\\s*)()(\\S+)(.*$)'
0003 | 0003 | '^(.*)~([+-][0-9]{2})00$'
0004 | 0002 | '^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'
0005 | 0001 | '[ \\*]*(.+)'
0006 | 0001 | '^([#*]+)\\s.*'
0007 | 0001 | '^(.*?) - (.*?)$'
0008 | 0001 | '^(.*)#{(\\w+)}(.*)$'
0009 | 0001 | '^(.*)PS 3.6-2007(.*)$'
0010 | 0001 | '^(.*:.*/jobmanager-.*?)-(.*)'
0011 | 0001 | '^(.*)(\\stime\\selapsed:\\s*)(.*)\\s*$'
0012 | 0001 | '^(.*[^a-z0-9\\n])?(sudo|su +-c|system/bin/su) +.*'
0013 | 0001 | '^(.*)(\\([0-9A-Fx]+,[0-9A-F]+\\))\\s+([1-3C]+)\\s+(.*)\\s*$'



cluster 9 stats:
nPatterns: 22.0
nProjects: 55
shortest: ^\s*\n
Features:

1: LIT|a literal character | 12.181818181818182
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.8181818181818183
3: KLE|zero-or-more repetition | 2.772727272727273
4: CG|a capture group | 1.5454545454545454
5: ADD|one-or-more repetition | 1.1818181818181819
6: STR|start-of-line | 0.9545454545454546
7: RNG|chars within a range | 0.7272727272727273
8: CCC|custom character class | 0.5909090909090909
9: END|end-of-line | 0.5909090909090909
10: ANY|any non-newline char | 0.5
11: QST|zero-or-one repetition | 0.4090909090909091
12: OR|logical or | 0.36363636363636365
13: NCCC|negated CCC | 0.2727272727272727
14: PNG|named capture group | 0.18181818181818182
15: WRD|[a-zA-Z0-9\_] | 0.18181818181818182
16: NCG|group without capturing | 0.13636363636363635
17: NWSP|any non-whitespace | 0.13636363636363635


0000 | 0015 | '^\\s*\\n'
0001 | 0015 | '^\\s*=\\s*([^\\s;,]*)'
0002 | 0006 | '^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$'
0003 | 0004 | u'^\\s*([-\\w]+\\s*:[^:;]*(;\\s*|$))*$'
0004 | 0003 | '^\\s*#\\s*define\\s+OPENSSL_VERSION_NUMBER\\s+(0x[0-9a-fA-F]+)'
0005 | 0002 | ':\\s*(#.*)?$'
0006 | 0002 | '->\\s*(\\S+)$'
0007 | 0002 | '^\\s*@([a-zA-Z]+)'
0008 | 0002 | '^\\s*(>>>|...) (.*)$'
0009 | 0002 | '^\\s*(if|try|elif|while|for)'
0010 | 0002 | '^\\s*@return\\s+(?P<type>\\w+)(?:\\s+(?P<doc>.*))?'
0011 | 0002 | '^\\s*(>>> )?(\\.\\.\\. )?raise(\\s+(\\\'|\\")|\\s*(\\(\\s*)+(\\\'|\\"))'
0012 | 0001 | '^\\s*[#;]'
0013 | 0001 | '^\\s*##(.*)$'
0014 | 0001 | '^\\s*(\\s?>)+'
0015 | 0001 | '^\\s*Version\\s*:\\s*(\\S+)'
0016 | 0001 | '^\\s*DATS_FREE_DISKS\\s*=(.*\\S)\\s*$'
0017 | 0001 | '^\\s*([^\\s]+)(?:(?:\\s*=\\s*)|\\s+)(.+)$'
0018 | 0001 | '^\\s*\\[(?P<state>!?!?)(?P<section>[^\\]]*)\\]\\s*$'
0019 | 0001 | '^\\s*class\\s+([a-zA-Z_]\\w*)\\s*(\\([\\s\\w.,]*\\))?:\\s*$'
0020 | 0001 | '^\\s*vtk(Abstract)?Type(Revision)*Macro\\s*\\(\\s*(vtk[^ ,]+)\\s*,\\s*(vtk[^ \\)]+)\\s*\\)\\s*'
0021 | 0001 | '^\\s*([A-Za-z0-9()> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+Value Representation = ([A-Z][A-Z]), Multiplicity = ([0-9n-]+)(.*)\\s*$'



cluster 10 stats:
nPatterns: 21.0
nProjects: 54
shortest: ^[0-9]{2}$
Features:

1: LIT|a literal character | 9.714285714285714
2: RNG|chars within a range | 3.6666666666666665
3: CCC|custom character class | 1.9523809523809523
4: SNG|exactly n repetition | 1.4285714285714286
5: CG|a capture group | 0.9523809523809523
6: END|end-of-line | 0.7142857142857143
7: STR|start-of-line | 0.6190476190476191
8: ADD|one-or-more repetition | 0.23809523809523808
9: DBB|$n\le x \le m$ repetition | 0.23809523809523808
10: QST|zero-or-one repetition | 0.19047619047619047
11: OR|logical or | 0.14285714285714285
12: DEC|any of: 0123456789 | 0.09523809523809523
13: WNW|word/non-word boundary | 0.09523809523809523
14: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.09523809523809523
15: ANY|any non-newline char | 0.047619047619047616
16: KLE|zero-or-more repetition | 0.047619047619047616
17: NCG|group without capturing | 0.047619047619047616


0000 | 0022 | '^[ -~]{0,200}[!-~]$'
0001 | 0011 | '^[1-9]\\d{2} ?\\d{2}$'
0002 | 0010 | '0x([0-9a-fA-F]+)L?'
0003 | 0007 | 'md5=[0-9a-f]{32}$'
0004 | 0003 | '^#[0-9A-Fa-f]{6}$'
0005 | 0002 | '^[0-9]{2}$'
0006 | 0002 | '^\\#([0-9a-fA-F]{6})$'
0007 | 0002 | '\\\\x([0-9a-fA-F]{2}|[0-9a-fA-F])'
0008 | 0001 | '[0-9a-f]{32}'
0009 | 0001 | '[0-9a-fA-F]{6}'
0010 | 0001 | '^[0-9a-f]{32}$'
0011 | 0001 | '#[0-9a-fA-F]{6}'
0012 | 0001 | '^([A-Fa-f0-9]{2,2}){3,4}$'
0013 | 0001 | '^([0-9a-fA-F]{2}(:|$)){6}$'
0014 | 0001 | '\\s+(([0-9A-F]{2}:){5}[0-9A-F]{2})\\s+'
0015 | 0001 | '^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$'
0016 | 0001 | '\\b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\\b'
0017 | 0001 | '^([0-9a-fA-F]{1,2}:){5}[0-9a-fA-F]{1,2}$'
0018 | 0001 | '^(0x[0-9a-fA-F]+)(?:,(ramdisk|ipl|entry|rpm))?$'
0019 | 0001 | '^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$'
0020 | 0001 | '^([0-9]{4})-([0-1][0-9])-([0-3][0-9])(-([0-2][0-9])-([0-5][0-9]))? +(.*)$'



cluster 11 stats:
nPatterns: 8.0
nProjects: 52
shortest: \W+
Features:

1: LIT|a literal character | 2.625
2: ADD|one-or-more repetition | 1.375
3: WRD|[a-zA-Z0-9\_] | 1.0
4: NCG|group without capturing | 0.375
5: QST|zero-or-one repetition | 0.375
6: NWRD|non-word chars | 0.25
7: ANY|any non-newline char | 0.125
8: CG|a capture group | 0.125
9: END|end-of-line | 0.125
10: KLE|zero-or-more repetition | 0.125
11: NCCC|negated CCC | 0.125
12: STR|start-of-line | 0.125
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125


0000 | 0026 | '\\W+'
0001 | 0011 | '\\-+'
0002 | 0003 | '^\\w+(?:-\\w+)?(?:,\\w+(?:-\\w+)?)*$'
0003 | 0002 | '\\W_\\('
0004 | 0002 | '@\\w+( [^{}:\n]+)?:'
0005 | 0001 | u'\\w+'
0006 | 0001 | '\\w+\\s'
0007 | 0001 | '\\w+\\_steps.rb'



cluster 12 stats:
nPatterns: 16.0
nProjects: 41
shortest: #
Features:

1: LIT|a literal character | 16.0625
2: ADD|one-or-more repetition | 1.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.375
4: KLE|zero-or-more repetition | 1.0625
5: CG|a capture group | 0.875
6: WRD|[a-zA-Z0-9\_] | 0.8125
7: QST|zero-or-one repetition | 0.75
8: CCC|custom character class | 0.625
9: DEC|any of: 0123456789 | 0.4375
10: ANY|any non-newline char | 0.3125
11: LZY|as few reps as possible | 0.25
12: RNG|chars within a range | 0.25
13: PNG|named capture group | 0.125
14: END|end-of-line | 0.0625
15: NCG|group without capturing | 0.0625
16: NWSP|any non-whitespace | 0.0625


0000 | 0017 | '#'
0001 | 0005 | '#\\w\\w\\w\\w\\w\\w$'
0002 | 0005 | '#define NODE_MAJOR_VERSION'
0003 | 0004 | '#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'
0004 | 0004 | '#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'
0005 | 0002 | '#\\s*-\\*-\\s+coding:\\s+(\\w+)\\s+-\\*-'
0006 | 0002 | '# StopWatch ([\\w]+) total/cumulative duration ([0-9.]+). Samples: ([0-9]+)'
0007 | 0001 | '{version}'
0008 | 0001 | '##VERSION##'
0009 | 0001 | '# TBPL WARNING #'
0010 | 0001 | '#define PATCH_LEVEL\\s+1'
0011 | 0001 | '#define Py_([a-z_]+) ([0-9]+)'
0012 | 0001 | '#define\\swxMAJOR_VERSION\\s+(\\d+)'
0013 | 0001 | '#loadfactor(\\s+(\\S+))?\\s+(\\d+\\.?\\d*)'
0014 | 0001 | '#\\s*define\\s+(?P<key>\\w+)(?P<value>\\s+[\\w"]*)?'
0015 | 0001 | '#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'



cluster 13 stats:
nPatterns: 11.0
nProjects: 38
shortest: .*(\d).*(\d).*
Features:

1: LIT|a literal character | 4.454545454545454
2: KLE|zero-or-more repetition | 2.8181818181818183
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.6363636363636365
5: STR|start-of-line | 0.8181818181818182
6: END|end-of-line | 0.5454545454545454
7: RNG|chars within a range | 0.45454545454545453
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.45454545454545453
9: CCC|custom character class | 0.36363636363636365
10: NCCC|negated CCC | 0.2727272727272727
11: DEC|any of: 0123456789 | 0.18181818181818182
12: QST|zero-or-one repetition | 0.18181818181818182
13: ADD|one-or-more repetition | 0.09090909090909091
14: LZY|as few reps as possible | 0.09090909090909091
15: WRD|[a-zA-Z0-9\_] | 0.09090909090909091


0000 | 0009 | '^def\\s*(\\w+)\\s*=(.*)$'
0001 | 0008 | '^([^:]*): *(.*)'
0002 | 0007 | '^([^@]*@)?([^:]*)(:.*)?'
0003 | 0006 | '^\\s*\\((.*)\\)\\s*$'
0004 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0005 | 0002 | '^(.*?)([\\[\\*\\?].*)$'
0006 | 0001 | '.*(\\d).*(\\d).*'
0007 | 0001 | '([1-9][0-9]*)*(.*)'
0008 | 0001 | '^\\* (.*): (.*)\n$'
0009 | 0001 | '^([a-zA-Z0-9_]*) *=.*$'
0010 | 0001 | "^(FFLAGS\\s*=').*-m64 (.*)"



cluster 14 stats:
nPatterns: 17.0
nProjects: 38
shortest: \S
Features:

1: LIT|a literal character | 4.529411764705882
2: ADD|one-or-more repetition | 2.4705882352941178
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.3529411764705883
4: CG|a capture group | 0.9411764705882353
5: DEC|any of: 0123456789 | 0.7647058823529411
6: NWSP|any non-whitespace | 0.5882352941176471
7: KLE|zero-or-more repetition | 0.47058823529411764
8: ANY|any non-newline char | 0.35294117647058826
9: OR|logical or | 0.23529411764705882
10: END|end-of-line | 0.17647058823529413
11: NLKA|sequence doesn't follow  | 0.17647058823529413
12: CCC|custom character class | 0.11764705882352941
13: QST|zero-or-one repetition | 0.11764705882352941
14: WRD|[a-zA-Z0-9\_] | 0.11764705882352941
15: NCCC|negated CCC | 0.058823529411764705
16: NCG|group without capturing | 0.058823529411764705
17: PNG|named capture group | 0.058823529411764705
18: RNG|chars within a range | 0.058823529411764705
19: SNG|exactly n repetition | 0.058823529411764705


0000 | 0016 | '\\S+ (\\d+)\\.(\\d+)\\.?(\\d+)?'
0001 | 0005 | u'\\S'
0002 | 0005 | '\\s+(\\d+),$'
0003 | 0003 | '\\d+ (\\d+):'
0004 | 0002 | '\\s+|(?:\\s*,\\s*)'
0005 | 0001 | '\\s+}'
0006 | 0001 | '}\\s+'
0007 | 0001 | '\\s|\\('
0008 | 0001 | '\\S+buildout.py'
0009 | 0001 | '\\s+\\(\\d{4}\\)$'
0010 | 0001 | '\\s+\\[(?P<section>.*)\\]'
0011 | 0001 | '(\\S+)\\s+(\\d)\\s+\\d+\\s+\\S+$'
0012 | 0001 | '\\s+(\\w+)\\s+"(&#\\w+;|[^&"]*)"'
0013 | 0001 | 'TOTAL\\s+(\\d+)\\s+[\\-\\d\\.]+\\%\\s+(\\d+)'
0014 | 0001 | '\\S+\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)%'
0015 | 0001 | '\\s+src set ".*" \\(([0-9.]+) docs, \\d+ segs\\)'
0016 | 0001 | '\\s|=|,|:|\\((?!.*\\))|\\[(?!.*\\])|\\{(?!.*\\})'



cluster 15 stats:
nPatterns: 21.0
nProjects: 36
shortest: \d.\d.\d
Features:

1: DEC|any of: 0123456789 | 6.238095238095238
2: LIT|a literal character | 5.238095238095238
3: CG|a capture group | 2.857142857142857
4: ADD|one-or-more repetition | 1.3333333333333333
5: WRD|[a-zA-Z0-9\_] | 0.5238095238095238
6: QST|zero-or-one repetition | 0.38095238095238093
7: CCC|custom character class | 0.23809523809523808
8: END|end-of-line | 0.19047619047619047
9: RNG|chars within a range | 0.19047619047619047
10: ANY|any non-newline char | 0.09523809523809523
11: ENDZ|absolute end of string | 0.09523809523809523
12: NCG|group without capturing | 0.09523809523809523
13: NWSP|any non-whitespace | 0.09523809523809523
14: DBB|$n\le x \le m$ repetition | 0.047619047619047616
15: KLE|zero-or-more repetition | 0.047619047619047616
16: OR|logical or | 0.047619047619047616
17: SNG|exactly n repetition | 0.047619047619047616
18: STR|start-of-line | 0.047619047619047616


0000 | 0012 | '(\\d+\\.\\d+\\.\\d+)'
0001 | 0004 | 'bytes=(\\d+)-(\\d+)'
0002 | 0004 | '^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$'
0003 | 0004 | '(\\d+)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)'
0004 | 0003 | '(\\S+): (\\S+)'
0005 | 0003 | 'pip(\\d(\\.\\d)?)?$'
0006 | 0003 | '(\\d+(\\.\\d+)?) (K|M|G|T)b?$'
0007 | 0003 | '(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0008 | 0003 | '(\\d+):(\\d+):(\\d+)(?:\\.(\\d{0,6}))?'
0009 | 0002 | '(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'
0010 | 0001 | '\\d.\\d.\\d'
0011 | 0001 | '(-?\\d+):(-?\\d+)'
0012 | 0001 | '(\\d+):(\\d\\d)\\Z'
0013 | 0001 | '\\d\\d-\\w\\w\\w-\\d\\d'
0014 | 0001 | '(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)'
0015 | 0001 | 'H(F)(DTE)(\\d\\d)(\\d\\d)(\\d\\d)\\Z'
0016 | 0001 | '\xe1\xf9\xf2\xe4&nbsp;(\\d\\d):(\\d\\d)'
0017 | 0001 | '(\\d+\\.\\d+\\.\\d+)[T\\.](\\d+(\\.\\d+)*)$'
0018 | 0001 | '\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d'
0019 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>'
0020 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'



cluster 16 stats:
nPatterns: 11.0
nProjects: 35
shortest: ["]
Features:

1: LIT|a literal character | 4.7272727272727275
2: CCC|custom character class | 1.0
3: CG|a capture group | 0.2727272727272727
4: ADD|one-or-more repetition | 0.18181818181818182
5: END|end-of-line | 0.18181818181818182
6: OR|logical or | 0.18181818181818182
7: NCCC|negated CCC | 0.09090909090909091


0000 | 0022 | '[&<]'
0001 | 0004 | '[ ]+'
0002 | 0004 | '[-.]'
0003 | 0002 | '[kK]'
0004 | 0002 | '[xh]vc0'
0005 | 0002 | '[&?]requestPayment($|=|&)'
0006 | 0002 | '[&?]versionId=([^&]+)($|=|&)'
0007 | 0001 | '["]'
0008 | 0001 | '[-:]'
0009 | 0001 | '[Yy]'
0010 | 0001 | '[x+]'



cluster 17 stats:
nPatterns: 6.0
nProjects: 34
shortest: "
Features:

1: LIT|a literal character | 4.333333333333333
2: CG|a capture group | 0.6666666666666666
3: OR|logical or | 0.5
4: ADD|one-or-more repetition | 0.3333333333333333
5: KLE|zero-or-more repetition | 0.3333333333333333
6: NCCC|negated CCC | 0.3333333333333333
7: ANY|any non-newline char | 0.16666666666666666
8: LZY|as few reps as possible | 0.16666666666666666
9: NWSP|any non-whitespace | 0.16666666666666666


0000 | 0024 | '"'
0001 | 0003 | '"|\\\\'
0002 | 0003 | '"([^"]+)"|(\\S+)'
0003 | 0002 | '"(\\\\\\\\|\\\\"|[^"])*"'
0004 | 0001 | u'"}'
0005 | 0001 | '"title":"(.*?)",'



cluster 18 stats:
nPatterns: 16.0
nProjects: 33
shortest: ^http://
Features:

1: LIT|a literal character | 17.375
2: CG|a capture group | 0.8125
3: ADD|one-or-more repetition | 0.6875
4: QST|zero-or-one repetition | 0.625
5: STR|start-of-line | 0.625
6: KLE|zero-or-more repetition | 0.5
7: DEC|any of: 0123456789 | 0.375
8: NCCC|negated CCC | 0.375
9: ANY|any non-newline char | 0.3125
10: END|end-of-line | 0.3125
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1875
12: OR|logical or | 0.125
13: RNG|chars within a range | 0.125
14: CCC|custom character class | 0.0625
15: LZY|as few reps as possible | 0.0625
16: NCG|group without capturing | 0.0625
17: NWSP|any non-whitespace | 0.0625


0000 | 0013 | '^http://'
0001 | 0004 | '^https?://bitbucket.org/'
0002 | 0004 | '^http://testserver/somewhere/else/\\?c=\\d+#baz$'
0003 | 0004 | '^http://testserver/somewhere/else/\\?foo=bar&c=\\d+#baz$'
0004 | 0002 | '  http://'
0005 | 0002 | '^http(s)?://'
0006 | 0002 | 'http://([^/]+)(/\\S*)\\s*'
0007 | 0001 | '(/s/https?:)/+'
0008 | 0001 | '^(http|https)://'
0009 | 0001 | 'http://[^/]*(.*)'
0010 | 0001 | '^(https?|ftp):\\/\\/'
0011 | 0001 | 'https?://([^/]*?)(/.*)?'
0012 | 0001 | '^HTTP/\\d\\.\\d\\s+\\d+\\s*'
0013 | 0001 | 'http://([^/:]+)(?::(\\d+))?(/.*)?$'
0014 | 0001 | '^https?://bitbucket.org/([^/]+/[^/]+)/?$'
0015 | 0001 | '^http://node-todobin\\.herokuapp\\.com/list/[a-z0-9]+$'



cluster 19 stats:
nPatterns: 5.0
nProjects: 32
shortest: [*?[]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 0.6
3: ADD|one-or-more repetition | 0.4
4: ANY|any non-newline char | 0.2
5: KLE|zero-or-more repetition | 0.2
6: NCCC|negated CCC | 0.2
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0024 | '[*?[]'
0001 | 0003 | '\\[.*\\]'
0002 | 0003 | '\\*\\s[^:]+:'
0003 | 0001 | '[*,]+'
0004 | 0001 | '[/\\\\?\\*:]'



cluster 20 stats:
nPatterns: 3.0
nProjects: 31
shortest: ,
Features:

1: LIT|a literal character | 1.3333333333333333
2: ADD|one-or-more repetition | 0.3333333333333333
3: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0030 | ','
0001 | 0005 | ',\\S'
0002 | 0001 | u',,+'



cluster 21 stats:
nPatterns: 6.0
nProjects: 31
shortest: \r
Features:

1: LIT|a literal character | 7.0
2: OR|logical or | 0.3333333333333333
3: QST|zero-or-one repetition | 0.3333333333333333
4: WNW|word/non-word boundary | 0.3333333333333333
5: CG|a capture group | 0.16666666666666666
6: STR|start-of-line | 0.16666666666666666


0000 | 0013 | '\\r'
0001 | 0011 | '^\\r?\\n\\r?\\n'
0002 | 0002 | '\r|\n|\r\n'
0003 | 0002 | '\\bratsimp\\b'
0004 | 0002 | '(\\r\\n|\\n|\\r)'
0005 | 0001 | '\nRock Ridge signatures'



cluster 22 stats:
nPatterns: 4.0
nProjects: 31
shortest: \Z(?ms)
Features:

1: LIT|a literal character | 8.5
2: ADD|one-or-more repetition | 1.5
3: OPT|options wrapper | 1.25
4: CG|a capture group | 1.0
5: NCCC|negated CCC | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
8: ENDZ|absolute end of string | 0.25
9: END|end-of-line | 0.25
10: NCG|group without capturing | 0.25
11: OR|logical or | 0.25
12: QST|zero-or-one repetition | 0.25


0000 | 0018 | '\\Z(?ms)'
0001 | 0012 | '(?m)^\\.'
0002 | 0002 | '(?m)^alias\\s+scsi|(?m)^alias\\s+eth'
0003 | 0001 | '(?m)^Conf ([^ ]+) \\(([^ ]+) ([^ ]+)(?: \\[([^\\]]+)\\])?\\)$'



cluster 23 stats:
nPatterns: 5.0
nProjects: 30
shortest: &#?\w+;
Features:

1: LIT|a literal character | 5.2
2: ADD|one-or-more repetition | 1.4
3: CG|a capture group | 0.8
4: KLE|zero-or-more repetition | 0.8
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.8
6: DEC|any of: 0123456789 | 0.6
7: WRD|[a-zA-Z0-9\_] | 0.6
8: NLKA|sequence doesn't follow  | 0.4
9: LZY|as few reps as possible | 0.2
10: NWSP|any non-whitespace | 0.2
11: OR|logical or | 0.2
12: QST|zero-or-one repetition | 0.2
13: WNW|word/non-word boundary | 0.2


0000 | 0021 | '&#?\\w+;'
0001 | 0005 | '\\b0+(\\d+)(?!\\d)'
0002 | 0004 | u'&(?!(\\w+|#\\d+);)'
0003 | 0001 | '\\$\\((\\w+?)\\)'
0004 | 0001 | '\\$\\(call\\s+moa_load\\s*,\\s*(\\S*)\\s*\\)'



cluster 24 stats:
nPatterns: 9.0
nProjects: 30
shortest: /\*
Features:

1: LIT|a literal character | 5.111111111111111
2: KLE|zero-or-more repetition | 0.7777777777777778
3: ANY|any non-newline char | 0.5555555555555556
4: END|end-of-line | 0.5555555555555556
5: DEC|any of: 0123456789 | 0.1111111111111111
6: LZY|as few reps as possible | 0.1111111111111111
7: WRD|[a-zA-Z0-9\_] | 0.1111111111111111


0000 | 0019 | '/\\*'
0001 | 0011 | '".*"$'
0002 | 0003 | u'\\w*'
0003 | 0002 | '#.*?$'
0004 | 0001 | '//.*$'
0005 | 0001 | '\\/.*'
0006 | 0001 | '\\d*$'
0007 | 0001 | '\\).*$'
0008 | 0001 | '/\\* Begin PBXFileReference section \\*/\n'



cluster 25 stats:
nPatterns: 7.0
nProjects: 29
shortest: \\n
Features:

1: LIT|a literal character | 6.571428571428571
2: ANY|any non-newline char | 0.42857142857142855
3: OR|logical or | 0.2857142857142857
4: CCC|custom character class | 0.14285714285714285


0000 | 0008 | '\\\\.|.'
0001 | 0006 | '\\\\n'
0002 | 0006 | '[\\\'|"|#|\\\\|\\[|\\]|\\{|\\}|\\(|\\)]'
0003 | 0005 | '\\\\\\n'
0004 | 0003 | "\\\\'"
0005 | 0001 | '\\\\.|\\(\\?P='
0006 | 0001 | '\\\\end{tabularx}'



cluster 26 stats:
nPatterns: 3.0
nProjects: 28
shortest: _{2,}
Features:

1: LIT|a literal character | 1.0
2: LWB|at least n repetition | 1.0
3: STR|start-of-line | 0.3333333333333333


0000 | 0026 | '\\n{2,}'
0001 | 0001 | '_{2,}'
0002 | 0001 | '^/{2,}'



cluster 27 stats:
nPatterns: 1.0
nProjects: 28
shortest: ^<\?.*encoding=[\'"](.*?)[\'"].*\?>
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 3.0
4: CCC|custom character class | 2.0
5: CG|a capture group | 1.0
6: LZY|as few reps as possible | 1.0
7: STR|start-of-line | 1.0


0000 | 0028 | '^<\\?.*encoding=[\'"](.*?)[\'"].*\\?>'



cluster 28 stats:
nPatterns: 15.0
nProjects: 28
shortest: (?P<a>x)
Features:

1: LIT|a literal character | 8.933333333333334
2: PNG|named capture group | 2.8
3: RNG|chars within a range | 1.5333333333333334
4: CCC|custom character class | 1.4
5: ADD|one-or-more repetition | 1.3333333333333333
6: QST|zero-or-one repetition | 1.2666666666666666
7: CG|a capture group | 0.9333333333333333
8: KLE|zero-or-more repetition | 0.9333333333333333
9: SNG|exactly n repetition | 0.4666666666666667
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4666666666666667
11: ANY|any non-newline char | 0.4
12: NCCC|negated CCC | 0.4
13: DEC|any of: 0123456789 | 0.3333333333333333
14: OR|logical or | 0.2
15: DBB|$n\le x \le m$ repetition | 0.13333333333333333
16: END|end-of-line | 0.13333333333333333
17: LZY|as few reps as possible | 0.13333333333333333
18: NCG|group without capturing | 0.13333333333333333
19: BKRN|references NCG | 0.06666666666666667
20: NWSP|any non-whitespace | 0.06666666666666667
21: STR|start-of-line | 0.06666666666666667


0000 | 0009 | '(?P<name>(.+))\\s+(?P<hexrgb>#[0-9a-fA-F]{6})'
0001 | 0008 | '(?P<a>x)'
0002 | 0008 | '(?P<unk>x)'
0003 | 0007 | '(?P<replace>(?P<type><(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'
0004 | 0002 | '(?P<year>[0-9]{4})(-(?P<month>[0-9]{1,2})(-(?P<day>[0-9]{1,2})((?P<separator>.)(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2})(:(?P<second>[0-9]{2})(\\.(?P<fraction>[0-9]+))?)?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?'
0005 | 0001 | '(?P<clause>\\d+)_(?P<field>.+)$'
0006 | 0001 | '(?P<argkey>[^=]+)=(?P<argvalue>[^&]*)'
0007 | 0001 | '(?P<whitespace>[ \n]*)(?P<entry>[^ \n]+)'
0008 | 0001 | '(?P<protocol>[a-z]+)://(?P<token>[0-9:]+)'
0009 | 0001 | '(?P<name>[a-zA-Z0-9_*]+)(?P<default>=.*?)?, '
0010 | 0001 | '(?P<intDigits>\\d*)(?P<dot>\\.)(?P<fracDigits>\\d+)'
0011 | 0001 | '(?P<pid>\\d+)\\s+rename\\("[^"]*", "(?P<name>[^"]*)"\\)'
0012 | 0001 | '(?P<heading>^\\s*(?P<hmarker>=+)(\\s)*.*(\\s)*(?P=hmarker)( )*$)'
0013 | 0001 | '(?P<integer>[-+]?[0-9]+)(?P<decimal>\\.[0-9]+)?(?P<exponent>e[-+]?[0-9]+)?'
0014 | 0001 | '(?P<protocol>PYROLOC|PYROLOCSSL)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<name>\\S*)'



cluster 29 stats:
nPatterns: 2.0
nProjects: 27
shortest: [,;:\(\)\[\]\{\}<>]+
Features:

1: LIT|a literal character | 13.5
2: CCC|custom character class | 1.0
3: ADD|one-or-more repetition | 0.5


0000 | 0026 | '[ \\(\\)<>@,;:\\\\"/\\[\\]\\?=]'
0001 | 0001 | '[,;:\\(\\)\\[\\]\\{\\}<>]+'



cluster 30 stats:
nPatterns: 8.0
nProjects: 26
shortest: Revision: (.+)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: CCC|custom character class | 0.875
5: DEC|any of: 0123456789 | 0.375
6: RNG|chars within a range | 0.375
7: ANY|any non-newline char | 0.25
8: STR|start-of-line | 0.125
9: WRD|[a-zA-Z0-9\_] | 0.125


0000 | 0017 | 'Revision: (.+)'
0001 | 0002 | 'Fennec/([\\d.]+)'
0002 | 0002 | 'Revision: ([0-9]+)'
0003 | 0002 | 'dot version ([\\d\\.]+)'
0004 | 0001 | 'N=10: ([.0-9]+)'
0005 | 0001 | 'Name=([\\w\\.]+)'
0006 | 0001 | 'Mobile; rv:([\\d.]+)'
0007 | 0001 | '^height.should be ([0-9]+)'



cluster 31 stats:
nPatterns: 18.0
nProjects: 26
shortest: .*?\n
Features:

1: LIT|a literal character | 5.222222222222222
2: KLE|zero-or-more repetition | 1.3888888888888888
3: ANY|any non-newline char | 1.2777777777777777
4: WNW|word/non-word boundary | 0.6666666666666666
5: LZY|as few reps as possible | 0.5
6: CG|a capture group | 0.4444444444444444
7: END|end-of-line | 0.3333333333333333
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.16666666666666666
9: ADD|one-or-more repetition | 0.1111111111111111
10: CCC|custom character class | 0.05555555555555555
11: DEC|any of: 0123456789 | 0.05555555555555555
12: NLKA|sequence doesn't follow  | 0.05555555555555555
13: NWSP|any non-whitespace | 0.05555555555555555
14: OR|logical or | 0.05555555555555555
15: PNG|named capture group | 0.05555555555555555
16: QST|zero-or-one repetition | 0.05555555555555555


0000 | 0012 | '.*?\\n'
0001 | 0012 | '.*{(?P<size>\\d+)}$'
0002 | 0006 | '.*?\\b(as)\\b'
0003 | 0003 | '.*\\.dmg'
0004 | 0003 | '.*\\.exe'
0005 | 0002 | u'.*?\\S\\.\\s'
0006 | 0001 | '.*\\n?'
0007 | 0001 | '.*[\\/]'
0008 | 0001 | '.*\\.fw'
0009 | 0001 | '.*stderr$'
0010 | 0001 | '.*minimr.*'
0011 | 0001 | '.*?\\bpni\\b'
0012 | 0001 | '.*?Opteron\\b'
0013 | 0001 | '.*?\\bsse2\\b'
0014 | 0001 | '.*?Pentium.*?MMX\\b'
0015 | 0001 | '.*\\bin\\b(?!\\b.+ing\\b)'
0016 | 0001 | '.*\\((.*)(\\s*Format*\\s*)\\).*?'
0017 | 0001 | '.*((\\.textile$)|(\\.markdown$)|(\\.org$)|(\\.html$))'



cluster 32 stats:
nPatterns: 7.0
nProjects: 25
shortest: --
Features:

1: LIT|a literal character | 7.428571428571429
2: ADD|one-or-more repetition | 0.7142857142857143
3: CG|a capture group | 0.5714285714285714
4: KLE|zero-or-more repetition | 0.5714285714285714
5: NCCC|negated CCC | 0.5714285714285714
6: QST|zero-or-one repetition | 0.5714285714285714
7: RNG|chars within a range | 0.42857142857142855
8: CCC|custom character class | 0.2857142857142857
9: OR|logical or | 0.2857142857142857
10: ANY|any non-newline char | 0.14285714285714285
11: END|end-of-line | 0.14285714285714285
12: WRD|[a-zA-Z0-9\_] | 0.14285714285714285
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0017 | '--'
0001 | 0003 | '--test-config=(.*)$'
0002 | 0001 | u'-h'
0003 | 0001 | u'--+'
0004 | 0001 | '(--|/)'
0005 | 0001 | '--[0-9]+-- ([^(:]*) \\((0x[0-9a-f]+)\\)'
0006 | 0001 | '--?\\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\\s]+'



cluster 33 stats:
nPatterns: 9.0
nProjects: 25
shortest: \ //(.*)
Features:

1: LIT|a literal character | 7.222222222222222
2: CG|a capture group | 1.1111111111111112
3: KLE|zero-or-more repetition | 1.0
4: ADD|one-or-more repetition | 0.6666666666666666
5: ANY|any non-newline char | 0.4444444444444444
6: LZY|as few reps as possible | 0.4444444444444444
7: DEC|any of: 0123456789 | 0.3333333333333333
8: NCCC|negated CCC | 0.3333333333333333
9: PNG|named capture group | 0.3333333333333333
10: RNG|chars within a range | 0.3333333333333333
11: CCC|custom character class | 0.2222222222222222
12: QST|zero-or-one repetition | 0.2222222222222222
13: NCG|group without capturing | 0.1111111111111111
14: NWSP|any non-whitespace | 0.1111111111111111
15: OR|logical or | 0.1111111111111111


0000 | 0011 | '\\{\\{.*?\\}\\}'
0001 | 0008 | '(\\$\\((.*?)\\))'
0002 | 0002 | '\\d+(\\.\\d*)?'
0003 | 0001 | '\\ //(.*)'
0004 | 0001 | '\\[\\[(.*?)\\]\\]'
0005 | 0001 | '\\[ip:([0-9_]*)\\]'
0006 | 0001 | '\\[([\\.0-9a-f:]+)\\](?::(\\d+))?'
0007 | 0001 | '\\[\\[([^]|[:]*)\\|([^][]*)\\]\\]'
0008 | 0001 | '\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+) +(?P<p>left|right|center)\\]\\]'



cluster 34 stats:
nPatterns: 5.0
nProjects: 24
shortest: \([\d,]+\)
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 0.8
5: NCCC|negated CCC | 0.8
6: QST|zero-or-one repetition | 0.6
7: LZY|as few reps as possible | 0.4
8: CCC|custom character class | 0.2
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0016 | '``([^`\\s]+?)``'
0001 | 0004 | '\\[(\\d?\\d?\\d?)%\\]'
0002 | 0002 | '\\[([^:]+?)\\]'
0003 | 0001 | '\\([\\d,]+\\)'
0004 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'



cluster 35 stats:
nPatterns: 8.0
nProjects: 24
shortest: [\x00-\x20]
Features:

1: LIT|a literal character | 5.0
2: RNG|chars within a range | 1.875
3: CCC|custom character class | 1.0
4: ADD|one-or-more repetition | 0.25
5: CG|a capture group | 0.125
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125


0000 | 0009 | '([\\x00-\\x7F])+'
0001 | 0007 | '[\\x00-\\x20]'
0002 | 0004 | u'[`\x00- \x7f-\xa0\\s]+'
0003 | 0003 | '[\\x00-\\x1f]'
0004 | 0002 | '[=\x7f-\xff]'
0005 | 0001 | u'[\\000-\\037]'
0006 | 0001 | '[\\-a-zA-Z0-9\\x80-\\xff_\\.\\@\\!\\#\\%\\:]'
0007 | 0001 | '[\\x00-\\x08\\x0B-\\x0C\\x0E-\\x1F\\x7F-\\xFF]'



cluster 36 stats:
nPatterns: 12.0
nProjects: 24
shortest: ^ *\n
Features:

1: LIT|a literal character | 6.083333333333333
2: KLE|zero-or-more repetition | 1.5833333333333333
3: ANY|any non-newline char | 1.3333333333333333
4: STR|start-of-line | 0.9166666666666666
5: ADD|one-or-more repetition | 0.5833333333333334
6: END|end-of-line | 0.5833333333333334
7: CG|a capture group | 0.4166666666666667
8: DEC|any of: 0123456789 | 0.4166666666666667
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25
10: LZY|as few reps as possible | 0.16666666666666666
11: PNG|named capture group | 0.16666666666666666
12: CCC|custom character class | 0.08333333333333333
13: NCCC|negated CCC | 0.08333333333333333
14: NWSP|any non-whitespace | 0.08333333333333333


0000 | 0013 | '^ *\n'
0001 | 0012 | '^-*\n'
0002 | 0002 | '^.*\\/'
0003 | 0002 | '^.*?(v[\\d\\.]+).*?$'
0004 | 0001 | '^.*\\('
0005 | 0001 | '[^.]*\\.\\..*'
0006 | 0001 | '^.*\\.img.gz$'
0007 | 0001 | '^.*RLELossless.*$'
0008 | 0001 | '^.*JPEGLossless.*$'
0009 | 0001 | '^#wal_level\\s*=.*$'
0010 | 0001 | '^.*(\\d+){(\\d+),(\\d+),(.)}.*$'
0011 | 0001 | '^.*\\s+mail exchanger = (?P<priority>\\d+) (?P<host>\\S+)\\s*$'



cluster 37 stats:
nPatterns: 16.0
nProjects: 24
shortest: ^(?P<x>\d+)?(?:x(?P<y>\d+))?$
Features:

1: LIT|a literal character | 8.9375
2: PNG|named capture group | 3.5625
3: DEC|any of: 0123456789 | 3.25
4: ADD|one-or-more repetition | 2.0625
5: CCC|custom character class | 2.0625
6: QST|zero-or-one repetition | 1.875
7: RNG|chars within a range | 1.25
8: STR|start-of-line | 1.0
9: END|end-of-line | 0.875
10: SNG|exactly n repetition | 0.8125
11: CG|a capture group | 0.75
12: DBB|$n\le x \le m$ repetition | 0.25
13: OR|logical or | 0.25
14: ANY|any non-newline char | 0.125
15: NCCC|negated CCC | 0.125
16: NCG|group without capturing | 0.125
17: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125
18: KLE|zero-or-more repetition | 0.0625
19: LWB|at least n repetition | 0.0625
20: LZY|as few reps as possible | 0.0625
21: WRD|[a-zA-Z0-9\_] | 0.0625


0000 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0001 | 0011 | '^(?P<initial>\\d{1})(?P<yy>\\d\\d)(?P<mm>\\d\\d)(?P<dd>\\d\\d)(?P<mid>\\d{4})(?P<checksum>\\d{1})'
0002 | 0005 | '^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<subminor>\\d+))((rc(?P<release_candidate>\\d+))|dev)?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'
0003 | 0003 | u'^(?P<number>\\d{7})(?P<check>\\d)$'
0004 | 0003 | u'^(?P<number>\\d{1,8})-?(?P<check>\\d)$'
0005 | 0003 | u'^(?P<residence>\\d{10})(?P<origin>\\w{1,3})[-\\ ]?(?P<birthday>\\d{7})[-\\ ]?(?P<validity>\\d{7})[-\\ ]?(?P<checksum>\\d{1})$'
0006 | 0002 | '^(?P<date>\\d{4}-\\d{2}-\\d{2})\\s+(?P<name>.+?)\\s+<(?P<email>[^<>]+)>$'
0007 | 0001 | '^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'
0008 | 0001 | '^(?P<bytes>\\d+)(?P<unit>[gmkb]?)$'
0009 | 0001 | '^{(?P<w>[^[\\]()]+)(?:\\[(?P<i>\\d+)\\])?}$'
0010 | 0001 | '^(?P<neg>-?)---(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0011 | 0001 | '^(?P<area>1\\d1|11\\d|8\\d\\d)(?P<area2>\\d{3})(?P<station>\\d+)$'
0012 | 0001 | '^(?P<user>[ugo]{0,3})(?P<action>[\\+\\-])(?P<value>[rwxst]{1,3})$'
0013 | 0001 | '^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0014 | 0001 | '^(?P<username>[A-Za-z0-9_\\.-]+@)?(?P<hostname>[A-Za-z0-9_\\.-]+):(?P<path>.*)'
0015 | 0001 | '^(?P<sign>[+-])?P(?P<years>[0-9]+([,.][0-9]+)?Y)?(?P<months>[0-9]+([,.][0-9]+)?M)?(?P<weeks>[0-9]+([,.][0-9]+)?W)?(?P<days>[0-9]+([,.][0-9]+)?D)?((?P<separator>T)(?P<hours>[0-9]+([,.][0-9]+)?H)?(?P<minutes>[0-9]+([,.][0-9]+)?M)?(?P<seconds>[0-9]+([,.][0-9]+)?S)?)?$'



cluster 38 stats:
nPatterns: 5.0
nProjects: 23
shortest: ([$]{[^}]*})
Features:

1: LIT|a literal character | 6.4
2: CCC|custom character class | 1.4
3: KLE|zero-or-more repetition | 1.2
4: RNG|chars within a range | 1.2
5: CG|a capture group | 0.6
6: ADD|one-or-more repetition | 0.4
7: ANY|any non-newline char | 0.4
8: NCCC|negated CCC | 0.4
9: OR|logical or | 0.4
10: QST|zero-or-one repetition | 0.4
11: WRD|[a-zA-Z0-9\_] | 0.2


0000 | 0019 | '\\$(\\w+|\\{[^}]*\\})'
0001 | 0001 | '([$]{[^}]*})'
0002 | 0001 | '(0|[1-9][0-9]*):'
0003 | 0001 | '.*[0-9]_srcCol[0-9].*'
0004 | 0001 | '\\$[0-9]+\\,?\\.?[0-9]*'



cluster 39 stats:
nPatterns: 6.0
nProjects: 22
shortest: ^\S+
Features:

1: LIT|a literal character | 7.166666666666667
2: ADD|one-or-more repetition | 2.3333333333333335
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
5: NWSP|any non-whitespace | 0.8333333333333334
6: DEC|any of: 0123456789 | 0.6666666666666666
7: CG|a capture group | 0.5
8: END|end-of-line | 0.5
9: PNG|named capture group | 0.5
10: CCC|custom character class | 0.3333333333333333
11: LKA|matching sequence follows | 0.16666666666666666
12: LWB|at least n repetition | 0.16666666666666666
13: LZY|as few reps as possible | 0.16666666666666666
14: OR|logical or | 0.16666666666666666
15: QST|zero-or-one repetition | 0.16666666666666666


0000 | 0014 | '^\\s+$'
0001 | 0003 | '(^\\s+Invalid write of size )\\d+'
0002 | 0003 | '^\\s+(?P<conn>\\d+)\\s+(?P<acc>\\d+)\\s+(?P<req>\\d+)'
0003 | 0001 | '^\\S+'
0004 | 0001 | '^\\S+ (\\S+)@(\\S+)$'
0005 | 0001 | '^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)'



cluster 40 stats:
nPatterns: 3.0
nProjects: 21
shortest: url="([^"]+)"
Features:

1: LIT|a literal character | 10.333333333333334
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: CG|a capture group | 0.6666666666666666
5: STR|start-of-line | 0.3333333333333333
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0018 | 'url="([^"]+)"'
0001 | 0002 | 'timestamp="[^"]+"'
0002 | 0001 | '^%include\\s"([^"]+)"'



cluster 41 stats:
nPatterns: 14.0
nProjects: 21
shortest: (?i)b+
Features:

1: LIT|a literal character | 10.642857142857142
2: OPT|options wrapper | 0.9285714285714286
3: CG|a capture group | 0.7142857142857143
4: ADD|one-or-more repetition | 0.6428571428571429
5: QST|zero-or-one repetition | 0.5
6: KLE|zero-or-more repetition | 0.42857142857142855
7: RNG|chars within a range | 0.42857142857142855
8: ANY|any non-newline char | 0.35714285714285715
9: CCC|custom character class | 0.35714285714285715
10: NCCC|negated CCC | 0.35714285714285715
11: NCG|group without capturing | 0.35714285714285715
12: OR|logical or | 0.2857142857142857
13: DEC|any of: 0123456789 | 0.14285714285714285
14: END|end-of-line | 0.14285714285714285
15: WNW|word/non-word boundary | 0.14285714285714285
16: DBB|$n\le x \le m$ repetition | 0.07142857142857142
17: STR|start-of-line | 0.07142857142857142
18: WRD|[a-zA-Z0-9\_] | 0.07142857142857142


0000 | 0008 | '(?i)b+'
0001 | 0002 | '(?i)handy(.*)nummer'
0002 | 0002 | '(?i)pager(.*)nummer'
0003 | 0002 | '(</?(?:ul|li)[^>]*>)'
0004 | 0002 | '(?i)gesch\xc3\xa4fts(.*)nummer'
0005 | 0002 | '(?i)^(\\d+(?:\\.\\d+)?)([kMGTPEZY]?)$'
0006 | 0001 | '(?i).+\\.nfo$'
0007 | 0001 | '(?i)<br[^>]*>'
0008 | 0001 | "(?i)\\b(D)('ye)\\b"
0009 | 0001 | u'(?s)<[^>]*>|&#?\\w+;'
0010 | 0001 | '(?:[.~]|/[a-zA-Z_0-9]+)/'
0011 | 0001 | '(?i)incorporated|(?i)inc.'
0012 | 0001 | '(?i)<[a-z\\.&_0-9\\@\\-]+>'
0013 | 0001 | '(?i)(?:https?://)?(?:www\\.)?dailymotion\\.[a-z]{2,3}/video/([^_/]+)_([^/]+)'



cluster 42 stats:
nPatterns: 7.0
nProjects: 19
shortest: ^[a-zA-Z]*$
Features:

1: LIT|a literal character | 6.857142857142857
2: RNG|chars within a range | 2.2857142857142856
3: KLE|zero-or-more repetition | 1.4285714285714286
4: CCC|custom character class | 1.2857142857142858
5: STR|start-of-line | 1.0
6: END|end-of-line | 0.8571428571428571
7: WRD|[a-zA-Z0-9\_] | 0.7142857142857143
8: CG|a capture group | 0.2857142857142857
9: ANY|any non-newline char | 0.14285714285714285
10: OR|logical or | 0.14285714285714285
11: QST|zero-or-one repetition | 0.14285714285714285


0000 | 0009 | '^\\$([_a-zA-Z]\\w*|{[_a-zA-Z]\\w*})$'
0001 | 0008 | '^([a-zA-F0-9_-]*)[\\.]?.*$'
0002 | 0007 | '^[a-zA-Z_]\\w*'
0003 | 0003 | '^[\\w\\.\\-\\/]*$'
0004 | 0003 | '^[+/0-9A-Za-z]*=*$'
0005 | 0001 | '^[a-zA-Z]*$'
0006 | 0001 | '^[a-z|A-Z]\\w*$'



cluster 43 stats:
nPatterns: 8.0
nProjects: 19
shortest: <key>.*?</key>
Features:

1: LIT|a literal character | 14.125
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.75
4: LZY|as few reps as possible | 0.75
5: CG|a capture group | 0.625
6: NCCC|negated CCC | 0.25


0000 | 0007 | '<title>(.*?)</title>'
0001 | 0006 | '<root>([^<]*)</root>'
0002 | 0003 | '<key>.*?</key>'
0003 | 0001 | '<url>.*?</url>'
0004 | 0001 | 'LawText1">(.*?)</'
0005 | 0001 | '<script .*?</script>'
0006 | 0001 | '<TITLE>([^<]*)</TITLE>'
0007 | 0001 | '<studio>(.*?)</studio>'



cluster 44 stats:
nPatterns: 5.0
nProjects: 18
shortest: %(.)
Features:

1: LIT|a literal character | 2.2
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: CCC|custom character class | 0.6
5: RNG|chars within a range | 0.6
6: NWNW|negated WNW | 0.4


0000 | 0008 | '\\B(b.)\\B'
0001 | 0004 | u'\\\\(.)'
0002 | 0003 | '\\\\([0-3][0-7][0-7])'
0003 | 0002 | '%(.)'
0004 | 0001 | '%(..)'



cluster 45 stats:
nPatterns: 4.0
nProjects: 18
shortest: (.*?)([\\\{\}\[\]])(.*)
Features:

1: LIT|a literal character | 11.25
2: CG|a capture group | 2.25
3: KLE|zero-or-more repetition | 1.5
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 0.75
7: NCCC|negated CCC | 0.75
8: DEC|any of: 0123456789 | 0.5
9: LZY|as few reps as possible | 0.5
10: OR|logical or | 0.25
11: QST|zero-or-one repetition | 0.25
12: RNG|chars within a range | 0.25


0000 | 0014 | '(.*/|)([^/]+\\.[a-z]+:\\d+):(\\d+:)? warning:'
0001 | 0002 | '(.*?)([\\\\\\{\\}\\[\\]])(.*)'
0002 | 0001 | '[^\\(\\)]*\\((.*?)\\)[^\\(\\)]'
0003 | 0001 | "(\\\\*)(['`:*~\\\\[\\]{}@\\$+\\-.#])"



cluster 46 stats:
nPatterns: 8.0
nProjects: 18
shortest: &(?!\#)
Features:

1: LIT|a literal character | 3.125
2: CG|a capture group | 0.75
3: NLKB|sequence doesn't precede | 0.75
4: ADD|one-or-more repetition | 0.375
5: NLKA|sequence doesn't follow  | 0.375
6: CCC|custom character class | 0.25
7: NCCC|negated CCC | 0.25
8: WRD|[a-zA-Z0-9\_] | 0.25
9: DEC|any of: 0123456789 | 0.125
10: KLE|zero-or-more repetition | 0.125


0000 | 0005 | '(?<!\\\\),'
0001 | 0004 | '&(?!\\#)'
0002 | 0004 | u'(?<!%)%(?!%)'
0003 | 0004 | '(?<!\\\\)((\\\\\\\\)*)\\\\n'
0004 | 0001 | '(?<!\\\\)%'
0005 | 0001 | '(?<!\\\\)[^"\\]\\[\\$]+'
0006 | 0001 | '(\\[\\[)([^$]+)(\\]\\])'
0007 | 0001 | u'(?<![\\w])(\\d+)L(?![\\w])'



cluster 47 stats:
nPatterns: 10.0
nProjects: 18
shortest: ^:.*[MAD]\s+(.+)$
Features:

1: LIT|a literal character | 6.7
2: ADD|one-or-more repetition | 1.8
3: CG|a capture group | 1.8
4: KLE|zero-or-more repetition | 1.0
5: END|end-of-line | 0.9
6: STR|start-of-line | 0.9
7: ANY|any non-newline char | 0.8
8: CCC|custom character class | 0.8
9: NCCC|negated CCC | 0.6
10: RNG|chars within a range | 0.6
11: QST|zero-or-one repetition | 0.5
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
13: DEC|any of: 0123456789 | 0.4
14: LZY|as few reps as possible | 0.3
15: NCG|group without capturing | 0.1


0000 | 0009 | '^([A-Z]+)([1-9][0-9]*)$'
0001 | 0001 | '^:.*[MAD]\\s+(.+)$'
0002 | 0001 | '^(-?[0-9\\.]+)\\s*cm$'
0003 | 0001 | '(<[^<]*snum=)([^">]+)>'
0004 | 0001 | '^([^:]+):\\s+(.+)\\s*$'
0005 | 0001 | '^(\\d+\\.x-)?(\\d+)\\..*$'
0006 | 0001 | '^nic\\.\\d+\\.(.*)\\.\\d+$'
0007 | 0001 | '^(.+?): .*?(\\(attached\\))?$'
0008 | 0001 | '^([^<,]+)\\s*(?:<([^>,]+)>)?$'
0009 | 0001 | '^(.+?)[ \\._\\-]\\[?([0-9]+)x([0-9]+)[^\\/]*$'



cluster 48 stats:
nPatterns: 4.0
nProjects: 17
shortest: ()
Features:

1: LIT|a literal character | 2.25
2: CG|a capture group | 0.75
3: CCC|custom character class | 0.5
4: QST|zero-or-one repetition | 0.25


0000 | 0015 | '()'
0001 | 0007 | '(a)(b)?b'
0002 | 0001 | '[().]'
0003 | 0001 | '[()\\134]'



cluster 49 stats:
nPatterns: 8.0
nProjects: 16
shortest: ^([A-Z]+)([0-9]+)$
Features:

1: LIT|a literal character | 9.875
2: ADD|one-or-more repetition | 3.125
3: CG|a capture group | 2.75
4: RNG|chars within a range | 2.375
5: CCC|custom character class | 1.75
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
9: NCCC|negated CCC | 0.5
10: QST|zero-or-one repetition | 0.375
11: ANY|any non-newline char | 0.25
12: DEC|any of: 0123456789 | 0.25
13: KLE|zero-or-more repetition | 0.25
14: NCG|group without capturing | 0.25
15: NWSP|any non-whitespace | 0.25
16: SNG|exactly n repetition | 0.25
17: WRD|[a-zA-Z0-9\_] | 0.25
18: DBB|$n\le x \le m$ repetition | 0.125
19: LZY|as few reps as possible | 0.125


0000 | 0008 | '^([a-f0-9]+)\\s(.{7})\\s(\\S+)\\s+([a-f0-9]+)\\s+(?:\\.hidden\\s+)?(.*)$'
0001 | 0002 | '^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'
0002 | 0001 | '^([A-Z]+)([0-9]+)$'
0003 | 0001 | '^([^ ]+) = ([0-9\\.]+)$'
0004 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'
0005 | 0001 | '^([^;]+);([^;]+):(\\d{1,5})$'
0006 | 0001 | '^([+\\-])?\\$([^\\$\\{\\}]+)$'
0007 | 0001 | '^([-_./a-zA-Z0-9]+)\\s+(\\d+)\\s+(\\S+?)((?:\\s+[-_./a-zA-Z0-9]+=[-_./a-zA-Z0-9]+)*)$'



cluster 50 stats:
nPatterns: 3.0
nProjects: 15
shortest: Key-
Features:

1: LIT|a literal character | 6.666666666666667
2: STR|start-of-line | 0.3333333333333333


0000 | 0013 | 'Key-'
0001 | 0001 | '^KEY_'
0002 | 0001 | 'KEYBOARDTYPE'



cluster 51 stats:
nPatterns: 2.0
nProjects: 13
shortest: ^name$
Features:

1: LIT|a literal character | 19.5
2: ANY|any non-newline char | 1.5
3: CG|a capture group | 1.5
4: KLE|zero-or-more repetition | 1.5
5: ADD|one-or-more repetition | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0012 | '^name="(.*)"\\s+certificate="(.*)"\\s+private_key="(.*)"$'
0001 | 0001 | '^name$'



cluster 52 stats:
nPatterns: 2.0
nProjects: 13
shortest: SECRET|PASSWORD|PROFANITIES_LIST
Features:

1: LIT|a literal character | 34.5
2: OR|logical or | 1.0


0000 | 0008 | 'SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE'
0001 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'



cluster 53 stats:
nPatterns: 7.0
nProjects: 13
shortest: \$$
Features:

1: LIT|a literal character | 2.5714285714285716
2: ADD|one-or-more repetition | 0.8571428571428571
3: CG|a capture group | 0.8571428571428571
4: WRD|[a-zA-Z0-9\_] | 0.5714285714285714
5: ANY|any non-newline char | 0.14285714285714285
6: BKR|match the $i^{th}$ CG | 0.14285714285714285
7: CCC|custom character class | 0.14285714285714285
8: END|end-of-line | 0.14285714285714285
9: KLE|zero-or-more repetition | 0.14285714285714285
10: LZY|as few reps as possible | 0.14285714285714285
11: NWSP|any non-whitespace | 0.14285714285714285
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0004 | '\\$(\\w+)'
0001 | 0003 | '\\${(\\w+)}'
0002 | 0002 | '\\|(\\S+)\\|'
0003 | 0001 | '\\$$'
0004 | 0001 | '\\{(\\w+)\\}'
0005 | 0001 | '[RL]\\{(.+)\\}'
0006 | 0001 | '\\<(\\w+?)\\>\\s*\\</\\1\\>'



cluster 54 stats:
nPatterns: 4.0
nProjects: 13
shortest: \s*def\s+(p_[a-zA-Z_0-9]*)\(
Features:

1: LIT|a literal character | 20.0
2: RNG|chars within a range | 6.5
3: CG|a capture group | 2.75
4: ADD|one-or-more repetition | 2.0
5: CCC|custom character class | 2.0
6: KLE|zero-or-more repetition | 2.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.25
8: NCCC|negated CCC | 0.5
9: ANY|any non-newline char | 0.25
10: LZY|as few reps as possible | 0.25


0000 | 0009 | '\\s*def\\s+(p_[a-zA-Z_0-9]*)\\('
0001 | 0002 | '\\s*#define\\s+([a-zA-Z][a-zA-Z_0-9]*)\\s+([a-zA-Z_0-9]+)'
0002 | 0001 | '([^a-zA-Z0-9]*)([a-zA-Z0-9]+)([^a-zA-Z0-9]*)'
0003 | 0001 | '([# ]*?)([a-zA-Z0-9_]+)( +)([a-zA-Z0-9_\\?\\!<>\\+=\\.]+)(.*)'



cluster 55 stats:
nPatterns: 8.0
nProjects: 13
shortest: (.+)\!$
Features:

1: LIT|a literal character | 6.5
2: CG|a capture group | 2.375
3: ADD|one-or-more repetition | 2.0
4: ANY|any non-newline char | 1.25
5: CCC|custom character class | 0.75
6: DEC|any of: 0123456789 | 0.75
7: END|end-of-line | 0.375
8: NLKB|sequence doesn't precede | 0.25
9: OR|logical or | 0.25
10: QST|zero-or-one repetition | 0.25
11: WRD|[a-zA-Z0-9\_] | 0.25
12: DBB|$n\le x \le m$ repetition | 0.125
13: KLE|zero-or-more repetition | 0.125
14: LZY|as few reps as possible | 0.125
15: NCG|group without capturing | 0.125
16: NLKA|sequence doesn't follow  | 0.125
17: RNG|chars within a range | 0.125
18: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.125


0000 | 0005 | '(.+)\\!$'
0001 | 0003 | '`(.+?)`'
0002 | 0001 | '(.+):(\\d+): (.+)$'
0003 | 0001 | '(.+):([0-9]+)[:]{0,1}.*'
0004 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)(\\w?)'
0005 | 0001 | '(.+)[.](proto|impl|init|cleanup)$'
0006 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'
0007 | 0001 | '(.+)(?:(?<!<br>)|(?<!<br />))\\n(?![#*\\s|])'



cluster 56 stats:
nPatterns: 4.0
nProjects: 12
shortest: (?:(?:\n\r?)|^)( *)\S
Features:

1: LIT|a literal character | 3.5
2: NCG|group without capturing | 1.75
3: KLE|zero-or-more repetition | 1.0
4: CG|a capture group | 0.75
5: DEC|any of: 0123456789 | 0.75
6: OR|logical or | 0.75
7: SNG|exactly n repetition | 0.75
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
9: ADD|one-or-more repetition | 0.25
10: ANY|any non-newline char | 0.25
11: NLKA|sequence doesn't follow  | 0.25
12: NLKB|sequence doesn't precede | 0.25
13: NWSP|any non-whitespace | 0.25
14: QST|zero-or-one repetition | 0.25
15: STR|start-of-line | 0.25


0000 | 0007 | '(?:(?<!\\r)\\n)|(?:\\r(?!\\n))'
0001 | 0003 | '(?:\\s*|((?:\\\\\\\\)+))\\\\\\n\\s*'
0002 | 0001 | u'(?:(?:\n\r?)|^)( *)\\S'
0003 | 0001 | '(?:\\d{2}:\\d{2}:\\d{2}) (.*)'



cluster 57 stats:
nPatterns: 4.0
nProjects: 12
shortest: ([\-]?\d*)\s*([A-Za-z]+([\-@]\d*[A-Za-z]+)?)
Features:

1: LIT|a literal character | 17.75
2: CCC|custom character class | 5.25
3: RNG|chars within a range | 3.75
4: CG|a capture group | 3.5
5: KLE|zero-or-more repetition | 3.0
6: ADD|one-or-more repetition | 2.0
7: DEC|any of: 0123456789 | 1.25
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
9: QST|zero-or-one repetition | 0.5
10: OR|logical or | 0.25
11: STR|start-of-line | 0.25


0000 | 0010 | '^[ \\t]*(def|class)[ \\t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \\t]*[:\\(]'
0001 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*)[\\s\t]*([0-9:, -]+)'
0002 | 0001 | '([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'
0003 | 0001 | '([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+)[\\s\t]*([0-9:, -]+)'



cluster 58 stats:
nPatterns: 2.0
nProjects: 11
shortest: \|
Features:

1: LIT|a literal character | 7.5
2: RNG|chars within a range | 1.0
3: CCC|custom character class | 0.5
4: OR|logical or | 0.5


0000 | 0007 | '\\|'
0001 | 0004 | '\\\\|\\/|\\||\\:|\\?|\\*|"|<|>|[\x00-\x1f\x7f-\x9f]/'



cluster 59 stats:
nPatterns: 3.0
nProjects: 11
shortest: url
Features:

1: LIT|a literal character | 5.666666666666667
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: KLE|zero-or-more repetition | 1.3333333333333333
4: NCCC|negated CCC | 1.3333333333333333
5: ADD|one-or-more repetition | 0.6666666666666666
6: LZY|as few reps as possible | 0.6666666666666666


0000 | 0006 | 'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0001 | 0004 | u'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0002 | 0001 | 'url'



cluster 60 stats:
nPatterns: 2.0
nProjects: 11
shortest: ^[0-9x]+ [0-9xA-F]+ .* [A-Z][A-Z] [0-9].*$
Features:

1: LIT|a literal character | 20.0
2: CCC|custom character class | 5.0
3: RNG|chars within a range | 4.5
4: ADD|one-or-more repetition | 2.5
5: KLE|zero-or-more repetition | 2.0
6: ANY|any non-newline char | 1.0
7: STR|start-of-line | 1.0
8: CG|a capture group | 0.5
9: END|end-of-line | 0.5


0000 | 0010 | '^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)[\t ]+'
0001 | 0001 | '^[0-9x]+ [0-9xA-F]+ .* [A-Z][A-Z] [0-9].*$'



cluster 61 stats:
nPatterns: 3.0
nProjects: 10
shortest: \n      ^\s*   # Start of a new line and whitespace\n      /\*    # Opening "/*"\n      .*?    # Non greedy match of any characters (including newlines)\n      \*/    # Closing "*/
Features:

1: LIT|a literal character | 186.66666666666666
2: KLE|zero-or-more repetition | 5.666666666666667
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: ANY|any non-newline char | 3.3333333333333335
5: LZY|as few reps as possible | 2.6666666666666665
6: NCG|group without capturing | 2.6666666666666665
7: CG|a capture group | 2.0
8: ADD|one-or-more repetition | 1.6666666666666667
9: CCC|custom character class | 1.6666666666666667
10: PNG|named capture group | 1.3333333333333333
11: BKR|match the $i^{th}$ CG | 1.0
12: OR|logical or | 1.0
13: NCCC|negated CCC | 0.6666666666666666
14: QST|zero-or-one repetition | 0.6666666666666666
15: RNG|chars within a range | 0.6666666666666666
16: END|end-of-line | 0.3333333333333333
17: STR|start-of-line | 0.3333333333333333
18: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0003 | '\n      ^\\s*   # Start of a new line and whitespace\n      /\\*    # Opening "/*"\n      .*?    # Non greedy match of any characters (including newlines)\n      \\*/    # Closing "*/'
0001 | 0003 | '\n    (\n        (?:".*?")|              # double quotes\n        (?:\'.*?\')|              # single quotes\n        (?:[^\'",\\s=][^,=]*?)       # unquoted\n    )\n    (?:\n    (?:\\s*,\\s*)|(?:\\s*$)            # comma\n    )\n'
0002 | 0002 | '\n        <!DOCTYPE\n        \\s+(?P<name>[a-zA-Z_:][\\w:.-]*)\n        \\s+(?:\n            SYSTEM\\s+(["\'])(?P<system_id_a>.*?)\\2\n            |\n            PUBLIC\n            \\s+(["\'])(?P<public_id_b>.*?)\\4\n            # HTML 3.2 and 2.0 doctypes don\'t include a system-id.\n            (?:\\s+(["\'])(?P<system_id_b>.*?)\\6)?\n        )\n        (\\s*\\[.*?\\])?        \n        \\s*>\n        '



cluster 62 stats:
nPatterns: 5.0
nProjects: 9
shortest: \.exe$
Features:

1: LIT|a literal character | 4.8
2: END|end-of-line | 1.0
3: ADD|one-or-more repetition | 0.2
4: DEC|any of: 0123456789 | 0.2
5: OR|logical or | 0.2


0000 | 0004 | '\\.exe$'
0001 | 0002 | '\\.repeat\\d+'
0002 | 0001 | '\\.mar$'
0003 | 0001 | '\\.php$'
0004 | 0001 | '\\.pyc$|~$'



cluster 63 stats:
nPatterns: 2.0
nProjects: 9
shortest: [ \t]*\n([^\r\n])
Features:

1: LIT|a literal character | 12.5
2: CCC|custom character class | 3.5
3: KLE|zero-or-more repetition | 2.5
4: RNG|chars within a range | 2.0
5: CG|a capture group | 1.5
6: ADD|one-or-more repetition | 1.0
7: NCCC|negated CCC | 0.5


0000 | 0008 | '[ \t]*([A-Z0-9a-z_]+)[ \t]*=[ \t]*([-0-9]+)[, \t]*'
0001 | 0001 | '[ \\t]*\\n([^\\r\\n])'



cluster 64 stats:
nPatterns: 3.0
nProjects: 9
shortest: ^(..[^\(:]+)?[\(:](\d+)[\):]:?\s*(.*)
Features:

1: LIT|a literal character | 8.666666666666666
2: CG|a capture group | 2.3333333333333335
3: ADD|one-or-more repetition | 2.0
4: KLE|zero-or-more repetition | 2.0
5: CCC|custom character class | 1.6666666666666667
6: NCCC|negated CCC | 1.6666666666666667
7: QST|zero-or-one repetition | 1.6666666666666667
8: ANY|any non-newline char | 1.3333333333333333
9: NCG|group without capturing | 1.0
10: OR|logical or | 1.0
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
12: RNG|chars within a range | 0.6666666666666666
13: STR|start-of-line | 0.6666666666666666
14: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
15: DEC|any of: 0123456789 | 0.3333333333333333
16: END|end-of-line | 0.3333333333333333
17: NLKA|sequence doesn't follow  | 0.3333333333333333
18: WNW|word/non-word boundary | 0.3333333333333333


0000 | 0006 | '\\([^()]*\\b(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'
0001 | 0002 | '^(..[^\\(:]+)?[\\(:](\\d+)[\\):]:?\\s*(.*)'
0002 | 0001 | '^((?:[^-]+|-(?![0-9]))+)-([0-9][^-]*)(?:-(.*))?$'



cluster 65 stats:
nPatterns: 1.0
nProjects: 8
shortest: ^DYNAMIC SYMBOL TABLE
Features:

1: LIT|a literal character | 20.0
2: STR|start-of-line | 1.0


0000 | 0008 | '^DYNAMIC SYMBOL TABLE'



cluster 66 stats:
nPatterns: 4.0
nProjects: 8
shortest: (\w+)(.*)
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 2.25
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.25
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0
7: WRD|[a-zA-Z0-9\_] | 0.75
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75


0000 | 0005 | '(\\w+)(.*)'
0001 | 0002 | '(\\d+):.*virtio\\d+-input.\\d'
0002 | 0001 | 'name\\s+"(.*)",'
0003 | 0001 | '(\\d+)\\s+\\w+\\s+(\\w+).*'



cluster 67 stats:
nPatterns: 4.0
nProjects: 8
shortest: (\$\([^\)]*\))
Features:

1: LIT|a literal character | 3.75
2: CG|a capture group | 2.25
3: ADD|one-or-more repetition | 1.25
4: ANY|any non-newline char | 0.75
5: KLE|zero-or-more repetition | 0.75
6: LZY|as few reps as possible | 0.5
7: NWSP|any non-whitespace | 0.5
8: WRD|[a-zA-Z0-9\_] | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
10: BKR|match the $i^{th}$ CG | 0.25
11: END|end-of-line | 0.25
12: LKA|matching sequence follows | 0.25
13: LKB|matching sequence precedes | 0.25
14: NCCC|negated CCC | 0.25
15: OR|logical or | 0.25


0000 | 0003 | '(\\w+)-(\\w+)\\ : (.*)'
0001 | 0002 | '(\\s*)(\\\\.+?)(\\s+)$'
0002 | 0002 | '(\\*|_) (?=\\S) (.+?) (?<=\\S) \\1'
0003 | 0001 | '(\\$\\([^\\)]*\\))'



cluster 68 stats:
nPatterns: 3.0
nProjects: 8
shortest: [^.]*
Features:

1: LIT|a literal character | 6.666666666666667
2: KLE|zero-or-more repetition | 3.6666666666666665
3: NCCC|negated CCC | 3.3333333333333335
4: CG|a capture group | 2.0
5: ADD|one-or-more repetition | 1.0
6: NWSP|any non-whitespace | 0.6666666666666666
7: CCC|custom character class | 0.3333333333333333
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0006 | '[^.]*'
0001 | 0001 | '[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*'
0002 | 0001 | '[^\\t]*\\t([^\\t]*)\\t([^\\t]*)\\t[^\\t]*\\t[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\n'



cluster 69 stats:
nPatterns: 2.0
nProjects: 8
shortest: (\d+),\s*(\d+),\s*(\d+),\s*(\d+),\s*(\d+)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 5.0
3: CG|a capture group | 5.0
4: KLE|zero-or-more repetition | 4.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
6: DEC|any of: 0123456789 | 2.5
7: CCC|custom character class | 1.5
8: WRD|[a-zA-Z0-9\_] | 1.5
9: NCCC|negated CCC | 1.0
10: QST|zero-or-one repetition | 1.0


0000 | 0005 | '([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'
0001 | 0003 | '(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)'



cluster 70 stats:
nPatterns: 8.0
nProjects: 8
shortest: href="(.*?)"
Features:

1: LIT|a literal character | 16.375
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 0.875
6: CCC|custom character class | 0.25


0000 | 0002 | '<map id="(.*?)"'
0001 | 0001 | 'href="(.*?)"'
0002 | 0001 | 'Href="(.*?)">'
0003 | 0001 | '<link href="(.*?)"'
0004 | 0001 | 'gene_id \\"(.*?)\\"'
0005 | 0001 | 'var-bind=[\'"](.*)["\']'
0006 | 0001 | '<FRAME SRC="(.*?)" NAME="CONTENT"'
0007 | 0001 | u'<a href="(.*?)" class="historylink">History</a>'



cluster 71 stats:
nPatterns: 4.0
nProjects: 8
shortest:   
Features:

1: LIT|a literal character | 148.0
2: ANY|any non-newline char | 5.0
3: CG|a capture group | 2.25
4: DEC|any of: 0123456789 | 1.5
5: PNG|named capture group | 1.5
6: QST|zero-or-one repetition | 1.5
7: KLE|zero-or-more repetition | 1.25
8: OR|logical or | 0.75
9: ADD|one-or-more repetition | 0.5
10: CCC|custom character class | 0.5
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
12: ENDZ|absolute end of string | 0.25
13: LKA|matching sequence follows | 0.25
14: STR|start-of-line | 0.25


0000 | 0003 | '  '
0001 | 0003 | '        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)              # ...a number (with at least one digit)\n        (?P<int>\\d*)             # having a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'
0002 | 0001 | ' ( +)|^ '
0003 | 0001 | '        Log text 1 \\(issue 321\\).'



cluster 72 stats:
nPatterns: 3.0
nProjects: 8
shortest: \n  =\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \?=                   # literal ?=\n  (?=[ \t]|$)           # whitespace or the end of the string\n  
Features:

1: LIT|a literal character | 627.6666666666666
2: CCC|custom character class | 11.333333333333334
3: RNG|chars within a range | 11.333333333333334
4: DEC|any of: 0123456789 | 5.666666666666667
5: QST|zero-or-one repetition | 5.333333333333333
6: DBB|$n\le x \le m$ repetition | 3.6666666666666665
7: OR|logical or | 2.6666666666666665
8: CG|a capture group | 2.3333333333333335
9: KLE|zero-or-more repetition | 2.0
10: NCG|group without capturing | 2.0
11: SNG|exactly n repetition | 2.0
12: ADD|one-or-more repetition | 1.6666666666666667
13: END|end-of-line | 1.0
14: PNG|named capture group | 1.0
15: LZY|as few reps as possible | 0.6666666666666666
16: NLKB|sequence doesn't precede | 0.6666666666666666
17: STR|start-of-line | 0.6666666666666666
18: ANY|any non-newline char | 0.3333333333333333
19: LKA|matching sequence follows | 0.3333333333333333
20: LWB|at least n repetition | 0.3333333333333333
21: NCCC|negated CCC | 0.3333333333333333
22: NLKA|sequence doesn't follow  | 0.3333333333333333
23: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0006 | '\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  (?=[ \\t]|$)           # whitespace or the end of the string\n  '
0001 | 0001 | "\n        ^(?!\\.)                            # name may not begin with a dot\n        (\n          [-a-z0-9!\\#$%&'*+/=?^_`{|}~]     # all legal characters except dot\n          |\n          (?<!\\.)\\.                        # single dots only\n        )+\n        (?<!\\.)                            # name may not end with a dot\n        @\n        (\n          localhost\n          |\n          (\n            [a-z0-9]                         # [sub]domain begins with alphanumeric\n            (\n              [-\\w]*                         # alphanumeric, underscore, dot, hyphen\n              [a-z0-9]                       # ending alphanumeric\n            )?\n          \\.                               # ending dot\n          )+\n          [a-z]{2,}                        # TLD alpha-only\n       )$\n    "
0002 | 0001 | "\n        ^\n        (?:\n          # Dotted variants:\n          (?:\n            # Decimal 1-255 (no leading 0's)\n            [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n          |\n            0x0*[0-9a-f]{1,2}  # Hexadecimal 0x0 - 0xFF (possible leading 0's)\n          |\n            0+[1-3]?[0-7]{0,2} # Octal 0 - 0377 (possible leading 0's)\n          )\n          (?:                  # Repeat 0-3 times, separated by a dot\n            \\.\n            (?:\n              [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n            |\n              0x0*[0-9a-f]{1,2}\n            |\n              0+[1-3]?[0-7]{0,2}\n            )\n          ){0,3}\n        |\n          0x0*[0-9a-f]{1,8}    # Hexadecimal notation, 0x0 - 0xffffffff\n        |\n          0+[0-3]?[0-7]{0,10}  # Octal notation, 0 - 037777777777\n        |\n          # Decimal notation, 1-4294967295:\n          429496729[0-5]|42949672[0-8]\\d|4294967[01]\\d\\d|429496[0-6]\\d{3}|\n          42949[0-5]\\d{4}|4294[0-8]\\d{5}|429[0-3]\\d{6}|42[0-8]\\d{7}|\n          4[01]\\d{8}|[1-3]\\d{0,9}|[4-9]\\d{0,8}\n        )\n        $\n    "



cluster 73 stats:
nPatterns: 1.0
nProjects: 7
shortest: ^columns .* are not unique$
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0007 | '^columns .* are not unique$'



cluster 74 stats:
nPatterns: 1.0
nProjects: 7
shortest: ^[ ]{4,7}((\d+\.)|[*+-])[ ].*
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 3.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: DBB|$n\le x \le m$ repetition | 1.0
7: DEC|any of: 0123456789 | 1.0
8: KLE|zero-or-more repetition | 1.0
9: OR|logical or | 1.0
10: STR|start-of-line | 1.0


0000 | 0007 | '^[ ]{4,7}((\\d+\\.)|[*+-])[ ].*'



cluster 75 stats:
nPatterns: 4.0
nProjects: 7
shortest: //+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 0.75
4: END|end-of-line | 0.25


0000 | 0003 | '//+'
0001 | 0002 | 'CPU\\d+:'
0002 | 0001 | '/\\d+'
0003 | 0001 | 'p\\d+$'



cluster 76 stats:
nPatterns: 1.0
nProjects: 7
shortest: ^(acc|borland|como|cw|dmc|darwin|gcc|hp_cxx|intel|kylix|vc|mgw|qcc|sun|vacpp)\d*$
Features:

1: LIT|a literal character | 60.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: STR|start-of-line | 1.0


0000 | 0007 | '^(acc|borland|como|cw|dmc|darwin|gcc|hp_cxx|intel|kylix|vc|mgw|qcc|sun|vacpp)\\d*$'



cluster 77 stats:
nPatterns: 3.0
nProjects: 7
shortest: ([^*]+)\*(\d+)
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 1.6666666666666667
3: ADD|one-or-more repetition | 1.3333333333333333
4: NCCC|negated CCC | 1.3333333333333333
5: DEC|any of: 0123456789 | 0.6666666666666666
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
7: CCC|custom character class | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333
9: KLE|zero-or-more repetition | 0.3333333333333333
10: NLKA|sequence doesn't follow  | 0.3333333333333333
11: OR|logical or | 0.3333333333333333


0000 | 0005 | '([^*{}\\s]@|[^*{}@\\s]|\\*(?!/))+'
0001 | 0001 | '([^*]+)\\*(\\d+)'
0002 | 0001 | '([^\\-\\.]*)-([\\d+.\\-]+)$'



cluster 78 stats:
nPatterns: 3.0
nProjects: 7
shortest: (?:\d{1,3}\.){3}\d{1,3}
Features:

1: LIT|a literal character | 3.0
2: DBB|$n\le x \le m$ repetition | 2.6666666666666665
3: DEC|any of: 0123456789 | 2.0
4: CCC|custom character class | 0.6666666666666666
5: CG|a capture group | 0.6666666666666666
6: RNG|chars within a range | 0.6666666666666666
7: SNG|exactly n repetition | 0.6666666666666666
8: NCG|group without capturing | 0.3333333333333333


0000 | 0004 | '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'
0001 | 0002 | '(?:\\d{1,3}\\.){3}\\d{1,3}'
0002 | 0001 | '(([0-9]{1,3}\\.){3}[0-9]{1,3})'



cluster 79 stats:
nPatterns: 7.0
nProjects: 7
shortest: PID:
Features:

1: LIT|a literal character | 5.285714285714286
2: ADD|one-or-more repetition | 1.8571428571428572
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
4: CG|a capture group | 0.8571428571428571
5: DEC|any of: 0123456789 | 0.42857142857142855
6: STR|start-of-line | 0.42857142857142855
7: ANY|any non-newline char | 0.2857142857142857
8: END|end-of-line | 0.14285714285714285
9: NWSP|any non-whitespace | 0.14285714285714285
10: WRD|[a-zA-Z0-9\_] | 0.14285714285714285


0000 | 0002 | 'image:\\s+(\\S+)'
0001 | 0002 | 'MemFree:\\s+(.\\d+)\\s+(\\w+)'
0002 | 0001 | 'PID:'
0003 | 0001 | '^dim4\\s+'
0004 | 0001 | 'Model:\\s+(.+)'
0005 | 0001 | '^Uid:\\s+(\\d+)'
0006 | 0001 | '^PPid:\\s+(\\d+)$'



cluster 80 stats:
nPatterns: 2.0
nProjects: 6
shortest: (.{60})
Features:

1: ANY|any non-newline char | 3.0
2: CG|a capture group | 3.0
3: SNG|exactly n repetition | 3.0


0000 | 0005 | '(.{60})'
0001 | 0001 | '(.{8})(.{4})(.{4})(.{4})(.{12})'



cluster 81 stats:
nPatterns: 3.0
nProjects: 6
shortest: \.|-
Features:

1: LIT|a literal character | 4.333333333333333
2: OR|logical or | 1.0
3: STR|start-of-line | 0.6666666666666666
4: END|end-of-line | 0.3333333333333333


0000 | 0003 | '\\.|\\\\'
0001 | 0002 | '\\.\\.|^\\./|\\.$|/\\./|^-'
0002 | 0001 | '\\.|-'



cluster 82 stats:
nPatterns: 4.0
nProjects: 6
shortest: ^/dev/
Features:

1: LIT|a literal character | 10.0
2: STR|start-of-line | 1.0
3: ADD|one-or-more repetition | 0.75
4: END|end-of-line | 0.75
5: NCCC|negated CCC | 0.5
6: CCC|custom character class | 0.25
7: CG|a capture group | 0.25
8: RNG|chars within a range | 0.25


0000 | 0003 | '^/dev/'
0001 | 0001 | '^/var/log/[^/]+$'
0002 | 0001 | '^/static/[a-z./-]+$'
0003 | 0001 | '^/v2/images/([^\\/]+)$'



cluster 83 stats:
nPatterns: 5.0
nProjects: 6
shortest: ^p
Features:

1: LIT|a literal character | 10.6
2: STR|start-of-line | 1.0
3: CG|a capture group | 0.4
4: END|end-of-line | 0.4
5: ANY|any non-newline char | 0.2
6: CCC|custom character class | 0.2
7: KLE|zero-or-more repetition | 0.2
8: LZY|as few reps as possible | 0.2
9: OR|logical or | 0.2
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0002 | '(^package:)|\\s'
0001 | 0001 | '^p'
0002 | 0001 | '^platform/(.*?)/'
0003 | 0001 | '^parrot_string_t$'
0004 | 0001 | '^translator[-_]credits$'



cluster 84 stats:
nPatterns: 2.0
nProjects: 6
shortest: <([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/
Features:

1: LIT|a literal character | 21.5
2: RNG|chars within a range | 6.5
3: KLE|zero-or-more repetition | 3.0
4: CCC|custom character class | 2.5
5: CG|a capture group | 2.5
6: QST|zero-or-one repetition | 2.0
7: NCCC|negated CCC | 1.5
8: ADD|one-or-more repetition | 0.5


0000 | 0004 | '\\$\\{?[a-zA-Z_][a-zA-Z0-9_]*(\\([^)]*\\))?(\\.[a-zA-Z0-9_]+(\\([^)]*\\))?)*\\}?'
0001 | 0002 | '<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'



cluster 85 stats:
nPatterns: 6.0
nProjects: 6
shortest: \{\}
Features:

1: LIT|a literal character | 5.333333333333333
2: ADD|one-or-more repetition | 0.6666666666666666
3: LZY|as few reps as possible | 0.6666666666666666
4: ANY|any non-newline char | 0.5
5: CG|a capture group | 0.3333333333333333
6: PNG|named capture group | 0.3333333333333333
7: KLE|zero-or-more repetition | 0.16666666666666666
8: NCCC|negated CCC | 0.16666666666666666
9: QST|zero-or-one repetition | 0.16666666666666666


0000 | 0001 | '\\{\\}'
0001 | 0001 | '{{{([^{]+?)}}}'
0002 | 0001 | '{{.+?\\|(.+?)}}'
0003 | 0001 | ' *\\)(?P<comma>,?)'
0004 | 0001 | '\\{\\{PACKAGE\\}\\}'
0005 | 0001 | '\\{\\{(?P<comm>.+?)\\}\\}'



cluster 86 stats:
nPatterns: 2.0
nProjects: 5
shortest: and
Features:

1: LIT|a literal character | 3.5


0000 | 0003 | 'and'
0001 | 0001 | 'abcd'



cluster 87 stats:
nPatterns: 1.0
nProjects: 5
shortest: ^%[%!\w]([^:]*)[ \t]*$
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0
7: STR|start-of-line | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0005 | '^%[%!\\w]([^:]*)[ \\t]*$'



cluster 88 stats:
nPatterns: 2.0
nProjects: 5
shortest: (\D)[.]
Features:

1: LIT|a literal character | 1.5
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: NDEC|any non-decimal | 1.0
5: CCC|custom character class | 0.5
6: DBB|$n\le x \le m$ repetition | 0.5
7: KLE|zero-or-more repetition | 0.5
8: NWRD|non-word chars | 0.5
9: OR|logical or | 0.5
10: STR|start-of-line | 0.5


0000 | 0004 | '(\\D)[.]'
0001 | 0001 | '(\\D|^)\\d{1,2}\\W*\\d00'



cluster 89 stats:
nPatterns: 2.0
nProjects: 5
shortest: \(CVS\) ([\d\.]+) 
Features:

1: LIT|a literal character | 9.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: CCC|custom character class | 0.5


0000 | 0003 | '\\[SQLCode\\: (\\d+)\\]'
0001 | 0002 | '\\(CVS\\) ([\\d\\.]+) '



cluster 90 stats:
nPatterns: 3.0
nProjects: 5
shortest: [\W_]*
Features:

1: LIT|a literal character | 3.3333333333333335
2: KLE|zero-or-more repetition | 1.6666666666666667
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
7: NWRD|non-word chars | 0.3333333333333333
8: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0003 | u'<(/?)\\s*b\\s*>'
0001 | 0001 | u'[\\W_]*'
0002 | 0001 | '<([\\w]*)=([, \\w]*)>'



cluster 91 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^<Actions>(.+)$
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0
5: CCC|custom character class | 0.6666666666666666
6: CG|a capture group | 0.6666666666666666
7: KLE|zero-or-more repetition | 0.6666666666666666
8: ADD|one-or-more repetition | 0.3333333333333333
9: PNG|named capture group | 0.3333333333333333


0000 | 0003 | '^[\'"](.*)[\'"]$'
0001 | 0001 | '^<Actions>(.+)$'
0002 | 0001 | '^"(?P<data>.*)"$'



cluster 92 stats:
nPatterns: 4.0
nProjects: 5
shortest: \bcsc\b
Features:

1: LIT|a literal character | 3.75
2: WNW|word/non-word boundary | 1.75
3: CCC|custom character class | 1.0
4: RNG|chars within a range | 0.75
5: ADD|one-or-more repetition | 0.25
6: CG|a capture group | 0.25


0000 | 0002 | '\\bcsc\\b'
0001 | 0001 | '\\bc[cs]'
0002 | 0001 | '\\b[\\-_]\\b'
0003 | 0001 | '\\b[A-Z](\\.[A-Za-z])+\\b'



cluster 93 stats:
nPatterns: 4.0
nProjects: 5
shortest: /\.[^/]*$
Features:

1: LIT|a literal character | 6.5
2: NCCC|negated CCC | 1.0
3: CG|a capture group | 0.75
4: ADD|one-or-more repetition | 0.5
5: KLE|zero-or-more repetition | 0.5
6: LZY|as few reps as possible | 0.5
7: END|end-of-line | 0.25


0000 | 0002 | "title:'([^']+?)'"
0001 | 0001 | '/\\.[^/]*$'
0002 | 0001 | "'\\.\\./([^']*)'"
0003 | 0001 | "'([^']+?)' \\(qv\\)"



cluster 94 stats:
nPatterns: 5.0
nProjects: 5
shortest: \n:\n
Features:

1: LIT|a literal character | 3.4
2: ADD|one-or-more repetition | 1.8
3: DEC|any of: 0123456789 | 1.8
4: ANY|any non-newline char | 0.4
5: END|end-of-line | 0.4
6: OR|logical or | 0.2
7: SNG|exactly n repetition | 0.2


0000 | 0001 | '\\n:\\n'
0001 | 0001 | '\\d+:\\d+'
0002 | 0001 | '\\d+\\.\\.$|\\.{4}$'
0003 | 0001 | ' \\d+.\\d+ tb\\(r\\)'
0004 | 0001 | '.\\d+\\.\\d+\\.\\d+\\.\\d+'



cluster 95 stats:
nPatterns: 4.0
nProjects: 5
shortest: (.*) [^ ]
Features:

1: LIT|a literal character | 8.25
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.5
4: KLE|zero-or-more repetition | 1.25
5: CCC|custom character class | 0.5
6: QST|zero-or-one repetition | 0.5
7: RNG|chars within a range | 0.5
8: DBB|$n\le x \le m$ repetition | 0.25
9: END|end-of-line | 0.25
10: NCCC|negated CCC | 0.25
11: OR|logical or | 0.25
12: PNG|named capture group | 0.25
13: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0002 | '(.*)\\.\\w{3,4}$'
0001 | 0001 | '(.*) [^ ]'
0002 | 0001 | '(.*): [0-9]'
0003 | 0001 | '(.*)derpiboo((.ru)|(ru.org))(/images)?/(?P<id>[0-9]*)/?'



cluster 96 stats:
nPatterns: 4.0
nProjects: 5
shortest: ([a-zA-Z0-9]*)$
Features:

1: LIT|a literal character | 16.25
2: CCC|custom character class | 4.5
3: CG|a capture group | 4.5
4: RNG|chars within a range | 3.75
5: KLE|zero-or-more repetition | 3.25
6: ADD|one-or-more repetition | 2.0
7: DEC|any of: 0123456789 | 1.25
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
9: ANY|any non-newline char | 0.25
10: END|end-of-line | 0.25


0000 | 0003 | '([a-zA-Z0-9]*)$'
0001 | 0001 | '([a-zA-Z-]+)\\s*\\((.*)\\)'
0002 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'
0003 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'



cluster 97 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^<\?xml.*?encoding=["\\']*(.+?)["\\'>]
Features:

1: LIT|a literal character | 21.0
2: ANY|any non-newline char | 2.0
3: CCC|custom character class | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 2.0
6: ADD|one-or-more repetition | 1.0
7: CG|a capture group | 1.0
8: STR|start-of-line | 1.0


0000 | 0004 | '^<\\?xml.*?encoding=["\\\']*(.+?)["\\\'>]'



cluster 98 stats:
nPatterns: 2.0
nProjects: 4
shortest: .*(Rep|Sen). (.+)$
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 1.5
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: ADD|one-or-more repetition | 0.5
8: CCC|custom character class | 0.5
9: QST|zero-or-one repetition | 0.5


0000 | 0003 | '.*(\\.so|\\.py[cod]?)$'
0001 | 0001 | '.*(Rep|Sen). (.+)$'



cluster 99 stats:
nPatterns: 2.0
nProjects: 4
shortest: (?s)>\s+
Features:

1: LIT|a literal character | 10.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: OPT|options wrapper | 1.0
6: ADD|one-or-more repetition | 0.5
7: CG|a capture group | 0.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '(?s)>\\s+'
0001 | 0002 | '(?s)<failure (.*?)>.*?</failure>'



cluster 100 stats:
nPatterns: 3.0
nProjects: 4
shortest: ^Vendor:
Features:

1: LIT|a literal character | 8.666666666666666
2: STR|start-of-line | 1.0
3: END|end-of-line | 0.6666666666666666
4: KLE|zero-or-more repetition | 0.6666666666666666
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666
6: ANY|any non-newline char | 0.3333333333333333
7: CG|a capture group | 0.3333333333333333


0000 | 0002 | '^Vendor:'
0001 | 0001 | '^removed:\\s*$'
0002 | 0001 | '^START TIME:\\s(.*)$'



cluster 101 stats:
nPatterns: 3.0
nProjects: 4
shortest: <(?!!)[^>]+>
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: NLKA|sequence doesn't follow  | 0.6666666666666666
5: CG|a capture group | 0.3333333333333333
6: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0002 | '<param([^<>]+)>'
0001 | 0001 | '<(?!!)[^>]+>'
0002 | 0001 | '<(?!/?TEXT)[^>]+>'



cluster 102 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^#define SQLITE_VERSION\D*(\d+)\.(\d+)\.(\d+)(?:\.(\d+))?\D*
Features:

1: LIT|a literal character | 25.0
2: ADD|one-or-more repetition | 4.0
3: CG|a capture group | 4.0
4: DEC|any of: 0123456789 | 4.0
5: KLE|zero-or-more repetition | 2.0
6: NDEC|any non-decimal | 2.0
7: NCG|group without capturing | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0004 | '^#define SQLITE_VERSION\\D*(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?\\D*'



cluster 103 stats:
nPatterns: 4.0
nProjects: 4
shortest: ERROR FAIL
Features:

1: LIT|a literal character | 13.75
2: OR|logical or | 0.25


0000 | 0002 | 'ERROR FAIL'
0001 | 0002 | 'ERROR TODO WORKED'
0002 | 0001 | 'ERROR in BUILD'
0003 | 0001 | 'Error: |ERROR: '



cluster 104 stats:
nPatterns: 4.0
nProjects: 4
shortest: Totaal
Features:

1: LIT|a literal character | 8.75
2: ADD|one-or-more repetition | 0.75
3: RNG|chars within a range | 0.75
4: CCC|custom character class | 0.5
5: CG|a capture group | 0.25
6: END|end-of-line | 0.25
7: LWB|at least n repetition | 0.25
8: NCCC|negated CCC | 0.25
9: QST|zero-or-one repetition | 0.25


0000 | 0001 | 'Totaal'
0001 | 0001 | ' at -?0x[^>]+'
0002 | 0001 | 'total = [0-9]+'
0003 | 0001 | ' at 0x[0-9a-f]{6,}(>+)$'



cluster 105 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^(DISTRIB_(?:ID|RELEASE|CODENAME|DESCRIPTION))=(?:\'|")?([\w\s\.-_]+)(?:\'|")?
Features:

1: LIT|a literal character | 43.0
2: NCG|group without capturing | 3.0
3: OR|logical or | 3.0
4: CG|a capture group | 2.0
5: QST|zero-or-one repetition | 2.0
6: ADD|one-or-more repetition | 1.0
7: CCC|custom character class | 1.0
8: RNG|chars within a range | 1.0
9: STR|start-of-line | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0004 | '^(DISTRIB_(?:ID|RELEASE|CODENAME|DESCRIPTION))=(?:\'|")?([\\w\\s\\.-_]+)(?:\'|")?'



cluster 106 stats:
nPatterns: 4.0
nProjects: 4
shortest: ^new file
Features:

1: LIT|a literal character | 13.75
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 0.75
4: DEC|any of: 0123456789 | 0.75
5: STR|start-of-line | 0.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0001 | '^new file'
0001 | 0001 | 'UNSEEN\\s+(\\d+)'
0002 | 0001 | '^New Revision: (\\d+)'
0003 | 0001 | '<viewer version_patch="(\\d+)" />'



cluster 107 stats:
nPatterns: 2.0
nProjects: 4
shortest: (?:([\w ]+) ([\w.]+) .*\[.* ([\d.]+)\])
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 3.0
3: CCC|custom character class | 3.0
4: CG|a capture group | 3.0
5: ANY|any non-newline char | 2.0
6: DEC|any of: 0123456789 | 2.0
7: KLE|zero-or-more repetition | 2.0
8: LZY|as few reps as possible | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0
10: NCG|group without capturing | 0.5


0000 | 0002 | '(?:([\\w ]+) ([\\w.]+) .*\\[.* ([\\d.]+)\\])'
0001 | 0002 | '(\\d+ bytes).*?([\\d\\.]+ s).*?([\\d\\.]+ [KkMmGgTt])B/s'



cluster 108 stats:
nPatterns: 3.0
nProjects: 4
shortest: This is makeindex
Features:

1: LIT|a literal character | 30.0
2: ADD|one-or-more repetition | 0.3333333333333333
3: ANY|any non-newline char | 0.3333333333333333
4: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0002 | 'This is file for test of tar-in.'
0001 | 0001 | 'This is makeindex'
0002 | 0001 | "This module \\'\\w+\\' is auto-generated with f2py"



cluster 109 stats:
nPatterns: 4.0
nProjects: 4
shortest: openssl-([^<]+)<
Features:

1: LIT|a literal character | 17.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | 'openssl-([^<]+)<'
0001 | 0001 | '<code>([^<]+)</code>'
0002 | 0001 | '<WebEnv>([^>]+)</WebEnv>'
0003 | 0001 | '<description>([^<]+)</description>'



cluster 110 stats:
nPatterns: 5.0
nProjects: 4
shortest: </p>
Features:

1: LIT|a literal character | 16.4
2: ANY|any non-newline char | 0.4
3: CG|a capture group | 0.4
4: KLE|zero-or-more repetition | 0.4


0000 | 0002 | '</p>'
0001 | 0001 | '<p><hr'
0002 | 0001 | '<pre><a name="foo-1">'
0003 | 0001 | '<pre><a name="foo-5">'
0004 | 0001 | '<p>Raw output: <a href="(.*)">(.*)</a>'



cluster 111 stats:
nPatterns: 4.0
nProjects: 4
shortest: [_.,\[\]\(\):]
Features:

1: LIT|a literal character | 14.75
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 0.75
4: ADD|one-or-more repetition | 0.5
5: KLE|zero-or-more repetition | 0.25
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0001 | '[- \t:;,!+/\\"\'`]+'
0001 | 0001 | u'[_.,\\[\\]\\(\\):]'
0002 | 0001 | '[.:,\\s!?+=\\(\\)/-]+'
0003 | 0001 | '[- \n\t\ra-zA-Z0-9()+,./:=?;!*#@$_%]*'



cluster 112 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^(WebSocket-Protocol: [\x20-\x7e]+\r\n)?(Cookie: [^\r]*\r\n)*(Cookie2: [^\r]*\r\n)?(Cookie: [^\r]*\r\n)*\r\n
Features:

1: LIT|a literal character | 60.0
2: KLE|zero-or-more repetition | 5.0
3: CG|a capture group | 4.0
4: NCCC|negated CCC | 3.0
5: QST|zero-or-one repetition | 2.0
6: ADD|one-or-more repetition | 1.0
7: CCC|custom character class | 1.0
8: RNG|chars within a range | 1.0
9: STR|start-of-line | 1.0


0000 | 0004 | '^(WebSocket-Protocol: [\\x20-\\x7e]+\\r\\n)?(Cookie: [^\\r]*\\r\\n)*(Cookie2: [^\\r]*\\r\\n)?(Cookie: [^\\r]*\\r\\n)*\\r\\n'



cluster 113 stats:
nPatterns: 4.0
nProjects: 4
shortest: tests\.py$
Features:

1: LIT|a literal character | 26.0
2: END|end-of-line | 0.25
3: OR|logical or | 0.25


0000 | 0002 | 'test_file_commit1'
0001 | 0002 | 'test_file_commit2'
0002 | 0001 | 'tests\\.py$'
0003 | 0001 | 'test_|LookupTable|Types|SystemConfiguration|gannet|Socket|Timings|cs_'



cluster 114 stats:
nPatterns: 2.0
nProjects: 3
shortest: a.*
Features:

1: LIT|a literal character | 1.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0002 | 'a.*'
0001 | 0001 | 'SD.*'



cluster 115 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^ *(.*) *( *) *$
Features:

1: KLE|zero-or-more repetition | 5.0
2: LIT|a literal character | 4.0
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0003 | '^ *(.*) *( *) *$'



cluster 116 stats:
nPatterns: 2.0
nProjects: 3
shortest: facet
Features:

1: LIT|a literal character | 6.0


0000 | 0002 | 'DEFAULT'
0001 | 0001 | 'facet'



cluster 117 stats:
nPatterns: 2.0
nProjects: 3
shortest: [aeiou]
Features:

1: LIT|a literal character | 7.5
2: CCC|custom character class | 1.0


0000 | 0002 | '[aeiou]'
0001 | 0001 | '[aeouiAEOUI]'



cluster 118 stats:
nPatterns: 2.0
nProjects: 3
shortest: LR Number:
Features:

1: LIT|a literal character | 10.0


0000 | 0002 | 'LR Number:'
0001 | 0001 | 'Run number'



cluster 119 stats:
nPatterns: 3.0
nProjects: 3
shortest: st_
Features:

1: LIT|a literal character | 4.666666666666667


0000 | 0001 | 'st_'
0001 | 0001 | 'tree='
0002 | 0001 | 'state='



cluster 120 stats:
nPatterns: 2.0
nProjects: 3
shortest: EXAMPLE
Features:

1: LIT|a literal character | 13.5
2: ANY|any non-newline char | 0.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0002 | 'EXAMPLE'
0001 | 0001 | 'exampleLocalVar.*abcde'



cluster 121 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^#define.*ENGINE_VERSION\t*"DOOM (.*)"
Features:

1: LIT|a literal character | 29.0
2: KLE|zero-or-more repetition | 3.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 1.0
5: STR|start-of-line | 1.0


0000 | 0003 | '^#define.*ENGINE_VERSION\t*"DOOM (.*)"'



cluster 122 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^@@ -([0-9]*),([0-9]*) \+([0-9]*),([0-9]*) @@
Features:

1: LIT|a literal character | 19.0
2: CCC|custom character class | 4.0
3: CG|a capture group | 4.0
4: KLE|zero-or-more repetition | 4.0
5: RNG|chars within a range | 4.0
6: STR|start-of-line | 1.0


0000 | 0003 | '^@@ -([0-9]*),([0-9]*) \\+([0-9]*),([0-9]*) @@'



cluster 123 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^(.*)\s*<(.*)>\s*$
Features:

1: KLE|zero-or-more repetition | 4.0
2: LIT|a literal character | 4.0
3: ANY|any non-newline char | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: CG|a capture group | 1.5
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: OR|logical or | 0.5


0000 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0001 | 0001 | '^.*<\\s*html(\\s*|>).*$'



cluster 124 stats:
nPatterns: 3.0
nProjects: 3
shortest: <tr valign
Features:

1: LIT|a literal character | 11.666666666666666
2: ADD|one-or-more repetition | 0.3333333333333333
3: ANY|any non-newline char | 0.3333333333333333


0000 | 0001 | '<tr valign'
0001 | 0001 | 'internal log'
0002 | 0001 | 'install_dir .+\n'



cluster 125 stats:
nPatterns: 3.0
nProjects: 3
shortest: [EWN]\d{3}
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.6666666666666667
3: DEC|any of: 0123456789 | 1.0
4: SNG|exactly n repetition | 1.0
5: RNG|chars within a range | 0.6666666666666666


0000 | 0002 | '[EWN]\\d{3}'
0001 | 0001 | '[#][\\dA-F]{3}'
0002 | 0001 | '[#][\\dA-F]{6}'



cluster 126 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^results
Features:

1: LIT|a literal character | 17.5
2: ADD|one-or-more repetition | 1.5
3: ANY|any non-newline char | 1.5
4: CG|a capture group | 1.5
5: STR|start-of-line | 1.0


0000 | 0002 | '^restorecon reset (.+) context (.+)->(.+)'
0001 | 0001 | '^results'



cluster 127 stats:
nPatterns: 2.0
nProjects: 3
shortest: \.(js|java)(?:\.in)?$
Features:

1: LIT|a literal character | 11.5
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: NCG|group without capturing | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '\\.(js|java)(?:\\.in)?$'
0001 | 0001 | '\\.(js|jsm|java)(?:\\.in)?$'



cluster 128 stats:
nPatterns: 2.0
nProjects: 3
shortest: \[tag:\s*([\S]+)\s*]
Features:

1: LIT|a literal character | 5.5
2: KLE|zero-or-more repetition | 1.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
4: ADD|one-or-more repetition | 1.0
5: NWSP|any non-whitespace | 1.0
6: CCC|custom character class | 0.5
7: CG|a capture group | 0.5
8: PNG|named capture group | 0.5


0000 | 0002 | '\\[tag:\\s*([\\S]+)\\s*]'
0001 | 0001 | '\\-\\s*\\[\\[(?P<t>\\S+)\\]\\]'



cluster 129 stats:
nPatterns: 3.0
nProjects: 3
shortest: .*(dev|HEAD).*
Features:

1: LIT|a literal character | 7.333333333333333
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 1.0
5: ADD|one-or-more repetition | 0.6666666666666666
6: DEC|any of: 0123456789 | 0.3333333333333333
7: OR|logical or | 0.3333333333333333
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0001 | '.*(dev|HEAD).*'
0001 | 0001 | '.*video:(\\d+).*'
0002 | 0001 | '.*PKGINST:\\s+(.*)\\n'



cluster 130 stats:
nPatterns: 2.0
nProjects: 3
shortest: <span class="c_1">.*?</span>
Features:

1: LIT|a literal character | 30.5
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: LZY|as few reps as possible | 0.5
6: NCCC|negated CCC | 0.5


0000 | 0002 | '<span id=short-desc-content>([^<]*)</span>'
0001 | 0001 | '<span class="c_1">.*?</span>'



cluster 131 stats:
nPatterns: 3.0
nProjects: 3
shortest: (?<= line )\d+
Features:

1: LIT|a literal character | 11.0
2: LKB|matching sequence precedes | 1.0
3: ADD|one-or-more repetition | 0.6666666666666666
4: CCC|custom character class | 0.6666666666666666
5: CG|a capture group | 0.6666666666666666
6: RNG|chars within a range | 0.6666666666666666
7: DEC|any of: 0123456789 | 0.3333333333333333
8: LKA|matching sequence follows | 0.3333333333333333
9: OR|logical or | 0.3333333333333333
10: SNG|exactly n repetition | 0.3333333333333333
11: WNW|word/non-word boundary | 0.3333333333333333


0000 | 0001 | '(?<= line )\\d+'
0001 | 0001 | '(?<=nm|tt|ch)([0-9]{7})\\b'
0002 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'



cluster 132 stats:
nPatterns: 3.0
nProjects: 3
shortest: http://en.wikipedia.org/wiki/
Features:

1: LIT|a literal character | 27.666666666666668
2: ANY|any non-newline char | 1.6666666666666667
3: ADD|one-or-more repetition | 1.3333333333333333
4: NCCC|negated CCC | 0.6666666666666666
5: QST|zero-or-one repetition | 0.6666666666666666
6: CG|a capture group | 0.3333333333333333
7: END|end-of-line | 0.3333333333333333
8: NWSP|any non-whitespace | 0.3333333333333333
9: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0001 | 'http://en.wikipedia.org/wiki/'
0001 | 0001 | 'http://www.polleverywhere.com/\\w+/\\S+'
0002 | 0001 | 'https?://github.com/([^/]+/[^/]+)/tags/?$'



cluster 133 stats:
nPatterns: 2.0
nProjects: 3
shortest: <a href="function\..*?\.html">(.*?)</a>
Features:

1: LIT|a literal character | 34.5
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 2.0
5: KLE|zero-or-more repetition | 2.0
6: CCC|custom character class | 1.5
7: WRD|[a-zA-Z0-9\_] | 1.5
8: LZY|as few reps as possible | 1.0
9: NWRD|non-word chars | 1.0


0000 | 0002 | '<a href="function\\..*?\\.html">(.*?)</a>'
0001 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'



cluster 134 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^(?:\s*)([0-9]+):(?:\s*)(?P<rx_bytes>\d+)(?:\s*)(?P<rx_packets>\w+)(?:\s*)(?P<rx_errors>\d+)(?:\s*)(?P<rx_drop>\d+)(?:\s*)(?P<rx_fifo>\d+)(?:\s*)(?P<rx_frame>\d+)(?:\s*)(?P<rx_compressed>\d+)(?:\s*)(?P<rx_multicast>\d+)(?:\s*)(?P<tx_bytes>\d+)(?:\s*)(?P<tx_packets>\w+)(?:\s*)(?P<tx_errors>\d+)(?:\s*)(?P<tx_drop>\d+)(?:\s*)(?P<tx_fifo>\d+)(?:\s*)(?P<tx_frame>\d+)(?:\s*)(?P<tx_compressed>\d+)(?:\s*)(?P<tx_multicast>\d+)(?:.*)$
Features:

1: KLE|zero-or-more repetition | 18.0
2: NCG|group without capturing | 18.0
3: ADD|one-or-more repetition | 17.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 17.0
5: PNG|named capture group | 16.0
6: DEC|any of: 0123456789 | 14.0
7: LIT|a literal character | 3.0
8: WRD|[a-zA-Z0-9\_] | 2.0
9: ANY|any non-newline char | 1.0
10: CCC|custom character class | 1.0
11: CG|a capture group | 1.0
12: END|end-of-line | 1.0
13: RNG|chars within a range | 1.0
14: STR|start-of-line | 1.0


0000 | 0003 | '^(?:\\s*)([0-9]+):(?:\\s*)(?P<rx_bytes>\\d+)(?:\\s*)(?P<rx_packets>\\w+)(?:\\s*)(?P<rx_errors>\\d+)(?:\\s*)(?P<rx_drop>\\d+)(?:\\s*)(?P<rx_fifo>\\d+)(?:\\s*)(?P<rx_frame>\\d+)(?:\\s*)(?P<rx_compressed>\\d+)(?:\\s*)(?P<rx_multicast>\\d+)(?:\\s*)(?P<tx_bytes>\\d+)(?:\\s*)(?P<tx_packets>\\w+)(?:\\s*)(?P<tx_errors>\\d+)(?:\\s*)(?P<tx_drop>\\d+)(?:\\s*)(?P<tx_fifo>\\d+)(?:\\s*)(?P<tx_frame>\\d+)(?:\\s*)(?P<tx_compressed>\\d+)(?:\\s*)(?P<tx_multicast>\\d+)(?:.*)$'



cluster 135 stats:
nPatterns: 2.0
nProjects: 2
shortest: pam
Features:

1: LIT|a literal character | 3.5


0000 | 0001 | 'pam'
0001 | 0001 | 'Game'



cluster 136 stats:
nPatterns: 2.0
nProjects: 2
shortest: z
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 0.5
3: CCC|custom character class | 0.5


0000 | 0001 | 'z'
0001 | 0001 | 'zc.buildout[.]egg-link'



cluster 137 stats:
nPatterns: 2.0
nProjects: 2
shortest: :.*\.(\d+)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0001 | ':.*\\.(\\d+)'
0001 | 0001 | 'id_.*=(\\d+)'



cluster 138 stats:
nPatterns: 2.0
nProjects: 2
shortest: User:
Features:

1: LIT|a literal character | 9.5
2: ADD|one-or-more repetition | 0.5
3: CCC|custom character class | 0.5
4: CG|a capture group | 0.5
5: RNG|chars within a range | 0.5


0000 | 0001 | 'User:'
0001 | 0001 | 'User Serial:([0-9]+)'



cluster 139 stats:
nPatterns: 2.0
nProjects: 2
shortest: {([^}^{]*)}
Features:

1: LIT|a literal character | 4.5
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '{([^}^{]*)}'
0001 | 0001 | '#\\{([^}]*)\\}'



cluster 140 stats:
nPatterns: 2.0
nProjects: 2
shortest: </body
Features:

1: LIT|a literal character | 10.5
2: KLE|zero-or-more repetition | 0.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '</body'
0001 | 0001 | u'</tbody>\\s*<tbody>'



cluster 141 stats:
nPatterns: 2.0
nProjects: 2
shortest: \?Page=(\d+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 0.5
5: NWSP|any non-whitespace | 0.5


0000 | 0001 | 'GATEWAY=(\\S+)'
0001 | 0001 | '\\?Page=(\\d+)'



cluster 142 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(Win|PPC Mac OS X|Linux(?! x86_64))
Features:

1: LIT|a literal character | 27.0
2: CG|a capture group | 1.0
3: NLKA|sequence doesn't follow  | 1.0
4: OR|logical or | 1.0
5: STR|start-of-line | 1.0


0000 | 0002 | '^(Win|PPC Mac OS X|Linux(?! x86_64))'



cluster 143 stats:
nPatterns: 2.0
nProjects: 2
shortest: test_(.*)\.js$
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: END|end-of-line | 0.5


0000 | 0001 | 'test_(.*)\\.js$'
0001 | 0001 | 'protected(.*)\\$'



cluster 144 stats:
nPatterns: 2.0
nProjects: 2
shortest: biltxt
Features:

1: LIT|a literal character | 11.5
2: WRD|[a-zA-Z0-9\_] | 1.0
3: ADD|one-or-more repetition | 0.5
4: DEC|any of: 0123456789 | 0.5


0000 | 0002 | 'biltxt'
0001 | 0001 | 'billtype=\\w\\w&billno=\\d+'



cluster 145 stats:
nPatterns: 2.0
nProjects: 2
shortest: <div.*?>(.*?)</
Features:

1: LIT|a literal character | 12.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 2.0
5: CG|a capture group | 0.5


0000 | 0001 | '<div.*?>(.*?)</'
0001 | 0001 | '<script.*?>.*?</script>'



cluster 146 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(fails|needs-focus|random|skip|asserts|fuzzy)
Features:

1: LIT|a literal character | 38.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: STR|start-of-line | 1.0


0000 | 0002 | '^(fails|needs-focus|random|skip|asserts|fuzzy)'



cluster 147 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^/(artist|release|track|label|release-group)/([^/]*)$
Features:

1: LIT|a literal character | 39.0
2: CG|a capture group | 2.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: OR|logical or | 1.0
7: STR|start-of-line | 1.0


0000 | 0002 | '^/(artist|release|track|label|release-group)/([^/]*)$'



cluster 148 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(Mozilla.*(Gecko|KHTML|MSIE|Presto|Trident)|Opera).*$
Features:

1: LIT|a literal character | 39.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: OR|logical or | 2.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0


0000 | 0002 | '^(Mozilla.*(Gecko|KHTML|MSIE|Presto|Trident)|Opera).*$'



cluster 149 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?sm)^! Emergency stop.*
Features:

1: LIT|a literal character | 15.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: OPT|options wrapper | 1.0
5: STR|start-of-line | 1.0
6: CG|a capture group | 0.5
7: LZY|as few reps as possible | 0.5
8: QST|zero-or-one repetition | 0.5


0000 | 0002 | '(?sm)^! Emergency stop.*'
0001 | 0002 | '(?sm)\\A.*?!( LaTeX Error:)?'



cluster 150 stats:
nPatterns: 2.0
nProjects: 2
shortest: (\b[^ ,=]+)="?([^",]+)"?
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 2.5
3: NCCC|negated CCC | 2.0
4: CG|a capture group | 1.5
5: QST|zero-or-one repetition | 1.5
6: KLE|zero-or-more repetition | 0.5
7: NCG|group without capturing | 0.5
8: OR|logical or | 0.5
9: WNW|word/non-word boundary | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '(\\b[^ ,=]+)="?([^",]+)"?'
0001 | 0001 | '((?:"[^"]+"|[^,"]+)+)\\s*,?'



cluster 151 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^([\.\/\w]+\.tex)(:\d+:.*)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: DEC|any of: 0123456789 | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0
7: ANY|any non-newline char | 0.5
8: CCC|custom character class | 0.5
9: LWB|at least n repetition | 0.5
10: OR|logical or | 0.5
11: QST|zero-or-one repetition | 0.5
12: WRD|[a-zA-Z0-9\_] | 0.5
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '^([\\.\\/\\w]+\\.tex)(:\\d+:.*)'
0001 | 0001 | '^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'



cluster 152 stats:
nPatterns: 2.0
nProjects: 2
shortest: <\s*(\w[\w\d]*)\s*=\s*(.*?)\s*>
Features:

1: KLE|zero-or-more repetition | 6.0
2: LIT|a literal character | 5.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
4: CG|a capture group | 2.0
5: DEC|any of: 0123456789 | 1.5
6: ADD|one-or-more repetition | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0
8: ANY|any non-newline char | 0.5
9: CCC|custom character class | 0.5
10: LZY|as few reps as possible | 0.5


0000 | 0001 | '<\\s*(\\w[\\w\\d]*)\\s*=\\s*(.*?)\\s*>'
0001 | 0001 | '\\s*bytes\\s*=\\s*(\\d+)\\s*-\\s*(\\d+)\\s*'



cluster 153 stats:
nPatterns: 3.0
nProjects: 2
shortest: LL_VERSION_BUILD\s=\s([0-9]+)
Features:

1: LIT|a literal character | 19.666666666666668
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | 'LL_VERSION_BUILD\\s=\\s([0-9]+)'
0001 | 0001 | 'IMP_VERSION_MAJOR\\s=\\s([0-9]+)'
0002 | 0001 | 'IMP_VERSION_PATCH\\s=\\s([0-9]+)'



cluster 154 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^((?P<retval>[^=]+?)\s*=|class)?\s*(?P<head>[\w\.]+\s?\(.*?\))\s*(?P<sep>[:<>=-]*)\s*(?P<tail>.*)$
Features:

1: LIT|a literal character | 15.0
2: KLE|zero-or-more repetition | 7.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
4: PNG|named capture group | 4.0
5: ADD|one-or-more repetition | 2.0
6: ANY|any non-newline char | 2.0
7: CCC|custom character class | 2.0
8: LZY|as few reps as possible | 2.0
9: QST|zero-or-one repetition | 2.0
10: CG|a capture group | 1.0
11: END|end-of-line | 1.0
12: NCCC|negated CCC | 1.0
13: OR|logical or | 1.0
14: STR|start-of-line | 1.0
15: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '^((?P<retval>[^=]+?)\\s*=|class)?\\s*(?P<head>[\\w\\.]+\\s?\\(.*?\\))\\s*(?P<sep>[:<>=-]*)\\s*(?P<tail>.*)$'



cluster 155 stats:
nPatterns: 2.0
nProjects: 2
shortest: [-+]?(?:\d+(?:\.\d*)?|\d*\.\d+)(?:[eE][-+]?\d+)?
Features:

1: LIT|a literal character | 8.0
2: DEC|any of: 0123456789 | 5.0
3: QST|zero-or-one repetition | 4.0
4: ADD|one-or-more repetition | 3.0
5: CCC|custom character class | 3.0
6: NCG|group without capturing | 3.0
7: KLE|zero-or-more repetition | 2.0
8: CG|a capture group | 1.0
9: OR|logical or | 1.0


0000 | 0001 | '[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'
0001 | 0001 | '([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'



cluster 156 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^v(?P<ver>\d+(?:\.\d+)+(?:(?:[abc]|rc)\d+(?:\.\d+)*)?)-(?P<commits>\d+)-g(?P<sha>[\da-f]+)$
Features:

1: LIT|a literal character | 21.5
2: ADD|one-or-more repetition | 6.5
3: DEC|any of: 0123456789 | 3.0
4: PNG|named capture group | 3.0
5: CCC|custom character class | 2.5
6: NCG|group without capturing | 2.0
7: RNG|chars within a range | 2.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
9: KLE|zero-or-more repetition | 1.0
10: QST|zero-or-one repetition | 1.0
11: STR|start-of-line | 1.0
12: CG|a capture group | 0.5
13: END|end-of-line | 0.5
14: OR|logical or | 0.5


0000 | 0001 | '^v(?P<ver>\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?)-(?P<commits>\\d+)-g(?P<sha>[\\da-f]+)$'
0001 | 0001 | '^\\s+inet addr:\\s*(?P<ipaddr>[0-9\\.]+)(\\s+Bcast:(?P<bcast>[0-9\\.]+))?\\s+Mask:(?P<mask>[0-9\\.]+)'



cluster 157 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\\*)\n
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '(\\\\*)\n'



cluster 158 stats:
nPatterns: 1.0
nProjects: 1
shortest: "([^ ]+?)"
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '"([^ ]+?)"'



cluster 159 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^folder.jpg$
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^folder.jpg$'



cluster 160 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^subject=\s*
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 1.0
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^subject=\\s*'



cluster 161 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^0000.*1111.*$
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^0000.*1111.*$'



cluster 162 stats:
nPatterns: 2.0
nProjects: 1
shortest: Town
Features:

1: LIT|a literal character | 4.5


0000 | 0001 | 'Town'
0001 | 0001 | 'Topic'



cluster 163 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^JSC::Identifier$
Features:

1: LIT|a literal character | 15.0
2: END|end-of-line | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^JSC::Identifier$'



cluster 164 stats:
nPatterns: 2.0
nProjects: 1
shortest: _L3\.
Features:

1: LIT|a literal character | 4.0


0000 | 0001 | '_L3\\.'
0001 | 0001 | '_MD\\.'



cluster 165 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^file\:\/\/[^\?]*
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^file\\:\\/\\/[^\\?]*'



cluster 166 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^1900|^1[2-9]\d\d976
Features:

1: LIT|a literal character | 10.0
2: DEC|any of: 0123456789 | 2.0
3: STR|start-of-line | 2.0
4: CCC|custom character class | 1.0
5: OR|logical or | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | '^1900|^1[2-9]\\d\\d976'



cluster 167 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(test|xen|kvm|vmware)$
Features:

1: LIT|a literal character | 16.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: OR|logical or | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^(test|xen|kvm|vmware)$'



cluster 168 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^....:17EF:6009\.....$
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 8.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^....:17EF:6009\\.....$'



cluster 169 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^GlueSiteUniqueID: (.*)
Features:

1: LIT|a literal character | 18.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^GlueSiteUniqueID: (.*)'



cluster 170 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[ ]{0,3}:[ ]{1,3}(.*)$
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 2.0
3: DBB|$n\le x \le m$ repetition | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^[ ]{0,3}:[ ]{1,3}(.*)$'



cluster 171 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(join|order)\((.*)\)$
Features:

1: LIT|a literal character | 11.0
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^(join|order)\\((.*)\\)$'



cluster 172 stats:
nPatterns: 2.0
nProjects: 1
shortest: \nJoliet
Features:

1: LIT|a literal character | 8.5


0000 | 0001 | '\nJoliet'
0001 | 0001 | '\nEl Torito'



cluster 173 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^GNU gdb [^\d]*(\d+)\.
Features:

1: LIT|a literal character | 9.0
2: DEC|any of: 0123456789 | 2.0
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NCCC|negated CCC | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^GNU gdb [^\\d]*(\\d+)\\.'



cluster 174 stats:
nPatterns: 2.0
nProjects: 1
shortest: template=
Features:

1: LIT|a literal character | 10.0


0000 | 0001 | 'template='
0001 | 0001 | 'smtp_relay='



cluster 175 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^nic\.(\d+)\.ipv4_address
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^nic\\.(\\d+)\\.ipv4_address'



cluster 176 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^/etc/(g?shadow-?|securetty)$
Features:

1: LIT|a literal character | 22.0
2: QST|zero-or-one repetition | 2.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: OR|logical or | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^/etc/(g?shadow-?|securetty)$'



cluster 177 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^"I\'m fine" \(es to en, .*\)$
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^"I\'m fine" \\(es to en, .*\\)$'



cluster 178 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^RUNTIME_FUNCTION\(Runtime_(\w+)
Features:

1: LIT|a literal character | 25.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: STR|start-of-line | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^RUNTIME_FUNCTION\\(Runtime_(\\w+)'



cluster 179 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^cert=(?P<nickname>[0-9a-zA-Z_ ]+)
Features:

1: LIT|a literal character | 13.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: PNG|named capture group | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^cert=(?P<nickname>[0-9a-zA-Z_ ]+)'



cluster 180 stats:
nPatterns: 2.0
nProjects: 1
shortest: guibg=#*(\w+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'guibg=#*(\\w+)'
0001 | 0001 | 'guifg=#*(\\w+)'



cluster 181 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^#synchronous_standby_names\s*=.*$
Features:

1: LIT|a literal character | 27.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^#synchronous_standby_names\\s*=.*$'



cluster 182 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^GlueForeignKey: GlueCEUniqueID=(.*):
Features:

1: LIT|a literal character | 32.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^GlueForeignKey: GlueCEUniqueID=(.*):'



cluster 183 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\t*INFO\t----\t----(.*)\t[^\t]*$
Features:

1: LIT|a literal character | 17.0
2: KLE|zero-or-more repetition | 3.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^\\t*INFO\\t----\\t----(.*)\\t[^\\t]*$'



cluster 184 stats:
nPatterns: 2.0
nProjects: 1
shortest: Simple_1Of_1unk_svc
Features:

1: LIT|a literal character | 19.5


0000 | 0001 | 'Simple_1Of_1unk_svc'
0001 | 0001 | 'Simple_1Of_1unk_host'



cluster 185 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^/?(?P<a>\w+)(/(?P<c>\w+)(/(?P<f>\w+))?)?$
Features:

1: ADD|one-or-more repetition | 3.0
2: LIT|a literal character | 3.0
3: PNG|named capture group | 3.0
4: QST|zero-or-one repetition | 3.0
5: WRD|[a-zA-Z0-9\_] | 3.0
6: CG|a capture group | 2.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^/?(?P<a>\\w+)(/(?P<c>\\w+)(/(?P<f>\\w+))?)?$'



cluster 186 stats:
nPatterns: 2.0
nProjects: 1
shortest: \bLCOV_EXCL_LINE\b
Features:

1: LIT|a literal character | 14.5
2: WNW|word/non-word boundary | 2.0


0000 | 0001 | '\\bLCOV_EXCL_LINE\\b'
0001 | 0001 | '\\bLCOV_EXCL_START\\b'



cluster 187 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^#: (?P<data>.*)
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0
5: STR|start-of-line | 1.0
6: END|end-of-line | 0.5


0000 | 0001 | '^#: (?P<data>.*)'
0001 | 0001 | '^#~ msgid "(?P<data>.*)"$'



cluster 188 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^!!NSFW!! -> http://rule34\.xxx/.* <- !!NSFW!!$
Features:

1: LIT|a literal character | 42.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^!!NSFW!! -> http://rule34\\.xxx/.* <- !!NSFW!!$'



cluster 189 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^dhcp\.pool\.start$
Features:

1: LIT|a literal character | 15.5
2: END|end-of-line | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^dhcp\\.pool\\.start$'
0001 | 0001 | '^dhcp\\.scope\\.start$'



cluster 190 stats:
nPatterns: 2.0
nProjects: 1
shortest: <!-- REPORTBUGCOL -->
Features:

1: LIT|a literal character | 22.0


0000 | 0001 | '<!-- REPORTBUGCOL -->'
0001 | 0001 | '<!-- SUMMARYENDHEAD -->'



cluster 191 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(?P<_1>[^|]*)\|(?P<_2>[^|]*)(\|(?P<_3>[^|]*))?$
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 3.0
3: NCCC|negated CCC | 3.0
4: PNG|named capture group | 3.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: QST|zero-or-one repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^(?P<_1>[^|]*)\\|(?P<_2>[^|]*)(\\|(?P<_3>[^|]*))?$'



cluster 192 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^R(?P<reps>\d+)?/(?P<start>[^P][^/]*)/(?P<intv>P.+)$
Features:

1: LIT|a literal character | 6.0
2: PNG|named capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: ANY|any non-newline char | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 1.0
8: KLE|zero-or-more repetition | 1.0
9: QST|zero-or-one repetition | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^R(?P<reps>\\d+)?/(?P<start>[^P][^/]*)/(?P<intv>P.+)$'



cluster 193 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^I/(stderr)\s*\(\s*\d+\):\s*((info|warning|error|debug): .*)$
Features:

1: LIT|a literal character | 34.0
2: KLE|zero-or-more repetition | 4.0
3: CG|a capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
5: ADD|one-or-more repetition | 1.0
6: ANY|any non-newline char | 1.0
7: DEC|any of: 0123456789 | 1.0
8: END|end-of-line | 1.0
9: OR|logical or | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^I/(stderr)\\s*\\(\\s*\\d+\\):\\s*((info|warning|error|debug): .*)$'



cluster 194 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^Comdat:\s+(.+)\s+SEGMENT NONE '(\w+)'\s+([0-9a-fA-F]+)\s+bytes$
Features:

1: LIT|a literal character | 33.0
2: ADD|one-or-more repetition | 7.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: CG|a capture group | 3.0
5: RNG|chars within a range | 3.0
6: ANY|any non-newline char | 1.0
7: CCC|custom character class | 1.0
8: END|end-of-line | 1.0
9: STR|start-of-line | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | "^Comdat:\\s+(.+)\\s+SEGMENT NONE '(\\w+)'\\s+([0-9a-fA-F]+)\\s+bytes$"



cluster 195 stats:
nPatterns: 3.0
nProjects: 1
shortest: diff --git a
Features:

1: LIT|a literal character | 13.333333333333334
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NWSP|any non-whitespace | 0.6666666666666666
5: ANY|any non-newline char | 0.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: LZY|as few reps as possible | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0001 | 'diff --git a'
0001 | 0001 | '.+?(diff --git a)'
0002 | 0001 | '^diff --git a/(\\S+) b/(\\S+)$'



cluster 196 stats:
nPatterns: 2.0
nProjects: 1
shortest: (?!__init__)[0-9a-zA-Z_]*(\.py)?$
Features:

1: LIT|a literal character | 18.5
2: RNG|chars within a range | 3.0
3: QST|zero-or-one repetition | 1.5
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NLKA|sequence doesn't follow  | 1.0


0000 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'
0001 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'



cluster 197 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^Multiple results found; try http://search\.vt\.edu/search/people\.html\?q=.*$
Features:

1: LIT|a literal character | 70.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^Multiple results found; try http://search\\.vt\\.edu/search/people\\.html\\?q=.*$'



cluster 198 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^No line number information available for address\s+0x[0-9a-f]+ <(?P<sym>\w+)\+\d+>
Features:

1: LIT|a literal character | 58.0
2: ADD|one-or-more repetition | 4.0
3: RNG|chars within a range | 2.0
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 1.0
6: PNG|named capture group | 1.0
7: STR|start-of-line | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^No line number information available for address\\s+0x[0-9a-f]+ <(?P<sym>\\w+)\\+\\d+>'



cluster 199 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(?!^(PRN|AUX|CLOCK\$|NUL|CON|COM\d|LPT\d|\..*)(\..+)?$)[^\x00-\x1f\\?*:\";|/]+$
Features:

1: LIT|a literal character | 36.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 2.0
5: DEC|any of: 0123456789 | 2.0
6: END|end-of-line | 2.0
7: STR|start-of-line | 2.0
8: KLE|zero-or-more repetition | 1.0
9: NCCC|negated CCC | 1.0
10: NLKA|sequence doesn't follow  | 1.0
11: OR|logical or | 1.0
12: QST|zero-or-one repetition | 1.0
13: RNG|chars within a range | 1.0


0000 | 0001 | '^(?!^(PRN|AUX|CLOCK\\$|NUL|CON|COM\\d|LPT\\d|\\..*)(\\..+)?$)[^\\x00-\\x1f\\\\?*:\\";|/]+$'



cluster 200 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^timestamp: [a-zA-Z]{3} (\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) ([-+])(\d{2})(\d{2})$
Features:

1: LIT|a literal character | 24.0
2: SNG|exactly n repetition | 9.0
3: DEC|any of: 0123456789 | 8.0
4: CG|a capture group | 4.0
5: CCC|custom character class | 2.0
6: RNG|chars within a range | 2.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^timestamp: [a-zA-Z]{3} (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}) ([-+])(\\d{2})(\\d{2})$'



cluster 201 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^std::__debug::deque<.*>$
Features:

1: LIT|a literal character | 26.666666666666668
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^std::__debug::deque<.*>$'
0001 | 0001 | '^std::__debug::unordered_map<.*>$'
0002 | 0001 | '^std::_Rb_tree_const_iterator<.*>$'



cluster 202 stats:
nPatterns: 3.0
nProjects: 1
shortest: \W\xd0\xb2\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 7.333333333333333
2: NWRD|non-word chars | 2.0


0000 | 0001 | '\\W\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0002 | 0001 | '\\W\xd1\x81\xd0\xb7\xd0\xb0\xd0\xbe\\W'



cluster 203 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[^\(\[]+[^\s](\+|\-|\*|/|%|\^|&|\||=|<|>|>>|<<|\+=|\-=|\*=|/=|%=|\^=|&=|\|=|==|<=|>=|>>=|<<=|!=|<>)[^\s][^\)\]]+$
Features:

1: LIT|a literal character | 51.0
2: NCCC|negated CCC | 4.0
3: ADD|one-or-more repetition | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: OR|logical or | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^[^\\(\\[]+[^\\s](\\+|\\-|\\*|/|%|\\^|&|\\||=|<|>|>>|<<|\\+=|\\-=|\\*=|/=|%=|\\^=|&=|\\|=|==|<=|>=|>>=|<<=|!=|<>)[^\\s][^\\)\\]]+$'



cluster 204 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^/(usr/)?(s?bin|games|libexec(/.+)?|(lib(64)?|share)/.+)/[^/]+$
Features:

1: LIT|a literal character | 50.0
2: CG|a capture group | 4.5
3: QST|zero-or-one repetition | 3.0
4: OR|logical or | 2.5
5: ADD|one-or-more repetition | 1.5
6: ANY|any non-newline char | 1.0
7: STR|start-of-line | 1.0
8: END|end-of-line | 0.5
9: NCCC|negated CCC | 0.5


0000 | 0001 | '^/(usr/)?(s?bin|games|libexec(/.+)?|(lib(64)?|share)/.+)/[^/]+$'
0001 | 0001 | '^/((usr/)?s?bin|etc/(rc\\.d/init\\.d|X11/xinit\\.d|cron\\.(hourly|daily|monthly|weekly)))/'



cluster 205 stats:
nPatterns: 19.0
nProjects: 1
shortest: (\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
Features:

1: LIT|a literal character | 30.894736842105264
2: CG|a capture group | 0.7894736842105263
3: OR|logical or | 0.6842105263157895
4: ANY|any non-newline char | 0.10526315789473684


0000 | 0001 | '(\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0001 | 0001 | '\xd0\xb0\xd0\xbb\xd1\x82\xd1\x83\xd1\x84\xd1\x8c\xd0\xb5\xd0\xb2\xd0\xbe'
0002 | 0001 | '\xd0\xb2\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe'
0003 | 0001 | '(\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0004 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xbe\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0005 | 0001 | '\xd1\x82\xd1\x83\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0006 | 0001 | '\xd0\xbc\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0007 | 0001 | '\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x86\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xbe\xd1\x81\xd1\x82'
0008 | 0001 | '\xd1\x84\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xba'
0009 | 0001 | '\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0010 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xb0\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0011 | 0001 | '\xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0012 | 0001 | '\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0013 | 0001 | '\xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd1\x8c\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0'
0014 | 0001 | '(\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\\.)'
0015 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0016 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe-\xd1\x80\xd0\xb0\xd0\xb7\xd1\x83\xd0\xbc\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0017 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd1\x81\xd1\x82\xd0\xb0\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0018 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



