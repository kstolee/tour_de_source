Cluster stats:

nClusters: 697
TotalPatterns: 1253
totalnProjects: 711
suffix: _i5.00_p0.50_k100_jacc_


cluster 0 stats:
nPatterns: 43.0
nProjects: 74
shortest: ^[a-zA-Z_]\w*
Features:

1: LIT|a literal character | 16.046511627906977
2: RNG|chars within a range | 4.6976744186046515
3: CCC|custom character class | 2.0697674418604652
4: KLE|zero-or-more repetition | 1.1395348837209303
5: CG|a capture group | 1.0930232558139534
6: ADD|one-or-more repetition | 0.7441860465116279
7: END|end-of-line | 0.5581395348837209
8: STR|start-of-line | 0.46511627906976744
9: OR|logical or | 0.2558139534883721
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2558139534883721
11: QST|zero-or-one repetition | 0.18604651162790697
12: NCCC|negated CCC | 0.13953488372093023
13: WRD|[a-zA-Z0-9\_] | 0.13953488372093023
14: ANY|any non-newline char | 0.11627906976744186
15: NCG|group without capturing | 0.11627906976744186
16: NLKA|sequence doesn't follow  | 0.06976744186046512
17: LZY|as few reps as possible | 0.046511627906976744
18: DEC|any of: 0123456789 | 0.023255813953488372
19: NWSP|any non-whitespace | 0.023255813953488372
20: OPT|options wrapper | 0.023255813953488372
21: SNG|exactly n repetition | 0.023255813953488372


0000 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0001 | 0013 | '^[a-zA-Z_][a-zA-Z_0-9]*(\\.[a-zA-Z_][a-zA-Z_0-9]*)*$'
0002 | 0009 | '^([A-Z]+)([1-9][0-9]*)$'
0003 | 0009 | '\\s*def\\s+(p_[a-zA-Z_0-9]*)\\('
0004 | 0009 | '^\\$([_a-zA-Z]\\w*|{[_a-zA-Z]\\w*})$'
0005 | 0008 | '^([a-zA-F0-9_-]*)[\\.]?.*$'
0006 | 0008 | '[ \t]*([A-Z0-9a-z_]+)[ \t]*=[ \t]*([-0-9]+)[, \t]*'
0007 | 0007 | '^[a-zA-Z_]\\w*'
0008 | 0006 | "[^A-Za-z0-9\\-_.~!*'();:@&=+$,/?%#[\\]]"
0009 | 0005 | "(?:[-a-zA-Z0-9!$&'\\(\\)\\*+,;=._~]|%[a-zA-Z0-9]{2})+$"
0010 | 0004 | '([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*'
0011 | 0003 | '([a-zA-Z0-9]*)$'
0012 | 0003 | '^[+/0-9A-Za-z]*=*$'
0013 | 0002 | '^([a-zA-Z0-9_]+):( |$)'
0014 | 0002 | '<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'
0015 | 0002 | '@%\\(([a-zA-Z][a-zA-Z0-9_-]*)\\)s'
0016 | 0001 | '([^a-zA-Z_0-9])'
0017 | 0001 | '^@[A-Z0-9\\_]+$'
0018 | 0001 | '^[a-z|A-Z]\\w*$'
0019 | 0001 | "(^[A-Za-z\\' ]+$)"
0020 | 0001 | '([^A-Za-z0-9\\._-])'
0021 | 0001 | '^([a-zA-Z0-9_]*) *=.*$'
0022 | 0001 | '(?:[.~]|/[a-zA-Z_0-9]+)/'
0023 | 0001 | '([a-zA-Z_][a-zA-Z0-9_]*)'
0024 | 0001 | '(fasta_[a-z0-9]+\\.fasta)'
0025 | 0001 | '(?i)<[a-z\\.&_0-9\\@\\-]+>'
0026 | 0001 | '[$_]?(?:set|add)($|[A-Z_])'
0027 | 0001 | '\\?[a-zA-Z_][a-zA-Z0-9_]*$'
0028 | 0001 | '^&[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0029 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'
0030 | 0001 | '^[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]$'
0031 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'
0032 | 0001 | '(^[^a-zA-Z\\._]+)|([^a-zA-Z\\._0-9]+)'
0033 | 0001 | '[- \n\t\ra-zA-Z0-9()+,./:=?;!*#@$_%]*'
0034 | 0001 | '^([_A-Za-z][_A-Za-z0-9]*|\\.|\\.\\.)$'
0035 | 0001 | '^[0-9x]+ [0-9xA-F]+ .* [A-Z][A-Z] [0-9].*$'
0036 | 0001 | '[\\-a-zA-Z0-9\\x80-\\xff_\\.\\@\\!\\#\\%\\:]'
0037 | 0001 | '[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?'
0038 | 0001 | '^\\s*class\\s+([a-zA-Z_]\\w*)\\s*(\\([\\s\\w.,]*\\))?:\\s*$'
0039 | 0001 | '([# ]*?)([a-zA-Z0-9_]+)( +)([a-zA-Z0-9_\\?\\!<>\\+=\\.]+)(.*)'
0040 | 0001 | '^([A-Za-z0-9 .#(),_/-]+) +\\(([0-9A-F]+), ?([0-9A-F]+)\\) ([A-Z][A-Z]) ([0-9]+)$'
0041 | 0001 | '^([-_./a-zA-Z0-9]+)\\s+(\\d+)\\s+(\\S+?)((?:\\s+[-_./a-zA-Z0-9]+=[-_./a-zA-Z0-9]+)*)$'
0042 | 0001 | '^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$'



cluster 1 stats:
nPatterns: 2.0
nProjects: 61
shortest: <([^>]*)>: \[0x([0-9a-f]+)-0x([0-9a-f]+)\]
Features:

1: LIT|a literal character | 17.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.5
4: CG|a capture group | 1.5
5: ADD|one-or-more repetition | 1.0
6: KLE|zero-or-more repetition | 0.5
7: NCCC|negated CCC | 0.5
8: OR|logical or | 0.5


0000 | 0057 | '<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'
0001 | 0004 | '\\\\|\\/|\\||\\:|\\?|\\*|"|<|>|[\x00-\x1f\x7f-\x9f]/'



cluster 2 stats:
nPatterns: 1.0
nProjects: 60
shortest: [^]]+?\] +([0-9.]+): (\w+) <-(\w+)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 5.0
3: CG|a capture group | 3.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: CCC|custom character class | 1.0
6: LZY|as few reps as possible | 1.0
7: NCCC|negated CCC | 1.0
8: RNG|chars within a range | 1.0


0000 | 0060 | '[^]]+?\\] +([0-9.]+): (\\w+) <-(\\w+)'



cluster 3 stats:
nPatterns: 3.0
nProjects: 56
shortest: \s*,\s*
Features:

1: KLE|zero-or-more repetition | 2.3333333333333335
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.3333333333333335
3: LIT|a literal character | 1.3333333333333333


0000 | 0054 | '\\s*,\\s*'
0001 | 0002 | '\\s*\\{\\s*'
0002 | 0002 | '\\s*\n\\s*\n\\s*'



cluster 4 stats:
nPatterns: 3.0
nProjects: 47
shortest: stop_session\)\(
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OR|logical or | 0.3333333333333333
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0038 | 'stop_session\\)\\('
0001 | 0008 | '\\{%\\s*(block|extends)'
0002 | 0001 | 'About\\((.*)\\).should_include\\((.*)\\)'



cluster 5 stats:
nPatterns: 2.0
nProjects: 43
shortest: ^[ ]*(#.*)?$
Features:

1: LIT|a literal character | 2.5
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.5
4: CG|a capture group | 1.5
5: CCC|custom character class | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: LZY|as few reps as possible | 0.5
9: QST|zero-or-one repetition | 0.5


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0002 | '^(.*?)([\\[\\*\\?].*)$'



cluster 6 stats:
nPatterns: 5.0
nProjects: 32
shortest: (Y=.*)
Features:

1: LIT|a literal character | 1.6
2: CG|a capture group | 1.4
3: KLE|zero-or-more repetition | 1.4
4: ANY|any non-newline char | 1.2
5: LZY|as few reps as possible | 0.4
6: NWSP|any non-whitespace | 0.2


0000 | 0021 | '\\(.*?\\)'
0001 | 0006 | '(.*?)(#)(.*)'
0002 | 0002 | '(Y=.*)'
0003 | 0002 | '(!\\S*)(.*)'
0004 | 0001 | '\\) (.*)'



cluster 7 stats:
nPatterns: 2.0
nProjects: 31
shortest: ,
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 0.5


0000 | 0030 | ','
0001 | 0001 | u',,+'



cluster 8 stats:
nPatterns: 5.0
nProjects: 31
shortest: ^(?:=)$
Features:

1: LIT|a literal character | 3.0
2: NCG|group without capturing | 0.8
3: STR|start-of-line | 0.8
4: CG|a capture group | 0.6
5: END|end-of-line | 0.6
6: OR|logical or | 0.4
7: BKR|match the $i^{th}$ CG | 0.2
8: QST|zero-or-one repetition | 0.2
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0021 | u'^(?:=)$'
0001 | 0008 | '^(?:(a)|c)(\\1)$'
0002 | 0003 | '^(?:=)$'
0003 | 0002 | '(^package:)|\\s'
0004 | 0001 | ':(?://)?'



cluster 9 stats:
nPatterns: 6.0
nProjects: 30
shortest: ^[0-9]{2}$
Features:

1: LIT|a literal character | 7.0
2: RNG|chars within a range | 2.5
3: CCC|custom character class | 2.1666666666666665
4: SNG|exactly n repetition | 1.8333333333333333
5: END|end-of-line | 0.8333333333333334
6: STR|start-of-line | 0.8333333333333334
7: CG|a capture group | 0.3333333333333333
8: DEC|any of: 0123456789 | 0.3333333333333333
9: KLE|zero-or-more repetition | 0.3333333333333333
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333
11: DBB|$n\le x \le m$ repetition | 0.16666666666666666


0000 | 0022 | '^[ -~]{0,200}[!-~]$'
0001 | 0007 | 'md5=[0-9a-f]{32}$'
0002 | 0002 | '^[0-9]{2}$'
0003 | 0001 | '^[0-9a-f]{32}$'
0004 | 0001 | '(^0x[\\da-f]{8})\\s*=\\s*([\\da-f]{32})'
0005 | 0001 | '^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$'



cluster 10 stats:
nPatterns: 1.0
nProjects: 29
shortest: \W+
Features:

1: ADD|one-or-more repetition | 1.0
2: NWRD|non-word chars | 1.0


0000 | 0026 | '\\W+'



cluster 11 stats:
nPatterns: 2.0
nProjects: 28
shortest: \Z(?ms)
Features:

1: OPT|options wrapper | 1.0
2: ENDZ|absolute end of string | 0.5
3: LIT|a literal character | 0.5
4: STR|start-of-line | 0.5


0000 | 0018 | '\\Z(?ms)'
0001 | 0012 | '(?m)^\\.'



cluster 12 stats:
nPatterns: 1.0
nProjects: 28
shortest: ^<\?.*encoding=[\'"](.*?)[\'"].*\?>
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 3.0
4: CCC|custom character class | 2.0
5: CG|a capture group | 1.0
6: LZY|as few reps as possible | 1.0
7: STR|start-of-line | 1.0


0000 | 0028 | '^<\\?.*encoding=[\'"](.*?)[\'"].*\\?>'



cluster 13 stats:
nPatterns: 2.0
nProjects: 27
shortest: <([\w]*)=([, \w]*)>
Features:

1: LIT|a literal character | 10.5
2: CCC|custom character class | 1.5
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0026 | '[ \\(\\)<>@,;:\\\\"/\\[\\]\\?=]'
0001 | 0001 | '<([\\w]*)=([, \\w]*)>'



cluster 14 stats:
nPatterns: 1.0
nProjects: 26
shortest: \n{2,}
Features:

1: LIT|a literal character | 1.0
2: LWB|at least n repetition | 1.0


0000 | 0026 | '\\n{2,}'



cluster 15 stats:
nPatterns: 3.0
nProjects: 26
shortest: \r
Features:

1: LIT|a literal character | 3.0
2: QST|zero-or-one repetition | 0.6666666666666666
3: OR|logical or | 0.3333333333333333
4: STR|start-of-line | 0.3333333333333333


0000 | 0013 | '\\r'
0001 | 0011 | '^\\r?\\n\\r?\\n'
0002 | 0002 | '\r|\n|\r\n'



cluster 16 stats:
nPatterns: 2.0
nProjects: 25
shortest: "
Features:

1: LIT|a literal character | 1.5


0000 | 0024 | '"'
0001 | 0001 | u'"}'



cluster 17 stats:
nPatterns: 2.0
nProjects: 25
shortest: &#?\w+;
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.5
3: WRD|[a-zA-Z0-9\_] | 1.0
4: CG|a capture group | 0.5
5: DEC|any of: 0123456789 | 0.5
6: NLKA|sequence doesn't follow  | 0.5
7: OR|logical or | 0.5
8: QST|zero-or-one repetition | 0.5


0000 | 0021 | '&#?\\w+;'
0001 | 0004 | u'&(?!(\\w+|#\\d+);)'



cluster 18 stats:
nPatterns: 2.0
nProjects: 25
shortest: release_cmd_to_pool
Features:

1: LIT|a literal character | 19.5
2: ANY|any non-newline char | 0.5
3: KLE|zero-or-more repetition | 0.5


0000 | 0024 | 'release_cmd_to_pool'
0001 | 0001 | 'exampleLocalVar.*abcde'



cluster 19 stats:
nPatterns: 1.0
nProjects: 24
shortest: [*?[]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0


0000 | 0024 | '[*?[]'



cluster 20 stats:
nPatterns: 13.0
nProjects: 24
shortest: ^-(.*)$
Features:

1: LIT|a literal character | 3.076923076923077
2: KLE|zero-or-more repetition | 1.5384615384615385
3: ANY|any non-newline char | 1.3076923076923077
4: CG|a capture group | 1.1538461538461537
5: END|end-of-line | 0.8461538461538461
6: STR|start-of-line | 0.8461538461538461
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.38461538461538464
8: ADD|one-or-more repetition | 0.23076923076923078
9: OR|logical or | 0.07692307692307693


0000 | 0006 | '^\\s*\\((.*)\\)\\s*$'
0001 | 0005 | "^'(.*)'$"
0002 | 0003 | "(''')\\s*$"
0003 | 0003 | '^ *(.*) *( *) *$'
0004 | 0002 | '^(.+)<(.+)>(.*)$'
0005 | 0002 | '^\\s*(>>>|...) (.*)$'
0006 | 0001 | '^-(.*)$'
0007 | 0001 | '^//(.*)'
0008 | 0001 | "^'(.+)'@"
0009 | 0001 | '^\\(.*\\)$'
0010 | 0001 | '^\\s*##(.*)$'
0011 | 0001 | '^\\..*\\.swp$'
0012 | 0001 | 'test_(.*)\\.js$'



cluster 21 stats:
nPatterns: 6.0
nProjects: 23
shortest: ^\[(.*)\]$
Features:

1: LIT|a literal character | 5.5
2: KLE|zero-or-more repetition | 1.8333333333333333
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.1666666666666667
5: END|end-of-line | 0.8333333333333334
6: STR|start-of-line | 0.8333333333333334
7: NCCC|negated CCC | 0.5
8: CCC|custom character class | 0.3333333333333333


0000 | 0015 | '^([^=]*)=(.*)$'
0001 | 0003 | '^[\'"](.*)[\'"]$'
0002 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0003 | 0001 | '^\\[(.*)\\]$'
0004 | 0001 | "'\\.\\./([^']*)'"
0005 | 0001 | '^\\t*INFO\\t----\\t----(.*)\\t[^\\t]*$'



cluster 22 stats:
nPatterns: 9.0
nProjects: 23
shortest: ([0-9]+)
Features:

1: LIT|a literal character | 6.555555555555555
2: CCC|custom character class | 1.4444444444444444
3: RNG|chars within a range | 1.4444444444444444
4: CG|a capture group | 1.3333333333333333
5: ADD|one-or-more repetition | 0.7777777777777778
6: KLE|zero-or-more repetition | 0.6666666666666666
7: OR|logical or | 0.1111111111111111
8: STR|start-of-line | 0.1111111111111111
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1111111111111111


0000 | 0013 | '([0-9]+)'
0001 | 0003 | '^@@ -([0-9]*),([0-9]*) \\+([0-9]*),([0-9]*) @@'
0002 | 0002 | '%([0-9]+)'
0003 | 0002 | '\\*\\*([0-9]+)'
0004 | 0001 | "([0-9]+)'"
0005 | 0001 | '([0-9]+)\\s+min'
0006 | 0001 | 'N=10: ([.0-9]+)'
0007 | 0001 | '(0|[1-9][0-9]*):'
0008 | 0001 | '\\[ip:([0-9_]*)\\]'



cluster 23 stats:
nPatterns: 9.0
nProjects: 23
shortest: ^[a-zA-Z]*$
Features:

1: LIT|a literal character | 9.88888888888889
2: RNG|chars within a range | 3.7777777777777777
3: CCC|custom character class | 2.2222222222222223
4: CG|a capture group | 1.4444444444444444
5: ADD|one-or-more repetition | 1.1111111111111112
6: KLE|zero-or-more repetition | 1.0
7: QST|zero-or-one repetition | 0.6666666666666666
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333
9: DEC|any of: 0123456789 | 0.2222222222222222
10: NCCC|negated CCC | 0.2222222222222222
11: OR|logical or | 0.2222222222222222
12: STR|start-of-line | 0.2222222222222222
13: END|end-of-line | 0.1111111111111111
14: LZY|as few reps as possible | 0.1111111111111111
15: NWSP|any non-whitespace | 0.1111111111111111


0000 | 0007 | '&#?[A-Za-z0-9]+?;'
0001 | 0007 | '[\\\\]([a-zA-Z]+[*]?) ?({|\\s*\\n?)'
0002 | 0003 | '([A-Z][a-z]+)'
0003 | 0002 | '^\\s*@([a-zA-Z]+)'
0004 | 0001 | '^[a-zA-Z]*$'
0005 | 0001 | '[a-zA-Z]+://[\\S]+'
0006 | 0001 | '([^a-zA-Z0-9]*)([a-zA-Z0-9]+)([^a-zA-Z0-9]*)'
0007 | 0001 | '([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'
0008 | 0001 | '([a-zA-Z][a-zA-Z]|[iIxX]-([a-zA-Z])+)(-[a-zA-Z])*'



cluster 24 stats:
nPatterns: 3.0
nProjects: 22
shortest: ^ *\n
Features:

1: LIT|a literal character | 1.6666666666666667
2: KLE|zero-or-more repetition | 1.0
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0015 | '^\\s*\\n'
0001 | 0013 | '^ *\n'
0002 | 0012 | '^-*\n'



cluster 25 stats:
nPatterns: 4.0
nProjects: 22
shortest: /\*
Features:

1: LIT|a literal character | 1.75
2: KLE|zero-or-more repetition | 0.5
3: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0019 | '/\\*'
0001 | 0005 | '/\\*\\*'
0002 | 0003 | u'\\w*'
0003 | 0003 | '\\\\*\\#'



cluster 26 stats:
nPatterns: 4.0
nProjects: 22
shortest: (\s|,)+
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: OR|logical or | 0.75
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
6: NWSP|any non-whitespace | 0.25


0000 | 0017 | '(\\(|\\)|\\s+)'
0001 | 0002 | '(\\s|,)+'
0002 | 0002 | '\\|(\\S+)\\|'
0003 | 0001 | '(\\s|_)+'



cluster 27 stats:
nPatterns: 4.0
nProjects: 22
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 5.5
2: NCCC|negated CCC | 1.25
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 0.5
5: OR|logical or | 0.25


0000 | 0019 | '<[^>]*?>'
0001 | 0002 | '<![^>]*>'
0002 | 0001 | '<[^!][^>]*?>'
0003 | 0001 | '<!--[^>]*-->|<!>'



cluster 28 stats:
nPatterns: 5.0
nProjects: 22
shortest: \[([^:]+?)\]
Features:

1: LIT|a literal character | 7.8
2: ADD|one-or-more repetition | 1.8
3: CG|a capture group | 1.6
4: NCCC|negated CCC | 1.6
5: LZY|as few reps as possible | 0.6
6: QST|zero-or-one repetition | 0.4
7: END|end-of-line | 0.2
8: NCG|group without capturing | 0.2
9: OPT|options wrapper | 0.2
10: STR|start-of-line | 0.2
11: WRD|[a-zA-Z0-9\_] | 0.2
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2


0000 | 0016 | '``([^`\\s]+?)``'
0001 | 0002 | '\\[([^:]+?)\\]'
0002 | 0002 | '@\\w+( [^{}:\n]+)?:'
0003 | 0001 | "'([^']+?)' \\(qv\\)"
0004 | 0001 | '(?m)^Conf ([^ ]+) \\(([^ ]+) ([^ ]+)(?: \\[([^\\]]+)\\])?\\)$'



cluster 29 stats:
nPatterns: 10.0
nProjects: 21
shortest: [\n\r]
Features:

1: LIT|a literal character | 3.3
2: CCC|custom character class | 1.1
3: ADD|one-or-more repetition | 0.8
4: END|end-of-line | 0.2
5: KLE|zero-or-more repetition | 0.1
6: QST|zero-or-one repetition | 0.1
7: STR|start-of-line | 0.1


0000 | 0006 | '[\\r\\n]+'
0001 | 0004 | '[\n\r]'
0002 | 0003 | '[\n ]+$'
0003 | 0002 | '\\n\\r?[\\t ]*$'
0004 | 0001 | '[\t ]+'
0005 | 0001 | '[ \\t]+\\n'
0006 | 0001 | '[ \r\n\t]+'
0007 | 0001 | '[\n\r\t ]+'
0008 | 0001 | '^[ \\t\\n\\r]'
0009 | 0001 | '[\\r\\n\\t ]+[\\r\\n]+'



cluster 30 stats:
nPatterns: 8.0
nProjects: 21
shortest: ^[^A-Za-z_]$
Features:

1: LIT|a literal character | 9.375
2: RNG|chars within a range | 3.375
3: NCCC|negated CCC | 0.875
4: CCC|custom character class | 0.375
5: END|end-of-line | 0.375
6: STR|start-of-line | 0.375
7: ADD|one-or-more repetition | 0.25
8: DBB|$n\le x \le m$ repetition | 0.125
9: DEC|any of: 0123456789 | 0.125


0000 | 0010 | '[^A-Za-z0-9]Q_OBJECT[^A-Za-z0-9]'
0001 | 0004 | u'[^A-Za-z0-9.]+'
0002 | 0002 | '^[-_A-Za-z0-9]+$'
0003 | 0001 | '^[^A-Za-z_]$'
0004 | 0001 | '[^a-zA-Z0-9_ -]'
0005 | 0001 | '[^a-zA-Z0-9_\\.]'
0006 | 0001 | u'[^A-Za-z0-9_\\.\\-]'
0007 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,4}$'



cluster 31 stats:
nPatterns: 6.0
nProjects: 21
shortest: CONFIGEDITORHERE
Features:

1: LIT|a literal character | 26.5
2: OR|logical or | 0.3333333333333333
3: ADD|one-or-more repetition | 0.16666666666666666
4: DEC|any of: 0123456789 | 0.16666666666666666


0000 | 0008 | 'SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE'
0001 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'
0002 | 0004 | '@@PACKAGE_REVISION@@'
0003 | 0003 | '_F2PY_STRING_CONSTANT_\\d+_'
0004 | 0001 | 'CONFIGEDITORHERE'
0005 | 0001 | 'LINUX_METERPRETER_MULTI_SCRIPT='



cluster 32 stats:
nPatterns: 7.0
nProjects: 20
shortest: [\x00-\x20]
Features:

1: LIT|a literal character | 3.4285714285714284
2: RNG|chars within a range | 1.5714285714285714
3: CCC|custom character class | 1.0
4: ADD|one-or-more repetition | 0.14285714285714285
5: ENDZ|absolute end of string | 0.14285714285714285
6: KLE|zero-or-more repetition | 0.14285714285714285
7: STR|start-of-line | 0.14285714285714285
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0007 | '[\\x00-\\x20]'
0001 | 0005 | '\\A[\\x00-\\x7f]*\\Z'
0002 | 0004 | u'[`\x00- \x7f-\xa0\\s]+'
0003 | 0003 | '[\\x00-\\x1f]'
0004 | 0002 | '[=\x7f-\xff]'
0005 | 0001 | u'[\\000-\\037]'
0006 | 0001 | '[\\x00-\\x08\\x0B-\\x0C\\x0E-\\x1F\\x7F-\\xFF]'



cluster 33 stats:
nPatterns: 1.0
nProjects: 19
shortest: \$(\w+|\{[^}]*\})
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: OR|logical or | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0019 | '\\$(\\w+|\\{[^}]*\\})'



cluster 34 stats:
nPatterns: 3.0
nProjects: 19
shortest: (--|/)
Features:

1: LIT|a literal character | 2.6666666666666665
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: ENDZ|absolute end of string | 0.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0015 | '<(/|\\Z)'
0001 | 0003 | u'(\\.|\\s|/|-)'
0002 | 0001 | '(--|/)'



cluster 35 stats:
nPatterns: 4.0
nProjects: 19
shortest: ()
Features:

1: CG|a capture group | 1.0
2: LIT|a literal character | 1.0
3: ANY|any non-newline char | 0.5
4: NWNW|negated WNW | 0.5


0000 | 0015 | '()'
0001 | 0008 | '\\B(b.)\\B'
0002 | 0004 | u'\\\\(.)'
0003 | 0001 | '(\\\\")'



cluster 36 stats:
nPatterns: 2.0
nProjects: 19
shortest: \S+ (\d+)\.(\d+)\.?(\d+)?
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: DEC|any of: 0123456789 | 2.5
5: QST|zero-or-one repetition | 2.0
6: END|end-of-line | 0.5
7: NWSP|any non-whitespace | 0.5
8: OR|logical or | 0.5


0000 | 0016 | '\\S+ (\\d+)\\.(\\d+)\\.?(\\d+)?'
0001 | 0003 | '(\\d+(\\.\\d+)?) (K|M|G|T)b?$'



cluster 37 stats:
nPatterns: 2.0
nProjects: 18
shortest: --
Features:

1: LIT|a literal character | 2.0


0000 | 0017 | '--'
0001 | 0001 | u'-h'



cluster 38 stats:
nPatterns: 1.0
nProjects: 18
shortest: url="([^"]+)"
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0018 | 'url="([^"]+)"'



cluster 39 stats:
nPatterns: 5.0
nProjects: 18
shortest: .*?\n
Features:

1: LIT|a literal character | 3.6
2: ANY|any non-newline char | 0.8
3: KLE|zero-or-more repetition | 0.8
4: LZY|as few reps as possible | 0.6
5: QST|zero-or-one repetition | 0.4


0000 | 0012 | '.*?\\n'
0001 | 0002 | '--.*?--'
0002 | 0002 | '/\\.svn/?'
0003 | 0001 | '.*\\n?'
0004 | 0001 | '<div.*?>\\n'



cluster 40 stats:
nPatterns: 4.0
nProjects: 18
shortest: --?\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\s]+
Features:

1: LIT|a literal character | 12.25
2: KLE|zero-or-more repetition | 3.25
3: NCCC|negated CCC | 2.75
4: WRD|[a-zA-Z0-9\_] | 2.5
5: NCG|group without capturing | 2.25
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.25
7: WNW|word/non-word boundary | 2.0
8: ADD|one-or-more repetition | 1.75
9: OR|logical or | 1.75
10: QST|zero-or-one repetition | 1.5
11: CG|a capture group | 1.0
12: SNG|exactly n repetition | 1.0
13: ANY|any non-newline char | 0.5
14: LKA|matching sequence follows | 0.5
15: NWRD|non-word chars | 0.5
16: RNG|chars within a range | 0.5
17: CCC|custom character class | 0.25
18: LKB|matching sequence precedes | 0.25
19: LWB|at least n repetition | 0.25


0000 | 0008 | '(?:;\\s*|\\s+)(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*;|(?:\\(|\\[|;)\\s*(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*(?:\\]|\\)|;)'
0001 | 0006 | '("(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'(?:[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|[^\\s]+)'
0002 | 0004 | '(\\s+|[^\\s\\w]*\\w+[^0-9\\W]-(?=\\w+[^0-9\\W])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'
0003 | 0001 | '--?\\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\\s]+'



cluster 41 stats:
nPatterns: 1.0
nProjects: 17
shortest: \s*#?\s*$
Features:

1: KLE|zero-or-more repetition | 2.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: END|end-of-line | 1.0
4: LIT|a literal character | 1.0
5: QST|zero-or-one repetition | 1.0


0000 | 0017 | '\\s*#?\\s*$'



cluster 42 stats:
nPatterns: 1.0
nProjects: 17
shortest: Revision: (.+)
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0


0000 | 0017 | 'Revision: (.+)'



cluster 43 stats:
nPatterns: 1.0
nProjects: 17
shortest: ([.\w-]+)\s*(.*)$
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 2.0
3: LIT|a literal character | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: END|end-of-line | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0017 | '([.\\w-]+)\\s*(.*)$'



cluster 44 stats:
nPatterns: 3.0
nProjects: 17
shortest: /$
Features:

1: LIT|a literal character | 1.6666666666666667
2: END|end-of-line | 1.0
3: ANY|any non-newline char | 0.6666666666666666
4: KLE|zero-or-more repetition | 0.6666666666666666


0000 | 0011 | '".*"$'
0001 | 0004 | '/$'
0002 | 0001 | '//.*$'



cluster 45 stats:
nPatterns: 5.0
nProjects: 17
shortest: "|\\
Features:

1: LIT|a literal character | 3.2
2: OR|logical or | 1.0
3: ANY|any non-newline char | 0.4
4: STR|start-of-line | 0.4
5: END|end-of-line | 0.2


0000 | 0008 | '\\\\.|.'
0001 | 0003 | '"|\\\\'
0002 | 0003 | '\\.|\\\\'
0003 | 0002 | '\\.\\.|^\\./|\\.$|/\\./|^-'
0004 | 0001 | '\\.|-'



cluster 46 stats:
nPatterns: 4.0
nProjects: 17
shortest: ^(\d{10})$
Features:

1: LIT|a literal character | 1.5
2: DEC|any of: 0123456789 | 1.25
3: CG|a capture group | 0.75
4: SNG|exactly n repetition | 0.75
5: STR|start-of-line | 0.75
6: END|end-of-line | 0.5
7: OR|logical or | 0.5
8: WNW|word/non-word boundary | 0.5
9: DBB|$n\le x \le m$ repetition | 0.25
10: KLE|zero-or-more repetition | 0.25
11: NCG|group without capturing | 0.25
12: NDEC|any non-decimal | 0.25
13: NWRD|non-word chars | 0.25


0000 | 0012 | '^(\\d{10})$'
0001 | 0003 | u'^(\\d{10})$'
0002 | 0001 | '\\b(?:20|19)\\d{2}\\b'
0003 | 0001 | '(\\D|^)\\d{1,2}\\W*\\d00'



cluster 47 stats:
nPatterns: 6.0
nProjects: 17
shortest: (\w+)(.*)
Features:

1: LIT|a literal character | 2.3333333333333335
2: CG|a capture group | 1.8333333333333333
3: ADD|one-or-more repetition | 1.1666666666666667
4: ANY|any non-newline char | 1.0
5: KLE|zero-or-more repetition | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0
7: STR|start-of-line | 0.16666666666666666


0000 | 0006 | '@(\\w*)(.*)'
0001 | 0005 | '(\\w+)(.*)'
0002 | 0003 | '(\\w+)-(\\w+)\\ : (.*)'
0003 | 0001 | '\\A( *\\n)+'
0004 | 0001 | '(\\w+://)(.+)'
0005 | 0001 | '.*/(\\w+).kcm'



cluster 48 stats:
nPatterns: 2.0
nProjects: 16
shortest: ^\d+$
Features:

1: ADD|one-or-more repetition | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 1.0
4: LIT|a literal character | 0.5
5: STR|start-of-line | 0.5


0000 | 0015 | u'^\\d+$'
0001 | 0001 | 'p\\d+$'



cluster 49 stats:
nPatterns: 2.0
nProjects: 16
shortest: ^\s+$
Features:

1: ADD|one-or-more repetition | 1.5
2: STR|start-of-line | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
4: END|end-of-line | 0.5
5: NWSP|any non-whitespace | 0.5


0000 | 0014 | '^\\s+$'
0001 | 0002 | '^\\S+\\s+'



cluster 50 stats:
nPatterns: 3.0
nProjects: 16
shortest: #define Py_([a-z_]+) ([0-9]+)
Features:

1: LIT|a literal character | 20.666666666666668
2: CCC|custom character class | 3.6666666666666665
3: RNG|chars within a range | 3.0
4: ADD|one-or-more repetition | 2.0
5: CG|a capture group | 1.3333333333333333
6: KLE|zero-or-more repetition | 0.6666666666666666
7: STR|start-of-line | 0.3333333333333333


0000 | 0010 | '/[*] #undef ([A-Z][A-Za-z0-9_]+) [*]/\n'
0001 | 0010 | '^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)[\t ]+'
0002 | 0001 | '#define Py_([a-z_]+) ([0-9]+)'



cluster 51 stats:
nPatterns: 1.0
nProjects: 15
shortest: ^\s*=\s*([^\s;,]*)
Features:

1: KLE|zero-or-more repetition | 3.0
2: LIT|a literal character | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: CG|a capture group | 1.0
5: NCCC|negated CCC | 1.0
6: STR|start-of-line | 1.0


0000 | 0015 | '^\\s*=\\s*([^\\s;,]*)'



cluster 52 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^http://
Features:

1: LIT|a literal character | 8.0
2: STR|start-of-line | 0.5


0000 | 0013 | '^http://'
0001 | 0002 | '  http://'



cluster 53 stats:
nPatterns: 5.0
nProjects: 15
shortest: &(?!\#)
Features:

1: LIT|a literal character | 2.6
2: NLKA|sequence doesn't follow  | 0.6
3: NLKB|sequence doesn't precede | 0.6
4: LKB|matching sequence precedes | 0.2


0000 | 0005 | '(?<!\\\\),'
0001 | 0004 | '&(?!\\#)'
0002 | 0004 | u'(?<!%)%(?!%)'
0003 | 0001 | '(?<!\\\\)%'
0004 | 0001 | '/(?<=,)(?! )/'



cluster 54 stats:
nPatterns: 3.0
nProjects: 15
shortest: (\d+\.\d+\.\d+)
Features:

1: LIT|a literal character | 5.0
2: DEC|any of: 0123456789 | 3.0
3: ADD|one-or-more repetition | 2.6666666666666665
4: CG|a capture group | 2.0
5: ANY|any non-newline char | 0.3333333333333333


0000 | 0012 | '(\\d+\\.\\d+\\.\\d+)'
0001 | 0002 | '(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'
0002 | 0001 | 'data3_(\\d)_\\d+.txt'



cluster 55 stats:
nPatterns: 4.0
nProjects: 15
shortest: ^(?P<number>\d{7})(?P<check>\d)$
Features:

1: DEC|any of: 0123456789 | 3.75
2: PNG|named capture group | 3.0
3: SNG|exactly n repetition | 1.25
4: STR|start-of-line | 1.0
5: END|end-of-line | 0.75
6: DBB|$n\le x \le m$ repetition | 0.25
7: LIT|a literal character | 0.25
8: QST|zero-or-one repetition | 0.25


0000 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0001 | 0011 | '^(?P<initial>\\d{1})(?P<yy>\\d\\d)(?P<mm>\\d\\d)(?P<dd>\\d\\d)(?P<mid>\\d{4})(?P<checksum>\\d{1})'
0002 | 0003 | u'^(?P<number>\\d{7})(?P<check>\\d)$'
0003 | 0003 | u'^(?P<number>\\d{1,8})-?(?P<check>\\d)$'



cluster 56 stats:
nPatterns: 1.0
nProjects: 14
shortest: (.*/|)([^/]+\.[a-z]+:\d+):(\d+:)? warning:
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 4.0
3: CG|a capture group | 3.0
4: DEC|any of: 0123456789 | 2.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NCCC|negated CCC | 1.0
9: OR|logical or | 1.0
10: QST|zero-or-one repetition | 1.0
11: RNG|chars within a range | 1.0


0000 | 0014 | '(.*/|)([^/]+\\.[a-z]+:\\d+):(\\d+:)? warning:'



cluster 57 stats:
nPatterns: 5.0
nProjects: 14
shortest: $(\w+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: END|end-of-line | 0.4
6: ANY|any non-newline char | 0.2


0000 | 0008 | '$(\\w+)'
0001 | 0004 | '\\$(\\w+)'
0002 | 0001 | '(\\w+;)'
0003 | 0001 | ':(\\w+)'
0004 | 0001 | '(\\w+).py$'



cluster 58 stats:
nPatterns: 5.0
nProjects: 14
shortest: <key>.*?</key>
Features:

1: LIT|a literal character | 11.2
2: ANY|any non-newline char | 0.8
3: KLE|zero-or-more repetition | 0.8
4: LZY|as few reps as possible | 0.8
5: CG|a capture group | 0.4
6: NCG|group without capturing | 0.2
7: OR|logical or | 0.2
8: QST|zero-or-one repetition | 0.2


0000 | 0007 | '<title>(.*?)</title>'
0001 | 0003 | '<key>.*?</key>'
0002 | 0002 | '</?(?:b|em|i)>'
0003 | 0001 | '<url>.*?</url>'
0004 | 0001 | 'LawText1">(.*?)</'



cluster 59 stats:
nPatterns: 2.0
nProjects: 13
shortest: ^
Features:

1: STR|start-of-line | 1.0
2: LIT|a literal character | 0.5


0000 | 0002 | '^'
0001 | 0001 | '^p'



cluster 60 stats:
nPatterns: 1.0
nProjects: 13
shortest: ^(\s*)(\w*)
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 2.0
3: STR|start-of-line | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0013 | '^(\\s*)(\\w*)'



cluster 61 stats:
nPatterns: 1.0
nProjects: 13
shortest: coding[:=]\s*([-\w_.]+)
Features:

1: LIT|a literal character | 11.0
2: CCC|custom character class | 2.0
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0013 | 'coding[:=]\\s*([-\\w_.]+)'



cluster 62 stats:
nPatterns: 3.0
nProjects: 13
shortest: \\n
Features:

1: LIT|a literal character | 2.3333333333333335


0000 | 0006 | '\\\\n'
0001 | 0005 | '\\\\\\n'
0002 | 0001 | '\\n:\\n'



cluster 63 stats:
nPatterns: 4.0
nProjects: 13
shortest: #define NODE_MAJOR_VERSION
Features:

1: LIT|a literal character | 25.5
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: DEC|any of: 0123456789 | 1.25
5: KLE|zero-or-more repetition | 1.25
6: ANY|any non-newline char | 0.5
7: NDEC|any non-decimal | 0.5
8: STR|start-of-line | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
10: NCG|group without capturing | 0.25
11: QST|zero-or-one repetition | 0.25


0000 | 0005 | '#define NODE_MAJOR_VERSION'
0001 | 0004 | '^#define SQLITE_VERSION\\D*(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?\\D*'
0002 | 0003 | '^#define.*ENGINE_VERSION\t*"DOOM (.*)"'
0003 | 0001 | '#define\\swxMAJOR_VERSION\\s+(\\d+)'



cluster 64 stats:
nPatterns: 4.0
nProjects: 13
shortest: \{include\s+file=.*?\}
Features:

1: LIT|a literal character | 21.75
2: KLE|zero-or-more repetition | 2.75
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.75
5: ANY|any non-newline char | 1.0
6: ADD|one-or-more repetition | 0.75
7: END|end-of-line | 0.75
8: LZY|as few reps as possible | 0.5
9: NCG|group without capturing | 0.5
10: OR|logical or | 0.5
11: DEC|any of: 0123456789 | 0.25
12: NWSP|any non-whitespace | 0.25
13: QST|zero-or-one repetition | 0.25


0000 | 0008 | '\\{include\\s+file=.*?\\}'
0001 | 0003 | '\\s*\\#\\s*include\\s+<cxxtest/'
0002 | 0001 | '(.*)@(.*?)(?: -> (file\\:\\/\\/\\/\\S*))?\\:(\\d*)$'
0003 | 0001 | '\\s*//\\s*#(include|define|if|ifdef|elif|ifndef|endif|else)(?:\\s+(.*)\\s*$|($))'



cluster 65 stats:
nPatterns: 1.0
nProjects: 13
shortest: \n    \""" [^"\\]* (?:\n                     (?: \\. | "(?!"") )\n                     [^"\\]*\n                 )*\n    (?: \""" )?\n\n|   " [^"\\\n]* (?: \\. [^"\\\n]* )* "?\n\n|   \'\'\' [^\'\\]* (?:\n                   (?: \\. | \'(?!\'\') )\n                   [^\'\\]*\n                )*\n    (?: \'\'\' )?\n\n|   \' [^\'\\\n]* (?: \\. [^\'\\\n]* )* \'?\n
Features:

1: LIT|a literal character | 224.0
2: KLE|zero-or-more repetition | 12.0
3: NCCC|negated CCC | 8.0
4: NCG|group without capturing | 8.0
5: ANY|any non-newline char | 4.0
6: QST|zero-or-one repetition | 4.0
7: OR|logical or | 3.0
8: NLKA|sequence doesn't follow  | 2.0


0000 | 0013 | '\n    \\""" [^"\\\\]* (?:\n                     (?: \\\\. | "(?!"") )\n                     [^"\\\\]*\n                 )*\n    (?: \\""" )?\n\n|   " [^"\\\\\\n]* (?: \\\\. [^"\\\\\\n]* )* "?\n\n|   \'\'\' [^\'\\\\]* (?:\n                   (?: \\\\. | \'(?!\'\') )\n                   [^\'\\\\]*\n                )*\n    (?: \'\'\' )?\n\n|   \' [^\'\\\\\\n]* (?: \\\\. [^\'\\\\\\n]* )* \'?\n'



cluster 66 stats:
nPatterns: 5.0
nProjects: 13
shortest: ^(0x[0-9a-fA-F]+)(?:,(ramdisk|ipl|entry|rpm))?$
Features:

1: LIT|a literal character | 25.0
2: ADD|one-or-more repetition | 8.4
3: PNG|named capture group | 7.2
4: CCC|custom character class | 5.8
5: QST|zero-or-one repetition | 4.6
6: NCG|group without capturing | 4.4
7: DEC|any of: 0123456789 | 4.2
8: RNG|chars within a range | 4.2
9: KLE|zero-or-more repetition | 3.6
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.4
11: CG|a capture group | 2.6
12: END|end-of-line | 0.8
13: STR|start-of-line | 0.8
14: OR|logical or | 0.6
15: ANY|any non-newline char | 0.4
16: WRD|[a-zA-Z0-9\_] | 0.4


0000 | 0005 | '^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<subminor>\\d+))((rc(?P<release_candidate>\\d+))|dev)?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'
0001 | 0003 | '%(?:(?P<cn>[0-9]+)\\$)?(?P<width>[0-9]+)?(?:.(?P<pres>[0-9]+))?(?P<size>[hL]|(?:ll?))?(?P<type>[dciouxXefgpCSsn])'
0002 | 0003 | '^(?:\\s*)([0-9]+):(?:\\s*)(?P<rx_bytes>\\d+)(?:\\s*)(?P<rx_packets>\\w+)(?:\\s*)(?P<rx_errors>\\d+)(?:\\s*)(?P<rx_drop>\\d+)(?:\\s*)(?P<rx_fifo>\\d+)(?:\\s*)(?P<rx_frame>\\d+)(?:\\s*)(?P<rx_compressed>\\d+)(?:\\s*)(?P<rx_multicast>\\d+)(?:\\s*)(?P<tx_bytes>\\d+)(?:\\s*)(?P<tx_packets>\\w+)(?:\\s*)(?P<tx_errors>\\d+)(?:\\s*)(?P<tx_drop>\\d+)(?:\\s*)(?P<tx_fifo>\\d+)(?:\\s*)(?P<tx_frame>\\d+)(?:\\s*)(?P<tx_compressed>\\d+)(?:\\s*)(?P<tx_multicast>\\d+)(?:.*)$'
0003 | 0001 | '^(0x[0-9a-fA-F]+)(?:,(ramdisk|ipl|entry|rpm))?$'
0004 | 0001 | '^(?P<sign>[+-])?P(?P<years>[0-9]+([,.][0-9]+)?Y)?(?P<months>[0-9]+([,.][0-9]+)?M)?(?P<weeks>[0-9]+([,.][0-9]+)?W)?(?P<days>[0-9]+([,.][0-9]+)?D)?((?P<separator>T)(?P<hours>[0-9]+([,.][0-9]+)?H)?(?P<minutes>[0-9]+([,.][0-9]+)?M)?(?P<seconds>[0-9]+([,.][0-9]+)?S)?)?$'



cluster 67 stats:
nPatterns: 1.0
nProjects: 12
shortest: \-+
Features:

1: ADD|one-or-more repetition | 1.0
2: LIT|a literal character | 1.0


0000 | 0011 | '\\-+'



cluster 68 stats:
nPatterns: 1.0
nProjects: 12
shortest: .*?\b(as)\b
Features:

1: LIT|a literal character | 2.0
2: WNW|word/non-word boundary | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: LZY|as few reps as possible | 1.0


0000 | 0006 | '.*?\\b(as)\\b'



cluster 69 stats:
nPatterns: 1.0
nProjects: 12
shortest: .*{(?P<size>\d+)}$
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: PNG|named capture group | 1.0


0000 | 0012 | '.*{(?P<size>\\d+)}$'



cluster 70 stats:
nPatterns: 2.0
nProjects: 12
shortest: ^[1-9]\d{2} ?\d{2}$
Features:

1: LIT|a literal character | 6.5
2: DEC|any of: 0123456789 | 2.0
3: STR|start-of-line | 1.5
4: CCC|custom character class | 1.0
5: RNG|chars within a range | 1.0
6: SNG|exactly n repetition | 1.0
7: END|end-of-line | 0.5
8: OR|logical or | 0.5
9: QST|zero-or-one repetition | 0.5


0000 | 0011 | '^[1-9]\\d{2} ?\\d{2}$'
0001 | 0001 | '^1900|^1[2-9]\\d\\d976'



cluster 71 stats:
nPatterns: 1.0
nProjects: 12
shortest: ^name="(.*)"\s+certificate="(.*)"\s+private_key="(.*)"$
Features:

1: LIT|a literal character | 35.0
2: ANY|any non-newline char | 3.0
3: CG|a capture group | 3.0
4: KLE|zero-or-more repetition | 3.0
5: ADD|one-or-more repetition | 2.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0


0000 | 0012 | '^name="(.*)"\\s+certificate="(.*)"\\s+private_key="(.*)"$'



cluster 72 stats:
nPatterns: 7.0
nProjects: 12
shortest: \s+\(\d{4}\)$
Features:

1: LIT|a literal character | 2.7142857142857144
2: CG|a capture group | 1.2857142857142858
3: DEC|any of: 0123456789 | 1.2857142857142858
4: ADD|one-or-more repetition | 1.1428571428571428
5: END|end-of-line | 1.1428571428571428
6: ANY|any non-newline char | 0.7142857142857143
7: STR|start-of-line | 0.5714285714285714
8: DBB|$n\le x \le m$ repetition | 0.42857142857142855
9: KLE|zero-or-more repetition | 0.42857142857142855
10: OR|logical or | 0.42857142857142855
11: NCG|group without capturing | 0.2857142857142857
12: SNG|exactly n repetition | 0.2857142857142857
13: LWB|at least n repetition | 0.14285714285714285
14: WRD|[a-zA-Z0-9\_] | 0.14285714285714285
15: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0005 | '^(?:(?:00|\\+)386|0)(\\d{7,8})$'
0001 | 0002 | '(.*)\\.\\w{3,4}$'
0002 | 0001 | '\\s+\\(\\d{4}\\)$'
0003 | 0001 | '^(.+):(\\d{1,5})$'
0004 | 0001 | '\\d+\\.\\.$|\\.{4}$'
0005 | 0001 | '^\\d+(\\.\\d+){1,}$'
0006 | 0001 | '^.*(\\d+){(\\d+),(\\d+),(.)}.*$'



cluster 73 stats:
nPatterns: 1.0
nProjects: 11
shortest: [\s.]
Features:

1: CCC|custom character class | 1.0
2: LIT|a literal character | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0011 | '[\\s.]'



cluster 74 stats:
nPatterns: 1.0
nProjects: 11
shortest: \{\{.*?\}\}
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0


0000 | 0011 | '\\{\\{.*?\\}\\}'



cluster 75 stats:
nPatterns: 2.0
nProjects: 11
shortest: title:'([^']+?)'
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: CCC|custom character class | 0.5
5: LZY|as few reps as possible | 0.5
6: NCCC|negated CCC | 0.5
7: NCG|group without capturing | 0.5
8: QST|zero-or-one repetition | 0.5


0000 | 0009 | '\\\\begin{(?:long)?table([iv]+)}'
0001 | 0002 | "title:'([^']+?)'"



cluster 76 stats:
nPatterns: 2.0
nProjects: 11
shortest: <!ENTITY +(\w+) +CDATA +"([^"]+)" +-- +((?:.|\n)+?) *-->
Features:

1: LIT|a literal character | 41.0
2: ADD|one-or-more repetition | 4.5
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: LZY|as few reps as possible | 1.0
6: KLE|zero-or-more repetition | 0.5
7: NCCC|negated CCC | 0.5
8: NCG|group without capturing | 0.5
9: OR|logical or | 0.5
10: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0010 | '<!ENTITY +(\\w+) +CDATA +"([^"]+)" +-- +((?:.|\n)+?) *-->'
0001 | 0001 | '(-----BEGIN CERTIFICATE-----\\n.+?\\n-----END CERTIFICATE-----)'



cluster 77 stats:
nPatterns: 3.0
nProjects: 11
shortest: (?P<protocol>[a-z]+)://(?P<token>[0-9:]+)
Features:

1: LIT|a literal character | 9.0
2: CCC|custom character class | 2.6666666666666665
3: RNG|chars within a range | 2.6666666666666665
4: ADD|one-or-more repetition | 2.3333333333333335
5: PNG|named capture group | 2.3333333333333335
6: QST|zero-or-one repetition | 1.3333333333333333
7: ANY|any non-newline char | 0.3333333333333333
8: CG|a capture group | 0.3333333333333333
9: SNG|exactly n repetition | 0.3333333333333333
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0009 | '(?P<name>(.+))\\s+(?P<hexrgb>#[0-9a-fA-F]{6})'
0001 | 0001 | '(?P<protocol>[a-z]+)://(?P<token>[0-9:]+)'
0002 | 0001 | '(?P<integer>[-+]?[0-9]+)(?P<decimal>\\.[0-9]+)?(?P<exponent>e[-+]?[0-9]+)?'



cluster 78 stats:
nPatterns: 2.0
nProjects: 10
shortest: \S
Features:

1: NWSP|any non-whitespace | 1.0
2: LIT|a literal character | 0.5


0000 | 0005 | ',\\S'
0001 | 0005 | u'\\S'



cluster 79 stats:
nPatterns: 1.0
nProjects: 10
shortest: 0x([0-9a-fA-F]+)L?
Features:

1: LIT|a literal character | 9.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0010 | '0x([0-9a-fA-F]+)L?'



cluster 80 stats:
nPatterns: 3.0
nProjects: 10
shortest: _{2,}
Features:

1: LIT|a literal character | 1.0
2: LWB|at least n repetition | 0.6666666666666666
3: STR|start-of-line | 0.6666666666666666
4: DBB|$n\le x \le m$ repetition | 0.3333333333333333
5: END|end-of-line | 0.3333333333333333


0000 | 0008 | '^x{1,2}$'
0001 | 0001 | '_{2,}'
0002 | 0001 | '^/{2,}'



cluster 81 stats:
nPatterns: 1.0
nProjects: 10
shortest: ^[ \t]*(def|class)[ \t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \t]*[:\(]
Features:

1: LIT|a literal character | 28.0
2: CCC|custom character class | 6.0
3: RNG|chars within a range | 5.0
4: KLE|zero-or-more repetition | 3.0
5: CG|a capture group | 2.0
6: ADD|one-or-more repetition | 1.0
7: OR|logical or | 1.0
8: STR|start-of-line | 1.0


0000 | 0010 | '^[ \\t]*(def|class)[ \\t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \\t]*[:\\(]'



cluster 82 stats:
nPatterns: 2.0
nProjects: 10
shortest: url\s*\(\s*[^#\s][^)]+?\)
Features:

1: LIT|a literal character | 7.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: ADD|one-or-more repetition | 1.0
6: LZY|as few reps as possible | 1.0


0000 | 0006 | 'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0001 | 0004 | u'url\\s*\\(\\s*[^#\\s][^)]+?\\)'



cluster 83 stats:
nPatterns: 2.0
nProjects: 10
shortest: (function\b[^(]*)\((.*)\)\{$
Features:

1: LIT|a literal character | 17.5
2: CG|a capture group | 1.5
3: KLE|zero-or-more repetition | 1.5
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 0.5
6: NCCC|negated CCC | 0.5
7: WNW|word/non-word boundary | 0.5


0000 | 0009 | '(function\\b[^(]*)\\((.*)\\)\\{$'
0001 | 0001 | 'In \\[\\{\\\\color\\{incolor\\}(.*)\\}\\]:'



cluster 84 stats:
nPatterns: 2.0
nProjects: 10
shortest: Cookie\:.+\@([!-\xff]+).*?(.+\@[!-\xff]+\.txt)
Features:

1: LIT|a literal character | 38.5
2: CG|a capture group | 3.0
3: KLE|zero-or-more repetition | 3.0
4: ADD|one-or-more repetition | 2.5
5: ANY|any non-newline char | 1.5
6: CCC|custom character class | 1.5
7: NCCC|negated CCC | 1.5
8: RNG|chars within a range | 1.5
9: QST|zero-or-one repetition | 1.0
10: LZY|as few reps as possible | 0.5
11: STR|start-of-line | 0.5


0000 | 0006 | 'Cookie\\:.+\\@([!-\xff]+).*?(.+\\@[!-\xff]+\\.txt)'
0001 | 0004 | '^(WebSocket-Protocol: [\\x20-\\x7e]+\\r\\n)?(Cookie: [^\\r]*\\r\\n)*(Cookie2: [^\\r]*\\r\\n)?(Cookie: [^\\r]*\\r\\n)*\\r\\n'



cluster 85 stats:
nPatterns: 1.0
nProjects: 9
shortest: (\W+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: NWRD|non-word chars | 1.0


0000 | 0009 | '(\\W+)'



cluster 86 stats:
nPatterns: 1.0
nProjects: 9
shortest: :\d+$
Features:

1: ADD|one-or-more repetition | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 1.0
4: LIT|a literal character | 1.0


0000 | 0009 | ':\\d+$'



cluster 87 stats:
nPatterns: 1.0
nProjects: 9
shortest: ^(\s+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0009 | '^(\\s+)'



cluster 88 stats:
nPatterns: 2.0
nProjects: 9
shortest: (:*)
Features:

1: CG|a capture group | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0


0000 | 0008 | '(:*)'
0001 | 0001 | u'(x*)'



cluster 89 stats:
nPatterns: 1.0
nProjects: 9
shortest: ([\x00-\x7F])+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0009 | '([\\x00-\\x7F])+'



cluster 90 stats:
nPatterns: 1.0
nProjects: 9
shortest: \s*([^: ]*)\s*:(.*)
Features:

1: KLE|zero-or-more repetition | 4.0
2: LIT|a literal character | 3.0
3: CG|a capture group | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.0
6: NCCC|negated CCC | 1.0


0000 | 0009 | '\\s*([^: ]*)\\s*:(.*)'



cluster 91 stats:
nPatterns: 1.0
nProjects: 9
shortest: ^def\s*(\w+)\s*=(.*)$
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 3.0
3: CG|a capture group | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ADD|one-or-more repetition | 1.0
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0009 | '^def\\s*(\\w+)\\s*=(.*)$'



cluster 92 stats:
nPatterns: 2.0
nProjects: 9
shortest: (.*) [^ ]
Features:

1: LIT|a literal character | 2.5
2: KLE|zero-or-more repetition | 2.0
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.0
5: NCCC|negated CCC | 1.0
6: STR|start-of-line | 0.5


0000 | 0008 | '^([^:]*): *(.*)'
0001 | 0001 | '(.*) [^ ]'



cluster 93 stats:
nPatterns: 3.0
nProjects: 9
shortest: ^\[.*\]
Features:

1: LIT|a literal character | 2.3333333333333335
2: KLE|zero-or-more repetition | 1.3333333333333333
3: ANY|any non-newline char | 1.0
4: STR|start-of-line | 0.6666666666666666
5: END|end-of-line | 0.3333333333333333
6: NCCC|negated CCC | 0.3333333333333333


0000 | 0006 | '^\\[.*\\]$'
0001 | 0003 | '^\\[.*\\]'
0002 | 0001 | '[^.]*\\.\\..*'



cluster 94 stats:
nPatterns: 2.0
nProjects: 9
shortest: ^DYNAMIC SYMBOL TABLE
Features:

1: LIT|a literal character | 20.5
2: ANY|any non-newline char | 0.5
3: STR|start-of-line | 0.5


0000 | 0008 | '^DYNAMIC SYMBOL TABLE'
0001 | 0001 | 'REMARK   2 RESOLUTION.'



cluster 95 stats:
nPatterns: 4.0
nProjects: 9
shortest: [A-Z_]+
Features:

1: LIT|a literal character | 4.0
2: RNG|chars within a range | 1.75
3: CCC|custom character class | 1.0
4: ADD|one-or-more repetition | 0.5
5: STR|start-of-line | 0.25


0000 | 0007 | '[a-zA-Z]'
0001 | 0002 | '[A-Za-z]'
0002 | 0001 | '[A-Z_]+'
0003 | 0001 | '^[a-zA-Z]+='



cluster 96 stats:
nPatterns: 4.0
nProjects: 9
shortest: [0-9a-fA-F]{6}
Features:

1: LIT|a literal character | 9.0
2: RNG|chars within a range | 3.75
3: CCC|custom character class | 1.25
4: SNG|exactly n repetition | 0.75
5: CG|a capture group | 0.5
6: END|end-of-line | 0.5
7: STR|start-of-line | 0.5
8: ADD|one-or-more repetition | 0.25
9: NCCC|negated CCC | 0.25
10: QST|zero-or-one repetition | 0.25


0000 | 0003 | '^#[0-9A-Fa-f]{6}$'
0001 | 0003 | '&#([xX]?[0-9a-fA-F]+)[^0-9a-fA-F]'
0002 | 0002 | '^\\#([0-9a-fA-F]{6})$'
0003 | 0001 | '[0-9a-fA-F]{6}'



cluster 97 stats:
nPatterns: 1.0
nProjects: 8
shortest: (\$\((.*?)\))
Features:

1: LIT|a literal character | 3.0
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0008 | '(\\$\\((.*?)\\))'



cluster 98 stats:
nPatterns: 2.0
nProjects: 8
shortest: (?i)b+
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.0
3: ADD|one-or-more repetition | 0.5
4: OPT|options wrapper | 0.5
5: QST|zero-or-one repetition | 0.5


0000 | 0008 | '(?i)b+'
0001 | 0007 | '(a)(b)?b'



cluster 99 stats:
nPatterns: 2.0
nProjects: 8
shortest: [<>\'"]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0007 | '[<>\'"]'
0001 | 0001 | "[\\s'\\\\]"



cluster 100 stats:
nPatterns: 2.0
nProjects: 8
shortest: (?P<a>x)
Features:

1: LIT|a literal character | 1.0
2: PNG|named capture group | 1.0


0000 | 0008 | '(?P<a>x)'
0001 | 0008 | '(?P<unk>x)'



cluster 101 stats:
nPatterns: 2.0
nProjects: 8
shortest: ^([^@]*@)?([^:]*)(:.*)?
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 2.5
3: CG|a capture group | 2.0
4: NCCC|negated CCC | 2.0
5: ANY|any non-newline char | 1.0
6: QST|zero-or-one repetition | 1.0
7: LZY|as few reps as possible | 0.5
8: STR|start-of-line | 0.5


0000 | 0007 | '^([^@]*@)?([^:]*)(:.*)?'
0001 | 0001 | '[^\\(\\)]*\\((.*?)\\)[^\\(\\)]'



cluster 102 stats:
nPatterns: 3.0
nProjects: 8
shortest: (final|stable)$
Features:

1: LIT|a literal character | 13.666666666666666
2: CG|a capture group | 1.0
3: END|end-of-line | 0.6666666666666666
4: OR|logical or | 0.6666666666666666
5: QST|zero-or-one repetition | 0.6666666666666666


0000 | 0005 | '(final|stable)$'
0001 | 0002 | '/(developers/)?apps/'
0002 | 0001 | '_(dir|file|path)s?$'



cluster 103 stats:
nPatterns: 1.0
nProjects: 8
shortest: ^([a-f0-9]+)\s(.{7})\s(\S+)\s+([a-f0-9]+)\s+(?:\.hidden\s+)?(.*)$
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 6.0
3: CG|a capture group | 5.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
5: RNG|chars within a range | 4.0
6: ANY|any non-newline char | 2.0
7: CCC|custom character class | 2.0
8: END|end-of-line | 1.0
9: KLE|zero-or-more repetition | 1.0
10: NCG|group without capturing | 1.0
11: NWSP|any non-whitespace | 1.0
12: QST|zero-or-one repetition | 1.0
13: SNG|exactly n repetition | 1.0
14: STR|start-of-line | 1.0


0000 | 0008 | '^([a-f0-9]+)\\s(.{7})\\s(\\S+)\\s+([a-f0-9]+)\\s+(?:\\.hidden\\s+)?(.*)$'



cluster 104 stats:
nPatterns: 3.0
nProjects: 8
shortest: \d+ (\d+):
Features:

1: DEC|any of: 0123456789 | 5.333333333333333
2: CG|a capture group | 3.0
3: LIT|a literal character | 2.6666666666666665
4: ADD|one-or-more repetition | 1.3333333333333333
5: ENDZ|absolute end of string | 0.3333333333333333


0000 | 0004 | '(\\d+)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)'
0001 | 0003 | '\\d+ (\\d+):'
0002 | 0001 | '(\\d+):(\\d\\d)\\Z'



cluster 105 stats:
nPatterns: 2.0
nProjects: 8
shortest: ^/etc/(g?shadow-?|securetty)$
Features:

1: LIT|a literal character | 41.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: OR|logical or | 1.0
5: QST|zero-or-one repetition | 1.0
6: STR|start-of-line | 1.0
7: DEC|any of: 0123456789 | 0.5
8: KLE|zero-or-more repetition | 0.5


0000 | 0007 | '^(acc|borland|como|cw|dmc|darwin|gcc|hp_cxx|intel|kylix|vc|mgw|qcc|sun|vacpp)\\d*$'
0001 | 0001 | '^/etc/(g?shadow-?|securetty)$'



cluster 106 stats:
nPatterns: 3.0
nProjects: 8
shortest: ("[^"]*?")|(\'[^\']*?\')
Features:

1: LIT|a literal character | 14.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 0.6666666666666666
5: LZY|as few reps as possible | 0.6666666666666666
6: NCCC|negated CCC | 0.6666666666666666
7: OR|logical or | 0.6666666666666666
8: QST|zero-or-one repetition | 0.6666666666666666


0000 | 0006 | '[\\\'|"|#|\\\\|\\[|\\]|\\{|\\}|\\(|\\)]'
0001 | 0001 | '("[^"]*?")|(\'[^\']*?\')'
0002 | 0001 | '[uU]?[rR]?(\\"\\"\\"|\\\'\\\'\\\'|\\"|\\\')'



cluster 107 stats:
nPatterns: 5.0
nProjects: 8
shortest: <p>Raw output: <a href="(.*)">(.*)</a>
Features:

1: LIT|a literal character | 38.2
2: ANY|any non-newline char | 1.8
3: KLE|zero-or-more repetition | 1.8
4: CG|a capture group | 1.2
5: LZY|as few reps as possible | 1.0
6: NCG|group without capturing | 0.2
7: QST|zero-or-one repetition | 0.2


0000 | 0002 | '<a href="function\\..*?\\.html">(.*?)</a>'
0001 | 0002 | '<img class=thumbnail-img (?:.* )?src=(http.*)>'
0002 | 0002 | "<div class='lyricbox'><div class='rtMatcher'>.*?</div>(.*?)<!--"
0003 | 0001 | '<p>Raw output: <a href="(.*)">(.*)</a>'
0004 | 0001 | u'<a href="(.*?)" class="historylink">History</a>'



cluster 108 stats:
nPatterns: 4.0
nProjects: 8
shortest: Change \d+ by (?P<who>\S+)@\S+ on (?P<when>.+)$
Features:

1: LIT|a literal character | 66.5
2: ADD|one-or-more repetition | 2.5
3: KLE|zero-or-more repetition | 1.75
4: PNG|named capture group | 1.75
5: ANY|any non-newline char | 1.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.25
7: CCC|custom character class | 1.0
8: LZY|as few reps as possible | 0.75
9: NWSP|any non-whitespace | 0.75
10: DEC|any of: 0123456789 | 0.5
11: END|end-of-line | 0.5
12: CG|a capture group | 0.25
13: OR|logical or | 0.25
14: STR|start-of-line | 0.25


0000 | 0003 | 'Change \\d+ by (?P<who>\\S+)@\\S+ on (?P<when>.+)$'
0001 | 0002 | '\\^phoneCallContactId\\^=\\^urn:ace:(?P<identifier>.*)'
0002 | 0002 | '<\\?xml\n            (   # strict ordering is reqd but we\'ll be liberal here\n                \\s+version=[\'"](?P<ver>.*?)[\'"]\n            |   \\s+encoding=[\'"](?P<enc>.*?)[\'"]\n            )+\n            .*? # other possible junk\n            \\s*\\?>\n        '
0003 | 0001 | '^.*\\s+mail exchanger = (?P<priority>\\d+) (?P<host>\\S+)\\s*$'



cluster 109 stats:
nPatterns: 5.0
nProjects: 8
shortest: (WARNING|ERROR|INFO) \(l.(?P<line>[0-9]+), c.(?P<column>[0-9]+)\): (?P<rest>.*)
Features:

1: LIT|a literal character | 1108.8
2: CCC|custom character class | 15.6
3: RNG|chars within a range | 12.2
4: QST|zero-or-one repetition | 10.2
5: NCG|group without capturing | 6.8
6: ANY|any non-newline char | 6.6
7: KLE|zero-or-more repetition | 6.2
8: CG|a capture group | 5.2
9: OR|logical or | 5.0
10: ADD|one-or-more repetition | 4.8
11: DEC|any of: 0123456789 | 4.6
12: DBB|$n\le x \le m$ repetition | 2.2
13: PNG|named capture group | 2.2
14: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.8
15: SNG|exactly n repetition | 1.2
16: END|end-of-line | 0.6
17: LKB|matching sequence precedes | 0.6
18: NLKB|sequence doesn't precede | 0.6
19: STR|start-of-line | 0.6
20: ENDZ|absolute end of string | 0.2
21: LKA|matching sequence follows | 0.2
22: LWB|at least n repetition | 0.2
23: NCCC|negated CCC | 0.2
24: NLKA|sequence doesn't follow  | 0.2
25: WRD|[a-zA-Z0-9\_] | 0.2


0000 | 0003 | '        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)              # ...a number (with at least one digit)\n        (?P<int>\\d*)             # having a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'
0001 | 0002 | '(WARNING|ERROR|INFO) \\(l.(?P<line>[0-9]+), c.(?P<column>[0-9]+)\\): (?P<rest>.*)'
0002 | 0002 | "\n        ^\n        \\s*\n        (?P<operator>(~=|==|!=|<=|>=|<|>|===))\n        (?P<version>\n            (?:\n                # The identity operators allow for an escape hatch that will\n                # do an exact string match of the version you wish to install.\n                # This will not be parsed by PEP 440 and we cannot determine\n                # any semantic meaning from it. This operator is discouraged\n                # but included entirely as an escape hatch.\n                (?<====)  # Only match for the identity operator\n                \\s*\n                [^\\s]*    # We just match everything, except for whitespace\n                          # since we are only testing for strict identity.\n            )\n            |\n            (?:\n                # The (non)equality operators allow for wild card and local\n                # versions to be specified so we have to define these two\n                # operators separately to enable that.\n                (?<===|!=)            # Only match for equals and not equals\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n\n                # You cannot use a wild card and a dev or local version\n                # together so group them with a | and make them optional.\n                (?:\n                    (?:[-_\\.]?dev[-_\\.]?[0-9]*)?         # dev release\n                    (?:\\+[a-z0-9]+(?:[-_\\.][a-z0-9]+)*)? # local\n                    |\n                    \\.\\*  # Wild card syntax of .*\n                )?\n            )\n            |\n            (?:\n                # The compatible operator requires at least two digits in the\n                # release segment.\n                (?<=~=)               # Only match for the compatible operator\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)+   # release  (We have a + instead of a *)\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n            |\n            (?:\n                # All other operators only allow a sub set of what the\n                # (non)equality operators do. Specifically they do not allow\n                # local versions to be specified nor do they allow the prefix\n                # matching wild cards.\n                (?<!==|!=|~=)         # We have special cases for these\n                                      # operators so we want to make sure they\n                                      # don't match here.\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n        )\n        \\s*\n        $\n        "
0003 | 0001 | "\n        ^(?!\\.)                            # name may not begin with a dot\n        (\n          [-a-z0-9!\\#$%&'*+/=?^_`{|}~]     # all legal characters except dot\n          |\n          (?<!\\.)\\.                        # single dots only\n        )+\n        (?<!\\.)                            # name may not end with a dot\n        @\n        (\n          localhost\n          |\n          (\n            [a-z0-9]                         # [sub]domain begins with alphanumeric\n            (\n              [-\\w]*                         # alphanumeric, underscore, dot, hyphen\n              [a-z0-9]                       # ending alphanumeric\n            )?\n          \\.                               # ending dot\n          )+\n          [a-z]{2,}                        # TLD alpha-only\n       )$\n    "
0004 | 0001 | "\n        ^\n        (?:\n          # Dotted variants:\n          (?:\n            # Decimal 1-255 (no leading 0's)\n            [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n          |\n            0x0*[0-9a-f]{1,2}  # Hexadecimal 0x0 - 0xFF (possible leading 0's)\n          |\n            0+[1-3]?[0-7]{0,2} # Octal 0 - 0377 (possible leading 0's)\n          )\n          (?:                  # Repeat 0-3 times, separated by a dot\n            \\.\n            (?:\n              [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n            |\n              0x0*[0-9a-f]{1,2}\n            |\n              0+[1-3]?[0-7]{0,2}\n            )\n          ){0,3}\n        |\n          0x0*[0-9a-f]{1,8}    # Hexadecimal notation, 0x0 - 0xffffffff\n        |\n          0+[0-3]?[0-7]{0,10}  # Octal notation, 0 - 037777777777\n        |\n          # Decimal notation, 1-4294967295:\n          429496729[0-5]|42949672[0-8]\\d|4294967[01]\\d\\d|429496[0-6]\\d{3}|\n          42949[0-5]\\d{4}|4294[0-8]\\d{5}|429[0-3]\\d{6}|42[0-8]\\d{7}|\n          4[01]\\d{8}|[1-3]\\d{0,9}|[4-9]\\d{0,8}\n        )\n        $\n    "



cluster 110 stats:
nPatterns: 1.0
nProjects: 7
shortest: \|
Features:

1: LIT|a literal character | 1.0


0000 | 0007 | '\\|'



cluster 111 stats:
nPatterns: 1.0
nProjects: 7
shortest: ([\t ]+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0


0000 | 0007 | '([\\t ]+)'



cluster 112 stats:
nPatterns: 2.0
nProjects: 7
shortest: \.exe$
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 0.5
3: END|end-of-line | 0.5
4: KLE|zero-or-more repetition | 0.5


0000 | 0004 | '\\.exe$'
0001 | 0003 | '.*\\.exe'



cluster 113 stats:
nPatterns: 2.0
nProjects: 7
shortest: \s*>$
Features:

1: LIT|a literal character | 2.0
2: KLE|zero-or-more repetition | 1.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
4: END|end-of-line | 0.5


0000 | 0006 | '\\s*>$'
0001 | 0001 | '\\s*<p>\\s*'



cluster 114 stats:
nPatterns: 1.0
nProjects: 7
shortest: ^columns .* are not unique$
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0007 | '^columns .* are not unique$'



cluster 115 stats:
nPatterns: 1.0
nProjects: 7
shortest: (?:(?<!\r)\n)|(?:\r(?!\n))
Features:

1: LIT|a literal character | 4.0
2: NCG|group without capturing | 2.0
3: NLKA|sequence doesn't follow  | 1.0
4: NLKB|sequence doesn't precede | 1.0
5: OR|logical or | 1.0


0000 | 0007 | '(?:(?<!\\r)\\n)|(?:\\r(?!\\n))'



cluster 116 stats:
nPatterns: 1.0
nProjects: 7
shortest: ^[ ]{4,7}((\d+\.)|[*+-])[ ].*
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 3.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: DBB|$n\le x \le m$ repetition | 1.0
7: DEC|any of: 0123456789 | 1.0
8: KLE|zero-or-more repetition | 1.0
9: OR|logical or | 1.0
10: STR|start-of-line | 1.0


0000 | 0007 | '^[ ]{4,7}((\\d+\\.)|[*+-])[ ].*'



cluster 117 stats:
nPatterns: 3.0
nProjects: 7
shortest: [./\\]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 0.6666666666666666
3: KLE|zero-or-more repetition | 0.6666666666666666
4: ANY|any non-newline char | 0.3333333333333333
5: NWRD|non-word chars | 0.3333333333333333


0000 | 0003 | '[./\\\\]'
0001 | 0003 | '\\[.*\\]'
0002 | 0001 | u'[\\W_]*'



cluster 118 stats:
nPatterns: 2.0
nProjects: 7
shortest: ^(<[^>]*/>)\s*
Features:

1: LIT|a literal character | 9.0
2: KLE|zero-or-more repetition | 1.5
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: STR|start-of-line | 0.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0006 | '<root>([^<]*)</root>'
0001 | 0001 | '^(<[^>]*/>)\\s*'



cluster 119 stats:
nPatterns: 2.0
nProjects: 7
shortest: -isysroot\s+\S+(\s|$)
Features:

1: LIT|a literal character | 18.0
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: END|end-of-line | 1.0
5: OR|logical or | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: DEC|any of: 0123456789 | 0.5
8: NWSP|any non-whitespace | 0.5


0000 | 0006 | '-isysroot\\s+\\S+(\\s|$)'
0001 | 0001 | '/(en-US|es-ES)/firefox/addon/(\\d+)/$'



cluster 120 stats:
nPatterns: 3.0
nProjects: 7
shortest: tt(\d+)/$
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 1.3333333333333333
3: DEC|any of: 0123456789 | 1.3333333333333333
4: LIT|a literal character | 1.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.3333333333333333
6: END|end-of-line | 1.0
7: NWSP|any non-whitespace | 0.6666666666666666


0000 | 0005 | '\\s+(\\d+),$'
0001 | 0001 | u'tt(\\d+)/$'
0002 | 0001 | '(\\S+)\\s+(\\d)\\s+\\d+\\s+\\S+$'



cluster 121 stats:
nPatterns: 2.0
nProjects: 7
shortest: browser.search.order.([1-9])
Features:

1: LIT|a literal character | 22.5
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 1.5
4: CCC|custom character class | 0.5
5: KLE|zero-or-more repetition | 0.5
6: RNG|chars within a range | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0004 | '(tag:blogger.com,1999:blog-)(\\w*)'
0001 | 0003 | 'browser.search.order.([1-9])'



cluster 122 stats:
nPatterns: 3.0
nProjects: 7
shortest: (\S+)\s+(\S+)
Features:

1: ADD|one-or-more repetition | 4.666666666666667
2: NWSP|any non-whitespace | 3.0
3: CG|a capture group | 2.6666666666666665
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.3333333333333335
5: LIT|a literal character | 1.0
6: KLE|zero-or-more repetition | 0.6666666666666666


0000 | 0005 | '(\\S+)\\s+(\\S+)'
0001 | 0001 | '##\\s*(\\S+)\\s+(\\S*)'
0002 | 0001 | '\\S+\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)%'



cluster 123 stats:
nPatterns: 4.0
nProjects: 7
shortest: (?i)<br[^>]*>
Features:

1: LIT|a literal character | 5.5
2: NCCC|negated CCC | 1.5
3: KLE|zero-or-more repetition | 1.25
4: CG|a capture group | 1.0
5: PNG|named capture group | 0.75
6: QST|zero-or-one repetition | 0.75
7: ADD|one-or-more repetition | 0.5
8: CCC|custom character class | 0.5
9: END|end-of-line | 0.5
10: STR|start-of-line | 0.5
11: ANY|any non-newline char | 0.25
12: OPT|options wrapper | 0.25


0000 | 0003 | '^([^<]+)[<]?(.*)[>]?$'
0001 | 0002 | '<param([^<>]+)>'
0002 | 0001 | '(?i)<br[^>]*>'
0003 | 0001 | '^(?P<_1>[^|]*)\\|(?P<_2>[^|]*)(\\|(?P<_3>[^|]*))?$'



cluster 124 stats:
nPatterns: 1.0
nProjects: 7
shortest: (?P<replace>(?P<type><(?:(?:!?@?)|\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\((?P<is_array>\s*\[?)(?P<content>.*?)(\]?)\))
Features:

1: LIT|a literal character | 17.0
2: QST|zero-or-one repetition | 6.0
3: PNG|named capture group | 5.0
4: RNG|chars within a range | 3.0
5: KLE|zero-or-more repetition | 2.0
6: NCG|group without capturing | 2.0
7: ADD|one-or-more repetition | 1.0
8: ANY|any non-newline char | 1.0
9: CCC|custom character class | 1.0
10: CG|a capture group | 1.0
11: LZY|as few reps as possible | 1.0
12: OR|logical or | 1.0
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0007 | '(?P<replace>(?P<type><(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'



cluster 125 stats:
nPatterns: 2.0
nProjects: 7
shortest: \([^()]*\b(?:[\w:]|<[^()]*>)+(\s?&|&\s?)\w+
Features:

1: LIT|a literal character | 30.5
2: NCCC|negated CCC | 3.0
3: ADD|one-or-more repetition | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: OR|logical or | 1.5
6: CG|a capture group | 1.0
7: KLE|zero-or-more repetition | 1.0
8: QST|zero-or-one repetition | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0
10: CCC|custom character class | 0.5
11: END|end-of-line | 0.5
12: NCG|group without capturing | 0.5
13: STR|start-of-line | 0.5
14: WNW|word/non-word boundary | 0.5


0000 | 0006 | '\\([^()]*\\b(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'
0001 | 0001 | '^[^\\(\\[]+[^\\s](\\+|\\-|\\*|/|%|\\^|&|\\||=|<|>|>>|<<|\\+=|\\-=|\\*=|/=|%=|\\^=|&=|\\|=|==|<=|>=|>>=|<<=|!=|<>)[^\\s][^\\)\\]]+$'



cluster 126 stats:
nPatterns: 6.0
nProjects: 7
shortest: [0-9a-f]{32}
Features:

1: LIT|a literal character | 9.166666666666666
2: RNG|chars within a range | 3.6666666666666665
3: CCC|custom character class | 1.3333333333333333
4: CG|a capture group | 1.0
5: END|end-of-line | 0.8333333333333334
6: SNG|exactly n repetition | 0.8333333333333334
7: DBB|$n\le x \le m$ repetition | 0.6666666666666666
8: STR|start-of-line | 0.5
9: OR|logical or | 0.3333333333333333
10: ADD|one-or-more repetition | 0.16666666666666666
11: LWB|at least n repetition | 0.16666666666666666


0000 | 0002 | '\\\\x([0-9a-fA-F]{2}|[0-9a-fA-F])'
0001 | 0001 | '[0-9a-f]{32}'
0002 | 0001 | ' at 0x[0-9a-f]{6,}(>+)$'
0003 | 0001 | '^([A-Fa-f0-9]{2,2}){3,4}$'
0004 | 0001 | '^([0-9a-fA-F]{2}(:|$)){6}$'
0005 | 0001 | '^([0-9a-fA-F]{1,2}:){5}[0-9a-fA-F]{1,2}$'



cluster 127 stats:
nPatterns: 5.0
nProjects: 7
shortest: Job <(\d+)> is not found
Features:

1: LIT|a literal character | 15.2
2: ADD|one-or-more repetition | 2.0
3: PNG|named capture group | 1.0
4: DEC|any of: 0123456789 | 0.8
5: CG|a capture group | 0.6
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6
7: ANY|any non-newline char | 0.4
8: NCG|group without capturing | 0.4
9: LZY|as few reps as possible | 0.2
10: OR|logical or | 0.2
11: QST|zero-or-one repetition | 0.2
12: STR|start-of-line | 0.2


0000 | 0003 | '^\\s+(?P<conn>\\d+)\\s+(?P<acc>\\d+)\\s+(?P<req>\\d+)'
0001 | 0001 | 'Job <(\\d+)> is not found'
0002 | 0001 | '((?:<br />)+)(</(?:font|span)>)'
0003 | 0001 | 'developmentRegion = (?P<region>.+);'
0004 | 0001 | 'database version (?P<version>.+?)\\.?\n'



cluster 128 stats:
nPatterns: 1.0
nProjects: 6
shortest: [^.]*
Features:

1: KLE|zero-or-more repetition | 1.0
2: LIT|a literal character | 1.0
3: NCCC|negated CCC | 1.0


0000 | 0006 | '[^.]*'



cluster 129 stats:
nPatterns: 1.0
nProjects: 6
shortest: ^\W+
Features:

1: ADD|one-or-more repetition | 1.0
2: NWRD|non-word chars | 1.0
3: STR|start-of-line | 1.0


0000 | 0006 | '^\\W+'



cluster 130 stats:
nPatterns: 1.0
nProjects: 6
shortest: [0-9]+,[0-9]+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: RNG|chars within a range | 2.0


0000 | 0006 | '[0-9]+,[0-9]+'



cluster 131 stats:
nPatterns: 2.0
nProjects: 6
shortest: (.{60})
Features:

1: ANY|any non-newline char | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: ADD|one-or-more repetition | 0.5
5: SNG|exactly n repetition | 0.5


0000 | 0005 | '(.{60})'
0001 | 0001 | '(\\{.+\\})'



cluster 132 stats:
nPatterns: 3.0
nProjects: 6
shortest: [ ]+
Features:

1: LIT|a literal character | 1.6666666666666667
2: CCC|custom character class | 1.0
3: ADD|one-or-more repetition | 0.6666666666666666


0000 | 0004 | '[ ]+'
0001 | 0001 | '[x+]'
0002 | 0001 | '[*,]+'



cluster 133 stats:
nPatterns: 2.0
nProjects: 6
shortest: \$$
Features:

1: WRD|[a-zA-Z0-9\_] | 3.0
2: END|end-of-line | 1.0
3: LIT|a literal character | 1.0


0000 | 0005 | '#\\w\\w\\w\\w\\w\\w$'
0001 | 0001 | '\\$$'



cluster 134 stats:
nPatterns: 1.0
nProjects: 6
shortest: ^\s*\|\s.*\s\|\s*$|^\s*\+[=+-]+\+\s*$
Features:

1: LIT|a literal character | 7.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 6.0
3: KLE|zero-or-more repetition | 5.0
4: END|end-of-line | 2.0
5: STR|start-of-line | 2.0
6: ADD|one-or-more repetition | 1.0
7: ANY|any non-newline char | 1.0
8: CCC|custom character class | 1.0
9: OR|logical or | 1.0


0000 | 0006 | '^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$'



cluster 135 stats:
nPatterns: 3.0
nProjects: 6
shortest: [\s.,;_-]+
Features:

1: LIT|a literal character | 4.666666666666667
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
3: ADD|one-or-more repetition | 0.6666666666666666
4: CCC|custom character class | 0.6666666666666666
5: NCCC|negated CCC | 0.3333333333333333
6: OR|logical or | 0.3333333333333333
7: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0004 | '[-T:/.]|\\s+'
0001 | 0001 | '[\\s.,;_-]+'
0002 | 0001 | '[^\\w\\s@+.-]'



cluster 136 stats:
nPatterns: 2.0
nProjects: 6
shortest: [ \t]*\n([^\r\n])
Features:

1: LIT|a literal character | 5.5
2: CCC|custom character class | 1.5
3: KLE|zero-or-more repetition | 1.5
4: CG|a capture group | 1.0
5: NCCC|negated CCC | 1.0
6: END|end-of-line | 0.5
7: STR|start-of-line | 0.5
8: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0005 | '^%[%!\\w]([^:]*)[ \\t]*$'
0001 | 0001 | '[ \\t]*\\n([^\\r\\n])'



cluster 137 stats:
nPatterns: 1.0
nProjects: 6
shortest: ([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)
Features:

1: LIT|a literal character | 13.0
2: CCC|custom character class | 4.0
3: RNG|chars within a range | 4.0
4: CG|a capture group | 3.0
5: SNG|exactly n repetition | 3.0
6: DBB|$n\le x \le m$ repetition | 2.0
7: ANY|any non-newline char | 1.0
8: KLE|zero-or-more repetition | 1.0


0000 | 0006 | '([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)'



cluster 138 stats:
nPatterns: 4.0
nProjects: 6
shortest: ([\s\\])
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 0.75
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0003 | '([\\s\\\\])'
0001 | 0001 | '([\\x7F])'
0002 | 0001 | '[()\\134]'
0003 | 0001 | '([$`\\\\])'



cluster 139 stats:
nPatterns: 2.0
nProjects: 6
shortest: =[^,)]+\)$
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.5
4: NWSP|any non-whitespace | 1.5
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 0.5
7: STR|start-of-line | 0.5


0000 | 0005 | '=[^,)]+\\)$'
0001 | 0001 | '^\\(\\[(\\S+)\\],\\[(\\S+)\\],\\[(\\S+)\\]\\)$'



cluster 140 stats:
nPatterns: 3.0
nProjects: 6
shortest: bytes=(\d+)-(\d+)
Features:

1: LIT|a literal character | 7.333333333333333
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.6666666666666665
3: KLE|zero-or-more repetition | 2.3333333333333335
4: ADD|one-or-more repetition | 2.0
5: DEC|any of: 0123456789 | 1.6666666666666667
6: CG|a capture group | 1.3333333333333333
7: PNG|named capture group | 0.3333333333333333
8: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0004 | 'bytes=(\\d+)-(\\d+)'
0001 | 0001 | 'TX\\s+bytes:?\\s*(?P<c>\\d+)'
0002 | 0001 | '\\s*bytes\\s*=\\s*(\\d+)\\s*-\\s*(\\d+)\\s*'



cluster 141 stats:
nPatterns: 2.0
nProjects: 6
shortest: (?x) \( [^()]* \b few \b
Features:

1: LIT|a literal character | 12.5
2: ADD|one-or-more repetition | 2.5
3: CG|a capture group | 2.5
4: KLE|zero-or-more repetition | 2.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: CCC|custom character class | 1.5
7: NCCC|negated CCC | 1.5
8: WRD|[a-zA-Z0-9\_] | 1.5
9: QST|zero-or-one repetition | 1.0
10: WNW|word/non-word boundary | 1.0
11: OPT|options wrapper | 0.5


0000 | 0005 | '([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'
0001 | 0001 | u'(?x) \\( [^()]* \\b few \\b'



cluster 142 stats:
nPatterns: 3.0
nProjects: 6
shortest: ^https?://bitbucket.org/
Features:

1: LIT|a literal character | 30.0
2: ANY|any non-newline char | 1.3333333333333333
3: ADD|one-or-more repetition | 0.6666666666666666
4: DEC|any of: 0123456789 | 0.3333333333333333
5: NCG|group without capturing | 0.3333333333333333
6: OR|logical or | 0.3333333333333333
7: QST|zero-or-one repetition | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333
9: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0004 | '^https?://bitbucket.org/'
0001 | 0001 | 'http://en.wikipedia.org/wiki/'
0002 | 0001 | '//.\\.thumbs\\.4chan\\.org/\\w+/thumb/\\d+s\\.(?:jpg|gif|png|jpeg)'



cluster 143 stats:
nPatterns: 5.0
nProjects: 6
shortest: \$[0-9]+\,?\.?[0-9]*
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 3.0
3: RNG|chars within a range | 3.0
4: CCC|custom character class | 2.8
5: CG|a capture group | 2.6
6: KLE|zero-or-more repetition | 1.4
7: ANY|any non-newline char | 1.0
8: END|end-of-line | 0.8
9: STR|start-of-line | 0.8
10: QST|zero-or-one repetition | 0.6
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6
12: LZY|as few reps as possible | 0.4
13: OR|logical or | 0.4
14: NCCC|negated CCC | 0.2


0000 | 0002 | '^v([0-9]+|[0-9]+\\.[0-9]+)(/.*|$)'
0001 | 0001 | '\\$[0-9]+\\,?\\.?[0-9]*'
0002 | 0001 | '^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'
0003 | 0001 | '^(.+?)[ \\._\\-]\\[?([0-9]+)x([0-9]+)[^\\/]*$'
0004 | 0001 | '^(.*)(\\([0-9A-Fx]+,[0-9A-F]+\\))\\s+([1-3C]+)\\s+(.*)\\s*$'



cluster 144 stats:
nPatterns: 5.0
nProjects: 6
shortest: LL_VERSION_BUILD\s=\s([0-9]+)
Features:

1: LIT|a literal character | 24.2
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.4
4: CCC|custom character class | 1.4
5: RNG|chars within a range | 1.4
6: CG|a capture group | 1.0
7: KLE|zero-or-more repetition | 1.0
8: ANY|any non-newline char | 0.2
9: STR|start-of-line | 0.2


0000 | 0003 | '^\\s*#\\s*define\\s+OPENSSL_VERSION_NUMBER\\s+(0x[0-9a-fA-F]+)'
0001 | 0001 | 'LL_VERSION_BUILD\\s=\\s([0-9]+)'
0002 | 0001 | 'IMP_VERSION_MAJOR\\s=\\s([0-9]+)'
0003 | 0001 | 'IMP_VERSION_PATCH\\s=\\s([0-9]+)'
0004 | 0001 | 'PACKAGE_VERSION *= *[\'"]([0-9.]+)["\'].*'



cluster 145 stats:
nPatterns: 4.0
nProjects: 6
shortest: coding[:=]\s*(?P<encoding>[-\w.]+)
Features:

1: LIT|a literal character | 13.0
2: KLE|zero-or-more repetition | 3.0
3: CCC|custom character class | 2.5
4: CG|a capture group | 2.5
5: ANY|any non-newline char | 1.5
6: PNG|named capture group | 1.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
8: RNG|chars within a range | 1.0
9: ADD|one-or-more repetition | 0.75
10: QST|zero-or-one repetition | 0.75
11: SNG|exactly n repetition | 0.75
12: WRD|[a-zA-Z0-9\_] | 0.75
13: OR|logical or | 0.25


0000 | 0002 | 'coding[:=]\\s*(?P<encoding>[-\\w.]+)'
0001 | 0002 | '(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*%(?P<cmd>.*)'
0002 | 0001 | '(.*)derpiboo((.ru)|(ru.org))(/images)?/(?P<id>[0-9]*)/?'
0003 | 0001 | '.*(?P<code1>[sS][0-9]{2}[eE][0-9]{2})(-(?P<code2>[0-9]{2}))?.*'



cluster 146 stats:
nPatterns: 1.0
nProjects: 6
shortest: \n  =\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \?=                   # literal ?=\n  (?=[ \t]|$)           # whitespace or the end of the string\n  
Features:

1: LIT|a literal character | 354.0
2: QST|zero-or-one repetition | 6.0
3: PNG|named capture group | 3.0
4: CCC|custom character class | 2.0
5: KLE|zero-or-more repetition | 2.0
6: LZY|as few reps as possible | 2.0
7: ANY|any non-newline char | 1.0
8: END|end-of-line | 1.0
9: LKA|matching sequence follows | 1.0
10: NCCC|negated CCC | 1.0
11: OR|logical or | 1.0


0000 | 0006 | '\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  (?=[ \\t]|$)           # whitespace or the end of the string\n  '



cluster 147 stats:
nPatterns: 1.0
nProjects: 5
shortest: (.+)\!$
Features:

1: ADD|one-or-more repetition | 1.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: LIT|a literal character | 1.0


0000 | 0005 | '(.+)\\!$'



cluster 148 stats:
nPatterns: 2.0
nProjects: 5
shortest:  |\(
Features:

1: LIT|a literal character | 1.5
2: OR|logical or | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0004 | ' |\\('
0001 | 0001 | '\\s|\\('



cluster 149 stats:
nPatterns: 1.0
nProjects: 5
shortest: \b0+(\d+)(?!\d)
Features:

1: ADD|one-or-more repetition | 2.0
2: DEC|any of: 0123456789 | 2.0
3: CG|a capture group | 1.0
4: LIT|a literal character | 1.0
5: NLKA|sequence doesn't follow  | 1.0
6: WNW|word/non-word boundary | 1.0


0000 | 0005 | '\\b0+(\\d+)(?!\\d)'



cluster 150 stats:
nPatterns: 2.0
nProjects: 5
shortest: ^\..*
Features:

1: ANY|any non-newline char | 2.0
2: KLE|zero-or-more repetition | 2.0
3: LIT|a literal character | 1.5
4: STR|start-of-line | 0.5


0000 | 0004 | '.*@.*\\..*'
0001 | 0001 | '^\\..*'



cluster 151 stats:
nPatterns: 1.0
nProjects: 5
shortest: ^\d{15}(\d{2}[0-9xX])?$
Features:

1: LIT|a literal character | 4.0
2: DEC|any of: 0123456789 | 2.0
3: SNG|exactly n repetition | 2.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: QST|zero-or-one repetition | 1.0
8: RNG|chars within a range | 1.0
9: STR|start-of-line | 1.0


0000 | 0005 | '^\\d{15}(\\d{2}[0-9xX])?$'



cluster 152 stats:
nPatterns: 2.0
nProjects: 5
shortest: ([\t\n])
Features:

1: LIT|a literal character | 3.5
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0


0000 | 0004 | '([\\\\()\\r\\n])'
0001 | 0001 | '([\\t\\n])'



cluster 153 stats:
nPatterns: 3.0
nProjects: 5
shortest: facet
Features:

1: LIT|a literal character | 6.666666666666667


0000 | 0003 | 'Accelerate'
0001 | 0001 | 'facet'
0002 | 0001 | 'layer'



cluster 154 stats:
nPatterns: 1.0
nProjects: 5
shortest: ([^*{}\s]@|[^*{}@\s]|\*(?!/))+
Features:

1: LIT|a literal character | 10.0
2: NCCC|negated CCC | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NLKA|sequence doesn't follow  | 1.0
7: OR|logical or | 1.0


0000 | 0005 | '([^*{}\\s]@|[^*{}@\\s]|\\*(?!/))+'



cluster 155 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^(\?+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: STR|start-of-line | 0.6666666666666666
5: ANY|any non-newline char | 0.3333333333333333
6: LZY|as few reps as possible | 0.3333333333333333
7: OR|logical or | 0.3333333333333333


0000 | 0003 | '`(.+?)`'
0001 | 0001 | '^(\\?+)'
0002 | 0001 | ' ( +)|^ '



cluster 156 stats:
nPatterns: 2.0
nProjects: 5
shortest: \([\d,]+\)
Features:

1: LIT|a literal character | 3.0
2: DEC|any of: 0123456789 | 2.0
3: QST|zero-or-one repetition | 1.5
4: ADD|one-or-more repetition | 0.5
5: CCC|custom character class | 0.5
6: CG|a capture group | 0.5


0000 | 0004 | '\\[(\\d?\\d?\\d?)%\\]'
0001 | 0001 | '\\([\\d,]+\\)'



cluster 157 stats:
nPatterns: 2.0
nProjects: 5
shortest: length (\d*):
Features:

1: LIT|a literal character | 13.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: ADD|one-or-more repetition | 0.5
5: KLE|zero-or-more repetition | 0.5


0000 | 0003 | 'length (\\d*):'
0001 | 0002 | 'Last Changed Rev: (\\d+)'



cluster 158 stats:
nPatterns: 2.0
nProjects: 5
shortest: MINOR\s*=\s*(\d+)
Features:

1: LIT|a literal character | 10.0
2: KLE|zero-or-more repetition | 1.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: DEC|any of: 0123456789 | 1.0


0000 | 0004 | '\\s*# SOURCE LINE (\\d+)'
0001 | 0001 | 'MINOR\\s*=\\s*(\\d+)'



cluster 159 stats:
nPatterns: 2.0
nProjects: 5
shortest: \(CVS\) ([\d\.]+) 
Features:

1: LIT|a literal character | 9.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: CCC|custom character class | 0.5


0000 | 0003 | '\\[SQLCode\\: (\\d+)\\]'
0001 | 0002 | '\\(CVS\\) ([\\d\\.]+) '



cluster 160 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^-?\d
Features:

1: DEC|any of: 0123456789 | 2.3333333333333335
2: LIT|a literal character | 1.3333333333333333
3: WRD|[a-zA-Z0-9\_] | 1.0
4: ADD|one-or-more repetition | 0.6666666666666666
5: STR|start-of-line | 0.6666666666666666
6: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0003 | '^-?\\d'
0001 | 0001 | '^\\d+-\\d+'
0002 | 0001 | '\\d\\d-\\w\\w\\w-\\d\\d'



cluster 161 stats:
nPatterns: 2.0
nProjects: 5
shortest: [?\&|!{}+~^()":*-]+
Features:

1: LIT|a literal character | 10.5
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.5
4: NCCC|negated CCC | 1.0
5: CCC|custom character class | 0.5
6: KLE|zero-or-more repetition | 0.5
7: OR|logical or | 0.5
8: STR|start-of-line | 0.5


0000 | 0004 | '(^|\\})(([^\\{\\:])+\\:)+([^\\{]*\\{)'
0001 | 0001 | '[?\\&|!{}+~^()":*-]+'



cluster 162 stats:
nPatterns: 2.0
nProjects: 5
shortest: ^\d+(\.\d+)*$
Features:

1: CG|a capture group | 3.0
2: ADD|one-or-more repetition | 2.5
3: DEC|any of: 0123456789 | 2.5
4: LIT|a literal character | 2.5
5: KLE|zero-or-more repetition | 1.5
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0


0000 | 0003 | u'^\\d+(\\.\\d+)*$'
0001 | 0002 | '^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'



cluster 163 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^[a-z0-9-]+$
Features:

1: LIT|a literal character | 10.333333333333334
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.6666666666666667
4: END|end-of-line | 1.6666666666666667
5: ADD|one-or-more repetition | 1.3333333333333333
6: STR|start-of-line | 0.6666666666666666
7: OR|logical or | 0.3333333333333333


0000 | 0003 | 'md[0-9]$|sd[a-z]+$|xvd[a-z]+$'
0001 | 0001 | '^[a-z0-9-]+$'
0002 | 0001 | '^/static/[a-z./-]+$'



cluster 164 stats:
nPatterns: 3.0
nProjects: 5
shortest: [a-zA-Z0-9_]{2,10}
Features:

1: LIT|a literal character | 7.666666666666667
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.0
4: DBB|$n\le x \le m$ repetition | 1.0
5: END|end-of-line | 0.6666666666666666
6: STR|start-of-line | 0.6666666666666666


0000 | 0004 | '^[a-zA-Z0-9-]{1,100}$'
0001 | 0003 | '^[0-9A-Za-z._-]{0,100}$'
0002 | 0001 | '[a-zA-Z0-9_]{2,10}'



cluster 165 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^(\S+ +\S+)\s*$
Features:

1: CG|a capture group | 2.3333333333333335
2: ADD|one-or-more repetition | 2.0
3: KLE|zero-or-more repetition | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.6666666666666667
5: NWSP|any non-whitespace | 1.3333333333333333
6: END|end-of-line | 1.0
7: LIT|a literal character | 1.0
8: ANY|any non-newline char | 0.6666666666666666
9: STR|start-of-line | 0.6666666666666666


0000 | 0003 | '^(\\s*)()(\\S+)(.*$)'
0001 | 0001 | '^(\\S+ +\\S+)\\s*$'
0002 | 0001 | '\\s*(\\S+)\\s+/(.*)/\\s*$'



cluster 166 stats:
nPatterns: 2.0
nProjects: 5
shortest: ^(\s*)(def .+:|class .+:)
Features:

1: LIT|a literal character | 19.0
2: CG|a capture group | 2.5
3: ADD|one-or-more repetition | 1.5
4: ANY|any non-newline char | 1.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: DEC|any of: 0123456789 | 0.5
8: NWSP|any non-whitespace | 0.5
9: STR|start-of-line | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0004 | '^(\\s*)(def .+:|class .+:)'
0001 | 0001 | 'Mozilla (Firefox|Iceweasel) ((\\d+)\\.\\S*)'



cluster 167 stats:
nPatterns: 2.0
nProjects: 5
shortest: ^\d{4}\.\d{2}\.\d{2}$
Features:

1: DEC|any of: 0123456789 | 7.0
2: LIT|a literal character | 3.5
3: SNG|exactly n repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0004 | '^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$'
0001 | 0001 | '^\\d{4}\\.\\d{2}\\.\\d{2}$'



cluster 168 stats:
nPatterns: 4.0
nProjects: 5
shortest: ^http(s)?://
Features:

1: LIT|a literal character | 10.25
2: CG|a capture group | 1.0
3: QST|zero-or-one repetition | 0.75
4: STR|start-of-line | 0.75
5: OR|logical or | 0.5
6: ADD|one-or-more repetition | 0.25


0000 | 0002 | '^http(s)?://'
0001 | 0001 | '(/s/https?:)/+'
0002 | 0001 | '^(http|https)://'
0003 | 0001 | '^(https?|ftp):\\/\\/'



cluster 169 stats:
nPatterns: 4.0
nProjects: 5
shortest: call.*mount.*first
Features:

1: LIT|a literal character | 15.75
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | 'call.*mount.*first'
0001 | 0002 | 'from django.*import'
0002 | 0002 | 'call\\slaunch\\sbefore'
0003 | 0001 | 'Underfull.*badness'



cluster 170 stats:
nPatterns: 3.0
nProjects: 5
shortest: /[ ]*[\d.]+[ ]*kg
Features:

1: LIT|a literal character | 7.333333333333333
2: DEC|any of: 0123456789 | 2.6666666666666665
3: ADD|one-or-more repetition | 2.3333333333333335
4: CCC|custom character class | 2.0
5: CG|a capture group | 2.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0003 | '([\\d.]+) ([\\d.]+) ([\\d.]+) (\\d+)/(\\d+)'
0001 | 0001 | '/[ ]*[\\d.]+[ ]*kg'
0002 | 0001 | '^GNU gdb [^\\d]*(\\d+)\\.'



cluster 171 stats:
nPatterns: 2.0
nProjects: 5
shortest: \s*SELECT\s+.+?\s+FROM\s+[']?(\w+)
Features:

1: LIT|a literal character | 27.0
2: ADD|one-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.5
4: CG|a capture group | 1.5
5: NCG|group without capturing | 1.5
6: OR|logical or | 1.5
7: QST|zero-or-one repetition | 1.5
8: CCC|custom character class | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0
10: ANY|any non-newline char | 0.5
11: KLE|zero-or-more repetition | 0.5
12: LZY|as few reps as possible | 0.5
13: RNG|chars within a range | 0.5
14: STR|start-of-line | 0.5


0000 | 0004 | '^(DISTRIB_(?:ID|RELEASE|CODENAME|DESCRIPTION))=(?:\'|")?([\\w\\s\\.-_]+)(?:\'|")?'
0001 | 0001 | "\\s*SELECT\\s+.+?\\s+FROM\\s+[']?(\\w+)"



cluster 172 stats:
nPatterns: 3.0
nProjects: 5
shortest: http://www.polleverywhere.com/\w+/\S+
Features:

1: LIT|a literal character | 39.0
2: ADD|one-or-more repetition | 1.3333333333333333
3: ANY|any non-newline char | 0.6666666666666666
4: DEC|any of: 0123456789 | 0.6666666666666666
5: END|end-of-line | 0.6666666666666666
6: STR|start-of-line | 0.6666666666666666
7: NWSP|any non-whitespace | 0.3333333333333333
8: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0004 | '^http://testserver/somewhere/else/\\?c=\\d+#baz$'
0001 | 0004 | '^http://testserver/somewhere/else/\\?foo=bar&c=\\d+#baz$'
0002 | 0001 | 'http://www.polleverywhere.com/\\w+/\\S+'



cluster 173 stats:
nPatterns: 4.0
nProjects: 5
shortest: (\\*)(['`:*~\\[\]{}@\$+\-.#])
Features:

1: LIT|a literal character | 13.75
2: CCC|custom character class | 1.25
3: SNG|exactly n repetition | 1.25
4: CG|a capture group | 1.0
5: RNG|chars within a range | 0.75
6: OR|logical or | 0.5
7: ADD|one-or-more repetition | 0.25
8: END|end-of-line | 0.25
9: KLE|zero-or-more repetition | 0.25
10: NCG|group without capturing | 0.25
11: STR|start-of-line | 0.25


0000 | 0002 | '(\\\\|\\*|\\+|\\?|\\||\\{|\\}|\\[|\\]|\\(|\\)|\\^|\\$|\\.|\\#|\\ )'
0001 | 0001 | "(\\\\*)(['`:*~\\\\[\\]{}@\\$+\\-.#])"
0002 | 0001 | '^(?:[A-Z]{1}\\.{1}|[A-Z]{1}\\.{1}[A-Z]{1})+$'
0003 | 0001 | '([\\$\\^\\*\\+\\.\\?\\{\\}\\[\\]\\(\\)\\|\\\\])'



cluster 174 stats:
nPatterns: 1.0
nProjects: 5
shortest: \n    (\n        (?:".*?")|              # double quotes\n        (?:\'.*?\')|              # single quotes\n        (?:[^\'",\s=][^,=]*?)       # unquoted\n    )\n    (?:\n    (?:\s*,\s*)|(?:\s*$)            # comma\n    )\n
Features:

1: LIT|a literal character | 158.0
2: KLE|zero-or-more repetition | 6.0
3: NCG|group without capturing | 6.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
5: LZY|as few reps as possible | 3.0
6: ANY|any non-newline char | 2.0
7: NCCC|negated CCC | 2.0
8: OR|logical or | 2.0
9: CG|a capture group | 1.0
10: END|end-of-line | 1.0


0000 | 0003 | '\n    (\n        (?:".*?")|              # double quotes\n        (?:\'.*?\')|              # single quotes\n        (?:[^\'",\\s=][^,=]*?)       # unquoted\n    )\n    (?:\n    (?:\\s*,\\s*)|(?:\\s*$)            # comma\n    )\n'



cluster 175 stats:
nPatterns: 1.0
nProjects: 5
shortest: \n        ^(\#{1,6})  # \1 = string of #'s\n        [ \t]*\n        (.+?)       # \2 = Header text\n        [ \t]*\n        (?<!\\)     # ensure not an escaped trailing '#'\n        \#*         # optional closing #'s (not counted)\n        \n+\n        
Features:

1: LIT|a literal character | 207.0
2: CG|a capture group | 3.0
3: KLE|zero-or-more repetition | 3.0
4: ADD|one-or-more repetition | 2.0
5: BKR|match the $i^{th}$ CG | 2.0
6: CCC|custom character class | 2.0
7: ANY|any non-newline char | 1.0
8: DBB|$n\le x \le m$ repetition | 1.0
9: LZY|as few reps as possible | 1.0
10: NLKB|sequence doesn't precede | 1.0
11: STR|start-of-line | 1.0


0000 | 0005 | "\n        ^(\\#{1,6})  # \\1 = string of #'s\n        [ \\t]*\n        (.+?)       # \\2 = Header text\n        [ \\t]*\n        (?<!\\\\)     # ensure not an escaped trailing '#'\n        \\#*         # optional closing #'s (not counted)\n        \\n+\n        "



cluster 176 stats:
nPatterns: 1.0
nProjects: 4
shortest: [-.]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0


0000 | 0004 | '[-.]'



cluster 177 stats:
nPatterns: 1.0
nProjects: 4
shortest: (\D)[.]
Features:

1: CCC|custom character class | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: NDEC|any non-decimal | 1.0


0000 | 0004 | '(\\D)[.]'



cluster 178 stats:
nPatterns: 2.0
nProjects: 4
shortest: //+
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 0.5


0000 | 0003 | '//+'
0001 | 0001 | '/\\d+'



cluster 179 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^rebt.*
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: END|end-of-line | 0.5
5: STR|start-of-line | 0.5


0000 | 0003 | '^rebt.*'
0001 | 0001 | '.*stderr$'



cluster 180 stats:
nPatterns: 2.0
nProjects: 4
shortest: [\-\s]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | u'[\\-\\s]'
0001 | 0001 | '[\\s,;:]'



cluster 181 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^quit.*
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0


0000 | 0003 | '^quit.*'
0001 | 0001 | '^timeout.*/'



cluster 182 stats:
nPatterns: 1.0
nProjects: 4
shortest: (?<!\\)((\\\\)*)\\n
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 1.0
4: NLKB|sequence doesn't precede | 1.0


0000 | 0004 | '(?<!\\\\)((\\\\\\\\)*)\\\\n'



cluster 183 stats:
nPatterns: 2.0
nProjects: 4
shortest: .*\.dmg
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.0
4: END|end-of-line | 0.5
5: STR|start-of-line | 0.5


0000 | 0003 | '.*\\.dmg'
0001 | 0001 | '^.*\\.img.gz$'



cluster 184 stats:
nPatterns: 3.0
nProjects: 4
shortest: ^\(
Features:

1: LIT|a literal character | 1.6666666666666667
2: STR|start-of-line | 0.6666666666666666
3: NWRD|non-word chars | 0.3333333333333333


0000 | 0002 | '\\W_\\('
0001 | 0001 | '^\\('
0002 | 0001 | '^_\\('



cluster 185 stats:
nPatterns: 2.0
nProjects: 4
shortest: \${(\w+)}
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | '\\${(\\w+)}'
0001 | 0001 | '\\{(\\w+)\\}'



cluster 186 stats:
nPatterns: 1.0
nProjects: 4
shortest: #\{?if\}?\(.+?\).*?#\{?end\}?
Features:

1: LIT|a literal character | 13.0
2: QST|zero-or-one repetition | 4.0
3: ANY|any non-newline char | 2.0
4: LZY|as few reps as possible | 2.0
5: ADD|one-or-more repetition | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0004 | '#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'



cluster 187 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^\s*([-\w]+\s*:[^:;]*(;\s*|$))*$
Features:

1: KLE|zero-or-more repetition | 5.0
2: LIT|a literal character | 5.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: CG|a capture group | 2.0
5: END|end-of-line | 2.0
6: ADD|one-or-more repetition | 1.0
7: CCC|custom character class | 1.0
8: NCCC|negated CCC | 1.0
9: OR|logical or | 1.0
10: STR|start-of-line | 1.0
11: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0004 | u'^\\s*([-\\w]+\\s*:[^:;]*(;\\s*|$))*$'



cluster 188 stats:
nPatterns: 1.0
nProjects: 4
shortest: #\{?macro\}?\(.*?\).*?#\{?end\}?
Features:

1: LIT|a literal character | 16.0
2: QST|zero-or-one repetition | 4.0
3: ANY|any non-newline char | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 2.0


0000 | 0004 | '#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'



cluster 189 stats:
nPatterns: 1.0
nProjects: 4
shortest: \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}
Features:

1: DBB|$n\le x \le m$ repetition | 4.0
2: DEC|any of: 0123456789 | 4.0
3: LIT|a literal character | 3.0


0000 | 0004 | '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'



cluster 190 stats:
nPatterns: 1.0
nProjects: 4
shortest: ^<\?xml.*?encoding=["\\']*(.+?)["\\'>]
Features:

1: LIT|a literal character | 21.0
2: ANY|any non-newline char | 2.0
3: CCC|custom character class | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 2.0
6: ADD|one-or-more repetition | 1.0
7: CG|a capture group | 1.0
8: STR|start-of-line | 1.0


0000 | 0004 | '^<\\?xml.*?encoding=["\\\']*(.+?)["\\\'>]'



cluster 191 stats:
nPatterns: 2.0
nProjects: 4
shortest: [_.,\[\]\(\):]
Features:

1: LIT|a literal character | 6.0
2: CCC|custom character class | 1.5
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 0.5
5: CG|a capture group | 0.5
6: DEC|any of: 0123456789 | 0.5
7: STR|start-of-line | 0.5


0000 | 0003 | '^(.+)[:(]\\d+[:)]'
0001 | 0001 | u'[_.,\\[\\]\\(\\):]'



cluster 192 stats:
nPatterns: 2.0
nProjects: 4
shortest: .{1,2047}
Features:

1: ANY|any non-newline char | 3.0
2: CG|a capture group | 2.5
3: SNG|exactly n repetition | 2.5
4: DBB|$n\le x \le m$ repetition | 0.5


0000 | 0003 | u'.{1,2047}'
0001 | 0001 | '(.{8})(.{4})(.{4})(.{4})(.{12})'



cluster 193 stats:
nPatterns: 2.0
nProjects: 4
shortest: (-?\d+):(-?\d+)
Features:

1: ADD|one-or-more repetition | 2.5
2: CG|a capture group | 2.5
3: DEC|any of: 0123456789 | 2.5
4: LIT|a literal character | 2.5
5: QST|zero-or-one repetition | 1.5
6: NCG|group without capturing | 0.5


0000 | 0003 | '(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0001 | 0001 | '(-?\\d+):(-?\\d+)'



cluster 194 stats:
nPatterns: 4.0
nProjects: 4
shortest: \.php$
Features:

1: LIT|a literal character | 5.0
2: END|end-of-line | 1.25
3: CG|a capture group | 0.25
4: OR|logical or | 0.25


0000 | 0001 | '\\.php$'
0001 | 0001 | '(\\.py)$'
0002 | 0001 | '\\.pyc$|~$'
0003 | 0001 | 'tests\\.py$'



cluster 195 stats:
nPatterns: 2.0
nProjects: 4
shortest: .*OOM max count: (\d+).*
Features:

1: LIT|a literal character | 15.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.5
4: CG|a capture group | 1.5
5: ADD|one-or-more repetition | 0.5
6: DEC|any of: 0123456789 | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0003 | '.*OOM max count: (\\d+).*'
0001 | 0001 | '(\\s*configuration:)(.*)\n'



cluster 196 stats:
nPatterns: 2.0
nProjects: 4
shortest: dot version ([\d\.]+)
Features:

1: LIT|a literal character | 14.0
2: CG|a capture group | 1.5
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 0.5
6: END|end-of-line | 0.5
7: NCCC|negated CCC | 0.5
8: OR|logical or | 0.5


0000 | 0002 | 'dot version ([\\d\\.]+)'
0001 | 0002 | '[&?]versionId=([^&]+)($|=|&)'



cluster 197 stats:
nPatterns: 1.0
nProjects: 4
shortest: \$\{?[a-zA-Z_][a-zA-Z0-9_]*(\([^)]*\))?(\.[a-zA-Z0-9_]+(\([^)]*\))?)*\}?
Features:

1: LIT|a literal character | 29.0
2: RNG|chars within a range | 8.0
3: KLE|zero-or-more repetition | 4.0
4: QST|zero-or-one repetition | 4.0
5: CCC|custom character class | 3.0
6: CG|a capture group | 3.0
7: NCCC|negated CCC | 2.0
8: ADD|one-or-more repetition | 1.0


0000 | 0004 | '\\$\\{?[a-zA-Z_][a-zA-Z0-9_]*(\\([^)]*\\))?(\\.[a-zA-Z0-9_]+(\\([^)]*\\))?)*\\}?'



cluster 198 stats:
nPatterns: 2.0
nProjects: 4
shortest: ([^\t -~])
Features:

1: LIT|a literal character | 8.5
2: NCCC|negated CCC | 4.0
3: KLE|zero-or-more repetition | 3.5
4: CG|a capture group | 2.0
5: RNG|chars within a range | 0.5


0000 | 0003 | u'([^\\t -~])'
0001 | 0001 | '[^\\t]*\\t([^\\t]*)\\t([^\\t]*)\\t[^\\t]*\\t[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\n'



cluster 199 stats:
nPatterns: 3.0
nProjects: 4
shortest: image:\s+(\S+)
Features:

1: LIT|a literal character | 9.666666666666666
2: CG|a capture group | 2.3333333333333335
3: ADD|one-or-more repetition | 1.3333333333333333
4: KLE|zero-or-more repetition | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: END|end-of-line | 0.6666666666666666
7: STR|start-of-line | 0.6666666666666666
8: ANY|any non-newline char | 0.3333333333333333
9: NCCC|negated CCC | 0.3333333333333333
10: NWSP|any non-whitespace | 0.3333333333333333
11: OR|logical or | 0.3333333333333333


0000 | 0002 | 'image:\\s+(\\S+)'
0001 | 0001 | '^/v2/images/([^\\/]+)$'
0002 | 0001 | '^(\\s*(\\[\\[image((\\(.*\\))|())\\]\\])\\s*)+$'



cluster 200 stats:
nPatterns: 2.0
nProjects: 4
shortest: <td style="text-align: right;">[0-9]{1,}</td>
Features:

1: LIT|a literal character | 39.5
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0
4: ADD|one-or-more repetition | 0.5
5: CG|a capture group | 0.5
6: LWB|at least n repetition | 0.5


0000 | 0002 | '<td style="text-align: right;">[0-9]{1,}</td>'
0001 | 0002 | '<meta name="video_height" content="([0-9]+)" />'



cluster 201 stats:
nPatterns: 3.0
nProjects: 4
shortest: <map id="(.*?)"
Features:

1: LIT|a literal character | 21.0
2: ANY|any non-newline char | 9.0
3: KLE|zero-or-more repetition | 1.6666666666666667
4: LZY|as few reps as possible | 1.6666666666666667
5: CG|a capture group | 1.3333333333333333


0000 | 0002 | '<map id="(.*?)"'
0001 | 0001 | '<table id="emuleFile">.*?</table>'
0002 | 0001 | '<p.*?begin="(...........)" end="(...........)".*?">(.*?)</p>'



cluster 202 stats:
nPatterns: 5.0
nProjects: 4
shortest: [^\w\-]
Features:

1: LIT|a literal character | 3.2
2: WRD|[a-zA-Z0-9\_] | 2.0
3: ADD|one-or-more repetition | 1.2
4: CCC|custom character class | 1.2
5: DEC|any of: 0123456789 | 0.6
6: STR|start-of-line | 0.4
7: NCCC|negated CCC | 0.2


0000 | 0001 | '[^\\w\\-]'
0001 | 0001 | '^[\\w._-]+'
0002 | 0001 | '[\\w\\d\\-_\\.]+'
0003 | 0001 | '^[\\w\\d\\.]+@[\\w\\d\\.]+'
0004 | 0001 | '[\\w\\.\\-]+@[\\w\\.\\-]+\\.\\w\\w\\w'



cluster 203 stats:
nPatterns: 4.0
nProjects: 4
shortest: <script .*?</script>
Features:

1: LIT|a literal character | 19.25
2: KLE|zero-or-more repetition | 2.25
3: ANY|any non-newline char | 1.5
4: LZY|as few reps as possible | 1.25
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
6: CG|a capture group | 0.25
7: NLKA|sequence doesn't follow  | 0.25
8: QST|zero-or-one repetition | 0.25


0000 | 0001 | '<script .*?</script>'
0001 | 0001 | '<span class="c_1">.*?</span>'
0002 | 0001 | '<\\s*script.*?<\\s*/script\\s*>'
0003 | 0001 | '<img.*?src="(?!http://)(.*?)".*/?>'



cluster 204 stats:
nPatterns: 4.0
nProjects: 4
shortest: ^([a-fA-F0-9]{64})$
Features:

1: LIT|a literal character | 10.5
2: RNG|chars within a range | 4.75
3: SNG|exactly n repetition | 2.5
4: CCC|custom character class | 2.0
5: CG|a capture group | 1.25
6: ADD|one-or-more repetition | 0.5
7: END|end-of-line | 0.5
8: STR|start-of-line | 0.5
9: WNW|word/non-word boundary | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '^([a-fA-F0-9]{64})$'
0001 | 0001 | '\\s+(([0-9A-F]{2}:){5}[0-9A-F]{2})\\s+'
0002 | 0001 | '^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$'
0003 | 0001 | '\\b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\\b'



cluster 205 stats:
nPatterns: 2.0
nProjects: 4
shortest: <COREF\s+[^>]*?ID="(?P<id>\w+)"(\s+TYPE="(?P<type>\w+)")?(\s+REF="(?P<ref>\w+)")?
Features:

1: LIT|a literal character | 25.0
2: KLE|zero-or-more repetition | 5.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
4: ADD|one-or-more repetition | 3.5
5: PNG|named capture group | 3.5
6: ANY|any non-newline char | 1.5
7: CG|a capture group | 1.5
8: QST|zero-or-one repetition | 1.5
9: WRD|[a-zA-Z0-9\_] | 1.5
10: NCCC|negated CCC | 1.0
11: LZY|as few reps as possible | 0.5
12: OR|logical or | 0.5


0000 | 0003 | 'DOCTYPE\\s+(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'
0001 | 0001 | '<COREF\\s+[^>]*?ID="(?P<id>\\w+)"(\\s+TYPE="(?P<type>\\w+)")?(\\s+REF="(?P<ref>\\w+)")?'



cluster 206 stats:
nPatterns: 5.0
nProjects: 4
shortest: projects/([^/]+)/?$
Features:

1: LIT|a literal character | 22.6
2: QST|zero-or-one repetition | 2.2
3: ADD|one-or-more repetition | 2.0
4: CG|a capture group | 2.0
5: NCCC|negated CCC | 1.4
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 1.0
8: OR|logical or | 0.4
9: STR|start-of-line | 0.4


0000 | 0002 | 'projects/([^/]+)/?$'
0001 | 0001 | '/lib(64)?/(.+/)?lib[^/]+\\.so$'
0002 | 0001 | '^https?://bitbucket.org/([^/]+/[^/]+)/?$'
0003 | 0001 | 'https?://github.com/([^/]+/[^/]+)/tags/?$'
0004 | 0001 | '^/(usr/)?(s?bin|games|libexec(/.+)?|(lib(64)?|share)/.+)/[^/]+$'



cluster 207 stats:
nPatterns: 3.0
nProjects: 4
shortest: ^(Mozilla.*(Gecko|KHTML|MSIE|Presto|Trident)|Opera).*$
Features:

1: LIT|a literal character | 58.666666666666664
2: ANY|any non-newline char | 3.3333333333333335
3: KLE|zero-or-more repetition | 3.0
4: LZY|as few reps as possible | 2.3333333333333335
5: CG|a capture group | 1.3333333333333333
6: ADD|one-or-more repetition | 0.6666666666666666
7: DEC|any of: 0123456789 | 0.6666666666666666
8: OR|logical or | 0.6666666666666666
9: END|end-of-line | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333


0000 | 0002 | '^(Mozilla.*(Gecko|KHTML|MSIE|Presto|Trident)|Opera).*$'
0001 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds.*?"'
0002 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds. Killing!"'



cluster 208 stats:
nPatterns: 1.0
nProjects: 3
shortest: "(.*?)"
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0003 | '"(.*?)"'



cluster 209 stats:
nPatterns: 1.0
nProjects: 3
shortest: (\S+);.*
Features:

1: ADD|one-or-more repetition | 1.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LIT|a literal character | 1.0
6: NWSP|any non-whitespace | 1.0


0000 | 0003 | '(\\S+);.*'



cluster 210 stats:
nPatterns: 1.0
nProjects: 3
shortest: (\.|\s)
Features:

1: CG|a capture group | 1.0
2: LIT|a literal character | 1.0
3: OR|logical or | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | u'(\\.|\\s)'



cluster 211 stats:
nPatterns: 1.0
nProjects: 3
shortest: \*\s[^:]+:
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | '\\*\\s[^:]+:'



cluster 212 stats:
nPatterns: 2.0
nProjects: 3
shortest: pam
Features:

1: LIT|a literal character | 4.0


0000 | 0002 | '&amp;'
0001 | 0001 | 'pam'



cluster 213 stats:
nPatterns: 1.0
nProjects: 3
shortest: (\S+): (\S+)
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: LIT|a literal character | 2.0
4: NWSP|any non-whitespace | 2.0


0000 | 0003 | '(\\S+): (\\S+)'



cluster 214 stats:
nPatterns: 2.0
nProjects: 3
shortest: %(.)
Features:

1: ANY|any non-newline char | 1.5
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0


0000 | 0002 | '%(.)'
0001 | 0001 | '%(..)'



cluster 215 stats:
nPatterns: 2.0
nProjects: 3
shortest: [-:]
Features:

1: LIT|a literal character | 2.5
2: CCC|custom character class | 1.0


0000 | 0002 | '[:@/]'
0001 | 0001 | '[-:]'



cluster 216 stats:
nPatterns: 1.0
nProjects: 3
shortest: "([^"]+)"|(\S+)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: NCCC|negated CCC | 1.0
5: NWSP|any non-whitespace | 1.0
6: OR|logical or | 1.0


0000 | 0003 | '"([^"]+)"|(\\S+)'



cluster 217 stats:
nPatterns: 1.0
nProjects: 3
shortest: <(/?)\s*b\s*>
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.0
5: QST|zero-or-one repetition | 1.0


0000 | 0003 | u'<(/?)\\s*b\\s*>'



cluster 218 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^[\w\.\-\/]*$
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | '^[\\w\\.\\-\\/]*$'



cluster 219 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^[#/;]
Features:

1: LIT|a literal character | 3.5
2: CCC|custom character class | 1.0
3: STR|start-of-line | 0.5


0000 | 0002 | '^[#/;]'
0001 | 0001 | '[;,/-]'



cluster 220 stats:
nPatterns: 1.0
nProjects: 3
shortest: (\s*\=)|(\s*\:)
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 2.0
3: LIT|a literal character | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: OR|logical or | 1.0


0000 | 0003 | '(\\s*\\=)|(\\s*\\:)'



cluster 221 stats:
nPatterns: 1.0
nProjects: 3
shortest: --test-config=(.*)$
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0


0000 | 0003 | '--test-config=(.*)$'



cluster 222 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^(\w+)=([a-f0-9]+)
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: RNG|chars within a range | 2.0
5: CCC|custom character class | 1.0
6: STR|start-of-line | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | '^(\\w+)=([a-f0-9]+)'



cluster 223 stats:
nPatterns: 1.0
nProjects: 3
shortest: pip(\d(\.\d)?)?$
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 2.0
3: DEC|any of: 0123456789 | 2.0
4: QST|zero-or-one repetition | 2.0
5: END|end-of-line | 1.0


0000 | 0003 | 'pip(\\d(\\.\\d)?)?$'



cluster 224 stats:
nPatterns: 1.0
nProjects: 3
shortest: \\([0-3][0-7][0-7])
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 3.0
3: RNG|chars within a range | 3.0
4: CG|a capture group | 1.0


0000 | 0003 | '\\\\([0-3][0-7][0-7])'



cluster 225 stats:
nPatterns: 1.0
nProjects: 3
shortest: .*(\.so|\.py[cod]?)$
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: OR|logical or | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0003 | '.*(\\.so|\\.py[cod]?)$'



cluster 226 stats:
nPatterns: 1.0
nProjects: 3
shortest: <path\[(\d+)\]>(.*)
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0003 | '<path\\[(\\d+)\\]>(.*)'



cluster 227 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^(X|A)$
Features:

1: LIT|a literal character | 3.5
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: STR|start-of-line | 1.0
5: END|end-of-line | 0.5


0000 | 0002 | '^(X|A)$'
0001 | 0001 | '^(Sch|S)A'



cluster 228 stats:
nPatterns: 2.0
nProjects: 3
shortest: CPU\d+:
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 1.5
3: DEC|any of: 0123456789 | 1.5


0000 | 0002 | 'CPU\\d+:'
0001 | 0001 | '\\d+:\\d+'



cluster 229 stats:
nPatterns: 2.0
nProjects: 3
shortest: \bcsc\b
Features:

1: LIT|a literal character | 3.0
2: WNW|word/non-word boundary | 1.5
3: CCC|custom character class | 0.5


0000 | 0002 | '\\bcsc\\b'
0001 | 0001 | '\\bc[cs]'



cluster 230 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^(.*)~([+-][0-9]{2})00$
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 2.0
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: RNG|chars within a range | 1.0
8: SNG|exactly n repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0003 | '^(.*)~([+-][0-9]{2})00$'



cluster 231 stats:
nPatterns: 2.0
nProjects: 3
shortest: [aeiou]
Features:

1: LIT|a literal character | 7.5
2: CCC|custom character class | 1.0


0000 | 0002 | '[aeiou]'
0001 | 0001 | '[aeouiAEOUI]'



cluster 232 stats:
nPatterns: 2.0
nProjects: 3
shortest: LR Number:
Features:

1: LIT|a literal character | 10.0


0000 | 0002 | 'LR Number:'
0001 | 0001 | 'Run number'



cluster 233 stats:
nPatterns: 3.0
nProjects: 3
shortest: \s+}
Features:

1: ADD|one-or-more repetition | 1.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
3: LIT|a literal character | 0.6666666666666666
4: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0001 | '\\s+}'
0001 | 0001 | '}\\s+'
0002 | 0001 | '\\w+\\s'



cluster 234 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^(\d+)\.(\d+)(?:\.(\d+))?
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 3.0
3: DEC|any of: 0123456789 | 3.0
4: LIT|a literal character | 2.0
5: NCG|group without capturing | 1.0
6: QST|zero-or-one repetition | 1.0
7: STR|start-of-line | 1.0


0000 | 0003 | '^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'



cluster 235 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^\s*//\s*$
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 1.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
4: END|end-of-line | 1.0
5: ADD|one-or-more repetition | 0.5
6: STR|start-of-line | 0.5


0000 | 0002 | '^\\s*//\\s*$'
0001 | 0001 | '======+\\s*$'



cluster 236 stats:
nPatterns: 2.0
nProjects: 3
shortest: .*?\S\.\s
Features:

1: LIT|a literal character | 2.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: WNW|word/non-word boundary | 1.0
6: NWSP|any non-whitespace | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | u'.*?\\S\\.\\s'
0001 | 0001 | '.*?\\bsse2\\b'



cluster 237 stats:
nPatterns: 1.0
nProjects: 3
shortest: (^\s+Invalid write of size )\d+
Features:

1: LIT|a literal character | 22.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | '(^\\s+Invalid write of size )\\d+'



cluster 238 stats:
nPatterns: 2.0
nProjects: 3
shortest: \bratsimp\b
Features:

1: LIT|a literal character | 8.5
2: WNW|word/non-word boundary | 1.0
3: KLE|zero-or-more repetition | 0.5
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '\\bratsimp\\b'
0001 | 0001 | '\\s*!important'



cluster 239 stats:
nPatterns: 2.0
nProjects: 3
shortest: \.repeat\d+
Features:

1: LIT|a literal character | 7.5
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 0.5
4: DEC|any of: 0123456789 | 0.5
5: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | '\\.repeat\\d+'
0001 | 0001 | '\\w+\\_steps.rb'



cluster 240 stats:
nPatterns: 2.0
nProjects: 3
shortest: ([^:]*):(.*)
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.5
4: CG|a capture group | 1.5
5: NCCC|negated CCC | 0.5


0000 | 0002 | 'tag:.*\\[(.*)\\]'
0001 | 0001 | '([^:]*):(.*)'



cluster 241 stats:
nPatterns: 1.0
nProjects: 3
shortest: (?:\s*|((?:\\\\)+))\\\n\s*
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 2.0
3: NCG|group without capturing | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: OR|logical or | 1.0


0000 | 0003 | '(?:\\s*|((?:\\\\\\\\)+))\\\\\\n\\s*'



cluster 242 stats:
nPatterns: 2.0
nProjects: 3
shortest: KEYBOARDTYPE
Features:

1: LIT|a literal character | 14.5


0000 | 0002 | 'ERROR TODO WORKED'
0001 | 0001 | 'KEYBOARDTYPE'



cluster 243 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^(.+?)_(.+)$
Features:

1: CG|a capture group | 2.5
2: LIT|a literal character | 2.5
3: ADD|one-or-more repetition | 1.5
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: DEC|any of: 0123456789 | 0.5
8: LZY|as few reps as possible | 0.5
9: OR|logical or | 0.5
10: QST|zero-or-one repetition | 0.5


0000 | 0002 | '^(.+?)_(.+)$'
0001 | 0001 | '^(R|RR)(_(\\d+))?$'



cluster 244 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^\w+(?:-\w+)?(?:,\w+(?:-\w+)?)*$
Features:

1: ADD|one-or-more repetition | 4.0
2: WRD|[a-zA-Z0-9\_] | 4.0
3: LIT|a literal character | 3.0
4: NCG|group without capturing | 3.0
5: QST|zero-or-one repetition | 2.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0003 | '^\\w+(?:-\\w+)?(?:,\\w+(?:-\\w+)?)*$'



cluster 245 stats:
nPatterns: 2.0
nProjects: 3
shortest: ##VERSION##
Features:

1: LIT|a literal character | 11.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0002 | '@@VERSION>(.*)@@(.*)'
0001 | 0001 | '##VERSION##'



cluster 246 stats:
nPatterns: 1.0
nProjects: 3
shortest: (\d+):(\d+):(\d+)(?:\.(\d{0,6}))?
Features:

1: CG|a capture group | 4.0
2: DEC|any of: 0123456789 | 4.0
3: ADD|one-or-more repetition | 3.0
4: LIT|a literal character | 3.0
5: DBB|$n\le x \le m$ repetition | 1.0
6: NCG|group without capturing | 1.0
7: QST|zero-or-one repetition | 1.0


0000 | 0003 | '(\\d+):(\\d+):(\\d+)(?:\\.(\\d{0,6}))?'



cluster 247 stats:
nPatterns: 1.0
nProjects: 3
shortest: Success: created profile .* at '([^']+)'
Features:

1: LIT|a literal character | 32.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NCCC|negated CCC | 1.0


0000 | 0003 | "Success: created profile .* at '([^']+)'"



cluster 248 stats:
nPatterns: 1.0
nProjects: 3
shortest: label(\s*)=(\s*)"\s%tmp(.\w*)*(\s*)"
Features:

1: LIT|a literal character | 12.0
2: KLE|zero-or-more repetition | 5.0
3: CG|a capture group | 4.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
5: ANY|any non-newline char | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | 'label(\\s*)=(\\s*)"\\s%tmp(.\\w*)*(\\s*)"'



cluster 249 stats:
nPatterns: 2.0
nProjects: 3
shortest: class (\w+?)\(
Features:

1: LIT|a literal character | 6.0
2: CG|a capture group | 2.0
3: LZY|as few reps as possible | 1.5
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: KLE|zero-or-more repetition | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '(.*?) (.*?) as (\\w+)'
0001 | 0001 | 'class (\\w+?)\\('



cluster 250 stats:
nPatterns: 2.0
nProjects: 3
shortest: :|\*|\?|"|<|>|\|
Features:

1: LIT|a literal character | 4.5
2: KLE|zero-or-more repetition | 1.0
3: OR|logical or | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
5: PNG|named capture group | 0.5


0000 | 0002 | ':|\\*|\\?|"|<|>|\\|'
0001 | 0001 | '\\s*(?P<a>,|:)\\s*'



cluster 251 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^\s*\*+/
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.5
3: DEC|any of: 0123456789 | 1.5
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0002 | '^\\s*\\*+/'
0001 | 0001 | '^HTTP/\\d\\.\\d\\s+\\d+\\s*'



cluster 252 stats:
nPatterns: 2.0
nProjects: 3
shortest: Revision: ([0-9]+)
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0002 | 'Revision: ([0-9]+)'
0001 | 0001 | 'User Serial:([0-9]+)'



cluster 253 stats:
nPatterns: 2.0
nProjects: 3
shortest: WIN_VIRTIO
Features:

1: LIT|a literal character | 21.5


0000 | 0002 | 'WIN_VIRTIO'
0001 | 0001 | 'KVM_TEST_VIRTIO_NETWORK_INSTALLER'



cluster 254 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^(.*)\s*<(.*)>\s*$
Features:

1: KLE|zero-or-more repetition | 4.0
2: LIT|a literal character | 4.0
3: ANY|any non-newline char | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: CG|a capture group | 1.5
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: OR|logical or | 0.5


0000 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0001 | 0001 | '^.*<\\s*html(\\s*|>).*$'



cluster 255 stats:
nPatterns: 1.0
nProjects: 3
shortest: (\d+),\s*(\d+),\s*(\d+),\s*(\d+),\s*(\d+)
Features:

1: ADD|one-or-more repetition | 5.0
2: CG|a capture group | 5.0
3: DEC|any of: 0123456789 | 5.0
4: KLE|zero-or-more repetition | 4.0
5: LIT|a literal character | 4.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0


0000 | 0003 | '(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)'



cluster 256 stats:
nPatterns: 3.0
nProjects: 3
shortest: [EWN]\d{3}
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.6666666666666667
3: DEC|any of: 0123456789 | 1.0
4: SNG|exactly n repetition | 1.0
5: RNG|chars within a range | 0.6666666666666666


0000 | 0002 | '[EWN]\\d{3}'
0001 | 0001 | '[#][\\dA-F]{3}'
0002 | 0001 | '[#][\\dA-F]{6}'



cluster 257 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^.*?(v[\d\.]+).*?$
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.5
3: KLE|zero-or-more repetition | 1.5
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: DEC|any of: 0123456789 | 1.0
8: END|end-of-line | 1.0
9: LZY|as few reps as possible | 1.0
10: NCCC|negated CCC | 0.5
11: STR|start-of-line | 0.5


0000 | 0002 | '^.*?(v[\\d\\.]+).*?$'
0001 | 0001 | '([^\\-\\.]*)-([\\d+.\\-]+)$'



cluster 258 stats:
nPatterns: 2.0
nProjects: 3
shortest: /vote/(up|down)/(.*)
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 1.5
3: CG|a capture group | 1.5
4: DEC|any of: 0123456789 | 1.5
5: ADD|one-or-more repetition | 1.0
6: KLE|zero-or-more repetition | 1.0
7: OR|logical or | 0.5


0000 | 0002 | '(\\d+):.*virtio\\d+-input.\\d'
0001 | 0001 | '/vote/(up|down)/(.*)'



cluster 259 stats:
nPatterns: 2.0
nProjects: 3
shortest: \.(js|java)(?:\.in)?$
Features:

1: LIT|a literal character | 11.5
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: NCG|group without capturing | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '\\.(js|java)(?:\\.in)?$'
0001 | 0001 | '\\.(js|jsm|java)(?:\\.in)?$'



cluster 260 stats:
nPatterns: 2.0
nProjects: 3
shortest: Cert\s+\d+:\s+(.*)$
Features:

1: LIT|a literal character | 6.5
2: ADD|one-or-more repetition | 3.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: CG|a capture group | 1.5
5: ANY|any non-newline char | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 0.5
8: KLE|zero-or-more repetition | 0.5
9: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | 'MemFree:\\s+(.\\d+)\\s+(\\w+)'
0001 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'



cluster 261 stats:
nPatterns: 2.0
nProjects: 3
shortest: (\S+)([ \t]*?)(.*)
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 2.5
3: NWSP|any non-whitespace | 1.5
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: KLE|zero-or-more repetition | 1.0
7: LZY|as few reps as possible | 1.0
8: BKR|match the $i^{th}$ CG | 0.5
9: CCC|custom character class | 0.5
10: LKA|matching sequence follows | 0.5
11: LKB|matching sequence precedes | 0.5
12: OR|logical or | 0.5


0000 | 0002 | '(\\*|_) (?=\\S) (.+?) (?<=\\S) \\1'
0001 | 0001 | '(\\S+)([ \t]*?)(.*)'



cluster 262 stats:
nPatterns: 2.0
nProjects: 3
shortest: "(\\\\|\\"|[^"])*"
Features:

1: LIT|a literal character | 9.0
2: CG|a capture group | 1.5
3: KLE|zero-or-more repetition | 1.5
4: NCCC|negated CCC | 1.5
5: OR|logical or | 0.5


0000 | 0002 | '"(\\\\\\\\|\\\\"|[^"])*"'
0001 | 0001 | '\\[\\[([^]|[:]*)\\|([^][]*)\\]\\]'



cluster 263 stats:
nPatterns: 3.0
nProjects: 3
shortest: test_file_commit1
Features:

1: LIT|a literal character | 17.666666666666668


0000 | 0002 | 'test_file_commit1'
0001 | 0002 | 'test_file_commit2'
0002 | 0001 | u'amazon-affiliates""'



cluster 264 stats:
nPatterns: 2.0
nProjects: 3
shortest: rgba?\(([\d, \%\.]+)\)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: ANY|any non-newline char | 1.0
6: DEC|any of: 0123456789 | 1.0
7: KLE|zero-or-more repetition | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: NCG|group without capturing | 0.5
10: QST|zero-or-one repetition | 0.5


0000 | 0002 | '(?:([\\w ]+) ([\\w.]+) .*\\[.* ([\\d.]+)\\])'
0001 | 0001 | 'rgba?\\(([\\d, \\%\\.]+)\\)'



cluster 265 stats:
nPatterns: 2.0
nProjects: 3
shortest: event_teamlist|matchresults
Features:

1: LIT|a literal character | 36.0
2: OR|logical or | 0.5


0000 | 0002 | '/usr/bin/qemu-system-x86_64 -machine accel=kvm'
0001 | 0001 | 'event_teamlist|matchresults'



cluster 266 stats:
nPatterns: 2.0
nProjects: 3
shortest: (src|href)\=([\\'"]?)/?files/
Features:

1: LIT|a literal character | 21.5
2: CG|a capture group | 1.5
3: QST|zero-or-one repetition | 1.5
4: RNG|chars within a range | 1.5
5: NCCC|negated CCC | 1.0
6: OR|logical or | 1.0
7: CCC|custom character class | 0.5
8: KLE|zero-or-more repetition | 0.5
9: NCG|group without capturing | 0.5


0000 | 0002 | '[^A-Za-z0-9]?(?:file|source)=(http[^\\\'"&]*)'
0001 | 0001 | '(src|href)\\=([\\\'"]?)/?files/'



cluster 267 stats:
nPatterns: 2.0
nProjects: 3
shortest: (?i)^(\d+(?:\.\d+)?)([kMGTPEZY]?)$
Features:

1: LIT|a literal character | 16.0
2: CG|a capture group | 3.0
3: QST|zero-or-one repetition | 2.5
4: ADD|one-or-more repetition | 1.5
5: CCC|custom character class | 1.5
6: DEC|any of: 0123456789 | 1.5
7: END|end-of-line | 1.0
8: NCG|group without capturing | 1.0
9: STR|start-of-line | 1.0
10: OPT|options wrapper | 0.5


0000 | 0002 | '(?i)^(\\d+(?:\\.\\d+)?)([kMGTPEZY]?)$'
0001 | 0001 | '^(\\d+)(?:([yzafpnumcdhkKMGTPEZY])(i)?)?([Bb])?$'



cluster 268 stats:
nPatterns: 3.0
nProjects: 3
shortest: (AppKit|Foundation)\.doc
Features:

1: LIT|a literal character | 20.333333333333332
2: OR|logical or | 1.0
3: OPT|options wrapper | 0.6666666666666666
4: ANY|any non-newline char | 0.3333333333333333
5: CG|a capture group | 0.3333333333333333
6: NCG|group without capturing | 0.3333333333333333


0000 | 0001 | '(?i)incorporated|(?i)inc.'
0001 | 0001 | '(AppKit|Foundation)\\.doc'
0002 | 0001 | '@(?:end|implementation|protocol)'



cluster 269 stats:
nPatterns: 3.0
nProjects: 3
shortest: Connection timed out
Features:

1: LIT|a literal character | 26.333333333333332


0000 | 0001 | 'Connection timed out'
0001 | 0001 | '\nRock Ridge signatures'
0002 | 0001 | '/\\* Begin PBXFileReference section \\*/\n'



cluster 270 stats:
nPatterns: 3.0
nProjects: 3
shortest: \.(anno|txt)$
Features:

1: LIT|a literal character | 16.666666666666668
2: CG|a capture group | 2.3333333333333335
3: END|end-of-line | 2.0
4: OR|logical or | 1.0
5: ANY|any non-newline char | 0.3333333333333333
6: KLE|zero-or-more repetition | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '\\.(anno|txt)$'
0001 | 0001 | '^(test|xen|kvm|vmware)$'
0002 | 0001 | '.*((\\.textile$)|(\\.markdown$)|(\\.org$)|(\\.html$))'



cluster 271 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^\s*(if|try|elif|while|for)
Features:

1: LIT|a literal character | 21.5
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.5
4: CG|a capture group | 2.0
5: OR|logical or | 1.5
6: ADD|one-or-more repetition | 0.5
7: ANY|any non-newline char | 0.5
8: NCCC|negated CCC | 0.5
9: STR|start-of-line | 0.5


0000 | 0002 | '^\\s*(if|try|elif|while|for)'
0001 | 0001 | '\\s*(((if|while)\\s*\\(|else\\s*|else\\s+if\\s*\\(|for\\s*\\(.*\\))[^{;]*)'



cluster 272 stats:
nPatterns: 2.0
nProjects: 3
shortest: (([umsg]asser(t|ted))) *\(( *)(\d+)
Features:

1: LIT|a literal character | 28.5
2: CG|a capture group | 4.0
3: ADD|one-or-more repetition | 2.0
4: CCC|custom character class | 1.5
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0
7: RNG|chars within a range | 1.0
8: OR|logical or | 0.5


0000 | 0002 | '(([umsg]asser(t|ted))) *\\(( *)(\\d+)'
0001 | 0001 | 'map\\.setCenter\\(new GLatLng\\(([-0-9.]+), ([-0-9.]+)\\), (\\d+)\\);'



cluster 273 stats:
nPatterns: 3.0
nProjects: 3
shortest: \s+\[(?P<section>.*)\]
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 1.6666666666666667
3: ANY|any non-newline char | 1.3333333333333333
4: PNG|named capture group | 1.3333333333333333
5: ADD|one-or-more repetition | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: QST|zero-or-one repetition | 0.6666666666666666
8: END|end-of-line | 0.3333333333333333
9: NCCC|negated CCC | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '<.+>(?P<content>.*)</.+>'
0001 | 0001 | '\\s+\\[(?P<section>.*)\\]'
0002 | 0001 | '^\\s*\\[(?P<state>!?!?)(?P<section>[^\\]]*)\\]\\s*$'



cluster 274 stats:
nPatterns: 1.0
nProjects: 3
shortest: ^(?P<residence>\d{10})(?P<origin>\w{1,3})[-\ ]?(?P<birthday>\d{7})[-\ ]?(?P<validity>\d{7})[-\ ]?(?P<checksum>\d{1})$
Features:

1: LIT|a literal character | 6.0
2: PNG|named capture group | 5.0
3: DEC|any of: 0123456789 | 4.0
4: SNG|exactly n repetition | 4.0
5: CCC|custom character class | 3.0
6: QST|zero-or-one repetition | 3.0
7: DBB|$n\le x \le m$ repetition | 1.0
8: END|end-of-line | 1.0
9: STR|start-of-line | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0003 | u'^(?P<residence>\\d{10})(?P<origin>\\w{1,3})[-\\ ]?(?P<birthday>\\d{7})[-\\ ]?(?P<validity>\\d{7})[-\\ ]?(?P<checksum>\\d{1})$'



cluster 275 stats:
nPatterns: 2.0
nProjects: 3
shortest: pretty-date'>on ([\w]+ [\d]+, [\d]+ \d+:\d+)</abbr></h2>
Features:

1: LIT|a literal character | 43.5
2: ADD|one-or-more repetition | 4.0
3: CCC|custom character class | 3.0
4: CG|a capture group | 2.0
5: DEC|any of: 0123456789 | 2.0
6: RNG|chars within a range | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0
8: ANY|any non-newline char | 0.5


0000 | 0002 | '# StopWatch ([\\w]+) total/cumulative duration ([0-9.]+). Samples: ([0-9]+)'
0001 | 0001 | "pretty-date'>on ([\\w]+ [\\d]+, [\\d]+ \\d+:\\d+)</abbr></h2>"



cluster 276 stats:
nPatterns: 1.0
nProjects: 3
shortest: \n      ^\s*   # Start of a new line and whitespace\n      /\*    # Opening "/*"\n      .*?    # Non greedy match of any characters (including newlines)\n      \*/    # Closing "*/
Features:

1: LIT|a literal character | 163.0
2: KLE|zero-or-more repetition | 4.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: LZY|as few reps as possible | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | '\n      ^\\s*   # Start of a new line and whitespace\n      /\\*    # Opening "/*"\n      .*?    # Non greedy match of any characters (including newlines)\n      \\*/    # Closing "*/'



cluster 277 stats:
nPatterns: 3.0
nProjects: 3
shortest: ^([0-9]{4})\.([0-9]+)\.([0-9]+)$
Features:

1: LIT|a literal character | 31.333333333333332
2: CCC|custom character class | 12.0
3: RNG|chars within a range | 10.666666666666666
4: CG|a capture group | 4.666666666666667
5: QST|zero-or-one repetition | 3.0
6: OR|logical or | 1.3333333333333333
7: ADD|one-or-more repetition | 1.0
8: END|end-of-line | 0.6666666666666666
9: SNG|exactly n repetition | 0.6666666666666666
10: STR|start-of-line | 0.6666666666666666
11: ANY|any non-newline char | 0.3333333333333333
12: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0002 | '^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'
0001 | 0001 | '^([0-9]{4})-([0-1][0-9])-([0-3][0-9])(-([0-2][0-9])-([0-5][0-9]))? +(.*)$'
0002 | 0001 | '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'



cluster 278 stats:
nPatterns: 1.0
nProjects: 2
shortest: #.*?$
Features:

1: ANY|any non-newline char | 1.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LIT|a literal character | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0002 | '#.*?$'



cluster 279 stats:
nPatterns: 1.0
nProjects: 2
shortest: \w+
Features:

1: ADD|one-or-more repetition | 1.0
2: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | u'\\w+'



cluster 280 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^.*\/
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: STR|start-of-line | 1.0


0000 | 0002 | '^.*\\/'



cluster 281 stats:
nPatterns: 1.0
nProjects: 2
shortest: [\w']+
Features:

1: ADD|one-or-more repetition | 1.0
2: CCC|custom character class | 1.0
3: LIT|a literal character | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | "[\\w']+"



cluster 282 stats:
nPatterns: 1.0
nProjects: 2
shortest: {(.*?)}
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '{(.*?)}'



cluster 283 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?s)>\s+
Features:

1: ADD|one-or-more repetition | 1.0
2: LIT|a literal character | 1.0
3: OPT|options wrapper | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(?s)>\\s+'



cluster 284 stats:
nPatterns: 1.0
nProjects: 2
shortest: [\d\.]+
Features:

1: ADD|one-or-more repetition | 1.0
2: CCC|custom character class | 1.0
3: DEC|any of: 0123456789 | 1.0
4: LIT|a literal character | 1.0


0000 | 0002 | '[\\d\\.]+'



cluster 285 stats:
nPatterns: 1.0
nProjects: 2
shortest: [$^#\\']
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 1.0


0000 | 0002 | "[$^#\\\\']"



cluster 286 stats:
nPatterns: 1.0
nProjects: 2
shortest: (.*//.*?/)
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0002 | '(.*//.*?/)'



cluster 287 stats:
nPatterns: 1.0
nProjects: 2
shortest: [^0-9:\.]
Features:

1: LIT|a literal character | 4.0
2: NCCC|negated CCC | 1.0
3: RNG|chars within a range | 1.0


0000 | 0002 | '[^0-9:\\.]'



cluster 288 stats:
nPatterns: 1.0
nProjects: 2
shortest: \s*\[.*$
Features:

1: KLE|zero-or-more repetition | 2.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: LIT|a literal character | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '\\s*\\[.*$'



cluster 289 stats:
nPatterns: 1.0
nProjects: 2
shortest: \s*,?\s*
Features:

1: KLE|zero-or-more repetition | 2.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: LIT|a literal character | 1.0
4: QST|zero-or-one repetition | 1.0


0000 | 0002 | u'\\s*,?\\s*'



cluster 290 stats:
nPatterns: 1.0
nProjects: 2
shortest: :\s*(#.*)?$
Features:

1: KLE|zero-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: QST|zero-or-one repetition | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | ':\\s*(#.*)?$'



cluster 291 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\s*)<.+> 
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '^(\\s*)<.+> '



cluster 292 stats:
nPatterns: 1.0
nProjects: 2
shortest: ([+-]\d{4})$
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: SNG|exactly n repetition | 1.0


0000 | 0002 | '([+-]\\d{4})$'



cluster 293 stats:
nPatterns: 1.0
nProjects: 2
shortest: ->\s*(\S+)$
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NWSP|any non-whitespace | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '->\\s*(\\S+)$'



cluster 294 stats:
nPatterns: 1.0
nProjects: 2
shortest: \d+(\.\d*)?
Features:

1: DEC|any of: 0123456789 | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LIT|a literal character | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '\\d+(\\.\\d*)?'



cluster 295 stats:
nPatterns: 1.0
nProjects: 2
shortest: <<<(-?\d+?)>>>
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: LZY|as few reps as possible | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '<<<(-?\\d+?)>>>'



cluster 296 stats:
nPatterns: 2.0
nProjects: 2
shortest: abcd
Features:

1: LIT|a literal character | 4.5


0000 | 0001 | 'abcd'
0001 | 0001 | 'vcard'



cluster 297 stats:
nPatterns: 1.0
nProjects: 2
shortest: (\r\n|\n|\r)
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0


0000 | 0002 | '(\\r\\n|\\n|\\r)'



cluster 298 stats:
nPatterns: 2.0
nProjects: 2
shortest: </p>
Features:

1: LIT|a literal character | 5.0


0000 | 0002 | '</p>'
0001 | 0001 | '<p><hr'



cluster 299 stats:
nPatterns: 1.0
nProjects: 2
shortest: Fennec/([\d.]+)
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0


0000 | 0002 | 'Fennec/([\\d.]+)'



cluster 300 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^enum
Features:

1: LIT|a literal character | 4.0
2: STR|start-of-line | 1.0
3: END|end-of-line | 0.5


0000 | 0001 | '^enum'
0001 | 0001 | '^name$'



cluster 301 stats:
nPatterns: 2.0
nProjects: 2
shortest: tree=
Features:

1: LIT|a literal character | 5.5


0000 | 0001 | 'tree='
0001 | 0001 | 'state='



cluster 302 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?m)^alias.*virtio
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: OPT|options wrapper | 1.0
5: STR|start-of-line | 1.0


0000 | 0002 | '(?m)^alias.*virtio'



cluster 303 stats:
nPatterns: 1.0
nProjects: 2
shortest: \s+|(?:\s*,\s*)
Features:

1: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
2: KLE|zero-or-more repetition | 2.0
3: ADD|one-or-more repetition | 1.0
4: LIT|a literal character | 1.0
5: NCG|group without capturing | 1.0
6: OR|logical or | 1.0


0000 | 0002 | '\\s+|(?:\\s*,\\s*)'



cluster 304 stats:
nPatterns: 2.0
nProjects: 2
shortest: '(.*)'
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: END|end-of-line | 0.5


0000 | 0001 | "'(.*)'"
0001 | 0001 | "'(.*)'$"



cluster 305 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?i)handy(.*)nummer
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OPT|options wrapper | 1.0


0000 | 0002 | '(?i)handy(.*)nummer'



cluster 306 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?i)pager(.*)nummer
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OPT|options wrapper | 1.0


0000 | 0002 | '(?i)pager(.*)nummer'



cluster 307 stats:
nPatterns: 2.0
nProjects: 2
shortest: User:
Features:

1: LIT|a literal character | 6.5


0000 | 0001 | 'User:'
0001 | 0001 | 'Address:'



cluster 308 stats:
nPatterns: 1.0
nProjects: 2
shortest: (</?(?:ul|li)[^>]*>)
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0
5: NCG|group without capturing | 1.0
6: OR|logical or | 1.0
7: QST|zero-or-one repetition | 1.0


0000 | 0002 | '(</?(?:ul|li)[^>]*>)'



cluster 309 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([|&])
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0


0000 | 0001 | '([|&])'
0001 | 0001 | '([()| ])'



cluster 310 stats:
nPatterns: 1.0
nProjects: 2
shortest: Subversion Revision:
Features:

1: LIT|a literal character | 20.0


0000 | 0002 | 'Subversion Revision:'



cluster 311 stats:
nPatterns: 1.0
nProjects: 2
shortest: \s*modtime:\s*(.*)
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0


0000 | 0002 | '\\s*modtime:\\s*(.*)'



cluster 312 stats:
nPatterns: 1.0
nProjects: 2
shortest: \s*#*\s*pylint:(.*)
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0


0000 | 0002 | '\\s*#*\\s*pylint:(.*)'



cluster 313 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\w+)\s*=\s*(.+)$
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.0
6: END|end-of-line | 1.0
7: LIT|a literal character | 1.0
8: STR|start-of-line | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '^(\\w+)\\s*=\\s*(.+)$'



cluster 314 stats:
nPatterns: 2.0
nProjects: 2
shortest: [^']+
Features:

1: ADD|one-or-more repetition | 1.5
2: LIT|a literal character | 1.5
3: CCC|custom character class | 1.0
4: END|end-of-line | 0.5
5: NCCC|negated CCC | 0.5
6: OR|logical or | 0.5
7: STR|start-of-line | 0.5


0000 | 0001 | "[^']+"
0001 | 0001 | '^[@]+|[@]+$'



cluster 315 stats:
nPatterns: 1.0
nProjects: 2
shortest: (Saving to:|\s*\d+K)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(Saving to:|\\s*\\d+K)'



cluster 316 stats:
nPatterns: 1.0
nProjects: 2
shortest: ([+-]?[\d\.]+)(\S+)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: DEC|any of: 0123456789 | 1.0
6: NWSP|any non-whitespace | 1.0
7: QST|zero-or-one repetition | 1.0


0000 | 0002 | '([+-]?[\\d\\.]+)(\\S+)'



cluster 317 stats:
nPatterns: 1.0
nProjects: 2
shortest: (\s*)(\\.+?)(\s+)$
Features:

1: CG|a capture group | 3.0
2: ADD|one-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ANY|any non-newline char | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: LIT|a literal character | 1.0
8: LZY|as few reps as possible | 1.0


0000 | 0002 | '(\\s*)(\\\\.+?)(\\s+)$'



cluster 318 stats:
nPatterns: 2.0
nProjects: 2
shortest: [^0-9.]
Features:

1: LIT|a literal character | 3.0
2: RNG|chars within a range | 1.0
3: ADD|one-or-more repetition | 0.5
4: CCC|custom character class | 0.5
5: NCCC|negated CCC | 0.5


0000 | 0001 | '[^0-9.]'
0001 | 0001 | '[0-9]+\\.'



cluster 319 stats:
nPatterns: 2.0
nProjects: 2
shortest: pseudo
Features:

1: LIT|a literal character | 8.5


0000 | 0001 | 'pseudo'
0001 | 0001 | 'method=post'



cluster 320 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?sm)^! Emergency stop.*
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: OPT|options wrapper | 1.0
5: STR|start-of-line | 1.0


0000 | 0002 | '(?sm)^! Emergency stop.*'



cluster 321 stats:
nPatterns: 1.0
nProjects: 2
shortest: .*lib(n?cursesw?)\.so.*
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: QST|zero-or-one repetition | 2.0
5: CG|a capture group | 1.0


0000 | 0002 | '.*lib(n?cursesw?)\\.so.*'



cluster 322 stats:
nPatterns: 1.0
nProjects: 2
shortest: \[tag:\s*([\S]+)\s*]
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: NWSP|any non-whitespace | 1.0


0000 | 0002 | '\\[tag:\\s*([\\S]+)\\s*]'



cluster 323 stats:
nPatterns: 2.0
nProjects: 2
shortest: foo.*bar
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5


0000 | 0002 | 'foo.*bar'
0001 | 0002 | '.*foo.*bar'



cluster 324 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?sm)\s*Type X to quit.*
Features:

1: LIT|a literal character | 14.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: OPT|options wrapper | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(?sm)\\s*Type X to quit.*'



cluster 325 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^Tracks
Features:

1: LIT|a literal character | 9.0
2: STR|start-of-line | 0.5


0000 | 0001 | '^Tracks'
0001 | 0001 | 'create_tasks'



cluster 326 stats:
nPatterns: 1.0
nProjects: 2
shortest: http://([^/]+)(/\S*)\s*
Features:

1: LIT|a literal character | 9.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: NWSP|any non-whitespace | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | 'http://([^/]+)(/\\S*)\\s*'



cluster 327 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?:\d{1,3}\.){3}\d{1,3}
Features:

1: DBB|$n\le x \le m$ repetition | 2.0
2: DEC|any of: 0123456789 | 2.0
3: LIT|a literal character | 1.0
4: NCG|group without capturing | 1.0
5: SNG|exactly n repetition | 1.0


0000 | 0002 | '(?:\\d{1,3}\\.){3}\\d{1,3}'



cluster 328 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?sm)\A.*?!( LaTeX Error:)?
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: OPT|options wrapper | 1.0
7: QST|zero-or-one repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0002 | '(?sm)\\A.*?!( LaTeX Error:)?'



cluster 329 stats:
nPatterns: 1.0
nProjects: 2
shortest: (.*?)([\\\{\}\[\]])(.*)
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 3.0
3: ANY|any non-newline char | 2.0
4: KLE|zero-or-more repetition | 2.0
5: CCC|custom character class | 1.0
6: LZY|as few reps as possible | 1.0


0000 | 0002 | '(.*?)([\\\\\\{\\}\\[\\]])(.*)'



cluster 330 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^\s+:template:\s*(.*?)\s*$
Features:

1: LIT|a literal character | 10.0
2: KLE|zero-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0
8: LZY|as few reps as possible | 1.0
9: STR|start-of-line | 1.0


0000 | 0002 | '^\\s+:template:\\s*(.*?)\\s*$'



cluster 331 stats:
nPatterns: 1.0
nProjects: 2
shortest: range\([ ]*([-]?\d+|n).*\)
Features:

1: LIT|a literal character | 10.0
2: CCC|custom character class | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: DEC|any of: 0123456789 | 1.0
8: OR|logical or | 1.0
9: QST|zero-or-one repetition | 1.0


0000 | 0002 | 'range\\([ ]*([-]?\\d+|n).*\\)'



cluster 332 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?i)gesch\xc3\xa4fts(.*)nummer
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OPT|options wrapper | 1.0


0000 | 0002 | '(?i)gesch\xc3\xa4fts(.*)nummer'



cluster 333 stats:
nPatterns: 2.0
nProjects: 2
shortest: <[^/?!]?\w+
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: NLKA|sequence doesn't follow  | 0.5
5: QST|zero-or-one repetition | 0.5
6: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '<(?!!)[^>]+>'
0001 | 0001 | '<[^/?!]?\\w+'



cluster 334 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^dim4\s+
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.5
3: STR|start-of-line | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
5: CG|a capture group | 0.5
6: DEC|any of: 0123456789 | 0.5


0000 | 0001 | '^dim4\\s+'
0001 | 0001 | '^Uid:\\s+(\\d+)'



cluster 335 stats:
nPatterns: 1.0
nProjects: 2
shortest: the LaTeX files are in (.*)\.
Features:

1: LIT|a literal character | 24.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0002 | 'the LaTeX files are in (.*)\\.'



cluster 336 stats:
nPatterns: 2.0
nProjects: 2
shortest: \S{1,10}
Features:

1: LIT|a literal character | 2.0
2: DBB|$n\le x \le m$ repetition | 1.0
3: CCC|custom character class | 0.5
4: NWSP|any non-whitespace | 0.5


0000 | 0001 | '\\S{1,10}'
0001 | 0001 | '\x1b\\[[0]{0,1}m'



cluster 337 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?s)<failure (.*?)>.*?</failure>
Features:

1: LIT|a literal character | 20.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 2.0
5: CG|a capture group | 1.0
6: OPT|options wrapper | 1.0


0000 | 0002 | '(?s)<failure (.*?)>.*?</failure>'



cluster 338 stats:
nPatterns: 2.0
nProjects: 2
shortest: </body
Features:

1: LIT|a literal character | 10.5
2: KLE|zero-or-more repetition | 0.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '</body'
0001 | 0001 | u'</tbody>\\s*<tbody>'



cluster 339 stats:
nPatterns: 1.0
nProjects: 2
shortest: This is file for test of tar-in.
Features:

1: LIT|a literal character | 31.0
2: ANY|any non-newline char | 1.0


0000 | 0002 | 'This is file for test of tar-in.'



cluster 340 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^private_
Features:

1: LIT|a literal character | 11.5
2: STR|start-of-line | 1.0
3: END|end-of-line | 0.5


0000 | 0001 | '^private_'
0001 | 0001 | '^parrot_string_t$'



cluster 341 stats:
nPatterns: 2.0
nProjects: 2
shortest:  at -?0x[^>]+
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 0.5
4: NCCC|negated CCC | 0.5
5: QST|zero-or-one repetition | 0.5
6: RNG|chars within a range | 0.5


0000 | 0001 | ' at -?0x[^>]+'
0001 | 0001 | 'total = [0-9]+'



cluster 342 stats:
nPatterns: 1.0
nProjects: 2
shortest: @import url\((?P<filename>.*)\)
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0


0000 | 0002 | '@import url\\((?P<filename>.*)\\)'



cluster 343 stats:
nPatterns: 1.0
nProjects: 2
shortest: SNIPPET::([A-Za-z0-9_\-\/\.]+)
Features:

1: LIT|a literal character | 19.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0


0000 | 0002 | 'SNIPPET::([A-Za-z0-9_\\-\\/\\.]+)'



cluster 344 stats:
nPatterns: 2.0
nProjects: 2
shortest: \^headers\^$
Features:

1: LIT|a literal character | 8.5
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 0.5
4: STR|start-of-line | 0.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '\\^headers\\^$'
0001 | 0001 | '^removed:\\s*$'



cluster 345 stats:
nPatterns: 2.0
nProjects: 2
shortest: {(.*)}$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: DBB|$n\le x \le m$ repetition | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: CG|a capture group | 0.5
7: LKA|matching sequence follows | 0.5
8: LZY|as few reps as possible | 0.5
9: OR|logical or | 0.5


0000 | 0001 | '{(.*)}$'
0001 | 0001 | '/{1,2}.*?(?=/{1,2}|$)'



cluster 346 stats:
nPatterns: 2.0
nProjects: 2
shortest: \?Page=(\d+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: CG|a capture group | 0.5
5: LKB|matching sequence precedes | 0.5


0000 | 0001 | '\\?Page=(\\d+)'
0001 | 0001 | '(?<= line )\\d+'



cluster 347 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(?:852-?)?(\d{4})[-\.]?(\d{4})$
Features:

1: LIT|a literal character | 6.0
2: QST|zero-or-one repetition | 3.0
3: CG|a capture group | 2.0
4: DEC|any of: 0123456789 | 2.0
5: SNG|exactly n repetition | 2.0
6: CCC|custom character class | 1.0
7: END|end-of-line | 1.0
8: NCG|group without capturing | 1.0
9: STR|start-of-line | 1.0


0000 | 0002 | '^(?:852-?)?(\\d{4})[-\\.]?(\\d{4})$'



cluster 348 stats:
nPatterns: 2.0
nProjects: 2
shortest: wl_apsta.*
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.0
4: CG|a capture group | 0.5


0000 | 0001 | 'wl_apsta.*'
0001 | 0001 | 'power_(.*).template'



cluster 349 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?m)^alias\s+scsi|(?m)^alias\s+eth
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 2.0
3: OPT|options wrapper | 2.0
4: STR|start-of-line | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: OR|logical or | 1.0


0000 | 0002 | '(?m)^alias\\s+scsi|(?m)^alias\\s+eth'



cluster 350 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\s+\(release-func\s+)(\w+)(.*)$
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '^(\\s+\\(release-func\\s+)(\\w+)(.*)$'



cluster 351 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^compile
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: CCC|custom character class | 0.5
5: CG|a capture group | 0.5
6: STR|start-of-line | 0.5


0000 | 0002 | '^compile'
0001 | 0002 | '[^%]+%[^.]+[.](compile)'



cluster 352 stats:
nPatterns: 1.0
nProjects: 2
shortest: fail:(\d+).*?fail:(\d+).*fail:(\d+)
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: DEC|any of: 0123456789 | 3.0
5: ANY|any non-newline char | 2.0
6: KLE|zero-or-more repetition | 2.0
7: LZY|as few reps as possible | 1.0


0000 | 0002 | 'fail:(\\d+).*?fail:(\\d+).*fail:(\\d+)'



cluster 353 stats:
nPatterns: 2.0
nProjects: 2
shortest: /data[^ ]*/hphp
Features:

1: LIT|a literal character | 9.5
2: KLE|zero-or-more repetition | 1.5
3: NCCC|negated CCC | 1.0
4: ANY|any non-newline char | 0.5
5: CG|a capture group | 0.5


0000 | 0001 | 'http://[^/]*(.*)'
0001 | 0001 | u'/data[^ ]*/hphp'



cluster 354 stats:
nPatterns: 2.0
nProjects: 2
shortest: REPLACEHEREDUDE
Features:

1: LIT|a literal character | 16.5


0000 | 0001 | 'REPLACEHEREDUDE'
0001 | 0001 | 'DBAPI2_PLACEHOLDER'



cluster 355 stats:
nPatterns: 2.0
nProjects: 2
shortest: [/\\?\*:]
Features:

1: LIT|a literal character | 6.5
2: CCC|custom character class | 0.5
3: KLE|zero-or-more repetition | 0.5
4: NCCC|negated CCC | 0.5
5: STR|start-of-line | 0.5


0000 | 0001 | '[/\\\\?\\*:]'
0001 | 0001 | '^file\\:\\/\\/[^\\?]*'



cluster 356 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\+[3-9]{1,}|\+{3,}|\+[1-9][0-9]+)$
Features:

1: LIT|a literal character | 9.0
2: CCC|custom character class | 3.0
3: RNG|chars within a range | 3.0
4: LWB|at least n repetition | 2.0
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0
8: OR|logical or | 1.0
9: STR|start-of-line | 1.0


0000 | 0002 | '^(\\+[3-9]{1,}|\\+{3,}|\\+[1-9][0-9]+)$'



cluster 357 stats:
nPatterns: 1.0
nProjects: 2
shortest: #\s*-\*-\s+coding:\s+(\w+)\s+-\*-
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '#\\s*-\\*-\\s+coding:\\s+(\\w+)\\s+-\\*-'



cluster 358 stats:
nPatterns: 2.0
nProjects: 2
shortest: UNSEEN\s+(\d+)
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | 'UNSEEN\\s+(\\d+)'
0001 | 0001 | 'SUBDATASET_(\\d+)_'



cluster 359 stats:
nPatterns: 1.0
nProjects: 2
shortest: \s*([^\s\(\)"\\'=,\[\]/\?]+)\s*
Features:

1: LIT|a literal character | 11.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NCCC|negated CCC | 1.0


0000 | 0002 | '\\s*([^\\s\\(\\)"\\\'=,\\[\\]/\\?]+)\\s*'



cluster 360 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^restorecon reset (.+) context (.+)->(.+)
Features:

1: LIT|a literal character | 28.0
2: ADD|one-or-more repetition | 3.0
3: ANY|any non-newline char | 3.0
4: CG|a capture group | 3.0
5: STR|start-of-line | 1.0


0000 | 0002 | '^restorecon reset (.+) context (.+)->(.+)'



cluster 361 stats:
nPatterns: 2.0
nProjects: 2
shortest: (\S+):\s*(.*)
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.5
4: CG|a capture group | 1.5
5: ADD|one-or-more repetition | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: NWSP|any non-whitespace | 0.5


0000 | 0001 | '(\\S+):\\s*(.*)'
0001 | 0001 | '.*PKGINST:\\s+(.*)\\n'



cluster 362 stats:
nPatterns: 1.0
nProjects: 2
shortest: <span id=short-desc-content>([^<]*)</span>
Features:

1: LIT|a literal character | 36.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0002 | '<span id=short-desc-content>([^<]*)</span>'



cluster 363 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^(.*?) - (.*?)$
Features:

1: LIT|a literal character | 6.5
2: ANY|any non-newline char | 2.5
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: END|end-of-line | 1.0
6: LZY|as few reps as possible | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^(.*?) - (.*?)$'
0001 | 0001 | '^(.*)PS 3.6-2007(.*)$'



cluster 364 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(..[^\(:]+)?[\(:](\d+)[\):]:?\s*(.*)
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 3.0
3: CG|a capture group | 3.0
4: ADD|one-or-more repetition | 2.0
5: CCC|custom character class | 2.0
6: KLE|zero-or-more repetition | 2.0
7: QST|zero-or-one repetition | 2.0
8: DEC|any of: 0123456789 | 1.0
9: NCCC|negated CCC | 1.0
10: STR|start-of-line | 1.0
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '^(..[^\\(:]+)?[\\(:](\\d+)[\\):]:?\\s*(.*)'



cluster 365 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*(Rep|Sen). (.+)$
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: KLE|zero-or-more repetition | 1.0
6: END|end-of-line | 0.5
7: NWSP|any non-whitespace | 0.5
8: OR|logical or | 0.5


0000 | 0001 | '.*(Rep|Sen). (.+)$'
0001 | 0001 | 'typedef (\\S+) (.*)'



cluster 366 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(\s+\(return-type\s+)([^\s]+)(\s*\))$
Features:

1: LIT|a literal character | 13.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
3: ADD|one-or-more repetition | 3.0
4: CG|a capture group | 3.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0
8: STR|start-of-line | 1.0


0000 | 0002 | '^(\\s+\\(return-type\\s+)([^\\s]+)(\\s*\\))$'



cluster 367 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^([0-9]+)-.+/.+$
Features:

1: LIT|a literal character | 5.5
2: ADD|one-or-more repetition | 2.5
3: CG|a capture group | 1.5
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: END|end-of-line | 1.0
7: RNG|chars within a range | 1.0
8: STR|start-of-line | 1.0
9: NCCC|negated CCC | 0.5


0000 | 0001 | '^([0-9]+)-.+/.+$'
0001 | 0001 | '^([^ ]+) = ([0-9\\.]+)$'



cluster 368 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(fails|needs-focus|random|skip|asserts|fuzzy)
Features:

1: LIT|a literal character | 38.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: STR|start-of-line | 1.0


0000 | 0002 | '^(fails|needs-focus|random|skip|asserts|fuzzy)'



cluster 369 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^:.*[MAD]\s+(.+)$
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 2.5
3: ANY|any non-newline char | 1.5
4: CG|a capture group | 1.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0
9: CCC|custom character class | 0.5
10: NCCC|negated CCC | 0.5


0000 | 0001 | '^:.*[MAD]\\s+(.+)$'
0001 | 0001 | '^([^:]+):\\s+(.+)\\s*$'



cluster 370 stats:
nPatterns: 2.0
nProjects: 2
shortest: install_dir .+\n
Features:

1: LIT|a literal character | 11.5
2: ANY|any non-newline char | 1.5
3: DEC|any of: 0123456789 | 1.0
4: SNG|exactly n repetition | 1.0
5: ADD|one-or-more repetition | 0.5


0000 | 0001 | 'install_dir .+\n'
0001 | 0001 | 'affils.ast.\\d{8}_\\d{4}'



cluster 371 stats:
nPatterns: 2.0
nProjects: 2
shortest: <h1[^>]*>(.+?)</h1>
Features:

1: LIT|a literal character | 13.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0
5: ADD|one-or-more repetition | 0.5
6: ANY|any non-newline char | 0.5
7: LZY|as few reps as possible | 0.5


0000 | 0001 | '<h1[^>]*>(.+?)</h1>'
0001 | 0001 | '<TITLE>([^<]*)</TITLE>'



cluster 372 stats:
nPatterns: 1.0
nProjects: 2
shortest: [^%]+%testing[.](expect-failure|expect-success)
Features:

1: LIT|a literal character | 38.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: NCCC|negated CCC | 1.0
6: OR|logical or | 1.0


0000 | 0002 | '[^%]+%testing[.](expect-failure|expect-success)'



cluster 373 stats:
nPatterns: 2.0
nProjects: 2
shortest: (.*?)\s+<(.*)>
Features:

1: LIT|a literal character | 3.5
2: CG|a capture group | 1.5
3: KLE|zero-or-more repetition | 1.5
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: LZY|as few reps as possible | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
8: BKR|match the $i^{th}$ CG | 0.5
9: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '(.*?)\\s+<(.*)>'
0001 | 0001 | '\\<(\\w+?)\\>\\s*\\</\\1\\>'



cluster 374 stats:
nPatterns: 2.0
nProjects: 2
shortest: \S+buildout.py
Features:

1: LIT|a literal character | 13.5
2: ADD|one-or-more repetition | 1.0
3: WRD|[a-zA-Z0-9\_] | 1.0
4: ANY|any non-newline char | 0.5
5: DEC|any of: 0123456789 | 0.5
6: NWSP|any non-whitespace | 0.5


0000 | 0001 | '\\S+buildout.py'
0001 | 0001 | 'billtype=\\w\\w&billno=\\d+'



cluster 375 stats:
nPatterns: 2.0
nProjects: 2
shortest: [\(\)\s,]+
Features:

1: LIT|a literal character | 7.5
2: CCC|custom character class | 1.5
3: ADD|one-or-more repetition | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: CG|a capture group | 0.5


0000 | 0001 | '[\\(\\)\\s,]+'
0001 | 0001 | 'AC_INIT[(][^,]*,\\s+([^)]*)[)]'



cluster 376 stats:
nPatterns: 2.0
nProjects: 2
shortest: \(applications/\(.*
Features:

1: LIT|a literal character | 13.5
2: KLE|zero-or-more repetition | 1.0
3: ANY|any non-newline char | 0.5
4: CCC|custom character class | 0.5
5: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | '\\(applications/\\(.*'
0001 | 0001 | 'action="[\\w\\.\\-/]*"'



cluster 377 stats:
nPatterns: 2.0
nProjects: 2
shortest: {{{([^{]+?)}}}
Features:

1: LIT|a literal character | 6.5
2: CG|a capture group | 1.5
3: ADD|one-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0
5: CCC|custom character class | 0.5
6: END|end-of-line | 0.5
7: LZY|as few reps as possible | 0.5
8: QST|zero-or-one repetition | 0.5
9: STR|start-of-line | 0.5


0000 | 0001 | '{{{([^{]+?)}}}'
0001 | 0001 | '^([+\\-])?\\$([^\\$\\{\\}]+)$'



cluster 378 stats:
nPatterns: 2.0
nProjects: 2
shortest: <code>([^<]+)</code>
Features:

1: LIT|a literal character | 16.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '<code>([^<]+)</code>'
0001 | 0001 | '<WebEnv>([^>]+)</WebEnv>'



cluster 379 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^\s*@return\s+(?P<type>\w+)(?:\s+(?P<doc>.*))?
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: KLE|zero-or-more repetition | 2.0
5: PNG|named capture group | 2.0
6: ANY|any non-newline char | 1.0
7: NCG|group without capturing | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '^\\s*@return\\s+(?P<type>\\w+)(?:\\s+(?P<doc>.*))?'



cluster 380 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*/vote_history.pdf
Features:

1: LIT|a literal character | 18.0
2: ANY|any non-newline char | 2.5
3: DEC|any of: 0123456789 | 0.5
4: KLE|zero-or-more repetition | 0.5


0000 | 0001 | '.*/vote_history.pdf'
0001 | 0001 | 'dhcp.option.ntp_server.\\d'



cluster 381 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^/(artist|release|track|label|release-group)/([^/]*)$
Features:

1: LIT|a literal character | 39.0
2: CG|a capture group | 2.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0
6: OR|logical or | 1.0
7: STR|start-of-line | 1.0


0000 | 0002 | '^/(artist|release|track|label|release-group)/([^/]*)$'



cluster 382 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^New Revision: (\d+)
Features:

1: LIT|a literal character | 13.5
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: STR|start-of-line | 0.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '^New Revision: (\\d+)'
0001 | 0001 | 'NUMA node\\(s\\):\\s+(\\d+)'



cluster 383 stats:
nPatterns: 2.0
nProjects: 2
shortest: [RL]\{(.+)\}
Features:

1: LIT|a literal character | 7.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: ADD|one-or-more repetition | 0.5
5: ANY|any non-newline char | 0.5


0000 | 0001 | '[RL]\\{(.+)\\}'
0001 | 0001 | '([\\|\\{\\}\\\\\\.\\+\\[\\]\\(\\)])'



cluster 384 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^<Actions>(.+)$
Features:

1: LIT|a literal character | 18.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: ANY|any non-newline char | 0.5
5: END|end-of-line | 0.5
6: NCCC|negated CCC | 0.5
7: STR|start-of-line | 0.5


0000 | 0001 | '^<Actions>(.+)$'
0001 | 0001 | '<description>([^<]+)</description>'



cluster 385 stats:
nPatterns: 2.0
nProjects: 2
shortest: mozilla\.[com|net|org]
Features:

1: LIT|a literal character | 21.0
2: CCC|custom character class | 1.0
3: ADD|one-or-more repetition | 0.5
4: RNG|chars within a range | 0.5


0000 | 0001 | 'mozilla\\.[com|net|org]'
0001 | 0001 | 'Starting glance-[a-z]+ with'



cluster 386 stats:
nPatterns: 2.0
nProjects: 2
shortest: \b[A-Z](\.[A-Za-z])+\b
Features:

1: LIT|a literal character | 7.0
2: RNG|chars within a range | 2.5
3: CCC|custom character class | 1.5
4: CG|a capture group | 1.5
5: ADD|one-or-more repetition | 1.0
6: KLE|zero-or-more repetition | 1.0
7: WNW|word/non-word boundary | 1.0
8: ANY|any non-newline char | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '\\b[A-Z](\\.[A-Za-z])+\\b'
0001 | 0001 | '([a-zA-Z-]+)\\s*\\((.*)\\)'



cluster 387 stats:
nPatterns: 1.0
nProjects: 2
shortest: \s*#define\s+([a-zA-Z][a-zA-Z_0-9]*)\s+([a-zA-Z_0-9]+)
Features:

1: LIT|a literal character | 25.0
2: RNG|chars within a range | 8.0
3: ADD|one-or-more repetition | 3.0
4: CCC|custom character class | 3.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
6: CG|a capture group | 2.0
7: KLE|zero-or-more repetition | 2.0


0000 | 0002 | '\\s*#define\\s+([a-zA-Z][a-zA-Z_0-9]*)\\s+([a-zA-Z_0-9]+)'



cluster 388 stats:
nPatterns: 2.0
nProjects: 2
shortest: /gs/[a-z0-9\.\-_]{3,}$
Features:

1: LIT|a literal character | 10.5
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.5
4: END|end-of-line | 1.0
5: LWB|at least n repetition | 1.0
6: STR|start-of-line | 0.5


0000 | 0001 | '/gs/[a-z0-9\\.\\-_]{3,}$'
0001 | 0001 | '^[a-z0-9][a-z0-9\\.\\-]{2,}$'



cluster 389 stats:
nPatterns: 2.0
nProjects: 2
shortest: \s*([a-f0-9]+):.*
Features:

1: LIT|a literal character | 8.5
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 2.0
4: RNG|chars within a range | 2.0
5: ADD|one-or-more repetition | 1.0
6: CCC|custom character class | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
8: ANY|any non-newline char | 0.5
9: NCCC|negated CCC | 0.5


0000 | 0001 | '\\s*([a-f0-9]+):.*'
0001 | 0001 | '(\\s*)([A-F0-9]*) /\\* ([^ ]+) \\*/'



cluster 390 stats:
nPatterns: 4.0
nProjects: 2
shortest: \nJoliet
Features:

1: LIT|a literal character | 9.75


0000 | 0001 | '\nJoliet'
0001 | 0001 | '<tr valign'
0002 | 0001 | '\nEl Torito'
0003 | 0001 | 'internal log'



cluster 391 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([+-]?\d+)
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 3.5
3: DEC|any of: 0123456789 | 2.0
4: CG|a capture group | 1.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
6: CCC|custom character class | 1.0
7: QST|zero-or-one repetition | 0.5


0000 | 0001 | '([+-]?\\d+)'
0001 | 0001 | 'TOTAL\\s+(\\d+)\\s+[\\-\\d\\.]+\\%\\s+(\\d+)'



cluster 392 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^START TIME:\s(.*)$
Features:

1: LIT|a literal character | 13.5
2: KLE|zero-or-more repetition | 2.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: NWSP|any non-whitespace | 0.5


0000 | 0001 | '^START TIME:\\s(.*)$'
0001 | 0001 | '^\\s*DATS_FREE_DISKS\\s*=(.*\\S)\\s*$'



cluster 393 stats:
nPatterns: 2.0
nProjects: 2
shortest: ={"pv" : "(?P<n>[0-9]+)"}
Features:

1: LIT|a literal character | 16.5
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: RNG|chars within a range | 1.0
5: CG|a capture group | 0.5
6: LKA|matching sequence follows | 0.5
7: LKB|matching sequence precedes | 0.5
8: PNG|named capture group | 0.5


0000 | 0001 | '={"pv" : "(?P<n>[0-9]+)"}'
0001 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'



cluster 394 stats:
nPatterns: 3.0
nProjects: 2
shortest: ^.htaccess$
Features:

1: LIT|a literal character | 13.0
2: END|end-of-line | 1.0
3: STR|start-of-line | 1.0
4: ANY|any non-newline char | 0.3333333333333333


0000 | 0001 | '^.htaccess$'
0001 | 0001 | '^dhcp\\.pool\\.start$'
0002 | 0001 | '^dhcp\\.scope\\.start$'



cluster 395 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^\s*(>>> )?(\.\.\. )?raise(\s+(\\'|\")|\s*(\(\s*)+(\\'|\"))
Features:

1: LIT|a literal character | 20.0
2: CG|a capture group | 6.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: KLE|zero-or-more repetition | 3.0
5: OR|logical or | 3.0
6: ADD|one-or-more repetition | 2.0
7: QST|zero-or-one repetition | 2.0
8: STR|start-of-line | 1.0


0000 | 0002 | '^\\s*(>>> )?(\\.\\.\\. )?raise(\\s+(\\\'|\\")|\\s*(\\(\\s*)+(\\\'|\\"))'



cluster 396 stats:
nPatterns: 2.0
nProjects: 2
shortest: Sparse is better than dense
Features:

1: LIT|a literal character | 33.0


0000 | 0001 | 'Sparse is better than dense'
0001 | 0001 | "Warning--I didn't find a database entry"



cluster 397 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^(?P<date>\d{4}-\d{2}-\d{2})\s+(?P<name>.+?)\s+<(?P<email>[^<>]+)>$
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 4.0
3: DEC|any of: 0123456789 | 3.0
4: PNG|named capture group | 3.0
5: SNG|exactly n repetition | 3.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
7: ANY|any non-newline char | 1.0
8: END|end-of-line | 1.0
9: LZY|as few reps as possible | 1.0
10: NCCC|negated CCC | 1.0
11: STR|start-of-line | 1.0


0000 | 0002 | '^(?P<date>\\d{4}-\\d{2}-\\d{2})\\s+(?P<name>.+?)\\s+<(?P<email>[^<>]+)>$'



cluster 398 stats:
nPatterns: 1.0
nProjects: 2
shortest: ([^:]*):\s+scsi([0-9]+)\s+channel=([0-9]+)\s+id=([0-9]+)\s+lun=([0-9]+)
Features:

1: LIT|a literal character | 29.0
2: ADD|one-or-more repetition | 8.0
3: CG|a capture group | 5.0
4: CCC|custom character class | 4.0
5: RNG|chars within a range | 4.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
7: KLE|zero-or-more repetition | 1.0
8: NCCC|negated CCC | 1.0


0000 | 0002 | '([^:]*):\\s+scsi([0-9]+)\\s+channel=([0-9]+)\\s+id=([0-9]+)\\s+lun=([0-9]+)'



cluster 399 stats:
nPatterns: 2.0
nProjects: 2
shortest: var-bind=[\'"](.*)["\']
Features:

1: LIT|a literal character | 13.0
2: CCC|custom character class | 2.5
3: KLE|zero-or-more repetition | 1.5
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
5: ADD|one-or-more repetition | 0.5
6: ANY|any non-newline char | 0.5
7: CG|a capture group | 0.5
8: DEC|any of: 0123456789 | 0.5
9: PNG|named capture group | 0.5


0000 | 0001 | 'var-bind=[\'"](.*)["\']'
0001 | 0001 | 'version\\s*=\\s*[\'"](?P<version>[\\d\\.]+)[\'"]'



cluster 400 stats:
nPatterns: 2.0
nProjects: 2
shortest: Mobile; rv:([\d.]+)
Features:

1: LIT|a literal character | 19.5
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: DEC|any of: 0123456789 | 2.0


0000 | 0001 | 'Mobile; rv:([\\d.]+)'
0001 | 0001 | u'MatplotlibBox:\\(([\\d.]+)pt\\+([\\d.]+)pt\\)x([\\d.]+)pt'



cluster 401 stats:
nPatterns: 2.0
nProjects: 2
shortest: mk_individual_id_t=(\d+)
Features:

1: LIT|a literal character | 23.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: DEC|any of: 0123456789 | 1.5
5: CCC|custom character class | 0.5
6: QST|zero-or-one repetition | 0.5
7: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | 'mk_individual_id_t=(\\d+)'
0001 | 0001 | '(takes [\\w ]+ )(\\d+)( arguments? \\()(\\d+)( given\\))'



cluster 402 stats:
nPatterns: 2.0
nProjects: 2
shortest: <FRAME SRC="(.*?)" NAME="CONTENT"
Features:

1: LIT|a literal character | 27.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: LZY|as few reps as possible | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '<FRAME SRC="(.*?)" NAME="CONTENT"'
0001 | 0001 | 'MARIONETTE_CONTEXT(\\s*)=(\\s*)[\'|\\"](.*?)[\'|\\"];'



cluster 403 stats:
nPatterns: 2.0
nProjects: 2
shortest: :ext:([^@]+@)?(?P<hostname>[^:/]+)
Features:

1: LIT|a literal character | 7.5
2: ADD|one-or-more repetition | 2.0
3: NCCC|negated CCC | 2.0
4: PNG|named capture group | 2.0
5: QST|zero-or-one repetition | 1.0
6: ANY|any non-newline char | 0.5
7: CG|a capture group | 0.5
8: DEC|any of: 0123456789 | 0.5
9: END|end-of-line | 0.5
10: KLE|zero-or-more repetition | 0.5
11: STR|start-of-line | 0.5


0000 | 0001 | ':ext:([^@]+@)?(?P<hostname>[^:/]+)'
0001 | 0001 | '^R(?P<reps>\\d+)?/(?P<start>[^P][^/]*)/(?P<intv>P.+)$'



cluster 404 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?P<argkey>[^=]+)=(?P<argvalue>[^&]*)
Features:

1: LIT|a literal character | 5.5
2: ADD|one-or-more repetition | 2.0
3: PNG|named capture group | 2.0
4: KLE|zero-or-more repetition | 1.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
6: NCCC|negated CCC | 1.0
7: WRD|[a-zA-Z0-9\_] | 1.0
8: CCC|custom character class | 0.5
9: QST|zero-or-one repetition | 0.5


0000 | 0001 | '(?P<argkey>[^=]+)=(?P<argvalue>[^&]*)'
0001 | 0001 | '#\\s*define\\s+(?P<key>\\w+)(?P<value>\\s+[\\w"]*)?'



cluster 405 stats:
nPatterns: 2.0
nProjects: 2
shortest: fixed:\s+([\w.+~-]+(\s+[\w.+~:-]+)?)
Features:

1: LIT|a literal character | 11.5
2: ADD|one-or-more repetition | 3.5
3: CCC|custom character class | 2.5
4: DEC|any of: 0123456789 | 2.5
5: QST|zero-or-one repetition | 2.5
6: NCG|group without capturing | 1.5
7: CG|a capture group | 1.0
8: KLE|zero-or-more repetition | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
11: OR|logical or | 0.5


0000 | 0001 | 'fixed:\\s+([\\w.+~-]+(\\s+[\\w.+~:-]+)?)'
0001 | 0001 | '[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'



cluster 406 stats:
nPatterns: 2.0
nProjects: 2
shortest: (\n?)-  ([a-zA-Z_.-]+)-script.py\n-  \2.exe\n
Features:

1: LIT|a literal character | 34.0
2: RNG|chars within a range | 2.5
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: QST|zero-or-one repetition | 1.0
7: ADD|one-or-more repetition | 0.5
8: BKR|match the $i^{th}$ CG | 0.5
9: KLE|zero-or-more repetition | 0.5


0000 | 0001 | '(\n?)-  ([a-zA-Z_.-]+)-script.py\n-  \\2.exe\n'
0001 | 0001 | 'membase-server-enterprise_x86(_64)?_([.a-zA-Z0-9]*)'



cluster 407 stats:
nPatterns: 3.0
nProjects: 2
shortest: Name=([\w\.]+)
Features:

1: LIT|a literal character | 9.0
2: KLE|zero-or-more repetition | 2.3333333333333335
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.3333333333333335
4: ADD|one-or-more repetition | 2.0
5: CCC|custom character class | 1.3333333333333333
6: CG|a capture group | 1.3333333333333333
7: ANY|any non-newline char | 1.0
8: NWSP|any non-whitespace | 0.6666666666666666
9: NCCC|negated CCC | 0.3333333333333333
10: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0001 | 'Name=([\\w\\.]+)'
0001 | 0001 | '(\\S+\\s*)[.]shape\\s*=[^=]\\s*(.+)'
0002 | 0001 | '(\\S+\\s*[(].+),\\s*savespace\\s*=.+\\s*[)]'



cluster 408 stats:
nPatterns: 1.0
nProjects: 2
shortest: ^((?P<retval>[^=]+?)\s*=|class)?\s*(?P<head>[\w\.]+\s?\(.*?\))\s*(?P<sep>[:<>=-]*)\s*(?P<tail>.*)$
Features:

1: LIT|a literal character | 15.0
2: KLE|zero-or-more repetition | 7.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
4: PNG|named capture group | 4.0
5: ADD|one-or-more repetition | 2.0
6: ANY|any non-newline char | 2.0
7: CCC|custom character class | 2.0
8: LZY|as few reps as possible | 2.0
9: QST|zero-or-one repetition | 2.0
10: CG|a capture group | 1.0
11: END|end-of-line | 1.0
12: NCCC|negated CCC | 1.0
13: OR|logical or | 1.0
14: STR|start-of-line | 1.0
15: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '^((?P<retval>[^=]+?)\\s*=|class)?\\s*(?P<head>[\\w\\.]+\\s?\\(.*?\\))\\s*(?P<sep>[:<>=-]*)\\s*(?P<tail>.*)$'



cluster 409 stats:
nPatterns: 2.0
nProjects: 2
shortest: [-+]?(\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?
Features:

1: LIT|a literal character | 8.0
2: DEC|any of: 0123456789 | 4.5
3: QST|zero-or-one repetition | 4.0
4: ADD|one-or-more repetition | 3.0
5: CCC|custom character class | 3.0
6: CG|a capture group | 2.5
7: KLE|zero-or-more repetition | 1.5
8: NCG|group without capturing | 1.5
9: OR|logical or | 1.0


0000 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0001 | 0001 | '([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'



cluster 410 stats:
nPatterns: 1.0
nProjects: 2
shortest: ((final|abstract)[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?class[ \t]+\w+((implements|extends)\w+)?
Features:

1: LIT|a literal character | 71.0
2: CG|a capture group | 7.0
3: ADD|one-or-more repetition | 6.0
4: CCC|custom character class | 4.0
5: QST|zero-or-one repetition | 4.0
6: OR|logical or | 3.0
7: WRD|[a-zA-Z0-9\_] | 2.0


0000 | 0002 | '((final|abstract)[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?class[ \t]+\\w+((implements|extends)\\w+)?'



cluster 411 stats:
nPatterns: 2.0
nProjects: 2
shortest: Chrome|Gecko|Microsoft|Mozilla|Safari|WebKit
Features:

1: LIT|a literal character | 50.5
2: OR|logical or | 1.0


0000 | 0001 | 'Chrome|Gecko|Microsoft|Mozilla|Safari|WebKit'
0001 | 0001 | 'test_|LookupTable|Types|SystemConfiguration|gannet|Socket|Timings|cs_'



cluster 412 stats:
nPatterns: 2.0
nProjects: 2
shortest: 1234567890
Features:

1: LIT|a literal character | 18.5


0000 | 0001 | '1234567890'
0001 | 0001 | '\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x86\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xbe\xd1\x81\xd1\x82'



cluster 413 stats:
nPatterns: 2.0
nProjects: 2
shortest: ([A-Z]{2}[0-9]{2,3}-[0-9]{2})
Features:

1: LIT|a literal character | 24.5
2: RNG|chars within a range | 10.5
3: CCC|custom character class | 7.5
4: CG|a capture group | 1.0
5: SNG|exactly n repetition | 1.0
6: DBB|$n\le x \le m$ repetition | 0.5
7: OR|logical or | 0.5


0000 | 0001 | '([A-Z]{2}[0-9]{2,3}-[0-9]{2})'
0001 | 0001 | '([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])'



cluster 414 stats:
nPatterns: 2.0
nProjects: 2
shortest: [Ee]rr(or)?: (?P<error>.+?(Could not match (?P<near>.+?))?) at /.+?:(?P<line>\d+)?
Features:

1: LIT|a literal character | 26.5
2: PNG|named capture group | 3.5
3: ADD|one-or-more repetition | 3.0
4: QST|zero-or-one repetition | 2.5
5: ANY|any non-newline char | 1.5
6: LZY|as few reps as possible | 1.5
7: CG|a capture group | 1.0
8: DEC|any of: 0123456789 | 1.0
9: CCC|custom character class | 0.5
10: KLE|zero-or-more repetition | 0.5
11: NCCC|negated CCC | 0.5
12: NWSP|any non-whitespace | 0.5
13: OR|logical or | 0.5
14: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '[Ee]rr(or)?: (?P<error>.+?(Could not match (?P<near>.+?))?) at /.+?:(?P<line>\\d+)?'
0001 | 0001 | '(?P<protocol>PYROLOC|PYROLOCSSL)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<name>\\S*)'



cluster 415 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^Comdat:\s+(.+)\s+SEGMENT NONE '(\w+)'\s+([0-9a-fA-F]+)\s+bytes$
Features:

1: LIT|a literal character | 43.0
2: ADD|one-or-more repetition | 7.0
3: CCC|custom character class | 4.0
4: CG|a capture group | 4.0
5: RNG|chars within a range | 3.5
6: ANY|any non-newline char | 3.0
7: KLE|zero-or-more repetition | 2.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
9: END|end-of-line | 1.0
10: STR|start-of-line | 1.0
11: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0001 | "^Comdat:\\s+(.+)\\s+SEGMENT NONE '(\\w+)'\\s+([0-9a-fA-F]+)\\s+bytes$"
0001 | 0001 | '^\\(([0-9a-fx]+),([0-9a-fx]+)\\)[ \t]+VERS=.*[ \t]+VR="(.*)"[ \t]+VM="(.*)"[ \t]+Keyword=.*[ \t]+Name="(.*)"$'



cluster 416 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\s*vtk(Abstract)?Type(Revision)*Macro\s*\(\s*(vtk[^ ,]+)\s*,\s*(vtk[^ \)]+)\s*\)\s*
Features:

1: LIT|a literal character | 54.0
2: KLE|zero-or-more repetition | 6.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.5
4: CG|a capture group | 2.5
5: ADD|one-or-more repetition | 1.5
6: NCCC|negated CCC | 1.5
7: ANY|any non-newline char | 1.0
8: QST|zero-or-one repetition | 0.5
9: STR|start-of-line | 0.5


0000 | 0001 | '<key>system.privilege.taskport</key>\\s*\n\\s*<dict>\n\\s*<key>allow-root</key>\n\\s*(<[^>]+>)'
0001 | 0001 | '^\\s*vtk(Abstract)?Type(Revision)*Macro\\s*\\(\\s*(vtk[^ ,]+)\\s*,\\s*(vtk[^ \\)]+)\\s*\\)\\s*'



cluster 417 stats:
nPatterns: 1.0
nProjects: 2
shortest: (?P<year>[0-9]{4})(-(?P<month>[0-9]{1,2})(-(?P<day>[0-9]{1,2})((?P<separator>.)(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2})(:(?P<second>[0-9]{2})(\.(?P<fraction>[0-9]+))?)?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?
Features:

1: LIT|a literal character | 27.0
2: CCC|custom character class | 10.0
3: CG|a capture group | 9.0
4: PNG|named capture group | 9.0
5: RNG|chars within a range | 9.0
6: QST|zero-or-one repetition | 6.0
7: SNG|exactly n repetition | 6.0
8: DBB|$n\le x \le m$ repetition | 2.0
9: ADD|one-or-more repetition | 1.0
10: ANY|any non-newline char | 1.0
11: OR|logical or | 1.0


0000 | 0002 | '(?P<year>[0-9]{4})(-(?P<month>[0-9]{1,2})(-(?P<day>[0-9]{1,2})((?P<separator>.)(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2})(:(?P<second>[0-9]{2})(\\.(?P<fraction>[0-9]+))?)?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?'



cluster 418 stats:
nPatterns: 1.0
nProjects: 2
shortest: \n        <!DOCTYPE\n        \s+(?P<name>[a-zA-Z_:][\w:.-]*)\n        \s+(?:\n            SYSTEM\s+(["\'])(?P<system_id_a>.*?)\2\n            |\n            PUBLIC\n            \s+(["\'])(?P<public_id_b>.*?)\4\n            # HTML 3.2 and 2.0 doctypes don\'t include a system-id.\n            (?:\s+(["\'])(?P<system_id_b>.*?)\6)?\n        )\n        (\s*\[.*?\])?        \n        \s*>\n        
Features:

1: LIT|a literal character | 239.0
2: ANY|any non-newline char | 7.0
3: KLE|zero-or-more repetition | 7.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 7.0
5: ADD|one-or-more repetition | 5.0
6: CCC|custom character class | 5.0
7: CG|a capture group | 4.0
8: LZY|as few reps as possible | 4.0
9: PNG|named capture group | 4.0
10: BKR|match the $i^{th}$ CG | 3.0
11: NCG|group without capturing | 2.0
12: QST|zero-or-one repetition | 2.0
13: RNG|chars within a range | 2.0
14: OR|logical or | 1.0
15: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0002 | '\n        <!DOCTYPE\n        \\s+(?P<name>[a-zA-Z_:][\\w:.-]*)\n        \\s+(?:\n            SYSTEM\\s+(["\'])(?P<system_id_a>.*?)\\2\n            |\n            PUBLIC\n            \\s+(["\'])(?P<public_id_b>.*?)\\4\n            # HTML 3.2 and 2.0 doctypes don\'t include a system-id.\n            (?:\\s+(["\'])(?P<system_id_b>.*?)\\6)?\n        )\n        (\\s*\\[.*?\\])?        \n        \\s*>\n        '



cluster 419 stats:
nPatterns: 19.0
nProjects: 2
shortest: (\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
Features:

1: LIT|a literal character | 30.789473684210527
2: CG|a capture group | 0.8421052631578947
3: OR|logical or | 0.6842105263157895
4: ANY|any non-newline char | 0.15789473684210525
5: KLE|zero-or-more repetition | 0.05263157894736842


0000 | 0001 | '(\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0001 | 0001 | '\xd0\xb0\xd0\xbb\xd1\x82\xd1\x83\xd1\x84\xd1\x8c\xd0\xb5\xd0\xb2\xd0\xbe'
0002 | 0001 | '\xd0\xb2\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe'
0003 | 0001 | '(\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0004 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xbe\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0005 | 0001 | '\xd1\x82\xd1\x83\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0006 | 0001 | '\xd0\x98\xd0\xb7\xd0\xb1\xd1\x80\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \\((.*)\\)<\\/a>'
0007 | 0001 | '\xd0\xbc\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0008 | 0001 | '\xd1\x84\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xba'
0009 | 0001 | '\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0010 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xb0\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0011 | 0001 | '\xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0012 | 0001 | '\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0013 | 0001 | '\xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd1\x8c\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0'
0014 | 0001 | '(\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\\.)'
0015 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0016 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe-\xd1\x80\xd0\xb0\xd0\xb7\xd1\x83\xd0\xbc\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0017 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd1\x81\xd1\x82\xd0\xb0\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0018 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



cluster 420 stats:
nPatterns: 1.0
nProjects: 1
shortest: --+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0


0000 | 0001 | u'--+'



cluster 421 stats:
nPatterns: 1.0
nProjects: 1
shortest: [().]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[().]'



cluster 422 stats:
nPatterns: 1.0
nProjects: 1
shortest: \/.*
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0


0000 | 0001 | '\\/.*'



cluster 423 stats:
nPatterns: 1.0
nProjects: 1
shortest: \d*$
Features:

1: DEC|any of: 0123456789 | 1.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '\\d*$'



cluster 424 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\S+
Features:

1: ADD|one-or-more repetition | 1.0
2: NWSP|any non-whitespace | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^\\S+'



cluster 425 stats:
nPatterns: 1.0
nProjects: 1
shortest: \).*$
Features:

1: ANY|any non-newline char | 1.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LIT|a literal character | 1.0


0000 | 0001 | '\\).*$'



cluster 426 stats:
nPatterns: 1.0
nProjects: 1
shortest: \{\}
Features:

1: LIT|a literal character | 2.0


0000 | 0001 | '\\{\\}'



cluster 427 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^.*\(
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^.*\\('



cluster 428 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*[\/]
Features:

1: ANY|any non-newline char | 1.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LIT|a literal character | 1.0


0000 | 0001 | '.*[\\/]'



cluster 429 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*\.fw
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '.*\\.fw'



cluster 430 stats:
nPatterns: 1.0
nProjects: 1
shortest: [\-: ]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0


0000 | 0001 | '[\\-: ]'



cluster 431 stats:
nPatterns: 1.0
nProjects: 1
shortest: [^+0-9]
Features:

1: LIT|a literal character | 3.0
2: NCCC|negated CCC | 1.0
3: RNG|chars within a range | 1.0


0000 | 0001 | '[^+0-9]'



cluster 432 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*(;)
Features:

1: CG|a capture group | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s*(;)'



cluster 433 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^@\w+$
Features:

1: ADD|one-or-more repetition | 1.0
2: END|end-of-line | 1.0
3: LIT|a literal character | 1.0
4: STR|start-of-line | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^@\\w+$'



cluster 434 stats:
nPatterns: 1.0
nProjects: 1
shortest: .esour.*
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '.esour.*'



cluster 435 stats:
nPatterns: 1.0
nProjects: 1
shortest: >(\d+)$
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: LIT|a literal character | 1.0


0000 | 0001 | '>(\\d+)$'



cluster 436 stats:
nPatterns: 1.0
nProjects: 1
shortest:  - [0-9]+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: RNG|chars within a range | 1.0


0000 | 0001 | ' - [0-9]+'



cluster 437 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\\*)\n
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '(\\\\*)\n'



cluster 438 stats:
nPatterns: 1.0
nProjects: 1
shortest: \ //(.*)
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '\\ //(.*)'



cluster 439 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.*)"""$
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^(.*)"""$'



cluster 440 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*[#;]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^\\s*[#;]'



cluster 441 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\{.+\}
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^\\{.+\\}'



cluster 442 stats:
nPatterns: 1.0
nProjects: 1
shortest: "([^ ]+?)"
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '"([^ ]+?)"'



cluster 443 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\{\}])
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0


0000 | 0001 | '([\\{\\}])'



cluster 444 stats:
nPatterns: 1.0
nProjects: 1
shortest: /\.[^/]*$
Features:

1: LIT|a literal character | 3.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '/\\.[^/]*$'



cluster 445 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*(<!>=)
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s*(<!>=)'



cluster 446 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([@+])?.*
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: QST|zero-or-one repetition | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^([@+])?.*'



cluster 447 stats:
nPatterns: 1.0
nProjects: 1
shortest: {(\d+)\}
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '{(\\d+)\\}'



cluster 448 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.*): [0-9]
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | '(.*): [0-9]'



cluster 449 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\w._-]+)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '([\\w._-]+)'



cluster 450 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\w\d]+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '([\\w\\d]+)'



cluster 451 stats:
nPatterns: 1.0
nProjects: 1
shortest: [ \*]*(.+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '[ \\*]*(.+)'



cluster 452 stats:
nPatterns: 1.0
nProjects: 1
shortest: \d.\d.\d
Features:

1: DEC|any of: 0123456789 | 3.0
2: ANY|any non-newline char | 2.0


0000 | 0001 | '\\d.\\d.\\d'



cluster 453 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*(\n|$)
Features:

1: CG|a capture group | 1.0
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LIT|a literal character | 1.0
5: OR|logical or | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s*(\\n|$)'



cluster 454 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\:)(.*)$
Features:

1: CG|a capture group | 2.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LIT|a literal character | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^(\\:)(.*)$'



cluster 455 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\s+)\S+
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 1.0
3: NWSP|any non-whitespace | 1.0
4: STR|start-of-line | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^(\\s+)\\S+'



cluster 456 stats:
nPatterns: 1.0
nProjects: 1
shortest: {([^}^{]*)}
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '{([^}^{]*)}'



cluster 457 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.*?)[,(:].*
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: LZY|as few reps as possible | 1.0


0000 | 0001 | '(.*?)[,(:].*'



cluster 458 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([$]{[^}]*})
Features:

1: LIT|a literal character | 4.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '([$]{[^}]*})'



cluster 459 stats:
nPatterns: 1.0
nProjects: 1
shortest: :.*\.(\d+)
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0001 | ':.*\\.(\\d+)'



cluster 460 stats:
nPatterns: 1.0
nProjects: 1
shortest: \([A-Z]\) 
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0


0000 | 0001 | '\\([A-Z]\\) '



cluster 461 stats:
nPatterns: 1.0
nProjects: 1
shortest: \b[\-_]\b
Features:

1: LIT|a literal character | 2.0
2: WNW|word/non-word boundary | 2.0
3: CCC|custom character class | 1.0


0000 | 0001 | '\\b[\\-_]\\b'



cluster 462 stats:
nPatterns: 1.0
nProjects: 1
shortest: id_.*=(\d+)
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'id_.*=(\\d+)'



cluster 463 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?i).+\.nfo$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: OPT|options wrapper | 1.0


0000 | 0001 | '(?i).+\\.nfo$'



cluster 464 stats:
nPatterns: 1.0
nProjects: 1
shortest: [,]?([^,=]+)=
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: NCCC|negated CCC | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0001 | '[,]?([^,=]+)='



cluster 465 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([#*]+)\s.*
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0
7: STR|start-of-line | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^([#*]+)\\s.*'



cluster 466 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*(\s?>)+
Features:

1: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LIT|a literal character | 1.0
6: QST|zero-or-one repetition | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*(\\s?>)+'



cluster 467 stats:
nPatterns: 1.0
nProjects: 1
shortest: #\{([^}]*)\}
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '#\\{([^}]*)\\}'



cluster 468 stats:
nPatterns: 1.0
nProjects: 1
shortest: Model:\s+(.+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'Model:\\s+(.+)'



cluster 469 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*\(\s*\(
Features:

1: KLE|zero-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0001 | '\\s*\\(\\s*\\('



cluster 470 stats:
nPatterns: 1.0
nProjects: 1
shortest: novoebenevo.ru
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 1.0


0000 | 0001 | 'novoebenevo.ru'



cluster 471 stats:
nPatterns: 1.0
nProjects: 1
shortest: #[0-9a-fA-F]{6}
Features:

1: LIT|a literal character | 7.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.0
4: SNG|exactly n repetition | 1.0


0000 | 0001 | '#[0-9a-fA-F]{6}'



cluster 472 stats:
nPatterns: 1.0
nProjects: 1
shortest: %search_string%
Features:

1: LIT|a literal character | 15.0


0000 | 0001 | '%search_string%'



cluster 473 stats:
nPatterns: 1.0
nProjects: 1
shortest: (,\n|[^\n-])+
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: OR|logical or | 1.0


0000 | 0001 | '(,\\n|[^\\n-])+'



cluster 474 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^.()]+\.){5}
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: SNG|exactly n repetition | 1.0


0000 | 0001 | '([^.()]+\\.){5}'



cluster 475 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^\.])+\..*$
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0


0000 | 0001 | '([^\\.])+\\..*$'



cluster 476 stats:
nPatterns: 1.0
nProjects: 1
shortest: <(![^-\[]|\?)
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 1.0
3: NCCC|negated CCC | 1.0
4: OR|logical or | 1.0


0000 | 0001 | '<(![^-\\[]|\\?)'



cluster 477 stats:
nPatterns: 1.0
nProjects: 1
shortest: <div.*?>(.*?)</
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 2.0
5: CG|a capture group | 1.0


0000 | 0001 | '<div.*?>(.*?)</'



cluster 478 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([^:]+):.(.*)$
Features:

1: ANY|any non-newline char | 2.0
2: CG|a capture group | 2.0
3: LIT|a literal character | 2.0
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^([^:]+):.(.*)$'



cluster 479 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\d+)\s(.*)$
Features:

1: CG|a capture group | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: STR|start-of-line | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^(\\d+)\\s(.*)$'



cluster 480 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^0x([0-9a-z]+)$
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^0x([0-9a-z]+)$'



cluster 481 stats:
nPatterns: 1.0
nProjects: 1
shortest: name\s+"(.*)",
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'name\\s+"(.*)",'



cluster 482 stats:
nPatterns: 1.0
nProjects: 1
shortest: {{.+?\|(.+?)}}
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 2.0
4: LZY|as few reps as possible | 2.0
5: CG|a capture group | 1.0


0000 | 0001 | '{{.+?\\|(.+?)}}'



cluster 483 stats:
nPatterns: 1.0
nProjects: 1
shortest: "title":"(.*?)",
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '"title":"(.*?)",'



cluster 484 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^*]+)\*(\d+)
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: LIT|a literal character | 2.0
4: DEC|any of: 0123456789 | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0001 | '([^*]+)\\*(\\d+)'



cluster 485 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*(\d).*(\d).*
Features:

1: ANY|any non-newline char | 3.0
2: KLE|zero-or-more repetition | 3.0
3: CG|a capture group | 2.0
4: DEC|any of: 0123456789 | 2.0


0000 | 0001 | '.*(\\d).*(\\d).*'



cluster 486 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*video:(\d+).*
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '.*video:(\\d+).*'



cluster 487 stats:
nPatterns: 1.0
nProjects: 1
shortest: METASPLOIT_PATH=
Features:

1: LIT|a literal character | 16.0


0000 | 0001 | 'METASPLOIT_PATH='



cluster 488 stats:
nPatterns: 1.0
nProjects: 1
shortest: \$\((\w+?)\)
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '\\$\\((\\w+?)\\)'



cluster 489 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\+\+\+ (.*)$
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^\\+\\+\\+ (.*)$'



cluster 490 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^platform/(.*?)/
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^platform/(.*?)/'



cluster 491 stats:
nPatterns: 1.0
nProjects: 1
shortest: openssl-([^<]+)<
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | 'openssl-([^<]+)<'



cluster 492 stats:
nPatterns: 1.0
nProjects: 1
shortest: protected(.*)\$
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'protected(.*)\\$'



cluster 493 stats:
nPatterns: 1.0
nProjects: 1
shortest: <(?!/?TEXT)[^>]+>
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: NLKA|sequence doesn't follow  | 1.0
5: QST|zero-or-one repetition | 1.0


0000 | 0001 | '<(?!/?TEXT)[^>]+>'



cluster 494 stats:
nPatterns: 1.0
nProjects: 1
shortest: [a-zA-Z]:(/|\\)
Features:

1: LIT|a literal character | 7.0
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: OR|logical or | 1.0


0000 | 0001 | '[a-zA-Z]:(/|\\\\)'



cluster 495 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[(.*?)\]\]
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '\\[\\[(.*?)\\]\\]'



cluster 496 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^PPid:\s+(\d+)$
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^PPid:\\s+(\\d+)$'



cluster 497 stats:
nPatterns: 1.0
nProjects: 1
shortest:  *\)(?P<comma>,?)
Features:

1: LIT|a literal character | 3.0
2: KLE|zero-or-more repetition | 1.0
3: PNG|named capture group | 1.0
4: QST|zero-or-one repetition | 1.0


0000 | 0001 | ' *\\)(?P<comma>,?)'



cluster 498 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.+):(\d+): (.+)$
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 3.0
3: LIT|a literal character | 3.0
4: ANY|any non-newline char | 2.0
5: DEC|any of: 0123456789 | 1.0
6: END|end-of-line | 1.0


0000 | 0001 | '(.+):(\\d+): (.+)$'



cluster 499 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([1-9][0-9]*)*(.*)
Features:

1: LIT|a literal character | 4.0
2: KLE|zero-or-more repetition | 3.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: RNG|chars within a range | 2.0
6: ANY|any non-newline char | 1.0


0000 | 0001 | '([1-9][0-9]*)*(.*)'



cluster 500 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([\d.]+)([^\s]+)
Features:

1: ADD|one-or-more repetition | 2.0
2: CG|a capture group | 2.0
3: CCC|custom character class | 1.0
4: DEC|any of: 0123456789 | 1.0
5: LIT|a literal character | 1.0
6: NCCC|negated CCC | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '([\\d.]+)([^\\s]+)'



cluster 501 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\$\([^\)]*\))
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '(\\$\\([^\\)]*\\))'



cluster 502 stats:
nPatterns: 1.0
nProjects: 1
shortest: <link href="(.*?)"
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '<link href="(.*?)"'



cluster 503 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([A-Z]+)([0-9]+)$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: RNG|chars within a range | 2.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^([A-Z]+)([0-9]+)$'



cluster 504 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\* (.*): (.*)\n$
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^\\* (.*): (.*)\n$'



cluster 505 stats:
nPatterns: 1.0
nProjects: 1
shortest: exe not registered
Features:

1: LIT|a literal character | 18.0


0000 | 0001 | 'exe not registered'



cluster 506 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\\.|[^#])*(#.*)?
Features:

1: LIT|a literal character | 3.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: NCCC|negated CCC | 1.0
6: OR|logical or | 1.0
7: QST|zero-or-one repetition | 1.0


0000 | 0001 | '(\\\\.|[^#])*(#.*)?'



cluster 507 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.*)#{(\w+)}(.*)$
Features:

1: CG|a capture group | 3.0
2: LIT|a literal character | 3.0
3: ANY|any non-newline char | 2.0
4: KLE|zero-or-more repetition | 2.0
5: ADD|one-or-more repetition | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^(.*)#{(\\w+)}(.*)$'



cluster 508 stats:
nPatterns: 1.0
nProjects: 1
shortest: gene_id \"(.*?)\"
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | 'gene_id \\"(.*?)\\"'



cluster 509 stats:
nPatterns: 1.0
nProjects: 1
shortest:  \d+.\d+ tb\(r\)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 2.0
3: DEC|any of: 0123456789 | 2.0
4: ANY|any non-newline char | 1.0


0000 | 0001 | ' \\d+.\\d+ tb\\(r\\)'



cluster 510 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?<=\()\w*\,?\s*
Features:

1: KLE|zero-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: LKB|matching sequence precedes | 1.0
4: QST|zero-or-one repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(?<=\\()\\w*\\,?\\s*'



cluster 511 stats:
nPatterns: 1.0
nProjects: 1
shortest: (string.)|(comment.)
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: OR|logical or | 1.0


0000 | 0001 | '(string.)|(comment.)'



cluster 512 stats:
nPatterns: 1.0
nProjects: 1
shortest: [^a-z]([a-z]+)[^a-z]
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 3.0
3: NCCC|negated CCC | 2.0
4: ADD|one-or-more repetition | 1.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0


0000 | 0001 | '[^a-z]([a-z]+)[^a-z]'



cluster 513 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\S+ (\S+)@(\S+)$
Features:

1: ADD|one-or-more repetition | 3.0
2: NWSP|any non-whitespace | 3.0
3: CG|a capture group | 2.0
4: LIT|a literal character | 2.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^\\S+ (\\S+)@(\\S+)$'



cluster 514 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\d+\-\d+\-\d+$
Features:

1: ADD|one-or-more repetition | 3.0
2: DEC|any of: 0123456789 | 3.0
3: LIT|a literal character | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^\\d+\\-\\d+\\-\\d+$'



cluster 515 stats:
nPatterns: 1.0
nProjects: 1
shortest: filename: \s*(.*)\n
Features:

1: LIT|a literal character | 11.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | 'filename: \\s*(.*)\n'



cluster 516 stats:
nPatterns: 1.0
nProjects: 1
shortest: [$]([A-Z_][A-Z0-9_]*)
Features:

1: LIT|a literal character | 9.0
2: CCC|custom character class | 3.0
3: RNG|chars within a range | 3.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '[$]([A-Z_][A-Z0-9_]*)'



cluster 517 stats:
nPatterns: 1.0
nProjects: 1
shortest: [.:,\s!?+=\(\)/-]+
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '[.:,\\s!?+=\\(\\)/-]+'



cluster 518 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^%include\s"([^"]+)"
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NCCC|negated CCC | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^%include\\s"([^"]+)"'



cluster 519 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(-?[0-9\.]+)\s*cm$
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: QST|zero-or-one repetition | 1.0
8: RNG|chars within a range | 1.0
9: STR|start-of-line | 1.0
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^(-?[0-9\\.]+)\\s*cm$'



cluster 520 stats:
nPatterns: 1.0
nProjects: 1
shortest: suppressions.*\.txt$
Features:

1: LIT|a literal character | 16.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'suppressions.*\\.txt$'



cluster 521 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?s)<[^>]*>|&#?\w+;
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0
5: OPT|options wrapper | 1.0
6: OR|logical or | 1.0
7: QST|zero-or-one repetition | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | u'(?s)<[^>]*>|&#?\\w+;'



cluster 522 stats:
nPatterns: 1.0
nProjects: 1
shortest: (<[^<]*snum=)([^">]+)>
Features:

1: LIT|a literal character | 10.0
2: CG|a capture group | 2.0
3: NCCC|negated CCC | 2.0
4: ADD|one-or-more repetition | 1.0
5: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '(<[^<]*snum=)([^">]+)>'



cluster 523 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\w+) (\w)\. (\w+)
Features:

1: CG|a capture group | 3.0
2: LIT|a literal character | 3.0
3: WRD|[a-zA-Z0-9\_] | 3.0
4: ADD|one-or-more repetition | 2.0


0000 | 0001 | '(\\w+) (\\w)\\. (\\w+)'



cluster 524 stats:
nPatterns: 1.0
nProjects: 1
shortest: /(?P<tenant_id>.*?)/.*
Features:

1: ANY|any non-newline char | 2.0
2: KLE|zero-or-more repetition | 2.0
3: LIT|a literal character | 2.0
4: LZY|as few reps as possible | 1.0
5: PNG|named capture group | 1.0


0000 | 0001 | '/(?P<tenant_id>.*?)/.*'



cluster 525 stats:
nPatterns: 1.0
nProjects: 1
shortest: /pygments/(\w+)\.css
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '/pygments/(\\w+)\\.css'



cluster 526 stats:
nPatterns: 1.0
nProjects: 1
shortest: <studio>(.*?)</studio>
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '<studio>(.*?)</studio>'



cluster 527 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^ (\S+) (\d+)/(\d+)
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 3.0
3: LIT|a literal character | 3.0
4: DEC|any of: 0123456789 | 2.0
5: NWSP|any non-whitespace | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^ (\\S+) (\\d+)/(\\d+)'



cluster 528 stats:
nPatterns: 1.0
nProjects: 1
shortest: diff --git .* b/(.*)\n
Features:

1: LIT|a literal character | 15.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 1.0


0000 | 0001 | 'diff --git .* b/(.*)\n'



cluster 529 stats:
nPatterns: 1.0
nProjects: 1
shortest: zc.buildout[.]egg-link
Features:

1: LIT|a literal character | 19.0
2: ANY|any non-newline char | 1.0
3: CCC|custom character class | 1.0


0000 | 0001 | 'zc.buildout[.]egg-link'



cluster 530 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.+):([0-9]+)[:]{0,1}.*
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 2.0
4: CCC|custom character class | 2.0
5: CG|a capture group | 2.0
6: DBB|$n\le x \le m$ repetition | 1.0
7: KLE|zero-or-more repetition | 1.0
8: RNG|chars within a range | 1.0


0000 | 0001 | '(.+):([0-9]+)[:]{0,1}.*'



cluster 531 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?<!\\)[^"\]\[\$]+
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: NLKB|sequence doesn't precede | 1.0


0000 | 0001 | '(?<!\\\\)[^"\\]\\[\\$]+'



cluster 532 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([0-9]+\s+\-\s+)(.+)
Features:

1: ADD|one-or-more repetition | 4.0
2: LIT|a literal character | 3.0
3: CG|a capture group | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: RNG|chars within a range | 1.0


0000 | 0001 | '([0-9]+\\s+\\-\\s+)(.+)'



cluster 533 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\[\[)([^$]+)(\]\])
Features:

1: LIT|a literal character | 5.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 1.0
4: NCCC|negated CCC | 1.0


0000 | 0001 | '(\\[\\[)([^$]+)(\\]\\])'



cluster 534 stats:
nPatterns: 1.0
nProjects: 1
shortest: <script.*?>.*?</script>
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: LZY|as few reps as possible | 2.0


0000 | 0001 | '<script.*?>.*?</script>'



cluster 535 stats:
nPatterns: 1.0
nProjects: 1
shortest: Ignore tracebacks: (.*)
Features:

1: LIT|a literal character | 19.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'Ignore tracebacks: (.*)'



cluster 536 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^[ ]{0,3}:[ ]{1,3}(.*)$
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 2.0
3: DBB|$n\le x \le m$ repetition | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^[ ]{0,3}:[ ]{1,3}(.*)$'



cluster 537 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^translator[-_]credits$
Features:

1: LIT|a literal character | 19.0
2: CCC|custom character class | 1.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0


0000 | 0001 | '^translator[-_]credits$'



cluster 538 stats:
nPatterns: 1.0
nProjects: 1
shortest: https?://([^/]*?)(/.*)?
Features:

1: LIT|a literal character | 10.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 2.0
4: QST|zero-or-one repetition | 2.0
5: ANY|any non-newline char | 1.0
6: LZY|as few reps as possible | 1.0
7: NCCC|negated CCC | 1.0


0000 | 0001 | 'https?://([^/]*?)(/.*)?'



cluster 539 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?:(?:\n\r?)|^)( *)\S
Features:

1: LIT|a literal character | 3.0
2: NCG|group without capturing | 2.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: NWSP|any non-whitespace | 1.0
6: OR|logical or | 1.0
7: QST|zero-or-one repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | u'(?:(?:\n\r?)|^)( *)\\S'



cluster 540 stats:
nPatterns: 1.0
nProjects: 1
shortest: [^0-9]([0-9]{4})[^0-9]
Features:

1: LIT|a literal character | 6.0
2: RNG|chars within a range | 3.0
3: NCCC|negated CCC | 2.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: SNG|exactly n repetition | 1.0


0000 | 0001 | u'[^0-9]([0-9]{4})[^0-9]'



cluster 541 stats:
nPatterns: 1.0
nProjects: 1
shortest: (".*?")|(\'.*?\')|(\s+)
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 3.0
3: ANY|any non-newline char | 2.0
4: KLE|zero-or-more repetition | 2.0
5: LZY|as few reps as possible | 2.0
6: ADD|one-or-more repetition | 1.0
7: OR|logical or | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'



cluster 542 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([a-z ]+)(\([0-9]+\))?
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: RNG|chars within a range | 2.0
6: QST|zero-or-one repetition | 1.0


0000 | 0001 | '([a-z ]+)(\\([0-9]+\\))?'



cluster 543 stats:
nPatterns: 1.0
nProjects: 1
shortest: /posters/archive/main/.*
Features:

1: LIT|a literal character | 22.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '/posters/archive/main/.*'



cluster 544 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(join|order)\((.*)\)$
Features:

1: LIT|a literal character | 11.0
2: CG|a capture group | 2.0
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: KLE|zero-or-more repetition | 1.0
6: OR|logical or | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^(join|order)\\((.*)\\)$'



cluster 545 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^queryCid(\(.+\))\s*$
Features:

1: LIT|a literal character | 10.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: STR|start-of-line | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^queryCid(\\(.+\\))\\s*$'



cluster 546 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\b[^ ,=]+)="?([^",]+)"?
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: NCCC|negated CCC | 2.0
5: QST|zero-or-one repetition | 2.0
6: WNW|word/non-word boundary | 1.0


0000 | 0001 | '(\\b[^ ,=]+)="?([^",]+)"?'



cluster 547 stats:
nPatterns: 1.0
nProjects: 1
shortest: (module|def|class) (\w*)
Features:

1: LIT|a literal character | 15.0
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 1.0
4: OR|logical or | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(module|def|class) (\\w*)'



cluster 548 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*\bin\b(?!\b.+ing\b)
Features:

1: LIT|a literal character | 5.0
2: WNW|word/non-word boundary | 4.0
3: ANY|any non-newline char | 2.0
4: ADD|one-or-more repetition | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NLKA|sequence doesn't follow  | 1.0


0000 | 0001 | '.*\\bin\\b(?!\\b.+ing\\b)'



cluster 549 stats:
nPatterns: 1.0
nProjects: 1
shortest: <([\w ]+(,\s*[\w]+)+)>
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 3.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 2.0
5: WRD|[a-zA-Z0-9\_] | 2.0
6: KLE|zero-or-more repetition | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '<([\\w ]+(,\\s*[\\w]+)+)>'



cluster 550 stats:
nPatterns: 1.0
nProjects: 1
shortest: <p>\.notes:\s?(.*?)</p>
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: QST|zero-or-one repetition | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '<p>\\.notes:\\s?(.*?)</p>'



cluster 551 stats:
nPatterns: 1.0
nProjects: 1
shortest: \$\{([a-zA-Z0-9_-]+)\}
Features:

1: LIT|a literal character | 11.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0


0000 | 0001 | '\\$\\{([a-zA-Z0-9_-]+)\\}'



cluster 552 stats:
nPatterns: 1.0
nProjects: 1
shortest: \{\{(?P<comm>.+?)\}\}
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: LZY|as few reps as possible | 1.0
5: PNG|named capture group | 1.0


0000 | 0001 | '\\{\\{(?P<comm>.+?)\\}\\}'



cluster 553 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^#~ msgid "(?P<data>.*)"$
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: PNG|named capture group | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^#~ msgid "(?P<data>.*)"$'



cluster 554 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\d+\.x-)?(\d+)\..*$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: DEC|any of: 0123456789 | 2.0
5: ANY|any non-newline char | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^(\\d+\\.x-)?(\\d+)\\..*$'



cluster 555 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[([^:]+):([^|\]]+)
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: NCCC|negated CCC | 2.0


0000 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'



cluster 556 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\S+[.]savespace[(].*[)])
Features:

1: LIT|a literal character | 12.0
2: CCC|custom character class | 3.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NWSP|any non-whitespace | 1.0


0000 | 0001 | '(\\S+[.]savespace[(].*[)])'



cluster 557 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\d+)\s+\w+\s+(\w+).*
Features:

1: ADD|one-or-more repetition | 5.0
2: CG|a capture group | 2.0
3: WRD|[a-zA-Z0-9\_] | 2.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
5: ANY|any non-newline char | 1.0
6: DEC|any of: 0123456789 | 1.0
7: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '(\\d+)\\s+\\w+\\s+(\\w+).*'



cluster 558 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*bitrate: (.+) (?:kb/s).*
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NCG|group without capturing | 1.0


0000 | 0001 | '.*bitrate: (.+) (?:kb/s).*'



cluster 559 stats:
nPatterns: 1.0
nProjects: 1
shortest: .\d+\.\d+\.\d+\.\d+
Features:

1: ADD|one-or-more repetition | 4.0
2: DEC|any of: 0123456789 | 4.0
3: LIT|a literal character | 3.0
4: ANY|any non-newline char | 1.0


0000 | 0001 | '.\\d+\\.\\d+\\.\\d+\\.\\d+'



cluster 560 stats:
nPatterns: 1.0
nProjects: 1
shortest: [,;:\(\)\[\]\{\}<>]+
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0


0000 | 0001 | '[,;:\\(\\)\\[\\]\\{\\}<>]+'



cluster 561 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^height.should be ([0-9]+)
Features:

1: LIT|a literal character | 18.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: RNG|chars within a range | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^height.should be ([0-9]+)'



cluster 562 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^nic\.\d+\.(.*)\.\d+$
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: DEC|any of: 0123456789 | 2.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^nic\\.\\d+\\.(.*)\\.\\d+$'



cluster 563 stats:
nPatterns: 1.0
nProjects: 1
shortest: ((?:"[^"]+"|[^,"]+)+)\s*,?
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 3.0
3: NCCC|negated CCC | 2.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NCG|group without capturing | 1.0
7: OR|logical or | 1.0
8: QST|zero-or-one repetition | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '((?:"[^"]+"|[^,"]+)+)\\s*,?'



cluster 564 stats:
nPatterns: 1.0
nProjects: 1
shortest: <br>(\.\.\.|   ).+?</li>
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: LZY|as few reps as possible | 1.0
6: OR|logical or | 1.0


0000 | 0001 | '<br>(\\.\\.\\.|   ).+?</li>'



cluster 565 stats:
nPatterns: 1.0
nProjects: 1
shortest: <s(?: [^>]*){0,1}>(.*?)</s>
Features:

1: LIT|a literal character | 9.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: DBB|$n\le x \le m$ repetition | 1.0
6: LZY|as few reps as possible | 1.0
7: NCCC|negated CCC | 1.0
8: NCG|group without capturing | 1.0


0000 | 0001 | '<s(?: [^>]*){0,1}>(.*?)</s>'



cluster 566 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([\w\-]+/)?[\w\-\.]+$
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 2.0
3: CCC|custom character class | 2.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: QST|zero-or-one repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'



cluster 567 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*Version\s*:\s*(\S+)
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NWSP|any non-whitespace | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*Version\\s*:\\s*(\\S+)'



cluster 568 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?<![\w])(\d+)L(?![\w])
Features:

1: CCC|custom character class | 2.0
2: WRD|[a-zA-Z0-9\_] | 2.0
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: DEC|any of: 0123456789 | 1.0
6: LIT|a literal character | 1.0
7: NLKA|sequence doesn't follow  | 1.0
8: NLKB|sequence doesn't precede | 1.0


0000 | 0001 | u'(?<![\\w])(\\d+)L(?![\\w])'



cluster 569 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.*:.*/jobmanager-.*?)-(.*)
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 4.0
4: CG|a capture group | 2.0
5: LZY|as few reps as possible | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^(.*:.*/jobmanager-.*?)-(.*)'



cluster 570 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([^;]+);([^;]+):(\d{1,5})$
Features:

1: LIT|a literal character | 4.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: DBB|$n\le x \le m$ repetition | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^([^;]+);([^;]+):(\\d{1,5})$'



cluster 571 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^nic\.(\d+)\.ipv4_address
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^nic\\.(\\d+)\\.ipv4_address'



cluster 572 stats:
nPatterns: 1.0
nProjects: 1
shortest: __version__\s*=\s*(.+?\n)
Features:

1: LIT|a literal character | 13.0
2: KLE|zero-or-more repetition | 2.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: LZY|as few reps as possible | 1.0


0000 | 0001 | '__version__\\s*=\\s*(.+?\\n)'



cluster 573 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?:\d{2}:\d{2}:\d{2}) (.*)
Features:

1: DEC|any of: 0123456789 | 3.0
2: LIT|a literal character | 3.0
3: SNG|exactly n repetition | 3.0
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCG|group without capturing | 1.0


0000 | 0001 | '(?:\\d{2}:\\d{2}:\\d{2}) (.*)'



cluster 574 stats:
nPatterns: 1.0
nProjects: 1
shortest: Reading specs from (.*)/specs
Features:

1: LIT|a literal character | 25.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | 'Reading specs from (.*)/specs'



cluster 575 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.+?): .*?(\(attached\))?$
Features:

1: LIT|a literal character | 12.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: LZY|as few reps as possible | 2.0
5: ADD|one-or-more repetition | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^(.+?): .*?(\\(attached\\))?$'



cluster 576 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([^<,]+)\s*(?:<([^>,]+)>)?$
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: NCCC|negated CCC | 2.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: NCG|group without capturing | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^([^<,]+)\\s*(?:<([^>,]+)>)?$'



cluster 577 stats:
nPatterns: 1.0
nProjects: 1
shortest: (([0-9]{1,3}\.){3}[0-9]{1,3})
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 2.0
3: CG|a capture group | 2.0
4: DBB|$n\le x \le m$ repetition | 2.0
5: RNG|chars within a range | 2.0
6: SNG|exactly n repetition | 1.0


0000 | 0001 | '(([0-9]{1,3}\\.){3}[0-9]{1,3})'



cluster 578 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\s)*File "(.*?)", line \d.+
Features:

1: LIT|a literal character | 14.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: ADD|one-or-more repetition | 1.0
6: DEC|any of: 0123456789 | 1.0
7: LZY|as few reps as possible | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(\\s)*File "(.*?)", line \\d.+'



cluster 579 stats:
nPatterns: 1.0
nProjects: 1
shortest: /changeset(?:/([^/]+)(/.*)?)?$
Features:

1: LIT|a literal character | 13.0
2: CG|a capture group | 2.0
3: QST|zero-or-one repetition | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NCCC|negated CCC | 1.0
9: NCG|group without capturing | 1.0


0000 | 0001 | '/changeset(?:/([^/]+)(/.*)?)?$'



cluster 580 stats:
nPatterns: 1.0
nProjects: 1
shortest: \-\s*\[\[(?P<t>\S+)\]\]
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: KLE|zero-or-more repetition | 1.0
4: NWSP|any non-whitespace | 1.0
5: PNG|named capture group | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\-\\s*\\[\\[(?P<t>\\S+)\\]\\]'



cluster 581 stats:
nPatterns: 1.0
nProjects: 1
shortest: wx_major_version_number=(\d+)
Features:

1: LIT|a literal character | 24.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0001 | 'wx_major_version_number=(\\d+)'



cluster 582 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?P<clause>\d+)_(?P<field>.+)$
Features:

1: ADD|one-or-more repetition | 2.0
2: PNG|named capture group | 2.0
3: ANY|any non-newline char | 1.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: LIT|a literal character | 1.0


0000 | 0001 | '(?P<clause>\\d+)_(?P<field>.+)$'



cluster 583 stats:
nPatterns: 2.0
nProjects: 1
shortest: .*?\bpni\b
Features:

1: LIT|a literal character | 5.0
2: WNW|word/non-word boundary | 1.5
3: ANY|any non-newline char | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | '.*?\\bpni\\b'
0001 | 0001 | '.*?Opteron\\b'



cluster 584 stats:
nPatterns: 1.0
nProjects: 1
shortest: [ _\.-]+cd[ _\.-]*([0-9a-d]+)
Features:

1: LIT|a literal character | 14.0
2: CCC|custom character class | 3.0
3: ADD|one-or-more repetition | 2.0
4: RNG|chars within a range | 2.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '[ _\\.-]+cd[ _\\.-]*([0-9a-d]+)'



cluster 585 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(?P<x>\d+)?(?:x(?P<y>\d+))?$
Features:

1: ADD|one-or-more repetition | 2.0
2: DEC|any of: 0123456789 | 2.0
3: PNG|named capture group | 2.0
4: QST|zero-or-one repetition | 2.0
5: END|end-of-line | 1.0
6: LIT|a literal character | 1.0
7: NCG|group without capturing | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'



cluster 586 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^([\.\/\w]+\.tex)(:\d+:.*)
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0
7: KLE|zero-or-more repetition | 1.0
8: STR|start-of-line | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^([\\.\\/\\w]+\\.tex)(:\\d+:.*)'



cluster 587 stats:
nPatterns: 1.0
nProjects: 1
shortest: from\s*(.*?)\s*import\s*(.+)
Features:

1: LIT|a literal character | 10.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: ANY|any non-newline char | 2.0
5: CG|a capture group | 2.0
6: ADD|one-or-more repetition | 1.0
7: LZY|as few reps as possible | 1.0


0000 | 0001 | 'from\\s*(.*?)\\s*import\\s*(.+)'



cluster 588 stats:
nPatterns: 2.0
nProjects: 1
shortest: href="(.*?)"
Features:

1: LIT|a literal character | 7.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | 'href="(.*?)"'
0001 | 0001 | 'Href="(.*?)">'



cluster 589 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\d\d\d\d)-(\d\d)-(\d\d)
Features:

1: DEC|any of: 0123456789 | 8.0
2: CG|a capture group | 3.0
3: LIT|a literal character | 2.0


0000 | 0001 | '(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)'



cluster 590 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*\((.*)(\s*Format*\s*)\).*?
Features:

1: LIT|a literal character | 8.0
2: KLE|zero-or-more repetition | 6.0
3: ANY|any non-newline char | 3.0
4: CG|a capture group | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: LZY|as few reps as possible | 1.0


0000 | 0001 | '.*\\((.*)(\\s*Format*\\s*)\\).*?'



cluster 591 stats:
nPatterns: 2.0
nProjects: 1
shortest: PEM_SERVER=
Features:

1: LIT|a literal character | 13.0


0000 | 0001 | 'PEM_SERVER='
0001 | 0001 | 'EMAIL_PROVIDER='



cluster 592 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s+(\w+)\s+"(&#\w+;|[^&"]*)"
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 4.0
3: CG|a capture group | 2.0
4: WRD|[a-zA-Z0-9\_] | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0
8: OR|logical or | 1.0


0000 | 0001 | '\\s+(\\w+)\\s+"(&#\\w+;|[^&"]*)"'



cluster 593 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^"I\'m fine" \(es to en, .*\)$
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^"I\'m fine" \\(es to en, .*\\)$'



cluster 594 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.+)[.](proto|impl|init|cleanup)$
Features:

1: LIT|a literal character | 21.0
2: CG|a capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: END|end-of-line | 1.0
7: OR|logical or | 1.0


0000 | 0001 | '(.+)[.](proto|impl|init|cleanup)$'



cluster 595 stats:
nPatterns: 1.0
nProjects: 1
shortest: ([^!]+)(?:!([^+-]+)?([+-]\S+)?)?
Features:

1: LIT|a literal character | 6.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: QST|zero-or-one repetition | 3.0
5: NCCC|negated CCC | 2.0
6: CCC|custom character class | 1.0
7: NCG|group without capturing | 1.0
8: NWSP|any non-whitespace | 1.0


0000 | 0001 | '([^!]+)(?:!([^+-]+)?([+-]\\S+)?)?'



cluster 596 stats:
nPatterns: 1.0
nProjects: 1
shortest: <viewer version_patch="(\d+)" />
Features:

1: LIT|a literal character | 27.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '<viewer version_patch="(\\d+)" />'



cluster 597 stats:
nPatterns: 1.0
nProjects: 1
shortest: \${project_path:(?P<file>[^}]+)}
Features:

1: LIT|a literal character | 17.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: PNG|named capture group | 1.0


0000 | 0001 | '\\${project_path:(?P<file>[^}]+)}'



cluster 598 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[([\.0-9a-f:]+)\](?::(\d+))?
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: RNG|chars within a range | 2.0
5: CCC|custom character class | 1.0
6: DEC|any of: 0123456789 | 1.0
7: NCG|group without capturing | 1.0
8: QST|zero-or-one repetition | 1.0


0000 | 0001 | '\\[([\\.0-9a-f:]+)\\](?::(\\d+))?'



cluster 599 stats:
nPatterns: 1.0
nProjects: 1
shortest: (#\trenamed:\s+)(.*?)\s->\s(.*)
Features:

1: LIT|a literal character | 12.0
2: CG|a capture group | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: ANY|any non-newline char | 2.0
5: KLE|zero-or-more repetition | 2.0
6: ADD|one-or-more repetition | 1.0
7: LZY|as few reps as possible | 1.0


0000 | 0001 | '(#\trenamed:\\s+)(.*?)\\s->\\s(.*)'



cluster 600 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(?P<bytes>\d+)(?P<unit>[gmkb]?)$
Features:

1: LIT|a literal character | 4.0
2: PNG|named capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 1.0
6: END|end-of-line | 1.0
7: QST|zero-or-one repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^(?P<bytes>\\d+)(?P<unit>[gmkb]?)$'



cluster 601 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^cert=(?P<nickname>[0-9a-zA-Z_ ]+)
Features:

1: LIT|a literal character | 13.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: PNG|named capture group | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^cert=(?P<nickname>[0-9a-zA-Z_ ]+)'



cluster 602 stats:
nPatterns: 2.0
nProjects: 1
shortest: guibg=#*(\w+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'guibg=#*(\\w+)'
0001 | 0001 | 'guifg=#*(\\w+)'



cluster 603 stats:
nPatterns: 1.0
nProjects: 1
shortest: http://([^/:]+)(?::(\d+))?(/.*)?$
Features:

1: LIT|a literal character | 11.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: QST|zero-or-one repetition | 2.0
5: ANY|any non-newline char | 1.0
6: DEC|any of: 0123456789 | 1.0
7: END|end-of-line | 1.0
8: KLE|zero-or-more repetition | 1.0
9: NCCC|negated CCC | 1.0
10: NCG|group without capturing | 1.0


0000 | 0001 | 'http://([^/:]+)(?::(\\d+))?(/.*)?$'



cluster 604 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\S+)\s*[.]\s*type\s*[(]\s*[)]
Features:

1: LIT|a literal character | 7.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: CCC|custom character class | 3.0
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: NWSP|any non-whitespace | 1.0


0000 | 0001 | '(\\S+)\\s*[.]\\s*type\\s*[(]\\s*[)]'



cluster 605 stats:
nPatterns: 1.0
nProjects: 1
shortest: <br />\s*([^<]+)<br />\s*([^<]+)<
Features:

1: LIT|a literal character | 15.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 2.0
5: NCCC|negated CCC | 2.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0


0000 | 0001 | '<br />\\s*([^<]+)<br />\\s*([^<]+)<'



cluster 606 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^#synchronous_standby_names\s*=.*$
Features:

1: LIT|a literal character | 27.0
2: KLE|zero-or-more repetition | 2.0
3: ANY|any non-newline char | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^#synchronous_standby_names\\s*=.*$'



cluster 607 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\#!\s?([^\s]+)(?:\s([^\s]+))?
Features:

1: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: LIT|a literal character | 2.0
5: NCCC|negated CCC | 2.0
6: QST|zero-or-one repetition | 2.0
7: NCG|group without capturing | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^\\#!\\s?([^\\s]+)(?:\\s([^\\s]+))?'



cluster 608 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\S+)\t(\S+)\t(\S+)\t(.+)\n$
Features:

1: ADD|one-or-more repetition | 4.0
2: CG|a capture group | 4.0
3: LIT|a literal character | 4.0
4: NWSP|any non-whitespace | 3.0
5: ANY|any non-newline char | 1.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^(\\S+)\\t(\\S+)\\t(\\S+)\\t(.+)\\n$'



cluster 609 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\d+)\W(\w+)\W(\w+)[ \t]+(.*)$
Features:

1: ADD|one-or-more repetition | 4.0
2: CG|a capture group | 4.0
3: LIT|a literal character | 2.0
4: NWRD|non-word chars | 2.0
5: WRD|[a-zA-Z0-9\_] | 2.0
6: ANY|any non-newline char | 1.0
7: CCC|custom character class | 1.0
8: DEC|any of: 0123456789 | 1.0
9: END|end-of-line | 1.0
10: KLE|zero-or-more repetition | 1.0
11: STR|start-of-line | 1.0


0000 | 0001 | '^(\\d+)\\W(\\w+)\\W(\\w+)[ \t]+(.*)$'



cluster 610 stats:
nPatterns: 1.0
nProjects: 1
shortest: mass .*?(\d+\.\d+).*?(\d+\.\d+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 4.0
3: DEC|any of: 0123456789 | 4.0
4: ANY|any non-newline char | 2.0
5: CG|a capture group | 2.0
6: KLE|zero-or-more repetition | 2.0
7: LZY|as few reps as possible | 2.0


0000 | 0001 | 'mass .*?(\\d+\\.\\d+).*?(\\d+\\.\\d+)'



cluster 611 stats:
nPatterns: 1.0
nProjects: 1
shortest: <\s*(\w[\w\d]*)\s*=\s*(.*?)\s*>
Features:

1: KLE|zero-or-more repetition | 6.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
3: LIT|a literal character | 3.0
4: CG|a capture group | 2.0
5: WRD|[a-zA-Z0-9\_] | 2.0
6: ANY|any non-newline char | 1.0
7: CCC|custom character class | 1.0
8: DEC|any of: 0123456789 | 1.0
9: LZY|as few reps as possible | 1.0


0000 | 0001 | '<\\s*(\\w[\\w\\d]*)\\s*=\\s*(.*?)\\s*>'



cluster 612 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^"(?P<data>.*)"$
Features:

1: LIT|a literal character | 2.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0
5: STR|start-of-line | 1.0
6: END|end-of-line | 0.5


0000 | 0001 | '^"(?P<data>.*)"$'
0001 | 0001 | '^#: (?P<data>.*)'



cluster 613 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.*)(\stime\selapsed:\s*)(.*)\s*$
Features:

1: LIT|a literal character | 12.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: CG|a capture group | 3.0
5: ANY|any non-newline char | 2.0
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^(.*)(\\stime\\selapsed:\\s*)(.*)\\s*$'



cluster 614 stats:
nPatterns: 1.0
nProjects: 1
shortest: (-devel)|(-debuginfo)|(-static)|(-libs)
Features:

1: LIT|a literal character | 28.0
2: CG|a capture group | 4.0
3: OR|logical or | 1.0


0000 | 0001 | '(-devel)|(-debuginfo)|(-static)|(-libs)'



cluster 615 stats:
nPatterns: 1.0
nProjects: 1
shortest: --[0-9]+-- ([^(:]*) \((0x[0-9a-f]+)\)
Features:

1: LIT|a literal character | 18.0
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 2.0
4: CCC|custom character class | 2.0
5: CG|a capture group | 2.0
6: KLE|zero-or-more repetition | 1.0
7: NCCC|negated CCC | 1.0


0000 | 0001 | '--[0-9]+-- ([^(:]*) \\((0x[0-9a-f]+)\\)'



cluster 616 stats:
nPatterns: 1.0
nProjects: 1
shortest: <em class="loadnum"[^<>]*>([^<>]*)</em>
Features:

1: LIT|a literal character | 29.0
2: KLE|zero-or-more repetition | 2.0
3: NCCC|negated CCC | 2.0
4: CG|a capture group | 1.0


0000 | 0001 | '<em class="loadnum"[^<>]*>([^<>]*)</em>'



cluster 617 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\w+):\s.*<(.*)>\smtu\s(\d+)\s.*
Features:

1: LIT|a literal character | 6.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
3: ANY|any non-newline char | 3.0
4: CG|a capture group | 3.0
5: KLE|zero-or-more repetition | 3.0
6: ADD|one-or-more repetition | 2.0
7: DEC|any of: 0123456789 | 1.0
8: STR|start-of-line | 1.0
9: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '^(\\w+):\\s.*<(.*)>\\smtu\\s(\\d+)\\s.*'



cluster 618 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?P<whitespace>[ \n]*)(?P<entry>[^ \n]+)
Features:

1: LIT|a literal character | 4.0
2: PNG|named capture group | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: KLE|zero-or-more repetition | 1.0
6: NCCC|negated CCC | 1.0


0000 | 0001 | '(?P<whitespace>[ \n]*)(?P<entry>[^ \n]+)'



cluster 619 stats:
nPatterns: 1.0
nProjects: 1
shortest: <div class="context" id="(?P<id>[^"]+)">
Features:

1: LIT|a literal character | 28.0
2: ADD|one-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: PNG|named capture group | 1.0


0000 | 0001 | '<div class="context" id="(?P<id>[^"]+)">'



cluster 620 stats:
nPatterns: 1.0
nProjects: 1
shortest: [^#]*(\S+)([ \*]+)(\S+)\s*\([^\)]*
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 3.0
4: KLE|zero-or-more repetition | 3.0
5: NCCC|negated CCC | 2.0
6: NWSP|any non-whitespace | 2.0
7: CCC|custom character class | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*'



cluster 621 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^.*RLELossless.*$
Features:

1: LIT|a literal character | 11.5
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^.*RLELossless.*$'
0001 | 0001 | '^.*JPEGLossless.*$'



cluster 622 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*([^\s]+)(?:(?:\s*=\s*)|\s+)(.+)$
Features:

1: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
2: ADD|one-or-more repetition | 3.0
3: KLE|zero-or-more repetition | 3.0
4: CG|a capture group | 2.0
5: NCG|group without capturing | 2.0
6: ANY|any non-newline char | 1.0
7: END|end-of-line | 1.0
8: LIT|a literal character | 1.0
9: NCCC|negated CCC | 1.0
10: OR|logical or | 1.0
11: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*([^\\s]+)(?:(?:\\s*=\\s*)|\\s+)(.+)$'



cluster 623 stats:
nPatterns: 1.0
nProjects: 1
shortest: #loadfactor(\s+(\S+))?\s+(\d+\.?\d*)
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 4.0
3: CG|a capture group | 3.0
4: DEC|any of: 0123456789 | 2.0
5: QST|zero-or-one repetition | 2.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
7: KLE|zero-or-more repetition | 1.0
8: NWSP|any non-whitespace | 1.0


0000 | 0001 | '#loadfactor(\\s+(\\S+))?\\s+(\\d+\\.?\\d*)'



cluster 624 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*window\.location\.href='(?P<href>.*)'.*
Features:

1: LIT|a literal character | 23.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 3.0
4: PNG|named capture group | 1.0


0000 | 0001 | ".*window\\.location\\.href='(?P<href>.*)'.*"



cluster 625 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\d+\.\d+\.\d+)[T\.](\d+(\.\d+)*)$
Features:

1: ADD|one-or-more repetition | 5.0
2: DEC|any of: 0123456789 | 5.0
3: LIT|a literal character | 5.0
4: CG|a capture group | 3.0
5: CCC|custom character class | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '(\\d+\\.\\d+\\.\\d+)[T\\.](\\d+(\\.\\d+)*)$'



cluster 626 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s*(([\\'"])(.*?[^\\])\2)\s*([},=]|$)
Features:

1: LIT|a literal character | 7.0
2: CG|a capture group | 4.0
3: KLE|zero-or-more repetition | 3.0
4: CCC|custom character class | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ANY|any non-newline char | 1.0
7: BKR|match the $i^{th}$ CG | 1.0
8: END|end-of-line | 1.0
9: LZY|as few reps as possible | 1.0
10: NCCC|negated CCC | 1.0
11: OR|logical or | 1.0


0000 | 0001 | '\\s*(([\\\'"])(.*?[^\\\\])\\2)\\s*([},=]|$)'



cluster 627 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^{(?P<w>[^[\]()]+)(?:\[(?P<i>\d+)\])?}$
Features:

1: LIT|a literal character | 8.0
2: ADD|one-or-more repetition | 2.0
3: PNG|named capture group | 2.0
4: DEC|any of: 0123456789 | 1.0
5: END|end-of-line | 1.0
6: NCCC|negated CCC | 1.0
7: NCG|group without capturing | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^{(?P<w>[^[\\]()]+)(?:\\[(?P<i>\\d+)\\])?}$'



cluster 628 stats:
nPatterns: 3.0
nProjects: 1
shortest: template=
Features:

1: LIT|a literal character | 10.333333333333334


0000 | 0001 | 'template='
0001 | 0001 | 'externalip='
0002 | 0001 | 'smtp_relay='



cluster 629 stats:
nPatterns: 1.0
nProjects: 1
shortest: (.+)(?:(?<!<br>)|(?<!<br />))\n(?![#*\s|])
Features:

1: LIT|a literal character | 14.0
2: NLKB|sequence doesn't precede | 2.0
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: NCG|group without capturing | 1.0
8: NLKA|sequence doesn't follow  | 1.0
9: OR|logical or | 1.0
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(.+)(?:(?<!<br>)|(?<!<br />))\\n(?![#*\\s|])'



cluster 630 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?P<name>[a-zA-Z0-9_*]+)(?P<default>=.*?)?, 
Features:

1: LIT|a literal character | 11.0
2: RNG|chars within a range | 3.0
3: PNG|named capture group | 2.0
4: ADD|one-or-more repetition | 1.0
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: KLE|zero-or-more repetition | 1.0
8: LZY|as few reps as possible | 1.0
9: QST|zero-or-one repetition | 1.0


0000 | 0001 | '(?P<name>[a-zA-Z0-9_*]+)(?P<default>=.*?)?, '



cluster 631 stats:
nPatterns: 1.0
nProjects: 1
shortest: .*?/video/tv/(.+?)/season (\d{1,2})/extras$
Features:

1: LIT|a literal character | 25.0
2: ANY|any non-newline char | 2.0
3: CG|a capture group | 2.0
4: LZY|as few reps as possible | 2.0
5: ADD|one-or-more repetition | 1.0
6: DBB|$n\le x \le m$ repetition | 1.0
7: DEC|any of: 0123456789 | 1.0
8: END|end-of-line | 1.0
9: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '.*?/video/tv/(.+?)/season (\\d{1,2})/extras$'



cluster 632 stats:
nPatterns: 1.0
nProjects: 1
shortest: \$\(call\s+moa_load\s*,\s*(\S*)\s*\)
Features:

1: LIT|a literal character | 16.0
2: KLE|zero-or-more repetition | 4.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: ADD|one-or-more repetition | 1.0
5: CG|a capture group | 1.0
6: NWSP|any non-whitespace | 1.0


0000 | 0001 | '\\$\\(call\\s+moa_load\\s*,\\s*(\\S*)\\s*\\)'



cluster 633 stats:
nPatterns: 2.0
nProjects: 1
shortest: Simple_1Of_1unk_svc
Features:

1: LIT|a literal character | 19.5


0000 | 0001 | 'Simple_1Of_1unk_svc'
0001 | 0001 | 'Simple_1Of_1unk_host'



cluster 634 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^/?(?P<a>\w+)(/(?P<c>\w+)(/(?P<f>\w+))?)?$
Features:

1: ADD|one-or-more repetition | 3.0
2: LIT|a literal character | 3.0
3: PNG|named capture group | 3.0
4: QST|zero-or-one repetition | 3.0
5: WRD|[a-zA-Z0-9\_] | 3.0
6: CG|a capture group | 2.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^/?(?P<a>\\w+)(/(?P<c>\\w+)(/(?P<f>\\w+))?)?$'



cluster 635 stats:
nPatterns: 1.0
nProjects: 1
shortest: (\d{4})-(\d{2})-(\d{2})[\s\t]*([0-9:, -]+)
Features:

1: LIT|a literal character | 9.0
2: CG|a capture group | 4.0
3: DEC|any of: 0123456789 | 3.0
4: SNG|exactly n repetition | 3.0
5: CCC|custom character class | 2.0
6: ADD|one-or-more repetition | 1.0
7: KLE|zero-or-more repetition | 1.0
8: RNG|chars within a range | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'



cluster 636 stats:
nPatterns: 2.0
nProjects: 1
shortest: \bLCOV_EXCL_LINE\b
Features:

1: LIT|a literal character | 14.5
2: WNW|word/non-word boundary | 2.0


0000 | 0001 | '\\bLCOV_EXCL_LINE\\b'
0001 | 0001 | '\\bLCOV_EXCL_START\\b'



cluster 637 stats:
nPatterns: 1.0
nProjects: 1
shortest: \d\d\d\d-\d\d-\d\d \d\d:\d\d:\d\d
Features:

1: DEC|any of: 0123456789 | 14.0
2: LIT|a literal character | 5.0


0000 | 0001 | '\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d'



cluster 638 stats:
nPatterns: 1.0
nProjects: 1
shortest: c\([\d.,\s-]*,\s*(?P<final>-?[0-9.]+)\n?\)
Features:

1: LIT|a literal character | 12.0
2: CCC|custom character class | 2.0
3: KLE|zero-or-more repetition | 2.0
4: QST|zero-or-one repetition | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
6: ADD|one-or-more repetition | 1.0
7: DEC|any of: 0123456789 | 1.0
8: PNG|named capture group | 1.0
9: RNG|chars within a range | 1.0


0000 | 0001 | 'c\\([\\d.,\\s-]*,\\s*(?P<final>-?[0-9.]+)\n?\\)'



cluster 639 stats:
nPatterns: 1.0
nProjects: 1
shortest: (^\(?(\d{3})\)?[- .]?(\d{3})[- .]?(\d{4})$)
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 4.0
3: QST|zero-or-one repetition | 4.0
4: DEC|any of: 0123456789 | 3.0
5: SNG|exactly n repetition | 3.0
6: CCC|custom character class | 2.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '(^\\(?(\\d{3})\\)?[- .]?(\\d{3})[- .]?(\\d{4})$)'



cluster 640 stats:
nPatterns: 2.0
nProjects: 1
shortest: <pre><a name="foo-1">
Features:

1: LIT|a literal character | 21.0


0000 | 0001 | '<pre><a name="foo-1">'
0001 | 0001 | '<pre><a name="foo-5">'



cluster 641 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s+src set ".*" \(([0-9.]+) docs, \d+ segs\)
Features:

1: LIT|a literal character | 28.0
2: ADD|one-or-more repetition | 3.0
3: ANY|any non-newline char | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: DEC|any of: 0123456789 | 1.0
7: KLE|zero-or-more repetition | 1.0
8: RNG|chars within a range | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s+src set ".*" \\(([0-9.]+) docs, \\d+ segs\\)'



cluster 642 stats:
nPatterns: 1.0
nProjects: 1
shortest: \s|=|,|:|\((?!.*\))|\[(?!.*\])|\{(?!.*\})
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 3.0
3: KLE|zero-or-more repetition | 3.0
4: NLKA|sequence doesn't follow  | 3.0
5: OR|logical or | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '\\s|=|,|:|\\((?!.*\\))|\\[(?!.*\\])|\\{(?!.*\\})'



cluster 643 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^((?:[^-]+|-(?![0-9]))+)-([0-9][^-]*)(?:-(.*))?$
Features:

1: LIT|a literal character | 9.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: CCC|custom character class | 2.0
5: KLE|zero-or-more repetition | 2.0
6: NCCC|negated CCC | 2.0
7: NCG|group without capturing | 2.0
8: RNG|chars within a range | 2.0
9: ANY|any non-newline char | 1.0
10: END|end-of-line | 1.0
11: NLKA|sequence doesn't follow  | 1.0
12: OR|logical or | 1.0
13: QST|zero-or-one repetition | 1.0
14: STR|start-of-line | 1.0


0000 | 0001 | '^((?:[^-]+|-(?![0-9]))+)-([0-9][^-]*)(?:-(.*))?$'



cluster 644 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(.*[^a-z0-9\n])?(sudo|su +-c|system/bin/su) +.*
Features:

1: LIT|a literal character | 28.0
2: ADD|one-or-more repetition | 2.0
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 2.0
5: KLE|zero-or-more repetition | 2.0
6: RNG|chars within a range | 2.0
7: NCCC|negated CCC | 1.0
8: OR|logical or | 1.0
9: QST|zero-or-one repetition | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^(.*[^a-z0-9\\n])?(sudo|su +-c|system/bin/su) +.*'



cluster 645 stats:
nPatterns: 1.0
nProjects: 1
shortest: This module \'\w+\' is auto-generated with f2py
Features:

1: LIT|a literal character | 42.0
2: ADD|one-or-more repetition | 1.0
3: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | "This module \\'\\w+\\' is auto-generated with f2py"



cluster 646 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?P<intDigits>\d*)(?P<dot>\.)(?P<fracDigits>\d+)
Features:

1: PNG|named capture group | 3.0
2: DEC|any of: 0123456789 | 2.0
3: ADD|one-or-more repetition | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LIT|a literal character | 1.0


0000 | 0001 | '(?P<intDigits>\\d*)(?P<dot>\\.)(?P<fracDigits>\\d+)'



cluster 647 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?:aka|birth name) (<em>")(.*?)"(<br>|<\/em>|<\/td>)
Features:

1: LIT|a literal character | 34.0
2: CG|a capture group | 3.0
3: OR|logical or | 2.0
4: ANY|any non-newline char | 1.0
5: KLE|zero-or-more repetition | 1.0
6: LZY|as few reps as possible | 1.0
7: NCG|group without capturing | 1.0


0000 | 0001 | '(?:aka|birth name) (<em>")(.*?)"(<br>|<\\/em>|<\\/td>)'



cluster 648 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^http://node-todobin\.herokuapp\.com/list/[a-z0-9]+$
Features:

1: LIT|a literal character | 43.0
2: RNG|chars within a range | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^http://node-todobin\\.herokuapp\\.com/list/[a-z0-9]+$'



cluster 649 stats:
nPatterns: 1.0
nProjects: 1
shortest: (<pre.+?>(<code>)?\s?!(\w+?)\n(.*?)(</code>)?</pre>)
Features:

1: LIT|a literal character | 26.0
2: CG|a capture group | 5.0
3: LZY|as few reps as possible | 3.0
4: QST|zero-or-one repetition | 3.0
5: ADD|one-or-more repetition | 2.0
6: ANY|any non-newline char | 2.0
7: KLE|zero-or-more repetition | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(<pre.+?>(<code>)?\\s?!(\\w+?)\\n(.*?)(</code>)?</pre>)'



cluster 650 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?P<pid>\d+)\s+rename\("[^"]*", "(?P<name>[^"]*)"\)
Features:

1: LIT|a literal character | 16.0
2: ADD|one-or-more repetition | 2.0
3: KLE|zero-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: PNG|named capture group | 2.0
6: DEC|any of: 0123456789 | 1.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(?P<pid>\\d+)\\s+rename\\("[^"]*", "(?P<name>[^"]*)"\\)'



cluster 651 stats:
nPatterns: 1.0
nProjects: 1
shortest: (--(?P<key>\S*)[=](?P<value>\S*))|(--(?P<option>\S*))
Features:

1: LIT|a literal character | 5.0
2: KLE|zero-or-more repetition | 3.0
3: NWSP|any non-whitespace | 3.0
4: PNG|named capture group | 3.0
5: CG|a capture group | 2.0
6: CCC|custom character class | 1.0
7: OR|logical or | 1.0


0000 | 0001 | '(--(?P<key>\\S*)[=](?P<value>\\S*))|(--(?P<option>\\S*))'



cluster 652 stats:
nPatterns: 1.0
nProjects: 1
shortest: Couldn't start forwarder server for port spec: (\d+):(\d+)
Features:

1: LIT|a literal character | 48.0
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 2.0
4: DEC|any of: 0123456789 | 2.0


0000 | 0001 | "Couldn't start forwarder server for port spec: (\\d+):(\\d+)"



cluster 653 stats:
nPatterns: 1.0
nProjects: 1
shortest: ==[0-9]+==\s*[#0-9]+\s*([0-9A-Fa-fx]+):(?:[^ ]* )*([^ :\n]+)
Features:

1: LIT|a literal character | 22.0
2: RNG|chars within a range | 5.0
3: ADD|one-or-more repetition | 4.0
4: KLE|zero-or-more repetition | 4.0
5: CCC|custom character class | 3.0
6: CG|a capture group | 2.0
7: NCCC|negated CCC | 2.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
9: NCG|group without capturing | 1.0


0000 | 0001 | '==[0-9]+==\\s*[#0-9]+\\s*([0-9A-Fa-fx]+):(?:[^ ]* )*([^ :\n]+)'



cluster 654 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?P<heading>^\s*(?P<hmarker>=+)(\s)*.*(\s)*(?P=hmarker)( )*$)
Features:

1: KLE|zero-or-more repetition | 5.0
2: CG|a capture group | 3.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
4: LIT|a literal character | 2.0
5: PNG|named capture group | 2.0
6: ADD|one-or-more repetition | 1.0
7: ANY|any non-newline char | 1.0
8: BKRN|references NCG | 1.0
9: END|end-of-line | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '(?P<heading>^\\s*(?P<hmarker>=+)(\\s)*.*(\\s)*(?P=hmarker)( )*$)'



cluster 655 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(?P<area>1\d1|11\d|8\d\d)(?P<area2>\d{3})(?P<station>\d+)$
Features:

1: DEC|any of: 0123456789 | 6.0
2: LIT|a literal character | 5.0
3: PNG|named capture group | 3.0
4: ADD|one-or-more repetition | 1.0
5: END|end-of-line | 1.0
6: OR|logical or | 1.0
7: SNG|exactly n repetition | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^(?P<area>1\\d1|11\\d|8\\d\\d)(?P<area2>\\d{3})(?P<station>\\d+)$'



cluster 656 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(?P<user>[ugo]{0,3})(?P<action>[\+\-])(?P<value>[rwxst]{1,3})$
Features:

1: LIT|a literal character | 10.0
2: CCC|custom character class | 3.0
3: PNG|named capture group | 3.0
4: DBB|$n\le x \le m$ repetition | 2.0
5: END|end-of-line | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^(?P<user>[ugo]{0,3})(?P<action>[\\+\\-])(?P<value>[rwxst]{1,3})$'



cluster 657 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(\d{4,4}-\d{2,2}-\d{2,2}T\d{2,2}:\d{2,2}:\d{2,2})\.\d*Z$
Features:

1: DEC|any of: 0123456789 | 7.0
2: LIT|a literal character | 7.0
3: DBB|$n\le x \le m$ repetition | 6.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: KLE|zero-or-more repetition | 1.0
7: STR|start-of-line | 1.0


0000 | 0001 | '^(\\d{4,4}-\\d{2,2}-\\d{2,2}T\\d{2,2}:\\d{2,2}:\\d{2,2})\\.\\d*Z$'



cluster 658 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\d\.*\d*\s+\d\.*\d*\s+\d\.*\d*\s+\d\.*\d*\s+cmyk
Features:

1: DEC|any of: 0123456789 | 8.0
2: KLE|zero-or-more repetition | 8.0
3: LIT|a literal character | 8.0
4: ADD|one-or-more repetition | 4.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
6: STR|start-of-line | 1.0


0000 | 0001 | '^\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+cmyk'



cluster 659 stats:
nPatterns: 1.0
nProjects: 1
shortest: \[\[(?P<t>[^\]]*?) +(?P<k>\S+) +(?P<p>left|right|center)\]\]
Features:

1: LIT|a literal character | 22.0
2: ADD|one-or-more repetition | 3.0
3: PNG|named capture group | 3.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: NCCC|negated CCC | 1.0
7: NWSP|any non-whitespace | 1.0
8: OR|logical or | 1.0


0000 | 0001 | '\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+) +(?P<p>left|right|center)\\]\\]'



cluster 660 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^GlueSiteUniqueID: (.*)
Features:

1: LIT|a literal character | 25.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^GlueSiteUniqueID: (.*)'
0001 | 0001 | '^GlueForeignKey: GlueCEUniqueID=(.*):'



cluster 661 stats:
nPatterns: 1.0
nProjects: 1
shortest: jobfailures\.jsp|jobtracker\.jsp|jobdetails\.jsp|jobtasks\.jsp
Features:

1: LIT|a literal character | 55.0
2: OR|logical or | 1.0


0000 | 0001 | 'jobfailures\\.jsp|jobtracker\\.jsp|jobdetails\\.jsp|jobtasks\\.jsp'



cluster 662 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^I/(stderr)\s*\(\s*\d+\):\s*((info|warning|error|debug): .*)$
Features:

1: LIT|a literal character | 34.0
2: KLE|zero-or-more repetition | 4.0
3: CG|a capture group | 3.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
5: ADD|one-or-more repetition | 1.0
6: ANY|any non-newline char | 1.0
7: DEC|any of: 0123456789 | 1.0
8: END|end-of-line | 1.0
9: OR|logical or | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^I/(stderr)\\s*\\(\\s*\\d+\\):\\s*((info|warning|error|debug): .*)$'



cluster 663 stats:
nPatterns: 1.0
nProjects: 1
shortest: (d  ((ext)?demo(needed)?|other)-\d[.]\d-py)\d[.]\d(-\S+)?[.]egg
Features:

1: LIT|a literal character | 32.0
2: CG|a capture group | 5.0
3: DEC|any of: 0123456789 | 4.0
4: CCC|custom character class | 3.0
5: QST|zero-or-one repetition | 3.0
6: ADD|one-or-more repetition | 1.0
7: NWSP|any non-whitespace | 1.0
8: OR|logical or | 1.0


0000 | 0001 | '(d  ((ext)?demo(needed)?|other)-\\d[.]\\d-py)\\d[.]\\d(-\\S+)?[.]egg'



cluster 664 stats:
nPatterns: 1.0
nProjects: 1
shortest: Stream\s*(.*?)[,|:|\(|\[].*?\s*Video:\s*(.*?),\s*(\d*)x(\d*)
Features:

1: LIT|a literal character | 21.0
2: KLE|zero-or-more repetition | 9.0
3: CG|a capture group | 4.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
5: ANY|any non-newline char | 3.0
6: LZY|as few reps as possible | 3.0
7: DEC|any of: 0123456789 | 2.0
8: CCC|custom character class | 1.0


0000 | 0001 | 'Stream\\s*(.*?)[,|:|\\(|\\[].*?\\s*Video:\\s*(.*?),\\s*(\\d*)x(\\d*)'



cluster 665 stats:
nPatterns: 2.0
nProjects: 1
shortest: (<h5><a name="?akas"?.*</table>)
Features:

1: LIT|a literal character | 27.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: QST|zero-or-one repetition | 1.0
5: CG|a capture group | 0.5
6: LZY|as few reps as possible | 0.5


0000 | 0001 | '(<h5><a name="?akas"?.*</table>)'
0001 | 0001 | '<h5>also known as:</h5>.*?</div>'



cluster 666 stats:
nPatterns: 3.0
nProjects: 1
shortest: diff --git a
Features:

1: LIT|a literal character | 13.333333333333334
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NWSP|any non-whitespace | 0.6666666666666666
5: ANY|any non-newline char | 0.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: LZY|as few reps as possible | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333


0000 | 0001 | 'diff --git a'
0001 | 0001 | '.+?(diff --git a)'
0002 | 0001 | '^diff --git a/(\\S+) b/(\\S+)$'



cluster 667 stats:
nPatterns: 2.0
nProjects: 1
shortest: (.+)[-_](\d+)\.(\d+)(\w?)
Features:

1: CG|a capture group | 4.5
2: ADD|one-or-more repetition | 3.5
3: LIT|a literal character | 3.5
4: DEC|any of: 0123456789 | 2.5
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: QST|zero-or-one repetition | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)(\\w?)'
0001 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'



cluster 668 stats:
nPatterns: 1.0
nProjects: 1
shortest: pip \d(\.[\d])+(\.(pre|post)\d+)? from (.*) \(python \d(.[\d])+\)$
Features:

1: LIT|a literal character | 29.0
2: CG|a capture group | 5.0
3: DEC|any of: 0123456789 | 5.0
4: ADD|one-or-more repetition | 3.0
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 2.0
7: END|end-of-line | 1.0
8: KLE|zero-or-more repetition | 1.0
9: OR|logical or | 1.0
10: QST|zero-or-one repetition | 1.0


0000 | 0001 | 'pip \\d(\\.[\\d])+(\\.(pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'



cluster 669 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?i)(?:https?://)?(?:www\.)?dailymotion\.[a-z]{2,3}/video/([^_/]+)_([^/]+)
Features:

1: LIT|a literal character | 37.0
2: QST|zero-or-one repetition | 3.0
3: ADD|one-or-more repetition | 2.0
4: CG|a capture group | 2.0
5: NCCC|negated CCC | 2.0
6: NCG|group without capturing | 2.0
7: CCC|custom character class | 1.0
8: DBB|$n\le x \le m$ repetition | 1.0
9: OPT|options wrapper | 1.0
10: RNG|chars within a range | 1.0


0000 | 0001 | '(?i)(?:https?://)?(?:www\\.)?dailymotion\\.[a-z]{2,3}/video/([^_/]+)_([^/]+)'



cluster 670 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^(?P<username>[A-Za-z0-9_\.-]+@)?(?P<hostname>[A-Za-z0-9_\.-]+):(?P<path>.*)
Features:

1: LIT|a literal character | 20.0
2: RNG|chars within a range | 6.0
3: PNG|named capture group | 3.0
4: ADD|one-or-more repetition | 2.0
5: CCC|custom character class | 2.0
6: ANY|any non-newline char | 1.0
7: KLE|zero-or-more repetition | 1.0
8: QST|zero-or-one repetition | 1.0
9: STR|start-of-line | 1.0


0000 | 0001 | '^(?P<username>[A-Za-z0-9_\\.-]+@)?(?P<hostname>[A-Za-z0-9_\\.-]+):(?P<path>.*)'



cluster 671 stats:
nPatterns: 1.0
nProjects: 1
shortest: \A#([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])\Z
Features:

1: LIT|a literal character | 37.0
2: RNG|chars within a range | 18.0
3: CCC|custom character class | 6.0
4: CG|a capture group | 3.0
5: ENDZ|absolute end of string | 1.0
6: STR|start-of-line | 1.0


0000 | 0001 | '\\A#([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])\\Z'



cluster 672 stats:
nPatterns: 1.0
nProjects: 1
shortest: [^\d]+ (\d+)\.(\d+)\.(\d+)\s*\((?P<datetime>.+?)\)\s*(?P<type>[a-z]+)?
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 6.0
3: DEC|any of: 0123456789 | 4.0
4: CG|a capture group | 3.0
5: KLE|zero-or-more repetition | 2.0
6: PNG|named capture group | 2.0
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
8: ANY|any non-newline char | 1.0
9: CCC|custom character class | 1.0
10: LZY|as few reps as possible | 1.0
11: NCCC|negated CCC | 1.0
12: QST|zero-or-one repetition | 1.0
13: RNG|chars within a range | 1.0


0000 | 0001 | '[^\\d]+ (\\d+)\\.(\\d+)\\.(\\d+)\\s*\\((?P<datetime>.+?)\\)\\s*(?P<type>[a-z]+)?'



cluster 673 stats:
nPatterns: 1.0
nProjects: 1
shortest: \.\.\. ([^#]+)#(\d+) (add|edit|delete|integrate|branch|move/add|move/delete)
Features:

1: LIT|a literal character | 54.0
2: CG|a capture group | 3.0
3: ADD|one-or-more repetition | 2.0
4: DEC|any of: 0123456789 | 1.0
5: NCCC|negated CCC | 1.0
6: OR|logical or | 1.0


0000 | 0001 | '\\.\\.\\. ([^#]+)#(\\d+) (add|edit|delete|integrate|branch|move/add|move/delete)'



cluster 674 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^Multiple results found; try http://search\.vt\.edu/search/people\.html\?q=.*$
Features:

1: LIT|a literal character | 70.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^Multiple results found; try http://search\\.vt\\.edu/search/people\\.html\\?q=.*$'



cluster 675 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^No line number information available for address\s+0x[0-9a-f]+ <(?P<sym>\w+)\+\d+>
Features:

1: LIT|a literal character | 58.0
2: ADD|one-or-more repetition | 4.0
3: RNG|chars within a range | 2.0
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 1.0
6: PNG|named capture group | 1.0
7: STR|start-of-line | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '^No line number information available for address\\s+0x[0-9a-f]+ <(?P<sym>\\w+)\\+\\d+>'



cluster 676 stats:
nPatterns: 1.0
nProjects: 1
shortest: \A(?P<head>.*?)(?P<escape>\\*)(?P<symbol>\$\{(?P<name>[A-z_]\w*)\})(?P<tail>.*)\Z
Features:

1: LIT|a literal character | 7.0
2: PNG|named capture group | 5.0
3: KLE|zero-or-more repetition | 4.0
4: ANY|any non-newline char | 2.0
5: CCC|custom character class | 1.0
6: ENDZ|absolute end of string | 1.0
7: LZY|as few reps as possible | 1.0
8: RNG|chars within a range | 1.0
9: STR|start-of-line | 1.0
10: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '\\A(?P<head>.*?)(?P<escape>\\\\*)(?P<symbol>\\$\\{(?P<name>[A-z_]\\w*)\\})(?P<tail>.*)\\Z'



cluster 677 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^/((usr/)?s?bin|etc/(rc\.d/init\.d|X11/xinit\.d|cron\.(hourly|daily|monthly|weekly)))/
Features:

1: LIT|a literal character | 65.0
2: CG|a capture group | 4.0
3: OR|logical or | 3.0
4: QST|zero-or-one repetition | 2.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^/((usr/)?s?bin|etc/(rc\\.d/init\\.d|X11/xinit\\.d|cron\\.(hourly|daily|monthly|weekly)))/'



cluster 678 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^(In \[\d+\]: |\s*\.{3,}: ?)
Features:

1: LIT|a literal character | 14.5
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: LWB|at least n repetition | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0
7: STR|start-of-line | 1.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
9: CG|a capture group | 0.5
10: DEC|any of: 0123456789 | 0.5
11: END|end-of-line | 0.5
12: KLE|zero-or-more repetition | 0.5
13: LKA|matching sequence follows | 0.5
14: LZY|as few reps as possible | 0.5
15: NWSP|any non-whitespace | 0.5


0000 | 0001 | '^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'
0001 | 0001 | '^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)'



cluster 679 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^timestamp: [a-zA-Z]{3} (\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) ([-+])(\d{2})(\d{2})$
Features:

1: LIT|a literal character | 24.0
2: SNG|exactly n repetition | 9.0
3: DEC|any of: 0123456789 | 8.0
4: CG|a capture group | 4.0
5: CCC|custom character class | 2.0
6: RNG|chars within a range | 2.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0


0000 | 0001 | '^timestamp: [a-zA-Z]{3} (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}) ([-+])(\\d{2})(\\d{2})$'



cluster 680 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^v(?P<ver>\d+(?:\.\d+)+(?:(?:[abc]|rc)\d+(?:\.\d+)*)?)-(?P<commits>\d+)-g(?P<sha>[\da-f]+)$
Features:

1: LIT|a literal character | 13.0
2: ADD|one-or-more repetition | 7.0
3: DEC|any of: 0123456789 | 6.0
4: NCG|group without capturing | 4.0
5: PNG|named capture group | 3.0
6: CCC|custom character class | 2.0
7: END|end-of-line | 1.0
8: KLE|zero-or-more repetition | 1.0
9: OR|logical or | 1.0
10: QST|zero-or-one repetition | 1.0
11: RNG|chars within a range | 1.0
12: STR|start-of-line | 1.0


0000 | 0001 | '^v(?P<ver>\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?)-(?P<commits>\\d+)-g(?P<sha>[\\da-f]+)$'



cluster 681 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s+inet addr:\s*(?P<ipaddr>[0-9\.]+)(\s+Bcast:(?P<bcast>[0-9\.]+))?\s+Mask:(?P<mask>[0-9\.]+)
Features:

1: LIT|a literal character | 30.0
2: ADD|one-or-more repetition | 6.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
4: CCC|custom character class | 3.0
5: PNG|named capture group | 3.0
6: RNG|chars within a range | 3.0
7: CG|a capture group | 1.0
8: KLE|zero-or-more repetition | 1.0
9: QST|zero-or-one repetition | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^\\s+inet addr:\\s*(?P<ipaddr>[0-9\\.]+)(\\s+Bcast:(?P<bcast>[0-9\\.]+))?\\s+Mask:(?P<mask>[0-9\\.]+)'



cluster 682 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?:.*(/|\\))?(?P<artist>.*) - (?P<album>.*)(/|\\)(?P<tracknum>\d{2})-(?P<title>.*)\.(?:\w{2,5})$
Features:

1: LIT|a literal character | 9.0
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 4.0
4: PNG|named capture group | 4.0
5: CG|a capture group | 2.0
6: NCG|group without capturing | 2.0
7: OR|logical or | 2.0
8: DBB|$n\le x \le m$ repetition | 1.0
9: DEC|any of: 0123456789 | 1.0
10: END|end-of-line | 1.0
11: QST|zero-or-one repetition | 1.0
12: SNG|exactly n repetition | 1.0
13: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'



cluster 683 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?x)\n            [\r\n]+(\S+)\n            [\r\n]+(\S+)\n            [\r\n]+.+[\r\n]+(\S+)\n
Features:

1: LIT|a literal character | 48.0
2: ADD|one-or-more repetition | 8.0
3: CCC|custom character class | 4.0
4: CG|a capture group | 3.0
5: NWSP|any non-whitespace | 3.0
6: ANY|any non-newline char | 1.0
7: OPT|options wrapper | 1.0


0000 | 0001 | '(?x)\n            [\\r\\n]+(\\S+)\n            [\\r\\n]+(\\S+)\n            [\\r\\n]+.+[\\r\\n]+(\\S+)\n'



cluster 684 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^std::__debug::deque<.*>$
Features:

1: LIT|a literal character | 26.666666666666668
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^std::__debug::deque<.*>$'
0001 | 0001 | '^std::__debug::unordered_map<.*>$'
0002 | 0001 | '^std::_Rb_tree_const_iterator<.*>$'



cluster 685 stats:
nPatterns: 1.0
nProjects: 1
shortest: #\s+User@Host:\s+(?:([\w\d]+))?\s*\[\s*([\w\d]+)\s*\]\s*@\s*([\w\d]*)\s*\[\s*([\d.]*)\s*\]
Features:

1: LIT|a literal character | 17.0
2: KLE|zero-or-more repetition | 10.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 10.0
4: ADD|one-or-more repetition | 4.0
5: CCC|custom character class | 4.0
6: CG|a capture group | 4.0
7: DEC|any of: 0123456789 | 4.0
8: WRD|[a-zA-Z0-9\_] | 3.0
9: NCG|group without capturing | 1.0
10: QST|zero-or-one repetition | 1.0


0000 | 0001 | '#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'



cluster 686 stats:
nPatterns: 3.0
nProjects: 1
shortest: \W\xd0\xb2\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 7.333333333333333
2: NWRD|non-word chars | 2.0


0000 | 0001 | '\\W\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0002 | 0001 | '\\W\xd1\x81\xd0\xb7\xd0\xb0\xd0\xbe\\W'



cluster 687 stats:
nPatterns: 1.0
nProjects: 1
shortest: (NIST|BLEU) score using\s+\d+-grams = ([0-9.]+) for system "(.*)" on document "(.*)" \((\d+) segments, (\d+) words\)
Features:

1: LIT|a literal character | 81.0
2: CG|a capture group | 6.0
3: ADD|one-or-more repetition | 5.0
4: DEC|any of: 0123456789 | 3.0
5: ANY|any non-newline char | 2.0
6: KLE|zero-or-more repetition | 2.0
7: CCC|custom character class | 1.0
8: OR|logical or | 1.0
9: RNG|chars within a range | 1.0
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '(NIST|BLEU) score using\\s+\\d+-grams = ([0-9.]+) for system "(.*)" on document "(.*)" \\((\\d+) segments, (\\d+) words\\)'



cluster 688 stats:
nPatterns: 1.0
nProjects: 1
shortest: ^\s*([A-Za-z0-9()> -]+)\s+([0-9]+),([0-9A-Fx]+)\s+Value Representation = ([A-Z][A-Z]), Multiplicity = ([0-9n-]+)(.*)\s*$
Features:

1: LIT|a literal character | 67.0
2: RNG|chars within a range | 9.0
3: ADD|one-or-more repetition | 6.0
4: CCC|custom character class | 6.0
5: CG|a capture group | 6.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 4.0
7: KLE|zero-or-more repetition | 3.0
8: ANY|any non-newline char | 1.0
9: END|end-of-line | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '^\\s*([A-Za-z0-9()> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+Value Representation = ([A-Z][A-Z]), Multiplicity = ([0-9n-]+)(.*)\\s*$'



cluster 689 stats:
nPatterns: 2.0
nProjects: 1
shortest: <a href="(http://\w+.craigslist.org/)">([\w ]+)</a>
Features:

1: LIT|a literal character | 38.5
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 2.5
4: WRD|[a-zA-Z0-9\_] | 2.5
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 2.0
7: KLE|zero-or-more repetition | 1.0
8: NWRD|non-word chars | 1.0


0000 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)</a>'
0001 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'



cluster 690 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^(?P<neg>-?)---(?P<D>\d\d)(?P<tz>Z|([-+]\d\d:\d\d))?$
Features:

1: LIT|a literal character | 7.0
2: DEC|any of: 0123456789 | 6.5
3: PNG|named capture group | 3.5
4: QST|zero-or-one repetition | 2.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0
8: OR|logical or | 1.0
9: STR|start-of-line | 1.0
10: LWB|at least n repetition | 0.5


0000 | 0001 | '^(?P<neg>-?)---(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0001 | 0001 | '^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'



cluster 691 stats:
nPatterns: 1.0
nProjects: 1
shortest: <FONT SIZE="-1"><font face="arial,helvetica" size=2><B>The status of this EDM is (CLOSED|SUSPENDED).&nbsp;&nbsp;Reason: (.*?).</B></font>
Features:

1: LIT|a literal character | 127.0
2: ANY|any non-newline char | 3.0
3: CG|a capture group | 2.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0
6: OR|logical or | 1.0


0000 | 0001 | '<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>The status of this EDM is (CLOSED|SUSPENDED).&nbsp;&nbsp;Reason: (.*?).</B></font>'



cluster 692 stats:
nPatterns: 1.0
nProjects: 1
shortest: (?x)\n            [\r\n]+(\S+)\ \n            (\S+)\ +!\ Time\ domain.\ *[\r\n]+\n            (\S+)\ +!\ Number\ of\ tiers.\ *[\r\n]+"\n
Features:

1: LIT|a literal character | 82.0
2: ADD|one-or-more repetition | 8.0
3: CCC|custom character class | 3.0
4: CG|a capture group | 3.0
5: NWSP|any non-whitespace | 3.0
6: ANY|any non-newline char | 2.0
7: KLE|zero-or-more repetition | 2.0
8: OPT|options wrapper | 1.0


0000 | 0001 | '(?x)\n            [\\r\\n]+(\\S+)\\ \n            (\\S+)\\ +!\\ Time\\ domain.\\ *[\\r\\n]+\n            (\\S+)\\ +!\\ Number\\ of\\ tiers.\\ *[\\r\\n]+"\n'



cluster 693 stats:
nPatterns: 2.0
nProjects: 1
shortest: <(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w>--<(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w>
Features:

1: DEC|any of: 0123456789 | 20.0
2: LIT|a literal character | 18.0
3: CG|a capture group | 8.0
4: WRD|[a-zA-Z0-9\_] | 4.0
5: CCC|custom character class | 2.0
6: RNG|chars within a range | 2.0


0000 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>'
0001 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'



cluster 694 stats:
nPatterns: 2.0
nProjects: 1
shortest: (?:<FONT SIZE="-1">|<font face="arial,helvetica" size=2><(?:B|I)>)([^<]*?)/([^<]*?)(?:</(?:B|I)></font>|</FONT>)
Features:

1: LIT|a literal character | 101.5
2: NCG|group without capturing | 3.0
3: OR|logical or | 3.0
4: KLE|zero-or-more repetition | 2.0
5: CG|a capture group | 1.5
6: LZY|as few reps as possible | 1.5
7: NCCC|negated CCC | 1.0
8: ANY|any non-newline char | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '(?:<FONT SIZE="-1">|<font face="arial,helvetica" size=2><(?:B|I)>)([^<]*?)/([^<]*?)(?:</(?:B|I)></font>|</FONT>)'
0001 | 0001 | '<TD>(?:<font face="arial,helvetica" size=2>|<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>)\\s*(.*?)(?:</font>|</B></font></FONT>)</TD>'



cluster 695 stats:
nPatterns: 4.0
nProjects: 1
shortest: ([a-z]*) ([\d-]+) ([a-z]*)[\s\t]*([0-9:, -]+)
Features:

1: LIT|a literal character | 21.0
2: CCC|custom character class | 6.75
3: CG|a capture group | 6.0
4: KLE|zero-or-more repetition | 4.0
5: RNG|chars within a range | 4.0
6: ADD|one-or-more repetition | 3.0
7: DEC|any of: 0123456789 | 2.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*)[\\s\t]*([0-9:, -]+)'
0001 | 0001 | '([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+)[\\s\t]*([0-9:, -]+)'
0002 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'
0003 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'



cluster 696 stats:
nPatterns: 1.0
nProjects: 1
shortest: \n            (?:^[ \t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        
Features:

1: LIT|a literal character | 347.0
2: CG|a capture group | 6.0
3: CCC|custom character class | 5.0
4: ADD|one-or-more repetition | 4.0
5: ANY|any non-newline char | 4.0
6: QST|zero-or-one repetition | 4.0
7: RNG|chars within a range | 4.0
8: NCG|group without capturing | 2.0
9: KLE|zero-or-more repetition | 1.0
10: STR|start-of-line | 1.0


0000 | 0001 | '\n            (?:^[ \\t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        '



