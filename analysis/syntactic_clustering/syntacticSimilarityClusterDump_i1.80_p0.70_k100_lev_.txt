Cluster stats:

nClusters: 89
TotalPatterns: 234
totalnProjects: 283
suffix: _i1.80_p0.70_k100_lev_


cluster 0 stats:
nPatterns: 6.0
nProjects: 72
shortest: \s*,\s*
Features:

1: KLE|zero-or-more repetition | 2.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: LIT|a literal character | 1.3333333333333333
4: END|end-of-line | 0.3333333333333333
5: QST|zero-or-one repetition | 0.3333333333333333
6: STR|start-of-line | 0.16666666666666666


0000 | 0054 | '\\s*,\\s*'
0001 | 0017 | '\\s*#?\\s*$'
0002 | 0002 | '\\s*\\{\\s*'
0003 | 0002 | u'\\s*,?\\s*'
0004 | 0002 | '^\\s*//\\s*$'
0005 | 0001 | '\\s*\\(\\s*\\('



cluster 1 stats:
nPatterns: 4.0
nProjects: 38
shortest: ^\d+$
Features:

1: ADD|one-or-more repetition | 1.0
2: END|end-of-line | 1.0
3: DEC|any of: 0123456789 | 0.75
4: LIT|a literal character | 0.5
5: STR|start-of-line | 0.5
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0015 | u'^\\d+$'
0001 | 0014 | '^\\s+$'
0002 | 0009 | ':\\d+$'
0003 | 0001 | 'p\\d+$'



cluster 2 stats:
nPatterns: 3.0
nProjects: 36
shortest: \W+
Features:

1: ADD|one-or-more repetition | 1.0
2: NWRD|non-word chars | 0.6666666666666666
3: STR|start-of-line | 0.6666666666666666
4: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0026 | '\\W+'
0001 | 0006 | '^\\W+'
0002 | 0001 | '^\\S+'



cluster 3 stats:
nPatterns: 2.0
nProjects: 21
shortest: ^(?:=)$
Features:

1: END|end-of-line | 1.0
2: LIT|a literal character | 1.0
3: NCG|group without capturing | 1.0
4: STR|start-of-line | 1.0


0000 | 0021 | u'^(?:=)$'
0001 | 0003 | '^(?:=)$'



cluster 4 stats:
nPatterns: 2.0
nProjects: 21
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 3.5
2: KLE|zero-or-more repetition | 1.0
3: NCCC|negated CCC | 1.0
4: LZY|as few reps as possible | 0.5


0000 | 0019 | '<[^>]*?>'
0001 | 0002 | '<![^>]*>'



cluster 5 stats:
nPatterns: 3.0
nProjects: 20
shortest: \S+ (\d+)\.(\d+)\.?(\d+)?
Features:

1: CG|a capture group | 4.0
2: ADD|one-or-more repetition | 3.6666666666666665
3: DEC|any of: 0123456789 | 3.3333333333333335
4: LIT|a literal character | 3.3333333333333335
5: ANY|any non-newline char | 0.6666666666666666
6: KLE|zero-or-more repetition | 0.6666666666666666
7: QST|zero-or-one repetition | 0.6666666666666666
8: END|end-of-line | 0.3333333333333333
9: NWSP|any non-whitespace | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333


0000 | 0016 | '\\S+ (\\d+)\\.(\\d+)\\.?(\\d+)?'
0001 | 0002 | '(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'
0002 | 0002 | '^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'



cluster 6 stats:
nPatterns: 2.0
nProjects: 19
shortest: Revision: (.+)
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: ANY|any non-newline char | 0.5
5: CCC|custom character class | 0.5
6: RNG|chars within a range | 0.5


0000 | 0017 | 'Revision: (.+)'
0001 | 0002 | 'Revision: ([0-9]+)'



cluster 7 stats:
nPatterns: 5.0
nProjects: 19
shortest: <[a-zA-Z][-.a-zA-Z0-9]*/
Features:

1: LIT|a literal character | 14.2
2: RNG|chars within a range | 5.2
3: CCC|custom character class | 2.0
4: KLE|zero-or-more repetition | 1.0
5: CG|a capture group | 0.4
6: END|end-of-line | 0.4
7: STR|start-of-line | 0.2


0000 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0001 | 0002 | '@%\\(([a-zA-Z][a-zA-Z0-9_-]*)\\)s'
0002 | 0001 | '([a-zA-Z_][a-zA-Z0-9_]*)'
0003 | 0001 | '\\?[a-zA-Z_][a-zA-Z0-9_]*$'
0004 | 0001 | '^&[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'



cluster 8 stats:
nPatterns: 4.0
nProjects: 17
shortest: ([^:]*):(.*)
Features:

1: LIT|a literal character | 2.25
2: CG|a capture group | 2.0
3: KLE|zero-or-more repetition | 2.0
4: ANY|any non-newline char | 1.25
5: NCCC|negated CCC | 1.0
6: STR|start-of-line | 0.75
7: END|end-of-line | 0.5
8: ADD|one-or-more repetition | 0.25


0000 | 0015 | '^([^=]*)=(.*)$'
0001 | 0008 | '^([^:]*): *(.*)'
0002 | 0001 | '([^:]*):(.*)'
0003 | 0001 | '^([^:]+):.(.*)$'



cluster 9 stats:
nPatterns: 3.0
nProjects: 16
shortest: ([0-9]+)
Features:

1: LIT|a literal character | 2.6666666666666665
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0


0000 | 0013 | '([0-9]+)'
0001 | 0002 | '%([0-9]+)'
0002 | 0001 | "([0-9]+)'"



cluster 10 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^http://
Features:

1: LIT|a literal character | 8.0
2: STR|start-of-line | 0.5


0000 | 0013 | '^http://'
0001 | 0002 | '  http://'



cluster 11 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^(\d{10})$
Features:

1: CG|a capture group | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 1.0
4: SNG|exactly n repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0012 | '^(\\d{10})$'
0001 | 0003 | u'^(\\d{10})$'



cluster 12 stats:
nPatterns: 3.0
nProjects: 15
shortest: ^(?P<number>\d{7})(?P<check>\d)$
Features:

1: DEC|any of: 0123456789 | 2.0
2: PNG|named capture group | 2.0
3: END|end-of-line | 1.0
4: STR|start-of-line | 1.0
5: SNG|exactly n repetition | 0.6666666666666666
6: DBB|$n\le x \le m$ repetition | 0.3333333333333333
7: LIT|a literal character | 0.3333333333333333
8: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0001 | 0003 | u'^(?P<number>\\d{7})(?P<check>\\d)$'
0002 | 0003 | u'^(?P<number>\\d{1,8})-?(?P<check>\\d)$'



cluster 13 stats:
nPatterns: 2.0
nProjects: 14
shortest: ^[a-zA-Z_][a-zA-Z_0-9]*(\.[a-zA-Z_][a-zA-Z_0-9]*)*$
Features:

1: LIT|a literal character | 27.0
2: RNG|chars within a range | 10.0
3: CCC|custom character class | 4.0
4: KLE|zero-or-more repetition | 2.0
5: CG|a capture group | 1.0
6: END|end-of-line | 0.5
7: QST|zero-or-one repetition | 0.5
8: STR|start-of-line | 0.5


0000 | 0013 | '^[a-zA-Z_][a-zA-Z_0-9]*(\\.[a-zA-Z_][a-zA-Z_0-9]*)*$'
0001 | 0001 | '[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?'



cluster 14 stats:
nPatterns: 2.0
nProjects: 13
shortest: ^ *\n
Features:

1: LIT|a literal character | 2.0
2: KLE|zero-or-more repetition | 1.0
3: STR|start-of-line | 1.0


0000 | 0013 | '^ *\n'
0001 | 0012 | '^-*\n'



cluster 15 stats:
nPatterns: 3.0
nProjects: 13
shortest: $(\w+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: WRD|[a-zA-Z0-9\_] | 1.0
4: LIT|a literal character | 0.6666666666666666
5: END|end-of-line | 0.3333333333333333


0000 | 0008 | '$(\\w+)'
0001 | 0004 | '\\$(\\w+)'
0002 | 0001 | ':(\\w+)'



cluster 16 stats:
nPatterns: 3.0
nProjects: 13
shortest: (\w+)(.*)
Features:

1: CG|a capture group | 2.0
2: KLE|zero-or-more repetition | 1.6666666666666667
3: ANY|any non-newline char | 1.0
4: LIT|a literal character | 0.6666666666666666
5: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
6: ADD|one-or-more repetition | 0.3333333333333333
7: NWSP|any non-whitespace | 0.3333333333333333


0000 | 0006 | '@(\\w*)(.*)'
0001 | 0005 | '(\\w+)(.*)'
0002 | 0002 | '(!\\S*)(.*)'



cluster 17 stats:
nPatterns: 2.0
nProjects: 13
shortest: (\d+\.\d+\.\d+)
Features:

1: ADD|one-or-more repetition | 3.0
2: DEC|any of: 0123456789 | 3.0
3: LIT|a literal character | 2.0
4: CG|a capture group | 0.5
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0012 | '(\\d+\\.\\d+\\.\\d+)'
0001 | 0001 | '^\\d+\\-\\d+\\-\\d+$'



cluster 18 stats:
nPatterns: 5.0
nProjects: 13
shortest: \[.*\]
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 0.8
5: END|end-of-line | 0.6
6: CG|a capture group | 0.2


0000 | 0006 | '^\\[.*\\]$'
0001 | 0003 | '\\[.*\\]'
0002 | 0003 | '^\\[.*\\]'
0003 | 0001 | '^\\(.*\\)$'
0004 | 0001 | '^\\[(.*)\\]$'



cluster 19 stats:
nPatterns: 2.0
nProjects: 13
shortest: SECRET|PASSWORD|PROFANITIES_LIST
Features:

1: LIT|a literal character | 34.5
2: OR|logical or | 1.0


0000 | 0008 | 'SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE'
0001 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'



cluster 20 stats:
nPatterns: 2.0
nProjects: 12
shortest: \\n
Features:

1: LIT|a literal character | 2.0


0000 | 0006 | '\\\\n'
0001 | 0005 | '\\\\\\n'



cluster 21 stats:
nPatterns: 3.0
nProjects: 11
shortest: [\t ]+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: CG|a capture group | 0.3333333333333333
5: END|end-of-line | 0.3333333333333333


0000 | 0007 | '([\\t ]+)'
0001 | 0003 | '[\n ]+$'
0002 | 0001 | '[\t ]+'



cluster 22 stats:
nPatterns: 4.0
nProjects: 11
shortest: ^[0-9]{2}$
Features:

1: LIT|a literal character | 4.5
2: RNG|chars within a range | 1.75
3: CCC|custom character class | 1.0
4: SNG|exactly n repetition | 1.0
5: END|end-of-line | 0.75
6: STR|start-of-line | 0.5


0000 | 0007 | 'md5=[0-9a-f]{32}$'
0001 | 0002 | '^[0-9]{2}$'
0002 | 0001 | '[0-9a-f]{32}'
0003 | 0001 | '^[0-9a-f]{32}$'



cluster 23 stats:
nPatterns: 2.0
nProjects: 10
shortest: ^(\s+)
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: STR|start-of-line | 1.0
4: LIT|a literal character | 0.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0009 | '^(\\s+)'
0001 | 0001 | '^(\\?+)'



cluster 24 stats:
nPatterns: 2.0
nProjects: 10
shortest: ^([A-Z]+)([0-9]+)$
Features:

1: LIT|a literal character | 5.0
2: CCC|custom character class | 2.5
3: RNG|chars within a range | 2.5
4: CG|a capture group | 2.0
5: ADD|one-or-more repetition | 1.5
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: KLE|zero-or-more repetition | 0.5


0000 | 0009 | '^([A-Z]+)([1-9][0-9]*)$'
0001 | 0001 | '^([A-Z]+)([0-9]+)$'



cluster 25 stats:
nPatterns: 2.0
nProjects: 10
shortest: url\s*\(\s*[^#\s][^)]+?\)
Features:

1: LIT|a literal character | 7.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: ADD|one-or-more repetition | 1.0
6: LZY|as few reps as possible | 1.0


0000 | 0006 | 'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0001 | 0004 | u'url\\s*\\(\\s*[^#\\s][^)]+?\\)'



cluster 26 stats:
nPatterns: 2.0
nProjects: 9
shortest: (:*)
Features:

1: CG|a capture group | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0


0000 | 0008 | '(:*)'
0001 | 0001 | u'(x*)'



cluster 27 stats:
nPatterns: 3.0
nProjects: 9
shortest: [\r\n]+
Features:

1: LIT|a literal character | 2.3333333333333335
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: DEC|any of: 0123456789 | 0.3333333333333333


0000 | 0006 | '[\\r\\n]+'
0001 | 0002 | '[\\d\\.]+'
0002 | 0001 | '[ \r\n\t]+'



cluster 28 stats:
nPatterns: 3.0
nProjects: 9
shortest: [a-zA-Z]
Features:

1: LIT|a literal character | 4.333333333333333
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.0
4: STR|start-of-line | 0.6666666666666666
5: ADD|one-or-more repetition | 0.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0007 | '[a-zA-Z]'
0001 | 0001 | '^[a-zA-Z]*$'
0002 | 0001 | '^[a-zA-Z]+='



cluster 29 stats:
nPatterns: 2.0
nProjects: 9
shortest: ^([a-zA-Z0-9_]*) *=.*$
Features:

1: LIT|a literal character | 9.0
2: RNG|chars within a range | 3.0
3: KLE|zero-or-more repetition | 2.5
4: CCC|custom character class | 1.5
5: ANY|any non-newline char | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0
8: STR|start-of-line | 1.0
9: QST|zero-or-one repetition | 0.5


0000 | 0008 | '^([a-zA-F0-9_-]*)[\\.]?.*$'
0001 | 0001 | '^([a-zA-Z0-9_]*) *=.*$'



cluster 30 stats:
nPatterns: 5.0
nProjects: 9
shortest: '(.*)'
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 0.8
5: END|end-of-line | 0.6
6: STR|start-of-line | 0.6
7: ADD|one-or-more repetition | 0.2


0000 | 0005 | "^'(.*)'$"
0001 | 0001 | "'(.*)'"
0002 | 0001 | "'(.*)'$"
0003 | 0001 | '^-(.*)$'
0004 | 0001 | "^'(.+)'@"



cluster 31 stats:
nPatterns: 2.0
nProjects: 8
shortest: (?P<a>x)
Features:

1: LIT|a literal character | 1.0
2: PNG|named capture group | 1.0


0000 | 0008 | '(?P<a>x)'
0001 | 0008 | '(?P<unk>x)'



cluster 32 stats:
nPatterns: 2.0
nProjects: 8
shortest: ^[a-zA-Z_]\w*
Features:

1: LIT|a literal character | 5.0
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0
6: WRD|[a-zA-Z0-9\_] | 1.0
7: END|end-of-line | 0.5


0000 | 0007 | '^[a-zA-Z_]\\w*'
0001 | 0001 | '^[a-z|A-Z]\\w*$'



cluster 33 stats:
nPatterns: 2.0
nProjects: 8
shortest: (\S+): (\S+)
Features:

1: ADD|one-or-more repetition | 2.5
2: CG|a capture group | 2.0
3: NWSP|any non-whitespace | 2.0
4: LIT|a literal character | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0005 | '(\\S+)\\s+(\\S+)'
0001 | 0003 | '(\\S+): (\\S+)'



cluster 34 stats:
nPatterns: 2.0
nProjects: 7
shortest: [\x00-\x20]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0


0000 | 0007 | '[\\x00-\\x20]'
0001 | 0003 | '[\\x00-\\x1f]'



cluster 35 stats:
nPatterns: 2.0
nProjects: 6
shortest: (?<!\\),
Features:

1: LIT|a literal character | 2.0
2: NLKB|sequence doesn't precede | 1.0


0000 | 0005 | '(?<!\\\\),'
0001 | 0001 | '(?<!\\\\)%'



cluster 36 stats:
nPatterns: 3.0
nProjects: 6
shortest: "(.*?)"
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 0.6666666666666666
6: END|end-of-line | 0.3333333333333333


0000 | 0003 | '"(.*?)"'
0001 | 0001 | '{(.*)}$'
0002 | 0001 | '{(.*?)}'



cluster 37 stats:
nPatterns: 4.0
nProjects: 6
shortest: ([\s\\])
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25


0000 | 0003 | '([\\s\\\\])'
0001 | 0001 | '([$`\\\\])'
0002 | 0001 | '([\\t\\n])'
0003 | 0001 | '([\\{\\}])'



cluster 38 stats:
nPatterns: 2.0
nProjects: 6
shortest: (\d+)\.(\d+)(?:\.(\d+))?
Features:

1: ADD|one-or-more repetition | 3.0
2: CG|a capture group | 3.0
3: DEC|any of: 0123456789 | 3.0
4: LIT|a literal character | 2.0
5: NCG|group without capturing | 1.0
6: QST|zero-or-one repetition | 1.0
7: STR|start-of-line | 0.5


0000 | 0003 | '(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0001 | 0003 | '^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'



cluster 39 stats:
nPatterns: 3.0
nProjects: 6
shortest: [^A-Za-z0-9.]+
Features:

1: LIT|a literal character | 8.333333333333334
2: RNG|chars within a range | 3.0
3: NCCC|negated CCC | 1.0
4: ADD|one-or-more repetition | 0.3333333333333333
5: CG|a capture group | 0.3333333333333333


0000 | 0004 | u'[^A-Za-z0-9.]+'
0001 | 0001 | '([^A-Za-z0-9\\._-])'
0002 | 0001 | u'[^A-Za-z0-9_\\.\\-]'



cluster 40 stats:
nPatterns: 2.0
nProjects: 5
shortest: [-.]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0


0000 | 0004 | '[-.]'
0001 | 0001 | '[-:]'



cluster 41 stats:
nPatterns: 3.0
nProjects: 5
shortest: {(\d+)\}
Features:

1: LIT|a literal character | 2.3333333333333335
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: WRD|[a-zA-Z0-9\_] | 0.6666666666666666
5: DEC|any of: 0123456789 | 0.3333333333333333


0000 | 0003 | '\\${(\\w+)}'
0001 | 0001 | '{(\\d+)\\}'
0002 | 0001 | '\\{(\\w+)\\}'



cluster 42 stats:
nPatterns: 2.0
nProjects: 5
shortest: [a-zA-Z0-9_]{2,10}
Features:

1: LIT|a literal character | 7.0
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.0
4: DBB|$n\le x \le m$ repetition | 1.0
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0004 | '^[a-zA-Z0-9-]{1,100}$'
0001 | 0001 | '[a-zA-Z0-9_]{2,10}'



cluster 43 stats:
nPatterns: 2.0
nProjects: 5
shortest: ^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d$
Features:

1: DEC|any of: 0123456789 | 12.5
2: LIT|a literal character | 5.0
3: END|end-of-line | 0.5
4: SNG|exactly n repetition | 0.5
5: STR|start-of-line | 0.5


0000 | 0004 | '^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$'
0001 | 0001 | '\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d'



cluster 44 stats:
nPatterns: 2.0
nProjects: 4
shortest: ([a-zA-Z0-9]*)$
Features:

1: LIT|a literal character | 6.5
2: RNG|chars within a range | 3.0
3: CG|a capture group | 1.0
4: CCC|custom character class | 0.5
5: END|end-of-line | 0.5
6: KLE|zero-or-more repetition | 0.5
7: NCCC|negated CCC | 0.5


0000 | 0003 | '([a-zA-Z0-9]*)$'
0001 | 0001 | '([^a-zA-Z_0-9])'



cluster 45 stats:
nPatterns: 3.0
nProjects: 4
shortest: [^+0-9]
Features:

1: LIT|a literal character | 3.3333333333333335
2: NCCC|negated CCC | 1.0
3: RNG|chars within a range | 1.0


0000 | 0002 | '[^0-9:\\.]'
0001 | 0001 | '[^+0-9]'
0002 | 0001 | '[^0-9.]'



cluster 46 stats:
nPatterns: 3.0
nProjects: 4
shortest: [0-9a-fA-F]{6}
Features:

1: LIT|a literal character | 6.666666666666667
2: RNG|chars within a range | 3.0
3: CCC|custom character class | 1.0
4: SNG|exactly n repetition | 1.0
5: CG|a capture group | 0.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0002 | '^\\#([0-9a-fA-F]{6})$'
0001 | 0001 | '[0-9a-fA-F]{6}'
0002 | 0001 | '#[0-9a-fA-F]{6}'



cluster 47 stats:
nPatterns: 2.0
nProjects: 4
shortest: #\{?if\}?\(.+?\).*?#\{?end\}?
Features:

1: LIT|a literal character | 14.5
2: QST|zero-or-one repetition | 4.0
3: ANY|any non-newline char | 2.0
4: LZY|as few reps as possible | 2.0
5: KLE|zero-or-more repetition | 1.5
6: ADD|one-or-more repetition | 0.5


0000 | 0004 | '#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'
0001 | 0004 | '#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'



cluster 48 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^http://testserver/somewhere/else/\?c=\d+#baz$
Features:

1: LIT|a literal character | 44.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0004 | '^http://testserver/somewhere/else/\\?c=\\d+#baz$'
0001 | 0004 | '^http://testserver/somewhere/else/\\?foo=bar&c=\\d+#baz$'



cluster 49 stats:
nPatterns: 2.0
nProjects: 3
shortest: %(.)
Features:

1: ANY|any non-newline char | 1.5
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0


0000 | 0002 | '%(.)'
0001 | 0001 | '%(..)'



cluster 50 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^.*\/
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: STR|start-of-line | 1.0


0000 | 0002 | '^.*\\/'
0001 | 0001 | '^.*\\('



cluster 51 stats:
nPatterns: 2.0
nProjects: 3
shortest: (\s|,)+
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: OR|logical or | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(\\s|,)+'
0001 | 0001 | '(\\s|_)+'



cluster 52 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^\d+(\.\d+)*$
Features:

1: ADD|one-or-more repetition | 2.0
2: DEC|any of: 0123456789 | 2.0
3: CG|a capture group | 1.0
4: END|end-of-line | 1.0
5: LIT|a literal character | 1.0
6: STR|start-of-line | 1.0
7: KLE|zero-or-more repetition | 0.5
8: LWB|at least n repetition | 0.5


0000 | 0003 | u'^\\d+(\\.\\d+)*$'
0001 | 0001 | '^\\d+(\\.\\d+){1,}$'



cluster 53 stats:
nPatterns: 2.0
nProjects: 3
shortest: \.(js|java)(?:\.in)?$
Features:

1: LIT|a literal character | 11.5
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: NCG|group without capturing | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '\\.(js|java)(?:\\.in)?$'
0001 | 0001 | '\\.(js|jsm|java)(?:\\.in)?$'



cluster 54 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^([0-9]{4})\.([0-9]+)\.([0-9]+)$
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 3.5
3: CCC|custom character class | 3.0
4: RNG|chars within a range | 3.0
5: ADD|one-or-more repetition | 2.5
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: ANY|any non-newline char | 0.5
9: KLE|zero-or-more repetition | 0.5
10: LZY|as few reps as possible | 0.5
11: SNG|exactly n repetition | 0.5


0000 | 0002 | '^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'
0001 | 0001 | '^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'



cluster 55 stats:
nPatterns: 3.0
nProjects: 3
shortest: \b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\b
Features:

1: LIT|a literal character | 13.333333333333334
2: RNG|chars within a range | 6.0
3: CCC|custom character class | 2.3333333333333335
4: SNG|exactly n repetition | 2.3333333333333335
5: CG|a capture group | 1.0
6: DBB|$n\le x \le m$ repetition | 0.6666666666666666
7: END|end-of-line | 0.6666666666666666
8: STR|start-of-line | 0.6666666666666666
9: WNW|word/non-word boundary | 0.6666666666666666


0000 | 0001 | '^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$'
0001 | 0001 | '\\b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\\b'
0002 | 0001 | '^([0-9a-fA-F]{1,2}:){5}[0-9a-fA-F]{1,2}$'



cluster 56 stats:
nPatterns: 3.0
nProjects: 3
shortest: [-+]?(\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?
Features:

1: LIT|a literal character | 8.0
2: DEC|any of: 0123456789 | 4.666666666666667
3: QST|zero-or-one repetition | 4.0
4: ADD|one-or-more repetition | 3.0
5: CCC|custom character class | 3.0
6: NCG|group without capturing | 2.0
7: CG|a capture group | 1.6666666666666667
8: KLE|zero-or-more repetition | 1.6666666666666667
9: OR|logical or | 1.0


0000 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0001 | 0001 | '[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'
0002 | 0001 | '([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'



cluster 57 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\(
Features:

1: LIT|a literal character | 1.5
2: STR|start-of-line | 1.0


0000 | 0001 | '^\\('
0001 | 0001 | '^_\\('



cluster 58 stats:
nPatterns: 2.0
nProjects: 2
shortest: foo.*bar
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5


0000 | 0002 | 'foo.*bar'
0001 | 0002 | '.*foo.*bar'



cluster 59 stats:
nPatterns: 2.0
nProjects: 2
shortest: \d+:\d+
Features:

1: ADD|one-or-more repetition | 2.0
2: DEC|any of: 0123456789 | 2.0
3: LIT|a literal character | 1.0
4: STR|start-of-line | 0.5


0000 | 0001 | '\\d+:\\d+'
0001 | 0001 | '^\\d+-\\d+'



cluster 60 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\{.+\}
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 0.5
5: STR|start-of-line | 0.5


0000 | 0001 | '^\\{.+\\}'
0001 | 0001 | '(\\{.+\\})'



cluster 61 stats:
nPatterns: 2.0
nProjects: 2
shortest: [^a-zA-Z0-9_ -]
Features:

1: LIT|a literal character | 8.5
2: RNG|chars within a range | 3.0
3: NCCC|negated CCC | 1.0


0000 | 0001 | '[^a-zA-Z0-9_ -]'
0001 | 0001 | '[^a-zA-Z0-9_\\.]'



cluster 62 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^Uid:\s+(\d+)
Features:

1: LIT|a literal character | 4.5
2: ADD|one-or-more repetition | 2.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: STR|start-of-line | 1.0
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: END|end-of-line | 0.5


0000 | 0001 | '^Uid:\\s+(\\d+)'
0001 | 0001 | '^PPid:\\s+(\\d+)$'



cluster 63 stats:
nPatterns: 2.0
nProjects: 2
shortest: test_file_commit1
Features:

1: LIT|a literal character | 17.0


0000 | 0002 | 'test_file_commit1'
0001 | 0002 | 'test_file_commit2'



cluster 64 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?i)handy(.*)nummer
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OPT|options wrapper | 1.0


0000 | 0002 | '(?i)handy(.*)nummer'
0001 | 0002 | '(?i)pager(.*)nummer'



cluster 65 stats:
nPatterns: 3.0
nProjects: 2
shortest: ^[\w._-]+
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: CG|a capture group | 0.6666666666666666
6: DEC|any of: 0123456789 | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0001 | '^[\\w._-]+'
0001 | 0001 | '([\\w._-]+)'
0002 | 0001 | '([\\w\\d]+)'



cluster 66 stats:
nPatterns: 2.0
nProjects: 2
shortest: <script .*?</script>
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: LZY|as few reps as possible | 1.5


0000 | 0001 | '<script .*?</script>'
0001 | 0001 | '<script.*?>.*?</script>'



cluster 67 stats:
nPatterns: 3.0
nProjects: 2
shortest: LL_VERSION_BUILD\s=\s([0-9]+)
Features:

1: LIT|a literal character | 19.666666666666668
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: ADD|one-or-more repetition | 1.0
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: RNG|chars within a range | 1.0


0000 | 0001 | 'LL_VERSION_BUILD\\s=\\s([0-9]+)'
0001 | 0001 | 'IMP_VERSION_MAJOR\\s=\\s([0-9]+)'
0002 | 0001 | 'IMP_VERSION_PATCH\\s=\\s([0-9]+)'



cluster 68 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\d+) seconds.*?"
Features:

1: LIT|a literal character | 68.5
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 3.5
4: LZY|as few reps as possible | 3.5
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds.*?"'
0001 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds. Killing!"'



cluster 69 stats:
nPatterns: 7.0
nProjects: 2
shortest: (\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
Features:

1: LIT|a literal character | 19.857142857142858
2: CG|a capture group | 0.7142857142857143
3: OR|logical or | 0.2857142857142857
4: ANY|any non-newline char | 0.14285714285714285
5: KLE|zero-or-more repetition | 0.14285714285714285


0000 | 0001 | '(\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0001 | 0001 | '\xd0\xb0\xd0\xbb\xd1\x82\xd1\x83\xd1\x84\xd1\x8c\xd0\xb5\xd0\xb2\xd0\xbe'
0002 | 0001 | '\xd0\xb2\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe'
0003 | 0001 | '(\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0004 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xbe\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0005 | 0001 | '\xd1\x82\xd1\x83\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0006 | 0001 | '\xd0\x98\xd0\xb7\xd0\xb1\xd1\x80\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \\((.*)\\)<\\/a>'



cluster 70 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^//(.*)
Features:

1: LIT|a literal character | 2.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 0.5


0000 | 0001 | '^//(.*)'
0001 | 0001 | '\\ //(.*)'



cluster 71 stats:
nPatterns: 2.0
nProjects: 1
shortest: href="(.*?)"
Features:

1: LIT|a literal character | 7.5
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0001 | 'href="(.*?)"'
0001 | 0001 | 'Href="(.*?)">'



cluster 72 stats:
nPatterns: 2.0
nProjects: 1
shortest: [#][\dA-F]{3}
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 2.0
3: DEC|any of: 0123456789 | 1.0
4: RNG|chars within a range | 1.0
5: SNG|exactly n repetition | 1.0


0000 | 0001 | '[#][\\dA-F]{3}'
0001 | 0001 | '[#][\\dA-F]{6}'



cluster 73 stats:
nPatterns: 2.0
nProjects: 1
shortest: guibg=#*(\w+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'guibg=#*(\\w+)'
0001 | 0001 | 'guifg=#*(\\w+)'



cluster 74 stats:
nPatterns: 2.0
nProjects: 1
shortest: diff --git a
Features:

1: LIT|a literal character | 12.0
2: ADD|one-or-more repetition | 0.5
3: ANY|any non-newline char | 0.5
4: CG|a capture group | 0.5
5: LZY|as few reps as possible | 0.5


0000 | 0001 | 'diff --git a'
0001 | 0001 | '.+?(diff --git a)'



cluster 75 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^.*RLELossless.*$
Features:

1: LIT|a literal character | 11.5
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^.*RLELossless.*$'
0001 | 0001 | '^.*JPEGLossless.*$'



cluster 76 stats:
nPatterns: 2.0
nProjects: 1
shortest: Simple_1Of_1unk_svc
Features:

1: LIT|a literal character | 19.5


0000 | 0001 | 'Simple_1Of_1unk_svc'
0001 | 0001 | 'Simple_1Of_1unk_host'



cluster 77 stats:
nPatterns: 2.0
nProjects: 1
shortest: \bLCOV_EXCL_LINE\b
Features:

1: LIT|a literal character | 14.5
2: WNW|word/non-word boundary | 2.0


0000 | 0001 | '\\bLCOV_EXCL_LINE\\b'
0001 | 0001 | '\\bLCOV_EXCL_START\\b'



cluster 78 stats:
nPatterns: 2.0
nProjects: 1
shortest: <pre><a name="foo-1">
Features:

1: LIT|a literal character | 21.0


0000 | 0001 | '<pre><a name="foo-1">'
0001 | 0001 | '<pre><a name="foo-5">'



cluster 79 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^dhcp\.pool\.start$
Features:

1: LIT|a literal character | 15.5
2: END|end-of-line | 1.0
3: STR|start-of-line | 1.0


0000 | 0001 | '^dhcp\\.pool\\.start$'
0001 | 0001 | '^dhcp\\.scope\\.start$'



cluster 80 stats:
nPatterns: 2.0
nProjects: 1
shortest: (.+)[-_](\d+)\.(\d+)(\w?)
Features:

1: CG|a capture group | 4.5
2: ADD|one-or-more repetition | 3.5
3: LIT|a literal character | 3.5
4: DEC|any of: 0123456789 | 2.5
5: ANY|any non-newline char | 1.0
6: CCC|custom character class | 1.0
7: QST|zero-or-one repetition | 1.0
8: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)(\\w?)'
0001 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'



cluster 81 stats:
nPatterns: 2.0
nProjects: 1
shortest: (?!__init__)[0-9a-zA-Z_]*(\.py)?$
Features:

1: LIT|a literal character | 18.5
2: RNG|chars within a range | 3.0
3: QST|zero-or-one repetition | 1.5
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NLKA|sequence doesn't follow  | 1.0


0000 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'
0001 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'



cluster 82 stats:
nPatterns: 3.0
nProjects: 1
shortest: \W\xd0\xb2\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 7.333333333333333
2: NWRD|non-word chars | 2.0


0000 | 0001 | '\\W\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0002 | 0001 | '\\W\xd1\x81\xd0\xb7\xd0\xb0\xd0\xbe\\W'



cluster 83 stats:
nPatterns: 2.0
nProjects: 1
shortest: <a href="(http://\w+.craigslist.org/)">([\w ]+)</a>
Features:

1: LIT|a literal character | 38.5
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 2.5
4: WRD|[a-zA-Z0-9\_] | 2.5
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 2.0
7: KLE|zero-or-more repetition | 1.0
8: NWRD|non-word chars | 1.0


0000 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)</a>'
0001 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'



cluster 84 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^(?P<neg>-?)---(?P<D>\d\d)(?P<tz>Z|([-+]\d\d:\d\d))?$
Features:

1: LIT|a literal character | 7.0
2: DEC|any of: 0123456789 | 6.5
3: PNG|named capture group | 3.5
4: QST|zero-or-one repetition | 2.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0
8: OR|logical or | 1.0
9: STR|start-of-line | 1.0
10: LWB|at least n repetition | 0.5


0000 | 0001 | '^(?P<neg>-?)---(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0001 | 0001 | '^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'



cluster 85 stats:
nPatterns: 2.0
nProjects: 1
shortest: <(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w>--<(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w>
Features:

1: DEC|any of: 0123456789 | 20.0
2: LIT|a literal character | 18.0
3: CG|a capture group | 8.0
4: WRD|[a-zA-Z0-9\_] | 4.0
5: CCC|custom character class | 2.0
6: RNG|chars within a range | 2.0


0000 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>'
0001 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'



cluster 86 stats:
nPatterns: 4.0
nProjects: 1
shortest: ([a-z]*) ([\d-]+) ([a-z]*)[\s\t]*([0-9:, -]+)
Features:

1: LIT|a literal character | 21.0
2: CCC|custom character class | 6.75
3: CG|a capture group | 6.0
4: KLE|zero-or-more repetition | 4.0
5: RNG|chars within a range | 4.0
6: ADD|one-or-more repetition | 3.0
7: DEC|any of: 0123456789 | 2.0
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*)[\\s\t]*([0-9:, -]+)'
0001 | 0001 | '([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+)[\\s\t]*([0-9:, -]+)'
0002 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'
0003 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'



cluster 87 stats:
nPatterns: 7.0
nProjects: 1
shortest: \xd0\xbc\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
Features:

1: LIT|a literal character | 27.142857142857142
2: CG|a capture group | 0.7142857142857143
3: OR|logical or | 0.7142857142857143


0000 | 0001 | '\xd0\xbc\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0001 | 0001 | '\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x86\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xbe\xd1\x81\xd1\x82'
0002 | 0001 | '\xd1\x84\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xba'
0003 | 0001 | '\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0004 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xb0\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0005 | 0001 | '\xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0006 | 0001 | '\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'



cluster 88 stats:
nPatterns: 6.0
nProjects: 1
shortest: \xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd1\x8c\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0
Features:

1: LIT|a literal character | 47.166666666666664
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: ANY|any non-newline char | 0.3333333333333333


0000 | 0001 | '\xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd1\x8c\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0'
0001 | 0001 | '(\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\\.)'
0002 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0003 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe-\xd1\x80\xd0\xb0\xd0\xb7\xd1\x83\xd0\xbc\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0004 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd1\x81\xd1\x82\xd0\xb0\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0005 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



