Cluster stats:

nClusters: 110
TotalPatterns: 340
totalnProjects: 390
suffix: _i1.80_p0.50_k100_lcs_


cluster 0 stats:
nPatterns: 2.0
nProjects: 56
shortest: \s*,\s*
Features:

1: KLE|zero-or-more repetition | 2.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.0
3: LIT|a literal character | 1.0
4: QST|zero-or-one repetition | 0.5


0000 | 0054 | '\\s*,\\s*'
0001 | 0002 | u'\\s*,?\\s*'



cluster 1 stats:
nPatterns: 17.0
nProjects: 56
shortest: \w*
Features:

1: LIT|a literal character | 1.2352941176470589
2: CG|a capture group | 0.9411764705882353
3: WRD|[a-zA-Z0-9\_] | 0.8823529411764706
4: ADD|one-or-more repetition | 0.7647058823529411
5: KLE|zero-or-more repetition | 0.47058823529411764
6: ANY|any non-newline char | 0.4117647058823529
7: END|end-of-line | 0.23529411764705882
8: STR|start-of-line | 0.11764705882352941
9: NWSP|any non-whitespace | 0.058823529411764705
10: QST|zero-or-one repetition | 0.058823529411764705
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.058823529411764705


0000 | 0021 | '&#?\\w+;'
0001 | 0008 | '$(\\w+)'
0002 | 0006 | '@(\\w*)(.*)'
0003 | 0005 | '(\\w+)(.*)'
0004 | 0004 | '\\$(\\w+)'
0005 | 0003 | u'\\w*'
0006 | 0003 | '\\${(\\w+)}'
0007 | 0002 | '(!\\S*)(.*)'
0008 | 0001 | u'\\w+'
0009 | 0001 | '(\\w+;)'
0010 | 0001 | ':(\\w+)'
0011 | 0001 | '\\w+\\s'
0012 | 0001 | '^@\\w+$'
0013 | 0001 | '(\\w+).py$'
0014 | 0001 | '^(\\:)(.*)$'
0015 | 0001 | '\\{(\\w+)\\}'
0016 | 0001 | '.*/(\\w+).kcm'



cluster 2 stats:
nPatterns: 3.0
nProjects: 44
shortest: \W+
Features:

1: ADD|one-or-more repetition | 1.0
2: NWRD|non-word chars | 1.0
3: CG|a capture group | 0.3333333333333333
4: STR|start-of-line | 0.3333333333333333


0000 | 0026 | '\\W+'
0001 | 0009 | '(\\W+)'
0002 | 0006 | '^\\W+'



cluster 3 stats:
nPatterns: 2.0
nProjects: 41
shortest: :\s*(#.*)?$
Features:

1: KLE|zero-or-more repetition | 2.0
2: LIT|a literal character | 2.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 1.0
6: QST|zero-or-one repetition | 1.0
7: CCC|custom character class | 0.5
8: STR|start-of-line | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0002 | ':\\s*(#.*)?$'



cluster 4 stats:
nPatterns: 9.0
nProjects: 34
shortest: ^ *\n
Features:

1: LIT|a literal character | 1.4444444444444444
2: KLE|zero-or-more repetition | 1.1111111111111112
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.7777777777777778
4: STR|start-of-line | 0.5555555555555556
5: ADD|one-or-more repetition | 0.1111111111111111
6: ANY|any non-newline char | 0.1111111111111111
7: CCC|custom character class | 0.1111111111111111
8: CG|a capture group | 0.1111111111111111
9: END|end-of-line | 0.1111111111111111
10: QST|zero-or-one repetition | 0.1111111111111111


0000 | 0015 | '^\\s*\\n'
0001 | 0013 | '^ *\n'
0002 | 0012 | '^-*\n'
0003 | 0006 | '\\s*>$'
0004 | 0002 | '^\\s*\\*+/'
0005 | 0002 | '\\s*\\{\\s*'
0006 | 0001 | '.*\\n?'
0007 | 0001 | '\\s*(;)'
0008 | 0001 | '^\\s*[#;]'



cluster 5 stats:
nPatterns: 6.0
nProjects: 33
shortest: \r
Features:

1: NWSP|any non-whitespace | 0.6666666666666666
2: ADD|one-or-more repetition | 0.5
3: LIT|a literal character | 0.5
4: STR|start-of-line | 0.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.16666666666666666


0000 | 0013 | '\\r'
0001 | 0007 | '\\|'
0002 | 0005 | ',\\S'
0003 | 0005 | u'\\S'
0004 | 0002 | '^\\S+\\s+'
0005 | 0001 | '^\\S+'



cluster 6 stats:
nPatterns: 4.0
nProjects: 31
shortest: --
Features:

1: LIT|a literal character | 1.75
2: ADD|one-or-more repetition | 0.5


0000 | 0017 | '--'
0001 | 0011 | '\\-+'
0002 | 0001 | u'-h'
0003 | 0001 | u'--+'



cluster 7 stats:
nPatterns: 3.0
nProjects: 28
shortest: _{2,}
Features:

1: LIT|a literal character | 1.0
2: LWB|at least n repetition | 1.0
3: STR|start-of-line | 0.3333333333333333


0000 | 0026 | '\\n{2,}'
0001 | 0001 | '_{2,}'
0002 | 0001 | '^/{2,}'



cluster 8 stats:
nPatterns: 6.0
nProjects: 28
shortest: /\d+
Features:

1: DEC|any of: 0123456789 | 1.1666666666666667
2: ADD|one-or-more repetition | 1.0
3: END|end-of-line | 0.6666666666666666
4: LIT|a literal character | 0.6666666666666666
5: STR|start-of-line | 0.3333333333333333
6: KLE|zero-or-more repetition | 0.16666666666666666


0000 | 0015 | u'^\\d+$'
0001 | 0009 | ':\\d+$'
0002 | 0001 | '/\\d+'
0003 | 0001 | '\\d*$'
0004 | 0001 | 'p\\d+$'
0005 | 0001 | '^\\d+-\\d+'



cluster 9 stats:
nPatterns: 12.0
nProjects: 26
shortest: [^+0-9]
Features:

1: LIT|a literal character | 4.0
2: ADD|one-or-more repetition | 1.0
3: RNG|chars within a range | 1.0
4: CCC|custom character class | 0.9166666666666666
5: CG|a capture group | 0.5833333333333334
6: ANY|any non-newline char | 0.25
7: END|end-of-line | 0.16666666666666666
8: STR|start-of-line | 0.16666666666666666
9: KLE|zero-or-more repetition | 0.08333333333333333
10: NCCC|negated CCC | 0.08333333333333333
11: SNG|exactly n repetition | 0.08333333333333333
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.08333333333333333


0000 | 0013 | '([0-9]+)'
0001 | 0002 | '%([0-9]+)'
0002 | 0002 | '^[0-9]{2}$'
0003 | 0002 | '\\*\\*([0-9]+)'
0004 | 0001 | '[^+0-9]'
0005 | 0001 | "([0-9]+)'"
0006 | 0001 | ' - [0-9]+'
0007 | 0001 | '[0-9]+\\.'
0008 | 0001 | '(.*): [0-9]'
0009 | 0001 | 'total = [0-9]+'
0010 | 0001 | '([0-9]+)\\s+min'
0011 | 0001 | '^([0-9]+)-.+/.+$'



cluster 10 stats:
nPatterns: 2.0
nProjects: 25
shortest: "
Features:

1: LIT|a literal character | 1.5


0000 | 0024 | '"'
0001 | 0001 | u'"}'



cluster 11 stats:
nPatterns: 3.0
nProjects: 24
shortest: \(.*?\)
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 0.6666666666666666
5: CG|a capture group | 0.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0021 | '\\(.*?\\)'
0001 | 0001 | '{(.*?)}'
0002 | 0001 | '^\\(.*\\)$'



cluster 12 stats:
nPatterns: 3.0
nProjects: 22
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 3.6666666666666665
2: NCCC|negated CCC | 1.3333333333333333
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 0.6666666666666666


0000 | 0019 | '<[^>]*?>'
0001 | 0002 | '<![^>]*>'
0002 | 0001 | '<[^!][^>]*?>'



cluster 13 stats:
nPatterns: 4.0
nProjects: 22
shortest: Revision: (.+)
Features:

1: LIT|a literal character | 14.0
2: ADD|one-or-more repetition | 0.75
3: CG|a capture group | 0.75
4: ANY|any non-newline char | 0.25
5: CCC|custom character class | 0.25
6: DEC|any of: 0123456789 | 0.25
7: RNG|chars within a range | 0.25
8: STR|start-of-line | 0.25


0000 | 0017 | 'Revision: (.+)'
0001 | 0002 | 'Revision: ([0-9]+)'
0002 | 0002 | 'Subversion Revision:'
0003 | 0001 | '^New Revision: (\\d+)'



cluster 14 stats:
nPatterns: 2.0
nProjects: 21
shortest: ^(?:=)$
Features:

1: END|end-of-line | 1.0
2: LIT|a literal character | 1.0
3: NCG|group without capturing | 1.0
4: STR|start-of-line | 1.0


0000 | 0021 | u'^(?:=)$'
0001 | 0003 | '^(?:=)$'



cluster 15 stats:
nPatterns: 2.0
nProjects: 21
shortest: url="([^"]+)"
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: NCCC|negated CCC | 1.0
5: NWSP|any non-whitespace | 0.5
6: OR|logical or | 0.5


0000 | 0018 | 'url="([^"]+)"'
0001 | 0003 | '"([^"]+)"|(\\S+)'



cluster 16 stats:
nPatterns: 6.0
nProjects: 21
shortest: \s+}
Features:

1: ADD|one-or-more repetition | 1.1666666666666667
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.8333333333333334
3: STR|start-of-line | 0.6666666666666666
4: CG|a capture group | 0.5
5: LIT|a literal character | 0.5
6: END|end-of-line | 0.16666666666666666
7: NWSP|any non-whitespace | 0.16666666666666666


0000 | 0014 | '^\\s+$'
0001 | 0009 | '^(\\s+)'
0002 | 0001 | '\\s+}'
0003 | 0001 | '}\\s+'
0004 | 0001 | '^(\\?+)'
0005 | 0001 | '^(\\s+)\\S+'



cluster 17 stats:
nPatterns: 4.0
nProjects: 21
shortest: \S+ (\d+)\.(\d+)\.?(\d+)?
Features:

1: CG|a capture group | 4.25
2: ADD|one-or-more repetition | 3.75
3: LIT|a literal character | 3.5
4: DEC|any of: 0123456789 | 3.25
5: ANY|any non-newline char | 0.75
6: QST|zero-or-one repetition | 0.75
7: KLE|zero-or-more repetition | 0.5
8: CCC|custom character class | 0.25
9: END|end-of-line | 0.25
10: NWSP|any non-whitespace | 0.25
11: STR|start-of-line | 0.25
12: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0016 | '\\S+ (\\d+)\\.(\\d+)\\.?(\\d+)?'
0001 | 0002 | '(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'
0002 | 0002 | '^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'
0003 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'



cluster 18 stats:
nPatterns: 3.0
nProjects: 19
shortest: /\*
Features:

1: LIT|a literal character | 2.3333333333333335
2: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0019 | '/\\*'
0001 | 0005 | '/\\*\\*'
0002 | 0003 | '\\\\*\\#'



cluster 19 stats:
nPatterns: 4.0
nProjects: 19
shortest: [\x00-\x20]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0
4: ADD|one-or-more repetition | 0.25
5: CG|a capture group | 0.25
6: ENDZ|absolute end of string | 0.25
7: KLE|zero-or-more repetition | 0.25
8: STR|start-of-line | 0.25


0000 | 0009 | '([\\x00-\\x7F])+'
0001 | 0007 | '[\\x00-\\x20]'
0002 | 0005 | '\\A[\\x00-\\x7f]*\\Z'
0003 | 0003 | '[\\x00-\\x1f]'



cluster 20 stats:
nPatterns: 7.0
nProjects: 19
shortest: [a-zA-Z]
Features:

1: LIT|a literal character | 5.285714285714286
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.1428571428571428
4: ADD|one-or-more repetition | 0.5714285714285714
5: STR|start-of-line | 0.5714285714285714
6: KLE|zero-or-more repetition | 0.42857142857142855
7: CG|a capture group | 0.2857142857142857
8: END|end-of-line | 0.14285714285714285
9: NWSP|any non-whitespace | 0.14285714285714285
10: OR|logical or | 0.14285714285714285
11: WRD|[a-zA-Z0-9\_] | 0.14285714285714285
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0007 | '[a-zA-Z]'
0001 | 0007 | '^[a-zA-Z_]\\w*'
0002 | 0002 | '^\\s*@([a-zA-Z]+)'
0003 | 0001 | '^[a-zA-Z]*$'
0004 | 0001 | '^[a-zA-Z]+='
0005 | 0001 | '[a-zA-Z]:(/|\\\\)'
0006 | 0001 | '[a-zA-Z]+://[\\S]+'



cluster 21 stats:
nPatterns: 2.0
nProjects: 18
shortest: <[a-zA-Z][-.a-zA-Z0-9]*/
Features:

1: LIT|a literal character | 15.0
2: RNG|chars within a range | 5.0
3: CCC|custom character class | 2.0
4: KLE|zero-or-more repetition | 1.5
5: CG|a capture group | 0.5
6: NCG|group without capturing | 0.5
7: NLKA|sequence doesn't follow  | 0.5
8: OR|logical or | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0001 | 0004 | '([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*'



cluster 22 stats:
nPatterns: 4.0
nProjects: 17
shortest: \\n
Features:

1: LIT|a literal character | 2.0
2: OR|logical or | 0.25


0000 | 0006 | '\\\\n'
0001 | 0005 | '\\\\\\n'
0002 | 0003 | "\\\\'"
0003 | 0003 | '"|\\\\'



cluster 23 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^http://
Features:

1: LIT|a literal character | 8.0
2: STR|start-of-line | 0.5


0000 | 0013 | '^http://'
0001 | 0002 | '  http://'



cluster 24 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^(\d{10})$
Features:

1: CG|a capture group | 1.0
2: DEC|any of: 0123456789 | 1.0
3: END|end-of-line | 1.0
4: SNG|exactly n repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0012 | '^(\\d{10})$'
0001 | 0003 | u'^(\\d{10})$'



cluster 25 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^(\s*)(\w*)
Features:

1: CG|a capture group | 1.5
2: KLE|zero-or-more repetition | 1.5
3: LIT|a literal character | 1.5
4: STR|start-of-line | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: ADD|one-or-more repetition | 0.5
7: ANY|any non-newline char | 0.5
8: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0013 | '^(\\s*)(\\w*)'
0001 | 0002 | '^(\\s*)<.+> '



cluster 26 stats:
nPatterns: 2.0
nProjects: 15
shortest: ^(?P<number>\d{7})(?P<check>\d)$
Features:

1: DEC|any of: 0123456789 | 2.0
2: PNG|named capture group | 2.0
3: END|end-of-line | 1.0
4: SNG|exactly n repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0001 | 0003 | u'^(?P<number>\\d{7})(?P<check>\\d)$'



cluster 27 stats:
nPatterns: 6.0
nProjects: 15
shortest: ^.*\/
Features:

1: LIT|a literal character | 1.5
2: KLE|zero-or-more repetition | 1.1666666666666667
3: ANY|any non-newline char | 1.0
4: STR|start-of-line | 0.6666666666666666
5: END|end-of-line | 0.3333333333333333
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.16666666666666666


0000 | 0006 | '^\\[.*\\]$'
0001 | 0003 | '\\[.*\\]'
0002 | 0003 | '^\\[.*\\]'
0003 | 0002 | '^.*\\/'
0004 | 0002 | '\\s*\\[.*$'
0005 | 0001 | '^.*\\('



cluster 28 stats:
nPatterns: 5.0
nProjects: 15
shortest: [^A-Za-z0-9.]+
Features:

1: LIT|a literal character | 8.4
2: RNG|chars within a range | 3.0
3: ADD|one-or-more repetition | 0.6
4: NCCC|negated CCC | 0.6
5: CCC|custom character class | 0.4
6: CG|a capture group | 0.2
7: END|end-of-line | 0.2
8: LZY|as few reps as possible | 0.2
9: QST|zero-or-one repetition | 0.2
10: STR|start-of-line | 0.2


0000 | 0007 | '&#?[A-Za-z0-9]+?;'
0001 | 0004 | u'[^A-Za-z0-9.]+'
0002 | 0002 | '^[-_A-Za-z0-9]+$'
0003 | 0001 | '([^A-Za-z0-9\\._-])'
0004 | 0001 | u'[^A-Za-z0-9_\\.\\-]'



cluster 29 stats:
nPatterns: 6.0
nProjects: 15
shortest: [0-9a-fA-F]{6}
Features:

1: LIT|a literal character | 7.0
2: RNG|chars within a range | 2.8333333333333335
3: CCC|custom character class | 1.0
4: CG|a capture group | 0.8333333333333334
5: SNG|exactly n repetition | 0.8333333333333334
6: END|end-of-line | 0.6666666666666666
7: STR|start-of-line | 0.5
8: ADD|one-or-more repetition | 0.3333333333333333
9: OR|logical or | 0.16666666666666666
10: QST|zero-or-one repetition | 0.16666666666666666


0000 | 0010 | '0x([0-9a-fA-F]+)L?'
0001 | 0002 | '^\\#([0-9a-fA-F]{6})$'
0002 | 0001 | '[0-9a-fA-F]{6}'
0003 | 0001 | '#[0-9a-fA-F]{6}'
0004 | 0001 | '^0x([0-9a-z]+)$'
0005 | 0001 | '^([0-9a-fA-F]{2}(:|$)){6}$'



cluster 30 stats:
nPatterns: 9.0
nProjects: 15
shortest: >(\d+)$
Features:

1: LIT|a literal character | 2.888888888888889
2: ADD|one-or-more repetition | 1.5555555555555556
3: DEC|any of: 0123456789 | 1.1111111111111112
4: CG|a capture group | 1.0
5: END|end-of-line | 0.4444444444444444
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.4444444444444444
7: STR|start-of-line | 0.2222222222222222
8: ANY|any non-newline char | 0.1111111111111111
9: KLE|zero-or-more repetition | 0.1111111111111111


0000 | 0005 | '\\s+(\\d+),$'
0001 | 0003 | '\\d+ (\\d+):'
0002 | 0001 | '>(\\d+)$'
0003 | 0001 | '{(\\d+)\\}'
0004 | 0001 | u'tt(\\d+)/$'
0005 | 0001 | ':.*\\.(\\d+)'
0006 | 0001 | '^Uid:\\s+(\\d+)'
0007 | 0001 | 'UNSEEN\\s+(\\d+)'
0008 | 0001 | '^PPid:\\s+(\\d+)$'



cluster 31 stats:
nPatterns: 2.0
nProjects: 14
shortest: .*?\n
Features:

1: ANY|any non-newline char | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0
4: LZY|as few reps as possible | 1.0
5: END|end-of-line | 0.5


0000 | 0012 | '.*?\\n'
0001 | 0002 | '#.*?$'



cluster 32 stats:
nPatterns: 5.0
nProjects: 14
shortest: [ ]+
Features:

1: LIT|a literal character | 2.2
2: CCC|custom character class | 1.0
3: ADD|one-or-more repetition | 0.8
4: CG|a capture group | 0.4


0000 | 0007 | '([\\t ]+)'
0001 | 0004 | '[ ]+'
0002 | 0001 | '[\t ]+'
0003 | 0001 | '([\\t\\n])'
0004 | 0001 | '[\n\r\t ]+'



cluster 33 stats:
nPatterns: 2.0
nProjects: 13
shortest: ^
Features:

1: STR|start-of-line | 1.0
2: LIT|a literal character | 0.5


0000 | 0002 | '^'
0001 | 0001 | '^p'



cluster 34 stats:
nPatterns: 2.0
nProjects: 13
shortest: (\d+\.\d+\.\d+)
Features:

1: ADD|one-or-more repetition | 3.5
2: DEC|any of: 0123456789 | 3.5
3: LIT|a literal character | 2.5
4: ANY|any non-newline char | 0.5
5: CG|a capture group | 0.5


0000 | 0012 | '(\\d+\\.\\d+\\.\\d+)'
0001 | 0001 | '.\\d+\\.\\d+\\.\\d+\\.\\d+'



cluster 35 stats:
nPatterns: 2.0
nProjects: 13
shortest: SECRET|PASSWORD|PROFANITIES_LIST
Features:

1: LIT|a literal character | 34.5
2: OR|logical or | 1.0


0000 | 0008 | 'SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE'
0001 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'



cluster 36 stats:
nPatterns: 3.0
nProjects: 12
shortest: \.|-
Features:

1: LIT|a literal character | 1.6666666666666667
2: OR|logical or | 1.0
3: ANY|any non-newline char | 0.6666666666666666


0000 | 0008 | '\\\\.|.'
0001 | 0003 | '\\.|\\\\'
0002 | 0001 | '\\.|-'



cluster 37 stats:
nPatterns: 3.0
nProjects: 11
shortest: (0|[1-9][0-9]*):
Features:

1: LIT|a literal character | 5.333333333333333
2: CCC|custom character class | 2.3333333333333335
3: RNG|chars within a range | 2.3333333333333335
4: CG|a capture group | 1.6666666666666667
5: KLE|zero-or-more repetition | 1.6666666666666667
6: ADD|one-or-more repetition | 0.3333333333333333
7: ANY|any non-newline char | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333
9: OR|logical or | 0.3333333333333333
10: STR|start-of-line | 0.3333333333333333


0000 | 0009 | '^([A-Z]+)([1-9][0-9]*)$'
0001 | 0001 | '(0|[1-9][0-9]*):'
0002 | 0001 | '([1-9][0-9]*)*(.*)'



cluster 38 stats:
nPatterns: 9.0
nProjects: 11
shortest: (Y=.*)
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: END|end-of-line | 0.4444444444444444
6: STR|start-of-line | 0.3333333333333333


0000 | 0005 | "^'(.*)'$"
0001 | 0002 | '(Y=.*)'
0002 | 0001 | "'(.*)'"
0003 | 0001 | "'(.*)'$"
0004 | 0001 | '^-(.*)$'
0005 | 0001 | '^//(.*)'
0006 | 0001 | '{(.*)}$'
0007 | 0001 | '\\) (.*)'
0008 | 0001 | '\\ //(.*)'



cluster 39 stats:
nPatterns: 2.0
nProjects: 10
shortest: url\s*\(\s*[^#\s][^)]+?\)
Features:

1: LIT|a literal character | 7.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.0
3: KLE|zero-or-more repetition | 2.0
4: NCCC|negated CCC | 2.0
5: ADD|one-or-more repetition | 1.0
6: LZY|as few reps as possible | 1.0


0000 | 0006 | 'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0001 | 0004 | u'url\\s*\\(\\s*[^#\\s][^)]+?\\)'



cluster 40 stats:
nPatterns: 2.0
nProjects: 9
shortest: (:*)
Features:

1: CG|a capture group | 1.0
2: KLE|zero-or-more repetition | 1.0
3: LIT|a literal character | 1.0


0000 | 0008 | '(:*)'
0001 | 0001 | u'(x*)'



cluster 41 stats:
nPatterns: 2.0
nProjects: 9
shortest: ([^:]*):(.*)
Features:

1: KLE|zero-or-more repetition | 2.5
2: LIT|a literal character | 2.5
3: CG|a capture group | 2.0
4: ANY|any non-newline char | 1.0
5: NCCC|negated CCC | 1.0
6: STR|start-of-line | 0.5


0000 | 0008 | '^([^:]*): *(.*)'
0001 | 0001 | '([^:]*):(.*)'



cluster 42 stats:
nPatterns: 3.0
nProjects: 9
shortest: [0-9a-f]{32}
Features:

1: LIT|a literal character | 5.333333333333333
2: RNG|chars within a range | 2.0
3: CCC|custom character class | 1.0
4: SNG|exactly n repetition | 1.0
5: END|end-of-line | 0.6666666666666666
6: STR|start-of-line | 0.3333333333333333


0000 | 0007 | 'md5=[0-9a-f]{32}$'
0001 | 0001 | '[0-9a-f]{32}'
0002 | 0001 | '^[0-9a-f]{32}$'



cluster 43 stats:
nPatterns: 4.0
nProjects: 9
shortest: (\S+)\s+(\S+)
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 2.25
3: CG|a capture group | 1.75
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.75
5: NWSP|any non-whitespace | 1.5
6: KLE|zero-or-more repetition | 1.25
7: ANY|any non-newline char | 0.25
8: END|end-of-line | 0.25


0000 | 0005 | '(\\S+)\\s+(\\S+)'
0001 | 0002 | 'image:\\s+(\\S+)'
0002 | 0001 | '##\\s*(\\S+)\\s+(\\S*)'
0003 | 0001 | '\\s*(\\S+)\\s+/(.*)/\\s*$'



cluster 44 stats:
nPatterns: 4.0
nProjects: 8
shortest: \.exe$
Features:

1: LIT|a literal character | 3.75
2: ANY|any non-newline char | 0.75
3: KLE|zero-or-more repetition | 0.75
4: END|end-of-line | 0.25


0000 | 0004 | '\\.exe$'
0001 | 0003 | '.*\\.dmg'
0002 | 0003 | '.*\\.exe'
0003 | 0001 | '.*\\.fw'



cluster 45 stats:
nPatterns: 3.0
nProjects: 7
shortest: %(.)
Features:

1: ANY|any non-newline char | 1.3333333333333333
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0


0000 | 0004 | u'\\\\(.)'
0001 | 0002 | '%(.)'
0002 | 0001 | '%(..)'



cluster 46 stats:
nPatterns: 5.0
nProjects: 7
shortest: "(.*?)"
Features:

1: LIT|a literal character | 8.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 1.0


0000 | 0003 | '"(.*?)"'
0001 | 0002 | '<map id="(.*?)"'
0002 | 0001 | 'href="(.*?)"'
0003 | 0001 | 'Href="(.*?)">'
0004 | 0001 | '<link href="(.*?)"'



cluster 47 stats:
nPatterns: 3.0
nProjects: 7
shortest: (\d+)\.(\d+)(?:\.(\d+))?
Features:

1: CG|a capture group | 3.3333333333333335
2: ADD|one-or-more repetition | 3.0
3: DEC|any of: 0123456789 | 2.6666666666666665
4: LIT|a literal character | 2.3333333333333335
5: QST|zero-or-one repetition | 1.0
6: NCG|group without capturing | 0.6666666666666666
7: ANY|any non-newline char | 0.3333333333333333
8: CCC|custom character class | 0.3333333333333333
9: STR|start-of-line | 0.3333333333333333
10: WRD|[a-zA-Z0-9\_] | 0.3333333333333333


0000 | 0003 | '(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0001 | 0003 | '^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0002 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)(\\w?)'



cluster 48 stats:
nPatterns: 6.0
nProjects: 7
shortest: [a-zA-Z0-9_]{2,10}
Features:

1: LIT|a literal character | 10.166666666666666
2: RNG|chars within a range | 3.6666666666666665
3: CCC|custom character class | 1.3333333333333333
4: CG|a capture group | 0.8333333333333334
5: KLE|zero-or-more repetition | 0.8333333333333334
6: END|end-of-line | 0.5
7: ADD|one-or-more repetition | 0.3333333333333333
8: STR|start-of-line | 0.3333333333333333
9: ANY|any non-newline char | 0.16666666666666666
10: DBB|$n\le x \le m$ repetition | 0.16666666666666666
11: OR|logical or | 0.16666666666666666


0000 | 0002 | '^([a-zA-Z0-9_]+):( |$)'
0001 | 0001 | '[a-zA-Z0-9_]{2,10}'
0002 | 0001 | '^([a-zA-Z0-9_]*) *=.*$'
0003 | 0001 | '([a-zA-Z_][a-zA-Z0-9_]*)'
0004 | 0001 | '\\$\\{([a-zA-Z0-9_-]+)\\}'
0005 | 0001 | '\\?[a-zA-Z_][a-zA-Z0-9_]*$'



cluster 49 stats:
nPatterns: 2.0
nProjects: 6
shortest: (.+)\!$
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0005 | '(.+)\\!$'
0001 | 0001 | "^'(.+)'@"



cluster 50 stats:
nPatterns: 2.0
nProjects: 6
shortest: (?<!\\),
Features:

1: LIT|a literal character | 2.0
2: NLKB|sequence doesn't precede | 1.0


0000 | 0005 | '(?<!\\\\),'
0001 | 0001 | '(?<!\\\\)%'



cluster 51 stats:
nPatterns: 3.0
nProjects: 6
shortest: ^\(
Features:

1: LIT|a literal character | 1.3333333333333333
2: OR|logical or | 0.6666666666666666
3: STR|start-of-line | 0.3333333333333333
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0004 | ' |\\('
0001 | 0001 | '^\\('
0002 | 0001 | '\\s|\\('



cluster 52 stats:
nPatterns: 4.0
nProjects: 6
shortest: ([a-zA-Z0-9]*)$
Features:

1: LIT|a literal character | 7.5
2: RNG|chars within a range | 3.0
3: NCCC|negated CCC | 0.75
4: CG|a capture group | 0.5
5: CCC|custom character class | 0.25
6: END|end-of-line | 0.25
7: KLE|zero-or-more repetition | 0.25


0000 | 0003 | '([a-zA-Z0-9]*)$'
0001 | 0001 | '([^a-zA-Z_0-9])'
0002 | 0001 | '[^a-zA-Z0-9_ -]'
0003 | 0001 | '[^a-zA-Z0-9_\\.]'



cluster 53 stats:
nPatterns: 2.0
nProjects: 5
shortest: /$
Features:

1: END|end-of-line | 1.0
2: LIT|a literal character | 1.0


0000 | 0004 | '/$'
0001 | 0001 | '{$'



cluster 54 stats:
nPatterns: 2.0
nProjects: 5
shortest: [-.]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0


0000 | 0004 | '[-.]'
0001 | 0001 | '[-:]'



cluster 55 stats:
nPatterns: 2.0
nProjects: 5
shortest: [\n\r]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.0
3: STR|start-of-line | 0.5


0000 | 0004 | '[\n\r]'
0001 | 0001 | '^[ \\t\\n\\r]'



cluster 56 stats:
nPatterns: 2.0
nProjects: 5
shortest: (\S+);.*
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: NWSP|any non-whitespace | 1.0
5: ANY|any non-newline char | 0.5
6: KLE|zero-or-more repetition | 0.5


0000 | 0003 | '(\\S+);.*'
0001 | 0002 | '\\|(\\S+)\\|'



cluster 57 stats:
nPatterns: 3.0
nProjects: 5
shortest: \d+(\.\d*)?
Features:

1: DEC|any of: 0123456789 | 2.0
2: ADD|one-or-more repetition | 1.6666666666666667
3: CG|a capture group | 1.0
4: LIT|a literal character | 1.0
5: END|end-of-line | 0.6666666666666666
6: KLE|zero-or-more repetition | 0.6666666666666666
7: STR|start-of-line | 0.6666666666666666
8: LWB|at least n repetition | 0.3333333333333333
9: QST|zero-or-one repetition | 0.3333333333333333


0000 | 0003 | u'^\\d+(\\.\\d+)*$'
0001 | 0002 | '\\d+(\\.\\d*)?'
0002 | 0001 | '^\\d+(\\.\\d+){1,}$'



cluster 58 stats:
nPatterns: 2.0
nProjects: 5
shortest: ^https?://bitbucket.org/
Features:

1: LIT|a literal character | 23.0
2: QST|zero-or-one repetition | 1.5
3: ADD|one-or-more repetition | 1.0
4: ANY|any non-newline char | 1.0
5: NCCC|negated CCC | 1.0
6: STR|start-of-line | 1.0
7: CG|a capture group | 0.5
8: END|end-of-line | 0.5


0000 | 0004 | '^https?://bitbucket.org/'
0001 | 0001 | '^https?://bitbucket.org/([^/]+/[^/]+)/?$'



cluster 59 stats:
nPatterns: 3.0
nProjects: 4
shortest: :<
Features:

1: LIT|a literal character | 2.0


0000 | 0003 | ':<'
0001 | 0001 | '<='
0002 | 0001 | '>='



cluster 60 stats:
nPatterns: 2.0
nProjects: 4
shortest: [\-\s]
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0003 | u'[\\-\\s]'
0001 | 0001 | '[\\-: ]'



cluster 61 stats:
nPatterns: 3.0
nProjects: 4
shortest: a.*
Features:

1: LIT|a literal character | 1.3333333333333333
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0


0000 | 0002 | 'a.*'
0001 | 0001 | 'SD.*'
0002 | 0001 | '\\/.*'



cluster 62 stats:
nPatterns: 2.0
nProjects: 4
shortest: ([\s\\])
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 1.0
3: CG|a capture group | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0003 | '([\\s\\\\])'
0001 | 0001 | '([$`\\\\])'



cluster 63 stats:
nPatterns: 3.0
nProjects: 4
shortest: ^_\(
Features:

1: LIT|a literal character | 1.6666666666666667
2: NWRD|non-word chars | 0.6666666666666666
3: CCC|custom character class | 0.3333333333333333
4: KLE|zero-or-more repetition | 0.3333333333333333
5: STR|start-of-line | 0.3333333333333333


0000 | 0002 | '\\W_\\('
0001 | 0001 | '^_\\('
0002 | 0001 | u'[\\W_]*'



cluster 64 stats:
nPatterns: 2.0
nProjects: 4
shortest: \r|\n|\r\n
Features:

1: LIT|a literal character | 4.0
2: OR|logical or | 1.0
3: CG|a capture group | 0.5


0000 | 0002 | '\r|\n|\r\n'
0001 | 0002 | '(\\r\\n|\\n|\\r)'



cluster 65 stats:
nPatterns: 3.0
nProjects: 4
shortest: [A-Z_]+
Features:

1: LIT|a literal character | 4.0
2: RNG|chars within a range | 1.6666666666666667
3: CCC|custom character class | 0.6666666666666666
4: ADD|one-or-more repetition | 0.3333333333333333
5: END|end-of-line | 0.3333333333333333
6: NCCC|negated CCC | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0002 | '[A-Za-z]'
0001 | 0001 | '[A-Z_]+'
0002 | 0001 | '^[^A-Za-z_]$'



cluster 66 stats:
nPatterns: 2.0
nProjects: 4
shortest: \s*([a-f0-9]+):.*
Features:

1: LIT|a literal character | 5.0
2: RNG|chars within a range | 2.0
3: ADD|one-or-more repetition | 1.5
4: CG|a capture group | 1.5
5: CCC|custom character class | 1.0
6: KLE|zero-or-more repetition | 1.0
7: ANY|any non-newline char | 0.5
8: STR|start-of-line | 0.5
9: WRD|[a-zA-Z0-9\_] | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0003 | '^(\\w+)=([a-f0-9]+)'
0001 | 0001 | '\\s*([a-f0-9]+):.*'



cluster 67 stats:
nPatterns: 2.0
nProjects: 4
shortest: @%\(([a-zA-Z][a-zA-Z0-9_-]*)\)s
Features:

1: LIT|a literal character | 15.5
2: RNG|chars within a range | 5.0
3: CCC|custom character class | 2.0
4: CG|a capture group | 1.5
5: KLE|zero-or-more repetition | 1.5
6: NCCC|negated CCC | 0.5


0000 | 0002 | '<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'
0001 | 0002 | '@%\\(([a-zA-Z][a-zA-Z0-9_-]*)\\)s'



cluster 68 stats:
nPatterns: 2.0
nProjects: 4
shortest: #\{?if\}?\(.+?\).*?#\{?end\}?
Features:

1: LIT|a literal character | 14.5
2: QST|zero-or-one repetition | 4.0
3: ANY|any non-newline char | 2.0
4: LZY|as few reps as possible | 2.0
5: KLE|zero-or-more repetition | 1.5
6: ADD|one-or-more repetition | 0.5


0000 | 0004 | '#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'
0001 | 0004 | '#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'



cluster 69 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^http://testserver/somewhere/else/\?c=\d+#baz$
Features:

1: LIT|a literal character | 44.0
2: ADD|one-or-more repetition | 1.0
3: DEC|any of: 0123456789 | 1.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0004 | '^http://testserver/somewhere/else/\\?c=\\d+#baz$'
0001 | 0004 | '^http://testserver/somewhere/else/\\?foo=bar&c=\\d+#baz$'



cluster 70 stats:
nPatterns: 2.0
nProjects: 3
shortest: //.*$
Features:

1: LIT|a literal character | 1.5
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0


0000 | 0001 | '//.*$'
0001 | 0001 | '\\).*$'



cluster 71 stats:
nPatterns: 2.0
nProjects: 3
shortest: [^']+
Features:

1: ADD|one-or-more repetition | 1.0
2: LIT|a literal character | 1.0
3: CCC|custom character class | 0.5
4: NCCC|negated CCC | 0.5
5: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0002 | "[\\w']+"
0001 | 0001 | "[^']+"



cluster 72 stats:
nPatterns: 2.0
nProjects: 3
shortest: (\s|,)+
Features:

1: ADD|one-or-more repetition | 1.0
2: CG|a capture group | 1.0
3: LIT|a literal character | 1.0
4: OR|logical or | 1.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0002 | '(\\s|,)+'
0001 | 0001 | '(\\s|_)+'



cluster 73 stats:
nPatterns: 2.0
nProjects: 3
shortest: CPU\d+:
Features:

1: LIT|a literal character | 2.5
2: ADD|one-or-more repetition | 1.5
3: DEC|any of: 0123456789 | 1.5


0000 | 0002 | 'CPU\\d+:'
0001 | 0001 | '\\d+:\\d+'



cluster 74 stats:
nPatterns: 2.0
nProjects: 3
shortest: [^0-9.]
Features:

1: LIT|a literal character | 3.5
2: NCCC|negated CCC | 1.0
3: RNG|chars within a range | 1.0


0000 | 0002 | '[^0-9:\\.]'
0001 | 0001 | '[^0-9.]'



cluster 75 stats:
nPatterns: 3.0
nProjects: 3
shortest: pam
Features:

1: LIT|a literal character | 3.6666666666666665
2: END|end-of-line | 0.3333333333333333
3: STR|start-of-line | 0.3333333333333333


0000 | 0001 | 'pam'
0001 | 0001 | 'Game'
0002 | 0001 | '^name$'



cluster 76 stats:
nPatterns: 2.0
nProjects: 3
shortest: LR Number:
Features:

1: LIT|a literal character | 10.0


0000 | 0002 | 'LR Number:'
0001 | 0001 | 'Run number'



cluster 77 stats:
nPatterns: 2.0
nProjects: 3
shortest: (\.|\s)
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0003 | u'(\\.|\\s)'
0001 | 0003 | u'(\\.|\\s|/|-)'



cluster 78 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^\[(.*)\]$
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: CG|a capture group | 1.0
5: END|end-of-line | 0.5
6: STR|start-of-line | 0.5


0000 | 0002 | 'tag:.*\\[(.*)\\]'
0001 | 0001 | '^\\[(.*)\\]$'



cluster 79 stats:
nPatterns: 2.0
nProjects: 3
shortest: Fennec/([\d.]+)
Features:

1: LIT|a literal character | 4.5
2: ADD|one-or-more repetition | 1.5
3: CG|a capture group | 1.5
4: CCC|custom character class | 1.0
5: DEC|any of: 0123456789 | 1.0
6: NCCC|negated CCC | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | 'Fennec/([\\d.]+)'
0001 | 0001 | '([\\d.]+)([^\\s]+)'



cluster 80 stats:
nPatterns: 2.0
nProjects: 3
shortest: title:'([^']+?)'
Features:

1: LIT|a literal character | 8.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: NCCC|negated CCC | 1.0


0000 | 0002 | "title:'([^']+?)'"
0001 | 0001 | "'([^']+?)' \\(qv\\)"



cluster 81 stats:
nPatterns: 2.0
nProjects: 3
shortest: \.(js|java)(?:\.in)?$
Features:

1: LIT|a literal character | 11.5
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: NCG|group without capturing | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '\\.(js|java)(?:\\.in)?$'
0001 | 0001 | '\\.(js|jsm|java)(?:\\.in)?$'



cluster 82 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^([0-9]{4})\.([0-9]+)\.([0-9]+)$
Features:

1: LIT|a literal character | 8.0
2: CG|a capture group | 3.5
3: CCC|custom character class | 3.0
4: RNG|chars within a range | 3.0
5: ADD|one-or-more repetition | 2.5
6: END|end-of-line | 1.0
7: STR|start-of-line | 1.0
8: ANY|any non-newline char | 0.5
9: KLE|zero-or-more repetition | 0.5
10: LZY|as few reps as possible | 0.5
11: SNG|exactly n repetition | 0.5


0000 | 0002 | '^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'
0001 | 0001 | '^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'



cluster 83 stats:
nPatterns: 2.0
nProjects: 2
shortest: \{\}
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 0.5
3: CG|a capture group | 0.5


0000 | 0001 | '\\{\\}'
0001 | 0001 | '([\\{\\}])'



cluster 84 stats:
nPatterns: 2.0
nProjects: 2
shortest: foo.*bar
Features:

1: LIT|a literal character | 6.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5


0000 | 0002 | 'foo.*bar'
0001 | 0002 | '.*foo.*bar'



cluster 85 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^\{.+\}
Features:

1: LIT|a literal character | 2.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 0.5
5: STR|start-of-line | 0.5


0000 | 0001 | '^\\{.+\\}'
0001 | 0001 | '(\\{.+\\})'



cluster 86 stats:
nPatterns: 2.0
nProjects: 2
shortest: externalip=
Features:

1: LIT|a literal character | 11.5


0000 | 0001 | 'externalip='
0001 | 0001 | 'internal log'



cluster 87 stats:
nPatterns: 2.0
nProjects: 2
shortest: <div.*?>\n
Features:

1: LIT|a literal character | 6.5
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: LZY|as few reps as possible | 1.5
5: CG|a capture group | 0.5


0000 | 0001 | '<div.*?>\\n'
0001 | 0001 | '<div.*?>(.*?)</'



cluster 88 stats:
nPatterns: 2.0
nProjects: 2
shortest: id_.*=(\d+)
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: DEC|any of: 0123456789 | 1.0
5: ANY|any non-newline char | 0.5
6: KLE|zero-or-more repetition | 0.5


0000 | 0001 | 'id_.*=(\\d+)'
0001 | 0001 | '\\?Page=(\\d+)'



cluster 89 stats:
nPatterns: 2.0
nProjects: 2
shortest: \$\((\w+?)\)
Features:

1: LIT|a literal character | 5.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | '\\$\\((\\w+?)\\)'
0001 | 0001 | 'class (\\w+?)\\('



cluster 90 stats:
nPatterns: 2.0
nProjects: 2
shortest: test_file_commit1
Features:

1: LIT|a literal character | 17.0


0000 | 0002 | 'test_file_commit1'
0001 | 0002 | 'test_file_commit2'



cluster 91 stats:
nPatterns: 2.0
nProjects: 2
shortest: (?i)handy(.*)nummer
Features:

1: LIT|a literal character | 11.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: OPT|options wrapper | 1.0


0000 | 0002 | '(?i)handy(.*)nummer'
0001 | 0002 | '(?i)pager(.*)nummer'



cluster 92 stats:
nPatterns: 2.0
nProjects: 2
shortest: <script .*?</script>
Features:

1: LIT|a literal character | 17.0
2: ANY|any non-newline char | 1.5
3: KLE|zero-or-more repetition | 1.5
4: LZY|as few reps as possible | 1.5


0000 | 0001 | '<script .*?</script>'
0001 | 0001 | '<script.*?>.*?</script>'



cluster 93 stats:
nPatterns: 3.0
nProjects: 2
shortest: diff --git a
Features:

1: LIT|a literal character | 13.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 0.6666666666666666
4: KLE|zero-or-more repetition | 0.6666666666666666
5: ADD|one-or-more repetition | 0.3333333333333333
6: LZY|as few reps as possible | 0.3333333333333333


0000 | 0001 | 'diff --git a'
0001 | 0001 | '.+?(diff --git a)'
0002 | 0001 | 'diff --git .* b/(.*)\n'



cluster 94 stats:
nPatterns: 2.0
nProjects: 2
shortest: [-+]?(?:\d+(?:\.\d*)?|\d*\.\d+)(?:[eE][-+]?\d+)?
Features:

1: LIT|a literal character | 8.0
2: DEC|any of: 0123456789 | 5.0
3: QST|zero-or-one repetition | 4.0
4: ADD|one-or-more repetition | 3.0
5: CCC|custom character class | 3.0
6: NCG|group without capturing | 3.0
7: KLE|zero-or-more repetition | 2.0
8: CG|a capture group | 1.0
9: OR|logical or | 1.0


0000 | 0001 | '[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'
0001 | 0001 | '([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'



cluster 95 stats:
nPatterns: 2.0
nProjects: 2
shortest: .*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\d+) seconds.*?"
Features:

1: LIT|a literal character | 68.5
2: ANY|any non-newline char | 4.0
3: KLE|zero-or-more repetition | 3.5
4: LZY|as few reps as possible | 3.5
5: ADD|one-or-more repetition | 1.0
6: CG|a capture group | 1.0
7: DEC|any of: 0123456789 | 1.0


0000 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds.*?"'
0001 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds. Killing!"'



cluster 96 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^[\w._-]+
Features:

1: LIT|a literal character | 3.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: WRD|[a-zA-Z0-9\_] | 1.0
5: CG|a capture group | 0.5
6: STR|start-of-line | 0.5


0000 | 0001 | '^[\\w._-]+'
0001 | 0001 | '([\\w._-]+)'



cluster 97 stats:
nPatterns: 2.0
nProjects: 1
shortest: [#][\dA-F]{3}
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 2.0
3: DEC|any of: 0123456789 | 1.0
4: RNG|chars within a range | 1.0
5: SNG|exactly n repetition | 1.0


0000 | 0001 | '[#][\\dA-F]{3}'
0001 | 0001 | '[#][\\dA-F]{6}'



cluster 98 stats:
nPatterns: 2.0
nProjects: 1
shortest: guibg=#*(\w+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'guibg=#*(\\w+)'
0001 | 0001 | 'guifg=#*(\\w+)'



cluster 99 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^.*RLELossless.*$
Features:

1: LIT|a literal character | 11.5
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^.*RLELossless.*$'
0001 | 0001 | '^.*JPEGLossless.*$'



cluster 100 stats:
nPatterns: 2.0
nProjects: 1
shortest: Simple_1Of_1unk_svc
Features:

1: LIT|a literal character | 19.5


0000 | 0001 | 'Simple_1Of_1unk_svc'
0001 | 0001 | 'Simple_1Of_1unk_host'



cluster 101 stats:
nPatterns: 2.0
nProjects: 1
shortest: \bLCOV_EXCL_LINE\b
Features:

1: LIT|a literal character | 14.5
2: WNW|word/non-word boundary | 2.0


0000 | 0001 | '\\bLCOV_EXCL_LINE\\b'
0001 | 0001 | '\\bLCOV_EXCL_START\\b'



cluster 102 stats:
nPatterns: 2.0
nProjects: 1
shortest: <pre><a name="foo-1">
Features:

1: LIT|a literal character | 21.0


0000 | 0001 | '<pre><a name="foo-1">'
0001 | 0001 | '<pre><a name="foo-5">'



cluster 103 stats:
nPatterns: 3.0
nProjects: 1
shortest: ^"(?P<data>.*)"$
Features:

1: LIT|a literal character | 5.333333333333333
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 1.0
5: STR|start-of-line | 1.0
6: END|end-of-line | 0.6666666666666666


0000 | 0001 | '^"(?P<data>.*)"$'
0001 | 0001 | '^#: (?P<data>.*)'
0002 | 0001 | '^#~ msgid "(?P<data>.*)"$'



cluster 104 stats:
nPatterns: 2.0
nProjects: 1
shortest: (?!__init__)[0-9a-zA-Z_]*(\.py)?$
Features:

1: LIT|a literal character | 18.5
2: RNG|chars within a range | 3.0
3: QST|zero-or-one repetition | 1.5
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NLKA|sequence doesn't follow  | 1.0


0000 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'
0001 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'



cluster 105 stats:
nPatterns: 3.0
nProjects: 1
shortest: \W\xd0\xb2\xd0\xb0\xd0\xbe\W
Features:

1: LIT|a literal character | 7.333333333333333
2: NWRD|non-word chars | 2.0


0000 | 0001 | '\\W\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0001 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0002 | 0001 | '\\W\xd1\x81\xd0\xb7\xd0\xb0\xd0\xbe\\W'



cluster 106 stats:
nPatterns: 2.0
nProjects: 1
shortest: <a href="(http://\w+.craigslist.org/)">([\w ]+)</a>
Features:

1: LIT|a literal character | 38.5
2: ADD|one-or-more repetition | 3.0
3: CG|a capture group | 2.5
4: WRD|[a-zA-Z0-9\_] | 2.5
5: ANY|any non-newline char | 2.0
6: CCC|custom character class | 2.0
7: KLE|zero-or-more repetition | 1.0
8: NWRD|non-word chars | 1.0


0000 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)</a>'
0001 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'



cluster 107 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^(?P<neg>-?)---(?P<D>\d\d)(?P<tz>Z|([-+]\d\d:\d\d))?$
Features:

1: LIT|a literal character | 7.0
2: DEC|any of: 0123456789 | 6.5
3: PNG|named capture group | 3.5
4: QST|zero-or-one repetition | 2.0
5: CCC|custom character class | 1.0
6: CG|a capture group | 1.0
7: END|end-of-line | 1.0
8: OR|logical or | 1.0
9: STR|start-of-line | 1.0
10: LWB|at least n repetition | 0.5


0000 | 0001 | '^(?P<neg>-?)---(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0001 | 0001 | '^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'



cluster 108 stats:
nPatterns: 2.0
nProjects: 1
shortest: ([a-z]*) ([\d-]+) ([a-z]*) - ([a-z]*) ([\d-]+) ([a-z]*) [\s\t]*([0-9:, -]+)
Features:

1: LIT|a literal character | 26.0
2: CCC|custom character class | 8.0
3: CG|a capture group | 7.5
4: KLE|zero-or-more repetition | 5.0
5: RNG|chars within a range | 5.0
6: ADD|one-or-more repetition | 3.5
7: DEC|any of: 0123456789 | 2.5
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0


0000 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'
0001 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'



cluster 109 stats:
nPatterns: 2.0
nProjects: 1
shortest: \xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
Features:

1: LIT|a literal character | 29.0
2: CG|a capture group | 1.0
3: OR|logical or | 1.0


0000 | 0001 | '\xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0001 | 0001 | '\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'



