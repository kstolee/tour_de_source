Cluster stats:

nClusters: 121
TotalPatterns: 1251
totalnProjects: 703
suffix: _i1.80_p0.70_k100_cos_


cluster 0 stats:
nPatterns: 165.0
nProjects: 250
shortest: [A-Z_]+
Features:

1: LIT|a literal character | 12.921212121212122
2: RNG|chars within a range | 3.6303030303030304
3: CCC|custom character class | 2.2606060606060607
4: CG|a capture group | 1.387878787878788
5: ADD|one-or-more repetition | 1.1151515151515152
6: KLE|zero-or-more repetition | 0.8
7: STR|start-of-line | 0.38181818181818183
8: END|end-of-line | 0.3696969696969697
9: NCCC|negated CCC | 0.2545454545454545
10: SNG|exactly n repetition | 0.24848484848484848
11: ANY|any non-newline char | 0.22424242424242424
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.21212121212121213
13: QST|zero-or-one repetition | 0.19393939393939394
14: OR|logical or | 0.16363636363636364
15: DEC|any of: 0123456789 | 0.09090909090909091
16: DBB|$n\le x \le m$ repetition | 0.07878787878787878
17: NCG|group without capturing | 0.05454545454545454
18: WRD|[a-zA-Z0-9\_] | 0.05454545454545454
19: LZY|as few reps as possible | 0.04242424242424243
20: PNG|named capture group | 0.030303030303030304
21: LWB|at least n repetition | 0.024242424242424242
22: WNW|word/non-word boundary | 0.024242424242424242
23: NLKA|sequence doesn't follow  | 0.012121212121212121
24: NWSP|any non-whitespace | 0.012121212121212121
25: OPT|options wrapper | 0.012121212121212121
26: BKR|match the $i^{th}$ CG | 0.006060606060606061
27: ENDZ|absolute end of string | 0.006060606060606061


0000 | 0060 | '[^]]+?\\] +([0-9.]+): (\\w+) <-(\\w+)'
0001 | 0057 | '<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'
0002 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0003 | 0013 | '([0-9]+)'
0004 | 0013 | '^[a-zA-Z_][a-zA-Z_0-9]*(\\.[a-zA-Z_][a-zA-Z_0-9]*)*$'
0005 | 0010 | '0x([0-9a-fA-F]+)L?'
0006 | 0010 | '[^A-Za-z0-9]Q_OBJECT[^A-Za-z0-9]'
0007 | 0010 | '/[*] #undef ([A-Z][A-Za-z0-9_]+) [*]/\n'
0008 | 0010 | '^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)[\t ]+'
0009 | 0010 | '<!ENTITY +(\\w+) +CDATA +"([^"]+)" +-- +((?:.|\n)+?) *-->'
0010 | 0010 | '^[ \\t]*(def|class)[ \\t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \\t]*[:\\(]'
0011 | 0009 | '^([A-Z]+)([1-9][0-9]*)$'
0012 | 0009 | '\\s*def\\s+(p_[a-zA-Z_0-9]*)\\('
0013 | 0009 | '^\\$([_a-zA-Z]\\w*|{[_a-zA-Z]\\w*})$'
0014 | 0008 | '^([a-zA-F0-9_-]*)[\\.]?.*$'
0015 | 0008 | '[ \t]*([A-Z0-9a-z_]+)[ \t]*=[ \t]*([-0-9]+)[, \t]*'
0016 | 0007 | '[a-zA-Z]'
0017 | 0007 | '([\\t ]+)'
0018 | 0007 | '^[a-zA-Z_]\\w*'
0019 | 0007 | '&#?[A-Za-z0-9]+?;'
0020 | 0007 | 'md5=[0-9a-f]{32}$'
0021 | 0007 | '^[ ]{4,7}((\\d+\\.)|[*+-])[ ].*'
0022 | 0006 | '[0-9]+,[0-9]+'
0023 | 0006 | "[^A-Za-z0-9\\-_.~!*'();:@&=+$,/?%#[\\]]"
0024 | 0006 | '([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)'
0025 | 0005 | "(?:[-a-zA-Z0-9!$&'\\(\\)\\*+,;=._~]|%[a-zA-Z0-9]{2})+$"
0026 | 0004 | u'[^A-Za-z0-9.]+'
0027 | 0004 | '^[a-zA-Z0-9-]{1,100}$'
0028 | 0004 | '([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*'
0029 | 0004 | '\\$\\{?[a-zA-Z_][a-zA-Z0-9_]*(\\([^)]*\\))?(\\.[a-zA-Z0-9_]+(\\([^)]*\\))?)*\\}?'
0030 | 0003 | u'([^\\t -~])'
0031 | 0003 | '([A-Z][a-z]+)'
0032 | 0003 | '([a-zA-Z0-9]*)$'
0033 | 0003 | '^#[0-9A-Fa-f]{6}$'
0034 | 0003 | '^[+/0-9A-Za-z]*=*$'
0035 | 0003 | '^(\\w+)=([a-f0-9]+)'
0036 | 0003 | '\\\\([0-3][0-7][0-7])'
0037 | 0003 | '^(.*)~([+-][0-9]{2})00$'
0038 | 0003 | '^[0-9A-Za-z._-]{0,100}$'
0039 | 0003 | 'md[0-9]$|sd[a-z]+$|xvd[a-z]+$'
0040 | 0003 | '&#([xX]?[0-9a-fA-F]+)[^0-9a-fA-F]'
0041 | 0003 | '^@@ -([0-9]*),([0-9]*) \\+([0-9]*),([0-9]*) @@'
0042 | 0002 | '[A-Za-z]'
0043 | 0002 | '%([0-9]+)'
0044 | 0002 | '[^0-9:\\.]'
0045 | 0002 | '^[0-9]{2}$'
0046 | 0002 | '\\*\\*([0-9]+)'
0047 | 0002 | '^[-_A-Za-z0-9]+$'
0048 | 0002 | '^\\s*@([a-zA-Z]+)'
0049 | 0002 | '^\\#([0-9a-fA-F]{6})$'
0050 | 0002 | '^([a-zA-Z0-9_]+):( |$)'
0051 | 0002 | '<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'
0052 | 0002 | '@%\\(([a-zA-Z][a-zA-Z0-9_-]*)\\)s'
0053 | 0002 | 'SNIPPET::([A-Za-z0-9_\\-\\/\\.]+)'
0054 | 0002 | '\\\\x([0-9a-fA-F]{2}|[0-9a-fA-F])'
0055 | 0002 | '^v([0-9]+|[0-9]+\\.[0-9]+)(/.*|$)'
0056 | 0002 | '^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'
0057 | 0002 | '^(\\+[3-9]{1,}|\\+{3,}|\\+[1-9][0-9]+)$'
0058 | 0002 | '\\s*#define\\s+([a-zA-Z][a-zA-Z_0-9]*)\\s+([a-zA-Z_0-9]+)'
0059 | 0002 | '([^:]*):\\s+scsi([0-9]+)\\s+channel=([0-9]+)\\s+id=([0-9]+)\\s+lun=([0-9]+)'
0060 | 0001 | '[A-Z_]+'
0061 | 0001 | '[^+0-9]'
0062 | 0001 | '[^0-9.]'
0063 | 0001 | "([0-9]+)'"
0064 | 0001 | '[0-9]+\\.'
0065 | 0001 | '(.*): [0-9]'
0066 | 0001 | '([+-]?\\d+)'
0067 | 0001 | '([\\w._-]+)'
0068 | 0001 | '^[a-zA-Z]*$'
0069 | 0001 | '^[a-zA-Z]+='
0070 | 0001 | 'w[0-9]*[nN]'
0071 | 0001 | '[0-9a-f]{32}'
0072 | 0001 | '\\([A-Z]\\) '
0073 | 0001 | '^[^A-Za-z_]$'
0074 | 0001 | '^[a-z0-9-]+$'
0075 | 0001 | '[0-9a-fA-F]{6}'
0076 | 0001 | '^[0-9a-f]{32}$'
0077 | 0001 | '#[0-9a-fA-F]{6}'
0078 | 0001 | '([0-9]+)\\s+min'
0079 | 0001 | '([^a-zA-Z_0-9])'
0080 | 0001 | 'N=10: ([.0-9]+)'
0081 | 0001 | '[^a-zA-Z0-9_ -]'
0082 | 0001 | '^0x([0-9a-z]+)$'
0083 | 0001 | '^@[A-Z0-9\\_]+$'
0084 | 0001 | '^[a-z|A-Z]\\w*$'
0085 | 0001 | '(0|[1-9][0-9]*):'
0086 | 0001 | '[^a-zA-Z0-9_\\.]'
0087 | 0001 | '^([0-9]+)-.+/.+$'
0088 | 0001 | "(^[A-Za-z\\' ]+$)"
0089 | 0001 | '[a-zA-Z]:(/|\\\\)'
0090 | 0001 | '([1-9][0-9]*)*(.*)'
0091 | 0001 | '[a-zA-Z0-9_]{2,10}'
0092 | 0001 | '[a-zA-Z]+://[\\S]+'
0093 | 0001 | '\\[ip:([0-9_]*)\\]'
0094 | 0001 | '\\s*([a-f0-9]+):.*'
0095 | 0001 | '^([A-Z]+)([0-9]+)$'
0096 | 0001 | '([^A-Za-z0-9\\._-])'
0097 | 0001 | '^([a-fA-F0-9]{64})$'
0098 | 0001 | '[^a-z]([a-z]+)[^a-z]'
0099 | 0001 | u'[^A-Za-z0-9_\\.\\-]'
0100 | 0001 | '.*[0-9]_srcCol[0-9].*'
0101 | 0001 | '[$]([A-Z_][A-Z0-9_]*)'
0102 | 0001 | '^(-?[0-9\\.]+)\\s*cm$'
0103 | 0001 | '^([a-zA-Z0-9_]*) *=.*$'
0104 | 0001 | '(.+):([0-9]+)[:]{0,1}.*'
0105 | 0001 | '\\$[0-9]+\\,?\\.?[0-9]*'
0106 | 0001 | '^([^ ]+) = ([0-9\\.]+)$'
0107 | 0001 | u'[^0-9]([0-9]{4})[^0-9]'
0108 | 0001 | '(?:[.~]|/[a-zA-Z_0-9]+)/'
0109 | 0001 | '([a-z ]+)(\\([0-9]+\\))?'
0110 | 0001 | '([a-zA-Z_][a-zA-Z0-9_]*)'
0111 | 0001 | '/gs/[a-z0-9\\.\\-_]{3,}$'
0112 | 0001 | '\\$\\{([a-zA-Z0-9_-]+)\\}'
0113 | 0001 | '\\b[A-Z](\\.[A-Za-z])+\\b'
0114 | 0001 | '^([A-Fa-f0-9]{2,2}){3,4}$'
0115 | 0001 | '(?i)<[a-z\\.&_0-9\\@\\-]+>'
0116 | 0001 | '([a-zA-Z-]+)\\s*\\((.*)\\)'
0117 | 0001 | '\\?[a-zA-Z_][a-zA-Z0-9_]*$'
0118 | 0001 | '^([0-9a-fA-F]{2}(:|$)){6}$'
0119 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,4}$'
0120 | 0001 | '^[a-z0-9][a-z0-9\\.\\-]{2,}$'
0121 | 0001 | '#define Py_([a-z_]+) ([0-9]+)'
0122 | 0001 | '([A-Z]{2}[0-9]{2,3}-[0-9]{2})'
0123 | 0001 | '^&[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0124 | 0001 | '[ _\\.-]+cd[ _\\.-]*([0-9a-d]+)'
0125 | 0001 | '^[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]$'
0126 | 0001 | '(\\s*)([A-F0-9]*) /\\* ([^ ]+) \\*/'
0127 | 0001 | '(^[^a-zA-Z\\._]+)|([^a-zA-Z\\._0-9]+)'
0128 | 0001 | '[- \n\t\ra-zA-Z0-9()+,./:=?;!*#@$_%]*'
0129 | 0001 | '^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'
0130 | 0001 | '^([_A-Za-z][_A-Za-z0-9]*|\\.|\\.\\.)$'
0131 | 0001 | '\\s+(([0-9A-F]{2}:){5}[0-9A-F]{2})\\s+'
0132 | 0001 | '--[0-9]+-- ([^(:]*) \\((0x[0-9a-f]+)\\)'
0133 | 0001 | '^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$'
0134 | 0001 | '\\b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\\b'
0135 | 0001 | '^([0-9a-fA-F]{1,2}:){5}[0-9a-fA-F]{1,2}$'
0136 | 0001 | '^[0-9x]+ [0-9xA-F]+ .* [A-Z][A-Z] [0-9].*$'
0137 | 0001 | '([^a-zA-Z0-9]*)([a-zA-Z0-9]+)([^a-zA-Z0-9]*)'
0138 | 0001 | '^(.+?)[ \\._\\-]\\[?([0-9]+)x([0-9]+)[^\\/]*$'
0139 | 0001 | '(\n?)-  ([a-zA-Z_.-]+)-script.py\n-  \\2.exe\n'
0140 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*)[\\s\t]*([0-9:, -]+)'
0141 | 0001 | '^((?:[^-]+|-(?![0-9]))+)-([0-9][^-]*)(?:-(.*))?$'
0142 | 0001 | '([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'
0143 | 0001 | '([a-zA-Z][a-zA-Z]|[iIxX]-([a-zA-Z])+)(-[a-zA-Z])*'
0144 | 0001 | '[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?'
0145 | 0001 | '^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$'
0146 | 0001 | '([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+)[\\s\t]*([0-9:, -]+)'
0147 | 0001 | '^(.*)(\\([0-9A-Fx]+,[0-9A-F]+\\))\\s+([1-3C]+)\\s+(.*)\\s*$'
0148 | 0001 | '(?m)^Conf ([^ ]+) \\(([^ ]+) ([^ ]+)(?: \\[([^\\]]+)\\])?\\)$'
0149 | 0001 | '([# ]*?)([a-zA-Z0-9_]+)( +)([a-zA-Z0-9_\\?\\!<>\\+=\\.]+)(.*)'
0150 | 0001 | '.*(?P<code1>[sS][0-9]{2}[eE][0-9]{2})(-(?P<code2>[0-9]{2}))?.*'
0151 | 0001 | '==[0-9]+==\\s*[#0-9]+\\s*([0-9A-Fa-fx]+):(?:[^ ]* )*([^ :\n]+)'
0152 | 0001 | 'map\\.setCenter\\(new GLatLng\\(([-0-9.]+), ([-0-9.]+)\\), (\\d+)\\);'
0153 | 0001 | '^([0-9]{4})-([0-1][0-9])-([0-3][0-9])(-([0-2][0-9])-([0-5][0-9]))? +(.*)$'
0154 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'
0155 | 0001 | '^(?P<username>[A-Za-z0-9_\\.-]+@)?(?P<hostname>[A-Za-z0-9_\\.-]+):(?P<path>.*)'
0156 | 0001 | '\\A#([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])\\Z'
0157 | 0001 | '^([A-Za-z0-9 .#(),_/-]+) +\\(([0-9A-F]+), ?([0-9A-F]+)\\) ([A-Z][A-Z]) ([0-9]+)$'
0158 | 0001 | '^([-_./a-zA-Z0-9]+)\\s+(\\d+)\\s+(\\S+?)((?:\\s+[-_./a-zA-Z0-9]+=[-_./a-zA-Z0-9]+)*)$'
0159 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'
0160 | 0001 | '([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])'
0161 | 0001 | '^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$'
0162 | 0001 | '^\\(([0-9a-fx]+),([0-9a-fx]+)\\)[ \t]+VERS=.*[ \t]+VR="(.*)"[ \t]+VM="(.*)"[ \t]+Keyword=.*[ \t]+Name="(.*)"$'
0163 | 0001 | '^\\s*([A-Za-z0-9()> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+Value Representation = ([A-Z][A-Z]), Multiplicity = ([0-9n-]+)(.*)\\s*$'
0164 | 0001 | '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'



cluster 1 stats:
nPatterns: 134.0
nProjects: 187
shortest: /\d+
Features:

1: LIT|a literal character | 5.246268656716418
2: ADD|one-or-more repetition | 2.156716417910448
3: DEC|any of: 0123456789 | 2.1343283582089554
4: CG|a capture group | 1.8208955223880596
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5447761194029851
6: CCC|custom character class | 0.4626865671641791
7: KLE|zero-or-more repetition | 0.44029850746268656
8: QST|zero-or-one repetition | 0.3582089552238806
9: ANY|any non-newline char | 0.35074626865671643
10: WRD|[a-zA-Z0-9\_] | 0.3358208955223881
11: STR|start-of-line | 0.26865671641791045
12: END|end-of-line | 0.26119402985074625
13: NWSP|any non-whitespace | 0.20149253731343283
14: RNG|chars within a range | 0.13432835820895522
15: NCG|group without capturing | 0.09701492537313433
16: OR|logical or | 0.08208955223880597
17: LZY|as few reps as possible | 0.06716417910447761
18: NCCC|negated CCC | 0.04477611940298507
19: NLKA|sequence doesn't follow  | 0.022388059701492536
20: NWRD|non-word chars | 0.022388059701492536
21: SNG|exactly n repetition | 0.022388059701492536
22: ENDZ|absolute end of string | 0.014925373134328358
23: NDEC|any non-decimal | 0.014925373134328358
24: NWNW|negated WNW | 0.014925373134328358
25: PNG|named capture group | 0.014925373134328358
26: DBB|$n\le x \le m$ repetition | 0.007462686567164179
27: LWB|at least n repetition | 0.007462686567164179
28: NLKB|sequence doesn't precede | 0.007462686567164179
29: WNW|word/non-word boundary | 0.007462686567164179


0000 | 0017 | '(\\(|\\)|\\s+)'
0001 | 0016 | '\\S+ (\\d+)\\.(\\d+)\\.?(\\d+)?'
0002 | 0015 | u'^\\d+$'
0003 | 0014 | '^\\s+$'
0004 | 0014 | '(.*/|)([^/]+\\.[a-z]+:\\d+):(\\d+:)? warning:'
0005 | 0012 | '(\\d+\\.\\d+\\.\\d+)'
0006 | 0009 | '(\\W+)'
0007 | 0009 | ':\\d+$'
0008 | 0009 | '^(\\s+)'
0009 | 0008 | '$(\\w+)'
0010 | 0008 | '\\B(b.)\\B'
0011 | 0008 | '^([a-f0-9]+)\\s(.{7})\\s(\\S+)\\s+([a-f0-9]+)\\s+(?:\\.hidden\\s+)?(.*)$'
0012 | 0006 | 'Cookie\\:.+\\@([!-\xff]+).*?(.+\\@[!-\xff]+\\.txt)'
0013 | 0005 | '\\s+(\\d+),$'
0014 | 0005 | '(\\S+)\\s+(\\S+)'
0015 | 0005 | '\\b0+(\\d+)(?!\\d)'
0016 | 0004 | u'\\\\(.)'
0017 | 0004 | '\\$(\\w+)'
0018 | 0004 | 'bytes=(\\d+)-(\\d+)'
0019 | 0004 | u'&(?!(\\w+|#\\d+);)'
0020 | 0004 | '\\[(\\d?\\d?\\d?)%\\]'
0021 | 0004 | '^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$'
0022 | 0004 | '(\\d+)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)'
0023 | 0004 | '^#define SQLITE_VERSION\\D*(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?\\D*'
0024 | 0003 | '^-?\\d'
0025 | 0003 | '\\${(\\w+)}'
0026 | 0003 | '\\d+ (\\d+):'
0027 | 0003 | '(\\S+): (\\S+)'
0028 | 0003 | u'^\\d+(\\.\\d+)*$'
0029 | 0003 | 'pip(\\d(\\.\\d)?)?$'
0030 | 0003 | '(\\w+)-(\\w+)\\ : (.*)'
0031 | 0003 | '<path\\[(\\d+)\\]>(.*)'
0032 | 0003 | '\\[SQLCode\\: (\\d+)\\]'
0033 | 0003 | '(\\d+(\\.\\d+)?) (K|M|G|T)b?$'
0034 | 0003 | '(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0035 | 0003 | '^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0036 | 0003 | '(\\d+):(\\d+):(\\d+)(?:\\.(\\d{0,6}))?'
0037 | 0003 | '([\\d.]+) ([\\d.]+) ([\\d.]+) (\\d+)/(\\d+)'
0038 | 0003 | '(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)'
0039 | 0002 | '(\\s|,)+'
0040 | 0002 | 'CPU\\d+:'
0041 | 0002 | '\\d+(\\.\\d*)?'
0042 | 0002 | 'image:\\s+(\\S+)'
0043 | 0002 | '([+-]?[\\d\\.]+)(\\S+)'
0044 | 0002 | '(\\s*)(\\\\.+?)(\\s+)$'
0045 | 0002 | '\\(CVS\\) ([\\d\\.]+) '
0046 | 0002 | 'MemFree:\\s+(.\\d+)\\s+(\\w+)'
0047 | 0002 | '(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'
0048 | 0002 | '^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'
0049 | 0002 | '(?:([\\w ]+) ([\\w.]+) .*\\[.* ([\\d.]+)\\])'
0050 | 0002 | '(\\d+ bytes).*?([\\d\\.]+ s).*?([\\d\\.]+ [KkMmGgTt])B/s'
0051 | 0001 | '/\\d+'
0052 | 0001 | '\\d*$'
0053 | 0001 | '\\s+}'
0054 | 0001 | '}\\s+'
0055 | 0001 | 'p\\d+$'
0056 | 0001 | '(\\w+;)'
0057 | 0001 | ':(\\w+)'
0058 | 0001 | '\\w+\\s'
0059 | 0001 | '^@\\w+$'
0060 | 0001 | '(\\s|_)+'
0061 | 0001 | '>(\\d+)$'
0062 | 0001 | '\\d+:\\d+'
0063 | 0001 | '^dim4\\s+'
0064 | 0001 | '(\\{.+\\})'
0065 | 0001 | '^\\d+-\\d+'
0066 | 0001 | '{(\\d+)\\}'
0067 | 0001 | '([\\w\\d]+)'
0068 | 0001 | '\\A( *\\n)+'
0069 | 0001 | '\\d.\\d.\\d'
0070 | 0001 | '^(\\s+)\\S+'
0071 | 0001 | ':.*\\.(\\d+)'
0072 | 0001 | '^(\\d+)\\s(.*)$'
0073 | 0001 | '^Uid:\\s+(\\d+)'
0074 | 0001 | '([^*]+)\\*(\\d+)'
0075 | 0001 | 'Name=([\\w\\.]+)'
0076 | 0001 | '\\$\\((\\w+?)\\)'
0077 | 0001 | '^\\+\\+\\+ (.*)$'
0078 | 0001 | '(-?\\d+):(-?\\d+)'
0079 | 0001 | '\\s+\\(\\d{4}\\)$'
0080 | 0001 | '^PPid:\\s+(\\d+)$'
0081 | 0001 | '([\\d.]+)([^\\s]+)'
0082 | 0001 | '(\\d+):(\\d\\d)\\Z'
0083 | 0001 | '^(\\S+ +\\S+)\\s*$'
0084 | 0001 | '^\\d+(\\.\\d+){1,}$'
0085 | 0001 | ' \\d+.\\d+ tb\\(r\\)'
0086 | 0001 | '^\\S+ (\\S+)@(\\S+)$'
0087 | 0001 | '^\\d+\\-\\d+\\-\\d+$'
0088 | 0001 | '(\\w+) (\\w)\\. (\\w+)'
0089 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'
0090 | 0001 | '^ (\\S+) (\\d+)/(\\d+)'
0091 | 0001 | '^([^:]+):\\s+(.+)\\s*$'
0092 | 0001 | '([0-9]+\\s+\\-\\s+)(.+)'
0093 | 0001 | '\\d\\d-\\w\\w\\w-\\d\\d'
0094 | 0001 | '^queryCid(\\(.+\\))\\s*$'
0095 | 0001 | '<([\\w ]+(,\\s*[\\w]+)+)>'
0096 | 0001 | '^(\\d+\\.x-)?(\\d+)\\..*$'
0097 | 0001 | '^GNU gdb [^\\d]*(\\d+)\\.'
0098 | 0001 | '(\\d+)\\s+\\w+\\s+(\\w+).*'
0099 | 0001 | '.\\d+\\.\\d+\\.\\d+\\.\\d+'
0100 | 0001 | 'NUMA node\\(s\\):\\s+(\\d+)'
0101 | 0001 | '^HTTP/\\d\\.\\d\\s+\\d+\\s*'
0102 | 0001 | u'(?<![\\w])(\\d+)L(?![\\w])'
0103 | 0001 | '^nic\\.(\\d+)\\.ipv4_address'
0104 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)(\\w?)'
0105 | 0001 | '^([\\.\\/\\w]+\\.tex)(:\\d+:.*)'
0106 | 0001 | '^.*(\\d+){(\\d+),(\\d+),(.)}.*$'
0107 | 0001 | '(\\S+)\\s+(\\d)\\s+\\d+\\s+\\S+$'
0108 | 0001 | '(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)'
0109 | 0001 | '\\[([\\.0-9a-f:]+)\\](?::(\\d+))?'
0110 | 0001 | 'H(F)(DTE)(\\d\\d)(\\d\\d)(\\d\\d)\\Z'
0111 | 0001 | '^(\\S+)\\t(\\S+)\\t(\\S+)\\t(.+)\\n$'
0112 | 0001 | '^(\\d+)\\W(\\w+)\\W(\\w+)[ \t]+(.*)$'
0113 | 0001 | 'mass .*?(\\d+\\.\\d+).*?(\\d+\\.\\d+)'
0114 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'
0115 | 0001 | "\\s*SELECT\\s+.+?\\s+FROM\\s+[']?(\\w+)"
0116 | 0001 | '[QA]?[:.]?\\d?\\d[:;.]\\d\\d[:;.]\\d\\d'
0117 | 0001 | 'fixed:\\s+([\\w.+~-]+(\\s+[\\w.+~:-]+)?)'
0118 | 0001 | '#loadfactor(\\s+(\\S+))?\\s+(\\d+\\.?\\d*)'
0119 | 0001 | '(\\d+\\.\\d+\\.\\d+)[T\\.](\\d+(\\.\\d+)*)$'
0120 | 0001 | 'TOTAL\\s+(\\d+)\\s+[\\-\\d\\.]+\\%\\s+(\\d+)'
0121 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0122 | 0001 | '\\S+\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)%'
0123 | 0001 | '\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d'
0124 | 0001 | '[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'
0125 | 0001 | u'MatplotlibBox:\\(([\\d.]+)pt\\+([\\d.]+)pt\\)x([\\d.]+)pt'
0126 | 0001 | '([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'
0127 | 0001 | '^\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+cmyk'
0128 | 0001 | '(d  ((ext)?demo(needed)?|other)-\\d[.]\\d-py)\\d[.]\\d(-\\S+)?[.]egg'
0129 | 0001 | "^Comdat:\\s+(.+)\\s+SEGMENT NONE '(\\w+)'\\s+([0-9a-fA-F]+)\\s+bytes$"
0130 | 0001 | 'pip \\d(\\.[\\d])+(\\.(pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'
0131 | 0001 | '[^\\d]+ (\\d+)\\.(\\d+)\\.(\\d+)\\s*\\((?P<datetime>.+?)\\)\\s*(?P<type>[a-z]+)?'
0132 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>'
0133 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'



cluster 2 stats:
nPatterns: 107.0
nProjects: 164
shortest: \r
Features:

1: LIT|a literal character | 6.5233644859813085
2: CG|a capture group | 0.7757009345794392
3: CCC|custom character class | 0.7289719626168224
4: KLE|zero-or-more repetition | 0.6915887850467289
5: ADD|one-or-more repetition | 0.616822429906542
6: NCCC|negated CCC | 0.42990654205607476
7: WRD|[a-zA-Z0-9\_] | 0.38317757009345793
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3364485981308411
9: QST|zero-or-one repetition | 0.22429906542056074
10: OR|logical or | 0.21495327102803738
11: STR|start-of-line | 0.1588785046728972
12: ANY|any non-newline char | 0.14953271028037382
13: DEC|any of: 0123456789 | 0.1308411214953271
14: END|end-of-line | 0.12149532710280374
15: NCG|group without capturing | 0.11214953271028037
16: WNW|word/non-word boundary | 0.102803738317757
17: RNG|chars within a range | 0.09345794392523364
18: LZY|as few reps as possible | 0.06542056074766354
19: NWSP|any non-whitespace | 0.04672897196261682
20: SNG|exactly n repetition | 0.037383177570093455
21: LKA|matching sequence follows | 0.028037383177570093
22: LWB|at least n repetition | 0.028037383177570093
23: NWRD|non-word chars | 0.028037383177570093
24: BKR|match the $i^{th}$ CG | 0.018691588785046728
25: NLKB|sequence doesn't precede | 0.018691588785046728
26: PNG|named capture group | 0.018691588785046728
27: LKB|matching sequence precedes | 0.009345794392523364
28: NDEC|any non-decimal | 0.009345794392523364


0000 | 0026 | '[ \\(\\)<>@,;:\\\\"/\\[\\]\\?=]'
0001 | 0019 | '\\$(\\w+|\\{[^}]*\\})'
0002 | 0013 | '\\r'
0003 | 0011 | '[\\s.]'
0004 | 0011 | '^\\r?\\n\\r?\\n'
0005 | 0008 | '(?:;\\s*|\\s+)(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*;|(?:\\(|\\[|;)\\s*(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*(?:\\]|\\)|;)'
0006 | 0007 | '[\\\\]([a-zA-Z]+[*]?) ?({|\\s*\\n?)'
0007 | 0006 | '\\\\n'
0008 | 0006 | '[\\r\\n]+'
0009 | 0006 | '^\\[.*\\]$'
0010 | 0006 | '\\([^()]*\\b(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'
0011 | 0006 | '("(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'(?:[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|[^\\s]+)'
0012 | 0005 | '\\\\\\n'
0013 | 0005 | '#\\w\\w\\w\\w\\w\\w$'
0014 | 0005 | '^%[%!\\w]([^:]*)[ \\t]*$'
0015 | 0005 | '([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'
0016 | 0004 | '[\n\r]'
0017 | 0004 | '(\\D)[.]'
0018 | 0004 | '[-T:/.]|\\s+'
0019 | 0004 | '([\\\\()\\r\\n])'
0020 | 0004 | '(?<!\\\\)((\\\\\\\\)*)\\\\n'
0021 | 0004 | '(^|\\})(([^\\{\\:])+\\:)+([^\\{]*\\{)'
0022 | 0004 | '(\\s+|[^\\s\\w]*\\w+[^0-9\\W]-(?=\\w+[^0-9\\W])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'
0023 | 0004 | '^(WebSocket-Protocol: [\\x20-\\x7e]+\\r\\n)?(Cookie: [^\\r]*\\r\\n)*(Cookie2: [^\\r]*\\r\\n)?(Cookie: [^\\r]*\\r\\n)*\\r\\n'
0024 | 0003 | "\\\\'"
0025 | 0003 | u'\\w*'
0026 | 0003 | '[\n ]+$'
0027 | 0003 | '[./\\\\]'
0028 | 0003 | '\\[.*\\]'
0029 | 0003 | '\\\\*\\#'
0030 | 0003 | '^\\[.*\\]'
0031 | 0003 | u'[\\-\\s]'
0032 | 0003 | '([\\s\\\\])'
0033 | 0003 | '^[\\w\\.\\-\\/]*$'
0034 | 0003 | '(?:\\s*|((?:\\\\\\\\)+))\\\\\\n\\s*'
0035 | 0002 | '[\\d\\.]+'
0036 | 0002 | "[$^#\\\\']"
0037 | 0002 | '\r|\n|\r\n'
0038 | 0002 | '\\[([^:]+?)\\]'
0039 | 0002 | '\\n\\r?[\\t ]*$'
0040 | 0002 | '(\\r\\n|\\n|\\r)'
0041 | 0002 | '(.*?)([\\\\\\{\\}\\[\\]])(.*)'
0042 | 0002 | 'range\\([ ]*([-]?\\d+|n).*\\)'
0043 | 0002 | '\\s*([^\\s\\(\\)"\\\'=,\\[\\]/\\?]+)\\s*'
0044 | 0001 | '(\\\\")'
0045 | 0001 | '\\n:\\n'
0046 | 0001 | u'[\\W_]*'
0047 | 0001 | '(\\\\*)\n'
0048 | 0001 | '[()\\134]'
0049 | 0001 | '[^\\w\\-]'
0050 | 0001 | '^\\{.+\\}'
0051 | 0001 | "[\\s'\\\\]"
0052 | 0001 | '([$`\\\\])'
0053 | 0001 | '([\\t\\n])'
0054 | 0001 | '([\\{\\}])'
0055 | 0001 | '[ \\t]+\\n'
0056 | 0001 | '[ \r\n\t]+'
0057 | 0001 | '[\n\r\t ]+'
0058 | 0001 | '[/\\\\?\\*:]'
0059 | 0001 | '\\b[\\-_]\\b'
0060 | 0001 | '\\{(\\w+)\\}'
0061 | 0001 | '^\\[(.*)\\]$'
0062 | 0001 | '[\\(\\)\\s,]+'
0063 | 0001 | '[^\\w\\s@+.-]'
0064 | 0001 | '\\([\\d,]+\\)'
0065 | 0001 | '^[ \\t\\n\\r]'
0066 | 0001 | '[RL]\\{(.+)\\}'
0067 | 0001 | '\\\\.|\\(\\?P='
0068 | 0001 | '(,\\n|[^\\n-])+'
0069 | 0001 | '<(![^-\\[]|\\?)'
0070 | 0001 | '[\\w\\d\\-_\\.]+'
0071 | 0001 | '\\[\\[(.*?)\\]\\]'
0072 | 0001 | '(\\$\\([^\\)]*\\))'
0073 | 0001 | '[- \t:;,!+/\\"\'`]+'
0074 | 0001 | u'[_.,\\[\\]\\(\\):]'
0075 | 0001 | '<([\\w]*)=([, \\w]*)>'
0076 | 0001 | '[ \\t]*\\n([^\\r\\n])'
0077 | 0001 | '[.:,\\s!?+=\\(\\)/-]+'
0078 | 0001 | '^file\\:\\/\\/[^\\?]*'
0079 | 0001 | '[\\r\\n\\t ]+[\\r\\n]+'
0080 | 0001 | '(?<!\\\\)[^"\\]\\[\\$]+'
0081 | 0001 | '(\\[\\[)([^$]+)(\\]\\])'
0082 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'
0083 | 0001 | '[,;:\\(\\)\\[\\]\\{\\}<>]+'
0084 | 0001 | '^[\\w\\d\\.]+@[\\w\\d\\.]+'
0085 | 0001 | '([^\\-\\.]*)-([\\d+.\\-]+)$'
0086 | 0001 | '\\<(\\w+?)\\>\\s*\\</\\1\\>'
0087 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'
0088 | 0001 | 'rgba?\\(([\\d, \\%\\.]+)\\)'
0089 | 0001 | '^([+\\-])?\\$([^\\$\\{\\}]+)$'
0090 | 0001 | '[^\\(\\)]*\\((.*?)\\)[^\\(\\)]'
0091 | 0001 | '\\-\\s*\\[\\[(?P<t>\\S+)\\]\\]'
0092 | 0001 | '\\[\\[([^]|[:]*)\\|([^][]*)\\]\\]'
0093 | 0001 | '^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'
0094 | 0001 | '([\\|\\{\\}\\\\\\.\\+\\[\\]\\(\\)])'
0095 | 0001 | "(\\\\*)(['`:*~\\\\[\\]{}@\\$+\\-.#])"
0096 | 0001 | '[\\w\\.\\-]+@[\\w\\.\\-]+\\.\\w\\w\\w'
0097 | 0001 | 'In \\[\\{\\\\color\\{incolor\\}(.*)\\}\\]:'
0098 | 0001 | '[uU]?[rR]?(\\"\\"\\"|\\\'\\\'\\\'|\\"|\\\')'
0099 | 0001 | '\\s*(([\\\'"])(.*?[^\\\\])\\2)\\s*([},=]|$)'
0100 | 0001 | '[\\-a-zA-Z0-9\\x80-\\xff_\\.\\@\\!\\#\\%\\:]'
0101 | 0001 | '^\\(\\[(\\S+)\\],\\[(\\S+)\\],\\[(\\S+)\\]\\)$'
0102 | 0001 | '([\\$\\^\\*\\+\\.\\?\\{\\}\\[\\]\\(\\)\\|\\\\])'
0103 | 0001 | 'c\\([\\d.,\\s-]*,\\s*(?P<final>-?[0-9.]+)\n?\\)'
0104 | 0001 | '^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)'
0105 | 0001 | "pretty-date'>on ([\\w]+ [\\d]+, [\\d]+ \\d+:\\d+)</abbr></h2>"
0106 | 0001 | '[^\\t]*\\t([^\\t]*)\\t([^\\t]*)\\t[^\\t]*\\t[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\n'



cluster 3 stats:
nPatterns: 77.0
nProjects: 156
shortest: ^ *\n
Features:

1: LIT|a literal character | 6.8441558441558445
2: KLE|zero-or-more repetition | 2.948051948051948
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.727272727272727
4: CG|a capture group | 1.3896103896103895
5: ADD|one-or-more repetition | 0.8701298701298701
6: ANY|any non-newline char | 0.5584415584415584
7: STR|start-of-line | 0.37662337662337664
8: END|end-of-line | 0.3246753246753247
9: CCC|custom character class | 0.2597402597402597
10: NCCC|negated CCC | 0.23376623376623376
11: WRD|[a-zA-Z0-9\_] | 0.23376623376623376
12: OR|logical or | 0.2077922077922078
13: NWSP|any non-whitespace | 0.18181818181818182
14: QST|zero-or-one repetition | 0.16883116883116883
15: DEC|any of: 0123456789 | 0.14285714285714285
16: LZY|as few reps as possible | 0.12987012987012986
17: PNG|named capture group | 0.09090909090909091
18: NCG|group without capturing | 0.06493506493506493
19: OPT|options wrapper | 0.025974025974025976
20: RNG|chars within a range | 0.025974025974025976
21: ENDZ|absolute end of string | 0.012987012987012988
22: LKB|matching sequence precedes | 0.012987012987012988


0000 | 0054 | '\\s*,\\s*'
0001 | 0018 | '\\Z(?ms)'
0002 | 0017 | '\\s*#?\\s*$'
0003 | 0016 | 'hg\\s*pull\\s*(.*)\\s*'
0004 | 0015 | '^\\s*\\n'
0005 | 0015 | '^\\s*=\\s*([^\\s;,]*)'
0006 | 0013 | '^ *\n'
0007 | 0013 | '^(\\s*)(\\w*)'
0008 | 0012 | '^-*\n'
0009 | 0009 | '^def\\s*(\\w+)\\s*=(.*)$'
0010 | 0007 | '\\\\hackscore\\s*{[^}]*}'
0011 | 0006 | '\\s*>$'
0012 | 0006 | '^\\s*\\((.*)\\)\\s*$'
0013 | 0006 | '-isysroot\\s+\\S+(\\s|$)'
0014 | 0006 | 'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0015 | 0006 | '^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$'
0016 | 0005 | '/\\*\\*'
0017 | 0004 | u'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0018 | 0004 | u'^\\s*([-\\w]+\\s*:[^:;]*(;\\s*|$))*$'
0019 | 0003 | u'<(/?)\\s*b\\s*>'
0020 | 0003 | '(\\s*\\=)|(\\s*\\:)'
0021 | 0003 | 'label(\\s*)=(\\s*)"\\s%tmp(.\\w*)*(\\s*)"'
0022 | 0003 | 'DOCTYPE\\s+(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'
0023 | 0002 | '(?s)>\\s+'
0024 | 0002 | '\\s*\\[.*$'
0025 | 0002 | '^\\s*\\*+/'
0026 | 0002 | '\\s*\\{\\s*'
0027 | 0002 | u'\\s*,?\\s*'
0028 | 0002 | '^\\s*//\\s*$'
0029 | 0002 | '->\\s*(\\S+)$'
0030 | 0002 | '\\s*\n\\s*\n\\s*'
0031 | 0002 | '\\s+|(?:\\s*,\\s*)'
0032 | 0002 | '\\s*modtime:\\s*(.*)'
0033 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0034 | 0002 | '\\s*#*\\s*pylint:(.*)'
0035 | 0002 | '^(\\w+)\\s*=\\s*(.+)$'
0036 | 0002 | '\\[tag:\\s*([\\S]+)\\s*]'
0037 | 0002 | '^\\s+:template:\\s*(.*?)\\s*$'
0038 | 0002 | '^(\\s+\\(release-func\\s+)(\\w+)(.*)$'
0039 | 0002 | '#\\s*-\\*-\\s+coding:\\s+(\\w+)\\s+-\\*-'
0040 | 0002 | '^(\\s+\\(return-type\\s+)([^\\s]+)(\\s*\\))$'
0041 | 0002 | '(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*%(?P<cmd>.*)'
0042 | 0002 | '^\\s*(>>> )?(\\.\\.\\. )?raise(\\s+(\\\'|\\")|\\s*(\\(\\s*)+(\\\'|\\"))'
0043 | 0001 | '\\s*(;)'
0044 | 0001 | '\\s*(<!>=)'
0045 | 0001 | '\\s*(\\n|$)'
0046 | 0001 | '\\s*<p>\\s*'
0047 | 0001 | '^\\s*(\\s?>)+'
0048 | 0001 | '\\s*\\(\\s*\\('
0049 | 0001 | '\\s*(?P<a>,|:)\\s*'
0050 | 0001 | '(?<=\\()\\w*\\,?\\s*'
0051 | 0001 | 'MINOR\\s*=\\s*(\\d+)'
0052 | 0001 | '##\\s*(\\S+)\\s+(\\S*)'
0053 | 0001 | '^.*<\\s*html(\\s*|>).*$'
0054 | 0001 | '\\s*(\\S+)\\s+/(.*)/\\s*$'
0055 | 0001 | '^\\s*Version\\s*:\\s*(\\S+)'
0056 | 0001 | 'from\\s*(.*?)\\s*import\\s*(.+)'
0057 | 0001 | '.*\\((.*)(\\s*Format*\\s*)\\).*?'
0058 | 0001 | '(#\trenamed:\\s+)(.*?)\\s->\\s(.*)'
0059 | 0001 | '(\\S+)\\s*[.]\\s*type\\s*[(]\\s*[)]'
0060 | 0001 | '(\\S+\\s*)[.]shape\\s*=[^=]\\s*(.+)'
0061 | 0001 | '^\\#!\\s?([^\\s]+)(?:\\s([^\\s]+))?'
0062 | 0001 | '^\\s*DATS_FREE_DISKS\\s*=(.*\\S)\\s*$'
0063 | 0001 | '<\\s*(\\w[\\w\\d]*)\\s*=\\s*(.*?)\\s*>'
0064 | 0001 | '^(.*)(\\stime\\selapsed:\\s*)(.*)\\s*$'
0065 | 0001 | '^(\\w+):\\s.*<(.*)>\\smtu\\s(\\d+)\\s.*'
0066 | 0001 | '[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*'
0067 | 0001 | '^\\s*([^\\s]+)(?:(?:\\s*=\\s*)|\\s+)(.+)$'
0068 | 0001 | '(\\S+\\s*[(].+),\\s*savespace\\s*=.+\\s*[)]'
0069 | 0001 | '\\s*bytes\\s*=\\s*(\\d+)\\s*-\\s*(\\d+)\\s*'
0070 | 0001 | '\\$\\(call\\s+moa_load\\s*,\\s*(\\S*)\\s*\\)'
0071 | 0001 | '^(\\s*(\\[\\[image((\\(.*\\))|())\\]\\])\\s*)+$'
0072 | 0001 | '^\\s*class\\s+([a-zA-Z_]\\w*)\\s*(\\([\\s\\w.,]*\\))?:\\s*$'
0073 | 0001 | 'Stream\\s*(.*?)[,|:|\\(|\\[].*?\\s*Video:\\s*(.*?),\\s*(\\d*)x(\\d*)'
0074 | 0001 | '\\s*(((if|while)\\s*\\(|else\\s*|else\\s+if\\s*\\(|for\\s*\\(.*\\))[^{;]*)'
0075 | 0001 | '^\\s*vtk(Abstract)?Type(Revision)*Macro\\s*\\(\\s*(vtk[^ ,]+)\\s*,\\s*(vtk[^ \\)]+)\\s*\\)\\s*'
0076 | 0001 | '#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'



cluster 4 stats:
nPatterns: 75.0
nProjects: 139
shortest: (:*)
Features:

1: LIT|a literal character | 3.7866666666666666
2: CG|a capture group | 1.6533333333333333
3: KLE|zero-or-more repetition | 1.56
4: ANY|any non-newline char | 1.48
5: ADD|one-or-more repetition | 0.5066666666666667
6: END|end-of-line | 0.41333333333333333
7: STR|start-of-line | 0.37333333333333335
8: LZY|as few reps as possible | 0.22666666666666666
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.2
10: CCC|custom character class | 0.17333333333333334
11: NCCC|negated CCC | 0.16
12: DEC|any of: 0123456789 | 0.13333333333333333
13: QST|zero-or-one repetition | 0.12
14: WRD|[a-zA-Z0-9\_] | 0.12
15: NWSP|any non-whitespace | 0.08
16: OR|logical or | 0.05333333333333334
17: OPT|options wrapper | 0.02666666666666667
18: DBB|$n\le x \le m$ repetition | 0.013333333333333334
19: NCG|group without capturing | 0.013333333333333334
20: SNG|exactly n repetition | 0.013333333333333334
21: WNW|word/non-word boundary | 0.013333333333333334


0000 | 0041 | '^[ ]*(#.*)?$'
0001 | 0021 | '\\(.*?\\)'
0002 | 0017 | '([.\\w-]+)\\s*(.*)$'
0003 | 0015 | '^([^=]*)=(.*)$'
0004 | 0012 | '(?m)^\\.'
0005 | 0009 | '\\s*([^: ]*)\\s*:(.*)'
0006 | 0009 | '(function\\b[^(]*)\\((.*)\\)\\{$'
0007 | 0008 | '(:*)'
0008 | 0008 | '^([^:]*): *(.*)'
0009 | 0008 | '(\\$\\((.*?)\\))'
0010 | 0007 | '^([^@]*@)?([^:]*)(:.*)?'
0011 | 0006 | '@(\\w*)(.*)'
0012 | 0006 | '(.*?)(#)(.*)'
0013 | 0005 | '(.+)\\!$'
0014 | 0005 | '(\\w+)(.*)'
0015 | 0003 | '(\\S+);.*'
0016 | 0003 | '^ *(.*) *( *) *$'
0017 | 0003 | '^(.+)[:(]\\d+[:)]'
0018 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0019 | 0003 | '^(\\s*)()(\\S+)(.*$)'
0020 | 0002 | '%(.)'
0021 | 0002 | '#.*?$'
0022 | 0002 | '(Y=.*)'
0023 | 0002 | '(!\\S*)(.*)'
0024 | 0002 | ':\\s*(#.*)?$'
0025 | 0002 | '^(.+?)_(.+)$'
0026 | 0002 | '(.*)\\.\\w{3,4}$'
0027 | 0002 | '^(.+)<(.+)>(.*)$'
0028 | 0002 | 'tag:.*\\[(.*)\\]'
0029 | 0002 | '@@VERSION>(.*)@@(.*)'
0030 | 0002 | '^\\s*(>>>|...) (.*)$'
0031 | 0002 | '(.*?) (.*?) as (\\w+)'
0032 | 0002 | '^(.*?)([\\[\\*\\?].*)$'
0033 | 0002 | 'fail:(\\d+).*?fail:(\\d+).*fail:(\\d+)'
0034 | 0002 | '^(..[^\\(:]+)?[\\(:](\\d+)[\\):]:?\\s*(.*)'
0035 | 0001 | '%(..)'
0036 | 0001 | u'(x*)'
0037 | 0001 | '\\).*$'
0038 | 0001 | '^-(.*)$'
0039 | 0001 | '(\\.py)$'
0040 | 0001 | '\\) (.*)'
0041 | 0001 | '(.*) [^ ]'
0042 | 0001 | '(\\w+).py$'
0043 | 0001 | '^([@+])?.*'
0044 | 0001 | '^\\(.*\\)$'
0045 | 0001 | '[ \\*]*(.+)'
0046 | 0001 | '^(\\:)(.*)$'
0047 | 0001 | '(.*?)[,(:].*'
0048 | 0001 | '([^:]*):(.*)'
0049 | 0001 | '^\\s*##(.*)$'
0050 | 0001 | '(?i).+\\.nfo$'
0051 | 0001 | '(\\w+://)(.+)'
0052 | 0001 | '.*/(\\w+).kcm'
0053 | 0001 | '^([#*]+)\\s.*'
0054 | 0001 | '.*(dev|HEAD).*'
0055 | 0001 | '(.*?)\\s+<(.*)>'
0056 | 0001 | '([^.()]+\\.){5}'
0057 | 0001 | '(\\S+):\\s*(.*)'
0058 | 0001 | '^(.*?) - (.*?)$'
0059 | 0001 | '^([^:]+):.(.*)$'
0060 | 0001 | '.*(\\d).*(\\d).*'
0061 | 0001 | '.*video:(\\d+).*'
0062 | 0001 | '(.+):(\\d+): (.+)$'
0063 | 0001 | '^:.*[MAD]\\s+(.+)$'
0064 | 0001 | '^\\* (.*): (.*)\n$'
0065 | 0001 | '(\\S+)([ \t]*?)(.*)'
0066 | 0001 | '(\\\\.|[^#])*(#.*)?'
0067 | 0001 | '^(.*)#{(\\w+)}(.*)$'
0068 | 0001 | '.*PKGINST:\\s+(.*)\\n'
0069 | 0001 | '^(.*)PS 3.6-2007(.*)$'
0070 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'
0071 | 0001 | "^(FFLAGS\\s*=').*-m64 (.*)"
0072 | 0001 | '^\\+.*VTK_LEGACY\\((.*)\\).*\n'
0073 | 0001 | 'About\\((.*)\\).should_include\\((.*)\\)'
0074 | 0001 | '(.*)@(.*?)(?: -> (file\\:\\/\\/\\/\\S*))?\\:(\\d*)$'



cluster 5 stats:
nPatterns: 70.0
nProjects: 90
shortest: ^(\?+)
Features:

1: LIT|a literal character | 10.785714285714286
2: PNG|named capture group | 2.357142857142857
3: ADD|one-or-more repetition | 1.9
4: QST|zero-or-one repetition | 1.2857142857142858
5: DEC|any of: 0123456789 | 1.2714285714285714
6: CCC|custom character class | 1.0857142857142856
7: KLE|zero-or-more repetition | 1.0857142857142856
8: CG|a capture group | 1.042857142857143
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.7714285714285715
10: RNG|chars within a range | 0.7285714285714285
11: NCG|group without capturing | 0.6285714285714286
12: ANY|any non-newline char | 0.6142857142857143
13: STR|start-of-line | 0.4857142857142857
14: END|end-of-line | 0.4
15: OR|logical or | 0.3142857142857143
16: SNG|exactly n repetition | 0.3142857142857143
17: WRD|[a-zA-Z0-9\_] | 0.2857142857142857
18: LZY|as few reps as possible | 0.2714285714285714
19: NCCC|negated CCC | 0.14285714285714285
20: DBB|$n\le x \le m$ repetition | 0.1
21: NWSP|any non-whitespace | 0.08571428571428572
22: OPT|options wrapper | 0.07142857142857142
23: NLKA|sequence doesn't follow  | 0.04285714285714286
24: NLKB|sequence doesn't precede | 0.04285714285714286
25: LKB|matching sequence precedes | 0.02857142857142857
26: BKRN|references NCG | 0.014285714285714285
27: ENDZ|absolute end of string | 0.014285714285714285
28: LWB|at least n repetition | 0.014285714285714285
29: WNW|word/non-word boundary | 0.014285714285714285


0000 | 0012 | '.*{(?P<size>\\d+)}$'
0001 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0002 | 0011 | '^(?P<initial>\\d{1})(?P<yy>\\d\\d)(?P<mm>\\d\\d)(?P<dd>\\d\\d)(?P<mid>\\d{4})(?P<checksum>\\d{1})'
0003 | 0009 | '(?P<name>(.+))\\s+(?P<hexrgb>#[0-9a-fA-F]{6})'
0004 | 0007 | '(?:(?<!\\r)\\n)|(?:\\r(?!\\n))'
0005 | 0007 | '(?P<replace>(?P<type><(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'
0006 | 0005 | '^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<subminor>\\d+))((rc(?P<release_candidate>\\d+))|dev)?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'
0007 | 0003 | u'^(?P<number>\\d{7})(?P<check>\\d)$'
0008 | 0003 | '^\\w+(?:-\\w+)?(?:,\\w+(?:-\\w+)?)*$'
0009 | 0003 | u'^(?P<number>\\d{1,8})-?(?P<check>\\d)$'
0010 | 0003 | '^\\s+(?P<conn>\\d+)\\s+(?P<acc>\\d+)\\s+(?P<req>\\d+)'
0011 | 0003 | '%(?:(?P<cn>[0-9]+)\\$)?(?P<width>[0-9]+)?(?:.(?P<pres>[0-9]+))?(?P<size>[hL]|(?:ll?))?(?P<type>[dciouxXefgpCSsn])'
0012 | 0003 | u'^(?P<residence>\\d{10})(?P<origin>\\w{1,3})[-\\ ]?(?P<birthday>\\d{7})[-\\ ]?(?P<validity>\\d{7})[-\\ ]?(?P<checksum>\\d{1})$'
0013 | 0003 | '^(?:\\s*)([0-9]+):(?:\\s*)(?P<rx_bytes>\\d+)(?:\\s*)(?P<rx_packets>\\w+)(?:\\s*)(?P<rx_errors>\\d+)(?:\\s*)(?P<rx_drop>\\d+)(?:\\s*)(?P<rx_fifo>\\d+)(?:\\s*)(?P<rx_frame>\\d+)(?:\\s*)(?P<rx_compressed>\\d+)(?:\\s*)(?P<rx_multicast>\\d+)(?:\\s*)(?P<tx_bytes>\\d+)(?:\\s*)(?P<tx_packets>\\w+)(?:\\s*)(?P<tx_errors>\\d+)(?:\\s*)(?P<tx_drop>\\d+)(?:\\s*)(?P<tx_fifo>\\d+)(?:\\s*)(?P<tx_frame>\\d+)(?:\\s*)(?P<tx_compressed>\\d+)(?:\\s*)(?P<tx_multicast>\\d+)(?:.*)$'
0014 | 0002 | '<<<(-?\\d+?)>>>'
0015 | 0002 | '(?i)handy(.*)nummer'
0016 | 0002 | '(?i)pager(.*)nummer'
0017 | 0002 | '(?sm)\\A.*?!( LaTeX Error:)?'
0018 | 0002 | '(?i)gesch\xc3\xa4fts(.*)nummer'
0019 | 0002 | '@import url\\((?P<filename>.*)\\)'
0020 | 0002 | '(?i)^(\\d+(?:\\.\\d+)?)([kMGTPEZY]?)$'
0021 | 0002 | '^\\s*@return\\s+(?P<type>\\w+)(?:\\s+(?P<doc>.*))?'
0022 | 0002 | '^(?P<date>\\d{4}-\\d{2}-\\d{2})\\s+(?P<name>.+?)\\s+<(?P<email>[^<>]+)>$'
0023 | 0002 | '(WARNING|ERROR|INFO) \\(l.(?P<line>[0-9]+), c.(?P<column>[0-9]+)\\): (?P<rest>.*)'
0024 | 0002 | '^((?P<retval>[^=]+?)\\s*=|class)?\\s*(?P<head>[\\w\\.]+\\s?\\(.*?\\))\\s*(?P<sep>[:<>=-]*)\\s*(?P<tail>.*)$'
0025 | 0002 | '(?P<year>[0-9]{4})(-(?P<month>[0-9]{1,2})(-(?P<day>[0-9]{1,2})((?P<separator>.)(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2})(:(?P<second>[0-9]{2})(\\.(?P<fraction>[0-9]+))?)?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?'
0026 | 0001 | '^(\\?+)'
0027 | 0001 | '/(?<=,)(?! )/'
0028 | 0001 | '\\?Page=(\\d+)'
0029 | 0001 | ' *\\)(?P<comma>,?)'
0030 | 0001 | '(string.)|(comment.)'
0031 | 0001 | u'(?:(?:\n\r?)|^)( *)\\S'
0032 | 0001 | '<p>\\.notes:\\s?(.*?)</p>'
0033 | 0001 | '\\s+\\[(?P<section>.*)\\]'
0034 | 0001 | '(?<=nm|tt|ch)([0-9]{7})\\b'
0035 | 0001 | 'TX\\s+bytes:?\\s*(?P<c>\\d+)'
0036 | 0001 | '^(.+?): .*?(\\(attached\\))?$'
0037 | 0001 | '((?:<br />)+)(</(?:font|span)>)'
0038 | 0001 | '(?P<clause>\\d+)_(?P<field>.+)$'
0039 | 0001 | '^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'
0040 | 0001 | '^(?P<bytes>\\d+)(?P<unit>[gmkb]?)$'
0041 | 0001 | '^cert=(?P<nickname>[0-9a-zA-Z_ ]+)'
0042 | 0001 | '(?P<whitespace>[ \n]*)(?P<entry>[^ \n]+)'
0043 | 0001 | '^{(?P<w>[^[\\]()]+)(?:\\[(?P<i>\\d+)\\])?}$'
0044 | 0001 | '(.+)(?:(?<!<br>)|(?<!<br />))\\n(?![#*\\s|])'
0045 | 0001 | '(?P<name>[a-zA-Z0-9_*]+)(?P<default>=.*?)?, '
0046 | 0001 | '^/?(?P<a>\\w+)(/(?P<c>\\w+)(/(?P<f>\\w+))?)?$'
0047 | 0001 | '^(\\d+)(?:([yzafpnumcdhkKMGTPEZY])(i)?)?([Bb])?$'
0048 | 0001 | '#\\s*define\\s+(?P<key>\\w+)(?P<value>\\s+[\\w"]*)?'
0049 | 0001 | '(?P<intDigits>\\d*)(?P<dot>\\.)(?P<fracDigits>\\d+)'
0050 | 0001 | '^\\s*\\[(?P<state>!?!?)(?P<section>[^\\]]*)\\]\\s*$'
0051 | 0001 | '^R(?P<reps>\\d+)?/(?P<start>[^P][^/]*)/(?P<intv>P.+)$'
0052 | 0001 | '(.*)derpiboo((.ru)|(ru.org))(/images)?/(?P<id>[0-9]*)/?'
0053 | 0001 | '(<pre.+?>(<code>)?\\s?!(\\w+?)\\n(.*?)(</code>)?</pre>)'
0054 | 0001 | '(--(?P<key>\\S*)[=](?P<value>\\S*))|(--(?P<option>\\S*))'
0055 | 0001 | '^(?P<neg>-?)---(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0056 | 0001 | '(?P<heading>^\\s*(?P<hmarker>=+)(\\s)*.*(\\s)*(?P=hmarker)( )*$)'
0057 | 0001 | '^(?P<area>1\\d1|11\\d|8\\d\\d)(?P<area2>\\d{3})(?P<station>\\d+)$'
0058 | 0001 | '^(?P<user>[ugo]{0,3})(?P<action>[\\+\\-])(?P<value>[rwxst]{1,3})$'
0059 | 0001 | '\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+) +(?P<p>left|right|center)\\]\\]'
0060 | 0001 | '^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0061 | 0001 | '(?P<integer>[-+]?[0-9]+)(?P<decimal>\\.[0-9]+)?(?P<exponent>e[-+]?[0-9]+)?'
0062 | 0001 | '[Ee]rr(or)?: (?P<error>.+?(Could not match (?P<near>.+?))?) at /.+?:(?P<line>\\d+)?'
0063 | 0001 | '<COREF\\s+[^>]*?ID="(?P<id>\\w+)"(\\s+TYPE="(?P<type>\\w+)")?(\\s+REF="(?P<ref>\\w+)")?'
0064 | 0001 | '(?P<protocol>PYROLOC|PYROLOCSSL)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<name>\\S*)'
0065 | 0001 | '\\A(?P<head>.*?)(?P<escape>\\\\*)(?P<symbol>\\$\\{(?P<name>[A-z_]\\w*)\\})(?P<tail>.*)\\Z'
0066 | 0001 | '^v(?P<ver>\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?)-(?P<commits>\\d+)-g(?P<sha>[\\da-f]+)$'
0067 | 0001 | '^\\s+inet addr:\\s*(?P<ipaddr>[0-9\\.]+)(\\s+Bcast:(?P<bcast>[0-9\\.]+))?\\s+Mask:(?P<mask>[0-9\\.]+)'
0068 | 0001 | '(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'
0069 | 0001 | '^(?P<sign>[+-])?P(?P<years>[0-9]+([,.][0-9]+)?Y)?(?P<months>[0-9]+([,.][0-9]+)?M)?(?P<weeks>[0-9]+([,.][0-9]+)?W)?(?P<days>[0-9]+([,.][0-9]+)?D)?((?P<separator>T)(?P<hours>[0-9]+([,.][0-9]+)?H)?(?P<minutes>[0-9]+([,.][0-9]+)?M)?(?P<seconds>[0-9]+([,.][0-9]+)?S)?)?$'



cluster 6 stats:
nPatterns: 10.0
nProjects: 52
shortest: action="[\w\.\-/]*"
Features:

1: LIT|a literal character | 14.9
2: KLE|zero-or-more repetition | 1.9
3: CCC|custom character class | 1.6
4: ANY|any non-newline char | 0.8
5: ADD|one-or-more repetition | 0.6
6: CG|a capture group | 0.6
7: WRD|[a-zA-Z0-9\_] | 0.6
8: LZY|as few reps as possible | 0.5
9: NCCC|negated CCC | 0.5
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5
11: QST|zero-or-one repetition | 0.4
12: OR|logical or | 0.2
13: PNG|named capture group | 0.2
14: STR|start-of-line | 0.2
15: DEC|any of: 0123456789 | 0.1


0000 | 0028 | '^<\\?.*encoding=[\'"](.*?)[\'"].*\\?>'
0001 | 0013 | 'coding[:=]\\s*([-\\w_.]+)'
0002 | 0004 | '^<\\?xml.*?encoding=["\\\']*(.+?)["\\\'>]'
0003 | 0002 | 'coding[:=]\\s*(?P<encoding>[-\\w.]+)'
0004 | 0001 | 'action="[\\w\\.\\-/]*"'
0005 | 0001 | 'var-bind=[\'"](.*)["\']'
0006 | 0001 | '("[^"]*?")|(\'[^\']*?\')'
0007 | 0001 | '--?\\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\\s]+'
0008 | 0001 | 'version\\s*=\\s*[\'"](?P<version>[\\d\\.]+)[\'"]'
0009 | 0001 | ".*Access denied for user '[\\w\\*\\!\\@\\#\\^\\&]*'@'[\\w\\.]*'.*"



cluster 7 stats:
nPatterns: 12.0
nProjects: 51
shortest: "
Features:

1: LIT|a literal character | 8.416666666666666
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: CG|a capture group | 0.9166666666666666
5: LZY|as few reps as possible | 0.5
6: ADD|one-or-more repetition | 0.25
7: END|end-of-line | 0.25
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25
9: STR|start-of-line | 0.16666666666666666


0000 | 0024 | '"'
0001 | 0012 | '^name="(.*)"\\s+certificate="(.*)"\\s+private_key="(.*)"$'
0002 | 0011 | '".*"$'
0003 | 0003 | '"(.*?)"'
0004 | 0001 | u'"}'
0005 | 0001 | '^(.*)"""$'
0006 | 0001 | 'href="(.*?)"'
0007 | 0001 | 'Href="(.*?)">'
0008 | 0001 | 'name\\s+"(.*)",'
0009 | 0001 | '"title":"(.*?)",'
0010 | 0001 | '<link href="(.*?)"'
0011 | 0001 | 'gene_id \\"(.*?)\\"'



cluster 8 stats:
nPatterns: 20.0
nProjects: 50
shortest: /\*
Features:

1: LIT|a literal character | 4.35
2: ANY|any non-newline char | 2.7
3: KLE|zero-or-more repetition | 1.1
4: END|end-of-line | 0.45
5: STR|start-of-line | 0.4
6: CG|a capture group | 0.35
7: ADD|one-or-more repetition | 0.25
8: LZY|as few reps as possible | 0.25
9: DEC|any of: 0123456789 | 0.2
10: CCC|custom character class | 0.15
11: OR|logical or | 0.15
12: NCCC|negated CCC | 0.1
13: QST|zero-or-one repetition | 0.05
14: SNG|exactly n repetition | 0.05


0000 | 0019 | '/\\*'
0001 | 0008 | '\\\\.|.'
0002 | 0004 | '.*@.*\\..*'
0003 | 0003 | '.*\\.dmg'
0004 | 0003 | '.*(\\.so|\\.py[cod]?)$'
0005 | 0002 | '^.*\\/'
0006 | 0002 | '^.*?(v[\\d\\.]+).*?$'
0007 | 0001 | '\\/.*'
0008 | 0001 | '^.*\\('
0009 | 0001 | '^\\..*'
0010 | 0001 | '.*[\\/]'
0011 | 0001 | '.*\\.fw'
0012 | 0001 | '[^.]*\\.\\..*'
0013 | 0001 | '^.*\\.img.gz$'
0014 | 0001 | '^\\..*\\.swp$'
0015 | 0001 | '([^\\.])+\\..*$'
0016 | 0001 | '\\d+\\.\\.$|\\.{4}$'
0017 | 0001 | '^....:17EF:6009\\.....$'
0018 | 0001 | '^nic\\.\\d+\\.(.*)\\.\\d+$'
0019 | 0001 | '<p.*?begin="(...........)" end="(...........)".*?">(.*?)</p>'



cluster 9 stats:
nPatterns: 21.0
nProjects: 46
shortest: \{\}
Features:

1: LIT|a literal character | 4.904761904761905
2: DEC|any of: 0123456789 | 2.2857142857142856
3: SNG|exactly n repetition | 1.619047619047619
4: CG|a capture group | 1.1904761904761905
5: DBB|$n\le x \le m$ repetition | 0.6666666666666666
6: CCC|custom character class | 0.5714285714285714
7: STR|start-of-line | 0.5714285714285714
8: END|end-of-line | 0.5238095238095238
9: QST|zero-or-one repetition | 0.42857142857142855
10: KLE|zero-or-more repetition | 0.3333333333333333
11: RNG|chars within a range | 0.3333333333333333
12: NCG|group without capturing | 0.19047619047619047
13: ANY|any non-newline char | 0.14285714285714285
14: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285
15: ADD|one-or-more repetition | 0.09523809523809523
16: OR|logical or | 0.09523809523809523
17: WNW|word/non-word boundary | 0.09523809523809523
18: LZY|as few reps as possible | 0.047619047619047616
19: NDEC|any non-decimal | 0.047619047619047616
20: NWRD|non-word chars | 0.047619047619047616


0000 | 0012 | '^(\\d{10})$'
0001 | 0011 | '\\{\\{.*?\\}\\}'
0002 | 0011 | '^[1-9]\\d{2} ?\\d{2}$'
0003 | 0005 | '^\\d{15}(\\d{2}[0-9xX])?$'
0004 | 0004 | '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'
0005 | 0003 | u'^(\\d{10})$'
0006 | 0002 | '([+-]\\d{4})$'
0007 | 0002 | '(?:\\d{1,3}\\.){3}\\d{1,3}'
0008 | 0002 | '^(?:852-?)?(\\d{4})[-\\.]?(\\d{4})$'
0009 | 0001 | '\\{\\}'
0010 | 0001 | '^(.+):(\\d{1,5})$'
0011 | 0001 | '\\{\\{PACKAGE\\}\\}'
0012 | 0001 | '\\b(?:20|19)\\d{2}\\b'
0013 | 0001 | '(\\D|^)\\d{1,2}\\W*\\d00'
0014 | 0001 | '^\\d{4}\\.\\d{2}\\.\\d{2}$'
0015 | 0001 | '(?:\\d{2}:\\d{2}:\\d{2}) (.*)'
0016 | 0001 | '(^0x[\\da-f]{8})\\s*=\\s*([\\da-f]{32})'
0017 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'
0018 | 0001 | '(^\\(?(\\d{3})\\)?[- .]?(\\d{3})[- .]?(\\d{4})$)'
0019 | 0001 | '^(\\d{4,4}-\\d{2,2}-\\d{2,2}T\\d{2,2}:\\d{2,2}:\\d{2,2})\\.\\d*Z$'
0020 | 0001 | '^timestamp: [a-zA-Z]{3} (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}) ([-+])(\\d{2})(\\d{2})$'



cluster 10 stats:
nPatterns: 11.0
nProjects: 43
shortest: ()
Features:

1: LIT|a literal character | 4.7272727272727275
2: CG|a capture group | 1.9090909090909092
3: END|end-of-line | 0.5454545454545454
4: OR|logical or | 0.5454545454545454
5: NCG|group without capturing | 0.45454545454545453
6: STR|start-of-line | 0.45454545454545453
7: ADD|one-or-more repetition | 0.2727272727272727
8: DEC|any of: 0123456789 | 0.2727272727272727
9: KLE|zero-or-more repetition | 0.18181818181818182
10: OPT|options wrapper | 0.18181818181818182
11: QST|zero-or-one repetition | 0.18181818181818182
12: WNW|word/non-word boundary | 0.18181818181818182
13: BKR|match the $i^{th}$ CG | 0.09090909090909091
14: CCC|custom character class | 0.09090909090909091
15: DBB|$n\le x \le m$ repetition | 0.09090909090909091


0000 | 0021 | u'^(?:=)$'
0001 | 0015 | '()'
0002 | 0008 | '(?i)b+'
0003 | 0008 | '^(?:(a)|c)(\\1)$'
0004 | 0007 | '(a)(b)?b'
0005 | 0005 | '^(?:(?:00|\\+)386|0)(\\d{7,8})$'
0006 | 0003 | '^(?:=)$'
0007 | 0002 | '(([umsg]asser(t|ted))) *\\(( *)(\\d+)'
0008 | 0001 | "(?i)\\b(D)('ye)\\b"
0009 | 0001 | '^(R|RR)(_(\\d+))?$'
0010 | 0001 | '\\.((dll)|(DLL)|(drv)|(DRV))$'



cluster 11 stats:
nPatterns: 24.0
nProjects: 43
shortest: <[^>]*?>
Features:

1: LIT|a literal character | 7.5
2: NCCC|negated CCC | 1.4166666666666667
3: KLE|zero-or-more repetition | 1.0416666666666667
4: CG|a capture group | 0.8333333333333334
5: ADD|one-or-more repetition | 0.7083333333333334
6: QST|zero-or-one repetition | 0.3333333333333333
7: CCC|custom character class | 0.20833333333333334
8: END|end-of-line | 0.20833333333333334
9: PNG|named capture group | 0.20833333333333334
10: STR|start-of-line | 0.20833333333333334
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.20833333333333334
12: LZY|as few reps as possible | 0.16666666666666666
13: ANY|any non-newline char | 0.125
14: NCG|group without capturing | 0.125
15: OR|logical or | 0.125
16: DBB|$n\le x \le m$ repetition | 0.08333333333333333
17: NLKA|sequence doesn't follow  | 0.08333333333333333
18: OPT|options wrapper | 0.08333333333333333
19: DEC|any of: 0123456789 | 0.041666666666666664
20: WRD|[a-zA-Z0-9\_] | 0.041666666666666664


0000 | 0019 | '<[^>]*?>'
0001 | 0005 | '=[^,)]+\\)$'
0002 | 0003 | '^([^<]+)[<]?(.*)[>]?$'
0003 | 0002 | '<![^>]*>'
0004 | 0002 | '<param([^<>]+)>'
0005 | 0002 | '(</?(?:ul|li)[^>]*>)'
0006 | 0001 | '<(?!!)[^>]+>'
0007 | 0001 | '<[^!][^>]*?>'
0008 | 0001 | '(?i)<br[^>]*>'
0009 | 0001 | '[,]?([^,=]+)='
0010 | 0001 | '^(<[^>]*/>)\\s*'
0011 | 0001 | '<!--[^>]*-->|<!>'
0012 | 0001 | '<(?!/?TEXT)[^>]+>'
0013 | 0001 | '<h1[^>]*>(.+?)</h1>'
0014 | 0001 | u'(?s)<[^>]*>|&#?\\w+;'
0015 | 0001 | '(<[^<]*snum=)([^">]+)>'
0016 | 0001 | '<s(?: [^>]*){0,1}>(.*?)</s>'
0017 | 0001 | '^([^;]+);([^;]+):(\\d{1,5})$'
0018 | 0001 | '^([^<,]+)\\s*(?:<([^>,]+)>)?$'
0019 | 0001 | 'AC_INIT[(][^,]*,\\s+([^)]*)[)]'
0020 | 0001 | '<br />\\s*([^<]+)<br />\\s*([^<]+)<'
0021 | 0001 | '(?P<argkey>[^=]+)=(?P<argvalue>[^&]*)'
0022 | 0001 | '<em class="loadnum"[^<>]*>([^<>]*)</em>'
0023 | 0001 | '^(?P<_1>[^|]*)\\|(?P<_2>[^|]*)(\\|(?P<_3>[^|]*))?$'



cluster 12 stats:
nPatterns: 19.0
nProjects: 42
shortest: \|
Features:

1: LIT|a literal character | 10.0
2: OR|logical or | 0.8421052631578947
3: CG|a capture group | 0.42105263157894735
4: NCCC|negated CCC | 0.3157894736842105
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3157894736842105
6: ADD|one-or-more repetition | 0.2631578947368421
7: ANY|any non-newline char | 0.2631578947368421
8: KLE|zero-or-more repetition | 0.2631578947368421
9: STR|start-of-line | 0.2631578947368421
10: END|end-of-line | 0.21052631578947367
11: NLKA|sequence doesn't follow  | 0.21052631578947367
12: CCC|custom character class | 0.15789473684210525
13: RNG|chars within a range | 0.15789473684210525
14: DEC|any of: 0123456789 | 0.10526315789473684
15: NWSP|any non-whitespace | 0.05263157894736842
16: QST|zero-or-one repetition | 0.05263157894736842


0000 | 0007 | '\\|'
0001 | 0006 | '[\\\'|"|#|\\\\|\\[|\\]|\\{|\\}|\\(|\\)]'
0002 | 0004 | ' |\\('
0003 | 0004 | '\\\\|\\/|\\||\\:|\\?|\\*|"|<|>|[\x00-\x1f\x7f-\x9f]/'
0004 | 0003 | '"|\\\\'
0005 | 0003 | '\\.|\\\\'
0006 | 0003 | u'(\\.|\\s)'
0007 | 0003 | u'(\\.|\\s|/|-)'
0008 | 0002 | '\\|(\\S+)\\|'
0009 | 0002 | ':|\\*|\\?|"|<|>|\\|'
0010 | 0002 | '"(\\\\\\\\|\\\\"|[^"])*"'
0011 | 0002 | '\\.\\.|^\\./|\\.$|/\\./|^-'
0012 | 0002 | '(\\\\|\\*|\\+|\\?|\\||\\{|\\}|\\[|\\]|\\(|\\)|\\^|\\$|\\.|\\#|\\ )'
0013 | 0001 | '\\.|-'
0014 | 0001 | '\\s|\\('
0015 | 0001 | ' |,|"|=|[|]'
0016 | 0001 | '\\s|=|,|:|\\((?!.*\\))|\\[(?!.*\\])|\\{(?!.*\\})'
0017 | 0001 | '^(?!^(PRN|AUX|CLOCK\\$|NUL|CON|COM\\d|LPT\\d|\\..*)(\\..+)?$)[^\\x00-\\x1f\\\\?*:\\";|/]+$'
0018 | 0001 | '^[^\\(\\[]+[^\\s](\\+|\\-|\\*|/|%|\\^|&|\\||=|<|>|>>|<<|\\+=|\\-=|\\*=|/=|%=|\\^=|&=|\\|=|==|<=|>=|>>=|<<=|!=|<>)[^\\s][^\\)\\]]+$'



cluster 13 stats:
nPatterns: 27.0
nProjects: 42
shortest: //+
Features:

1: LIT|a literal character | 10.925925925925926
2: CG|a capture group | 0.9629629629629629
3: QST|zero-or-one repetition | 0.7777777777777778
4: ADD|one-or-more repetition | 0.7407407407407407
5: NCCC|negated CCC | 0.6666666666666666
6: KLE|zero-or-more repetition | 0.48148148148148145
7: ANY|any non-newline char | 0.4074074074074074
8: STR|start-of-line | 0.4074074074074074
9: END|end-of-line | 0.37037037037037035
10: NCG|group without capturing | 0.18518518518518517
11: LZY|as few reps as possible | 0.1111111111111111
12: CCC|custom character class | 0.07407407407407407
13: OR|logical or | 0.07407407407407407
14: RNG|chars within a range | 0.07407407407407407
15: DBB|$n\le x \le m$ repetition | 0.037037037037037035
16: DEC|any of: 0123456789 | 0.037037037037037035
17: NWSP|any non-whitespace | 0.037037037037037035
18: OPT|options wrapper | 0.037037037037037035
19: PNG|named capture group | 0.037037037037037035
20: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.037037037037037035


0000 | 0013 | '^http://'
0001 | 0003 | '//+'
0002 | 0003 | '^/dev/'
0003 | 0002 | '  http://'
0004 | 0002 | '(.*//.*?/)'
0005 | 0002 | '^http(s)?://'
0006 | 0002 | 'projects/([^/]+)/?$'
0007 | 0002 | 'http://([^/]+)(/\\S*)\\s*'
0008 | 0001 | '^//(.*)'
0009 | 0001 | ':(?://)?'
0010 | 0001 | '/\\.[^/]*$'
0011 | 0001 | '(/s/https?:)/+'
0012 | 0001 | '^(http|https)://'
0013 | 0001 | '^/var/log/[^/]+$'
0014 | 0001 | '^platform/(.*?)/'
0015 | 0001 | 'http://[^/]*(.*)'
0016 | 0001 | '^/static/[a-z./-]+$'
0017 | 0001 | '^(https?|ftp):\\/\\/'
0018 | 0001 | '^/v2/images/([^\\/]+)$'
0019 | 0001 | 'https?://([^/]*?)(/.*)?'
0020 | 0001 | '/changeset(?:/([^/]+)(/.*)?)?$'
0021 | 0001 | '/lib(64)?/(.+/)?lib[^/]+\\.so$'
0022 | 0001 | ':ext:([^@]+@)?(?P<hostname>[^:/]+)'
0023 | 0001 | 'http://([^/:]+)(?::(\\d+))?(/.*)?$'
0024 | 0001 | '^https?://bitbucket.org/([^/]+/[^/]+)/?$'
0025 | 0001 | 'https?://github.com/([^/]+/[^/]+)/tags/?$'
0026 | 0001 | '(?i)(?:https?://)?(?:www\\.)?dailymotion\\.[a-z]{2,3}/video/([^_/]+)_([^/]+)'



cluster 14 stats:
nPatterns: 2.0
nProjects: 39
shortest: stop_session\)\(
Features:

1: LIT|a literal character | 13.5
2: KLE|zero-or-more repetition | 1.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
4: ADD|one-or-more repetition | 0.5
5: ANY|any non-newline char | 0.5
6: CG|a capture group | 0.5
7: LZY|as few reps as possible | 0.5


0000 | 0038 | 'stop_session\\)\\('
0001 | 0001 | '__version__\\s*=\\s*(.+?\\n)'



cluster 15 stats:
nPatterns: 22.0
nProjects: 39
shortest:   
Features:

1: LIT|a literal character | 353.77272727272725
2: CCC|custom character class | 4.590909090909091
3: KLE|zero-or-more repetition | 3.3636363636363638
4: QST|zero-or-one repetition | 3.0454545454545454
5: RNG|chars within a range | 2.9545454545454546
6: ANY|any non-newline char | 2.8181818181818183
7: ADD|one-or-more repetition | 2.4545454545454546
8: NCG|group without capturing | 2.3636363636363638
9: CG|a capture group | 2.227272727272727
10: OR|logical or | 1.5
11: DEC|any of: 0123456789 | 1.0909090909090908
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0909090909090908
13: PNG|named capture group | 0.7727272727272727
14: LZY|as few reps as possible | 0.6363636363636364
15: NCCC|negated CCC | 0.5909090909090909
16: DBB|$n\le x \le m$ repetition | 0.5454545454545454
17: STR|start-of-line | 0.36363636363636365
18: END|end-of-line | 0.2727272727272727
19: NWSP|any non-whitespace | 0.2727272727272727
20: SNG|exactly n repetition | 0.2727272727272727
21: BKR|match the $i^{th}$ CG | 0.22727272727272727
22: NLKB|sequence doesn't precede | 0.18181818181818182
23: LKB|matching sequence precedes | 0.13636363636363635
24: NLKA|sequence doesn't follow  | 0.13636363636363635
25: OPT|options wrapper | 0.13636363636363635
26: LKA|matching sequence follows | 0.09090909090909091
27: WNW|word/non-word boundary | 0.09090909090909091
28: WRD|[a-zA-Z0-9\_] | 0.09090909090909091
29: ENDZ|absolute end of string | 0.045454545454545456
30: LWB|at least n repetition | 0.045454545454545456


0000 | 0013 | '\n    \\""" [^"\\\\]* (?:\n                     (?: \\\\. | "(?!"") )\n                     [^"\\\\]*\n                 )*\n    (?: \\""" )?\n\n|   " [^"\\\\\\n]* (?: \\\\. [^"\\\\\\n]* )* "?\n\n|   \'\'\' [^\'\\\\]* (?:\n                   (?: \\\\. | \'(?!\'\') )\n                   [^\'\\\\]*\n                )*\n    (?: \'\'\' )?\n\n|   \' [^\'\\\\\\n]* (?: \\\\. [^\'\\\\\\n]* )* \'?\n'
0001 | 0006 | '\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  (?=[ \\t]|$)           # whitespace or the end of the string\n  '
0002 | 0005 | "\n        ^(\\#{1,6})  # \\1 = string of #'s\n        [ \\t]*\n        (.+?)       # \\2 = Header text\n        [ \\t]*\n        (?<!\\\\)     # ensure not an escaped trailing '#'\n        \\#*         # optional closing #'s (not counted)\n        \\n+\n        "
0003 | 0003 | '  '
0004 | 0003 | '\n      ^\\s*   # Start of a new line and whitespace\n      /\\*    # Opening "/*"\n      .*?    # Non greedy match of any characters (including newlines)\n      \\*/    # Closing "*/'
0005 | 0003 | '\n    (\n        (?:".*?")|              # double quotes\n        (?:\'.*?\')|              # single quotes\n        (?:[^\'",\\s=][^,=]*?)       # unquoted\n    )\n    (?:\n    (?:\\s*,\\s*)|(?:\\s*$)            # comma\n    )\n'
0006 | 0003 | '        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)              # ...a number (with at least one digit)\n        (?P<int>\\d*)             # having a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'
0007 | 0002 | '\\[0\\:0\\] -A .* -j ACCEPT -p icmp -s 192.168.11.0/24'
0008 | 0002 | '<\\?xml\n            (   # strict ordering is reqd but we\'ll be liberal here\n                \\s+version=[\'"](?P<ver>.*?)[\'"]\n            |   \\s+encoding=[\'"](?P<enc>.*?)[\'"]\n            )+\n            .*? # other possible junk\n            \\s*\\?>\n        '
0009 | 0002 | '\n        <!DOCTYPE\n        \\s+(?P<name>[a-zA-Z_:][\\w:.-]*)\n        \\s+(?:\n            SYSTEM\\s+(["\'])(?P<system_id_a>.*?)\\2\n            |\n            PUBLIC\n            \\s+(["\'])(?P<public_id_b>.*?)\\4\n            # HTML 3.2 and 2.0 doctypes don\'t include a system-id.\n            (?:\\s+(["\'])(?P<system_id_b>.*?)\\6)?\n        )\n        (\\s*\\[.*?\\])?        \n        \\s*>\n        '
0010 | 0002 | "\n        ^\n        \\s*\n        (?P<operator>(~=|==|!=|<=|>=|<|>|===))\n        (?P<version>\n            (?:\n                # The identity operators allow for an escape hatch that will\n                # do an exact string match of the version you wish to install.\n                # This will not be parsed by PEP 440 and we cannot determine\n                # any semantic meaning from it. This operator is discouraged\n                # but included entirely as an escape hatch.\n                (?<====)  # Only match for the identity operator\n                \\s*\n                [^\\s]*    # We just match everything, except for whitespace\n                          # since we are only testing for strict identity.\n            )\n            |\n            (?:\n                # The (non)equality operators allow for wild card and local\n                # versions to be specified so we have to define these two\n                # operators separately to enable that.\n                (?<===|!=)            # Only match for equals and not equals\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n\n                # You cannot use a wild card and a dev or local version\n                # together so group them with a | and make them optional.\n                (?:\n                    (?:[-_\\.]?dev[-_\\.]?[0-9]*)?         # dev release\n                    (?:\\+[a-z0-9]+(?:[-_\\.][a-z0-9]+)*)? # local\n                    |\n                    \\.\\*  # Wild card syntax of .*\n                )?\n            )\n            |\n            (?:\n                # The compatible operator requires at least two digits in the\n                # release segment.\n                (?<=~=)               # Only match for the compatible operator\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)+   # release  (We have a + instead of a *)\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n            |\n            (?:\n                # All other operators only allow a sub set of what the\n                # (non)equality operators do. Specifically they do not allow\n                # local versions to be specified nor do they allow the prefix\n                # matching wild cards.\n                (?<!==|!=|~=)         # We have special cases for these\n                                      # operators so we want to make sure they\n                                      # don't match here.\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n        )\n        \\s*\n        $\n        "
0011 | 0001 | ' ( +)|^ '
0012 | 0001 | 'Job <(\\d+)> is not found'
0013 | 0001 | u'(?x) \\( [^()]* \\b few \\b'
0014 | 0001 | '^"I\'m fine" \\(es to en, .*\\)$'
0015 | 0001 | '        Log text 1 \\(issue 321\\).'
0016 | 0001 | '(?x)\n            [\\r\\n]+(\\S+)\n            [\\r\\n]+(\\S+)\n            [\\r\\n]+.+[\\r\\n]+(\\S+)\n'
0017 | 0001 | 'FooDeathTest\\.\n  Test1\nFoo\\.\n  Bar1\n  Bar2\n  DISABLED_Bar3\nFooBar\\.\n  Baz\nFooTest\\.\n  Test1\n  DISABLED_Test2\n  Test3\n'
0018 | 0001 | '(?x)\n            [\\r\\n]+(\\S+)\\ \n            (\\S+)\\ +!\\ Time\\ domain.\\ *[\\r\\n]+\n            (\\S+)\\ +!\\ Number\\ of\\ tiers.\\ *[\\r\\n]+"\n'
0019 | 0001 | '\n            (?:^[ \\t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        '
0020 | 0001 | "\n        ^(?!\\.)                            # name may not begin with a dot\n        (\n          [-a-z0-9!\\#$%&'*+/=?^_`{|}~]     # all legal characters except dot\n          |\n          (?<!\\.)\\.                        # single dots only\n        )+\n        (?<!\\.)                            # name may not end with a dot\n        @\n        (\n          localhost\n          |\n          (\n            [a-z0-9]                         # [sub]domain begins with alphanumeric\n            (\n              [-\\w]*                         # alphanumeric, underscore, dot, hyphen\n              [a-z0-9]                       # ending alphanumeric\n            )?\n          \\.                               # ending dot\n          )+\n          [a-z]{2,}                        # TLD alpha-only\n       )$\n    "
0021 | 0001 | "\n        ^\n        (?:\n          # Dotted variants:\n          (?:\n            # Decimal 1-255 (no leading 0's)\n            [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n          |\n            0x0*[0-9a-f]{1,2}  # Hexadecimal 0x0 - 0xFF (possible leading 0's)\n          |\n            0+[1-3]?[0-7]{0,2} # Octal 0 - 0377 (possible leading 0's)\n          )\n          (?:                  # Repeat 0-3 times, separated by a dot\n            \\.\n            (?:\n              [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n            |\n              0x0*[0-9a-f]{1,2}\n            |\n              0+[1-3]?[0-7]{0,2}\n            )\n          ){0,3}\n        |\n          0x0*[0-9a-f]{1,8}    # Hexadecimal notation, 0x0 - 0xffffffff\n        |\n          0+[0-3]?[0-7]{0,10}  # Octal notation, 0 - 037777777777\n        |\n          # Decimal notation, 1-4294967295:\n          429496729[0-5]|42949672[0-8]\\d|4294967[01]\\d\\d|429496[0-6]\\d{3}|\n          42949[0-5]\\d{4}|4294[0-8]\\d{5}|429[0-3]\\d{6}|42[0-8]\\d{7}|\n          4[01]\\d{8}|[1-3]\\d{0,9}|[4-9]\\d{0,8}\n        )\n        $\n    "



cluster 16 stats:
nPatterns: 3.0
nProjects: 37
shortest: \W+
Features:

1: ADD|one-or-more repetition | 1.3333333333333333
2: NWRD|non-word chars | 0.6666666666666666
3: STR|start-of-line | 0.6666666666666666
4: NWSP|any non-whitespace | 0.3333333333333333
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333


0000 | 0026 | '\\W+'
0001 | 0006 | '^\\W+'
0002 | 0002 | '^\\S+\\s+'



cluster 17 stats:
nPatterns: 9.0
nProjects: 37
shortest: --
Features:

1: LIT|a literal character | 11.777777777777779
2: KLE|zero-or-more repetition | 0.4444444444444444
3: ADD|one-or-more repetition | 0.3333333333333333
4: ANY|any non-newline char | 0.3333333333333333
5: CG|a capture group | 0.3333333333333333
6: LZY|as few reps as possible | 0.2222222222222222
7: END|end-of-line | 0.1111111111111111
8: NCCC|negated CCC | 0.1111111111111111
9: OR|logical or | 0.1111111111111111
10: STR|start-of-line | 0.1111111111111111


0000 | 0017 | '--'
0001 | 0011 | '\\-+'
0002 | 0002 | '--.*?--'
0003 | 0001 | u'-h'
0004 | 0001 | u'--+'
0005 | 0001 | '(--|/)'
0006 | 0001 | '<!-- REPORTBUGCOL -->'
0007 | 0001 | '^\\t*INFO\\t----\\t----(.*)\\t[^\\t]*$'
0008 | 0001 | '(-----BEGIN CERTIFICATE-----\\n.+?\\n-----END CERTIFICATE-----)'



cluster 18 stats:
nPatterns: 4.0
nProjects: 36
shortest: _{2,}
Features:

1: LIT|a literal character | 1.0
2: LWB|at least n repetition | 0.75
3: STR|start-of-line | 0.5
4: DBB|$n\le x \le m$ repetition | 0.25
5: END|end-of-line | 0.25


0000 | 0026 | '\\n{2,}'
0001 | 0008 | '^x{1,2}$'
0002 | 0001 | '_{2,}'
0003 | 0001 | '^/{2,}'



cluster 19 stats:
nPatterns: 14.0
nProjects: 33
shortest: "([^ ]+?)"
Features:

1: LIT|a literal character | 10.571428571428571
2: ADD|one-or-more repetition | 1.7142857142857142
3: CG|a capture group | 1.1428571428571428
4: NCCC|negated CCC | 1.0714285714285714
5: QST|zero-or-one repetition | 0.5
6: KLE|zero-or-more repetition | 0.35714285714285715
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.35714285714285715
8: CCC|custom character class | 0.2857142857142857
9: OR|logical or | 0.21428571428571427
10: PNG|named capture group | 0.21428571428571427
11: WRD|[a-zA-Z0-9\_] | 0.21428571428571427
12: NCG|group without capturing | 0.14285714285714285
13: NWSP|any non-whitespace | 0.14285714285714285
14: RNG|chars within a range | 0.14285714285714285
15: DEC|any of: 0123456789 | 0.07142857142857142
16: LKA|matching sequence follows | 0.07142857142857142
17: LKB|matching sequence precedes | 0.07142857142857142
18: LZY|as few reps as possible | 0.07142857142857142
19: STR|start-of-line | 0.07142857142857142
20: WNW|word/non-word boundary | 0.07142857142857142


0000 | 0018 | 'url="([^"]+)"'
0001 | 0003 | '"([^"]+)"|(\\S+)'
0002 | 0002 | '@\\w+( [^{}:\n]+)?:'
0003 | 0001 | '"([^ ]+?)"'
0004 | 0001 | '[?\\&|!{}+~^()":*-]+'
0005 | 0001 | '^%include\\s"([^"]+)"'
0006 | 0001 | '(\\b[^ ,=]+)="?([^",]+)"?'
0007 | 0001 | '={"pv" : "(?P<n>[0-9]+)"}'
0008 | 0001 | '((?:"[^"]+"|[^,"]+)+)\\s*,?'
0009 | 0001 | '\\s+(\\w+)\\s+"(&#\\w+;|[^&"]*)"'
0010 | 0001 | 'id="__VIEWSTATE" value="([^"]*)"'
0011 | 0001 | '([^!]+)(?:!([^+-]+)?([+-]\\S+)?)?'
0012 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'
0013 | 0001 | '(?P<pid>\\d+)\\s+rename\\("[^"]*", "(?P<name>[^"]*)"\\)'



cluster 20 stats:
nPatterns: 2.0
nProjects: 31
shortest: ,
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 0.5


0000 | 0030 | ','
0001 | 0001 | u',,+'



cluster 21 stats:
nPatterns: 34.0
nProjects: 31
shortest: ([\x7F])
Features:

1: LIT|a literal character | 20.147058823529413
2: CG|a capture group | 0.5882352941176471
3: OR|logical or | 0.4117647058823529
4: RNG|chars within a range | 0.3235294117647059
5: CCC|custom character class | 0.2647058823529412
6: NWRD|non-word chars | 0.17647058823529413
7: ANY|any non-newline char | 0.14705882352941177
8: DEC|any of: 0123456789 | 0.14705882352941177
9: KLE|zero-or-more repetition | 0.11764705882352941
10: ADD|one-or-more repetition | 0.08823529411764706
11: STR|start-of-line | 0.058823529411764705
12: ENDZ|absolute end of string | 0.029411764705882353
13: END|end-of-line | 0.029411764705882353
14: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.029411764705882353


0000 | 0009 | '([\\x00-\\x7F])+'
0001 | 0007 | '[\\x00-\\x20]'
0002 | 0005 | '\\A[\\x00-\\x7f]*\\Z'
0003 | 0004 | u'[`\x00- \x7f-\xa0\\s]+'
0004 | 0003 | '[\\x00-\\x1f]'
0005 | 0001 | '([\\x7F])'
0006 | 0001 | u'[\\000-\\037]'
0007 | 0001 | '\xc5\x9b|\xc5\x9a'
0008 | 0001 | '\\W\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0009 | 0001 | '^[\\d\\.]+ meV\xe2\x80\xbd .* \\- .*$'
0010 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0011 | 0001 | '\\W\xd1\x81\xd0\xb7\xd0\xb0\xd0\xbe\\W'
0012 | 0001 | '\xe1\xf9\xf2\xe4&nbsp;(\\d\\d):(\\d\\d)'
0013 | 0001 | '[\\x00-\\x08\\x0B-\\x0C\\x0E-\\x1F\\x7F-\\xFF]'
0014 | 0001 | '(\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0015 | 0001 | '\xd0\xb0\xd0\xbb\xd1\x82\xd1\x83\xd1\x84\xd1\x8c\xd0\xb5\xd0\xb2\xd0\xbe'
0016 | 0001 | '\xd0\xb2\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe'
0017 | 0001 | '(\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0018 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xbe\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0019 | 0001 | '\xd1\x82\xd1\x83\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0020 | 0001 | '\xd0\x98\xd0\xb7\xd0\xb1\xd1\x80\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \\((.*)\\)<\\/a>'
0021 | 0001 | '\xd0\xbc\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0022 | 0001 | '\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x86\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xbe\xd1\x81\xd1\x82'
0023 | 0001 | '\xd1\x84\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xba'
0024 | 0001 | '\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0025 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xb0\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0026 | 0001 | '\xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0027 | 0001 | '\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0028 | 0001 | '\xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd1\x8c\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0'
0029 | 0001 | '(\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\\.)'
0030 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0031 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe-\xd1\x80\xd0\xb0\xd0\xb7\xd1\x83\xd0\xbc\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0032 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd1\x81\xd1\x82\xd0\xb0\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0033 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



cluster 22 stats:
nPatterns: 4.0
nProjects: 29
shortest: [*?[]
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 1.25
3: KLE|zero-or-more repetition | 0.75
4: ADD|one-or-more repetition | 0.5
5: DEC|any of: 0123456789 | 0.25
6: NCCC|negated CCC | 0.25


0000 | 0024 | '[*?[]'
0001 | 0006 | '[^.]*'
0002 | 0001 | '[*,]+'
0003 | 0001 | '/[ ]*[\\d.]+[ ]*kg'



cluster 23 stats:
nPatterns: 25.0
nProjects: 26
shortest: Model:\s+(.+)
Features:

1: LIT|a literal character | 35.84
2: CG|a capture group | 1.6
3: ADD|one-or-more repetition | 1.44
4: ANY|any non-newline char | 1.28
5: KLE|zero-or-more repetition | 1.0
6: DEC|any of: 0123456789 | 0.64
7: LZY|as few reps as possible | 0.36
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.32
9: CCC|custom character class | 0.24
10: RNG|chars within a range | 0.24
11: STR|start-of-line | 0.24
12: OR|logical or | 0.2
13: NCCC|negated CCC | 0.08
14: NWSP|any non-whitespace | 0.08
15: OPT|options wrapper | 0.08
16: QST|zero-or-one repetition | 0.08
17: WRD|[a-zA-Z0-9\_] | 0.08
18: PNG|named capture group | 0.04


0000 | 0004 | '^(\\s*)(def .+:|class .+:)'
0001 | 0003 | '(^\\s+Invalid write of size )\\d+'
0002 | 0003 | "Success: created profile .* at '([^']+)'"
0003 | 0002 | 'dot version ([\\d\\.]+)'
0004 | 0002 | '(?sm)^! Emergency stop.*'
0005 | 0002 | '(?sm)\\s*Type X to quit.*'
0006 | 0002 | 'This is file for test of tar-in.'
0007 | 0002 | '^restorecon reset (.+) context (.+)->(.+)'
0008 | 0001 | 'Model:\\s+(.+)'
0009 | 0001 | 'typedef (\\S+) (.*)'
0010 | 0001 | 'Mobile; rv:([\\d.]+)'
0011 | 0001 | 'Ignore tracebacks: (.*)'
0012 | 0001 | 'Reading specs from (.*)/specs'
0013 | 0001 | '(\\s)*File "(.*?)", line \\d.+'
0014 | 0001 | 'Mozilla (Firefox|Iceweasel) ((\\d+)\\.\\S*)'
0015 | 0001 | '\\s+src set ".*" \\(([0-9.]+) docs, \\d+ segs\\)'
0016 | 0001 | '^(.*[^a-z0-9\\n])?(sudo|su +-c|system/bin/su) +.*'
0017 | 0001 | '(takes [\\w ]+ )(\\d+)( arguments? \\()(\\d+)( given\\))'
0018 | 0001 | "Couldn't start forwarder server for port spec: (\\d+):(\\d+)"
0019 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds.*?"'
0020 | 0001 | ' border-color : #e7d796;margin-bottom : 1em; color : #9a8c59;">Article note: (.*)</div>'
0021 | 0001 | '^No line number information available for address\\s+0x[0-9a-f]+ <(?P<sym>\\w+)\\+\\d+>'
0022 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds. Killing!"'
0023 | 0001 | '(NIST|BLEU) score using\\s+\\d+-grams = ([0-9.]+) for system "(.*)" on document "(.*)" \\((\\d+) segments, (\\d+) words\\)'
0024 | 0001 | '<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>The status of this EDM is (CLOSED|SUSPENDED).&nbsp;&nbsp;Reason: (.*?).</B></font>'



cluster 24 stats:
nPatterns: 2.0
nProjects: 25
shortest: Vote_Bord
Features:

1: LIT|a literal character | 14.0


0000 | 0024 | 'release_cmd_to_pool'
0001 | 0001 | 'Vote_Bord'



cluster 25 stats:
nPatterns: 6.0
nProjects: 25
shortest: {version}
Features:

1: LIT|a literal character | 12.833333333333334
2: ADD|one-or-more repetition | 0.5
3: CG|a capture group | 0.5
4: ANY|any non-newline char | 0.16666666666666666
5: CCC|custom character class | 0.16666666666666666
6: DEC|any of: 0123456789 | 0.16666666666666666
7: RNG|chars within a range | 0.16666666666666666
8: STR|start-of-line | 0.16666666666666666


0000 | 0017 | 'Revision: (.+)'
0001 | 0002 | 'sessionToken'
0002 | 0002 | 'Revision: ([0-9]+)'
0003 | 0002 | 'Subversion Revision:'
0004 | 0001 | '{version}'
0005 | 0001 | '^New Revision: (\\d+)'



cluster 26 stats:
nPatterns: 2.0
nProjects: 23
shortest: ~[^01]
Features:

1: LIT|a literal character | 3.5
2: CCC|custom character class | 1.0
3: RNG|chars within a range | 1.0
4: DBB|$n\le x \le m$ repetition | 0.5
5: END|end-of-line | 0.5
6: NCCC|negated CCC | 0.5
7: STR|start-of-line | 0.5


0000 | 0022 | '^[ -~]{0,200}[!-~]$'
0001 | 0001 | '~[^01]'



cluster 27 stats:
nPatterns: 10.0
nProjects: 23
shortest: .*?\n
Features:

1: LIT|a literal character | 6.8
2: ANY|any non-newline char | 1.4
3: KLE|zero-or-more repetition | 1.2
4: LZY|as few reps as possible | 1.2
5: QST|zero-or-one repetition | 1.0
6: ADD|one-or-more repetition | 0.2
7: CG|a capture group | 0.1
8: NWSP|any non-whitespace | 0.1
9: PNG|named capture group | 0.1
10: WNW|word/non-word boundary | 0.1
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1


0000 | 0012 | '.*?\\n'
0001 | 0004 | '#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'
0002 | 0004 | '#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'
0003 | 0002 | u'.*?\\S\\.\\s'
0004 | 0001 | '.*\\n?'
0005 | 0001 | '<div.*?>\\n'
0006 | 0001 | '<div.*?>(.*?)</'
0007 | 0001 | 'Warning\\\\?:.*'
0008 | 0001 | '.*?Pentium.*?MMX\\b'
0009 | 0001 | '\\{\\{(?P<comm>.+?)\\}\\}'



cluster 28 stats:
nPatterns: 6.0
nProjects: 20
shortest: WIN_VIRTIO
Features:

1: LIT|a literal character | 27.666666666666668
2: OR|logical or | 0.3333333333333333
3: ADD|one-or-more repetition | 0.16666666666666666
4: DEC|any of: 0123456789 | 0.16666666666666666


0000 | 0008 | 'SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE'
0001 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'
0002 | 0003 | '_F2PY_STRING_CONSTANT_\\d+_'
0003 | 0002 | 'WIN_VIRTIO'
0004 | 0001 | 'LINUX_METERPRETER_MULTI_SCRIPT='
0005 | 0001 | 'KVM_TEST_VIRTIO_NETWORK_INSTALLER'



cluster 29 stats:
nPatterns: 2.0
nProjects: 19
shortest: `(.+?)`
Features:

1: LIT|a literal character | 3.5
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: LZY|as few reps as possible | 1.0
5: ANY|any non-newline char | 0.5
6: NCCC|negated CCC | 0.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0016 | '``([^`\\s]+?)``'
0001 | 0003 | '`(.+?)`'



cluster 30 stats:
nPatterns: 2.0
nProjects: 18
shortest: #
Features:

1: LIT|a literal character | 6.0


0000 | 0017 | '#'
0001 | 0001 | '##VERSION##'



cluster 31 stats:
nPatterns: 20.0
nProjects: 18
shortest: tree=
Features:

1: LIT|a literal character | 18.55
2: CG|a capture group | 0.55
3: OR|logical or | 0.35
4: ADD|one-or-more repetition | 0.3
5: QST|zero-or-one repetition | 0.3
6: STR|start-of-line | 0.3
7: CCC|custom character class | 0.25
8: END|end-of-line | 0.25
9: ANY|any non-newline char | 0.15
10: KLE|zero-or-more repetition | 0.15
11: WRD|[a-zA-Z0-9\_] | 0.1
12: NCCC|negated CCC | 0.05


0000 | 0002 | 'test_file_commit1'
0001 | 0002 | 'test_file_commit2'
0002 | 0002 | '^/(artist|release|track|label|release-group)/([^/]*)$'
0003 | 0002 | '((final|abstract)[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?class[ \t]+\\w+((implements|extends)\\w+)?'
0004 | 0001 | 'tree='
0005 | 0001 | 'state='
0006 | 0001 | 'attack=5'
0007 | 0001 | '^private_'
0008 | 0001 | 'template='
0009 | 0001 | 'externalip='
0010 | 0001 | 'smtp_relay='
0011 | 0001 | 'create_tasks'
0012 | 0001 | 'Present|Absent'
0013 | 0001 | '^parrot_string_t$'
0014 | 0001 | 'exe not registered'
0015 | 0001 | 'power_(.*).template'
0016 | 0001 | '^translator[-_]credits$'
0017 | 0001 | 'event_teamlist|matchresults'
0018 | 0001 | '^/etc/(g?shadow-?|securetty)$'
0019 | 0001 | '^std::_Rb_tree_const_iterator<.*>$'



cluster 32 stats:
nPatterns: 5.0
nProjects: 16
shortest: filename: \s*(.*)\n
Features:

1: LIT|a literal character | 18.8
2: CG|a capture group | 1.4
3: KLE|zero-or-more repetition | 1.0
4: OR|logical or | 0.8
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6
6: ANY|any non-newline char | 0.2
7: CCC|custom character class | 0.2
8: STR|start-of-line | 0.2
9: WRD|[a-zA-Z0-9\_] | 0.2


0000 | 0008 | '\\{%\\s*(block|extends)'
0001 | 0004 | '([=!]=)\\s*(None|False|True)'
0002 | 0002 | '^(fails|needs-focus|random|skip|asserts|fuzzy)'
0003 | 0001 | 'filename: \\s*(.*)\n'
0004 | 0001 | '(module|def|class) (\\w*)'



cluster 33 stats:
nPatterns: 1.0
nProjects: 15
shortest: <(/|\Z)
Features:

1: LIT|a literal character | 2.0
2: CG|a capture group | 1.0
3: ENDZ|absolute end of string | 1.0
4: OR|logical or | 1.0


0000 | 0015 | '<(/|\\Z)'



cluster 34 stats:
nPatterns: 13.0
nProjects: 15
shortest: class (\w+?)\(
Features:

1: LIT|a literal character | 28.53846153846154
2: OR|logical or | 0.9230769230769231
3: CG|a capture group | 0.7692307692307693
4: ANY|any non-newline char | 0.46153846153846156
5: OPT|options wrapper | 0.38461538461538464
6: STR|start-of-line | 0.38461538461538464
7: ADD|one-or-more repetition | 0.3076923076923077
8: KLE|zero-or-more repetition | 0.3076923076923077
9: CCC|custom character class | 0.15384615384615385
10: END|end-of-line | 0.15384615384615385
11: QST|zero-or-one repetition | 0.15384615384615385
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.15384615384615385
13: LZY|as few reps as possible | 0.07692307692307693
14: NCG|group without capturing | 0.07692307692307693
15: PNG|named capture group | 0.07692307692307693
16: WRD|[a-zA-Z0-9\_] | 0.07692307692307693


0000 | 0002 | '(?m)^alias.*virtio'
0001 | 0002 | '(?m)^alias\\s+scsi|(?m)^alias\\s+eth'
0002 | 0002 | '\\^phoneCallContactId\\^=\\^urn:ace:(?P<identifier>.*)'
0003 | 0002 | '^(Mozilla.*(Gecko|KHTML|MSIE|Presto|Trident)|Opera).*$'
0004 | 0001 | 'class (\\w+?)\\('
0005 | 0001 | 'mozilla\\.[com|net|org]'
0006 | 0001 | '(?i)incorporated|(?i)inc.'
0007 | 0001 | '(AppKit|Foundation)\\.doc'
0008 | 0001 | '@(?:end|implementation|protocol)'
0009 | 0001 | '(.+)[.](proto|impl|init|cleanup)$'
0010 | 0001 | 'Chrome|Gecko|Microsoft|Mozilla|Safari|WebKit'
0011 | 0001 | 'test_|LookupTable|Types|SystemConfiguration|gannet|Socket|Timings|cs_'
0012 | 0001 | '^/((usr/)?s?bin|etc/(rc\\.d/init\\.d|X11/xinit\\.d|cron\\.(hourly|daily|monthly|weekly)))/'



cluster 35 stats:
nPatterns: 4.0
nProjects: 14
shortest: &(?!\#)
Features:

1: LIT|a literal character | 2.25
2: NLKB|sequence doesn't precede | 0.75
3: NLKA|sequence doesn't follow  | 0.5


0000 | 0005 | '(?<!\\\\),'
0001 | 0004 | '&(?!\\#)'
0002 | 0004 | u'(?<!%)%(?!%)'
0003 | 0001 | '(?<!\\\\)%'



cluster 36 stats:
nPatterns: 4.0
nProjects: 14
shortest: .*?\bpni\b
Features:

1: LIT|a literal character | 3.5
2: WNW|word/non-word boundary | 2.5
3: ANY|any non-newline char | 1.25
4: KLE|zero-or-more repetition | 1.0
5: LZY|as few reps as possible | 0.75
6: ADD|one-or-more repetition | 0.25
7: CG|a capture group | 0.25
8: NLKA|sequence doesn't follow  | 0.25


0000 | 0006 | '.*?\\b(as)\\b'
0001 | 0001 | '.*?\\bpni\\b'
0002 | 0001 | '.*?\\bsse2\\b'
0003 | 0001 | '.*\\bin\\b(?!\\b.+ing\\b)'



cluster 37 stats:
nPatterns: 2.0
nProjects: 13
shortest: ^
Features:

1: STR|start-of-line | 1.0
2: LIT|a literal character | 0.5


0000 | 0002 | '^'
0001 | 0001 | '^p'



cluster 38 stats:
nPatterns: 7.0
nProjects: 13
shortest: '(.*)'
Features:

1: LIT|a literal character | 3.7142857142857144
2: CG|a capture group | 1.0
3: KLE|zero-or-more repetition | 0.7142857142857143
4: ANY|any non-newline char | 0.5714285714285714
5: END|end-of-line | 0.42857142857142855
6: ADD|one-or-more repetition | 0.2857142857142857
7: NCCC|negated CCC | 0.2857142857142857
8: STR|start-of-line | 0.2857142857142857
9: LZY|as few reps as possible | 0.14285714285714285
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.14285714285714285


0000 | 0005 | "^'(.*)'$"
0001 | 0003 | "(''')\\s*$"
0002 | 0001 | "'(.*)'"
0003 | 0001 | "'(.*)'$"
0004 | 0001 | "^'(.+)'@"
0005 | 0001 | "'\\.\\./([^']*)'"
0006 | 0001 | "'([^']+?)' \\(qv\\)"



cluster 39 stats:
nPatterns: 3.0
nProjects: 12
shortest: ^subject=\s*
Features:

1: LIT|a literal character | 13.0
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.6666666666666667
3: KLE|zero-or-more repetition | 1.3333333333333333
4: ADD|one-or-more repetition | 0.6666666666666666
5: ANY|any non-newline char | 0.3333333333333333
6: LZY|as few reps as possible | 0.3333333333333333
7: STR|start-of-line | 0.3333333333333333


0000 | 0008 | '\\{include\\s+file=.*?\\}'
0001 | 0003 | '\\s*\\#\\s*include\\s+<cxxtest/'
0002 | 0001 | '^subject=\\s*'



cluster 40 stats:
nPatterns: 10.0
nProjects: 12
shortest: /(developers/)?apps/
Features:

1: LIT|a literal character | 28.9
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 0.7
4: ADD|one-or-more repetition | 0.6
5: DEC|any of: 0123456789 | 0.4
6: END|end-of-line | 0.4
7: KLE|zero-or-more repetition | 0.3
8: LZY|as few reps as possible | 0.2
9: OR|logical or | 0.2
10: STR|start-of-line | 0.2
11: DBB|$n\le x \le m$ repetition | 0.1
12: NWSP|any non-whitespace | 0.1
13: QST|zero-or-one repetition | 0.1
14: WRD|[a-zA-Z0-9\_] | 0.1


0000 | 0004 | '^http://testserver/somewhere/else/\\?c=\\d+#baz$'
0001 | 0004 | '^http://testserver/somewhere/else/\\?foo=bar&c=\\d+#baz$'
0002 | 0002 | '/(developers/)?apps/'
0003 | 0001 | '/vote/(up|down)/(.*)'
0004 | 0001 | '/posters/archive/main/.*'
0005 | 0001 | 'http://en.wikipedia.org/wiki/'
0006 | 0001 | '/(en-US|es-ES)/firefox/addon/(\\d+)/$'
0007 | 0001 | 'http://www.polleverywhere.com/\\w+/\\S+'
0008 | 0001 | ' xmlns:xi="http://www.w3.org/2001/XInclude"'
0009 | 0001 | '.*?/video/tv/(.+?)/season (\\d{1,2})/extras$'



cluster 41 stats:
nPatterns: 3.0
nProjects: 11
shortest: \S
Features:

1: NWSP|any non-whitespace | 1.0
2: ADD|one-or-more repetition | 0.3333333333333333
3: LIT|a literal character | 0.3333333333333333
4: STR|start-of-line | 0.3333333333333333


0000 | 0005 | ',\\S'
0001 | 0005 | u'\\S'
0002 | 0001 | '^\\S+'



cluster 42 stats:
nPatterns: 3.0
nProjects: 11
shortest: [<>\'"]
Features:

1: LIT|a literal character | 11.0
2: CCC|custom character class | 2.0
3: KLE|zero-or-more repetition | 1.3333333333333333
4: ANY|any non-newline char | 0.6666666666666666
5: CG|a capture group | 0.6666666666666666
6: ADD|one-or-more repetition | 0.3333333333333333
7: END|end-of-line | 0.3333333333333333
8: RNG|chars within a range | 0.3333333333333333
9: STR|start-of-line | 0.3333333333333333


0000 | 0007 | '[<>\'"]'
0001 | 0003 | '^[\'"](.*)[\'"]$'
0002 | 0001 | 'PACKAGE_VERSION *= *[\'"]([0-9.]+)["\'].*'



cluster 43 stats:
nPatterns: 4.0
nProjects: 10
shortest: ^enum
Features:

1: LIT|a literal character | 10.25
2: STR|start-of-line | 0.75
3: END|end-of-line | 0.5
4: ANY|any non-newline char | 0.25
5: KLE|zero-or-more repetition | 0.25


0000 | 0007 | '^columns .* are not unique$'
0001 | 0001 | '^enum'
0002 | 0001 | '^name$'
0003 | 0001 | 'Run number'



cluster 44 stats:
nPatterns: 3.0
nProjects: 10
shortest: <title>(.*?)</title>
Features:

1: LIT|a literal character | 27.666666666666668
2: ANY|any non-newline char | 0.6666666666666666
3: KLE|zero-or-more repetition | 0.6666666666666666
4: LZY|as few reps as possible | 0.6666666666666666
5: CCC|custom character class | 0.3333333333333333
6: CG|a capture group | 0.3333333333333333
7: LWB|at least n repetition | 0.3333333333333333
8: RNG|chars within a range | 0.3333333333333333


0000 | 0007 | '<title>(.*?)</title>'
0001 | 0002 | '<td style="text-align: right;">[0-9]{1,}</td>'
0002 | 0001 | '<table id="emuleFile">.*?</table>'



cluster 45 stats:
nPatterns: 6.0
nProjects: 10
shortest: {([^}^{]*)}
Features:

1: LIT|a literal character | 5.833333333333333
2: CG|a capture group | 1.0
3: NCCC|negated CCC | 1.0
4: ADD|one-or-more repetition | 0.6666666666666666
5: KLE|zero-or-more repetition | 0.5
6: LZY|as few reps as possible | 0.5
7: ANY|any non-newline char | 0.3333333333333333
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333
9: CCC|custom character class | 0.16666666666666666
10: NLKA|sequence doesn't follow  | 0.16666666666666666
11: OR|logical or | 0.16666666666666666


0000 | 0005 | '([^*{}\\s]@|[^*{}@\\s]|\\*(?!/))+'
0001 | 0001 | '{([^}^{]*)}'
0002 | 0001 | '([$]{[^}]*})'
0003 | 0001 | '#\\{([^}]*)\\}'
0004 | 0001 | '{{{([^{]+?)}}}'
0005 | 0001 | '{{.+?\\|(.+?)}}'



cluster 46 stats:
nPatterns: 6.0
nProjects: 10
shortest: (?<= line )\d+
Features:

1: LIT|a literal character | 16.666666666666668
2: ADD|one-or-more repetition | 1.6666666666666667
3: ANY|any non-newline char | 1.0
4: NWSP|any non-whitespace | 0.8333333333333334
5: PNG|named capture group | 0.8333333333333334
6: KLE|zero-or-more repetition | 0.6666666666666666
7: CG|a capture group | 0.5
8: DEC|any of: 0123456789 | 0.5
9: END|end-of-line | 0.3333333333333333
10: LKB|matching sequence precedes | 0.3333333333333333
11: LZY|as few reps as possible | 0.3333333333333333
12: QST|zero-or-one repetition | 0.3333333333333333
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3333333333333333
14: BKR|match the $i^{th}$ CG | 0.16666666666666666
15: LKA|matching sequence follows | 0.16666666666666666
16: NCG|group without capturing | 0.16666666666666666
17: OR|logical or | 0.16666666666666666
18: STR|start-of-line | 0.16666666666666666


0000 | 0003 | 'Change \\d+ by (?P<who>\\S+)@\\S+ on (?P<when>.+)$'
0001 | 0002 | '(\\*|_) (?=\\S) (.+?) (?<=\\S) \\1'
0002 | 0002 | '<img class=thumbnail-img (?:.* )?src=(http.*)>'
0003 | 0001 | '(?<= line )\\d+'
0004 | 0001 | 'database version (?P<version>.+?)\\.?\n'
0005 | 0001 | '^.*\\s+mail exchanger = (?P<priority>\\d+) (?P<host>\\S+)\\s*$'



cluster 47 stats:
nPatterns: 14.0
nProjects: 10
shortest: <pre><a name="foo-1">
Features:

1: LIT|a literal character | 37.07142857142857
2: KLE|zero-or-more repetition | 1.1428571428571428
3: ANY|any non-newline char | 1.0714285714285714
4: CG|a capture group | 1.0714285714285714
5: LZY|as few reps as possible | 0.7142857142857143
6: OR|logical or | 0.5714285714285714
7: NCG|group without capturing | 0.5
8: ADD|one-or-more repetition | 0.2857142857142857
9: NCCC|negated CCC | 0.21428571428571427
10: QST|zero-or-one repetition | 0.21428571428571427
11: PNG|named capture group | 0.14285714285714285
12: WRD|[a-zA-Z0-9\_] | 0.14285714285714285
13: CCC|custom character class | 0.07142857142857142
14: DEC|any of: 0123456789 | 0.07142857142857142
15: NLKA|sequence doesn't follow  | 0.07142857142857142
16: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.07142857142857142


0000 | 0002 | '<a href="function\\..*?\\.html">(.*?)</a>'
0001 | 0001 | '<pre><a name="foo-1">'
0002 | 0001 | '<pre><a name="foo-5">'
0003 | 0001 | '/(?P<tenant_id>.*?)/.*'
0004 | 0001 | '(<h5><a name="?akas"?.*</table>)'
0005 | 0001 | '<viewer version_patch="(\\d+)" />'
0006 | 0001 | '<img.*?src="(?!http://)(.*?)".*/?>'
0007 | 0001 | '<p>Raw output: <a href="(.*)">(.*)</a>'
0008 | 0001 | '<div class="context" id="(?P<id>[^"]+)">'
0009 | 0001 | u'<a href="(.*?)" class="historylink">History</a>'
0010 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)</a>'
0011 | 0001 | '(?:aka|birth name) (<em>")(.*?)"(<br>|<\\/em>|<\\/td>)'
0012 | 0001 | '(?:<FONT SIZE="-1">|<font face="arial,helvetica" size=2><(?:B|I)>)([^<]*?)/([^<]*?)(?:</(?:B|I)></font>|</FONT>)'
0013 | 0001 | '<TD>(?:<font face="arial,helvetica" size=2>|<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>)\\s*(.*?)(?:</font>|</B></font></FONT>)</TD>'



cluster 48 stats:
nPatterns: 4.0
nProjects: 9
shortest: (.{60})
Features:

1: ANY|any non-newline char | 2.0
2: CG|a capture group | 2.0
3: SNG|exactly n repetition | 1.5
4: LIT|a literal character | 1.0
5: KLE|zero-or-more repetition | 0.5
6: END|end-of-line | 0.25
7: LZY|as few reps as possible | 0.25


0000 | 0005 | '(.{60})'
0001 | 0001 | '{(.*)}$'
0002 | 0001 | '{(.*?)}'
0003 | 0001 | '(.{8})(.{4})(.{4})(.{4})(.{12})'



cluster 49 stats:
nPatterns: 3.0
nProjects: 9
shortest: (final|stable)$
Features:

1: LIT|a literal character | 17.666666666666668
2: CG|a capture group | 2.0
3: END|end-of-line | 0.6666666666666666
4: OR|logical or | 0.6666666666666666
5: ANY|any non-newline char | 0.3333333333333333
6: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0005 | '(final|stable)$'
0001 | 0003 | '--test-config=(.*)$'
0002 | 0001 | '(-devel)|(-debuginfo)|(-static)|(-libs)'



cluster 50 stats:
nPatterns: 2.0
nProjects: 8
shortest: (?P<a>x)
Features:

1: LIT|a literal character | 1.0
2: PNG|named capture group | 1.0


0000 | 0008 | '(?P<a>x)'
0001 | 0008 | '(?P<unk>x)'



cluster 51 stats:
nPatterns: 2.0
nProjects: 8
shortest: #define NODE_MAJOR_VERSION
Features:

1: LIT|a literal character | 27.5
2: KLE|zero-or-more repetition | 1.5
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 0.5
5: STR|start-of-line | 0.5


0000 | 0005 | '#define NODE_MAJOR_VERSION'
0001 | 0003 | '^#define.*ENGINE_VERSION\t*"DOOM (.*)"'



cluster 52 stats:
nPatterns: 2.0
nProjects: 7
shortest: \.exe$
Features:

1: LIT|a literal character | 4.0
2: ANY|any non-newline char | 0.5
3: END|end-of-line | 0.5
4: KLE|zero-or-more repetition | 0.5


0000 | 0004 | '\\.exe$'
0001 | 0003 | '.*\\.exe'



cluster 53 stats:
nPatterns: 3.0
nProjects: 7
shortest: /$
Features:

1: LIT|a literal character | 2.0
2: ANY|any non-newline char | 0.6666666666666666
3: END|end-of-line | 0.6666666666666666
4: KLE|zero-or-more repetition | 0.6666666666666666
5: CG|a capture group | 0.3333333333333333


0000 | 0004 | '/$'
0001 | 0001 | '//.*$'
0002 | 0001 | '\\ //(.*)'



cluster 54 stats:
nPatterns: 2.0
nProjects: 7
shortest: <root>([^<]*)</root>
Features:

1: LIT|a literal character | 11.0
2: ADD|one-or-more repetition | 1.0
3: CCC|custom character class | 1.0
4: PNG|named capture group | 1.0
5: RNG|chars within a range | 1.0
6: CG|a capture group | 0.5
7: KLE|zero-or-more repetition | 0.5
8: NCCC|negated CCC | 0.5


0000 | 0006 | '<root>([^<]*)</root>'
0001 | 0001 | '(?P<protocol>[a-z]+)://(?P<token>[0-9:]+)'



cluster 55 stats:
nPatterns: 7.0
nProjects: 7
shortest: a.*
Features:

1: LIT|a literal character | 11.571428571428571
2: ANY|any non-newline char | 2.142857142857143
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 0.42857142857142855
5: ADD|one-or-more repetition | 0.14285714285714285
6: LZY|as few reps as possible | 0.14285714285714285
7: NCG|group without capturing | 0.14285714285714285
8: PNG|named capture group | 0.14285714285714285
9: STR|start-of-line | 0.14285714285714285


0000 | 0002 | 'a.*'
0001 | 0002 | 'foo.*bar'
0002 | 0002 | '.*foo.*bar'
0003 | 0002 | 'from django.*import'
0004 | 0001 | '.*bitrate: (.+) (?:kb/s).*'
0005 | 0001 | '^(.*:.*/jobmanager-.*?)-(.*)'
0006 | 0001 | ".*window\\.location\\.href='(?P<href>.*)'.*"



cluster 56 stats:
nPatterns: 6.0
nProjects: 7
shortest: iax2 peers \[
Features:

1: LIT|a literal character | 24.0
2: ADD|one-or-more repetition | 0.16666666666666666
3: ANY|any non-newline char | 0.16666666666666666
4: CG|a capture group | 0.16666666666666666
5: KLE|zero-or-more repetition | 0.16666666666666666
6: WRD|[a-zA-Z0-9\_] | 0.16666666666666666


0000 | 0002 | 'the LaTeX files are in (.*)\\.'
0001 | 0001 | 'iax2 peers \\['
0002 | 0001 | 'This is makeindex'
0003 | 0001 | '\nRock Ridge signatures'
0004 | 0001 | 'Sparse is better than dense'
0005 | 0001 | "This module \\'\\w+\\' is auto-generated with f2py"



cluster 57 stats:
nPatterns: 6.0
nProjects: 7
shortest: UNSEEN\s+(\d+)
Features:

1: LIT|a literal character | 20.666666666666668
2: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 2.1666666666666665
3: ADD|one-or-more repetition | 1.6666666666666667
4: CG|a capture group | 1.0
5: RNG|chars within a range | 1.0
6: CCC|custom character class | 0.6666666666666666
7: DEC|any of: 0123456789 | 0.3333333333333333
8: KLE|zero-or-more repetition | 0.3333333333333333
9: STR|start-of-line | 0.16666666666666666


0000 | 0003 | '^\\s*#\\s*define\\s+OPENSSL_VERSION_NUMBER\\s+(0x[0-9a-fA-F]+)'
0001 | 0001 | 'UNSEEN\\s+(\\d+)'
0002 | 0001 | 'LL_VERSION_BUILD\\s=\\s([0-9]+)'
0003 | 0001 | 'IMP_VERSION_MAJOR\\s=\\s([0-9]+)'
0004 | 0001 | 'IMP_VERSION_PATCH\\s=\\s([0-9]+)'
0005 | 0001 | '#define\\swxMAJOR_VERSION\\s+(\\d+)'



cluster 58 stats:
nPatterns: 5.0
nProjects: 7
shortest: _(dir|file|path)s?$
Features:

1: LIT|a literal character | 24.8
2: CG|a capture group | 1.6
3: KLE|zero-or-more repetition | 1.2
4: OR|logical or | 1.2
5: RNG|chars within a range | 1.2
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
7: END|end-of-line | 0.8
8: NCG|group without capturing | 0.6
9: QST|zero-or-one repetition | 0.6
10: ADD|one-or-more repetition | 0.4
11: NCCC|negated CCC | 0.4
12: STR|start-of-line | 0.4
13: ANY|any non-newline char | 0.2
14: CCC|custom character class | 0.2


0000 | 0002 | '^\\s*(if|try|elif|while|for)'
0001 | 0002 | '[^A-Za-z0-9]?(?:file|source)=(http[^\\\'"&]*)'
0002 | 0001 | '_(dir|file|path)s?$'
0003 | 0001 | '^(0x[0-9a-fA-F]+)(?:,(ramdisk|ipl|entry|rpm))?$'
0004 | 0001 | '\\s*//\\s*#(include|define|if|ifdef|elif|ifndef|endif|else)(?:\\s+(.*)\\s*$|($))'



cluster 59 stats:
nPatterns: 3.0
nProjects: 6
shortest: [ ]+
Features:

1: LIT|a literal character | 1.6666666666666667
2: CCC|custom character class | 1.0
3: ADD|one-or-more repetition | 0.6666666666666666


0000 | 0004 | '[ ]+'
0001 | 0001 | '[x+]'
0002 | 0001 | '[\t ]+'



cluster 60 stats:
nPatterns: 3.0
nProjects: 6
shortest: [-.]
Features:

1: LIT|a literal character | 2.3333333333333335
2: CCC|custom character class | 1.0


0000 | 0004 | '[-.]'
0001 | 0001 | '[-:]'
0002 | 0001 | '[\\-: ]'



cluster 61 stats:
nPatterns: 4.0
nProjects: 6
shortest: \w+
Features:

1: ADD|one-or-more repetition | 1.25
2: LIT|a literal character | 1.0
3: CCC|custom character class | 0.75
4: WRD|[a-zA-Z0-9\_] | 0.5
5: END|end-of-line | 0.25
6: NCCC|negated CCC | 0.25
7: OR|logical or | 0.25
8: STR|start-of-line | 0.25


0000 | 0002 | "[\\w']+"
0001 | 0001 | "[^']+"
0002 | 0001 | u'\\w+'
0003 | 0001 | '^[@]+|[@]+$'



cluster 62 stats:
nPatterns: 4.0
nProjects: 6
shortest: [\s,;:]
Features:

1: LIT|a literal character | 3.5
2: ADD|one-or-more repetition | 0.75
3: CCC|custom character class | 0.75
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
5: NCCC|negated CCC | 0.25
6: STR|start-of-line | 0.25
7: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0003 | '\\*\\s[^:]+:'
0001 | 0001 | '[\\s,;:]'
0002 | 0001 | '^[\\w._-]+'
0003 | 0001 | '[\\s.,;_-]+'



cluster 63 stats:
nPatterns: 5.0
nProjects: 6
shortest: [().]
Features:

1: LIT|a literal character | 7.2
2: CCC|custom character class | 1.4
3: CG|a capture group | 1.0
4: ADD|one-or-more repetition | 0.4
5: ANY|any non-newline char | 0.2
6: END|end-of-line | 0.2
7: KLE|zero-or-more repetition | 0.2
8: NCCC|negated CCC | 0.2
9: NWSP|any non-whitespace | 0.2
10: OR|logical or | 0.2


0000 | 0002 | '[&?]versionId=([^&]+)($|=|&)'
0001 | 0001 | '[().]'
0002 | 0001 | '([|&])'
0003 | 0001 | '([()| ])'
0004 | 0001 | '(\\S+[.]savespace[(].*[)])'



cluster 64 stats:
nPatterns: 5.0
nProjects: 6
shortest: novoebenevo.ru
Features:

1: LIT|a literal character | 23.0
2: ADD|one-or-more repetition | 0.6
3: ANY|any non-newline char | 0.4
4: CG|a capture group | 0.4
5: CCC|custom character class | 0.2
6: PNG|named capture group | 0.2
7: RNG|chars within a range | 0.2
8: WRD|[a-zA-Z0-9\_] | 0.2


0000 | 0002 | '<meta name="video_height" content="([0-9]+)" />'
0001 | 0001 | 'novoebenevo.ru'
0002 | 0001 | 'Connection timed out'
0003 | 0001 | 'GoogleDMToken token=(\\w+)'
0004 | 0001 | 'developmentRegion = (?P<region>.+);'



cluster 65 stats:
nPatterns: 6.0
nProjects: 6
shortest: \nJoliet
Features:

1: LIT|a literal character | 19.833333333333332
2: ADD|one-or-more repetition | 0.8333333333333334
3: CCC|custom character class | 0.6666666666666666
4: CG|a capture group | 0.5
5: RNG|chars within a range | 0.5
6: ANY|any non-newline char | 0.3333333333333333
7: WRD|[a-zA-Z0-9\_] | 0.16666666666666666


0000 | 0002 | '# StopWatch ([\\w]+) total/cumulative duration ([0-9.]+). Samples: ([0-9]+)'
0001 | 0001 | '\nJoliet'
0002 | 0001 | '<tr valign'
0003 | 0001 | 'internal log'
0004 | 0001 | 'install_dir .+\n'
0005 | 0001 | 'Starting glance-[a-z]+ with'



cluster 66 stats:
nPatterns: 2.0
nProjects: 5
shortest: /robots.txt
Features:

1: LIT|a literal character | 15.5
2: ANY|any non-newline char | 1.0
3: QST|zero-or-one repetition | 0.5
4: STR|start-of-line | 0.5


0000 | 0004 | '^https?://bitbucket.org/'
0001 | 0001 | '/robots.txt'



cluster 67 stats:
nPatterns: 3.0
nProjects: 5
shortest: ^quit.*
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: STR|start-of-line | 0.6666666666666666


0000 | 0003 | '^quit.*'
0001 | 0001 | '/testing/.*'
0002 | 0001 | '^timeout.*/'



cluster 68 stats:
nPatterns: 2.0
nProjects: 5
shortest: length (\d*):
Features:

1: LIT|a literal character | 13.0
2: CG|a capture group | 1.0
3: DEC|any of: 0123456789 | 1.0
4: ADD|one-or-more repetition | 0.5
5: KLE|zero-or-more repetition | 0.5


0000 | 0003 | 'length (\\d*):'
0001 | 0002 | 'Last Changed Rev: (\\d+)'



cluster 69 stats:
nPatterns: 2.0
nProjects: 5
shortest: and
Features:

1: LIT|a literal character | 21.0


0000 | 0003 | 'and'
0001 | 0001 | "Warning--I didn't find a database entry"



cluster 70 stats:
nPatterns: 3.0
nProjects: 5
shortest: facet
Features:

1: LIT|a literal character | 11.666666666666666
2: ANY|any non-newline char | 0.3333333333333333
3: KLE|zero-or-more repetition | 0.3333333333333333


0000 | 0003 | 'Accelerate'
0001 | 0001 | 'facet'
0002 | 0001 | 'exampleLocalVar.*abcde'



cluster 71 stats:
nPatterns: 3.0
nProjects: 5
shortest: .esour.*
Features:

1: LIT|a literal character | 10.333333333333334
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 0.6666666666666666
4: CCC|custom character class | 0.3333333333333333
5: CG|a capture group | 0.3333333333333333
6: END|end-of-line | 0.3333333333333333
7: RNG|chars within a range | 0.3333333333333333


0000 | 0003 | 'browser.search.order.([1-9])'
0001 | 0001 | '.esour.*'
0002 | 0001 | '.*stderr$'



cluster 72 stats:
nPatterns: 2.0
nProjects: 5
shortest: MARIONETTE_CONTEXT(\s*)=(\s*)[\'|\"](.*?)[\'|\"];
Features:

1: LIT|a literal character | 34.5
2: CG|a capture group | 2.5
3: CCC|custom character class | 1.5
4: KLE|zero-or-more repetition | 1.5
5: NCG|group without capturing | 1.5
6: OR|logical or | 1.5
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.5
8: QST|zero-or-one repetition | 1.0
9: ADD|one-or-more repetition | 0.5
10: ANY|any non-newline char | 0.5
11: LZY|as few reps as possible | 0.5
12: RNG|chars within a range | 0.5
13: STR|start-of-line | 0.5
14: WRD|[a-zA-Z0-9\_] | 0.5


0000 | 0004 | '^(DISTRIB_(?:ID|RELEASE|CODENAME|DESCRIPTION))=(?:\'|")?([\\w\\s\\.-_]+)(?:\'|")?'
0001 | 0001 | 'MARIONETTE_CONTEXT(\\s*)=(\\s*)[\'|\\"](.*?)[\'|\\"];'



cluster 73 stats:
nPatterns: 4.0
nProjects: 5
shortest: \(applications/\(.*
Features:

1: LIT|a literal character | 18.75
2: KLE|zero-or-more repetition | 2.0
3: CG|a capture group | 1.5
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.25
5: ANY|any non-newline char | 0.75
6: ADD|one-or-more repetition | 0.5
7: DEC|any of: 0123456789 | 0.5
8: OR|logical or | 0.5
9: END|end-of-line | 0.25
10: STR|start-of-line | 0.25


0000 | 0002 | '(Saving to:|\\s*\\d+K)'
0001 | 0001 | '\\(applications/\\(.*'
0002 | 0001 | '(\\s*configuration:)(.*)\n'
0003 | 0001 | '^I/(stderr)\\s*\\(\\s*\\d+\\):\\s*((info|warning|error|debug): .*)$'



cluster 74 stats:
nPatterns: 4.0
nProjects: 5
shortest: <script .*?</script>
Features:

1: LIT|a literal character | 26.25
2: KLE|zero-or-more repetition | 2.25
3: ANY|any non-newline char | 1.5
4: LZY|as few reps as possible | 1.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.75
6: CG|a capture group | 0.25


0000 | 0002 | "<div class='lyricbox'><div class='rtMatcher'>.*?</div>(.*?)<!--"
0001 | 0001 | '<script .*?</script>'
0002 | 0001 | '<script.*?>.*?</script>'
0003 | 0001 | '<\\s*script.*?<\\s*/script\\s*>'



cluster 75 stats:
nPatterns: 4.0
nProjects: 5
shortest: openssl-([^<]+)<
Features:

1: LIT|a literal character | 34.5
2: KLE|zero-or-more repetition | 1.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
4: ANY|any non-newline char | 0.75
5: CG|a capture group | 0.75
6: NCCC|negated CCC | 0.75
7: ADD|one-or-more repetition | 0.5
8: LZY|as few reps as possible | 0.25


0000 | 0002 | '<span id=short-desc-content>([^<]*)</span>'
0001 | 0001 | 'openssl-([^<]+)<'
0002 | 0001 | '<span class="c_1">.*?</span>'
0003 | 0001 | '<key>system.privilege.taskport</key>\\s*\n\\s*<dict>\n\\s*<key>allow-root</key>\n\\s*(<[^>]+>)'



cluster 76 stats:
nPatterns: 8.0
nProjects: 5
shortest: ^.htaccess$
Features:

1: LIT|a literal character | 24.375
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 0.625
4: STR|start-of-line | 0.625
5: KLE|zero-or-more repetition | 0.375
6: RNG|chars within a range | 0.25
7: ADD|one-or-more repetition | 0.125
8: CCC|custom character class | 0.125
9: DEC|any of: 0123456789 | 0.125
10: LZY|as few reps as possible | 0.125
11: WNW|word/non-word boundary | 0.125


0000 | 0001 | '^.htaccess$'
0001 | 0001 | '.*?Opteron\\b'
0002 | 0001 | '.*/vote_history.pdf'
0003 | 0001 | '^dhcp\\.pool\\.start$'
0004 | 0001 | '^dhcp\\.scope\\.start$'
0005 | 0001 | 'dhcp.option.ntp_server.\\d'
0006 | 0001 | '^http://node-todobin\\.herokuapp\\.com/list/[a-z0-9]+$'
0007 | 0001 | '^Multiple results found; try http://search\\.vt\\.edu/search/people\\.html\\?q=.*$'



cluster 77 stats:
nPatterns: 2.0
nProjects: 4
shortest: \xf6
Features:

1: LIT|a literal character | 2.0
2: CCC|custom character class | 0.5
3: RNG|chars within a range | 0.5


0000 | 0002 | '\\xf6'
0001 | 0002 | '[=\x7f-\xff]'



cluster 78 stats:
nPatterns: 3.0
nProjects: 4
shortest: ^\(
Features:

1: LIT|a literal character | 1.6666666666666667
2: STR|start-of-line | 0.6666666666666666
3: NWRD|non-word chars | 0.3333333333333333


0000 | 0002 | '\\W_\\('
0001 | 0001 | '^\\('
0002 | 0001 | '^_\\('



cluster 79 stats:
nPatterns: 3.0
nProjects: 4
shortest: url
Features:

1: LIT|a literal character | 11.333333333333334
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: LZY|as few reps as possible | 1.0
5: CG|a capture group | 0.3333333333333333
6: OPT|options wrapper | 0.3333333333333333


0000 | 0002 | '(?s)<failure (.*?)>.*?</failure>'
0001 | 0001 | 'url'
0002 | 0001 | '<url>.*?</url>'



cluster 80 stats:
nPatterns: 4.0
nProjects: 4
shortest:  - [0-9]+
Features:

1: LIT|a literal character | 8.5
2: ADD|one-or-more repetition | 1.0
3: RNG|chars within a range | 1.0
4: CCC|custom character class | 0.75
5: CG|a capture group | 0.25
6: END|end-of-line | 0.25
7: LWB|at least n repetition | 0.25
8: NCCC|negated CCC | 0.25
9: QST|zero-or-one repetition | 0.25


0000 | 0001 | ' - [0-9]+'
0001 | 0001 | ' at -?0x[^>]+'
0002 | 0001 | 'total = [0-9]+'
0003 | 0001 | ' at 0x[0-9a-f]{6,}(>+)$'



cluster 81 stats:
nPatterns: 4.0
nProjects: 4
shortest: ERROR FAIL
Features:

1: LIT|a literal character | 15.5
2: ANY|any non-newline char | 0.25


0000 | 0002 | 'ERROR FAIL'
0001 | 0002 | 'ERROR TODO WORKED'
0002 | 0001 | 'ERROR in BUILD'
0003 | 0001 | 'REMARK   2 RESOLUTION.'



cluster 82 stats:
nPatterns: 3.0
nProjects: 4
shortest: </?(?:b|em|i)>
Features:

1: LIT|a literal character | 20.0
2: CG|a capture group | 2.3333333333333335
3: QST|zero-or-one repetition | 2.3333333333333335
4: OR|logical or | 1.3333333333333333
5: ADD|one-or-more repetition | 1.0
6: ANY|any non-newline char | 0.6666666666666666
7: CCC|custom character class | 0.3333333333333333
8: END|end-of-line | 0.3333333333333333
9: NCCC|negated CCC | 0.3333333333333333
10: NCG|group without capturing | 0.3333333333333333
11: STR|start-of-line | 0.3333333333333333


0000 | 0002 | '</?(?:b|em|i)>'
0001 | 0001 | '(src|href)\\=([\\\'"]?)/?files/'
0002 | 0001 | '^/(usr/)?(s?bin|games|libexec(/.+)?|(lib(64)?|share)/.+)/[^/]+$'



cluster 83 stats:
nPatterns: 3.0
nProjects: 4
shortest: \.repeat\d+
Features:

1: LIT|a literal character | 23.666666666666668
2: CG|a capture group | 1.3333333333333333
3: ADD|one-or-more repetition | 1.0
4: DEC|any of: 0123456789 | 0.6666666666666666
5: ANY|any non-newline char | 0.3333333333333333
6: KLE|zero-or-more repetition | 0.3333333333333333
7: NCCC|negated CCC | 0.3333333333333333
8: OR|logical or | 0.3333333333333333


0000 | 0002 | '\\.repeat\\d+'
0001 | 0001 | 'protected(.*)\\$'
0002 | 0001 | '\\.\\.\\. ([^#]+)#(\\d+) (add|edit|delete|integrate|branch|move/add|move/delete)'



cluster 84 stats:
nPatterns: 4.0
nProjects: 4
shortest: \.(anno|txt)$
Features:

1: LIT|a literal character | 13.0
2: CG|a capture group | 2.5
3: END|end-of-line | 1.75
4: ANY|any non-newline char | 1.25
5: OR|logical or | 1.0
6: KLE|zero-or-more repetition | 0.75
7: ADD|one-or-more repetition | 0.25
8: STR|start-of-line | 0.25


0000 | 0001 | '\\.(anno|txt)$'
0001 | 0001 | '.*(Rep|Sen). (.+)$'
0002 | 0001 | '^(join|order)\\((.*)\\)$'
0003 | 0001 | '.*((\\.textile$)|(\\.markdown$)|(\\.org$)|(\\.html$))'



cluster 85 stats:
nPatterns: 2.0
nProjects: 3
shortest: pam
Features:

1: LIT|a literal character | 4.0


0000 | 0002 | '&amp;'
0001 | 0001 | 'pam'



cluster 86 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^[#/;]
Features:

1: LIT|a literal character | 2.5
2: CCC|custom character class | 1.0
3: STR|start-of-line | 1.0
4: KLE|zero-or-more repetition | 0.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '^[#/;]'
0001 | 0001 | '^\\s*[#;]'



cluster 87 stats:
nPatterns: 2.0
nProjects: 3
shortest: \bcsc\b
Features:

1: LIT|a literal character | 3.0
2: WNW|word/non-word boundary | 1.5
3: CCC|custom character class | 0.5


0000 | 0002 | '\\bcsc\\b'
0001 | 0001 | '\\bc[cs]'



cluster 88 stats:
nPatterns: 2.0
nProjects: 3
shortest: [aeiou]
Features:

1: LIT|a literal character | 7.5
2: CCC|custom character class | 1.0


0000 | 0002 | '[aeiou]'
0001 | 0001 | '[aeouiAEOUI]'



cluster 89 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^(\s*)<.+> 
Features:

1: LIT|a literal character | 9.0
2: ADD|one-or-more repetition | 1.0
3: ANY|any non-newline char | 1.0
4: CG|a capture group | 1.0
5: KLE|zero-or-more repetition | 0.5
6: LZY|as few reps as possible | 0.5
7: OR|logical or | 0.5
8: STR|start-of-line | 0.5
9: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0002 | '^(\\s*)<.+> '
0001 | 0001 | '<br>(\\.\\.\\.|   ).+?</li>'



cluster 90 stats:
nPatterns: 2.0
nProjects: 3
shortest: ^(test|xen|kvm|vmware)$
Features:

1: LIT|a literal character | 17.0
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: OR|logical or | 1.0
5: CCC|custom character class | 0.5
6: STR|start-of-line | 0.5


0000 | 0002 | '[&?]requestPayment($|=|&)'
0001 | 0001 | '^(test|xen|kvm|vmware)$'



cluster 91 stats:
nPatterns: 2.0
nProjects: 3
shortest: .*lib(n?cursesw?)\.so.*
Features:

1: LIT|a literal character | 15.0
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: CG|a capture group | 1.5
5: QST|zero-or-one repetition | 1.0
6: LZY|as few reps as possible | 0.5


0000 | 0002 | '.*lib(n?cursesw?)\\.so.*'
0001 | 0001 | '=(.*?)SlAsHcOdEsTrInG(.*)'



cluster 92 stats:
nPatterns: 2.0
nProjects: 3
shortest: \.(js|java)(?:\.in)?$
Features:

1: LIT|a literal character | 11.5
2: CG|a capture group | 1.0
3: END|end-of-line | 1.0
4: NCG|group without capturing | 1.0
5: OR|logical or | 1.0
6: QST|zero-or-one repetition | 1.0


0000 | 0002 | '\\.(js|java)(?:\\.in)?$'
0001 | 0001 | '\\.(js|jsm|java)(?:\\.in)?$'



cluster 93 stats:
nPatterns: 2.0
nProjects: 3
shortest: Species
Features:

1: LIT|a literal character | 22.5
2: ADD|one-or-more repetition | 0.5
3: CCC|custom character class | 0.5
4: CG|a capture group | 0.5
5: NCCC|negated CCC | 0.5
6: OR|logical or | 0.5


0000 | 0002 | '[^%]+%testing[.](expect-failure|expect-success)'
0001 | 0001 | 'Species'



cluster 94 stats:
nPatterns: 3.0
nProjects: 3
shortest: id_.*=(\d+)
Features:

1: LIT|a literal character | 12.0
2: DEC|any of: 0123456789 | 1.6666666666666667
3: ADD|one-or-more repetition | 1.3333333333333333
4: ANY|any non-newline char | 1.0
5: CG|a capture group | 1.0
6: KLE|zero-or-more repetition | 0.6666666666666666


0000 | 0002 | '(\\d+):.*virtio\\d+-input.\\d'
0001 | 0001 | 'id_.*=(\\d+)'
0002 | 0001 | 'mk_individual_id_t=(\\d+)'



cluster 95 stats:
nPatterns: 4.0
nProjects: 3
shortest: tests\.py$
Features:

1: LIT|a literal character | 10.0
2: ANY|any non-newline char | 0.75
3: END|end-of-line | 0.75
4: KLE|zero-or-more repetition | 0.5
5: ADD|one-or-more repetition | 0.25
6: CG|a capture group | 0.25
7: WRD|[a-zA-Z0-9\_] | 0.25


0000 | 0001 | 'tests\\.py$'
0001 | 0001 | '\\w+\\_steps.rb'
0002 | 0001 | 'test_(.*)\\.js$'
0003 | 0001 | 'suppressions.*\\.txt$'



cluster 96 stats:
nPatterns: 3.0
nProjects: 3
shortest: <code>([^<]+)</code>
Features:

1: LIT|a literal character | 19.666666666666668
2: CG|a capture group | 1.0
3: ADD|one-or-more repetition | 0.6666666666666666
4: NCCC|negated CCC | 0.6666666666666666
5: ANY|any non-newline char | 0.3333333333333333
6: KLE|zero-or-more repetition | 0.3333333333333333
7: LZY|as few reps as possible | 0.3333333333333333


0000 | 0001 | '<code>([^<]+)</code>'
0001 | 0001 | '<studio>(.*?)</studio>'
0002 | 0001 | '<description>([^<]+)</description>'



cluster 97 stats:
nPatterns: 4.0
nProjects: 3
shortest: <map id="(.*?)"
Features:

1: LIT|a literal character | 6.5
2: ANY|any non-newline char | 1.0
3: KLE|zero-or-more repetition | 1.0
4: PNG|named capture group | 0.75
5: STR|start-of-line | 0.75
6: END|end-of-line | 0.5
7: CG|a capture group | 0.25
8: LZY|as few reps as possible | 0.25


0000 | 0002 | '<map id="(.*?)"'
0001 | 0001 | '^"(?P<data>.*)"$'
0002 | 0001 | '^#: (?P<data>.*)'
0003 | 0001 | '^#~ msgid "(?P<data>.*)"$'



cluster 98 stats:
nPatterns: 3.0
nProjects: 3
shortest: ^[ ]{0,3}:[ ]{1,3}(.*)$
Features:

1: LIT|a literal character | 5.333333333333333
2: CCC|custom character class | 2.3333333333333335
3: SNG|exactly n repetition | 2.0
4: RNG|chars within a range | 1.6666666666666667
5: DBB|$n\le x \le m$ repetition | 1.3333333333333333
6: CG|a capture group | 1.0
7: END|end-of-line | 0.6666666666666666
8: STR|start-of-line | 0.6666666666666666
9: ADD|one-or-more repetition | 0.3333333333333333
10: ANY|any non-newline char | 0.3333333333333333
11: KLE|zero-or-more repetition | 0.3333333333333333
12: NCG|group without capturing | 0.3333333333333333
13: OR|logical or | 0.3333333333333333


0000 | 0001 | '^[ ]{0,3}:[ ]{1,3}(.*)$'
0001 | 0001 | '(([0-9]{1,3}\\.){3}[0-9]{1,3})'
0002 | 0001 | '^(?:[A-Z]{1}\\.{1}|[A-Z]{1}\\.{1}[A-Z]{1})+$'



cluster 99 stats:
nPatterns: 4.0
nProjects: 3
shortest: /pygments/(\w+)\.css
Features:

1: LIT|a literal character | 28.5
2: ADD|one-or-more repetition | 2.25
3: WRD|[a-zA-Z0-9\_] | 1.75
4: CG|a capture group | 1.0
5: ANY|any non-newline char | 0.75
6: CCC|custom character class | 0.75
7: KLE|zero-or-more repetition | 0.5
8: NWRD|non-word chars | 0.5
9: DEC|any of: 0123456789 | 0.25
10: NCG|group without capturing | 0.25
11: OR|logical or | 0.25


0000 | 0001 | '/pygments/(\\w+)\\.css'
0001 | 0001 | '//\\w+\\.4chan\\.org/\\w+/src/'
0002 | 0001 | '//.\\.thumbs\\.4chan\\.org/\\w+/thumb/\\d+s\\.(?:jpg|gif|png|jpeg)'
0003 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'



cluster 100 stats:
nPatterns: 2.0
nProjects: 2
shortest: </p>
Features:

1: LIT|a literal character | 5.0


0000 | 0002 | '</p>'
0001 | 0001 | '<p><hr'



cluster 101 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^results
Features:

1: LIT|a literal character | 8.0
2: STR|start-of-line | 0.5


0000 | 0001 | '^results'
0001 | 0001 | 'wireless='



cluster 102 stats:
nPatterns: 2.0
nProjects: 2
shortest: \S{1,10}
Features:

1: LIT|a literal character | 2.0
2: DBB|$n\le x \le m$ repetition | 1.0
3: CCC|custom character class | 0.5
4: NWSP|any non-whitespace | 0.5


0000 | 0001 | '\\S{1,10}'
0001 | 0001 | '\x1b\\[[0]{0,1}m'



cluster 103 stats:
nPatterns: 2.0
nProjects: 2
shortest: </body
Features:

1: LIT|a literal character | 10.5
2: KLE|zero-or-more repetition | 0.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '</body'
0001 | 0001 | u'</tbody>\\s*<tbody>'



cluster 104 stats:
nPatterns: 2.0
nProjects: 2
shortest: \^headers\^$
Features:

1: LIT|a literal character | 8.5
2: END|end-of-line | 1.0
3: KLE|zero-or-more repetition | 0.5
4: STR|start-of-line | 0.5
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | '\\^headers\\^$'
0001 | 0001 | '^removed:\\s*$'



cluster 105 stats:
nPatterns: 2.0
nProjects: 2
shortest: tt(\d+)/$
Features:

1: LIT|a literal character | 6.5
2: DEC|any of: 0123456789 | 1.5
3: ADD|one-or-more repetition | 1.0
4: CG|a capture group | 1.0
5: ANY|any non-newline char | 0.5
6: END|end-of-line | 0.5


0000 | 0001 | u'tt(\\d+)/$'
0001 | 0001 | 'data3_(\\d)_\\d+.txt'



cluster 106 stats:
nPatterns: 2.0
nProjects: 2
shortest: Usable as:\s*$
Features:

1: LIT|a literal character | 14.0
2: END|end-of-line | 0.5
3: KLE|zero-or-more repetition | 0.5
4: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5


0000 | 0001 | 'Usable as:\\s*$'
0001 | 0001 | 'Passed all 0 tests'



cluster 107 stats:
nPatterns: 2.0
nProjects: 2
shortest: \A#!.*node.*$
Features:

1: LIT|a literal character | 7.5
2: ANY|any non-newline char | 2.0
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 1.0
5: STR|start-of-line | 1.0
6: NLKA|sequence doesn't follow  | 0.5


0000 | 0002 | '\\A#!.*node.*$'
0001 | 0002 | '\\A#!.*python(?!3).*$'



cluster 108 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^<Actions>(.+)$
Features:

1: LIT|a literal character | 7.0
2: ANY|any non-newline char | 2.0
3: ADD|one-or-more repetition | 1.5
4: CG|a capture group | 0.5
5: END|end-of-line | 0.5
6: KLE|zero-or-more repetition | 0.5
7: PNG|named capture group | 0.5
8: STR|start-of-line | 0.5


0000 | 0001 | '^<Actions>(.+)$'
0001 | 0001 | '<.+>(?P<content>.*)</.+>'



cluster 109 stats:
nPatterns: 2.0
nProjects: 2
shortest: amazon-affiliates""
Features:

1: LIT|a literal character | 17.5
2: RNG|chars within a range | 1.0
3: ADD|one-or-more repetition | 0.5
4: CCC|custom character class | 0.5
5: CG|a capture group | 0.5


0000 | 0001 | u'amazon-affiliates""'
0001 | 0001 | '(fasta_[a-z0-9]+\\.fasta)'



cluster 110 stats:
nPatterns: 2.0
nProjects: 2
shortest: ^new file
Features:

1: LIT|a literal character | 22.5
2: STR|start-of-line | 0.5


0000 | 0001 | '^new file'
0001 | 0001 | '/\\* Begin PBXFileReference section \\*/\n'



cluster 111 stats:
nPatterns: 3.0
nProjects: 2
shortest: ^.*RLELossless.*$
Features:

1: LIT|a literal character | 11.333333333333334
2: ANY|any non-newline char | 2.6666666666666665
3: KLE|zero-or-more repetition | 2.0
4: END|end-of-line | 0.6666666666666666
5: STR|start-of-line | 0.6666666666666666
6: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.6666666666666666


0000 | 0001 | '^.*RLELossless.*$'
0001 | 0001 | '^.*JPEGLossless.*$'
0002 | 0001 | '\\s*libssl.so.0.9.8\\s*'



cluster 112 stats:
nPatterns: 5.0
nProjects: 2
shortest: PEM_SERVER=
Features:

1: LIT|a literal character | 15.0


0000 | 0001 | 'PEM_SERVER='
0001 | 0001 | 'EMAIL_PROVIDER='
0002 | 0001 | 'REPLACEHEREDUDE'
0003 | 0001 | 'CONFIGEDITORHERE'
0004 | 0001 | 'DBAPI2_PLACEHOLDER'



cluster 113 stats:
nPatterns: 4.0
nProjects: 2
shortest: diff --git a
Features:

1: LIT|a literal character | 13.75
2: CG|a capture group | 1.0
3: ADD|one-or-more repetition | 0.75
4: ANY|any non-newline char | 0.75
5: KLE|zero-or-more repetition | 0.5
6: NWSP|any non-whitespace | 0.5
7: END|end-of-line | 0.25
8: LZY|as few reps as possible | 0.25
9: STR|start-of-line | 0.25


0000 | 0001 | 'diff --git a'
0001 | 0001 | '.+?(diff --git a)'
0002 | 0001 | 'diff --git .* b/(.*)\n'
0003 | 0001 | '^diff --git a/(\\S+) b/(\\S+)$'



cluster 114 stats:
nPatterns: 2.0
nProjects: 1
shortest: [#][\dA-F]{3}
Features:

1: LIT|a literal character | 3.0
2: CCC|custom character class | 2.0
3: DEC|any of: 0123456789 | 1.0
4: RNG|chars within a range | 1.0
5: SNG|exactly n repetition | 1.0


0000 | 0001 | '[#][\\dA-F]{3}'
0001 | 0001 | '[#][\\dA-F]{6}'



cluster 115 stats:
nPatterns: 2.0
nProjects: 1
shortest: guibg=#*(\w+)
Features:

1: LIT|a literal character | 7.0
2: ADD|one-or-more repetition | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: WRD|[a-zA-Z0-9\_] | 1.0


0000 | 0001 | 'guibg=#*(\\w+)'
0001 | 0001 | 'guifg=#*(\\w+)'



cluster 116 stats:
nPatterns: 2.0
nProjects: 1
shortest: Simple_1Of_1unk_svc
Features:

1: LIT|a literal character | 19.5


0000 | 0001 | 'Simple_1Of_1unk_svc'
0001 | 0001 | 'Simple_1Of_1unk_host'



cluster 117 stats:
nPatterns: 2.0
nProjects: 1
shortest: \bLCOV_EXCL_LINE\b
Features:

1: LIT|a literal character | 14.5
2: WNW|word/non-word boundary | 2.0


0000 | 0001 | '\\bLCOV_EXCL_LINE\\b'
0001 | 0001 | '\\bLCOV_EXCL_START\\b'



cluster 118 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^std::__debug::deque<.*>$
Features:

1: LIT|a literal character | 25.0
2: ANY|any non-newline char | 1.0
3: END|end-of-line | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^std::__debug::deque<.*>$'
0001 | 0001 | '^std::__debug::unordered_map<.*>$'



cluster 119 stats:
nPatterns: 2.0
nProjects: 1
shortest: ^GlueSiteUniqueID: (.*)
Features:

1: LIT|a literal character | 25.0
2: ANY|any non-newline char | 1.0
3: CG|a capture group | 1.0
4: KLE|zero-or-more repetition | 1.0
5: STR|start-of-line | 1.0


0000 | 0001 | '^GlueSiteUniqueID: (.*)'
0001 | 0001 | '^GlueForeignKey: GlueCEUniqueID=(.*):'



cluster 120 stats:
nPatterns: 2.0
nProjects: 1
shortest: (?!__init__)[0-9a-zA-Z_]*(\.py)?$
Features:

1: LIT|a literal character | 18.5
2: RNG|chars within a range | 3.0
3: QST|zero-or-one repetition | 1.5
4: CCC|custom character class | 1.0
5: CG|a capture group | 1.0
6: END|end-of-line | 1.0
7: KLE|zero-or-more repetition | 1.0
8: NLKA|sequence doesn't follow  | 1.0


0000 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'
0001 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'



