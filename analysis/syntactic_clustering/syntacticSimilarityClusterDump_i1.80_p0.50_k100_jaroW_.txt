Cluster stats:

nClusters: 24
TotalPatterns: 1407
totalnProjects: 736
suffix: _i1.80_p0.50_k100_jaroW_


cluster 0 stats:
nPatterns: 234.0
nProjects: 275
shortest: :<
Features:

1: LIT|a literal character | 14.346153846153847
2: CG|a capture group | 0.6794871794871795
3: KLE|zero-or-more repetition | 0.6709401709401709
4: ANY|any non-newline char | 0.6538461538461539
5: ADD|one-or-more repetition | 0.5982905982905983
6: LZY|as few reps as possible | 0.23504273504273504
7: CCC|custom character class | 0.2264957264957265
8: NCCC|negated CCC | 0.2222222222222222
9: DEC|any of: 0123456789 | 0.17094017094017094
10: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1623931623931624
11: RNG|chars within a range | 0.14102564102564102
12: QST|zero-or-one repetition | 0.12393162393162394
13: PNG|named capture group | 0.11965811965811966
14: END|end-of-line | 0.1111111111111111
15: WRD|[a-zA-Z0-9\_] | 0.1111111111111111
16: STR|start-of-line | 0.10256410256410256
17: OR|logical or | 0.0811965811965812
18: NCG|group without capturing | 0.05555555555555555
19: NWSP|any non-whitespace | 0.021367521367521368
20: NLKA|sequence doesn't follow  | 0.01282051282051282
21: NWRD|non-word chars | 0.008547008547008548
22: SNG|exactly n repetition | 0.008547008547008548
23: BKR|match the $i^{th}$ CG | 0.004273504273504274
24: ENDZ|absolute end of string | 0.004273504273504274
25: LWB|at least n repetition | 0.004273504273504274


0000 | 0057 | '<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'
0001 | 0024 | 'release_cmd_to_pool'
0002 | 0019 | '<[^>]*?>'
0003 | 0018 | 'url="([^"]+)"'
0004 | 0017 | 'Revision: (.+)'
0005 | 0013 | 'Key-'
0006 | 0013 | 'coding[:=]\\s*([-\\w_.]+)'
0007 | 0012 | '^name="(.*)"\\s+certificate="(.*)"\\s+private_key="(.*)"$'
0008 | 0010 | '<!ENTITY +(\\w+) +CDATA +"([^"]+)" +-- +((?:.|\n)+?) *-->'
0009 | 0008 | '(\\$\\((.*?)\\))'
0010 | 0008 | '\\{include\\s+file=.*?\\}'
0011 | 0007 | '<title>(.*?)</title>'
0012 | 0007 | '^columns .* are not unique$'
0013 | 0006 | '<root>([^<]*)</root>'
0014 | 0006 | 'Cookie\\:.+\\@([!-\xff]+).*?(.+\\@[!-\xff]+\\.txt)'
0015 | 0003 | ':<'
0016 | 0003 | ':month'
0017 | 0003 | 'coord ='
0018 | 0003 | 'Accelerate'
0019 | 0003 | '<key>.*?</key>'
0020 | 0003 | 'length (\\d*):'
0021 | 0003 | '([a-zA-Z0-9]*)$'
0022 | 0003 | '^[\'"](.*)[\'"]$'
0023 | 0003 | 'unit(?:2|test2?/)'
0024 | 0003 | '--test-config=(.*)$'
0025 | 0003 | '<path\\[(\\d+)\\]>(.*)'
0026 | 0003 | "Success: created profile .* at '([^']+)'"
0027 | 0002 | '</p>'
0028 | 0002 | '&amp;'
0029 | 0002 | 'biltxt'
0030 | 0002 | '<![^>]*>'
0031 | 0002 | '</?(?:b|em|i)>'
0032 | 0002 | '<<<(-?\\d+?)>>>'
0033 | 0002 | '<map id="(.*?)"'
0034 | 0002 | '<param([^<>]+)>'
0035 | 0002 | "title:'([^']+?)'"
0036 | 0002 | 'Fennec/([\\d.]+)'
0037 | 0002 | 'image:\\s+(\\S+)'
0038 | 0002 | 'timestamp="[^"]+"'
0039 | 0002 | 'Revision: ([0-9]+)'
0040 | 0002 | '@\\w+( [^{}:\n]+)?:'
0041 | 0002 | 'from django.*import'
0042 | 0002 | 'projects/([^/]+)/?$'
0043 | 0002 | '(Saving to:|\\s*\\d+K)'
0044 | 0002 | 'MemFree:\\s+(.\\d+)\\s+(\\w+)'
0045 | 0002 | 'the LaTeX files are in (.*)\\.'
0046 | 0002 | '<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'
0047 | 0002 | '@import url\\((?P<filename>.*)\\)'
0048 | 0002 | 'coding[:=]\\s*(?P<encoding>[-\\w.]+)'
0049 | 0002 | '<a href="function\\..*?\\.html">(.*?)</a>'
0050 | 0002 | '<span id=short-desc-content>([^<]*)</span>'
0051 | 0002 | '<td style="text-align: right;">[0-9]{1,}</td>'
0052 | 0002 | '<img class=thumbnail-img (?:.* )?src=(http.*)>'
0053 | 0002 | '<meta name="video_height" content="([0-9]+)" />'
0054 | 0002 | '^(Mozilla.*(Gecko|KHTML|MSIE|Presto|Trident)|Opera).*$'
0055 | 0002 | "<div class='lyricbox'><div class='rtMatcher'>.*?</div>(.*?)<!--"
0056 | 0002 | '# StopWatch ([\\w]+) total/cumulative duration ([0-9.]+). Samples: ([0-9]+)'
0057 | 0001 | '<='
0058 | 0001 | '>='
0059 | 0001 | 'pam'
0060 | 0001 | 'st_'
0061 | 0001 | '.git'
0062 | 0001 | 'Game'
0063 | 0001 | 'PID:'
0064 | 0001 | 'SUNW'
0065 | 0001 | 'Town'
0066 | 0001 | 'BOOST'
0067 | 0001 | 'Topic'
0068 | 0001 | 'bvals'
0069 | 0001 | 'facet'
0070 | 0001 | 'layer'
0071 | 0001 | 'tree='
0072 | 0001 | 'vcard'
0073 | 0001 | '</body'
0074 | 0001 | '<p><hr'
0075 | 0001 | 'Totaal'
0076 | 0001 | 'state='
0077 | 0001 | '.esour.*'
0078 | 0001 | 'Address:'
0079 | 0001 | 'attack=5'
0080 | 0001 | "arch='.*'"
0081 | 0001 | 'common.py'
0082 | 0001 | 'template='
0083 | 0001 | 'wireless='
0084 | 0001 | '<tr valign'
0085 | 0001 | 'Privilege:'
0086 | 0001 | 'Run number'
0087 | 0001 | '^Note :.*$'
0088 | 0001 | 'wl_apsta.*'
0089 | 0001 | '/testing/.*'
0090 | 0001 | '<[Bb][Rr]/>'
0091 | 0001 | '<div.*?>\\n'
0092 | 0001 | 'PEM_SERVER='
0093 | 0001 | '^timeout.*/'
0094 | 0001 | '_CONTACT\\w'
0095 | 0001 | 'externalip='
0096 | 0001 | 'method=post'
0097 | 0001 | 'smtp_relay='
0098 | 0001 | 'tests\\.py$'
0099 | 0001 | 'w[0-9]*[nN]'
0100 | 0001 | '{([^}^{]*)}'
0101 | 0001 | '([$]{[^}]*})'
0102 | 0001 | '<(?!!)[^>]+>'
0103 | 0001 | '<[^!][^>]*?>'
0104 | 0001 | '<[^/?!]?\\w+'
0105 | 0001 | 'href="(.*?)"'
0106 | 0001 | 'internal log'
0107 | 0001 | ' at -?0x[^>]+'
0108 | 0001 | 'Href="(.*?)">'
0109 | 0001 | '^subject=\\s*'
0110 | 0001 | '#\\{([^}]*)\\}'
0111 | 0001 | '<url>.*?</url>'
0112 | 0001 | 'GATEWAY=(\\S+)'
0113 | 0001 | 'Model:\\s+(.+)'
0114 | 0001 | 'Present|Absent'
0115 | 0001 | '^removed:\\s*$'
0116 | 0001 | 'guibg=#*(\\w+)'
0117 | 0001 | 'guifg=#*(\\w+)'
0118 | 0001 | 'total = [0-9]+'
0119 | 0001 | 'N=10: ([.0-9]+)'
0120 | 0001 | 'Usable as:\\s*$'
0121 | 0001 | 'Warning\\\\?:.*'
0122 | 0001 | 'name\\s+"(.*)",'
0123 | 0001 | 'test_(.*)\\.js$'
0124 | 0001 | 'width="(\\d+?)"'
0125 | 0001 | '{{.+?\\|(.+?)}}'
0126 | 0001 | "'\\.\\./([^']*)'"
0127 | 0001 | '"title":"(.*?)",'
0128 | 0001 | '# TBPL WARNING #'
0129 | 0001 | '(0|[1-9][0-9]*):'
0130 | 0001 | '<!--[^>]*-->|<!>'
0131 | 0001 | 'Name=([\\w\\.]+)'
0132 | 0001 | 'UNSEEN\\s+(\\d+)'
0133 | 0001 | '^"(?P<data>.*)"$'
0134 | 0001 | '^#: (?P<data>.*)'
0135 | 0001 | '^platform/(.*?)/'
0136 | 0001 | 'class (\\w+?)\\('
0137 | 0001 | 'mFocusedApp(.+)/'
0138 | 0001 | 'openssl-([^<]+)<'
0139 | 0001 | 'protected(.*)\\$'
0140 | 0001 | u'/data[^ ]*/hphp'
0141 | 0001 | '<(?!/?TEXT)[^>]+>'
0142 | 0001 | 'LawText1">(.*?)</'
0143 | 0001 | '<link href="(.*?)"'
0144 | 0001 | 'SUBDATASET_(\\d+)_'
0145 | 0001 | 'Underfull.*badness'
0146 | 0001 | '<h1[^>]*>(.+?)</h1>'
0147 | 0001 | 'gene_id \\"(.*?)\\"'
0148 | 0001 | 'power_(.*).template'
0149 | 0001 | 'typedef (\\S+) (.*)'
0150 | 0001 | '/vote/(up|down)/(.*)'
0151 | 0001 | '<code>([^<]+)</code>'
0152 | 0001 | '<script .*?</script>'
0153 | 0001 | 'Mobile; rv:([\\d.]+)'
0154 | 0001 | 'User Serial:([0-9]+)'
0155 | 0001 | '^START TIME:\\s(.*)$'
0156 | 0001 | 'data3_(\\d)_\\d+.txt'
0157 | 0001 | u'</tbody>\\s*<tbody>'
0158 | 0001 | u'amazon-affiliates""'
0159 | 0001 | '<!-- REPORTBUGCOL -->'
0160 | 0001 | '<pre><a name="foo-1">'
0161 | 0001 | '<pre><a name="foo-5">'
0162 | 0001 | '\\(applications/\\(.*'
0163 | 0001 | '^%include\\s"([^"]+)"'
0164 | 0001 | '^file\\:\\/\\/[^\\?]*'
0165 | 0001 | 'suppressions.*\\.txt$'
0166 | 0001 | '(<[^<]*snum=)([^">]+)>'
0167 | 0001 | '/(?P<tenant_id>.*?)/.*'
0168 | 0001 | '/pygments/(\\w+)\\.css'
0169 | 0001 | '<TITLE>([^<]*)</TITLE>'
0170 | 0001 | '<studio>(.*?)</studio>'
0171 | 0001 | 'Cert\\s+\\d+:\\s+(.*)$'
0172 | 0001 | 'REMARK   2 RESOLUTION.'
0173 | 0001 | 'action="[\\w\\.\\-/]*"'
0174 | 0001 | 'exampleLocalVar.*abcde'
0175 | 0001 | '<!-- SUMMARYENDHEAD -->'
0176 | 0001 | '<script.*?>.*?</script>'
0177 | 0001 | 'Ignore tracebacks: (.*)'
0178 | 0001 | '^GlueSiteUniqueID: (.*)'
0179 | 0001 | 'var-bind=[\'"](.*)["\']'
0180 | 0001 | '/posters/archive/main/.*'
0181 | 0001 | '<.+>(?P<content>.*)</.+>'
0182 | 0001 | '<WebEnv>([^>]+)</WebEnv>'
0183 | 0001 | '^(join|order)\\((.*)\\)$'
0184 | 0001 | '^queryCid(\\(.+\\))\\s*$'
0185 | 0001 | 'affils.ast.\\d{8}_\\d{4}'
0186 | 0001 | '<([\\w ]+(,\\s*[\\w]+)+)>'
0187 | 0001 | '<p>\\.notes:\\s?(.*?)</p>'
0188 | 0001 | '<tr><td bgcolor="#BBBBBB"'
0189 | 0001 | 'Job <(\\d+)> is not found'
0190 | 0001 | '\\s+\\[(?P<section>.*)\\]'
0191 | 0001 | '^#~ msgid "(?P<data>.*)"$'
0192 | 0001 | '^GNU gdb [^\\d]*(\\d+)\\.'
0193 | 0001 | '^nic\\.\\d+\\.(.*)\\.\\d+$'
0194 | 0001 | '<br>(\\.\\.\\.|   ).+?</li>'
0195 | 0001 | 'Starting glance-[a-z]+ with'
0196 | 0001 | '\\<(\\w+?)\\>\\s*\\</\\1\\>'
0197 | 0001 | 'rgba?\\(([\\d, \\%\\.]+)\\)'
0198 | 0001 | '<span class="c_1">.*?</span>'
0199 | 0001 | 'TX\\s+bytes:?\\s*(?P<c>\\d+)'
0200 | 0001 | 'Reading specs from (.*)/specs'
0201 | 0001 | '/changeset(?:/([^/]+)(/.*)?)?$'
0202 | 0001 | '(<h5><a name="?akas"?.*</table>)'
0203 | 0001 | '<h5>also known as:</h5>.*?</div>'
0204 | 0001 | '^"I\'m fine" \\(es to en, .*\\)$'
0205 | 0001 | 'id="__VIEWSTATE" value="([^"]*)"'
0206 | 0001 | '<FRAME SRC="(.*?)" NAME="CONTENT"'
0207 | 0001 | '<table id="emuleFile">.*?</table>'
0208 | 0001 | ':ext:([^@]+@)?(?P<hostname>[^:/]+)'
0209 | 0001 | '<description>([^<]+)</description>'
0210 | 0001 | '<img.*?src="(?!http://)(.*?)".*/?>'
0211 | 0001 | 'http://([^/:]+)(?::(\\d+))?(/.*)?$'
0212 | 0001 | '<p>Raw output: <a href="(.*)">(.*)</a>'
0213 | 0001 | '<em class="loadnum"[^<>]*>([^<>]*)</em>'
0214 | 0001 | '<div class="context" id="(?P<id>[^"]+)">'
0215 | 0001 | 'About\\((.*)\\).should_include\\((.*)\\)'
0216 | 0001 | '/\\* Begin PBXFileReference section \\*/\n'
0217 | 0001 | 'In \\[\\{\\\\color\\{incolor\\}(.*)\\}\\]:'
0218 | 0001 | 'Mozilla (Firefox|Iceweasel) ((\\d+)\\.\\S*)'
0219 | 0001 | u'<a href="(.*?)" class="historylink">History</a>'
0220 | 0001 | '^R(?P<reps>\\d+)?/(?P<start>[^P][^/]*)/(?P<intv>P.+)$'
0221 | 0001 | '(<pre.+?>(<code>)?\\s?!(\\w+?)\\n(.*?)(</code>)?</pre>)'
0222 | 0001 | '<p.*?begin="(...........)" end="(...........)".*?">(.*?)</p>'
0223 | 0001 | "pretty-date'>on ([\\w]+ [\\d]+, [\\d]+ \\d+:\\d+)</abbr></h2>"
0224 | 0001 | '==[0-9]+==\\s*[#0-9]+\\s*([0-9A-Fa-fx]+):(?:[^ ]* )*([^ :\n]+)'
0225 | 0001 | '\\[\\[(?P<t>[^\\]]*?) +(?P<k>\\S+) +(?P<p>left|right|center)\\]\\]'
0226 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)\\W*[/-]+\\W*([\\w ]+)</a>'
0227 | 0001 | 'pip \\d(\\.[\\d])+(\\.(pre|post)\\d+)? from (.*) \\(python \\d(.[\\d])+\\)$'
0228 | 0001 | '<COREF\\s+[^>]*?ID="(?P<id>\\w+)"(\\s+TYPE="(?P<type>\\w+)")?(\\s+REF="(?P<ref>\\w+)")?'
0229 | 0001 | '\\A(?P<head>.*?)(?P<escape>\\\\*)(?P<symbol>\\$\\{(?P<name>[A-z_]\\w*)\\})(?P<tail>.*)\\Z'
0230 | 0001 | '<key>system.privilege.taskport</key>\\s*\n\\s*<dict>\n\\s*<key>allow-root</key>\n\\s*(<[^>]+>)'
0231 | 0001 | '^v(?P<ver>\\d+(?:\\.\\d+)+(?:(?:[abc]|rc)\\d+(?:\\.\\d+)*)?)-(?P<commits>\\d+)-g(?P<sha>[\\da-f]+)$'
0232 | 0001 | '<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>The status of this EDM is (CLOSED|SUSPENDED).&nbsp;&nbsp;Reason: (.*?).</B></font>'
0233 | 0001 | '<TD>(?:<font face="arial,helvetica" size=2>|<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>)\\s*(.*?)(?:</font>|</B></font></FONT>)</TD>'



cluster 1 stats:
nPatterns: 192.0
nProjects: 261
shortest: /\*
Features:

1: LIT|a literal character | 8.859375
2: KLE|zero-or-more repetition | 2.4322916666666665
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.453125
4: CG|a capture group | 1.4114583333333333
5: ADD|one-or-more repetition | 0.8385416666666666
6: ANY|any non-newline char | 0.7447916666666666
7: CCC|custom character class | 0.671875
8: RNG|chars within a range | 0.3802083333333333
9: NCCC|negated CCC | 0.359375
10: STR|start-of-line | 0.328125
11: DEC|any of: 0123456789 | 0.3125
12: END|end-of-line | 0.2604166666666667
13: QST|zero-or-one repetition | 0.2604166666666667
14: OR|logical or | 0.20833333333333334
15: LZY|as few reps as possible | 0.18229166666666666
16: WRD|[a-zA-Z0-9\_] | 0.171875
17: NWSP|any non-whitespace | 0.11458333333333333
18: NCG|group without capturing | 0.109375
19: PNG|named capture group | 0.10416666666666667
20: NLKA|sequence doesn't follow  | 0.020833333333333332
21: DBB|$n\le x \le m$ repetition | 0.010416666666666666
22: SNG|exactly n repetition | 0.010416666666666666
23: WNW|word/non-word boundary | 0.010416666666666666
24: BKR|match the $i^{th}$ CG | 0.005208333333333333
25: LKB|matching sequence precedes | 0.005208333333333333


0000 | 0054 | '\\s*,\\s*'
0001 | 0041 | '^[ ]*(#.*)?$'
0002 | 0028 | '^<\\?.*encoding=[\'"](.*?)[\'"].*\\?>'
0003 | 0019 | '/\\*'
0004 | 0017 | '\\s*#?\\s*$'
0005 | 0017 | '([.\\w-]+)\\s*(.*)$'
0006 | 0016 | 'hg\\s*pull\\s*(.*)\\s*'
0007 | 0015 | '^\\s*\\n'
0008 | 0015 | '^\\s*=\\s*([^\\s;,]*)'
0009 | 0013 | '^(\\s*)(\\w*)'
0010 | 0010 | '/[*] #undef ([A-Z][A-Za-z0-9_]+) [*]/\n'
0011 | 0010 | '^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)[\t ]+'
0012 | 0010 | '^[ \\t]*(def|class)[ \\t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \\t]*[:\\(]'
0013 | 0009 | '\\s*([^: ]*)\\s*:(.*)'
0014 | 0009 | '^def\\s*(\\w+)\\s*=(.*)$'
0015 | 0009 | '\\s*def\\s+(p_[a-zA-Z_0-9]*)\\('
0016 | 0009 | '(function\\b[^(]*)\\((.*)\\)\\{$'
0017 | 0009 | '^\\$([_a-zA-Z]\\w*|{[_a-zA-Z]\\w*})$'
0018 | 0008 | '^([^:]*): *(.*)'
0019 | 0008 | '\\{%\\s*(block|extends)'
0020 | 0008 | '[ \t]*([A-Z0-9a-z_]+)[ \t]*=[ \t]*([-0-9]+)[, \t]*'
0021 | 0007 | '^([^@]*@)?([^:]*)(:.*)?'
0022 | 0007 | '^[ ]{4,7}((\\d+\\.)|[*+-])[ ].*'
0023 | 0006 | '\\s*>$'
0024 | 0006 | '@(\\w*)(.*)'
0025 | 0006 | '^\\s*\\((.*)\\)\\s*$'
0026 | 0006 | 'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0027 | 0006 | '^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$'
0028 | 0006 | '\\([^()]*\\b(?:[\\w:]|<[^()]*>)+(\\s?&|&\\s?)\\w+'
0029 | 0006 | '("(?:[^"\\\\]*(?:\\\\.[^"\\\\]*)*)"|\'(?:[^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|[^\\s]+)'
0030 | 0005 | '/\\*\\*'
0031 | 0005 | '^%[%!\\w]([^:]*)[ \\t]*$'
0032 | 0005 | '([^*{}\\s]@|[^*{}@\\s]|\\*(?!/))+'
0033 | 0005 | '([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[([^\\]]+)\\]?'
0034 | 0004 | '.*@.*\\..*'
0035 | 0004 | '\\s*# SOURCE LINE (\\d+)'
0036 | 0004 | u'url\\s*\\(\\s*[^#\\s][^)]+?\\)'
0037 | 0004 | u'^\\s*([-\\w]+\\s*:[^:;]*(;\\s*|$))*$'
0038 | 0004 | '#\\{?macro\\}?\\(.*?\\).*?#\\{?end\\}?'
0039 | 0004 | '^<\\?xml.*?encoding=["\\\']*(.+?)["\\\'>]'
0040 | 0003 | u'\\w*'
0041 | 0003 | '\\\\*\\#'
0042 | 0003 | "(''')\\s*$"
0043 | 0003 | '\\*\\s[^:]+:'
0044 | 0003 | u'<(/?)\\s*b\\s*>'
0045 | 0003 | '^[+/0-9A-Za-z]*=*$'
0046 | 0003 | '(\\s*\\=)|(\\s*\\:)'
0047 | 0003 | '^(.*)\\[(.*)\\](.*)$'
0048 | 0003 | '^(\\s*)()(\\S+)(.*$)'
0049 | 0003 | '\\s*\\#\\s*include\\s+<cxxtest/'
0050 | 0003 | '(?:\\s*|((?:\\\\\\\\)+))\\\\\\n\\s*'
0051 | 0003 | 'label(\\s*)=(\\s*)"\\s%tmp(.\\w*)*(\\s*)"'
0052 | 0003 | '^@@ -([0-9]*),([0-9]*) \\+([0-9]*),([0-9]*) @@'
0053 | 0003 | '(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)'
0054 | 0003 | '^\\s*#\\s*define\\s+OPENSSL_VERSION_NUMBER\\s+(0x[0-9a-fA-F]+)'
0055 | 0002 | '(.*//.*?/)'
0056 | 0002 | '\\s*\\[.*$'
0057 | 0002 | '^\\s*\\*+/'
0058 | 0002 | '(!\\S*)(.*)'
0059 | 0002 | '\\s*\\{\\s*'
0060 | 0002 | u'\\s*,?\\s*'
0061 | 0002 | ':\\s*(#.*)?$'
0062 | 0002 | '^\\s*//\\s*$'
0063 | 0002 | '->\\s*(\\S+)$'
0064 | 0002 | '\\A#!.*node.*$'
0065 | 0002 | '\\s*\n\\s*\n\\s*'
0066 | 0002 | 'tag:.*\\[(.*)\\]'
0067 | 0002 | '^\\s*@([a-zA-Z]+)'
0068 | 0002 | '\\s+|(?:\\s*,\\s*)'
0069 | 0002 | ':|\\*|\\?|"|<|>|\\|'
0070 | 0002 | '@@VERSION>(.*)@@(.*)'
0071 | 0002 | '\\s*modtime:\\s*(.*)'
0072 | 0002 | '^(.*)\\s*<(.*)>\\s*$'
0073 | 0002 | '^\\s*(>>>|...) (.*)$'
0074 | 0002 | '\\s*#*\\s*pylint:(.*)'
0075 | 0002 | '^(\\w+)\\s*=\\s*(.+)$'
0076 | 0002 | '\\[tag:\\s*([\\S]+)\\s*]'
0077 | 0002 | 'http://([^/]+)(/\\S*)\\s*'
0078 | 0002 | '^\\s*(if|try|elif|while|for)'
0079 | 0002 | '^\\s+:template:\\s*(.*?)\\s*$'
0080 | 0002 | 'range\\([ ]*([-]?\\d+|n).*\\)'
0081 | 0002 | '(([umsg]asser(t|ted))) *\\(( *)(\\d+)'
0082 | 0002 | 'fail:(\\d+).*?fail:(\\d+).*fail:(\\d+)'
0083 | 0002 | '#\\s*-\\*-\\s+coding:\\s+(\\w+)\\s+-\\*-'
0084 | 0002 | '\\s*([^\\s\\(\\)"\\\'=,\\[\\]/\\?]+)\\s*'
0085 | 0002 | '^(..[^\\(:]+)?[\\(:](\\d+)[\\):]:?\\s*(.*)'
0086 | 0002 | '(?:([\\w ]+) ([\\w.]+) .*\\[.* ([\\d.]+)\\])'
0087 | 0002 | '^\\s*@return\\s+(?P<type>\\w+)(?:\\s+(?P<doc>.*))?'
0088 | 0002 | '(\\d+ bytes).*?([\\d\\.]+ s).*?([\\d\\.]+ [KkMmGgTt])B/s'
0089 | 0002 | '\\s*#define\\s+([a-zA-Z][a-zA-Z_0-9]*)\\s+([a-zA-Z_0-9]+)'
0090 | 0002 | '^\\s*(>>> )?(\\.\\.\\. )?raise(\\s+(\\\'|\\")|\\s*(\\(\\s*)+(\\\'|\\"))'
0091 | 0002 | '^((?P<retval>[^=]+?)\\s*=|class)?\\s*(?P<head>[\\w\\.]+\\s?\\(.*?\\))\\s*(?P<sep>[:<>=-]*)\\s*(?P<tail>.*)$'
0092 | 0001 | '[*,]+'
0093 | 0001 | '\\/.*'
0094 | 0001 | '\\d*$'
0095 | 0001 | '\\).*$'
0096 | 0001 | '\\s*(;)'
0097 | 0001 | '^\\s*[#;]'
0098 | 0001 | '\\s*(<!>=)'
0099 | 0001 | '[ \\*]*(.+)'
0100 | 0001 | '\\A( *\\n)+'
0101 | 0001 | '\\s*(\\n|$)'
0102 | 0001 | '\\s*<p>\\s*'
0103 | 0001 | '([^:]*):(.*)'
0104 | 0001 | '======+\\s*$'
0105 | 0001 | '^\\s*##(.*)$'
0106 | 0001 | '^([#*]+)\\s.*'
0107 | 0001 | '^\\s*(\\s?>)+'
0108 | 0001 | '\\s*!important'
0109 | 0001 | '\\s*\\(\\s*\\('
0110 | 0001 | '(\\S+):\\s*(.*)'
0111 | 0001 | '^(<[^>]*/>)\\s*'
0112 | 0001 | '([^*]+)\\*(\\d+)'
0113 | 0001 | '.*(\\d).*(\\d).*'
0114 | 0001 | 'http://[^/]*(.*)'
0115 | 0001 | '([1-9][0-9]*)*(.*)'
0116 | 0001 | '/[ ]*[\\d.]+[ ]*kg'
0117 | 0001 | '\\s*(?P<a>,|:)\\s*'
0118 | 0001 | '\\s*([a-f0-9]+):.*'
0119 | 0001 | '^\\* (.*): (.*)\n$'
0120 | 0001 | '(\\S+)([ \t]*?)(.*)'
0121 | 0001 | '(\\\\.|[^#])*(#.*)?'
0122 | 0001 | '^#wal_level\\s*=.*$'
0123 | 0001 | '(?<=\\()\\w*\\,?\\s*'
0124 | 0001 | 'MINOR\\s*=\\s*(\\d+)'
0125 | 0001 | 'filename: \\s*(.*)\n'
0126 | 0001 | '<([\\w]*)=([, \\w]*)>'
0127 | 0001 | '[ \\t]*\\n([^\\r\\n])'
0128 | 0001 | '##\\s*(\\S+)\\s+(\\S*)'
0129 | 0001 | '^([a-zA-Z0-9_]*) *=.*$'
0130 | 0001 | 'diff --git .* b/(.*)\n'
0131 | 0001 | '\\s*libssl.so.0.9.8\\s*'
0132 | 0001 | '^.*<\\s*html(\\s*|>).*$'
0133 | 0001 | '("[^"]*?")|(\'[^\']*?\')'
0134 | 0001 | '\\s*(\\S+)\\s+/(.*)/\\s*$'
0135 | 0001 | "^(FFLAGS\\s*=').*-m64 (.*)"
0136 | 0001 | '([a-zA-Z-]+)\\s*\\((.*)\\)'
0137 | 0001 | '(\\s*configuration:)(.*)\n'
0138 | 0001 | '<s(?: [^>]*){0,1}>(.*?)</s>'
0139 | 0001 | '^\\s*Version\\s*:\\s*(\\S+)'
0140 | 0001 | '^(.*:.*/jobmanager-.*?)-(.*)'
0141 | 0001 | '__version__\\s*=\\s*(.+?\\n)'
0142 | 0001 | '(\\s)*File "(.*?)", line \\d.+'
0143 | 0001 | 'AC_INIT[(][^,]*,\\s+([^)]*)[)]'
0144 | 0001 | '[^\\(\\)]*\\((.*?)\\)[^\\(\\)]'
0145 | 0001 | '\\-\\s*\\[\\[(?P<t>\\S+)\\]\\]'
0146 | 0001 | '^\\+.*VTK_LEGACY\\((.*)\\).*\n'
0147 | 0001 | '<\\s*script.*?<\\s*/script\\s*>'
0148 | 0001 | 'from\\s*(.*?)\\s*import\\s*(.+)'
0149 | 0001 | '\\[\\[([^]|[:]*)\\|([^][]*)\\]\\]'
0150 | 0001 | '(#\trenamed:\\s+)(.*?)\\s->\\s(.*)'
0151 | 0001 | '(\\S+)\\s*[.]\\s*type\\s*[(]\\s*[)]'
0152 | 0001 | '(\\S+\\s*)[.]shape\\s*=[^=]\\s*(.+)'
0153 | 0001 | '(\\s*)([A-F0-9]*) /\\* ([^ ]+) \\*/'
0154 | 0001 | '<br />\\s*([^<]+)<br />\\s*([^<]+)<'
0155 | 0001 | "(\\\\*)(['`:*~\\\\[\\]{}@\\$+\\-.#])"
0156 | 0001 | '^\\s*DATS_FREE_DISKS\\s*=(.*\\S)\\s*$'
0157 | 0001 | 'mass .*?(\\d+\\.\\d+).*?(\\d+\\.\\d+)'
0158 | 0001 | '<\\s*(\\w[\\w\\d]*)\\s*=\\s*(.*?)\\s*>'
0159 | 0001 | '^\\t*INFO\\t----\\t----(.*)\\t[^\\t]*$'
0160 | 0001 | "\\s*SELECT\\s+.+?\\s+FROM\\s+[']?(\\w+)"
0161 | 0001 | '(^0x[\\da-f]{8})\\s*=\\s*([\\da-f]{32})'
0162 | 0001 | '^(\\w+):\\s.*<(.*)>\\smtu\\s(\\d+)\\s.*'
0163 | 0001 | '--?\\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\\s]+'
0164 | 0001 | '[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*'
0165 | 0001 | 'PACKAGE_VERSION *= *[\'"]([0-9.]+)["\'].*'
0166 | 0001 | '^\\s*([^\\s]+)(?:(?:\\s*=\\s*)|\\s+)(.+)$'
0167 | 0001 | '(\\S+\\s*[(].+),\\s*savespace\\s*=.+\\s*[)]'
0168 | 0001 | '\\s*(([\\\'"])(.*?[^\\\\])\\2)\\s*([},=]|$)'
0169 | 0001 | '\\s*bytes\\s*=\\s*(\\d+)\\s*-\\s*(\\d+)\\s*'
0170 | 0001 | '^(\\s*(\\[\\[image((\\(.*\\))|())\\]\\])\\s*)+$'
0171 | 0001 | 'c\\([\\d.,\\s-]*,\\s*(?P<final>-?[0-9.]+)\n?\\)'
0172 | 0001 | '\\s|=|,|:|\\((?!.*\\))|\\[(?!.*\\])|\\{(?!.*\\})'
0173 | 0001 | 'version\\s*=\\s*[\'"](?P<version>[\\d\\.]+)[\'"]'
0174 | 0001 | '([\\-]?\\d*)\\s*([A-Za-z]+([\\-@]\\d*[A-Za-z]+)?)'
0175 | 0001 | '^(?P<_1>[^|]*)\\|(?P<_2>[^|]*)(\\|(?P<_3>[^|]*))?$'
0176 | 0001 | '#\\s*define\\s+(?P<key>\\w+)(?P<value>\\s+[\\w"]*)?'
0177 | 0001 | '(.*)@(.*?)(?: -> (file\\:\\/\\/\\/\\S*))?\\:(\\d*)$'
0178 | 0001 | '^\\s*\\[(?P<state>!?!?)(?P<section>[^\\]]*)\\]\\s*$'
0179 | 0001 | 'MARIONETTE_CONTEXT(\\s*)=(\\s*)[\'|\\"](.*?)[\'|\\"];'
0180 | 0001 | '[-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?'
0181 | 0001 | '(--(?P<key>\\S*)[=](?P<value>\\S*))|(--(?P<option>\\S*))'
0182 | 0001 | '([-+]?(?:\\d+(?:\\.\\d*)?|\\d*\\.\\d+))[dD]((?:[-+]?\\d+)?)'
0183 | 0001 | '^\\s*class\\s+([a-zA-Z_]\\w*)\\s*(\\([\\s\\w.,]*\\))?:\\s*$'
0184 | 0001 | '^\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+\\d\\.*\\d*\\s+cmyk'
0185 | 0001 | '^I/(stderr)\\s*\\(\\s*\\d+\\):\\s*((info|warning|error|debug): .*)$'
0186 | 0001 | 'Stream\\s*(.*?)[,|:|\\(|\\[].*?\\s*Video:\\s*(.*?),\\s*(\\d*)x(\\d*)'
0187 | 0001 | '\\s*(((if|while)\\s*\\(|else\\s*|else\\s+if\\s*\\(|for\\s*\\(.*\\))[^{;]*)'
0188 | 0001 | '[^\\t]*\\t([^\\t]*)\\t([^\\t]*)\\t[^\\t]*\\t[^\\t]*\\t([^\\t]*)\\t[^\\t]*\\n'
0189 | 0001 | '\\s*//\\s*#(include|define|if|ifdef|elif|ifndef|endif|else)(?:\\s+(.*)\\s*$|($))'
0190 | 0001 | '^\\s*vtk(Abstract)?Type(Revision)*Macro\\s*\\(\\s*(vtk[^ ,]+)\\s*,\\s*(vtk[^ \\)]+)\\s*\\)\\s*'
0191 | 0001 | '^\\s*([A-Za-z0-9()> -]+)\\s+([0-9]+),([0-9A-Fx]+)\\s+Value Representation = ([A-Z][A-Z]), Multiplicity = ([0-9n-]+)(.*)\\s*$'



cluster 2 stats:
nPatterns: 146.0
nProjects: 246
shortest: ^[#/;]
Features:

1: LIT|a literal character | 10.835616438356164
2: RNG|chars within a range | 3.280821917808219
3: CCC|custom character class | 1.8835616438356164
4: CG|a capture group | 1.0616438356164384
5: ADD|one-or-more repetition | 0.863013698630137
6: END|end-of-line | 0.4657534246575342
7: STR|start-of-line | 0.4657534246575342
8: SNG|exactly n repetition | 0.3561643835616438
9: KLE|zero-or-more repetition | 0.3219178082191781
10: NCCC|negated CCC | 0.23972602739726026
11: QST|zero-or-one repetition | 0.23972602739726026
12: OR|logical or | 0.21232876712328766
13: ANY|any non-newline char | 0.1506849315068493
14: DBB|$n\le x \le m$ repetition | 0.13013698630136986
15: DEC|any of: 0123456789 | 0.13013698630136986
16: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.10273972602739725
17: NCG|group without capturing | 0.0958904109589041
18: WRD|[a-zA-Z0-9\_] | 0.0410958904109589
19: LWB|at least n repetition | 0.03424657534246575
20: LZY|as few reps as possible | 0.03424657534246575
21: WNW|word/non-word boundary | 0.0273972602739726
22: NWSP|any non-whitespace | 0.02054794520547945
23: NLKA|sequence doesn't follow  | 0.0136986301369863
24: BKR|match the $i^{th}$ CG | 0.00684931506849315
25: ENDZ|absolute end of string | 0.00684931506849315


0000 | 0060 | '[^]]+?\\] +([0-9.]+): (\\w+) <-(\\w+)'
0001 | 0022 | '^[ -~]{0,200}[!-~]$'
0002 | 0014 | '<[a-zA-Z][-.a-zA-Z0-9]*/'
0003 | 0013 | '([0-9]+)'
0004 | 0013 | '^[a-zA-Z_][a-zA-Z_0-9]*(\\.[a-zA-Z_][a-zA-Z_0-9]*)*$'
0005 | 0011 | '^[1-9]\\d{2} ?\\d{2}$'
0006 | 0010 | '0x([0-9a-fA-F]+)L?'
0007 | 0010 | '[^A-Za-z0-9]Q_OBJECT[^A-Za-z0-9]'
0008 | 0009 | '([\\x00-\\x7F])+'
0009 | 0009 | '^([A-Z]+)([1-9][0-9]*)$'
0010 | 0008 | '^(?:(a)|c)(\\1)$'
0011 | 0008 | '^([a-f0-9]+)\\s(.{7})\\s(\\S+)\\s+([a-f0-9]+)\\s+(?:\\.hidden\\s+)?(.*)$'
0012 | 0007 | '[a-zA-Z]'
0013 | 0007 | '&#?[A-Za-z0-9]+?;'
0014 | 0007 | 'md5=[0-9a-f]{32}$'
0015 | 0006 | '[0-9]+,[0-9]+'
0016 | 0006 | "[^A-Za-z0-9\\-_.~!*'();:@&=+$,/?%#[\\]]"
0017 | 0006 | '([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)'
0018 | 0005 | '^\\d{15}(\\d{2}[0-9xX])?$'
0019 | 0005 | '^(?:(?:00|\\+)386|0)(\\d{7,8})$'
0020 | 0004 | u'[^A-Za-z0-9.]+'
0021 | 0004 | '^[a-zA-Z0-9-]{1,100}$'
0022 | 0004 | u'[`\x00- \x7f-\xa0\\s]+'
0023 | 0004 | '([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*'
0024 | 0004 | '\\$\\{?[a-zA-Z_][a-zA-Z0-9_]*(\\([^)]*\\))?(\\.[a-zA-Z0-9_]+(\\([^)]*\\))?)*\\}?'
0025 | 0003 | '([A-Z][a-z]+)'
0026 | 0003 | '^#[0-9A-Fa-f]{6}$'
0027 | 0003 | '^(\\w+)=([a-f0-9]+)'
0028 | 0003 | '\\\\([0-3][0-7][0-7])'
0029 | 0003 | '^[0-9A-Za-z._-]{0,100}$'
0030 | 0003 | 'md[0-9]$|sd[a-z]+$|xvd[a-z]+$'
0031 | 0003 | '&#([xX]?[0-9a-fA-F]+)[^0-9a-fA-F]'
0032 | 0002 | '^[#/;]'
0033 | 0002 | '[A-Za-z]'
0034 | 0002 | '%([0-9]+)'
0035 | 0002 | '[^0-9:\\.]'
0036 | 0002 | '^[0-9]{2}$'
0037 | 0002 | '([+-]\\d{4})$'
0038 | 0002 | '\\*\\*([0-9]+)'
0039 | 0002 | '^[-_A-Za-z0-9]+$'
0040 | 0002 | '^\\#([0-9a-fA-F]{6})$'
0041 | 0002 | '^([a-zA-Z0-9_]+):( |$)'
0042 | 0002 | '@%\\(([a-zA-Z][a-zA-Z0-9_-]*)\\)s'
0043 | 0002 | 'SNIPPET::([A-Za-z0-9_\\-\\/\\.]+)'
0044 | 0002 | '\\\\x([0-9a-fA-F]{2}|[0-9a-fA-F])'
0045 | 0002 | '^v([0-9]+|[0-9]+\\.[0-9]+)(/.*|$)'
0046 | 0002 | '^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'
0047 | 0002 | '^(?:852-?)?(\\d{4})[-\\.]?(\\d{4})$'
0048 | 0002 | '^(\\+[3-9]{1,}|\\+{3,}|\\+[1-9][0-9]+)$'
0049 | 0002 | '[^A-Za-z0-9]?(?:file|source)=(http[^\\\'"&]*)'
0050 | 0001 | '[A-Z_]+'
0051 | 0001 | '[^+0-9]'
0052 | 0001 | '[^0-9.]'
0053 | 0001 | 'AAAA0123'
0054 | 0001 | "([0-9]+)'"
0055 | 0001 | ' - [0-9]+'
0056 | 0001 | '[0-9]+\\.'
0057 | 0001 | '^(Sch|S)A'
0058 | 0001 | '^[\\w._-]+'
0059 | 0001 | '^[@]+|[@]+$'
0060 | 0001 | '^[a-zA-Z]+='
0061 | 0001 | '[0-9a-f]{32}'
0062 | 0001 | '[aeouiAEOUI]'
0063 | 0001 | '\\([A-Z]\\) '
0064 | 0001 | '^[^A-Za-z_]$'
0065 | 0001 | '^[a-z0-9-]+$'
0066 | 0001 | '[#][\\dA-F]{3}'
0067 | 0001 | '[#][\\dA-F]{6}'
0068 | 0001 | '[0-9a-fA-F]{6}'
0069 | 0001 | '^[0-9a-f]{32}$'
0070 | 0001 | '#[0-9a-fA-F]{6}'
0071 | 0001 | '([0-9]+)\\s+min'
0072 | 0001 | '([^a-zA-Z_0-9])'
0073 | 0001 | '[^a-zA-Z0-9_ -]'
0074 | 0001 | '^0x([0-9a-z]+)$'
0075 | 0001 | '^@[A-Z0-9\\_]+$'
0076 | 0001 | '[^a-zA-Z0-9_\\.]'
0077 | 0001 | '^([0-9]+)-.+/.+$'
0078 | 0001 | "(^[A-Za-z\\' ]+$)"
0079 | 0001 | '[a-zA-Z]:(/|\\\\)'
0080 | 0001 | '^(.+):(\\d{1,5})$'
0081 | 0001 | '[a-zA-Z0-9_]{2,10}'
0082 | 0001 | '[a-zA-Z]+://[\\S]+'
0083 | 0001 | '^(R|RR)(_(\\d+))?$'
0084 | 0001 | '^([A-Z]+)([0-9]+)$'
0085 | 0001 | '([^A-Za-z0-9\\._-])'
0086 | 0001 | '^([a-fA-F0-9]{64})$'
0087 | 0001 | '^/static/[a-z./-]+$'
0088 | 0001 | '[^a-z]([a-z]+)[^a-z]'
0089 | 0001 | u'[^A-Za-z0-9_\\.\\-]'
0090 | 0001 | '[$]([A-Z_][A-Z0-9_]*)'
0091 | 0001 | '^1900|^1[2-9]\\d\\d976'
0092 | 0001 | ' at 0x[0-9a-f]{6,}(>+)$'
0093 | 0001 | '([0-9]+\\s+\\-\\s+)(.+)'
0094 | 0001 | '\\$[0-9]+\\,?\\.?[0-9]*'
0095 | 0001 | '^([^ ]+) = ([0-9\\.]+)$'
0096 | 0001 | '^[ ]{0,3}:[ ]{1,3}(.*)$'
0097 | 0001 | u'[^0-9]([0-9]{4})[^0-9]'
0098 | 0001 | '(?:[.~]|/[a-zA-Z_0-9]+)/'
0099 | 0001 | '([a-z ]+)(\\([0-9]+\\))?'
0100 | 0001 | '([a-zA-Z_][a-zA-Z0-9_]*)'
0101 | 0001 | '/gs/[a-z0-9\\.\\-_]{3,}$'
0102 | 0001 | '(fasta_[a-z0-9]+\\.fasta)'
0103 | 0001 | '\\$\\{([a-zA-Z0-9_-]+)\\}'
0104 | 0001 | '\\b[A-Z](\\.[A-Za-z])+\\b'
0105 | 0001 | '^([A-Fa-f0-9]{2,2}){3,4}$'
0106 | 0001 | '\\?[a-zA-Z_][a-zA-Z0-9_]*$'
0107 | 0001 | '^([0-9a-fA-F]{2}(:|$)){6}$'
0108 | 0001 | '^([\\w\\-]+/)?[\\w\\-\\.]+$'
0109 | 0001 | '^[a-zA-Z][a-zA-Z\\d_]{2,4}$'
0110 | 0001 | '^([^;]+);([^;]+):(\\d{1,5})$'
0111 | 0001 | '^[a-z0-9][a-z0-9\\.\\-]{2,}$'
0112 | 0001 | '([A-Z]{2}[0-9]{2,3}-[0-9]{2})'
0113 | 0001 | '^([+\\-])?\\$([^\\$\\{\\}]+)$'
0114 | 0001 | '(([0-9]{1,3}\\.){3}[0-9]{1,3})'
0115 | 0001 | '^&[a-zA-Z0-9][a-zA-Z0-9_\\.]*$'
0116 | 0001 | '\\[([\\.0-9a-f:]+)\\](?::(\\d+))?'
0117 | 0001 | '^[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]$'
0118 | 0001 | '(^[^a-zA-Z\\._]+)|([^a-zA-Z\\._0-9]+)'
0119 | 0001 | '[- \n\t\ra-zA-Z0-9()+,./:=?;!*#@$_%]*'
0120 | 0001 | '^([0-9]+)\\.([0-9]+)\\.([0-9]+)(.*?)$'
0121 | 0001 | '^([_A-Za-z][_A-Za-z0-9]*|\\.|\\.\\.)$'
0122 | 0001 | '^[\\d\\.]+ meV\xe2\x80\xbd .* \\- .*$'
0123 | 0001 | '\\s+(([0-9A-F]{2}:){5}[0-9A-F]{2})\\s+'
0124 | 0001 | '--[0-9]+-- ([^(:]*) \\((0x[0-9a-f]+)\\)'
0125 | 0001 | '^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$'
0126 | 0001 | '\\b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\\b'
0127 | 0001 | '^([0-9a-fA-F]{1,2}:){5}[0-9a-fA-F]{1,2}$'
0128 | 0001 | '^[0-9x]+ [0-9xA-F]+ .* [A-Z][A-Z] [0-9].*$'
0129 | 0001 | '([^a-zA-Z0-9]*)([a-zA-Z0-9]+)([^a-zA-Z0-9]*)'
0130 | 0001 | '[\\-a-zA-Z0-9\\x80-\\xff_\\.\\@\\!\\#\\%\\:]'
0131 | 0001 | '^(?:[A-Z]{1}\\.{1}|[A-Z]{1}\\.{1}[A-Z]{1})+$'
0132 | 0001 | '^(.+?)[ \\._\\-]\\[?([0-9]+)x([0-9]+)[^\\/]*$'
0133 | 0001 | '^(0x[0-9a-fA-F]+)(?:,(ramdisk|ipl|entry|rpm))?$'
0134 | 0001 | '^((?:[^-]+|-(?![0-9]))+)-([0-9][^-]*)(?:-(.*))?$'
0135 | 0001 | '([a-zA-Z][a-zA-Z]|[iIxX]-([a-zA-Z])+)(-[a-zA-Z])*'
0136 | 0001 | '[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?'
0137 | 0001 | '^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$'
0138 | 0001 | '^([0-9]{4})-([0-1][0-9])-([0-3][0-9])(-([0-2][0-9])-([0-5][0-9]))? +(.*)$'
0139 | 0001 | '\\A#([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])\\Z'
0140 | 0001 | '^([A-Za-z0-9 .#(),_/-]+) +\\(([0-9A-F]+), ?([0-9A-F]+)\\) ([A-Z][A-Z]) ([0-9]+)$'
0141 | 0001 | '^([-_./a-zA-Z0-9]+)\\s+(\\d+)\\s+(\\S+?)((?:\\s+[-_./a-zA-Z0-9]+=[-_./a-zA-Z0-9]+)*)$'
0142 | 0001 | '([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])'
0143 | 0001 | '^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$'
0144 | 0001 | '^\\(([0-9a-fx]+),([0-9a-fx]+)\\)[ \t]+VERS=.*[ \t]+VR="(.*)"[ \t]+VM="(.*)"[ \t]+Keyword=.*[ \t]+Name="(.*)"$'
0145 | 0001 | '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'



cluster 3 stats:
nPatterns: 116.0
nProjects: 205
shortest: "
Features:

1: LIT|a literal character | 63.86206896551724
2: CCC|custom character class | 0.8448275862068966
3: ADD|one-or-more repetition | 0.7844827586206896
4: KLE|zero-or-more repetition | 0.6551724137931034
5: CG|a capture group | 0.646551724137931
6: QST|zero-or-one repetition | 0.6293103448275862
7: RNG|chars within a range | 0.603448275862069
8: NCG|group without capturing | 0.4827586206896552
9: OR|logical or | 0.45689655172413796
10: ANY|any non-newline char | 0.4051724137931034
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3620689655172414
12: DEC|any of: 0123456789 | 0.3448275862068966
13: END|end-of-line | 0.22413793103448276
14: NCCC|negated CCC | 0.1724137931034483
15: WRD|[a-zA-Z0-9\_] | 0.15517241379310345
16: DBB|$n\le x \le m$ repetition | 0.12931034482758622
17: LZY|as few reps as possible | 0.12931034482758622
18: PNG|named capture group | 0.10344827586206896
19: STR|start-of-line | 0.10344827586206896
20: WNW|word/non-word boundary | 0.10344827586206896
21: NWSP|any non-whitespace | 0.08620689655172414
22: SNG|exactly n repetition | 0.07758620689655173
23: BKR|match the $i^{th}$ CG | 0.04310344827586207
24: LWB|at least n repetition | 0.034482758620689655
25: NLKA|sequence doesn't follow  | 0.034482758620689655
26: NLKB|sequence doesn't precede | 0.034482758620689655
27: LKB|matching sequence precedes | 0.02586206896551724
28: ENDZ|absolute end of string | 0.017241379310344827
29: NWNW|negated WNW | 0.017241379310344827
30: NWRD|non-word chars | 0.017241379310344827
31: LKA|matching sequence follows | 0.008620689655172414
32: OPT|options wrapper | 0.008620689655172414


0000 | 0026 | '\\W+'
0001 | 0026 | '\\n{2,}'
0002 | 0024 | '"'
0003 | 0019 | '\\$(\\w+|\\{[^}]*\\})'
0004 | 0018 | '\\Z(?ms)'
0005 | 0013 | '\\r'
0006 | 0013 | '\n    \\""" [^"\\\\]* (?:\n                     (?: \\\\. | "(?!"") )\n                     [^"\\\\]*\n                 )*\n    (?: \\""" )?\n\n|   " [^"\\\\\\n]* (?: \\\\. [^"\\\\\\n]* )* "?\n\n|   \'\'\' [^\'\\\\]* (?:\n                   (?: \\\\. | \'(?!\'\') )\n                   [^\'\\\\]*\n                )*\n    (?: \'\'\' )?\n\n|   \' [^\'\\\\\\n]* (?: \\\\. [^\'\\\\\\n]* )* \'?\n'
0007 | 0011 | '\\-+'
0008 | 0009 | '\\\\begin{(?:long)?table([iv]+)}'
0009 | 0008 | '\\\\.|.'
0010 | 0008 | '^x{1,2}$'
0011 | 0008 | '\\B(b.)\\B'
0012 | 0007 | '\\|'
0013 | 0007 | '\\\\hackscore\\s*{[^}]*}'
0014 | 0006 | '\\\\n'
0015 | 0006 | '\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  (?=[ \\t]|$)           # whitespace or the end of the string\n  '
0016 | 0005 | u'\\S'
0017 | 0005 | '\\\\\\n'
0018 | 0005 | '\\s+(\\d+),$'
0019 | 0005 | '\\b0+(\\d+)(?!\\d)'
0020 | 0005 | '#\\w\\w\\w\\w\\w\\w$'
0021 | 0005 | '\\A[\\x00-\\x7f]*\\Z'
0022 | 0005 | "\n        ^(\\#{1,6})  # \\1 = string of #'s\n        [ \\t]*\n        (.+?)       # \\2 = Header text\n        [ \\t]*\n        (?<!\\\\)     # ensure not an escaped trailing '#'\n        \\#*         # optional closing #'s (not counted)\n        \\n+\n        "
0023 | 0004 | ' |\\('
0024 | 0004 | '\\.exe$'
0025 | 0004 | u'\\\\(.)'
0026 | 0004 | '\\$(\\w+)'
0027 | 0004 | '\\[(\\d?\\d?\\d?)%\\]'
0028 | 0004 | '#\\{?if\\}?\\(.+?\\).*?#\\{?end\\}?'
0029 | 0004 | '\\\\|\\/|\\||\\:|\\?|\\*|"|<|>|[\x00-\x1f\x7f-\x9f]/'
0030 | 0003 | "\\\\'"
0031 | 0003 | '"|\\\\'
0032 | 0003 | '\\.|\\\\'
0033 | 0003 | '\\${(\\w+)}'
0034 | 0003 | '\\d+ (\\d+):'
0035 | 0003 | '\\\\?(gettext|_)\\('
0036 | 0003 | '\\[SQLCode\\: (\\d+)\\]'
0037 | 0003 | '\n      ^\\s*   # Start of a new line and whitespace\n      /\\*    # Opening "/*"\n      .*?    # Non greedy match of any characters (including newlines)\n      \\*/    # Closing "*/'
0038 | 0003 | '\n    (\n        (?:".*?")|              # double quotes\n        (?:\'.*?\')|              # single quotes\n        (?:[^\'",\\s=][^,=]*?)       # unquoted\n    )\n    (?:\n    (?:\\s*,\\s*)|(?:\\s*$)            # comma\n    )\n'
0039 | 0002 | '\\W_\\('
0040 | 0002 | 'ERROR FAIL'
0041 | 0002 | '\r|\n|\r\n'
0042 | 0002 | '\\|(\\S+)\\|'
0043 | 0002 | '\\.repeat\\d+'
0044 | 0002 | '\\bratsimp\\b'
0045 | 0002 | '\\n\\r?[\\t ]*$'
0046 | 0002 | 'ERROR TODO WORKED'
0047 | 0002 | '\\(CVS\\) ([\\d\\.]+) '
0048 | 0002 | 'call\\slaunch\\sbefore'
0049 | 0002 | '\\.(js|java)(?:\\.in)?$'
0050 | 0002 | '"(\\\\\\\\|\\\\"|[^"])*"'
0051 | 0002 | '\\.\\.|^\\./|\\.$|/\\./|^-'
0052 | 0002 | '\\[0\\:0\\] -A .* -j ACCEPT -p icmp -s 192.168.11.0/24'
0053 | 0002 | '\\^phoneCallContactId\\^=\\^urn:ace:(?P<identifier>.*)'
0054 | 0002 | '(\\\\|\\*|\\+|\\?|\\||\\{|\\}|\\[|\\]|\\(|\\)|\\^|\\$|\\.|\\#|\\ )'
0055 | 0002 | '\n        <!DOCTYPE\n        \\s+(?P<name>[a-zA-Z_:][\\w:.-]*)\n        \\s+(?:\n            SYSTEM\\s+(["\'])(?P<system_id_a>.*?)\\2\n            |\n            PUBLIC\n            \\s+(["\'])(?P<public_id_b>.*?)\\4\n            # HTML 3.2 and 2.0 doctypes don\'t include a system-id.\n            (?:\\s+(["\'])(?P<system_id_b>.*?)\\6)?\n        )\n        (\\s*\\[.*?\\])?        \n        \\s*>\n        '
0056 | 0002 | "\n        ^\n        \\s*\n        (?P<operator>(~=|==|!=|<=|>=|<|>|===))\n        (?P<version>\n            (?:\n                # The identity operators allow for an escape hatch that will\n                # do an exact string match of the version you wish to install.\n                # This will not be parsed by PEP 440 and we cannot determine\n                # any semantic meaning from it. This operator is discouraged\n                # but included entirely as an escape hatch.\n                (?<====)  # Only match for the identity operator\n                \\s*\n                [^\\s]*    # We just match everything, except for whitespace\n                          # since we are only testing for strict identity.\n            )\n            |\n            (?:\n                # The (non)equality operators allow for wild card and local\n                # versions to be specified so we have to define these two\n                # operators separately to enable that.\n                (?<===|!=)            # Only match for equals and not equals\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n\n                # You cannot use a wild card and a dev or local version\n                # together so group them with a | and make them optional.\n                (?:\n                    (?:[-_\\.]?dev[-_\\.]?[0-9]*)?         # dev release\n                    (?:\\+[a-z0-9]+(?:[-_\\.][a-z0-9]+)*)? # local\n                    |\n                    \\.\\*  # Wild card syntax of .*\n                )?\n            )\n            |\n            (?:\n                # The compatible operator requires at least two digits in the\n                # release segment.\n                (?<=~=)               # Only match for the compatible operator\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)+   # release  (We have a + instead of a *)\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n            |\n            (?:\n                # All other operators only allow a sub set of what the\n                # (non)equality operators do. Specifically they do not allow\n                # local versions to be specified nor do they allow the prefix\n                # matching wild cards.\n                (?<!==|!=|~=)         # We have special cases for these\n                                      # operators so we want to make sure they\n                                      # don't match here.\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n        )\n        \\s*\n        $\n        "
0057 | 0001 | '{$'
0058 | 0001 | u'"}'
0059 | 0001 | '\\$$'
0060 | 0001 | '\\.|-'
0061 | 0001 | '\\s+}'
0062 | 0001 | '_{2,}'
0063 | 0001 | '}\\s+'
0064 | 0001 | u'\\w+'
0065 | 0001 | '\\{\\}'
0066 | 0001 | '^/{2,}'
0067 | 0001 | '\\.mar$'
0068 | 0001 | '\\.php$'
0069 | 0001 | '\\n:\\n'
0070 | 0001 | '\\s|\\('
0071 | 0001 | '\\w+\\s'
0072 | 0001 | '\\bc[cs]'
0073 | 0001 | '\nJoliet'
0074 | 0001 | '\\S{1,10}'
0075 | 0001 | '\\d+:\\d+'
0076 | 0001 | '\\.pyc$|~$'
0077 | 0001 | '\nEl Torito'
0078 | 0001 | 'KEYBOARDTYPE'
0079 | 0001 | '\\b[\\-_]\\b'
0080 | 0001 | '\\{(\\w+)\\}'
0081 | 0001 | u'^ur\\d{7,8}$'
0082 | 0001 | 'ERROR in BUILD'
0083 | 0001 | '\\.(anno|txt)$'
0084 | 0001 | '\\?Page=(\\d+)'
0085 | 0001 | '\\\\.|\\(\\?P='
0086 | 0001 | '\\^headers\\^$'
0087 | 0001 | 'Error: |ERROR: '
0088 | 0001 | '\\S+buildout.py'
0089 | 0001 | '\\w+\\_steps.rb'
0090 | 0001 | '\\$\\((\\w+?)\\)'
0091 | 0001 | '\\\\end{tabularx}'
0092 | 0001 | '\\s+\\(\\d{4}\\)$'
0093 | 0001 | '\\[ip:([0-9_]*)\\]'
0094 | 0001 | 'exe not registered'
0095 | 0001 | '\\d+\\.\\.$|\\.{4}$'
0096 | 0001 | '\\{\\{PACKAGE\\}\\}'
0097 | 0001 | 'Connection timed out'
0098 | 0001 | '\\bLCOV_EXCL_LINE\\b'
0099 | 0001 | '\\b(?:20|19)\\d{2}\\b'
0100 | 0001 | '\\bLCOV_EXCL_START\\b'
0101 | 0001 | '\nRock Ridge signatures'
0102 | 0001 | '\\{\\{(?P<comm>.+?)\\}\\}'
0103 | 0001 | u'\\[\\[([^:]+):([^|\\]]+)'
0104 | 0001 | '\\.(js|jsm|java)(?:\\.in)?$'
0105 | 0001 | '\\.((dll)|(DLL)|(drv)|(DRV))$'
0106 | 0001 | '\\s+(\\w+)\\s+"(&#\\w+;|[^&"]*)"'
0107 | 0001 | '\\${project_path:(?P<file>[^}]+)}'
0108 | 0001 | 'TOTAL\\s+(\\d+)\\s+[\\-\\d\\.]+\\%\\s+(\\d+)'
0109 | 0001 | '\\$\\(call\\s+moa_load\\s*,\\s*(\\S*)\\s*\\)'
0110 | 0001 | '\\S+\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)%'
0111 | 0001 | '\\s+src set ".*" \\(([0-9.]+) docs, \\d+ segs\\)'
0112 | 0001 | '\\.\\.\\. ([^#]+)#(\\d+) (add|edit|delete|integrate|branch|move/add|move/delete)'
0113 | 0001 | '\n            (?:^[ \\t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        '
0114 | 0001 | "\n        ^(?!\\.)                            # name may not begin with a dot\n        (\n          [-a-z0-9!\\#$%&'*+/=?^_`{|}~]     # all legal characters except dot\n          |\n          (?<!\\.)\\.                        # single dots only\n        )+\n        (?<!\\.)                            # name may not end with a dot\n        @\n        (\n          localhost\n          |\n          (\n            [a-z0-9]                         # [sub]domain begins with alphanumeric\n            (\n              [-\\w]*                         # alphanumeric, underscore, dot, hyphen\n              [a-z0-9]                       # ending alphanumeric\n            )?\n          \\.                               # ending dot\n          )+\n          [a-z]{2,}                        # TLD alpha-only\n       )$\n    "
0115 | 0001 | "\n        ^\n        (?:\n          # Dotted variants:\n          (?:\n            # Decimal 1-255 (no leading 0's)\n            [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n          |\n            0x0*[0-9a-f]{1,2}  # Hexadecimal 0x0 - 0xFF (possible leading 0's)\n          |\n            0+[1-3]?[0-7]{0,2} # Octal 0 - 0377 (possible leading 0's)\n          )\n          (?:                  # Repeat 0-3 times, separated by a dot\n            \\.\n            (?:\n              [3-9]\\d?|2(?:5[0-5]|[0-4]?\\d)?|1\\d{0,2}\n            |\n              0x0*[0-9a-f]{1,2}\n            |\n              0+[1-3]?[0-7]{0,2}\n            )\n          ){0,3}\n        |\n          0x0*[0-9a-f]{1,8}    # Hexadecimal notation, 0x0 - 0xffffffff\n        |\n          0+[0-3]?[0-7]{0,10}  # Octal notation, 0 - 037777777777\n        |\n          # Decimal notation, 1-4294967295:\n          429496729[0-5]|42949672[0-8]\\d|4294967[01]\\d\\d|429496[0-6]\\d{3}|\n          42949[0-5]\\d{4}|4294[0-8]\\d{5}|429[0-3]\\d{6}|42[0-8]\\d{7}|\n          4[01]\\d{8}|[1-3]\\d{0,9}|[4-9]\\d{0,8}\n        )\n        $\n    "



cluster 4 stats:
nPatterns: 100.0
nProjects: 199
shortest: ^\(
Features:

1: LIT|a literal character | 3.21
2: ADD|one-or-more repetition | 1.72
3: CG|a capture group | 1.54
4: DEC|any of: 0123456789 | 1.15
5: STR|start-of-line | 0.44
6: END|end-of-line | 0.36
7: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.36
8: WRD|[a-zA-Z0-9\_] | 0.27
9: QST|zero-or-one repetition | 0.26
10: NWSP|any non-whitespace | 0.23
11: ANY|any non-newline char | 0.22
12: CCC|custom character class | 0.19
13: KLE|zero-or-more repetition | 0.14
14: OR|logical or | 0.11
15: NCG|group without capturing | 0.09
16: DBB|$n\le x \le m$ repetition | 0.07
17: NCCC|negated CCC | 0.07
18: SNG|exactly n repetition | 0.05
19: NWRD|non-word chars | 0.04
20: ENDZ|absolute end of string | 0.03
21: PNG|named capture group | 0.03
22: RNG|chars within a range | 0.03
23: LWB|at least n repetition | 0.01
24: LZY|as few reps as possible | 0.01
25: NDEC|any non-decimal | 0.01
26: NLKA|sequence doesn't follow  | 0.01
27: WNW|word/non-word boundary | 0.01


0000 | 0021 | '&#?\\w+;'
0001 | 0021 | u'^(?:=)$'
0002 | 0017 | '(\\(|\\)|\\s+)'
0003 | 0016 | '\\S+ (\\d+)\\.(\\d+)\\.?(\\d+)?'
0004 | 0015 | u'^\\d+$'
0005 | 0015 | '<(/|\\Z)'
0006 | 0014 | '^\\s+$'
0007 | 0012 | '^(\\d{10})$'
0008 | 0012 | '(\\d+\\.\\d+\\.\\d+)'
0009 | 0011 | '^\\r?\\n\\r?\\n'
0010 | 0009 | '(\\W+)'
0011 | 0009 | ':\\d+$'
0012 | 0009 | '^(\\s+)'
0013 | 0009 | '(\\033|~{)'
0014 | 0008 | '$(\\w+)'
0015 | 0006 | '^\\W+'
0016 | 0005 | '(\\S+)\\s+(\\S+)'
0017 | 0004 | '(\\D)[.]'
0018 | 0004 | 'bytes=(\\d+)-(\\d+)'
0019 | 0004 | u'&(?!(\\w+|#\\d+);)'
0020 | 0004 | '(\\d+)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)'
0021 | 0003 | '^-?\\d'
0022 | 0003 | '^(?:=)$'
0023 | 0003 | u'(\\.|\\s)'
0024 | 0003 | u'^(\\d{10})$'
0025 | 0003 | '(\\S+): (\\S+)'
0026 | 0003 | u'(\\.|\\s|/|-)'
0027 | 0003 | '^(.+)[:(]\\d+[:)]'
0028 | 0003 | 'pip(\\d(\\.\\d)?)?$'
0029 | 0003 | '(\\w+)-(\\w+)\\ : (.*)'
0030 | 0003 | '(\\d+(\\.\\d+)?) (K|M|G|T)b?$'
0031 | 0003 | '(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0032 | 0003 | '^(\\d+)\\.(\\d+)(?:\\.(\\d+))?'
0033 | 0003 | '^\\w+(?:-\\w+)?(?:,\\w+(?:-\\w+)?)*$'
0034 | 0003 | '(\\d+):(\\d+):(\\d+)(?:\\.(\\d{0,6}))?'
0035 | 0003 | '([\\d.]+) ([\\d.]+) ([\\d.]+) (\\d+)/(\\d+)'
0036 | 0002 | '^(X|A)$'
0037 | 0002 | '(\\s|,)+'
0038 | 0002 | 'CPU\\d+:'
0039 | 0002 | '^\\S+\\s+'
0040 | 0002 | '^(.+?)_(.+)$'
0041 | 0002 | '(\\r\\n|\\n|\\r)'
0042 | 0002 | '(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)'
0043 | 0002 | '^(\\s+\\(release-func\\s+)(\\w+)(.*)$'
0044 | 0002 | '^(\\s+\\(return-type\\s+)([^\\s]+)(\\s*\\))$'
0045 | 0001 | '^\\('
0046 | 0001 | '/\\d+'
0047 | 0001 | '^\\S+'
0048 | 0001 | '^_\\('
0049 | 0001 | 'p\\d+$'
0050 | 0001 | '(\\\\")'
0051 | 0001 | '(\\w+;)'
0052 | 0001 | ':(\\w+)'
0053 | 0001 | '^(\\?+)'
0054 | 0001 | '^@\\w+$'
0055 | 0001 | "^'(.+)'@"
0056 | 0001 | '(\\.py)$'
0057 | 0001 | '(\\s|_)+'
0058 | 0001 | '>(\\d+)$'
0059 | 0001 | '^\\{.+\\}'
0060 | 0001 | '(\\w+).py$'
0061 | 0001 | '(\\{.+\\})'
0062 | 0001 | '^\\d+-\\d+'
0063 | 0001 | '{(\\d+)\\}'
0064 | 0001 | '^(\\s+)\\S+'
0065 | 0001 | u'tt(\\d+)/$'
0066 | 0001 | '(\\w+://)(.+)'
0067 | 0001 | '^Uid:\\s+(\\d+)'
0068 | 0001 | '(-?\\d+):(-?\\d+)'
0069 | 0001 | '^PPid:\\s+(\\d+)$'
0070 | 0001 | '(.+):(\\d+): (.+)$'
0071 | 0001 | '(\\d+):(\\d\\d)\\Z'
0072 | 0001 | '^(\\S+ +\\S+)\\s*$'
0073 | 0001 | '^\\d+(\\.\\d+){1,}$'
0074 | 0001 | ' \\d+.\\d+ tb\\(r\\)'
0075 | 0001 | '^\\S+ (\\S+)@(\\S+)$'
0076 | 0001 | '^\\d+\\-\\d+\\-\\d+$'
0077 | 0001 | '(\\w+) (\\w)\\. (\\w+)'
0078 | 0001 | '^ (\\S+) (\\d+)/(\\d+)'
0079 | 0001 | '^([^:]+):\\s+(.+)\\s*$'
0080 | 0001 | '(\\[\\[)([^$]+)(\\]\\])'
0081 | 0001 | '(\\b[^ ,=]+)="?([^",]+)"?'
0082 | 0001 | '^(\\d+\\.x-)?(\\d+)\\..*$'
0083 | 0001 | '(\\S+[.]savespace[(].*[)])'
0084 | 0001 | '(\\d+)\\s+\\w+\\s+(\\w+).*'
0085 | 0001 | '^\\d{4}\\.\\d{2}\\.\\d{2}$'
0086 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)(\\w?)'
0087 | 0001 | '^([\\.\\/\\w]+\\.tex)(:\\d+:.*)'
0088 | 0001 | '(\\S+)\\s+(\\d)\\s+\\d+\\s+\\S+$'
0089 | 0001 | '(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)'
0090 | 0001 | '^\\#!\\s?([^\\s]+)(?:\\s([^\\s]+))?'
0091 | 0001 | 'H(F)(DTE)(\\d\\d)(\\d\\d)(\\d\\d)\\Z'
0092 | 0001 | '^(\\S+)\\t(\\S+)\\t(\\S+)\\t(.+)\\n$'
0093 | 0001 | '^(\\d+)\\W(\\w+)\\W(\\w+)[ \t]+(.*)$'
0094 | 0001 | '(.+)[-_](\\d+)\\.(\\d+)\\.(\\d+)(\\w?)'
0095 | 0001 | 'fixed:\\s+([\\w.+~-]+(\\s+[\\w.+~:-]+)?)'
0096 | 0001 | '(\\d+\\.\\d+\\.\\d+)[T\\.](\\d+(\\.\\d+)*)$'
0097 | 0001 | '^\\(\\[(\\S+)\\],\\[(\\S+)\\],\\[(\\S+)\\]\\)$'
0098 | 0001 | '^(\\d{4,4}-\\d{2,2}-\\d{2,2}T\\d{2,2}:\\d{2,2}:\\d{2,2})\\.\\d*Z$'
0099 | 0001 | '^\\s+inet addr:\\s*(?P<ipaddr>[0-9\\.]+)(\\s+Bcast:(?P<bcast>[0-9\\.]+))?\\s+Mask:(?P<mask>[0-9\\.]+)'



cluster 5 stats:
nPatterns: 149.0
nProjects: 192
shortest: a.*
Features:

1: LIT|a literal character | 7.174496644295302
2: KLE|zero-or-more repetition | 1.570469798657718
3: ANY|any non-newline char | 1.261744966442953
4: CG|a capture group | 1.1409395973154361
5: ADD|one-or-more repetition | 0.6308724832214765
6: CCC|custom character class | 0.46308724832214765
7: END|end-of-line | 0.40268456375838924
8: STR|start-of-line | 0.37583892617449666
9: RNG|chars within a range | 0.3288590604026846
10: DEC|any of: 0123456789 | 0.3221476510067114
11: LZY|as few reps as possible | 0.2953020134228188
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.28859060402684567
13: PNG|named capture group | 0.18791946308724833
14: NCG|group without capturing | 0.1476510067114094
15: QST|zero-or-one repetition | 0.1342281879194631
16: NCCC|negated CCC | 0.09395973154362416
17: WRD|[a-zA-Z0-9\_] | 0.087248322147651
18: OR|logical or | 0.08053691275167785
19: WNW|word/non-word boundary | 0.08053691275167785
20: SNG|exactly n repetition | 0.03355704697986577
21: DBB|$n\le x \le m$ repetition | 0.020134228187919462
22: NWSP|any non-whitespace | 0.020134228187919462
23: NLKA|sequence doesn't follow  | 0.013422818791946308
24: LWB|at least n repetition | 0.006711409395973154
25: NWRD|non-word chars | 0.006711409395973154


0000 | 0024 | '[*?[]'
0001 | 0021 | '\\(.*?\\)'
0002 | 0015 | '^([^=]*)=(.*)$'
0003 | 0014 | '(.*/|)([^/]+\\.[a-z]+:\\d+):(\\d+:)? warning:'
0004 | 0013 | '^ *\n'
0005 | 0012 | '^-*\n'
0006 | 0012 | '.*?\\n'
0007 | 0012 | '.*{(?P<size>\\d+)}$'
0008 | 0011 | '".*"$'
0009 | 0011 | '\\{\\{.*?\\}\\}'
0010 | 0008 | '(:*)'
0011 | 0008 | '^([a-zA-F0-9_-]*)[\\.]?.*$'
0012 | 0007 | '^[a-zA-Z_]\\w*'
0013 | 0006 | '[^.]*'
0014 | 0006 | '^\\[.*\\]$'
0015 | 0006 | '(.*?)(#)(.*)'
0016 | 0006 | '.*?\\b(as)\\b'
0017 | 0005 | "^'(.*)'$"
0018 | 0005 | '(\\w+)(.*)'
0019 | 0004 | '^(\\s*)(def .+:|class .+:)'
0020 | 0003 | '"(.*?)"'
0021 | 0003 | '^quit.*'
0022 | 0003 | '^rebt.*'
0023 | 0003 | '.*\\.dmg'
0024 | 0003 | '.*\\.exe'
0025 | 0003 | '\\[.*\\]'
0026 | 0003 | '(\\S+);.*'
0027 | 0003 | '^\\[.*\\]'
0028 | 0003 | '^[\\w\\.\\-\\/]*$'
0029 | 0003 | u'^\\d+(\\.\\d+)*$'
0030 | 0003 | '^([^<]+)[<]?(.*)[>]?$'
0031 | 0003 | '.*(\\.so|\\.py[cod]?)$'
0032 | 0003 | '^(.*)~([+-][0-9]{2})00$'
0033 | 0003 | '.*OOM max count: (\\d+).*'
0034 | 0003 | '^#define.*ENGINE_VERSION\t*"DOOM (.*)"'
0035 | 0003 | '^(?:\\s*)([0-9]+):(?:\\s*)(?P<rx_bytes>\\d+)(?:\\s*)(?P<rx_packets>\\w+)(?:\\s*)(?P<rx_errors>\\d+)(?:\\s*)(?P<rx_drop>\\d+)(?:\\s*)(?P<rx_fifo>\\d+)(?:\\s*)(?P<rx_frame>\\d+)(?:\\s*)(?P<rx_compressed>\\d+)(?:\\s*)(?P<rx_multicast>\\d+)(?:\\s*)(?P<tx_bytes>\\d+)(?:\\s*)(?P<tx_packets>\\w+)(?:\\s*)(?P<tx_errors>\\d+)(?:\\s*)(?P<tx_drop>\\d+)(?:\\s*)(?P<tx_fifo>\\d+)(?:\\s*)(?P<tx_frame>\\d+)(?:\\s*)(?P<tx_compressed>\\d+)(?:\\s*)(?P<tx_multicast>\\d+)(?:.*)$'
0036 | 0002 | 'a.*'
0037 | 0002 | '#.*?$'
0038 | 0002 | '(Y=.*)'
0039 | 0002 | '^.*\\/'
0040 | 0002 | '--.*?--'
0041 | 0002 | 'foo.*bar'
0042 | 0002 | '.*foo.*bar'
0043 | 0002 | '^(\\s*)<.+> '
0044 | 0002 | u'.*?\\S\\.\\s'
0045 | 0002 | '\\d+(\\.\\d*)?'
0046 | 0002 | '(.*)\\.\\w{3,4}$'
0047 | 0002 | '^(.+)<(.+)>(.*)$'
0048 | 0002 | 'call.*mount.*first'
0049 | 0002 | '^.*?(v[\\d\\.]+).*?$'
0050 | 0002 | '(.*?) (.*?) as (\\w+)'
0051 | 0002 | '\\A#!.*python(?!3).*$'
0052 | 0002 | '(\\s*)(\\\\.+?)(\\s+)$'
0053 | 0002 | '^(.*?)([\\[\\*\\?].*)$'
0054 | 0002 | '.*lib(n?cursesw?)\\.so.*'
0055 | 0002 | '(.*?)([\\\\\\{\\}\\[\\]])(.*)'
0056 | 0002 | '^(.*)\\.(.*)\\.(\\d+)\\.(\\d+)\\.(\\d+)$'
0057 | 0001 | 'SD.*'
0058 | 0001 | '//.*$'
0059 | 0001 | u'(x*)'
0060 | 0001 | "'(.*)'"
0061 | 0001 | '.*\\n?'
0062 | 0001 | '^.*\\('
0063 | 0001 | '^\\..*'
0064 | 0001 | "'(.*)'$"
0065 | 0001 | '.*[\\/]'
0066 | 0001 | '.*\\.fw'
0067 | 0001 | '^-(.*)$'
0068 | 0001 | '^//(.*)'
0069 | 0001 | '{(.*)}$'
0070 | 0001 | '{(.*?)}'
0071 | 0001 | '\\) (.*)'
0072 | 0001 | u'[\\W_]*'
0073 | 0001 | '(.*) [^ ]'
0074 | 0001 | '(\\\\*)\n'
0075 | 0001 | '.*stderr$'
0076 | 0001 | '\\ //(.*)'
0077 | 0001 | '^(.*)"""$'
0078 | 0001 | '.*minimr.*'
0079 | 0001 | '/\\.[^/]*$'
0080 | 0001 | '^([@+])?.*'
0081 | 0001 | '^\\(.*\\)$'
0082 | 0001 | '(.*): [0-9]'
0083 | 0001 | '^(\\:)(.*)$'
0084 | 0001 | '^[a-zA-Z]*$'
0085 | 0001 | '(.*?)[,(:].*'
0086 | 0001 | '.*?\\bpni\\b'
0087 | 0001 | ':.*\\.(\\d+)'
0088 | 0001 | '[/\\\\?\\*:]'
0089 | 0001 | '^\\[(.*)\\]$'
0090 | 0001 | 'id_.*=(\\d+)'
0091 | 0001 | '.*/(\\w+).kcm'
0092 | 0001 | '.*?Opteron\\b'
0093 | 0001 | '.*?\\bsse2\\b'
0094 | 0001 | '[^.]*\\.\\..*'
0095 | 0001 | '^.*\\.img.gz$'
0096 | 0001 | '^\\..*\\.swp$'
0097 | 0001 | '.*(dev|HEAD).*'
0098 | 0001 | '^0000.*1111.*$'
0099 | 0001 | '(.*?)\\s+<(.*)>'
0100 | 0001 | '([^\\.])+\\..*$'
0101 | 0001 | '<div.*?>(.*?)</'
0102 | 0001 | '^(.*?) - (.*?)$'
0103 | 0001 | '^([^:]+):.(.*)$'
0104 | 0001 | '^(\\d+)\\s(.*)$'
0105 | 0001 | '^[a-z|A-Z]\\w*$'
0106 | 0001 | '.*video:(\\d+).*'
0107 | 0001 | '^\\+\\+\\+ (.*)$'
0108 | 0001 | '\\[\\[(.*?)\\]\\]'
0109 | 0001 | '^.*RLELossless.*$'
0110 | 0001 | ' *\\)(?P<comma>,?)'
0111 | 0001 | '(\\$\\([^\\)]*\\))'
0112 | 0001 | '.*(Rep|Sen). (.+)$'
0113 | 0001 | '^.*JPEGLossless.*$'
0114 | 0001 | '^:.*[MAD]\\s+(.+)$'
0115 | 0001 | '.*/vote_history.pdf'
0116 | 0001 | '.*?Pentium.*?MMX\\b'
0117 | 0001 | '^(.*)#{(\\w+)}(.*)$'
0118 | 0001 | '.*PKGINST:\\s+(.*)\\n'
0119 | 0001 | '.*[0-9]_srcCol[0-9].*'
0120 | 0001 | '^(-?[0-9\\.]+)\\s*cm$'
0121 | 0001 | '^(.*)PS 3.6-2007(.*)$'
0122 | 0001 | '(".*?")|(\'.*?\')|(\\s+)'
0123 | 0001 | '.*\\bin\\b(?!\\b.+ing\\b)'
0124 | 0001 | '=(.*?)SlAsHcOdEsTrInG(.*)'
0125 | 0001 | '.*bitrate: (.+) (?:kb/s).*'
0126 | 0001 | '([^\\-\\.]*)-([\\d+.\\-]+)$'
0127 | 0001 | '^(.+?): .*?(\\(attached\\))?$'
0128 | 0001 | '^([^<,]+)\\s*(?:<([^>,]+)>)?$'
0129 | 0001 | '^.*(\\d+){(\\d+),(\\d+),(.)}.*$'
0130 | 0001 | '^(In \\[\\d+\\]: |\\s*\\.{3,}: ?)'
0131 | 0001 | '^(.*)(\\stime\\selapsed:\\s*)(.*)\\s*$'
0132 | 0001 | ".*window\\.location\\.href='(?P<href>.*)'.*"
0133 | 0001 | '.*?/video/tv/(.+?)/season (\\d{1,2})/extras$'
0134 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*)[\\s\t]*([0-9:, -]+)'
0135 | 0001 | '^(.*[^a-z0-9\\n])?(sudo|su +-c|system/bin/su) +.*'
0136 | 0001 | '.*((\\.textile$)|(\\.markdown$)|(\\.org$)|(\\.html$))'
0137 | 0001 | '(.*)derpiboo((.ru)|(ru.org))(/images)?/(?P<id>[0-9]*)/?'
0138 | 0001 | '([a-z]*) ([\\d-]+) - ([a-z]*) ([\\d-]+)[\\s\t]*([0-9:, -]+)'
0139 | 0001 | '^(.*)(\\([0-9A-Fx]+,[0-9A-F]+\\))\\s+([1-3C]+)\\s+(.*)\\s*$'
0140 | 0001 | '([# ]*?)([a-zA-Z0-9_]+)( +)([a-zA-Z0-9_\\?\\!<>\\+=\\.]+)(.*)'
0141 | 0001 | '.*(?P<code1>[sS][0-9]{2}[eE][0-9]{2})(-(?P<code2>[0-9]{2}))?.*'
0142 | 0001 | '^.*\\s+mail exchanger = (?P<priority>\\d+) (?P<host>\\S+)\\s*$'
0143 | 0001 | ".*Access denied for user '[\\w\\*\\!\\@\\#\\^\\&]*'@'[\\w\\.]*'.*"
0144 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) [\\s\t]*([0-9:, -]+)'
0145 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds.*?"'
0146 | 0001 | '([a-z]*) ([\\d-]+) ([a-z]*) - ([a-z]*) ([\\d-]+) ([a-z]*) / (\\d+)[\\s\t]*([0-9:, -]+)'
0147 | 0001 | '.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\\d+) seconds. Killing!"'
0148 | 0001 | '(?:.*(/|\\\\))?(?P<artist>.*) - (?P<album>.*)(/|\\\\)(?P<tracknum>\\d{2})-(?P<title>.*)\\.(?:\\w{2,5})$'



cluster 6 stats:
nPatterns: 96.0
nProjects: 155
shortest: ["]
Features:

1: LIT|a literal character | 5.541666666666667
2: CCC|custom character class | 0.9895833333333334
3: ADD|one-or-more repetition | 0.6875
4: CG|a capture group | 0.4895833333333333
5: NCCC|negated CCC | 0.28125
6: DEC|any of: 0123456789 | 0.25
7: QST|zero-or-one repetition | 0.19791666666666666
8: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.1875
9: WRD|[a-zA-Z0-9\_] | 0.13541666666666666
10: OR|logical or | 0.125
11: RNG|chars within a range | 0.11458333333333333
12: LZY|as few reps as possible | 0.07291666666666667
13: END|end-of-line | 0.0625
14: KLE|zero-or-more repetition | 0.052083333333333336
15: NWSP|any non-whitespace | 0.041666666666666664
16: STR|start-of-line | 0.041666666666666664
17: ANY|any non-newline char | 0.020833333333333332
18: NCG|group without capturing | 0.020833333333333332
19: PNG|named capture group | 0.020833333333333332
20: SNG|exactly n repetition | 0.020833333333333332
21: LKA|matching sequence follows | 0.010416666666666666
22: LWB|at least n repetition | 0.010416666666666666


0000 | 0026 | '[ \\(\\)<>@,;:\\\\"/\\[\\]\\?=]'
0001 | 0022 | '[&<]'
0002 | 0016 | '``([^`\\s]+?)``'
0003 | 0011 | '[\\s.]'
0004 | 0007 | '[<>\'"]'
0005 | 0007 | '([\\t ]+)'
0006 | 0007 | '[\\x00-\\x20]'
0007 | 0007 | '[\\\\]([a-zA-Z]+[*]?) ?({|\\s*\\n?)'
0008 | 0006 | '[\\r\\n]+'
0009 | 0006 | '[\\\'|"|#|\\\\|\\[|\\]|\\{|\\}|\\(|\\)]'
0010 | 0005 | '=[^,)]+\\)$'
0011 | 0004 | '[ ]+'
0012 | 0004 | '[-.]'
0013 | 0004 | '[\n\r]'
0014 | 0004 | '[-T:/.]|\\s+'
0015 | 0004 | '([\\\\()\\r\\n])'
0016 | 0003 | '[\n ]+$'
0017 | 0003 | '[./\\\\]'
0018 | 0003 | u'[\\-\\s]'
0019 | 0003 | '([\\s\\\\])'
0020 | 0003 | u'([^\\t -~])'
0021 | 0003 | '[\\x00-\\x1f]'
0022 | 0003 | '"([^"]+)"|(\\S+)'
0023 | 0002 | '[kK]'
0024 | 0002 | '[:@/]'
0025 | 0002 | "[\\w']+"
0026 | 0002 | '[aeiou]'
0027 | 0002 | '[xh]vc0'
0028 | 0002 | '[\\d\\.]+'
0029 | 0002 | "[$^#\\\\']"
0030 | 0002 | '[EWN]\\d{3}'
0031 | 0002 | '[=\x7f-\xff]'
0032 | 0002 | '\\[([^:]+?)\\]'
0033 | 0002 | '([+-]?[\\d\\.]+)(\\S+)'
0034 | 0002 | '[^%]+%[^.]+[.](compile)'
0035 | 0002 | '[&?]requestPayment($|=|&)'
0036 | 0002 | '[^%]+%testing[.](expect-failure|expect-success)'
0037 | 0001 | '["]'
0038 | 0001 | '[-:]'
0039 | 0001 | '[Yy]'
0040 | 0001 | '[x+]'
0041 | 0001 | "[^']+"
0042 | 0001 | '[().]'
0043 | 0001 | '([|&])'
0044 | 0001 | '[;,/-]'
0045 | 0001 | '[\t ]+'
0046 | 0001 | '~[^01]'
0047 | 0001 | '[\\-: ]'
0048 | 0001 | '([()| ])'
0049 | 0001 | '[\\s,;:]'
0050 | 0001 | '([\\x7F])'
0051 | 0001 | '[()\\134]'
0052 | 0001 | '[^\\w\\-]'
0053 | 0001 | "[\\s'\\\\]"
0054 | 0001 | '"([^ ]+?)"'
0055 | 0001 | '([$`\\\\])'
0056 | 0001 | '([\\t\\n])'
0057 | 0001 | '([\\{\\}])'
0058 | 0001 | '[ \\t]+\\n'
0059 | 0001 | '[ \r\n\t]+'
0060 | 0001 | '[\n\r\t ]+'
0061 | 0001 | '([+-]?\\d+)'
0062 | 0001 | '([\\w._-]+)'
0063 | 0001 | '([\\w\\d]+)'
0064 | 0001 | '[\\s.,;_-]+'
0065 | 0001 | '[,]?([^,=]+)='
0066 | 0001 | '[\\(\\)\\s,]+'
0067 | 0001 | '[^\\w\\s@+.-]'
0068 | 0001 | '\\([\\d,]+\\)'
0069 | 0001 | '^[ \\t\\n\\r]'
0070 | 0001 | '[RL]\\{(.+)\\}'
0071 | 0001 | '{{{([^{]+?)}}}'
0072 | 0001 | u'[\\000-\\037]'
0073 | 0001 | '(,\\n|[^\\n-])+'
0074 | 0001 | '([^.()]+\\.){5}'
0075 | 0001 | '<(![^-\\[]|\\?)'
0076 | 0001 | '[\\w\\d\\-_\\.]+'
0077 | 0001 | '([\\d.]+)([^\\s]+)'
0078 | 0001 | "'([^']+?)' \\(qv\\)"
0079 | 0001 | '[- \t:;,!+/\\"\'`]+'
0080 | 0001 | u'[_.,\\[\\]\\(\\):]'
0081 | 0001 | '[?\\&|!{}+~^()":*-]+'
0082 | 0001 | '[.:,\\s!?+=\\(\\)/-]+'
0083 | 0001 | '[\\r\\n\\t ]+[\\r\\n]+'
0084 | 0001 | '[$_]?(?:set|add)($|[A-Z_])'
0085 | 0001 | '[,;:\\(\\)\\[\\]\\{\\}<>]+'
0086 | 0001 | '^[\\w\\d\\.]+@[\\w\\d\\.]+'
0087 | 0001 | '[ _\\.-]+cd[ _\\.-]*([0-9a-d]+)'
0088 | 0001 | '([^!]+)(?:!([^+-]+)?([+-]\\S+)?)?'
0089 | 0001 | '([\\|\\{\\}\\\\\\.\\+\\[\\]\\(\\)])'
0090 | 0001 | '[\\w\\.\\-]+@[\\w\\.\\-]+\\.\\w\\w\\w'
0091 | 0001 | '[QA]?[:.]?\\d?\\d[:;.]\\d\\d[:;.]\\d\\d'
0092 | 0001 | '[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?'
0093 | 0001 | '^[\\s\\S]+?(?=[\\\\<!\\[_*`~$]|https?://| {2,}\\n|$)'
0094 | 0001 | '[^\\d]+ (\\d+)\\.(\\d+)\\.(\\d+)\\s*\\((?P<datetime>.+?)\\)\\s*(?P<type>[a-z]+)?'
0095 | 0001 | '^[^\\(\\[]+[^\\s](\\+|\\-|\\*|/|%|\\^|&|\\||=|<|>|>>|<<|\\+=|\\-=|\\*=|/=|%=|\\^=|&=|\\|=|==|<=|>=|>>=|<<=|!=|<>)[^\\s][^\\)\\]]+$'



cluster 7 stats:
nPatterns: 109.0
nProjects: 147
shortest: ()
Features:

1: LIT|a literal character | 14.229357798165138
2: CG|a capture group | 1.4220183486238531
3: ADD|one-or-more repetition | 1.128440366972477
4: CCC|custom character class | 0.7339449541284404
5: KLE|zero-or-more repetition | 0.5963302752293578
6: QST|zero-or-one repetition | 0.5779816513761468
7: RNG|chars within a range | 0.5321100917431193
8: PNG|named capture group | 0.5229357798165137
9: ANY|any non-newline char | 0.5137614678899083
10: OR|logical or | 0.42201834862385323
11: DEC|any of: 0123456789 | 0.3853211009174312
12: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.3211009174311927
13: NCG|group without capturing | 0.30275229357798167
14: SNG|exactly n repetition | 0.26605504587155965
15: NCCC|negated CCC | 0.25688073394495414
16: OPT|options wrapper | 0.23853211009174313
17: WRD|[a-zA-Z0-9\_] | 0.1743119266055046
18: STR|start-of-line | 0.14678899082568808
19: END|end-of-line | 0.11926605504587157
20: LZY|as few reps as possible | 0.11926605504587157
21: WNW|word/non-word boundary | 0.11926605504587157
22: NWSP|any non-whitespace | 0.11009174311926606
23: NLKB|sequence doesn't precede | 0.08256880733944955
24: NLKA|sequence doesn't follow  | 0.07339449541284404
25: DBB|$n\le x \le m$ repetition | 0.06422018348623854
26: LKB|matching sequence precedes | 0.06422018348623854
27: LKA|matching sequence follows | 0.03669724770642202
28: NWRD|non-word chars | 0.027522935779816515
29: BKR|match the $i^{th}$ CG | 0.01834862385321101
30: BKRN|references NCG | 0.009174311926605505
31: LWB|at least n repetition | 0.009174311926605505
32: NDEC|any non-decimal | 0.009174311926605505


0000 | 0015 | '()'
0001 | 0012 | '(?m)^\\.'
0002 | 0009 | '(?P<name>(.+))\\s+(?P<hexrgb>#[0-9a-fA-F]{6})'
0003 | 0008 | '(?i)b+'
0004 | 0008 | '(?P<a>x)'
0005 | 0008 | '(?P<unk>x)'
0006 | 0008 | '(?:;\\s*|\\s+)(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*;|(?:\\(|\\[|;)\\s*(\\b\\w{2}\\b(?:-\\b\\w{2}\\b)?)\\s*(?:\\]|\\)|;)'
0007 | 0007 | '(a)(b)?b'
0008 | 0007 | '(?:(?<!\\r)\\n)|(?:\\r(?!\\n))'
0009 | 0007 | '(?P<replace>(?P<type><(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))'
0010 | 0005 | '(.{60})'
0011 | 0005 | '(.+)\\!$'
0012 | 0005 | '(?<!\\\\),'
0013 | 0005 | '(final|stable)$'
0014 | 0005 | "(?:[-a-zA-Z0-9!$&'\\(\\)\\*+,;=._~]|%[a-zA-Z0-9]{2})+$"
0015 | 0004 | '&(?!\\#)'
0016 | 0004 | u'(?<!%)%(?!%)'
0017 | 0004 | '(?<!\\\\)((\\\\\\\\)*)\\\\n'
0018 | 0004 | '([=!]=)\\s*(None|False|True)'
0019 | 0004 | '(?<=^TARGET_BUILD_VARIANT=).*'
0020 | 0004 | '(tag:blogger.com,1999:blog-)(\\w*)'
0021 | 0004 | '(^|\\})(([^\\{\\:])+\\:)+([^\\{]*\\{)'
0022 | 0004 | '(\\s+|[^\\s\\w]*\\w+[^0-9\\W]-(?=\\w+[^0-9\\W])|(?<=[\\w\\!\\"\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'
0023 | 0003 | '`(.+?)`'
0024 | 0003 | '%(?:(?P<cn>[0-9]+)\\$)?(?P<width>[0-9]+)?(?:.(?P<pres>[0-9]+))?(?P<size>[hL]|(?:ll?))?(?P<type>[dciouxXefgpCSsn])'
0025 | 0002 | '%(.)'
0026 | 0002 | '(?s)>\\s+'
0027 | 0002 | '(^package:)|\\s'
0028 | 0002 | '(?m)^alias.*virtio'
0029 | 0002 | '(?i)handy(.*)nummer'
0030 | 0002 | '(?i)pager(.*)nummer'
0031 | 0002 | '(</?(?:ul|li)[^>]*>)'
0032 | 0002 | '(?sm)^! Emergency stop.*'
0033 | 0002 | '(?sm)\\s*Type X to quit.*'
0034 | 0002 | '(?:\\d{1,3}\\.){3}\\d{1,3}'
0035 | 0002 | '(?sm)\\A.*?!( LaTeX Error:)?'
0036 | 0002 | '(\\d+):.*virtio\\d+-input.\\d'
0037 | 0002 | '(?i)gesch\xc3\xa4fts(.*)nummer'
0038 | 0002 | '(?s)<failure (.*?)>.*?</failure>'
0039 | 0002 | '(\\*|_) (?=\\S) (.+?) (?<=\\S) \\1'
0040 | 0002 | '(?m)^alias\\s+scsi|(?m)^alias\\s+eth'
0041 | 0002 | '(?i)^(\\d+(?:\\.\\d+)?)([kMGTPEZY]?)$'
0042 | 0002 | '(?P<lhs>(\\s*)([\\w\\.]+)((\\s*,\\s*[\\w\\.]+)*))\\s*=\\s*%(?P<cmd>.*)'
0043 | 0002 | '([^:]*):\\s+scsi([0-9]+)\\s+channel=([0-9]+)\\s+id=([0-9]+)\\s+lun=([0-9]+)'
0044 | 0002 | '(WARNING|ERROR|INFO) \\(l.(?P<line>[0-9]+), c.(?P<column>[0-9]+)\\): (?P<rest>.*)'
0045 | 0002 | '((final|abstract)[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?class[ \t]+\\w+((implements|extends)\\w+)?'
0046 | 0002 | '(?P<year>[0-9]{4})(-(?P<month>[0-9]{1,2})(-(?P<day>[0-9]{1,2})((?P<separator>.)(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2})(:(?P<second>[0-9]{2})(\\.(?P<fraction>[0-9]+))?)?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?'
0047 | 0001 | '%|&#'
0048 | 0001 | '%(..)'
0049 | 0001 | '(--|/)'
0050 | 0001 | ':(?://)?'
0051 | 0001 | '(?<!\\\\)%'
0052 | 0001 | '(?i).+\\.nfo$'
0053 | 0001 | '(?i)<br[^>]*>'
0054 | 0001 | '/(?<=,)(?! )/'
0055 | 0001 | '(?<= line )\\d+'
0056 | 0001 | "(?i)\\b(D)('ye)\\b"
0057 | 0001 | '(string.)|(comment.)'
0058 | 0001 | u'(?s)<[^>]*>|&#?\\w+;'
0059 | 0001 | '(.+):([0-9]+)[:]{0,1}.*'
0060 | 0001 | '(?<!\\\\)[^"\\]\\[\\$]+'
0061 | 0001 | u'(?:(?:\n\r?)|^)( *)\\S'
0062 | 0001 | '(\\D|^)\\d{1,2}\\W*\\d00'
0063 | 0001 | '(?i)incorporated|(?i)inc.'
0064 | 0001 | '(AppKit|Foundation)\\.doc'
0065 | 0001 | '(module|def|class) (\\w*)'
0066 | 0001 | '(?<=nm|tt|ch)([0-9]{7})\\b'
0067 | 0001 | '(?i)<[a-z\\.&_0-9\\@\\-]+>'
0068 | 0001 | '((?:"[^"]+"|[^,"]+)+)\\s*,?'
0069 | 0001 | u'(?<![\\w])(\\d+)L(?![\\w])'
0070 | 0001 | u'(?x) \\( [^()]* \\b few \\b'
0071 | 0001 | '(?:\\d{2}:\\d{2}:\\d{2}) (.*)'
0072 | 0001 | '((?:<br />)+)(</(?:font|span)>)'
0073 | 0001 | '(.{8})(.{4})(.{4})(.{4})(.{12})'
0074 | 0001 | '(?P<clause>\\d+)_(?P<field>.+)$'
0075 | 0001 | '(src|href)\\=([\\\'"]?)/?files/'
0076 | 0001 | '(.+)[.](proto|impl|init|cleanup)$'
0077 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.py)?$'
0078 | 0001 | '(?<="v8_revision": ")([0-9]+)(?=")'
0079 | 0001 | '(?!__init__)[0-9a-zA-Z_]*(\\.pyc?)?$'
0080 | 0001 | '(?P<argkey>[^=]+)=(?P<argvalue>[^&]*)'
0081 | 0001 | '(-devel)|(-debuginfo)|(-static)|(-libs)'
0082 | 0001 | '(?P<whitespace>[ \n]*)(?P<entry>[^ \n]+)'
0083 | 0001 | '(?P<protocol>[a-z]+)://(?P<token>[0-9:]+)'
0084 | 0001 | '#loadfactor(\\s+(\\S+))?\\s+(\\d+\\.?\\d*)'
0085 | 0001 | '^{(?P<w>[^[\\]()]+)(?:\\[(?P<i>\\d+)\\])?}$'
0086 | 0001 | '(.+)(?:(?<!<br>)|(?<!<br />))\\n(?![#*\\s|])'
0087 | 0001 | '(?P<name>[a-zA-Z0-9_*]+)(?P<default>=.*?)?, '
0088 | 0001 | '(\\d{4})-(\\d{2})-(\\d{2})[\\s\t]*([0-9:, -]+)'
0089 | 0001 | '(\n?)-  ([a-zA-Z_.-]+)-script.py\n-  \\2.exe\n'
0090 | 0001 | '([\\$\\^\\*\\+\\.\\?\\{\\}\\[\\]\\(\\)\\|\\\\])'
0091 | 0001 | '(^\\(?(\\d{3})\\)?[- .]?(\\d{3})[- .]?(\\d{4})$)'
0092 | 0001 | '(?P<intDigits>\\d*)(?P<dot>\\.)(?P<fracDigits>\\d+)'
0093 | 0001 | '(?:aka|birth name) (<em>")(.*?)"(<br>|<\\/em>|<\\/td>)'
0094 | 0001 | '(?P<pid>\\d+)\\s+rename\\("[^"]*", "(?P<name>[^"]*)"\\)'
0095 | 0001 | '(takes [\\w ]+ )(\\d+)( arguments? \\()(\\d+)( given\\))'
0096 | 0001 | u'MatplotlibBox:\\(([\\d.]+)pt\\+([\\d.]+)pt\\)x([\\d.]+)pt'
0097 | 0001 | '(?m)^Conf ([^ ]+) \\(([^ ]+) ([^ ]+)(?: \\[([^\\]]+)\\])?\\)$'
0098 | 0001 | '(?P<heading>^\\s*(?P<hmarker>=+)(\\s)*.*(\\s)*(?P=hmarker)( )*$)'
0099 | 0001 | '(d  ((ext)?demo(needed)?|other)-\\d[.]\\d-py)\\d[.]\\d(-\\S+)?[.]egg'
0100 | 0001 | 'map\\.setCenter\\(new GLatLng\\(([-0-9.]+), ([-0-9.]+)\\), (\\d+)\\);'
0101 | 0001 | '(?P<integer>[-+]?[0-9]+)(?P<decimal>\\.[0-9]+)?(?P<exponent>e[-+]?[0-9]+)?'
0102 | 0001 | '(?i)(?:https?://)?(?:www\\.)?dailymotion\\.[a-z]{2,3}/video/([^_/]+)_([^/]+)'
0103 | 0001 | '[Ee]rr(or)?: (?P<error>.+?(Could not match (?P<near>.+?))?) at /.+?:(?P<line>\\d+)?'
0104 | 0001 | '(?P<protocol>PYROLOC|PYROLOCSSL)://(?P<hostname>[^\\s:]+):?(?P<port>\\d+)?/(?P<name>\\S*)'
0105 | 0001 | '(?x)\n            [\\r\\n]+(\\S+)\n            [\\r\\n]+(\\S+)\n            [\\r\\n]+.+[\\r\\n]+(\\S+)\n'
0106 | 0001 | '(?:<FONT SIZE="-1">|<font face="arial,helvetica" size=2><(?:B|I)>)([^<]*?)/([^<]*?)(?:</(?:B|I)></font>|</FONT>)'
0107 | 0001 | '(NIST|BLEU) score using\\s+\\d+-grams = ([0-9.]+) for system "(.*)" on document "(.*)" \\((\\d+) segments, (\\d+) words\\)'
0108 | 0001 | '(?x)\n            [\\r\\n]+(\\S+)\\ \n            (\\S+)\\ +!\\ Time\\ domain.\\ *[\\r\\n]+\n            (\\S+)\\ +!\\ Number\\ of\\ tiers.\\ *[\\r\\n]+"\n'



cluster 8 stats:
nPatterns: 84.0
nProjects: 125
shortest: ^
Features:

1: LIT|a literal character | 21.035714285714285
2: STR|start-of-line | 0.8214285714285714
3: CG|a capture group | 0.5952380952380952
4: ADD|one-or-more repetition | 0.5833333333333334
5: ANY|any non-newline char | 0.4642857142857143
6: END|end-of-line | 0.39285714285714285
7: DEC|any of: 0123456789 | 0.25
8: QST|zero-or-one repetition | 0.25
9: KLE|zero-or-more repetition | 0.21428571428571427
10: OR|logical or | 0.19047619047619047
11: RNG|chars within a range | 0.16666666666666666
12: NCCC|negated CCC | 0.13095238095238096
13: CCC|custom character class | 0.11904761904761904
14: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.11904761904761904
15: SNG|exactly n repetition | 0.10714285714285714
16: WRD|[a-zA-Z0-9\_] | 0.09523809523809523
17: NCG|group without capturing | 0.047619047619047616
18: NWSP|any non-whitespace | 0.03571428571428571
19: NDEC|any non-decimal | 0.023809523809523808
20: PNG|named capture group | 0.023809523809523808
21: LZY|as few reps as possible | 0.011904761904761904


0000 | 0017 | '--'
0001 | 0013 | '^http://'
0002 | 0008 | '^DYNAMIC SYMBOL TABLE'
0003 | 0007 | '^(acc|borland|como|cw|dmc|darwin|gcc|hp_cxx|intel|kylix|vc|mgw|qcc|sun|vacpp)\\d*$'
0004 | 0004 | '^https?://bitbucket.org/'
0005 | 0004 | '^http://testserver/somewhere/else/\\?c=\\d+#baz$'
0006 | 0004 | '^http://testserver/somewhere/else/\\?foo=bar&c=\\d+#baz$'
0007 | 0004 | '^#define SQLITE_VERSION\\D*(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?\\D*'
0008 | 0004 | '^(DISTRIB_(?:ID|RELEASE|CODENAME|DESCRIPTION))=(?:\'|")?([\\w\\s\\.-_]+)(?:\'|")?'
0009 | 0004 | '^(WebSocket-Protocol: [\\x20-\\x7e]+\\r\\n)?(Cookie: [^\\r]*\\r\\n)*(Cookie2: [^\\r]*\\r\\n)?(Cookie: [^\\r]*\\r\\n)*\\r\\n'
0010 | 0003 | '^/dev/'
0011 | 0002 | '^'
0012 | 0002 | '^/admin'
0013 | 0002 | '^Vendor:'
0014 | 0002 | '^compile'
0015 | 0002 | '  http://'
0016 | 0002 | '^http(s)?://'
0017 | 0002 | '^restorecon reset (.+) context (.+)->(.+)'
0018 | 0002 | '^(fails|needs-focus|random|skip|asserts|fuzzy)'
0019 | 0002 | '^/(artist|release|track|label|release-group)/([^/]*)$'
0020 | 0001 | '^p'
0021 | 0001 | u'-h'
0022 | 0001 | '^.__'
0023 | 0001 | '^cm_'
0024 | 0001 | u'--+'
0025 | 0001 | '^KEY_'
0026 | 0001 | '^enum'
0027 | 0001 | '^Shift'
0028 | 0001 | '^name$'
0029 | 0001 | '^.const'
0030 | 0001 | '^COMPND'
0031 | 0001 | '^ChkTeX'
0032 | 0001 | '^Tracks'
0033 | 0001 | '^results'
0034 | 0001 | '^dim4\\s+'
0035 | 0001 | '^new file'
0036 | 0001 | '^private_'
0037 | 0001 | '^/cgi-bin/'
0038 | 0001 | '^SEQLENGTH'
0039 | 0001 | '^.htaccess$'
0040 | 0001 | 'AuthContext$'
0041 | 0001 | '^folder.jpg$'
0042 | 0001 | '(/s/https?:)/+'
0043 | 0001 | '^<Actions>(.+)$'
0044 | 0001 | '^(http|https)://'
0045 | 0001 | '^/favicon\\.ico$'
0046 | 0001 | '^/var/log/[^/]+$'
0047 | 0001 | '^JSC::Identifier$'
0048 | 0001 | '^parrot_string_t$'
0049 | 0001 | '^(https?|ftp):\\/\\/'
0050 | 0001 | '^dhcp\\.pool\\.start$'
0051 | 0001 | '^/v2/images/([^\\/]+)$'
0052 | 0001 | '^dhcp\\.scope\\.start$'
0053 | 0001 | '^(test|xen|kvm|vmware)$'
0054 | 0001 | '^....:17EF:6009\\.....$'
0055 | 0001 | '^translator[-_]credits$'
0056 | 0001 | '^std::__debug::deque<.*>$'
0057 | 0001 | 'dhcp.option.ntp_server.\\d'
0058 | 0001 | '^HTTP/\\d\\.\\d\\s+\\d+\\s*'
0059 | 0001 | '^nic\\.(\\d+)\\.ipv4_address'
0060 | 0001 | '^/etc/(g?shadow-?|securetty)$'
0061 | 0001 | 'http://en.wikipedia.org/wiki/'
0062 | 0001 | '//\\w+\\.4chan\\.org/\\w+/src/'
0063 | 0001 | '^diff --git a/(\\S+) b/(\\S+)$'
0064 | 0001 | '^std::__debug::unordered_map<.*>$'
0065 | 0001 | '^cert=(?P<nickname>[0-9a-zA-Z_ ]+)'
0066 | 0001 | '^std::_Rb_tree_const_iterator<.*>$'
0067 | 0001 | '^#synchronous_standby_names\\s*=.*$'
0068 | 0001 | '^GlueForeignKey: GlueCEUniqueID=(.*):'
0069 | 0001 | 'http://www.polleverywhere.com/\\w+/\\S+'
0070 | 0001 | '^https?://bitbucket.org/([^/]+/[^/]+)/?$'
0071 | 0001 | 'https?://github.com/([^/]+/[^/]+)/tags/?$'
0072 | 0001 | '^!!NSFW!! -> http://rule34\\.xxx/.* <- !!NSFW!!$'
0073 | 0001 | '<a href="(http://\\w+.craigslist.org/)">([\\w ]+)</a>'
0074 | 0001 | '^http://node-todobin\\.herokuapp\\.com/list/[a-z0-9]+$'
0075 | 0001 | '(-----BEGIN CERTIFICATE-----\\n.+?\\n-----END CERTIFICATE-----)'
0076 | 0001 | '^/(usr/)?(s?bin|games|libexec(/.+)?|(lib(64)?|share)/.+)/[^/]+$'
0077 | 0001 | 'jobfailures\\.jsp|jobtracker\\.jsp|jobdetails\\.jsp|jobtasks\\.jsp'
0078 | 0001 | "^Comdat:\\s+(.+)\\s+SEGMENT NONE '(\\w+)'\\s+([0-9a-fA-F]+)\\s+bytes$"
0079 | 0001 | '^Multiple results found; try http://search\\.vt\\.edu/search/people\\.html\\?q=.*$'
0080 | 0001 | '^No line number information available for address\\s+0x[0-9a-f]+ <(?P<sym>\\w+)\\+\\d+>'
0081 | 0001 | '^/((usr/)?s?bin|etc/(rc\\.d/init\\.d|X11/xinit\\.d|cron\\.(hourly|daily|monthly|weekly)))/'
0082 | 0001 | '^timestamp: [a-zA-Z]{3} (\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}) ([-+])(\\d{2})(\\d{2})$'
0083 | 0001 | 'FooDeathTest\\.\n  Test1\nFoo\\.\n  Bar1\n  Bar2\n  DISABLED_Bar3\nFooBar\\.\n  Baz\nFooTest\\.\n  Test1\n  DISABLED_Test2\n  Test3\n'



cluster 9 stats:
nPatterns: 77.0
nProjects: 121
shortest: User:
Features:

1: LIT|a literal character | 19.506493506493506
2: ADD|one-or-more repetition | 0.5064935064935064
3: CG|a capture group | 0.33766233766233766
4: DEC|any of: 0123456789 | 0.2077922077922078
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.18181818181818182
6: ANY|any non-newline char | 0.15584415584415584
7: CCC|custom character class | 0.14285714285714285
8: RNG|chars within a range | 0.14285714285714285
9: OR|logical or | 0.12987012987012986
10: PNG|named capture group | 0.06493506493506493
11: WRD|[a-zA-Z0-9\_] | 0.06493506493506493
12: QST|zero-or-one repetition | 0.05194805194805195
13: STR|start-of-line | 0.05194805194805195
14: END|end-of-line | 0.03896103896103896
15: NWSP|any non-whitespace | 0.03896103896103896
16: KLE|zero-or-more repetition | 0.012987012987012988
17: LZY|as few reps as possible | 0.012987012987012988
18: NCCC|negated CCC | 0.012987012987012988
19: NCG|group without capturing | 0.012987012987012988


0000 | 0038 | 'stop_session\\)\\('
0001 | 0008 | 'SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE'
0002 | 0007 | 'SECRET|PASSWORD|PROFANITIES_LIST'
0003 | 0006 | '-isysroot\\s+\\S+(\\s|$)'
0004 | 0005 | '#define NODE_MAJOR_VERSION'
0005 | 0004 | '@@PACKAGE_REVISION@@'
0006 | 0003 | '_F2PY_STRING_CONSTANT_\\d+_'
0007 | 0003 | 'browser.search.order.([1-9])'
0008 | 0003 | '(^\\s+Invalid write of size )\\d+'
0009 | 0003 | 'Change \\d+ by (?P<who>\\S+)@\\S+ on (?P<when>.+)$'
0010 | 0002 | 'DEFAULT'
0011 | 0002 | 'EXAMPLE'
0012 | 0002 | 'QEMU_PID'
0013 | 0002 | 'WIN_VIRTIO'
0014 | 0002 | 'sessionToken'
0015 | 0002 | 'files? changed'
0016 | 0002 | 'test_file_commit1'
0017 | 0002 | 'test_file_commit2'
0018 | 0002 | '/(developers/)?apps/'
0019 | 0002 | 'Subversion Revision:'
0020 | 0002 | 'G_CONST_RETURN |const '
0021 | 0002 | 'dot version ([\\d\\.]+)'
0022 | 0002 | 'Last Changed Rev: (\\d+)'
0023 | 0002 | '[&?]versionId=([^&]+)($|=|&)'
0024 | 0002 | 'This is file for test of tar-in.'
0025 | 0001 | 'User:'
0026 | 0001 | 'pseudo'
0027 | 0001 | 'Species'
0028 | 0001 | 'Vote_Bord'
0029 | 0001 | '{version}'
0030 | 0001 | 'mean_FA\\.'
0031 | 0001 | '##VERSION##'
0032 | 0001 | 'MVI_\\d+.AVI'
0033 | 0001 | 'create_tasks'
0034 | 0001 | 'iax2 peers \\['
0035 | 0001 | 'novoebenevo.ru'
0036 | 0001 | '%search_string%'
0037 | 0001 | 'EMAIL_PROVIDER='
0038 | 0001 | 'REPLACEHEREDUDE'
0039 | 0001 | 'CONFIGEDITORHERE'
0040 | 0001 | 'METASPLOIT_PATH='
0041 | 0001 | 'install_dir .+\n'
0042 | 0001 | 'DBAPI2_PLACEHOLDER'
0043 | 0001 | 'Disp. SEDE:\\s\\d+'
0044 | 0001 | 'Passed all 0 tests'
0045 | 0001 | 'Simple_1Of_1unk_svc'
0046 | 0001 | 'Simple_1Of_1unk_host'
0047 | 0001 | '^New Revision: (\\d+)'
0048 | 0001 | '%20Mac%20|mac_valgrind'
0049 | 0001 | '#define PATCH_LEVEL\\s+1'
0050 | 0001 | '={"pv" : "(?P<n>[0-9]+)"}'
0051 | 0001 | 'mk_individual_id_t=(\\d+)'
0052 | 0001 | 'GoogleDMToken token=(\\w+)'
0053 | 0001 | '^height.should be ([0-9]+)'
0054 | 0001 | 'NUMA node\\(s\\):\\s+(\\d+)'
0055 | 0001 | 'Sparse is better than dense'
0056 | 0001 | 'billtype=\\w\\w&billno=\\d+'
0057 | 0001 | 'event_teamlist|matchresults'
0058 | 0001 | '#define Py_([a-z_]+) ([0-9]+)'
0059 | 0001 | 'wx_major_version_number=(\\d+)'
0060 | 0001 | 'LINUX_METERPRETER_MULTI_SCRIPT='
0061 | 0001 | 'LL_VERSION_BUILD\\s=\\s([0-9]+)'
0062 | 0001 | '@(?:end|implementation|protocol)'
0063 | 0001 | 'IMP_VERSION_MAJOR\\s=\\s([0-9]+)'
0064 | 0001 | 'IMP_VERSION_PATCH\\s=\\s([0-9]+)'
0065 | 0001 | '<viewer version_patch="(\\d+)" />'
0066 | 0001 | 'KVM_TEST_VIRTIO_NETWORK_INSTALLER'
0067 | 0001 | '^RUNTIME_FUNCTION\\(Runtime_(\\w+)'
0068 | 0001 | '#define\\swxMAJOR_VERSION\\s+(\\d+)'
0069 | 0001 | 'developmentRegion = (?P<region>.+);'
0070 | 0001 | "Warning--I didn't find a database entry"
0071 | 0001 | 'database version (?P<version>.+?)\\.?\n'
0072 | 0001 | 'Chrome|Gecko|Microsoft|Mozilla|Safari|WebKit'
0073 | 0001 | "This module \\'\\w+\\' is auto-generated with f2py"
0074 | 0001 | 'membase-server-enterprise_x86(_64)?_([.a-zA-Z0-9]*)'
0075 | 0001 | "Couldn't start forwarder server for port spec: (\\d+):(\\d+)"
0076 | 0001 | 'test_|LookupTable|Types|SystemConfiguration|gannet|Socket|Timings|cs_'



cluster 10 stats:
nPatterns: 4.0
nProjects: 32
shortest: ,
Features:

1: LIT|a literal character | 1.5
2: ADD|one-or-more repetition | 0.5
3: ANY|any non-newline char | 0.25
4: LZY|as few reps as possible | 0.25
5: NWSP|any non-whitespace | 0.25


0000 | 0030 | ','
0001 | 0005 | ',\\S'
0002 | 0002 | '>.+?:'
0003 | 0001 | u',,+'



cluster 11 stats:
nPatterns: 20.0
nProjects: 31
shortest: ^(?P<x>\d+)?(?:x(?P<y>\d+))?$
Features:

1: LIT|a literal character | 11.2
2: PNG|named capture group | 3.05
3: DEC|any of: 0123456789 | 2.85
4: ADD|one-or-more repetition | 2.15
5: QST|zero-or-one repetition | 1.8
6: CCC|custom character class | 1.75
7: CG|a capture group | 1.05
8: RNG|chars within a range | 1.05
9: STR|start-of-line | 1.05
10: END|end-of-line | 0.85
11: SNG|exactly n repetition | 0.65
12: OR|logical or | 0.3
13: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.25
14: ANY|any non-newline char | 0.2
15: DBB|$n\le x \le m$ repetition | 0.2
16: WRD|[a-zA-Z0-9\_] | 0.2
17: KLE|zero-or-more repetition | 0.1
18: NCCC|negated CCC | 0.1
19: NCG|group without capturing | 0.1
20: NLKA|sequence doesn't follow  | 0.1
21: LWB|at least n repetition | 0.05
22: LZY|as few reps as possible | 0.05


0000 | 0012 | '^(?P<number>\\d{7})(?P<check>\\d)$'
0001 | 0011 | '^(?P<initial>\\d{1})(?P<yy>\\d\\d)(?P<mm>\\d\\d)(?P<dd>\\d\\d)(?P<mid>\\d{4})(?P<checksum>\\d{1})'
0002 | 0005 | '^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<subminor>\\d+))((rc(?P<release_candidate>\\d+))|dev)?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'
0003 | 0003 | u'^(?P<number>\\d{7})(?P<check>\\d)$'
0004 | 0003 | u'^(?P<number>\\d{1,8})-?(?P<check>\\d)$'
0005 | 0003 | '^\\s+(?P<conn>\\d+)\\s+(?P<acc>\\d+)\\s+(?P<req>\\d+)'
0006 | 0003 | u'^(?P<residence>\\d{10})(?P<origin>\\w{1,3})[-\\ ]?(?P<birthday>\\d{7})[-\\ ]?(?P<validity>\\d{7})[-\\ ]?(?P<checksum>\\d{1})$'
0007 | 0002 | '^(Win|PPC Mac OS X|Linux(?! x86_64))'
0008 | 0002 | '^(?P<date>\\d{4}-\\d{2}-\\d{2})\\s+(?P<name>.+?)\\s+<(?P<email>[^<>]+)>$'
0009 | 0001 | '^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$'
0010 | 0001 | '^(?P<bytes>\\d+)(?P<unit>[gmkb]?)$'
0011 | 0001 | '^/?(?P<a>\\w+)(/(?P<c>\\w+)(/(?P<f>\\w+))?)?$'
0012 | 0001 | '^(\\d+)(?:([yzafpnumcdhkKMGTPEZY])(i)?)?([Bb])?$'
0013 | 0001 | '^(?P<neg>-?)---(?P<D>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0014 | 0001 | '^(?P<area>1\\d1|11\\d|8\\d\\d)(?P<area2>\\d{3})(?P<station>\\d+)$'
0015 | 0001 | '^(?P<user>[ugo]{0,3})(?P<action>[\\+\\-])(?P<value>[rwxst]{1,3})$'
0016 | 0001 | '^(?P<neg>-?)(?P<Y>\\d{4,})-(?P<M>\\d\\d)(?P<tz>Z|([-+]\\d\\d:\\d\\d))?$'
0017 | 0001 | '^(?P<username>[A-Za-z0-9_\\.-]+@)?(?P<hostname>[A-Za-z0-9_\\.-]+):(?P<path>.*)'
0018 | 0001 | '^(?!^(PRN|AUX|CLOCK\\$|NUL|CON|COM\\d|LPT\\d|\\..*)(\\..+)?$)[^\\x00-\\x1f\\\\?*:\\";|/]+$'
0019 | 0001 | '^(?P<sign>[+-])?P(?P<years>[0-9]+([,.][0-9]+)?Y)?(?P<months>[0-9]+([,.][0-9]+)?M)?(?P<weeks>[0-9]+([,.][0-9]+)?W)?(?P<days>[0-9]+([,.][0-9]+)?D)?((?P<separator>T)(?P<hours>[0-9]+([,.][0-9]+)?H)?(?P<minutes>[0-9]+([,.][0-9]+)?M)?(?P<seconds>[0-9]+([,.][0-9]+)?S)?)?$'



cluster 12 stats:
nPatterns: 39.0
nProjects: 26
shortest: xvd
Features:

1: LIT|a literal character | 18.923076923076923
2: DEC|any of: 0123456789 | 2.1538461538461537
3: CG|a capture group | 0.8974358974358975
4: OR|logical or | 0.38461538461538464
5: WRD|[a-zA-Z0-9\_] | 0.28205128205128205
6: CCC|custom character class | 0.20512820512820512
7: RNG|chars within a range | 0.20512820512820512
8: ANY|any non-newline char | 0.15384615384615385
9: NWRD|non-word chars | 0.15384615384615385
10: DBB|$n\le x \le m$ repetition | 0.1282051282051282
11: ADD|one-or-more repetition | 0.10256410256410256
12: QST|zero-or-one repetition | 0.05128205128205128
13: WNW|word/non-word boundary | 0.05128205128205128
14: END|end-of-line | 0.02564102564102564
15: KLE|zero-or-more repetition | 0.02564102564102564
16: SNG|exactly n repetition | 0.02564102564102564
17: STR|start-of-line | 0.02564102564102564


0000 | 0004 | '\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'
0001 | 0004 | '^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d$'
0002 | 0003 | 'xvd'
0003 | 0002 | '\\xf6'
0004 | 0002 | '\\bcsc\\b'
0005 | 0001 | '\\d.\\d.\\d'
0006 | 0001 | '\x1b\\[[0]{0,1}m'
0007 | 0001 | '\xc5\x9b|\xc5\x9a'
0008 | 0001 | '\\d\\d-\\w\\w\\w-\\d\\d'
0009 | 0001 | '.\\d+\\.\\d+\\.\\d+\\.\\d+'
0010 | 0001 | '\\W\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0011 | 0001 | '\\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\\W'
0012 | 0001 | '\\W\xd1\x81\xd0\xb7\xd0\xb0\xd0\xbe\\W'
0013 | 0001 | '\xe1\xf9\xf2\xe4&nbsp;(\\d\\d):(\\d\\d)'
0014 | 0001 | '[uU]?[rR]?(\\"\\"\\"|\\\'\\\'\\\'|\\"|\\\')'
0015 | 0001 | '[\\x00-\\x08\\x0B-\\x0C\\x0E-\\x1F\\x7F-\\xFF]'
0016 | 0001 | '\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d'
0017 | 0001 | '(\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0018 | 0001 | '\xd0\xb0\xd0\xbb\xd1\x82\xd1\x83\xd1\x84\xd1\x8c\xd0\xb5\xd0\xb2\xd0\xbe'
0019 | 0001 | '\xd0\xb2\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe'
0020 | 0001 | '(\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)'
0021 | 0001 | '\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xbe\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0022 | 0001 | '\xd1\x82\xd1\x83\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0023 | 0001 | '\xd0\x98\xd0\xb7\xd0\xb1\xd1\x80\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \\((.*)\\)<\\/a>'
0024 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w>'
0025 | 0001 | '\xd0\xbc\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0026 | 0001 | '\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x86\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xbe\xd1\x81\xd1\x82'
0027 | 0001 | '\xd1\x84\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xba'
0028 | 0001 | '\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)'
0029 | 0001 | '\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xb0\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0030 | 0001 | '\xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0031 | 0001 | '\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0032 | 0001 | '<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>--<(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d) [A-Z]\\w\\w (\\d\\d):(\\d\\d)>'
0033 | 0001 | '\xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd1\x8c\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0'
0034 | 0001 | '(\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\\.)'
0035 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe'
0036 | 0001 | '\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe-\xd1\x80\xd0\xb0\xd0\xb7\xd1\x83\xd0\xbc\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0037 | 0001 | '(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd1\x81\xd1\x82\xd0\xb0\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)'
0038 | 0001 | '(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)'



cluster 13 stats:
nPatterns: 2.0
nProjects: 18
shortest: #
Features:

1: LIT|a literal character | 9.0
2: KLE|zero-or-more repetition | 5.0
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 5.0
4: ADD|one-or-more repetition | 2.0
5: CCC|custom character class | 2.0
6: CG|a capture group | 2.0
7: DEC|any of: 0123456789 | 2.0
8: WRD|[a-zA-Z0-9\_] | 1.5
9: NCG|group without capturing | 0.5
10: QST|zero-or-one repetition | 0.5


0000 | 0017 | '#'
0001 | 0001 | '#\\s+User@Host:\\s+(?:([\\w\\d]+))?\\s*\\[\\s*([\\w\\d]+)\\s*\\]\\s*@\\s*([\\w\\d]*)\\s*\\[\\s*([\\d.]*)\\s*\\]'



cluster 14 stats:
nPatterns: 9.0
nProjects: 16
shortest: /$
Features:

1: LIT|a literal character | 16.77777777777778
2: ADD|one-or-more repetition | 0.6666666666666666
3: ANY|any non-newline char | 0.4444444444444444
4: CG|a capture group | 0.4444444444444444
5: END|end-of-line | 0.4444444444444444
6: OR|logical or | 0.3333333333333333
7: QST|zero-or-one repetition | 0.3333333333333333
8: DBB|$n\le x \le m$ repetition | 0.2222222222222222
9: DEC|any of: 0123456789 | 0.2222222222222222
10: KLE|zero-or-more repetition | 0.1111111111111111
11: LKA|matching sequence follows | 0.1111111111111111
12: LZY|as few reps as possible | 0.1111111111111111
13: NCCC|negated CCC | 0.1111111111111111
14: NCG|group without capturing | 0.1111111111111111
15: WRD|[a-zA-Z0-9\_] | 0.1111111111111111


0000 | 0004 | '/$'
0001 | 0003 | '//+'
0002 | 0002 | '/\\.svn/?'
0003 | 0002 | '/usr/bin/qemu-system-x86_64 -machine accel=kvm'
0004 | 0001 | '/robots.txt'
0005 | 0001 | '/{1,2}.*?(?=/{1,2}|$)'
0006 | 0001 | '/lib(64)?/(.+/)?lib[^/]+\\.so$'
0007 | 0001 | '/(en-US|es-ES)/firefox/addon/(\\d+)/$'
0008 | 0001 | '//.\\.thumbs\\.4chan\\.org/\\w+/thumb/\\d+s\\.(?:jpg|gif|png|jpeg)'



cluster 15 stats:
nPatterns: 9.0
nProjects: 15
shortest:   
Features:

1: LIT|a literal character | 103.66666666666667
2: ANY|any non-newline char | 2.888888888888889
3: CG|a capture group | 1.2222222222222223
4: KLE|zero-or-more repetition | 1.1111111111111112
5: PNG|named capture group | 0.8888888888888888
6: CCC|custom character class | 0.7777777777777778
7: DEC|any of: 0123456789 | 0.6666666666666666
8: QST|zero-or-one repetition | 0.6666666666666666
9: ADD|one-or-more repetition | 0.5555555555555556
10: OR|logical or | 0.5555555555555556
11: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 0.5555555555555556
12: LZY|as few reps as possible | 0.3333333333333333
13: ENDZ|absolute end of string | 0.1111111111111111
14: LKA|matching sequence follows | 0.1111111111111111
15: STR|start-of-line | 0.1111111111111111


0000 | 0003 | '  '
0001 | 0003 | '        # A numeric string consists of:\n#    \\s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\\d|\\.\\d)              # ...a number (with at least one digit)\n        (?P<int>\\d*)             # having a (possibly empty) integer part\n        (\\.(?P<frac>\\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \\s*\n    \\Z\n'
0002 | 0002 | 'LR Number:'
0003 | 0002 | '<\\?xml\n            (   # strict ordering is reqd but we\'ll be liberal here\n                \\s+version=[\'"](?P<ver>.*?)[\'"]\n            |   \\s+encoding=[\'"](?P<enc>.*?)[\'"]\n            )+\n            .*? # other possible junk\n            \\s*\\?>\n        '
0004 | 0001 | ' ( +)|^ '
0005 | 0001 | ' |,|"|=|[|]'
0006 | 0001 | '        Log text 1 \\(issue 321\\).'
0007 | 0001 | ' xmlns:xi="http://www.w3.org/2001/XInclude"'
0008 | 0001 | ' border-color : #e7d796;margin-bottom : 1em; color : #9a8c59;">Article note: (.*)</div>'



cluster 16 stats:
nPatterns: 2.0
nProjects: 5
shortest: and
Features:

1: LIT|a literal character | 3.5


0000 | 0003 | 'and'
0001 | 0001 | 'abcd'



cluster 17 stats:
nPatterns: 2.0
nProjects: 4
shortest: .{1,2047}
Features:

1: LIT|a literal character | 5.0
2: ANY|any non-newline char | 0.5
3: DBB|$n\le x \le m$ repetition | 0.5


0000 | 0003 | u'.{1,2047}'
0001 | 0001 | '1234567890'



cluster 18 stats:
nPatterns: 2.0
nProjects: 4
shortest: ^ *(.*) *( *) *$
Features:

1: LIT|a literal character | 6.0
2: KLE|zero-or-more repetition | 5.5
3: ANY|any non-newline char | 2.0
4: CG|a capture group | 2.0
5: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 1.0
6: END|end-of-line | 0.5
7: LZY|as few reps as possible | 0.5
8: STR|start-of-line | 0.5


0000 | 0003 | '^ *(.*) *( *) *$'
0001 | 0001 | '.*\\((.*)(\\s*Format*\\s*)\\).*?'



cluster 19 stats:
nPatterns: 5.0
nProjects: 4
shortest: DSNIFF=ON
Features:

1: LIT|a literal character | 12.6
2: CG|a capture group | 0.4
3: ADD|one-or-more repetition | 0.2
4: ANY|any non-newline char | 0.2
5: END|end-of-line | 0.2
6: LZY|as few reps as possible | 0.2
7: OR|logical or | 0.2
8: QST|zero-or-one repetition | 0.2


0000 | 0001 | 'DSNIFF=ON'
0001 | 0001 | 'diff --git a'
0002 | 0001 | '.+?(diff --git a)'
0003 | 0001 | 'This is makeindex'
0004 | 0001 | '_(dir|file|path)s?$'



cluster 20 stats:
nPatterns: 2.0
nProjects: 4
shortest: https?://([^/]*?)(/.*)?
Features:

1: LIT|a literal character | 17.5
2: KLE|zero-or-more repetition | 5.5
3: WSP|\textbackslash t \textbackslash n \textbackslash r \textbackslash b \textbackslash f or space | 3.5
4: ANY|any non-newline char | 2.0
5: PNG|named capture group | 2.0
6: CG|a capture group | 1.5
7: QST|zero-or-one repetition | 1.5
8: NCCC|negated CCC | 1.0
9: ADD|one-or-more repetition | 0.5
10: LZY|as few reps as possible | 0.5
11: OR|logical or | 0.5


0000 | 0003 | 'DOCTYPE\\s+(?P<name>[^\\s]*)(\\s*PUBLIC\\s*"(?P<publicId>.*)"\\s*"(?P<systemId1>.*)"|\\s*SYSTEM\\s*"(?P<systemId2>.*)")?'
0001 | 0001 | 'https?://([^/]*?)(/.*)?'



cluster 21 stats:
nPatterns: 4.0
nProjects: 3
shortest: _R1
Features:

1: LIT|a literal character | 3.5


0000 | 0001 | '_R1'
0001 | 0001 | 'url'
0002 | 0001 | '_L3\\.'
0003 | 0001 | '_MD\\.'



cluster 22 stats:
nPatterns: 3.0
nProjects: 3
shortest: z
Features:

1: LIT|a literal character | 13.0
2: CCC|custom character class | 0.6666666666666666
3: ANY|any non-newline char | 0.3333333333333333


0000 | 0001 | 'z'
0001 | 0001 | 'zc.buildout[.]egg-link'
0002 | 0001 | 'mozilla\\.[com|net|org]'



cluster 23 stats:
nPatterns: 1.0
nProjects: 2
shortest: idle
Features:

1: LIT|a literal character | 4.0


0000 | 0002 | 'idle'



