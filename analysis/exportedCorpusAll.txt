0	\s+
1	\s
2	\d+
3	[\x80-\xff]
4	\nmd5_data = {\n([^}]+)}
5	\\(.)
6	([\\"]|[^\ -~])
7	(-?(?:0|[1-9]\d*))(\.\d+)?([eE][-+]?\d+)?
8	[^]]+?\] +([0-9.]+): (\w+) <-(\w+)
9	.*rlen=([0-9]+)
10	<([^>]*)>: \[0x([0-9a-f]+)-0x([0-9a-f]+)\]
11	[\x00-\x1f\\"\b\f\n\r\t]
12	\W
13	\s*,\s*
14	^\d+$
15	^\s*$
16	[a-zA-Z][-_.:a-zA-Z0-9]*
17	(\s+)
18	(?m)^(?!$)
19	 *$
20	(?m)^\s*?$
21	\n        # Grab the traceback header.  Different versions of Python have\n        # said different things on the first traceback line.\n        ^(?P<hdr> Traceback\ \(\n            (?: most\ recent\ call\ last\n            |   innermost\ last\n            ) \) :\n        )\n        \s* $                # toss trailing whitespace on the header.\n        (?P<stack> .*?)      # don't blink: absorb stuff until...\n        ^ (?P<msg> \w+ .*)   #     a line *starts* with alphanum.\n        
22	(^|.*:)\s*\w*("|\')
23	\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n            (?:\n           [ ]*  \.\.\. .*)*)  # PS2 lines\n        \n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*>>>)  # Not a line starting with PS1\n                     .*$\n?       # But any other line\n                  )*)\n        
24	\n
25	^[ ]*(#.*)?$
26	(?m)^[ ]*(?=\n)
27	<doctest (?P<name>[\w\.]+)\[(?P<examplenum>\d+)\]>$
28	[^:]*:
29	^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
30	([\x80-\x9f])
31	^\w+$
32	\(\*
33	alloc_fabric_acl\)\(
34	close_session\)\(
35	fall_back_to_erl0\)\(
36	get_cmd_state\)\(
37	get_default_depth
38	get_fabric_name
39	get_fabric_proto_ident
40	get_pr_transport_id\)\(
41	get_pr_transport_id_len\)\(
42	get_tag
43	get_task_tag\)\(
44	get_wwn
45	parse_pr_out_transport_id\)\(
46	queue_data_in\)\(
47	release_fabric_acl\)\(
48	sess_get_index\)\(
49	sess_logged_in\)\(
50	set_default_node_attributes\)\(
51	shutdown_session\)\(
52	stop_session\)\(
53	struct target_core_fabric_ops {
54	tpg_get_inst_index\)\(
55	write_pending\)\(
56	write_pending_status\)\(
57	coding[:=]\s*([-\w.]+)
58	\S
59	queue_status\)\(
60	queue_tm_rsp\)\(
61	(<[^<>]*)/>
62	<!\s+([^<>]*)>
63	[^\w\s-]
64	is_state_remove\)\(
65	-
66	(\d+)
67	[-\s]+
68	^[a-f0-9]{40}$
69	:
70	\w+
71	get_fabric_sense_len\)\(
72	set_fabric_sense_len\)\(
73	,
74	/
75	\s*
76	^[a-zA-Z0-9_]+$
77	^\S+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9._-]+$
78	<.*?>
79	\r\n|\r|\n
80	^<\?.*encoding=[\'"](.*?)[\'"].*\?>
81	(?:\r\n)?[ \t]+
82	.
83	>
84	^[0-9]+$
85	^\w+://
86	//.*
87	[ \(\)<>@,;:\\"/\[\]\?=]
88	\W+
89	\n{2,}
90	^\s+
91	 
92	&(#\d+|#x[0-9a-fA-F]+|\w+);
93	(((?<=[a-z])[A-Z])|([A-Z](?![A-Z]|$)))
94	[?/:|]+
95	[\x80-\xff]
96	\r(?!\n)|(?<!\r)\n
97	^(?:\s*(?:,\s*)?([^ \t\r\n=]+)\s*=\s*\"?((?<=\")(?:[^\\\"]|\\.)*?(?=\")|(?<!\")[^ \t\r\n,]+(?!\"))\"?)(.*)$
98	^(?:\s*(?:,\s*)?([^\0-\x1f\x7f-\xff()<>@,;:\\\"/[\]?={} \t]+)\s*=\s*\"?((?<=\")(?:[^\0-\x08\x0A-\x1f\x7f-\xff\\\"]|\\[\0-\x7f])*?(?=\")|(?<!\")[^\0-\x1f\x7f-\xff()<>@,;:\\\"/[\]?={} \t]+(?!\"))\"?)(.*)$
99	^(\s*def\s)|(.*(?<!\w)lambda(:|\s))|^(\s*@)
100	_
101	"
102	[*?[]
103	new_cmd_failure\)\(
104	release_cmd_to_pool
105	(\s*){\s*$
106	(\s*)}\s*$
107	.*
108	 +
109	&
110	<
111	[&<]
112	[\s,]
113	\d+$
114	\n{2,}
115	\r?\n
116	^(?P<prefix>[a-z]+)://(?P<suffix>.*)$
117	^[ -~]{0,200}[!-~]$
118	^\.\s*(\w+)\s*
119	^\[\s*(\w+)\s*\]\s*
120	^\s*(\w+)\s*
121	pack_lun\)\(
122	'
123	(^|\W)`(.*?)'(\W|$)
124	&#?\w+;
125	&(#?[xX]?(?:[0-9a-fA-F]+|\w{1,8}));
126	(\r\n|\r|\n)
127	(\w*)
128	(\w+(\.\w+)*)\.(\w*)
129	\(.*?\)
130	\s*(\w*|\w(\w|\.)*\w)\s*::
131	^#define\s{1,}(\w{1,}_H)\s{1,}<(.*)>
132	^\s*(?:var)?char\s*\(\s*(\d+)\s*\)\s*$
133	^(?:!|&|\*)$
134	^(?:<<)$
135	^(?:=)$
136	.*?\n
137	>\s+<
138	[^a-zA-Z0-9]
139	\(\?P(<\w+>).+?\)
140	\D
141	\bgzip\b
142	\sCONSTRAINT `[^`]*` FOREIGN KEY \(`([^`]*)`\) REFERENCES `([^`]*)` \(`([^`]*)`\)
143	([a-z])'([A-Z])
144	(<!--.*?-->|<[^>]*>)
145	(?<![\w])(\d+)L(?![\w])
146	(\d{1,2})\.(\d{1,2})\.(\d{1,2})
147	/\*
148	/\*.*?\*/
149	<[^>]*?>
150	=
151	[0-9]+
152	[<>]
153	[\\].
154	\$(\w+|\{[^}]*\})
155	\.
156	\[(.*?)\]
157	\\[0-3][0-7][0-7]
158	\n
159	\r\n
160	^\s*endblocktrans$
161	^\s*plural$
162	_\(((?:".*?")|(?:\'.*?\'))\)
163	(?<=SECRET_KEY = ')'
164	[^'\\]*(?:\\.[^'\\]*)*'
165	^'''(.*?)'''\s*(#.*)?$
166	^(.*?)'''\s*(#.*)?$
167	%\(([^)]*)\)s
168	(\\'[^\\']*\\'|"[^"]*")\s*
169	(\d{4})-(\d\d?)-(\d\d?)$
170	--\s*>
171	[^"\\]*(?:\\.[^"\\]*)*"
172	[^A-Za-z0-9.]+
173	[a-zA-Z][-_.:a-zA-Z0-9]*\s*
174	[a-zA-Z][-_.a-zA-Z0-9]*\s*
175	\Z(?ms)
176	\\
177	\s*(#.*)?$
178	\s*\[
179	\n        \$(?:\n          (?P<escaped>\$)              |   # Two $ signs\n          (?P<named>[_a-z][_a-z0-9]*)  |   # $name format\n          {(?P<braced>[^}]*)}              # ${name} format\n        )\n        
180	^"""(.*?)"""\s*(#.*)?$
181	^(.*?)"""\s*(#.*)?$
182	^(25[0-5]|2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3}$
183	^\s*blocktrans(?:\s+|$)
184	^\s*trans\s+((?:".*?")|(?:\'.*?\'))\s*
185	committed-rev="(\d+)"
186	url="([^"]+)"
187	x
188	#
189	#egg=([^&]*)
190	&([^;]+);
191	&([a-zA-Z][-.a-zA-Z0-9]*)[^a-zA-Z0-9]
192	((^|[^%])(%%)*%[sy])
193	([.\w-]+)\s*(.*)$
194	([\w\d\.-]+)\s*([\d]+):.*$
195	(\(|\)|\s+)
196	-(20\d\d\d\d\d\d)$
197	--
198	-py\d\.\d$
199	-r(\d+)$
200	/Python(?:-32|-64)*$
201	<p>Paragraph 1\s*</p>\s*<h2>\s*An h2</h2>
202	<title>[^<]*Revision \d+:
203	Revision: (.+)
204	URL: (.+)
205	\s*#?\s*$
206	^(.*)@(.*)$
207	^(?:1-?)?(\d{3})[-\.]?(\d{3})[-\.]?(\d{4})$
208	^([\w., ]+=)?\s*[\w\.]+\(.*\)$
209	^running .*
210	href=(?:"([^"]*)"|\'([^\']*)\'|([^>\s\n]*))
211	"([^"]+)"
212	#.*
213	&(?!(\w+|#\d+);)
214	&([a-zA-Z][a-zA-Z0-9]*|#[0-9]*)?|<([a-zA-Z][^<>]*|/([a-zA-Z][^<>]*)?|![^<>]*)?
215	(<a [^>]*?)target=[^\s>]+
216	(?:<p>(?:&nbsp;|\s|<br \/>)*?</p>\s*)+\Z
217	(?:^|(?<=[\.\?\!] ))([a-z])
218	([0-9a-f][0-9a-f]-){5}[0-9a-f][0-9a-f]
219	([A-Z])
220	([a-zA-Z][a-zA-Z0-9_]+)\s*=\s*(.*)
221	-arch\s+\w+\s
222	-isysroot [^ \t]*
223	.+SPHEROID\[\"(?P<name>.+)\",(?P<major>\d+(\.\d+)?),(?P<flattening>\d{3}\.\d+),
224	.+UNIT ?\["(?P<unit_name>[\w \\'\(\)]+)", ?(?P<unit>[\d\.]+)(,AUTHORITY\["(?P<unit_auth_name>[\w \\'\(\)]+)","(?P<unit_auth_val>\d+)"\])?\]([\w ]+)?(,AUTHORITY\["(?P<auth_name>[\w \\'\(\)]+)","(?P<auth_val>\d+)"\])?\]$
225	;
226	<!--
227	<(/?)\s*b\s*>
228	<(/?)\s*i\s*>
229	</\s*([a-zA-Z][-.a-zA-Z0-9:_]*)\s*>
230	<[>a-zA-Z]
231	<[a-zA-Z]
232	[ \t\n][ \t\n]+
233	[\d.]+
234	[^a-zA-Z0-9_]
235	[_-]
236	\$\(([A-Za-z][A-Za-z0-9_]*)\)
237	\${([A-Za-z][A-Za-z0-9_]*)}
238	\.\./
239	\.models$
240	\?|[-+]?[.\w]+$
241	\S+ (\d+)\.(\d+)\.?(\d+)?
242	\s*((\w|[-.])+)
243	\s*,
244	\s*\\\s*(#.*)?$
245	\w+(\.\w+)*$
246	]\s*>
247	]\s*]\s*>
248	^ +
249	^(-?\d+)(\d{3})
250	^(?P<major>\d)\.(?P<minor1>\d)\.(?P<minor2>\d+)
251	^([A-Za-z][A-Za-z0-9+-.]*://)(/*)(.*?)
252	^-r\s*([^ ])?
253	^GEO-\d{3}FREE
254	^GEO-\d{3}LITE
255	^[012TF\*]{9}$
256	^[_a-zA-Z]
257	^[_a-zA-Z]\w*$
258	^\d+\.\d+$
259	^bzr\s*branch\s*-r\s*(\d*)
260	^git\s*checkout\s*-q\s*(.*)\s*
261	^hg\s*update\s*-r\s*(.*)\s*
262	``([^`\s]+?)``
263	darwin-(\d+)\.(\d+)\.(\d+)-(.*)
264	git\s*remote\s*add\s*origin(.*)\s*-f
265	hg\s*pull\s*(.*)\s*
266	https?://[^/]*(/.*reset/\S*)
267	macosx-(\d+)\.(\d+)-(.*)
268	Decimal\('(\d+(\.\d*)?)'\)
269	$
270	&#(?:[0-9]+|[xX][0-9a-fA-F]+)[^0-9a-fA-F]
271	&[a-zA-Z#]
272	( +|-+)
273	()
274	(?P<major>\d+)\.(?P<minor>\d+)
275	(?P<name>[^-]+)( -(?P<ver>[^-]+) (-py(?P<pyver>[^-]+) (-(?P<plat>.+))? )? )?
276	(\d+)\.(\d+)\.(\d+)
277	.\x08
278	<(/)?([^ ]+?)(?: (/)| .*?)?>
279	<(/|\Z)
280	</
281	[&<>\"\x80-\xff]+
282	[a-zA-Z][-.a-zA-Z0-9:_]*
283	[a-zA-Z][-_.a-zA-Z0-9:]*\s*
284	\b\w+\b
285	\s*(<=?|>=?|==|!=)\s*((\w|[-.])+)
286	\s*\]
287	^([-+])?(\d\d?):?(\d\d)?$
288	^([^=]*)=(.*)$
289	^(\s*)
290	^(\s+)?\{[\s\w,\[\]\{\}\-\."\\':]+\}(\s+)?$
291	^-?\d+(\.\d+)?$
292	^<gml:Point srsName="EPSG:4326"><gml:coordinates>-104\.60925\d+,38\.255001</gml:coordinates></gml:Point>
293	^<gml:Point srsName="SDO:4326" xmlns:gml="http://www.opengis.net/gml"><gml:coordinates decimal="\." cs="," ts=" ">-104.60925\d+,38.25500\d+ </gml:coordinates></gml:Point>
294	^[-\w]+$
295	^[SMTWF][a-z][a-z], (\d\d) ([JFMASOND][a-z][a-z]) (\d\d\d\d) (\d\d):(\d\d):(\d\d) GMT$
296	^\s*
297	^\s*([^=\s;,]+)
298	^\s*=\s*([^\s;,]*)
299	^\s*=\s*\"([^\"\\]*(?:\\.[^\"\\]*)*)\"
300	^\s*\n
301	realm="([^"]*)"
302	^\d+$
303	 +$
304	%(?:\((?P<key>.*?)\))?(?P<modifiers>[-#0-9 +*.hlL]*?)[eEfFgGdiouxXcrs%]
305	&#([0-9]+)[^0-9]
306	(.*/|)([^/]+\.[a-z]+:\d+):(\d+:)? warning:
307	(.*?)\?(.*?):(.*)
308	(?<!\.)\d+\.\d+
309	(?<!\r)\n
310	(?P<pad>[=]*)$
311	([ \t]*)
312	([A-Za-z])+
313	(\++|\-+|\^+)
314	,\s*|\s+
315	<([^>]+)>
316	<([a-zA-Z][-.a-zA-Z0-9]*)/([^/]*)/
317	<[a-zA-Z][-.a-zA-Z0-9]*/
318	[ \t\)].*$
319	[/\\]
320	[^0-9A-F]
321	[a-zA-Z]\w*
322	\!([^=])
323	\*release_cmd\)\(
324	\.\.
325	\b[a-zA-Z_][a-zA-Z0-9_]*\b
326	\blambda\b
327	\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\s*=\s*(\\'[^\\']*\\'|"[^"]*"|[][\-a-zA-Z0-9./,:;+*%?!&$\(\)_#=~\\'"@]*))?
328	\s*\\
329	\s{2,}
330	\{@([^\}]*)=([^\}]*)}
331	\r\n
332	^(.*)#([^#]*)$
333	^(.*):(.*)$
334	^(.*):([0-9]+)$
335	^(.*)\?([^?]*)$
336	^(.*?)-(dev|\d.*)
337	^(?P<value>"Plural-Forms.+?\\n")\s*$
338	^([^/:]+):
339	^--
340	^.*FT_TRACE_DEF[ \t]*\([ \t]*
341	^[ \t]*
342	^[ \t]*#define[ \t]+FT_COMPONENT[ \t]+trace_
343	^[ \t]*$
344	^[^(]*
345	^\s+$
346	'(?:[^'\\]|\\.)*'
347	 *
348	"(?:[^"\\]|\\.)*"
349	%\(([^)]*)\)s|.
350	%\(([^)]+)\)s
351	&#(?P<char>[0-9]+[^0-9]|x[0-9a-fA-F]+[^0-9a-fA-F])
352	((\\[\\abfnrtv\\'"]|\\[0-9]..|\\x..|\\u....)+)
353	(?P<delim>[^\w\n"\'])(?P<space> ?)(?P<quote>["\']).*?(?P=quote)(?P=delim)
354	(?P<option>[^:=\s][^:=]*)\s*(?P<vi>[:=])\s*(?P<value>.*)$
355	(?P<year>\d\d\d\d)(?:-(?P<month>\d\d)(?:-(?P<day>\d\d)(?:T(?P<hour>\d\d)(?::(?P<minute>\d\d)(?::(?P<second>\d\d))?)?)?)?)?Z
356	([0-9]+)
357	(\d+)x(\d+)\+(-?\d+)\+(-?\d+)
358	(\d+\.\d+(\.\d+)*)
359	(\r\n)|\n|\r
360	(\w+)
361	,\s*
362	-->
363	-[a-z]\b
364	.*FLAGS \((?P<flags>[^\)]*)\)
365	.*INTERNALDATE "(?P<day>[ 0123][0-9])-(?P<mon>[A-Z][a-z][a-z])-(?P<year>[0-9][0-9][0-9][0-9]) (?P<hour>[0-9][0-9]):(?P<min>[0-9][0-9]):(?P<sec>[0-9][0-9]) (?P<zonen>[-+])(?P<zoneh>[0-9][0-9])(?P<zonem>[0-9][0-9])"
366	<!
367	<!\[CDATA\[
368	><
369	Cancel
370	Control-
371	Key-
372	[ \t]*([^ \t]+)[ \t]+realm="([^"]*)"
373	[-]
374	[A-Z]
375	[A-Z][A-Z0-9_]+$
376	[\041-\176]+:$
377	[\?|><:/*"+,;=\[\]]
378	[\?|><:/*]"
379	[\x00-\x19\\"\b\f\n\r\t]
380	[\x00\x01\x02\x03\x04\x05\x06\x07\x08\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]
381	[]&<]
382	[^\t\r\n -~\xa0-\xff]
383	[a-zA-Z_:][-a-zA-Z0-9._:]*
384	\$
385	\$IN\b
386	\$OUT\b
387	\+( (?P<data>.*))?
388	\+OK.*(<[^>]+>)
389	\[(?P<header>[^]]+)\]
390	\]\]>
391	\b((http|ftp)://\S+[\w/]|RFC[- ]?(\d+)|PEP[- ]?(\d+)|(self\.)?((?:\w|\.)+))\b
392	\b((http|ftp)://\S+[\w/]|RFC[- ]?(\d+)|PEP[- ]?(\d+)|(self\.)?(\w+))
393	\d+\s+dir\s+(\d+)
394	\r
395	\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\s*=\s*(\\'[^\\']*\\'|"[^"]*"|[-a-zA-Z0-9./,:;+*%?!&$\(\)_#=~@]*))?
396	\n    \""" [^"\\]* (?:\n                     (?: \\. | "(?!"") )\n                     [^"\\]*\n                 )*\n    (?: \""" )?\n\n|   " [^"\\\n]* (?: \\. [^"\\\n]* )* "?\n\n|   \'\'\' [^\'\\]* (?:\n                   (?: \\. | \'(?!\'\') )\n                   [^\'\\]*\n                )*\n    (?: \'\'\' )?\n\n|   \' [^\'\\\n]* (?: \\. [^\'\\\n]* )* \'?\n
397	\r\n|\r|\n
398	^ *\n
399	^#!.*python[0-9.]*([ \t].*)?$
400	^([ \t]*)
401	^([-+]?)0*(\d*)((?:\.\d*)?)(([eE][-+]?\d+)?)$
402	^([^/:]+)://
403	^(\s*#*)
404	^(\s*)(\w*)
405	^[1-9][0-9]*$
406	^[A-Za-z_][A-Za-z0-9_.]*$
407	^[a-zA-Z]([a-zA-Z0-9_]*)$
408	^[a-zA-Z_][a-zA-Z_0-9]*(\.[a-zA-Z_][a-zA-Z_0-9]*)*$
409	^\s*#
410	^http://
411	coding[:=]\s*([-\w_.]+)
412	cygwin.*
413	raise\s+\w+\s*(,)
414	--.*([\n\Z]|$)
415	[^\w!#$%&'*+,.:;<=>?^`|~-]
416	l_ngettext, u?'\%\(num\)s apple', u?'\%\(num\)s apples', 3
417	 (\d+\.\d+(\.\d+)*)
418	 *, *
419	&(?:\w+|#\d+);
420	((^|;)\s*charset=)([^;]*)
421	(::|\.\.|\(\)|[/.*:\[\]\(\)@=])|((?:\{[^}]+\})?[^/:\[\]\(\)@=\s]+)|\s+
422	(?:(\w+)=)?(.+)
423	(?:W/)?"((?:\\.|[^"])*)"
424	(?:\r\n|\n|\r(?!\n))
425	(?P<feature>[A-Za-z0-9][A-Za-z0-9\-]*) ?
426	(?m)^\.
427	(\(|\)|\s+|-)
428	(\.|\s)
429	(\.|\s|/|-)
430	(\d+),(\d+),(\d+),(\d+),(\d+),(\d+)
431	(\d+\.\d+\.\d+)
432	(\s+|[^\s\w]*\w+[a-zA-Z]-(?=\w+[a-zA-Z])|(?<=[\w\!\"\\'\&\.\,\?])-{2,}(?=\w))
433	(\w+)[-_](release|version)
434	(\r\n|\r|\n)
435	(__libc_init)|(GLIBC_([0-9.]+))|(libc(_\w+)?\.so(?:\.(\d[0-9.]*))?)
436	.*"([^"]+)"$
437	.*; charset=([\w\d-]+);?
438	.*?\n
439	.*{(?P<size>\d+)}$
440	[-/\.]
441	[-\.]
442	[\-\s\(\)]
443	[\w.@+-]+$
444	[][\\()"]
445	[][\\()<>@,:;".]
446	[^ !-<>-~\t]
447	[^-a-zA-Z0-9!*+/ ]
448	[^0-9]
449	[a-zA-Z][-_.a-zA-Z0-9]*
450	\$([a-zA-Z_][a-zA-Z_0-9]*)
451	\* (?P<data>\d+) (?P<type>[A-Z-]+)( (?P<data2>.*))?
452	\* (?P<type>[A-Z-]+)( (?P<data>.*))?
453	\?
454	\[(?P<type>[A-Z-]+)( (?P<data>[^\]]*))?\]
455	\r(?!\n)
456	\s+$
457	\s\s+
458	\n  =\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \?                    # literal ?\n  (?P<atom>.*?)         # non-greedy up to the next ?= is the atom\n  \?=                   # literal ?=\n  
459	^(.*\s+)?(.*?)(\(.*)?
460	^(?P<area>\d{3})[-\ ]?(?P<group>\d{2})[-\ ]?(?P<serial>\d{4})$
461	^(?P<birth>\d{6})/?(?P<id>\d{3,4})$
462	^(?P<group>[^ \t]+)[ \t]+(.*)$
463	^(?P<idnumber>\w{8})(?P<pos9>(\d{1}|<))(?P<checksum>\d{1})$
464	^(?P<name>\w+)\*((?P<num>[0-9]+)\*?)?$
465	^(?P<number>\d{7})(?P<check>\d)$
466	^(?P<residence>\d{10})(?P<origin>\w{1,3})[-\ ]?(?P<birthday>\d{7})[-\ ]?(?P<validity>\d{7})[-\ ]?(?P<checksum>\d{1})$
467	^(?P<yy>\d\d)(?P<mm>\d\d)(?P<dd>\d\d)(?P<mid>\d{4})(?P<end>\d{3})
468	^(From |[\041-\071\073-\176]{1,}:|[\t ])
469	^([0-9]+) ?(.*)\n?
470	^([^ \t]+)[ \t]+(.*)$
471	^(\d{10})$
472	^(\d{2})[-\.]?(\d{4})[-\.]?(\d{4})$
473	^(\d{3})-(\d{3})-(\d{3})$
474	^(\d{4})[ -]?(\d{4})[ -]?(\d{2})[ -]?(\d{10})$
475	^(content-type:.*charset=")(us-ascii|iso-8859-[0-9]+)(".*)
476	^-*\n
477	^0([1-9]{1})\d{8}$
478	^0\d(\s|\.)?(\d{2}(\s|\.)?){3}\d{2}$
479	^\[\[\[\s*(.*?)\s*\]\]\]\s*(\S+)$
480	^\d+
481	^\d{11}$
482	^\d{4} \d{6}
483	^\d{4}[A-Z]{2}$
484	^\d{9}$
485	^\s*(#.*)?$
486	^content-type:.*multipart/.*boundary="?([^;"\n]*)
487	^name="(.*)"\s+certificate="(.*)"\s+private_key="(.*)"$
488	_\((.*?)\)(?s)
489	a
490	%(?!\()
491	^[^(]*
492	^\s*[#*=]{4,}\n[a-z0-9 -]+\n[#*=]{4,}\s*
493	^'([^']+)'(\|.*$)
494	   \.\.\.+:
495	  +
496	"$
497	".*"$
498	&(#(\d+|x[\da-fA-F]+)|[\w.:-]+);?
499	(.*  )(\w+)(( &lt;cycle.*&gt;)? \[\d+\])\n
500	(.*  )(\w+)\n
501	(In \[[0-9]+\]: )|(   \.\.\.+:)
502	(Out\[[0-9]+\]: )|(   \.\.\.+:)
503	([-_a-zA-Z0-9]+)(\s*.*?)(?=,\s+(?:/|-|--)|$)
504	([0-9]+)\.([0-9]+)\.([0-9]+)
505	([\\"/]|[^\ -~])
506	(\\*)"
507	(\w+(?:\.c)?|\W+)
508	.*?(?=$|\$\$)
509	.*[/\\](.+)(\:\d+|\(\d+\))\: 
510	/ParamTest
511	/\*.*\*/
512	<meta.*?charset=["\\']*(.+?)["\\'>]
513	=\w{2}
514	Stack trace:(.|\n)*?\n\n
515	[A-Za-z]+
516	[\s.]
517	[^A-Za-z0-9_]
518	[_A-Za-z]\w*
519	\$[_A-Za-z]\w*
520	\$\(\$\)
521	\$elif\s+
522	\$else\s+
523	\$for\s+
524	\$if\s+
525	\$range\s+
526	\$var\s+
527	\(\d+ ms
528	\-+
529	\/\/.*$
530	\[\[\n?
531	\]\]\n?
532	\d([A-Z])
533	\d+ FAILED TESTS
534	\d+ tests? from ([a-zA-Z_])
535	\d+ tests? from \d+ test cases?
536	\d+ tests?, listed below
537	\d+ tests?\.
538	\nStack trace:\n(.|\n)*
539	\n\r?\n$
540	\n\s*$
541	\n\s*//
542	\r?\n
543	\s*;\s*
544	\t
545	\w+$
546	\{\{.*?\}\}
547	^(?P<century>\d{2})?(?P<year>\d{2})(?P<month>\d{2})(?P<day>\d{2})(?P<sign>[\-+])?(?P<serial>\d{3})(?P<checksum>\d)$
548	^(?P<initial>\d{1})(?P<yy>\d\d)(?P<mm>\d\d)(?P<dd>\d\d)(?P<mid>\d{4})(?P<checksum>\d{1})
549	^(?P<major>\d+)\.(?P<minor>\d+)(\.(?P<subminor>\d+))?
550	^(?P<proto>inet):(?P<host>[^:]+)(:(?P<port>[0-9]+))?$
551	^(?P<proto>unix):(?P<path>.*)$
552	^([^\[\]]+)(\[.*\])?$
553	^(\+62|0)[2-9]\d{7,10}$
554	^(\d{9}|(00|\+)\d*)$
555	^.*[/\\](.*:)\d+\n
556	^<Point><coordinates>-95.363\d+,29.763\d+,18</coordinates></Point>$
557	^@@ -(\d+),?(\d*) \+(\d+),?(\d*) @@$
558	^[1-9]\d{2} ?\d{2}$
559	^[1-9]\d{4}$
560	^[A-Z]{,3}$
561	^[\d,]+$
562	^[a-z0-9]+$
563	^\[\-+\] \d+ tests? from (\w+(/\w+)?)
564	^\[\s*RUN\s*\].*\.(\w+(/\w+)?)
565	^\d+(\.\d+)?$
566	^\d{12}$
567	^\d{16}$
568	^\r?\n\r?\n
569	^\s*#\s*include\s*"(src/.+)"
570	^\s*(>>>|\.\.\.) (.*)$
571	^const\s+([a-zA-Z0-9_]+)\s*=\s*([^;]*);$
572	^macro\s+([a-zA-Z0-9_]+)\s*\(([^)]*)\)\s*=\s*([^;]*);$
573	^python\s+macro\s+([a-zA-Z0-9_]+)\s*\(([^)]*)\)\s*=\s*([^;]*);$
574	^{"type":"Point","coordinates":\[-95.363151,29.763374,18(\.0+)?\]}$
575	encoding\s*=\s*[\'"]([^"\']+)["\']
576	md5=([a-f0-9]+)
577	unsigned int
578	'(\\.[^\\]*|[^\\])'
579	#define ([A-Z][A-Za-z0-9_]+) (.*)\n
580	(?:([\w ]+) ([\w.]+) .*Version ([\d.]+))
581	(?:\r\n|\r|\n){2,}
582	(?i)%2F
583	(\s+|(?<=[\w\!\"\\'\&\.\,\?])-{2,}(?=\w))
584	(\r\n|\r|\n)$
585	(^|[^\\])\.
586	-py([123]\.?[0-9]?)$
587	//.*\n
588	/[*] #undef ([A-Z][A-Za-z0-9_]+) [*]/\n
589	/\*([^*]+|\*+[^/])*(\*+/)?
590	/usr/local/bin/python
591	0x([0-9a-fA-F]+)L?
592	<!ENTITY +(\w+) +CDATA +"([^"]+)" +-- +((?:.|\n)+?) *-->
593	<url>(.*)</url>
594	Customer="?WILE_E_COYOTE"?;\s*\$Path="\/acme"
595	PART_NUMBER=RIDING_ROCKET_0023;\s*PART_NUMBER=ROCKET_LAUNCHER_0001
596	Part_Number="?Rocket_Launcher_0001"?;\s*\$Path="\/acme"
597	Riding_Rocket_0023.*Rocket_Launcher_0001
598	Shipping="?FedEx"?;\s*\$Path="\/acme"
599	[.-]
600	[0-9]+(\.[0-9]+)+
601	[^A-Z0-9_]
602	[^A-Za-z0-9]Q_OBJECT[^A-Za-z0-9]
603	[_a-zA-z][_a-zA-Z0-9]*$
604	[a-z]
605	\$Port([^=]|$)
606	\beval\s*\(
607	\bwith\s*\(
608	\s*#
609	\s*#.*
610	\s*revision="(\d+)"
611	\s+\n+
612	\w
613	^#! */usr/local/bin/python
614	^(?P<number>\d{1,8})-?(?P<check>\d)$
615	^([^:]*):(.*)$
616	^(\+90|0)? ?(([1-9]\d{2})|\([1-9]\d{2}\)) ?([2-9]\d{2} ?\d{2} ?\d{2})$
617	^//([^/?]*)(.*)$
618	^/[-\w/]+$
619	^[ \t]*(def|class)[ \t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \t]*[:\(]
620	^[ \t]*(def|class)[ \t]+([a-zA-Z0-9_]+)[ \t]*[:\(]
621	^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)[\t ]+
622	^[\t ]*#[\t ]*define[\t ]+([a-zA-Z0-9_]+)\(([_a-zA-Z][_a-zA-Z0-9]*)\)[\t ]+
623	^[\t ]*#[\t ]*include[\t ]+<([a-zA-Z0-9_/\.]+)
624	^[a-zA-Z0-9_-]+$
625	^\$Version="?1"?; Customer="?WILE_E_COYOTE"?; \$Path="/acme"$
626	^\$Version="?1"?;
627	^\d{4}-\d\d-\d\d \d\d:\d\d:\d\dZ$
628	foo
629	name="([^"]+)" value="([^"]+)"
630	'.'
631	'.*'$
632	 {2,}
633	"[^"]*"
634	#define\WDB_VERSION_MAJOR\W(\d+)
635	#define\WDB_VERSION_MINOR\W(\d+)
636	#define\s+ETS_VER\s+([0-9]+)
637	#include +"[^/]+\.h"
638	((?:0x[0-9a-fA-F]+\+?)+)\s+((?:(?:0x[0-9a-fA-Z]+|<[A-Za-z]+>)\+?)*)\s*(#.+)?
639	(.)
640	(.)([A-Z][a-z]+)
641	(.*)\|(.*)
642	(?:definitely|indirectly|possibly) lost: 
643	(?<=\S)\n(?=\S)
644	(?P<hexrgb>#[0-9a-fA-F]{6})
645	(?P<name>(.+))\s+(?P<hexrgb>#[0-9a-fA-F]{6})
646	(?P<name>\S+)\s+(?P<hexrgb>#[0-9a-fA-F]{6})
647	([-\w]+)\s*:\s*([^:;]*)
648	([0-9.]+)$
649	([\x00-\x7F])+
650	([a-z0-9])([A-Z])
651	([a-zA-Z0-9_$%]+)
652	([a-zA-Z\d]+) \[(\d+)\] (.*)
653	(\033|~{)
654	(\W+)
655	(\\*)(\(\?P<[^>]*>|\((?!\?))
656	(\b[A-za-z]+\b) \b\1\b
657	(\d+\.\d+)(.*)
658	(\s)@\s*([^\s]+)
659	(\w+(?::\w+)?)
660	(^|\n)(?P<level>#{1,6})(?P<header>.*?)#*(\n|$)
661	(function\b[^(]*)\((.*)\)\{$
662	(import|from)\s+markupsafe\b
663	({)|(})
664	-(?=-)
665	-py([123]\.[0-9])$
666	/.+/$
667	/\.(?![^.]*$)/
668	:\d+$
669	<([^<\s]+?)\s*/>
670	<[^>]+>
671	<a href="([^"#]+)">([^<]+)</a>\n\s+\(<a (?:title="MD5 hash"\n\s+)href="[^?]+\?:action=show_md5&amp;digest=([0-9a-f]{32})">md5</a>\)
672	<include.*?>(.*?)</include>
673	<title>([^- ]+ - )?Revision \d+:
674	@[a-z]+
675	@code{(.*?)}
676	HTML
677	LINE (\d+) OF FILE (\d+)
678	Version:.*-r(\d+)\s*$
679	Websafe
680	XConsortium
681	Xorg
682	["\'/]
683	[@{} ]
684	[Hh][123456]
685	[\000-\037]
686	[\t ]+(?![^{]*})
687	[\x00-\x08\x0b\x0c\x0e-\x1f]
688	[\x80-\xFF]
689	[\n@{}&<>]
690	[\r\n]+
691	[_a-zA-Z]\w*$
692	[a-zA-Z0-9_-]{6}$
693	[a-zA-Z_][a-zA-Z0-9_]*$
694	\$<\d+>[/*]?
695	\$[()]
696	\$\([^\$]*(\$[^\)][^\$]*)*\$\)
697	\(
698	\((.*?)\)
699	\((\S+).py, line (\d+)
700	\)
701	\*/
702	\/([A-Za-z]+)
703	\[
704	\[([^]]+)\]
705	\\(ABC|ASCII|C|Cpp|EOF|infinity|NULL|plusminus|POSIX|UNIX)\s
706	\\([abfnrtv?"\\\\']|\d+|x[0-9a-fA-F]+)
707	\\(begin|end){([_a-zA-Z]+)}|([()\[\]])
708	\\[A-Za-z]+
709	\\begin{(?:long)?table([iv]+)}
710	\\document(style|class)
711	\\end{(?:long)?table([iv]+)}
712	\\line([iv]+){
713	\bexpires=([^;]+)
714	\n\s+\n
715	\s*(?P<red>\d+)\s+(?P<green>\d+)\s+(?P<blue>\d+)\s+(?P<name>.*)
716	\s*([^: ]*)\s*:(.*)
717	\s*(t_[a-zA-Z_0-9]*)\s*=
718	\s*def\s+(p_[a-zA-Z_0-9]*)\(
719	\s*def\s+(t_[a-zA-Z_0-9]*)\(
720	\w+(\.\w+)*
721	^(.+?):(\d+): DeprecationWarning: classic (int|long|float|complex) division$
722	^(?P<w>\d\d?\d?)\.(?P<x>\d\d?\d?)\.(?P<y>\d\d?\d?)\.(?P<z>\d\d?\d?)$
723	^(@[a-z]+)?{
724	^([:,;#%.\sa-zA-Z0-9!]|\w-\w|\'[\s\w]+\'|"[\s\w]+"|\([\d,\s]+\))*$
725	^([A-Z]+)([1-9][0-9]*)$
726	^([A-Z]+)([1-9][0-9]*)(?::([A-Z]+)([1-9][0-9]*))?$
727	^([a-zA-Z0-9_]+)=(.*)
728	^([a-zA-Z0-9_]+)[ \t]*=(.*)
729	^(\s+)
730	^-?\d+$
731	^/
732	^<>$
733	^@([a-z]+)([ \t]|$)
734	^Remaining object addresses:$
735	^Remaining objects:$
736	^[^-_.]+
737	^[a-zA-Z][a-zA-Z0-9\-_]*$
738	^\$([_a-zA-Z]\w*|{[_a-zA-Z]\w*})$
739	^\* ([^:]*):(:|[ \t]*([^\t,\n.]+)([^ \t\n]*))[ \t\n]*
740	^\d{4}-\d{1,2}-\d{1,2}$
741	^\s*#?\s*end\s+(?P<kw>[a-z]+)(\s+(?P<id>[a-zA-Z_]\w*))?[^\w]
742	^\s*#\s*include\s*([<"])([^>"]*)[>"].*$
743	^\s*(?P<kw>[a-z]+)(\s+(?P<id>[a-zA-Z_]\w*))?[^\w]
744	^\s*\*\w+(\+\+|--);
745	^\s*prefix\s+([\w\_\.\-\/]+)$
746	^_imp__(.*) in python\d+\.dll
747	^def\s*(\w+)\s*=(.*)$
748	^egg=([-A-Za-z0-9_.]+)$
749	_flymake\.h$
750	cc_(.*)$
751	init\((.*)\):
752	lightlink
753	url\s*\(\s*[^\s)]+?\s*\)\s*
754	v[0-9]+.*
755	var 
756	{|}
757	[\t\n #$%&'()*;<=>?[{|}~]|^$
758	\*(\w(\w|')*)\*(.*)
759	\\openout.*`(.*\.aux)'
760	_(\w(\w|')*)_(.*)
761	 *({.*}) = ({.*})$
762	 0001:[0-9a-fA-F]{8}\s*([_\?@$0-9a-zA-Z]*)\s*([0-9a-fA-F]{8}).*
763	"(.*)"
764	"(.*)".*PRIMARY KEY$
765	#define[ \t]+([A-Z0-9a-z_]+)[ \t]+([0-9]+)[ \t]*/\*[ \t]*(.*)[ \t]*\*/
766	#s*define\s+HASHVERSION\s+2\s*
767	#s*define\s+WITH_LIBINTL\s+1\s*
768	$(\w+)
769	&#(x?[0-9A-Fa-f]+)[^0-9A-Fa-f]
770	&(?:([a-zA-Z][-.a-zA-Z0-9]*)|#([0-9]+))(;?)
771	(((((((((((x)))))))))))
772	((((((((((y))))))))))(.)
773	(([a-zA-Z0-9\_\-\.\+]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?))
774	((\w|\.)+)\((\d+)\):
775	((a)|(b))(c)?
776	(:)
777	(:)(:*)
778	(:)*
779	(:*)
780	(:+)
781	(>[ \t]*)(.*\n)
782	(?:(?P<a1>a)|(?P<b2>b))(?P<c3>c)?
783	(?::*)
784	(?:;\s*|\s+)(\b\w{2}\b(?:-\b\w{2}\b)?)\s*;|(?:\(|\[|;)\s*(\b\w{2}\b(?:-\b\w{2}\b)?)\s*(?:\]|\)|;)
785	(?:b)|(?::+)
786	(?P<a>x)
787	(?P<first>first) (?P<second>second)
788	(?P<hour>\d{1,2}):(?P<minute>\d{1,2})(?::(?P<second>\d{1,2})(?:\.(?P<microsecond>\d{1,6})\d{0,6})?)?
789	(?P<unk>x)
790	(?P<year>\d{4})-(?P<month>\d{1,2})-(?P<day>\d{1,2})$
791	(?i)b+
792	(?smx)\n    (<\?.*?\?>)?\s*\n    <!DOCTYPE\s+(\n     [a-zA-Z_][a-zA-Z0-9]*\s+\n     [a-zA-Z_][a-zA-Z0-9]*\s+\n     "[^"]*")\n     [^>]*>\n
793	(Okay|[EW]\d{3}):\s(.*)
794	(["\\`])
795	([0-9.]+)(\S*)$
796	([Ww]/)?(?:"(.*?)"|(.*?))(?:\s*,\s*|$)
797	([\13\14])
798	([\x00-\x7f])+
799	([^\s;,]+)(?:[^,]*?;\s*q=(\d*(?:\.\d+)?))?
800	([a-z])([A-Z])
801	([b:]+)
802	(\$\((.*?)\))
803	(\S)\s+(\S)
804	(\W*)(\w*)
805	(\\*)(?:(?::([a-zA-Z_][a-zA-Z_0-9]*)?()(?:#(.*?)#)?)|(?:<([a-zA-Z_][a-zA-Z_0-9]*)?(?::([a-zA-Z_]*)(?::((?:\\.|[^\\>]+)+)?)?)?>))
806	(\\*)([,;]+)
807	(\w+)=([-\w]+)
808	(\x1b|~{)
809	(^|\n)[ ]{0,3}>[ ]?(.*)
810	(a(?!\s[^a]))
811	(a(?!\s[abc]))
812	(a(?=\s[^a]))
813	(a(?=\s[^a]*))
814	(a(?=\s[abc]))
815	(a(?=\s[abc]*))
816	(a)
817	(a)(?!\s(abc|a))
818	(a)(?!\s\1)
819	(a)(?=\s(abc|a))
820	(a)(?=\s\1)
821	(a)(?=\s\1*)
822	(a|(b))
823	(b)|(:+)
824	(sha1|sha224|sha384|sha256|sha512|md5)=([a-f0-9]+)
825	(x|i[3-6])86$
826	-- ADDMODULE MARKER 1 --
827	-- ADDMODULE MARKER 2 --
828	----- (Start|End) Table ([A-Z](.[0-9])+) -----
829	-{2,}
830	.*/|\.$|\.\.$
831	.*kallsyms.*
832	.+
833	/*(.*)
834	//\s+Env: TEST_FILE_NAME
835	//\s+Files:(.*)
836	//\s+Flags:(.*)
837	/dev/shm/\S*
838	0*$
839	: Failure\n
840	:*
841	:+
842	<([^<>\s]+?)\s*/>
843	</(\w+)>
844	</?xsl:([^>]*)/?>?
845	</body.*?>
846	<\?(?!xml)
847	<a href="([^"]*)"[^>]* id="lookup_id_inquisition"
848	<address.*?>.*?</address.*?>
849	<div[^>]*navigat.*?</div.*?>
850	<dl><dd>
851	<li>Plot: <a href=".+/admin_views/plot/1/">World Domination</a>\s*<ul>\s*<li>Plot details: <a href=".+/admin_views/plotdetails/1/">almost finished</a>
852	Copyright [\d-]*20[0-1][0-9] the V8 project authors. All rights reserved.
853	EndProjectSection$
854	In \[(\d+)\]:\s?(.*)\s*
855	Out\[(\d+)\]:\s?(.*)\s*
856	ProjectSection\(ProjectDependencies\) = postProject$
857	REG_\w+\s+([^\r]+)\r\n
858	SECRET|PASSWORD|PROFANITIES_LIST|SIGNATURE
859	Wrote: (.*)
860	[ \t]*([A-Z0-9a-z_]+)[ \t]*=[ \t]*([-0-9]+)[, \t]*
861	[ \t]*([A-Z0-9a-z_]+)[ \t]*=[ \t]*([-0-9]+)[, \t]*/\*[ \t]*(.*)[ \t]*\*/
862	[-./\s]
863	[/\\ ]
864	[0-9]*
865	[A-Z][a-z]+([A-Z][a-z]*)+
866	[EW]\d{3}
867	[[({] | []}),;:]
868	[\\"]|[^ -~]
869	[\x00-\x08\x0e-\x1f]
870	[\x00-\x20]+
871	[\n\r\t\x0b\x0c]
872	[^A-Za-z0-9_.-]
873	[^\x00-\x21\xff]{1,250}$
874	[a-f0-9]+\s+<.*:$
875	\$\((.*?)\)
876	\$\(VERSION\)
877	\$\{.*?\}
878	\*
879	\*([a-zA-Z]+)\*
880	\.+
881	\.py$
882	\B(b.)\B
883	\S+| +|\n
884	\[\d+ refs\]\r?\n?$
885	\\.|.
886	\b(b.)\b
887	\b(http|ftp|https)://\S+(\b|/)|\b[-.\w]+@[-.\w]+
888	\bstring\b
889	\d
890	\d\D\w\W\s\S
891	\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\s*=\s*(\\'[^\\']*\\'|"[^"]*"|[-a-zA-Z0-9./:;+*%?!&$\(\)_#=~]*))?
892	\s*/\*\s*\*/
893	\s*\$\$.*
894	\s*def\s*([_\w][_\w\d]*)\s*\(
895	\s|\+|\-|\*|\/|<<|>>]
896	\{% csrf_token
897	\{%\s*(block|extends)
898	\{%\s*if\s*.*?%\}
899	\{\$.*?\}
900	\{foreach\s+.*?\}.*?\{/foreach\}
901	\{if\s+.*?\}.*?\{/if\}
902	\{include\s+file=.*?\}
903	\n    ((?P<name>\w+)\s*=\s*)?\n    (?P<value>\n        True|False|\n        \d+.\d+|\n        \d+.|\n        \d+|\n        \w+|\n        [urUR]?(?P<stringval>"[^"]*?"|\'[^\']*\')\n    )\s*,\n
904	\n  =\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \?=                   # literal ?=\n  
905	\n+
906	\x1b\[(0;3\d)?m
907	^(.*)=([-+]?[0-9]+)
908	^(.*?)$(?m)
909	^(0x)?[0-9]+$
910	^(0|-?[1-9][0-9]*)$
911	^(?:(a)|c)(\1)$
912	^(?:(a)|c)(\1)?$
913	^(?:\.\s*(include|undef|error|warning|if|else|elif|endif|for|endfor)|\s*(ifeq|ifneq|ifdef|ifndef|else|endif|-?include|define|endef|:))(?=\s)
914	^(?P<version>(?P<major>\d+)\.(?P<minor>\d+)\.(?P<subminor>\d+))(rc(?P<release_candidate>\d+))?-CAPI-(?P<capi_version>\d+\.\d+\.\d+)$
915	^(Keyed)?(Call|Load|Store)IC_
916	^([0-9a-fA-F]{8}) . (.*)$
917	^([^.]*)\.([^:]*):[\t ]+(.*)
918	^([^:]*): *(.*)
919	^([^:]*):\t(.*)
920	^([a-f0-9]+)\s(.{7})\s(\S+)\s+([a-f0-9]+)\s+(?:\.hidden\s+)?(.*)$
921	^([a-f0-9]+)\s(?:t|T)\s(\S+)$
922	^([a-zA-F0-9_-]*)[\.]?.*$
923	^(\d{1,3})\.(\d{1,4})$
924	^(\w){1,2}$
925	^(\w){1,2}?$
926	^(\w){1,3}$
927	^(\w){1,3}?$
928	^(\w){1,4}$
929	^(\w){1,4}?$
930	^(\w){1}$
931	^(\w){1}?$
932	^(\w){3,4}?$
933	^(\w){3}$
934	^(\w){3}?$
935	^(\|)?([^()]+)\1$
936	^(\|)?([^()]+)\1?$
937	^<A HREF="(\d\.\d)/">Lua \1</A>
938	^<A HREF="manual.html#pdf-(.+)">\1</A>
939	^DYNAMIC SYMBOL TABLE
940	^EndProject$
941	^Project\("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"\) = "(.*)", "(.*)", "(.*)"$
942	^[0-9.]+$
943	^[A-F0-9\-]+$
944	^[A-Za-z0-9$./_]+$
945	^\$\((.*)\)(/(.*)|)$
946	^\$\((.*?)\)(/(.*))?$
947	^\?(.*)
948	^\d[A-F]\d$
949	^\s*#\s*include\s*"(gtest/.+)"
950	^\s*@?#
951	^\s*\$\$.*\n
952	^\s*\d+\s(\.\S+)\s+[a-f0-9]
953	^cat 
954	^x{1,2}$
955	^x{1,2}?$
956	^x{1,3}$
957	^x{1,3}?$
958	^x{1,4}$
959	^x{1,4}?$
960	^x{1}$
961	^x{1}?$
962	^x{3,4}?$
963	^x{3}$
964	^x{3}?$
965	^x{}$
966	___
967	a*
968	a+
969	ab+c
970	b*
971	b+
972	lost: 0 bytes in 0 blocks
973	name="(.*?)"
974	operator(==|!=|<|<<|<=|>=|>>|>)\(
975	py:(.*?)=["\']
976	u?r?["\\']
977	wuzzy
978	x*
979	x+
980	} (\w+);
981	[\t-\r -/:-@[-`{-~]
982	\\openout.*`(.*)'
983	^([^=]+)=\'(.*)\'$
984	  \\item (.*) [(](.*)[)]((?:(?:, \d+)|(?:, \\[a-z]*\{\d+\}))+)
985	%([0-9A-Fa-f]{2})
986	%+ ?(.*)\n[ \t]*
987	&#(x?[0-9a-fA-F]+)[^0-9a-fA-F]
988	&#?[A-Za-z0-9]+?;
989	&(#?)(\w+?);
990	&(?!#?[xX]?(?:[0-9a-fA-F]+|\w+);)
991	&(?!#\d+;|#x[0-9a-fA-F]+;|\w+;)
992	&(?:([a-zA-Z][-.a-zA-Z0-9]*)|#(x?[0-9a-fA-F]+))(;?)
993	&(\w+);
994	( |\n|^)\.\. 
995	(.*)\x01(.*)###(.*)$
996	(?:(?<!\r)\n)|(?:\r(?!\n))
997	(?:\x1b\[([0-9?;]*)([a-zA-Z])|([^\x1b]+))
998	(?:^|\n)\s*//
999	(?<!%)%s
1000	(?<!\\)([aAbBcdDEfFgGhHiIjlLmMnNOPrsStTUuwWyYzZ])
1001	(?<!\\)([aAbBdDfFgGhHiIjlLmMnNOPrsStTUwWyYzZ])
1002	(?<!\\)(\\\\)*::$
1003	(?P<a>a(b))
1004	(?P<a>a)(?P<b>b)?b
1005	(?P<replace>(?P<type><(?:(?:!?@?)|\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\((?P<is_array>\s*\[?)(?P<content>.*?)(\]?)\))
1006	(?P<replace>(?P<type>>(?:(?:!?@?)|\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\((?P<is_array>\s*\[?)(?P<content>.*?)(\]?)\))
1007	(?i)python.exe
1008	(?i)pythonw.exe
1009	(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\w+).framework/\n    (?:Versions/(?P<version>[^/]+)/)?\n    (?P=shortname)\n    (?:_(?P<suffix>[^_]+))?\n)$\n
1010	(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\w+?)\n    (?:\.(?P<version>[^._]+))?\n    (?:_(?P<suffix>[^._]+))?\n    \.dylib$\n)\n
1011	([(\[{])|([)}\])])
1012	([\(,])\s*(\d.*?)\s*([,\)])
1013	([\d.]+)[^(]*(?:\((.+)\))?
1014	([\t ]+)
1015	([^\'"<>]|"[^"]*"(?=>|/|\s|\w+=)|\'[^\']*\'(?=>|/|\s|\w+=))*(?=[<>])|.*?(?=[<>])
1016	(\ ?\ ?\ ?)\[\^([^\]]*)\]:\s*(.*)
1017	(\.0+)*$
1018	(\\+)"
1019	(\d+)$
1020	(\s)
1021	(\s*#)|(\s*$)
1022	(\s*\n\s*)
1023	(\s+|-*\w{2,}-(?=\w{2,}))
1024	(\s+|[^\s\w]*\w{2,}-(?=\w{2,})|(?<=[\w\!\"\\'\&\.\,\?])-{2,}(?=\w))
1025	(a)(b)?b
1026	(a)?a
1027	(a)|(b)
1028	,?\s+
1029	-[ -]*$
1030	.*boost_(.*?)\..*
1031	.+\s+"([^\s]+)\s+([^\s]+)\s+HTTP/\d+\.\d+"\s+200\s+.*
1032	0x[0-9a-fA-F]+
1033	50*$
1034	:(\d+)$
1035	;+$
1036	<#\d+#>
1037	</?(\w+)
1038	</form\s*>
1039	<\S[^>]*>
1040	<th>x.*<span class="number">42</span>(?s)
1041	<th>y.*<span class="number">23</span>(?s)
1042	<th>z.*<span class="number">15</span>(?s)
1043	<title>(.*?)</title>
1044	=[ =]*$
1045	Contents of
1046	Details for werkzeug.testsuite.debug.Foo object at
1047	Local variables in frame
1048	SECRET|PASSWORD|PROFANITIES_LIST
1049	[ ,]+
1050	[ \n]*{
1051	[ \n]*{(([^{}}]|{[^}]*})*)}
1052	[-a-zA-Z_@.]+
1053	[<>\'"]
1054	[\.0-9]+
1055	[\\]([a-zA-Z]+[*]?) ?({|\s*\n?)
1056	[\\]begin{([^}]*)}
1057	[\\]end{([^}]*)}
1058	[\x00-\x20]
1059	[^\\][^\\]*
1060	[^\w]+
1061	[^]~%\\{}]+
1062	[^a-z0-9]+
1063	[a-zA-Z]
1064	[a-zA-Z][a-zA-Z0-9.-]*$
1065	\$([a-zA-Z0-9_]*)\$
1066	\$[a-zA-Z]+: (.+) \$$
1067	\$[a-zA-Z]+: (.+) \$
1068	\$\(([a-zA-Z0-9_]+?)\)
1069	\(([^)]+)\)
1070	\(.*\)
1071	\(\)
1072	\+=[=+]+=\+ *$
1073	\.\d+$
1074	\A\d{4}-\d\d-\d\dT\d\d:\d\d:\d\dZ
1075	\[.*$
1076	\\([a-zA-Z])+\s+
1077	\\ABC\b
1078	\\ASCII\b
1079	\\Cpp\b
1080	\\EOF\b
1081	\\NULL\b
1082	\\POSIX\b
1083	\\UNIX\b
1084	\\\\
1085	\\hackscore\s*{[^}]*}
1086	\\raisebox\s*{[^}]*}
1087	\]
1088	\bNOLINT\b(\([^)]*\))?
1089	\benclosure\b
1090	\btag\b
1091	\bvcard\b
1092	\s([^a])
1093	\s([^a]*)
1094	\s(b)
1095	\s*(#|$)
1096	\s*([a-f0-9]+):\s*(\S.*)
1097	\s*-[ef]\s+
1098	\s*-e\s+
1099	\s*-e\s+.*#egg=(.*)$
1100	\s*-f\s+
1101	\s*[-\w]+\s*:\s*[^:;]*;?
1102	\|
1103	\n    ^\n    [ \t]*\n    (?: while\n    |   else\n    |   def\n    |   return\n    |   assert\n    |   break\n    |   class\n    |   continue\n    |   elif\n    |   try\n    |   except\n    |   raise\n    |   import\n    |   yield\n    )\n    \b\n
1104	\n\s+
1105	\t
1106	^$
1107	^(?P<host>[^:]+):(?P<port>[0-9]+)$
1108	^(?P<type>[A-Z]+) ?\(
1109	^([A-Za-z]:)?[/\\\\]*
1110	^([^/]+)(/.*)$
1111	^([^@]*@)?([^:]*)(:.*)?
1112	^(acc|borland|como|cw|dmc|darwin|gcc|hp_cxx|intel|kylix|vc|mgw|qcc|sun|vacpp)\d*$
1113	^//(\s*)TODO(\(.+?\))?:?(\s|$)?
1114	^<gml:Point SrsName="EPSG::4326"><gml:coordinates decimal="\." cs="," ts=" ">-104.609251\d+,38.255001</gml:coordinates></gml:Point>
1115	^[ \t]*(#|%:)[ \t]*(ifdef|ifndef|if|else|elif|endif|include|import|define|undef|pragma)[ \t]*(.*)\r*$
1116	^[ ]{0,3}((\d+\.)|[*+-])[ ](.*)
1117	^[ ]{0,3}[*+-][ ](.*)
1118	^[ ]{0,3}\d+\.[ ](.*)
1119	^[ ]{4,7}((\d+\.)|[*+-])[ ].*
1120	^[-0-9]+|-+$
1121	^[1-5]$
1122	^[A-Za-z]:$
1123	^[a-zA-Z_][a-zA-Z0-9_]*[(]
1124	^[a-zA-Z_]\w*
1125	^[sgydpn]+$
1126	^\-l
1127	^\d+_\d+_?\d*$
1128	^\s+:toctree:\s*(.*?)\s*$
1129	^\n        (?P<prefix>(?:[^\r\n|\n|\r])*?)\n        [\ \t]*Local\ Variables:[\ \t]*\n        (?P<suffix>.*?)(?:\r\n|\n|\r)\n        (?P<content>.*?\1End:)\n        
1130	^columns .* are not unique$
1131	^createdb: database creation failed: ERROR:  database ".+" already exists
1132	^mt$
1133	^ns:((\w+\.)*(\w+))$
1134	^py[0-9]{2}$
1135	^scale:\d+\-\d+\:$
1136	a(?:b|(c|e){1,2}?|d)+?(.)
1137	a\s
1138	coding[=:]\s*([-\w.]+)
1139	foo\d
1140	md5=[0-9a-f]{32}$
1141	p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del|hr|hr/|style|li|dt|dd|thead|tbody|tr|th|td
1142	snapshot-code-name,(\d+),\"(.*)\"
1143	{
1144	}
1145	~$|\.bak$|#$|\.cvsignore$
1146	foo\d
1147	((?:\'[^\'\n\r]*\')+)
1148	[^A-Za-z0-9\-_.~!*'();:@&=+$,/?%#[\]]
1149	#(.*)\n
1150	#define ([A-Z][A-Z0-9_]+) (.*)\n
1151	%([0-9a-fA-F][0-9a-fA-F])
1152	%module(?:\s*\(.*\))?\s+(.+)
1153	&#(\d+|[xX][0-9a-fA-F]+);
1154	&&
1155	&(?:\w+|#\d);
1156	&([A-Za-z0-9_]+);
1157	&.*?;|<.*?>|([A-Za-z0-9][\w-]*)
1158	&nbsp;
1159	( +)
1160	("(?:[^"\\]*(?:\\.[^"\\]*)*)"|\'(?:[^\'\\]*(?:\\.[^\'\\]*)*)\'|[^\s]+)
1161	((a))
1162	(.*)[\\/](.*?)$
1163	(.*?)(#)(.*)
1164	(.*?[\[\{\(,])(\s*)([\[\{\(])
1165	(.*?[\]\}\)],?)(\s*)([\]\}\)])
1166	(.*?[^\s\]\}\)]+.*?)([\]\}\)],?)\s*$
1167	(?:http://)?(?:(?P<user>\w+):(?P<pass>.*)@)?(?P<host>[\w\-\.]+)(?::(?P<port>\d+))?
1168	(?<!\\)<%(?:(#)|(py(?:thon)?\b)|(?:\s*(\w+))\s*)(.*?)\s*%>\n?(?s)
1169	(?P<q>[\\'"])(.*?)(?<![^\\][\\])(?P=q)
1170	(?i)\.(gif|jpg)$
1171	(?i)^\s*([a-z_]\w*(?:\.[a-z_]\w*)*)(.*)
1172	([0-9]*) planes
1173	([0-9]{4}-[0-9]{2}-[0-9]{2})  ([0-9]{4,5}) {1,2}(.*)
1174	([<>]|&(?!#\d+;|#x[0-9a-fA-F]+;|\w+;))
1175	([A-Z]{3}_ERROR_[A-Z_0-9]+)\s+=?\s*\(?([A-Z_0-9-][A-Z_0-9-+ ]+[A-Z_0-9])
1176	([\"\\])
1177	([\w.+]+)\s*\(#(\d+),\s*([\w ]+),\s*([\w :]+)\)\s*\[([^\]]+)\]?
1178	([\w\-]+)\s*=\s*([\\'"])(.*?)\2
1179	([^:]+):(.*)
1180	([a-zA-Z][a-zA-Z_-]*)\s*(?:=(?:"([^"]*)"|([^ \t",;]*)))?
1181	([a-zA-Z_]\w*(?:\.[a-zA-Z_]\w*)*)(?:\s*\(\s*([^)\s]+)\s*\))?$
1182	([sS][eE][tT]\s*\()\s*([^\s]+)\s+"([^"]+)"\)
1183	(\d+(?:\.\d+)*)(/\d+)?
1184	(a|b)*?c
1185	(plugins.*|scripts.*)$
1186	,\s*([^\s;,\n]+)(?:[^,]*?;\s*q=([0-9.]*))?
1187	--[^>]*>
1188	-.*
1189	-arch\s+(\S+)
1190	-isysroot\s+(\S+)
1191	-isysroot\s+\S+(\s|$)
1192	.*(kind=)(album|tag|photo|comment)
1193	.*?\b(as)\b
1194	.*?c
1195	.*?cd
1196	.*\.([a-zA-Z]{3,}$)
1197	//
1198	//|/$
1199	/[*] #undef ([A-Z][A-Z0-9_]+) [*]/\n
1200	:(\w+)$
1201	::
1202	; *q *=
1203	<!--|-->
1204	<([\w\:\-]+)((?:\s+[\w\-:]+(?:\s*=\s*(?:(?:"[^"]*")|(?:\\'[^\\']*\\')|[^>\s]+))?)*)\s*(\/?)>
1205	<[^>]*>
1206	<\/([\w\:\-]+)[^>]*>
1207	<\/?[\w:\-]+(?:\s+[\w\-:]+(?:\s*=\s*(?:(?:"[^"]*")|(?:\\'[^\\']*\\')|[^>\s]+))?)*\s*(\/?)>$
1208	<a class="ot-profile-link-2" href="/u/[^/]+/">([^<]+)</a></span>
1209	<a class="ot-revision-link" href="/p/[^/]+/source/detail\?r=[0-9]+">([^<]+)</a>
1210	<body[^>]*>(.*?)</body>
1211	<br.*?>
1212	<h2>.+?Revision ([0-9]*): ([^<]*)</h2>
1213	<li class="header up"><a href="ref\..*?\.php">([a-zA-Z0-9\s]+)</a></li>
1214	<li><a href="([^"]*)">([^"]*)</a></li>
1215	<root>([^<]*)</root>
1216	<span class="date below-more" title="([^"]+)"
1217	<structure name="([^"]+)" noffset="([^"]+)" install="([^"]*)" ioffset="([^"]+)" voffset="([^"]+)"
1218	<title>\([^<]*\)</title>
1219	<url>([^<]+)</url>
1220	@(\w*)(.*)
1221	Client UrlCache MMF Ver \d\.\d.*
1222	Cookie\:.+\@([!-\xff]+).*?(.+\@[!-\xff]+\.txt)
1223	Event\.(?P<n>\d+)\.(?P<param>\w+)
1224	GET http://([a-zA-Z0-9-_.]+)(:([0-9]+))?
1225	NPT_SET_LOCAL_LOGGER\s*\([ "]*(\S+)[ "]*\)
1226	[ \t]+
1227	[ \t]*
1228	[ \t]*(#)
1229	[ \t][ \t]+
1230	[-+]?(\d+|\d*\.\d+)$
1231	[0-9]+,[0-9]+
1232	[:]
1233	[<>&]
1234	[A-Z][a-z]+
1235	[\({\[\]}\)\n]
1236	[\._]|\-(?=$)
1237	[\000-\037\177-\377]
1238	[\\'|"|#|\\|\[|\]|\{|\}|\(|\)]
1239	[\n\r]
1240	[\r\n]+
1241	[\s,]+
1242	[\|,]
1243	[^-A-Za-z0-9_.]
1244	[^.]*
1245	[^=]+=(.+)
1246	[^A-Za-z0-9_.!~*()-]
1247	[^a-zA-Z0-9._-]
1248	[^a-zA-Z0-9]+
1249	[`\x00- \x7f-\xa0\s]+
1250	[a-zA-Z][-a-zA-Z0-9_:]*
1251	\$Revision: (\d+)
1252	\$\$|\${\w+}
1253	\$\{([\w\-]+)\}
1254	\((.*)\)
1255	\([^()]*\b(?:[\w:]|<[^()]*>)+(\s?&|&\s?)\w+
1256	\([^()]*\b(?:[\w:]|<[^()]*>)+\s+const(\s?&|&\s?)[\w]+
1257	\([^()]*\bconst\s+(?:typename\s+)?(?:struct\s+)?(?:[\w:]|<[^()]*>)+(\s?&|&\s?)\w+
1258	\([^)]*\)
1259	\.$
1260	\.?[^.]*
1261	\.dll$
1262	\.lib$
1263	\\(\\'|\"|\\|[abfnrtv]|x.{0,2}|[0-7]{1,3})
1264	\\\n|\\(\\|<%)
1265	\\n
1266	\n$
1267	\n+
1268	\r[ \t]+def 
1269	\s*<(\w*)>
1270	\s*>$
1271	\s*@(\w*):
1272	\s*else\s*:\s*(#|$)
1273	\s+select\s*=\s*([\\'"]).*?\1
1274	\|([\w\|\-]+)$
1275	\n    ^\n    [ \t]*\n    (?: if\n    |   for\n    |   while\n    |   else\n    |   def\n    |   return\n    |   assert\n    |   break\n    |   class\n    |   continue\n    |   elif\n    |   try\n    |   except\n    |   raise\n    |   import\n    |   yield\n    )\n    \b\n
1276	\n  =\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \?                    # literal ?\n  (?P<encoding>[qb])    # either a "q" or a "b", case insensitive\n  \?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \?=                   # literal ?=\n  (?=[ \t]|$)           # whitespace or the end of the string\n  
1277	\x01?\x1b\[(.*?)m\x02?
1278	\x1b\[((?:\d|;)*)([a-zA-Z])
1279	^ | $|/ | /
1280	^#import[\s\t]*([^\s^\t]*)[\s\t]*$
1281	^(> )+
1282	^(?P<year>\d{4})-(?P<month>\d{2})-(?P<day>\d{2})(T|\s+)(?P<hour>\d{2}):(?P<minute>\d{2}):(?P<second>\d{2}).*?$
1283	^(["\\'])((?:(?!\1)[^\\]|\\.)*)\1
1284	^([A-Z][A-Z][A-Z])([-+]?[0-9]+)([A-Z][A-Z][A-Z]);([0-9]+)/([0-9]+),([0-9]+)/([0-9]+)$
1285	^([\w\-]+)(?::([\w\-]+))?(?::(\d+),(\d+))?$
1286	^(def|class)\s+
1287	^(https?)://([^/]+)(/.*)$
1288	^--+$
1289	^.*\.(c|cpp)$
1290	^.*\.h$
1291	^...?.?\....?.?
1292	^..?\...?
1293	^//([^/]*)(.*)$
1294	^<\/?\w[\w\:\-]*.*?>
1295	^<logentry.*?revision="([0-9]{4,})".*?<date>([0-9]{4}-[0-9]{2}-[0-9]{2})T.*?<msg>(.*?)</msg>.*?</logentry>$
1296	^Expected$
1297	^[ 0-9a-zA-Z\._\+/\$-]{1,256}$
1298	^[ \t]*(#|%:)[ \t]*(include)[ \t]*(.*)\r*$
1299	^[-\w/]+$
1300	^[\t ]*\n?$
1301	^[\w\-:\$]+
1302	^[a-z0-9][-+.a-z0-9]*:
1303	^\((.*)\)$
1304	^\.+
1305	^\?P<(\w+)>(.*?)$
1306	^\W+
1307	^\[.*\]$
1308	^\s*#\s*macfreeze:\s*(\S*)\s*(.*)\s*$
1309	^\s*(<(?P<a>.*)>|"(?P<b>.*)")
1310	^\s*(<=|>=|<|>|!=|==)\s*([^\s,]+)\s*$
1311	^\s*[#*=]{4,}\n[a-z0-9 -]+\n[#*=]{4,}\s*
1312	^\s*[^#\s].*
1313	^\s*\((.*)\)\s*$
1314	^\s*\|\s.*\s\|\s*$|^\s*\+[=+-]+\+\s*$
1315	^__.*__$
1316	^https?://\S+$
1317	^lib
1318	^s3:\/\/([^\/]*)\/(.*)$
1319	^v..?.?\...?.?
1320	_flymake\.cc$
1321	expect$
1322	import\s+([^;]+)
1323	irb\([a-zA-Z_][a-zA-Z0-9_]*\):\d{3}:\d+[>*"\'] |>> |\?> 
1324	module\s+([^;]+)
1325	nsyms\s+(\d+)
1326	return.*[ \(]..._FAILURE
1327	url\s*\(\s*[^#\s][^)]+?\)
1328	''
1329	'.*
1330	(?:[-a-zA-Z0-9!$&'\(\)\*+,;=._~]|%[a-zA-Z0-9]{2})+$
1331	([^'\\]|\\(.|$))+
1332	\n        ^(\#{1,6})  # \1 = string of #'s\n        [ \t]*\n        (.+?)       # \2 = Header text\n        [ \t]*\n        (?<!\\)     # ensure not an escaped trailing '#'\n        \#*         # optional closing #'s (not counted)\n        \n+\n        
1333	^'(.*)'$
1334	 {2,}\n
1335	"([0-9]*) ([0-9]*) ([0-9]*) ([0-9]*)
1336	## PATH PLACEHOLDER ##
1337	## REPLAY PLACEHOLDER ##
1338	#([\$a-zA-Z0-9_\-\&]+)
1339	#\s*all-random\s+
1340	#\s*ipdoctest:\s*EXTERNAL
1341	#\s*random\s+
1342	#\w\w\w$
1343	#\w\w\w\w\w\w$
1344	#define NODE_MAJOR_VERSION
1345	#define NODE_MINOR_VERSION
1346	#define NODE_PATCH_VERSION
1347	%.*
1348	%\((\w+)\)s
1349	& (?:\n                                          \#(\d+)\n                                          | \#x([\da-f]+)\n                                          | ( (?!\d) [:\w] [-.:\w]+ )\n                                          ) ;
1350	&.*?;|<.*?>|(\w[\w-]*)
1351	((\t)|(    ))(.*)
1352	(.+) release ([\d.]+)[^(]*(?:\((.+)\))?
1353	(.+)\!$
1354	(.+)\.(\w*)$
1355	(.+?)(\s|$)
1356	(.{60})
1357	(;?)$
1358	(<[^>]+>)
1359	(<|>|\+(?!\s*\+|$))
1360	(></)|("")|(\n\s+)\n|(.|\s)
1361	(?![\.\-])dev$
1362	(?![^%])%s
1363	(?<!\\),
1364	(?<={)@(?P<name>[a-zA-Z]+)
1365	(?P<table>\w+)\.(?P<field>\w+)=(?P<value>\d+)
1366	(?P<tzd>[-+](?P<tzdhours>\d\d)(?::?(?P<tzdminutes>\d\d))|Z)
1367	(?m)^  
1368	(?m)^
1369	([ ]+_)|(_[ ]+)|([ ]+)
1370	([&<"\\'>])
1371	([\$\|\\])
1372	([\w-]+)([.#])(\w+)
1373	([\w.+]+)\s*\(#?([^,]+),\s*([\w ]+),\s*([\w :]+)\)\s*\[([^\]]+)\]?
1374	([\w\-]+\s*:)(?!:)\s*
1375	([^"\\]|\\(.|$))+
1376	([^*]|\*(?!/))+
1377	([^*{}\s]@|[^*{}@\s]|\*(?!/))+
1378	([^*{}\s]@|[^*{}@]|\*(?!/))+
1379	([^0-9]+)(?: release )?([\d.]+)[^(]*(?:\((.+)\))?
1380	([^\\] )
1381	([a-zA-Z-]+):\s*$
1382	([a-z]*) ([^ \r\n]*)
1383	(\$\(([a-zA-Z0-9\-_]+)\))
1384	(\(\s|\s\))
1385	(\+|-|\*|/|//|\*\*|and|or|xor|=\?|=|==|<>|<|>|<=|>=)$
1386	(\S+(\.\w+)*)\.(\w*)$
1387	(\S+)\s+(\S+)
1388	(\\\\)|(\$\$)|\$\{([^}]+)\}
1389	(\d*\.?\d*)\s*(\S*)
1390	(\d+)bit
1391	(\d+[abc])$
1392	(\d+\.\d+)
1393	(\s*)[^\s]+@[^(\s]+(\s*)\(.+\)
1394	(\s*<[^>]+>[\s\n\r]*)$
1395	(\s+|-*\w{2,}-(?=\w{2,})|(?<=[\w\!\"\\'\&\.\,\?])-{2,}(?=\w))
1396	(\t+)
1397	(\w+)$
1398	(\w+)(.*)
1399	(^[^\.]+)\.
1400	(^|(?<=\s))@(?P<name>[a-zA-Z]+)
1401	(add|subtract|multiply|divide|remainder|power|and~|or~|xor~|minimum|maximum|negate|complement|absolute|random|head|tail|next|back|skip|at|pick|first|second|third|fourth|fifth|sixth|seventh|eighth|ninth|tenth|last|path|find|select|make|to|copy\*|insert|remove|change|poke|clear|trim|sort|min|max|abs|cp|copy)$
1402	(error|source|input|license|help|install|echo|Usage|with|func|throw-on-error|function|does|has|context|probe|\?\?|as-pair|mod|modulo|round|repend|about|set-net|append|join|rejoin|reform|remold|charset|array|replace|move|extract|forskip|forall|alter|first+|also|take|for|forever|dispatch|attempt|what-dir|change-dir|clean-path|list-dir|dirize|rename|split-path|delete|make-dir|delete-dir|in-dir|confirm|dump-obj|upgrade|what|build-tag|process-source|build-markup|decode-cgi|read-cgi|write-user|save-user|set-user-name|protect-system|parse-xml|cvs-date|cvs-version|do-boot|get-net-info|desktop|layout|scroll-para|get-face|alert|set-face|uninstall|unfocus|request-dir|center-face|do-events|net-error|decode-url|parse-header|parse-header-date|parse-email-addrs|import-email|send|build-attach-body|resend|show-popup|hide-popup|open-events|find-key-face|do-face|viewtop|confine|find-window|insert-event-func|remove-event-func|inform|dump-pane|dump-face|flag-face|deflag-face|clear-fields|read-net|vbug|path-thru|read-thru|load-thru|do-thru|launch-thru|load-image|request-download|do-face-alt|set-font|set-para|get-style|set-style|make-face|stylize|choose|hilight-text|hilight-all|unlight-text|focus|scroll-drag|clear-face|reset-face|scroll-face|resize-face|load-stock|load-stock-block|notify|request|flash|request-color|request-pass|request-text|request-list|request-date|request-file|dbug|editor|link-relative-path|emailer|parse-error)$
1403	(final|stable)$
1404	(halt|quit|do|load|q|recycle|call|run|ask|parse|view|unview|return|exit|break)$
1405	(native|alias|all|any|as-string|as-binary|bind|bound\?|case|catch|checksum|comment|debase|dehex|exclude|difference|disarm|either|else|enbase|foreach|remove-each|form|free|get|get-env|if|in|intersect|loop|minimum-of|maximum-of|mold|new-line|new-line\?|not|now|prin|print|reduce|compose|construct|repeat|reverse|save|script\?|set|shift|switch|throw|to-hex|trace|try|type\?|union|unique|unless|unprotect|unset|until|use|value\?|while|compress|decompress|secure|open|close|read|read-io|write-io|write|update|query|wait|input\?|exp|log-10|log-2|log-e|square-root|cosine|sine|tangent|arccosine|arcsine|arctangent|protect|lowercase|uppercase|entab|detab|connected\?|browse|launch|stats|get-modes|set-modes|to-local-file|to-rebol-file|encloak|decloak|create-link|do-browser|bind\?|hide|draw|show|size-text|textinfo|offset-to-caret|caret-to-offset|local-request-file|rgb-to-hsv|hsv-to-rgb|crypt-strength\?|dh-make-key|dh-generate-key|dh-compute-key|dsa-make-key|dsa-generate-key|dsa-make-signature|dsa-verify-signature|rsa-make-key|rsa-generate-key|rsa-encrypt)$
1406	(pinfo )?(\?*)(.*?)(\??$)
1407	(url\([\'"]{0,1}\s*(.*?)["\']{0,1}\))
1408	(}?\s*)$
1409	, ([a-zA-Z0-9_]+)=
1410	,$
1411	,\S
1412	-(a|b|c)(\d+)$
1413	.*/
1414	.*/(.*)
1415	.*:$
1416	.*\!$
1417	.*\.__.*?__
1418	.*\?$
1419	.. auto(function|method|attribute|class|exception|module)::\s*([A-Za-z0-9_.]+)\s*$
1420	//$
1421	/\*\*
1422	0{6,}\d
1423	;\s*
1424	<([^\s\w/])
1425	<.+?>
1426	=[^,)]+,
1427	=[^,)]+\)$
1428	@.*
1429	AsciiString$
1430	IronPython\s*([\d\.]+)(?: \(([\d\.]+)\))? on (.NET [\d\.]+)
1431	Out\[\d+\]: \s*?\n?
1432	REBOL$
1433	SYMBOL_
1434	["&<>]|[^\x00-\x7f]
1435	[*]\[(?P<abbr>[^\]]*)\][ ]?:\s*(?P<title>.*)
1436	[, ]+
1437	[,;: ]+
1438	[,<>()]
1439	[.~]?([abc])\.?
1440	[\+\!]+$
1441	[\-\.](dev)[\-\.]?r?(\d+)$
1442	[\-\s]
1443	[\.\-]
1444	[\.\-](dev|devel)$
1445	[\?\&]gsessionid=(\w*)
1446	[\s\-]+
1447	[\s]+
1448	[^A-Za-z0-9]
1449	[^\)]+
1450	[^\w]
1451	[^a-zA-Z0-9_-]
1452	[^a-z]
1453	[a-zA-Z_$][A-Za-z0-9_$..]*
1454	[a-zA-Z_]([a-zA-Z0-9_.]*) *$
1455	[a-zA-Z_]\w*
1456	\$([a-zA-Z_][a-zA-Z0-9_]*)
1457	\$\{([a-zA-Z0-9\-_]+)\}
1458	\(([a-zA-Z0-9_]+)=
1459	\)\s*
1460	\*(\d+)?$
1461	\*\s*([0-9]+)
1462	\.([\$a-zA-Z0-9_\-\&]+)
1463	\.?(dev-r|dev\.r)\.?(\d+)$
1464	\.?(dev|git|bzr)\.?(\d+)$
1465	\.?(pre|preview|-c)(\d+)$
1466	\.?(r|-|-r)\.?(\d+)$
1467	\.?0+$
1468	\.o$
1469	\A[\x00-\x7f]*\Z
1470	\[(.*)\]
1471	\[([^\]]*)\]
1472	\\\n
1473	\^
1474	\b(\w*)\b\W*
1475	\b0+(\d+)(?!\d)
1476	\bfunction\b
1477	\d+>(?=\s|\Z)
1478	\d{3} 
1479	\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}(?:\.\d+)?
1480	\s$
1481	\s*#define[ \t]+[^_]*_width[ \t]+(?P<width>[0-9]+)[\r\n]+#define[ \t]+[^_]*_height[ \t]+(?P<height>[0-9]+)[\r\n]+(?P<hotspot>#define[ \t]+[^_]*_x_hot[ \t]+(?P<xhot>[0-9]+)[\r\n]+#define[ \t]+[^_]*_y_hot[ \t]+(?P<yhot>[0-9]+)[\r\n]+)?[\000-\377]*_bits\[\]
1482	\s*$
1483	\s*((?<=[\\'"\s])[^\s/>][^\s/=>]*)(\s*=+\s*(\\'[^\\']*\\'|"[^"]*"|(?![\\'"])[^>\s]*))?
1484	\s*=.*
1485	\s*\*(\s+|(?!/))
1486	\s+("(?:\\\d\d\d)*")},$
1487	\s+(\d+)$
1488	\s+(\d+),$
1489	\s+{(\d+), "(\w+)", (\d+), (\d+), states_(\d+),$
1490	\s+{(\d+), (0|"\w+")},$
1491	\s+{(\d+), (\d+)},$
1492	\s+{(\d+), arcs_(\d+)_(\d+)},$
1493	\s+{(\d+), labels},$
1494	\w*
1495	\w+:|#
1496	\w+\s*:\s*\w
1497	\w\w\w\w
1498	\{\{(.*?)\}\}
1499	\n            (?<!\\)\n            (`+)        # \1 = Opening run of `\n            (?!`)       # See Note A test/tm-cases/escapes.text\n            (.+?)       # \2 = The code block\n            (?<!`)\n            \1          # Matching closer\n            (?!`)\n        
1500	\n          # Match tail of: [text](/url/) or [text](/url/ "title")\n          \(            # literal paren\n            [ \t]*\n            (?P<url>            # \1\n                <.*?>\n                |\n                .*?\n            )\n            [ \t]*\n            (                   # \2\n              ([\'"])            # quote char = \3\n              (?P<title>.*?)\n              \3                # matching quote\n            )?                  # title is optional\n          \)\n        
1501	\n          # Match tail of: [text][id]\n          [ ]?          # one optional space\n          (?:\n[ ]*)?   # one optional newline followed by spaces\n          \[\n            (?P<id>.*?)\n          \]\n        
1502	\n          <\n           (?:mailto:)?\n          (\n              [-.\w]+\n              \@\n              [-\w]+(\.[-\w]+)*\.[a-z]+\n          )\n          >\n        
1503	\r
1504	\r\n|\r
1505	^#define\s+(\w+)\s+(\d+)$
1506	^%%([^:]*):[ \t]*(.*)[ \t]*$
1507	^%[%!\w]([^:]*)[ \t]*$
1508	^((-){80}|)$
1509	^(.*)_([0-9]+)$
1510	^(?:(?:00|\+)386|0)(\d{7,8})$
1511	^(?:SI)?([1-9]\d{7})$
1512	^(?:[78]-?)?(\d{3})[-\.]?(\d{3})[-\.]?(\d{4})$
1513	^(?P<version>(?P<major>\d+)\.(?P<minor>\d+)\.(?P<subminor>\d+))((rc(?P<release_candidate>\d+))|dev)?-CAPI-(?P<capi_version>\d+\.\d+\.\d+)$
1514	^([A-Za-z][^:]*):[ \t]*(.*)[ \t]*$
1515	^([ABCEGHJKLMNPRSTVXY]\d[ABCEGHJKLMNPRSTVWXYZ]) *(\d[ABCEGHJKLMNPRSTVWXYZ]\d)$
1516	^([\w\-:]*)
1517	^(\+385|00385|0)(?P<prefix>\d{2})(?P<number>\d{6,7})$
1518	^(\.\.)[\/](.*)$
1519	^(\d+)
1520	^(\d:)?(\S+)-(\S+)$
1521	^(\d{2})(\d{2})(\d{3})(\d{2})(\d{3})(\d)$
1522	^(\d{3})\s(\d{3})$
1523	^(\s*)(.*)
1524	^(\s*<[^>]+>\s*)
1525	^.*ld\.so\.cache$
1526	^.+[:(]\d+[:)]|^Done processing
1527	^/+
1528	^601983(?P<copy>\d{1})1(?P<jmbag>\d{10})(?P<k>\d{1})$
1529	^<([\w\:\-]+)((?:\s+[\w\-:]+(?:\s*=\s*(?:(?:"[^"]*")|(?:\'[^\']*\')|[^>\s]+))?)*)\s*(\/?)>
1530	^<(\w+\:?[\w\-]*)((?:\s+[\w\:\-]+\s*=\s*([\\'"]).*?\3)*)\s*(\/?)>
1531	^[ ]{0,3}(?P<key>[A-Za-z0-9_-]+):\s*(?P<value>.*)
1532	^[ ]{4,}(?P<value>.*)
1533	^[,&^\|\*/\+-]|^is |^not |^in |^and |^or 
1534	^[-=*_^#]{3,}\s*$
1535	^[\r\n]*(\s*)
1536	^[a-z]+$
1537	^\.\.\s+(current)?module::\s*([a-zA-Z0-9_.]+)\s*$
1538	^\.\.\s+autosummary::\s*
1539	^\/+
1540	^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\dZ$
1541	^\d{15}(\d{2}[0-9xX])?$
1542	^\d{5}$
1543	^\s*\*?\s*$
1544	^\s*language\s*=\s*ObjC\s*;
1545	^\s+raise|^\s+return|^\s+pass
1546	^data\:.+?;.+?,
1547	^http://testserver/posted/\?c=(?P<pk>\d+$)
1548	^http://testserver/somewhere/else/\?c=\d+$
1549	^http://testserver/somewhere/else/\?foo=bar&c=\d+$
1550	^https?://
1551	^lib([^/]+)\.(a|dylib)$
1552	^libtool: file: .* has no symbols$
1553	_REGEXP_
1554	_id$
1555	class (\w[^\s:]*)(: public (\w[^\s{]*))?\s*{
1556	dev$
1557	foo-0.0.0-py[23].\d.egg$
1558	hsl\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*\)$
1559	ns\d+$
1560	p(\d+)$
1561	pre$
1562	raise\s+\w+\s*,\s*\w+\s*,\s*\w+
1563	rgb\(\s*(\d+)%\s*,\s*(\d+)%\s*,\s*(\d+)%\s*\)$
1564	rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$
1565	static arc arcs_(\d+)_(\d+)\[(\d+)\] = {$
1566	static dfa dfas\[(\d+)\] = {$
1567	static label labels\[(\d+)\] = {$
1568	static state states_(\d+)\[(\d+)\] = {$
1569	to-.*
1570	~
1571	\S
1572	\W
1573	\s+
1574	(nextval\(')([^']+)('.*$)
1575	[^']*'([^']*)'.*
1576	\b'(?=\d{2}s)
1577	^# Your branch is (ahead of|behind) '(.*)' by (\d+) commit
1578	^(\w[\s\w'.-]*)(\((.*)\))?
1579	__version__ = '([^']+)'
1580	goog.require\('([^']*)'\)
1581	 \n
1582	 at 0x[0-9a-f]+
1583	 |\(
1584	!\s*
1585	"([0-9][.0-9]*)
1586	"\'(?=\w)
1587	#.*?(?=\n)|\n(?=$)
1588	#\s*-\*-\s*noplot\s*-\*-
1589	#\s*coding[:=]\s*([-\w.]+)
1590	#\{?foreach\}?\(.+?\).*?#\{?end\}?
1591	#\{?if\}?\(.+?\).*?#\{?end\}?
1592	#\{?macro\}?\(.*?\).*?#\{?end\}?
1593	#define __ARM_NR_(\w*)\s*\(__ARM_NR_BASE\+\s*(\w*)\)
1594	#define __NR_(\w*)\s*([0-9]*)
1595	#define __NR_(\w*)\s*\(__NR_SYSCALL_BASE\+\s*(\w*)\)
1596	#define __NR_(\w*)\s*\(__NR_timer_create\+(\w*)\)
1597	#x([\d|A-F]{4,4})
1598	%
1599	%(?![0-9A-Fa-f]{2})
1600	%[^\r\n\v]*
1601	&(?!\#)
1602	((?:\((?P<id>[0-9]+|RX|CR)\))*)(?P<str>.+)?
1603	((?<!\\)(\\\\)*)\.
1604	((User|Msg|MsgAssertion)Exceptio(n))\(( *)(\d+)
1605	(([a-zA-Z0-9\_\-\.\+]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?))(\?subject=\S+)?
1606	((\d|\w|_)+)
1607	(.*) \(([0-9]+)\)$
1608	(.*)\((.*)\)
1609	(.*)\.(\w+:.+\s)
1610	(.*)_\d\d
1611	(.*?) as (\w+)
1612	(.+):(\d+)
1613	(.+?)(\(.*\))
1614	(/\.)|(//)|([\\:\*\?\""\<\>\|]|[\x00-\x1f]|[\x7f-\x9f])
1615	(3\.1\d+)|(MiKTeX \d+.\d+)
1616	(:|\s)0+\.(\d+)
1617	(?:\r\n|\r|\n)
1618	(?<!%)%(?!%)
1619	(?<!\\)((\\\\)*)\\n
1620	(?<!\\)([aAbBcdDeEfFgGhHiIjlLmMnNoOPrsStTUuwWyYzZ])
1621	(?<!\\)\$
1622	(?<=\n)\s*#[^#]
1623	(?<=^PLATFORM_VERSION=).*
1624	(?<=^TARGET_BUILD_VARIANT=).*
1625	(?<=^TARGET_PRODUCT=).*
1626	(?P<fence>^~{3,})[ ]*(\{?\.(?P<lang>[a-zA-Z0-9_-]*)\}?)?[ ]*\n(?P<code>.*?)(?P=fence)[ ]*$
1627	(?P<platform>.+?)\/(?P<locale>.+?)\/(?P<product>\w+)-(?P<version>\w+\.\w+)\.(?P<type>\w+).mar
1628	(?P<prefix>[|+ ]*)(?P<samples>\d+), (?P<symbol>[^,]+), (?P<image>.*)
1629	(?P<product>\w+)(-)(?P<version>\w+\.\w+(\.\w+){0,2})(\.)(?P<locale>.+?)(\.)(?P<platform>.+?)(\.)(?P<type>\w+)(.mar)
1630	(?P<table>\w+)\.(?P<field>\w+)=(?P<value>.+)
1631	(?P<year>\d{4})-(?P<month>\d{1,2})-(?P<day>\d{1,2})[T ](?P<hour>\d{1,2}):(?P<minute>\d{1,2})(?::(?P<second>\d{1,2})(?:\.(?P<microsecond>\d{1,6})\d{0,6})?)?(?P<tzinfo>Z|[+-]\d{1,2}:\d{1,2})?$
1632	(?i)([ -](regular|plain|italic|oblique|bold|semibold|light|ultralight|extra|condensed))+$
1633	(?i)([\xe1\xe9\xed\xf3\xfa]).*([\xe1\xe9\xed\xf3\xfa])
1634	(?i)([aeiou]).{1,3}([aeiou])nes$
1635	(?i)[\xe1\xe9\xed\xf3\xfa]
1636	(?i)_wsh\.py$
1637	(?ms)^(?P<package>[^#]\S+)[\t ]+(?P<question>\S+)[\t ]+(?P<type>\S+)[\t ]+(?P<value>[^\n]*)$
1638	([!{}:;>+\(\[,])\s+
1639	([+\-&|!(){}\[\]\^"~*?:\\])
1640	([0-9.]+)
1641	([<>]|&(?![^\s]+;))
1642	([=!]=)\s*(None|False|True)
1643	([=\(\)|\-!@~\"&/\\\^\$\=])
1644	([A-Z]+)
1645	([A-Z]+)([A-Z][a-z])
1646	([\\()\r\n])
1647	([\d\w\-_]+)(.*)
1648	([\d\w\-_]+)\s+(\d+)/(tcp|udp)(.*)
1649	([\s:])(0)(px|em|%|in|cm|mm|pc|pt|ex)
1650	([\x0c])
1651	([^/]+)
1652	([^\"\'=\s])(\s*)#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])
1653	([^\w\s]*)\s*(\t|  )\s*([^\w\s]*)
1654	([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\s|/(?!>))*
1655	([a-z\d])([A-Z])
1656	([abc]|rc)[\-\.](\d+)$
1657	(\*|__key__)
1658	(\D)[.]
1659	(\D)[.](\D)
1660	(\S+)\s*(.*)
1661	(\[.{16,16}[^,]*?),.*?\]\)
1662	(\d+(\.\d+)*)
1663	(\d+) ([^=]+)=
1664	(\d+)% packet loss
1665	(\d+)-(\d+)-(\d+)
1666	(\d+)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)
1667	(\d+):(\d+):(\d+)(?:\.(\d+))?
1668	(\d+)\.(\d+)(\.(\d+))?(b(\d+))?
1669	(\s*)$
1670	(\s+|[^\s\w]*\w+[^0-9\W]-(?=\w+[^0-9\W])|(?<=[\w\!\"\\'\&\.\,\?])-{2,}(?=\w))
1671	(\w+)://(.*)
1672	(\x1b[^m]+m)
1673	(\x1b\[?\??#?[0-9;]*[a-zA-Z0-9@=>]|\x1b\][0-9];.*?\x07|[\x01-\x0f]|\x1b\([AB0])
1674	(\x1b\[[0-9;]+VK)
1675	(^[ \t]*>>> |^[ \t]*\.\.\. )
1676	(^|\n)[ ]{0,3}:[ ]{1,3}(.*?)(\n|$)
1677	(^|\})(([^\{\:])+\:)+([^\{]*\{)
1678	(centos|redhat|fedora)
1679	(debian|ubuntu)
1680	(exit|quit)(\s*\(.*\))?$
1681	(http://)(\w*)
1682	(redhat|fedora|centos)
1683	(tag:blogger.com,1999:blog-)(\w*)
1684	(tag:blogger.com,1999:blog-)(\w*)(.page-)(\w*)
1685	(tag:blogger.com,1999:blog-)(\w*)(.post-)(\w*)
1686	,\s*$
1687	- 
1688	-$
1689	-([0-9]{4}\.[0-9]{2}|p[0-9]+)$
1690	->
1691	.* warning:.*
1692	.*-(\w*)$
1693	.*/.*_V(\d+\.\d+)/mongo
1694	.*: warning: overriding commands for target .+
1695	.*@.*\..*
1696	.*[\\/]([^\\/]+)[\\/][^\\/]+[\\/]scons[\\/]?$
1697	.*\._.*?
1698	.*_([vV]\d+\.\d+)$
1699	.js$
1700	/$
1701	/+$
1702	/+
1703	/{0,2}[^]\0\t\r\v\n ()<>{}/%[]+
1704	10\^\{(.+)\}
1705	3\.1\d+
1706	:[ \t]*(?:#.*)?$
1707	:\s*$
1708	:year
1709	;+\}
1710	;;+
1711	<&
1712	<[^<>]*>
1713	<\?.*\?>
1714	<a href=[^>]*>([^<]+)<
1715	<base\s+href\s*=\s*[\'"]?([^\'">]+)
1716	<img src="(?P<name>[\d]+)" />
1717	<key>ProductUserVisibleVersion</key>\s*<string>(.*?)</string>
1718	<meta.*?content=["\\']*;?charset=(.+?)["\\'>]
1719	<option value="">
1720	<p[^/>]*>\s*</p>
1721	<title>(.*)</title>
1722	@
1723	@(?P<dllname>.*),-(?P<index>\d+)(?:;(?P<comment>.*))?
1724	@@BINARYDIR@@
1725	@@PACKAGE_BASENAME@@
1726	@@PACKAGE_CONFLICTS@@
1727	@@PACKAGE_NAME@@
1728	@@PACKAGE_OBSOLETES@@
1729	@@PACKAGE_PROVIDES@@
1730	@@PACKAGE_REVISION@@
1731	@@PACKAGE_VERSION@@
1732	API|TOKEN|KEY|SECRET|PASS|PROFANITIES_LIST|SIGNATURE
1733	Content-Length: (\d+)
1734	In\ \[\d+\]: 
1735	Ran (\d+) tests
1736	U[\dA-F]{5,5}
1737	[ \t\n]
1738	[ ]+
1739	[ {}$]
1740	[&<>"]
1741	[()\\]
1742	[()]
1743	[()]|\s=[^=]|[^=!<>]=\s
1744	[,*")([\]]
1745	[,;:]\s*(?:  |\t)
1746	[-.]
1747	[-T:/.]|\s+
1748	[-_a-z0-9]{64}
1749	[.+-]$
1750	[.\-]
1751	[.](\D)
1752	[.]{2,}
1753	[0-9-]*(.+)$
1754	[0-9]
1755	[=!]=
1756	[?*+]+
1757	[\0\t\r\014\n ]+
1758	[\?\&]gsessionid=(\w*\-)
1759	[\W]+
1760	[\\/]
1761	[\n\t]
1762	[\s\(\)]+
1763	[\n\r]
1764	[^A-Z^a-z^0-9^:]+
1765	[^A-Z^a-z^0-9^\/]+
1766	[^\w\.\-]
1767	[^\}\{]+\{\}
1768	[a-zA-Z_][a-zA-Z0-9_]*
1769	[a-z]+
1770	[a-z]+(_[A-Z]+)?$
1771	[~:+_ -]
1772	\'"(?=\w)
1773	\ \ \ \.\.\.+: 
1774	\"\"\"|\\'\\'\\'
1775	\$(\w+)
1776	\$\{?[a-zA-Z_][a-zA-Z0-9_]*(\([^)]*\))?(\.[a-zA-Z0-9_]+(\([^)]*\))?)*\}?
1777	\${.+?}
1778	\(([\d,]+)\)
1779	\((\d+)\)
1780	\(.*\)\s*$
1781	\([^()]*\)
1782	\(beta\)$
1783	\(|\)
1784	\-\-?\w+[\-\w]*$
1785	\-\-[A-Za-z][\w\-]*(\.[\w\-]+)*\=.*
1786	\.(?![^.]*$)
1787	\.([hc]|py|txt|sln|vcproj)$
1788	\.[svn|git|hg|scc|vssscc]
1789	\.\.|^\./|\.$|/\./|^-|^_ah/
1790	\.exe$
1791	\.html$
1792	\.pdb$
1793	\.setup$
1794	\.|\\|\/|\||\:|\?|\*|"|<|>|[\x00-\x1f\x7f-\x9f]
1795	\[#x([\d|A-F]{4,4})-#x([\d|A-F]{4,4})\]
1796	\[(\d?\d?\d?)%\]
1797	\[.*\]\sSONAME\s+([^\s]+)
1798	\[[0-9]+\]$
1799	\[[^]]*\]
1800	\[[a-zA-Z0-9.]:
1801	\\$
1802	\\(\d+)
1803	\\|\/|\||\:|\?|\*|"|<|>|[\x00-\x1f\x7f-\x9f]/
1804	\b(alfa|apha)\b
1805	\b(pre-alpha|prealpha)\b
1806	\band\(
1807	\bhtml|js|css|xml|haml|stylus\b
1808	\d*\.\d*\.\d*\.\d*
1809	\d+ GNU.sparse.numbytes=(\d+)\n
1810	\d+ GNU.sparse.offset=(\d+)\n
1811	\d+ hdrcharset=([^\n]+)\n
1812	\d+-
1813	\d+.\d+.\d+
1814	\d+[\.\d+]+
1815	\d+\.\d+
1816	\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}
1817	\s*# SOURCE LINE (\d+)
1818	\s*#![^\r\n]*
1819	\s*(?:UPDATE|INSERT|CREATE|DELETE|DROP|ALTER)
1820	\s*(?:UPDATE|INSERT|CREATE|DELETE|DROP|ALTER|LOAD +DATA|REPLACE)
1821	\s*:\s*
1822	\s*=\s*
1823	\s*SELECT
1824	\s*SET\s+(?:(?:GLOBAL|SESSION)\s+)?\w
1825	\s*\(0[0-7]+\).*
1826	\s*\(0[xX][0-9a-fA-F]*\).*
1827	\s*\(\d+[ulUL]*\).*
1828	\s*https?:
1829	\s*https?:.*#egg=(.*)$
1830	\s+([!{};:>+\(\)\],])
1831	\s+\S
1832	\s+const$
1833	\s+in\s+
1834	\sSONAME\s+([^\s]+)
1835	\sassert *\(
1836	\x00
1837	\x00\x01
1838	\{([^\}]*)\}
1839	\{([^{]*?)\}
1840	\}\}
1841	\n                            ^\s*\n                            (?: (?P<week>   \d+ (?:\.\d*)? ) \s* [wW]  )? \s*\n                            (?: (?P<day>    \d+ (?:\.\d*)? ) \s* [dD]? )? \s*\n                            (?: (?P<hour>   \d+ (?:\.\d*)? ) \s* [hH]  )? \s*\n                            (?: (?P<minute> \d+ (?:\.\d*)? ) \s* [mM]  )? \s*\n                            (?: (?P<second> \d+ (?:\.\d*)? ) \s* [sS]  )? \s*\n                            $\n                            
1842	\n                \'.*?\' |    # single quoted strings or\n                ".*?" |    # double quoted strings or\n                \w+   |    # identifier\n                \S         # other characters\n                
1843	\n    \A\s*                      # optional whitespace at the start, then\n    (?P<sign>[-+]?)            # an optional sign, then\n    (?=\d|\.\d)                # lookahead for digit or .digit\n    (?P<num>\d*)               # numerator (possibly empty)\n    (?:                        # followed by\n       (?:/(?P<denom>\d+))?    # an optional denominator\n    |                          # or\n       (?:\.(?P<decimal>\d*))? # an optional fractional part\n       (?:E(?P<exp>[-+]?\d+))? # and optional exponent\n    )\n    \s*\Z                      # and optional whitespace to finish\n
1844	\n(rel\s*=\s*(?:"(?P<rel1>[^"]*)"|\'(?P<rel2>[^\']*)\'|(?P<rel3>[^>\s\n]*))\s+)?\nhref\s*=\s*(?:"(?P<url1>[^"]*)"|\'(?P<url2>[^\']*)\'|(?P<url3>[^>\s\n]*))\n(\s+rel\s*=\s*(?:"(?P<rel4>[^"]*)"|\'(?P<rel5>[^\']*)\'|(?P<rel6>[^>\s\n]*)))?\n
1845	\n\s*
1846	\ngcc version (\d+\.\d+\.\d+)
1847	\r?\n\d
1848	^   ([^ ]+)
1849	^  --
1850	^# and have (\d+) and (\d+) different
1851	^#!.*pythonw?[0-9.]*([ \t].*)?$
1852	^#
1853	^#define SQLITE_VERSION\D*(\d+)\.(\d+)\.(\d+)(?:\.(\d+))?\D*
1854	^%
1855	^(#[0-9a-f]+|rgb\(\d+%?,\d*%?,?\d*%?\)?|\d{0,2}\.?\d{0,2}(cm|em|ex|in|mm|pc|pt|px|%|,|\))?)$
1856	^(.*)(@charset \"[^\"]*\";)
1857	^(.+):(\d+)$
1858	^(:(?P<prefix>[^ ]+) +)?(?P<command>[^ ]+)( *(?P<argument> .+))?
1859	^(?P<host>[^:]+)(:(?P<port>[0-9]+))?$
1860	^(?P<year>\d{4})-(?P<month>\d{2})-(?P<day>\d{2})T(?P<hour>\d{2}):(?P<minute>\d{2}):(?P<second>\d{2})(\.\d{3,6}Z?)?$
1861	^(CONFIG_\w+)=(.*)$
1862	^(DISTRIB_(?:ID|RELEASE|CODENAME|DESCRIPTION))=(?:\'|")?([\w\s\.-_]+)(?:\'|")?
1863	^(WebSocket-Protocol: [\x20-\x7e]+\r\n)?(Cookie: [^\r]*\r\n)*(Cookie2: [^\r]*\r\n)?(Cookie: [^\r]*\r\n)*\r\n
1864	^([ \t\r\f\v]+)
1865	^([0-9]{4})$
1866	^([\s*,;/])([\?\w\.\-\+]+\w*\s*)(\(?.*$)
1867	^([\w\d]([\w\d\-]{0,61}[\w\d])?\.)*[\w\d]([\w\d\-]{0,61}[\w\d])?$
1868	^([^ ]+) \((.+)\)
1869	^([^/])\:/
1870	^([a-zA-Z0-9]+)([-](.*))?$
1871	^([a-z]*)(:|%3A)([\w-]*)$
1872	^([a-z]{2,3}(_[a-z]{2,8})*)\.py$
1873	^(\d+)([a-z]+)$
1874	^(\s*)(def .+:|class .+:)
1875	^(\s*@charset [^;]+;\s*)+
1876	^(\w+)
1877	^(centos|redhat|fedora)
1878	^(debian|ubuntu)
1879	^.*"([\d\w_\+\.\-/]+)".*$
1880	^.*::
1881	^.+:(?P<line>\d+):\s+(?P<error>.+)
1882	^.+\.js$
1883	^.{3,20}$
1884	^/([\w-]+)(/|$)
1885	^/([^/])/
1886	^<\?xml.*?encoding=["\\']*(.+?)["\\'>]
1887	^Version\s+(.*)
1888	^[ \t]*[^# \t]
1889	^[.-]
1890	^[.](\d)
1891	^[0-9]+
1892	^[:~._+-]+
1893	^[= ]([*> ]) ([^- ]+)-([^ ]+) \[ (.*) \]
1894	^[A-Z0-9][a-z0-9]*(-[A-Z0-9][a-z0-9]*)*$
1895	^[\S]+@[\S]+\.[\S]+$
1896	^[\t ]*\n
1897	^[\w\d_]+\.[\w\d_]+\.\d+$
1898	^[\w_]+$
1899	^[\x01-\x0f]$
1900	^[^(\[]*
1901	^[a-z0-9][a-z0-9\._-]{1,253}[a-z0-9]$
1902	^[a-zA-Z0-9-]{1,100}$
1903	^[a-zA-Z0-9-]{1,500}$
1904	^[a-zA-Z0-9_=-]+$
1905	^[a-zA-Z0-9_]+\.[ch]$
1906	^[a-zA-Z0-9_]+\.py$
1907	^[a-zA-Z]
1908	^[a-zA-Z_]
1909	^\S+?:/+(?:[^\s/]*@)?(\S+)$
1910	^\S+@\S+\.\S+$
1911	^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d$
1912	^\s*#(\d+)\s*(.*) \[(0x[0-9A-Za-z]+)\]$
1913	^\s*#.*$
1914	^\s*(?P<self>\s+\[self\])?$
1915	^\s*([-\w]+\s*:[^:;]*(;\s*|$))*$
1916	^\s*(def|class|else|elif|except|finally)
1917	^\s*(else|elif|except|finally).*\:
1918	^\s*(import |from .+ import)
1919	^\s*T_GENERIC_PROTOCOL: (\d+) calls to (.*) with a (.*):$
1920	^\s*T_VIRTUAL_CALL: (\d+) calls on (.*):$
1921	^\s*\#
1922	^\s+([_a-zA-Z][a-zA-Z0-9_.]*)\s*.*?
1923	^\s+.*context\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\s*
1924	^\s+<spontaneous>\s*$|^.*\((\d+)\)$
1925	^\w(\-?\w)*$
1926	^\x1b#
1927	^\x1b.$
1928	^\x1b[()]
1929	^\x1b\[
1930	^\x1b\]
1931	^_|_$
1932	^gemsets for ([^ ]+)
1933	^http://testserver/somewhere/else/\?c=\d+#baz$
1934	^http://testserver/somewhere/else/\?foo=bar&c=\d+#baz$
1935	^https://([^/]+)
1936	^https?://bitbucket.org
1937	^https?://bitbucket.org/
1938	^https?://github.com/[^/]+/?$
1939	^https?://github.com/[^/]+/[^/]+/?$
1940	^https?://github.com/[^/]+/[^/]+/tree/[^/]+/?$
1941	^mongodb 
1942	^mongodb \(.*\)
1943	^places/(\d+)/$
1944	^r(ev)?\s*(\d+)
1945	^ruby-
1946	^v(ersion)?\s*(\d+)
1947	_(unit)?test$
1948	_(unit)?test\.py$
1949	_[A-Z]_
1950	asm-([\w\d_\+\.\-]+)(/.*)
1951	browser\.contentHandlers\.types\.[0-5]
1952	browser\.search\.order\.[1-9]
1953	bytes=(\d+)-(\d+)
1954	const.*char.*versionString\[\].*=
1955	decode\..+
1956	digest 
1957	dummy
1958	episodenumber(\d+)
1959	gecko\.handlerService\.defaultHandlersVersion
1960	gecko\.handlerService\.schemes\.
1961	https://www.google.com/a/[a-z0-9.-]+/ServiceLogin
1962	i.86
1963	publish.*
1964	rgb\s*\(\s*([0-9,\s]+)\s*\)
1965	searchplugins\/.+\.xml
1966	self:\s*(.*)\s*
1967	sysvinit
1968	tag:blogger.com,1999:user-(\d+)\.blog-(\d+)
1969	text/html|application/x(ht)?ml
1970	upstart
1971	url\s*\(([^)]+)
1972	val \w+\s*:
1973	wait (\d+) seconds
1974	{([^}]*)}(.*)
1975	([a-z])'([A-Z])
1976	[^ \r\na-zA-Z0-9\-'()+,./:=?;!*#@$_%]
1977	^'([^']+)'(\|.*$)
1978	  File "[^"]+", line \d+\n$
1979	 *, *
1980	 +
1981	#x([\d|A-F]{4,4})
1982	%[^0-9A-Fa-f]|%[0-9A-Fa-f][^0-9A-Fa-f]
1983	&(#?[xX]?(?:[0-9a-fA-F]+|\w{1,8}));
1984	&(?!(\w+|#\d+);)
1985	&(?:\w+|#\d+);
1986	(((?<=[a-z])[A-Z])|([A-Z](?![A-Z]|$)))
1987	(<a [^>]*?)target=[^\s>]+
1988	(?:<p>(?:&nbsp;|\s|<br \/>)*?</p>\s*)+\Z
1989	(?:W/)?"((?:\\.|[^"])*)"
1990	(?<!%)%(?!%)
1991	(?<!%)%s
1992	(?<!\\)([aAbBcdDeEfFgGhHiIjlLmMnNoOPrsStTUuwWyYzZ])
1993	(?<!\\)\$
1994	([-\w]+)\s*:\s*([^:;]*)
1995	(\d{1,2})\.(\d{1,2})\.(\d{1,2})
1996	(\d{4})-(\d\d?)-(\d\d?)$
1997	(\s+)
1998	.*; charset=([\w\d-]+);?
1999	>\s+<
2000	U[\dA-F]{5,5}
2001	[-\s]+
2002	[^A-Za-z0-9.]+
2003	[^\w\s-]
2004	[^a-zA-Z0-9]+
2005	[`\x00- \x7f-\xa0\s]+
2006	\[#x([\d|A-F]{4,4})-#x([\d|A-F]{4,4})\]
2007	\\(.)
2008	\b((?:([\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\s&()]|&amp;|&quot;)*(?:[^!"#$%&\'()*+,.:;<=>?@\[\]^`{|}~\s]))|(?:\((?:[^\s&()]|&amp;|&quot;)*\)))+)
2009	\d([A-Z])
2010	\s
2011	\s*,\s*
2012	\n       \|
2013	\n(?P<nm>[^-]+)\n-(?P<vn>\d+[^-]*)\n(-(?P<bn>\d+[^-]*))?$\n
2014	\n(?P<nm>[^-]+)\n-(?P<vn>\d+[^-]*)\n(-(?P<bn>\d+[^-]*))?\n-(?P<py>\w+\d+(\.\w+\d+)*)\n-(?P<bi>\w+)\n-(?P<ar>\w+)\n\.whl$\n
2015	\n{2,}
2016	^(#[0-9a-f]+|rgb\(\d+%?,\d*%?,?\d*%?\)?|\d{0,2}\.?\d{0,2}(cm|em|ex|in|mm|pc|pt|px|%|,|\))?)$
2017	^(-?\d+)(\d{3})
2018	^(?P<major>\d+)\.(?P<minor>\d+)(\.(?P<subminor>\d+))?
2019	^([:,;#%.\sa-zA-Z0-9!]|\w-\w|\'[\s\w]+\'|"[\s\w]+"|\([\d,\s]+\))*$
2020	^/([\w-]+)(/|$)
2021	^<Point><coordinates>-95.363\d+,29.763\d+,18</coordinates></Point>$
2022	^[a-z0-9][-+.a-z0-9]*:
2023	^\S+@\S+\.\S+$
2024	^\s*([-\w]+\s*:[^:;]*(;\s*|$))*$
2025	^\s*[^#\s].*
2026	^\s*blocktrans(\s+.*context\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?(?:\s+|$)
2027	^\s*endblocktrans$
2028	^\s*plural$
2029	^\s*trans\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\s+.*context\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\s*
2030	^\s+.*context\s+((?:"[^"]*?")|(?:\'[^\']*?\'))\s*
2031	^{"type":"Point","coordinates":\[-95.363151,29.763374,18(\.0+)?\]}$
2032	_\(((?:".*?")|(?:\'.*?\'))\)
2033	extra\s*==\s*("([^"]+)"|\'([^\']+)\')
2034	url\s*\(\s*[^#\s][^)]+?\)
2035	url\s*\(\s*[^\s)]+?\s*\)\s*
2036	{([^}]*)}(.*)
2037	'(..+)'\s+(..+$)
2038	'([..\n]+)'\s+(..+$)
2039	'\?(.)'
2040	(''')\s*$
2041	(?<!\\)'
2042	(^\s+Address 0x)[0-9A-Fa-f]+( is )\d+( bytes inside a block of size )[0-9,]+( free'd)
2043	(^\s+Address 0x)[0-9A-Fa-f]+( is not stack'd)
2044	AddLocation\((.*?')\)
2045	Change (?P<num>\d+) on \S+ by \S+@\S+ '.+'$
2046	Success: created profile .* at '([^']+)'
2047	[-A-Za-z0-9!\#$%&'*+/=?^_`{|}~]
2048	\'
2049	\\'
2050	\s+\(default:\s+\'(.*)\'\)$
2051	\n    (?:'[^'\n\r]*')+|\n    <=|>=|!=|=|<|>|\n    :\w+|\n    ,|\n    \*|\n    -?\d+(?:\.\d+)?|\n    \w+|\n    \(|\)|\n    \S+\n    
2052	invalid literal for int().*: '?'?
2053	        # A numeric string consists of:\n#    \s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=[0-9]|\.[0-9])        # ...a number (with at least one digit)\n        (?P<int>[0-9]*)          # having a (possibly empty) integer part\n        (\.(?P<frac>[0-9]*))?    # followed by an optional fractional part\n        (E(?P<exp>[-+]?[0-9]+))? # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>[0-9]*)         # with (possibly empty) diagnostic info.\n    )\n#    \s*\n    \Z\n
2054	        # A numeric string consists of:\n#    \s*\n    (?P<sign>[-+])?              # an optional sign, followed by either...\n    (\n        (?=\d|\.\d)              # ...a number (with at least one digit)\n        (?P<int>\d*)             # having a (possibly empty) integer part\n        (\.(?P<frac>\d*))?       # followed by an optional fractional part\n        (E(?P<exp>[-+]?\d+))?    # followed by an optional exponent, or...\n    |\n        Inf(inity)?              # ...an infinity, or...\n    |\n        (?P<signal>s)?           # ...an (optionally signaling)\n        NaN                      # NaN\n        (?P<diag>\d*)            # with (possibly empty) diagnostic info.\n    )\n#    \s*\n    \Z\n
2055	    # indirect offset\n                ^\(\n                (?P<base>&?0                  # just zero\n                        |&?[1-9]{1,1}[0-9]* # decimal\n                        |&?0[0-7]*          # octal\n                        |&?0x[0-9A-F]+      # hex\n                )\n                (?P<type>\n                        \.         # this dot might be alone\n                        [BSL]? # one of this chars in either case\n                )?\n                (?P<sign>\n                        [-+]{0,1}\n                )?\n                (?P<off>0              # just zero\n                        |[1-9]{1,1}[0-9]*  # decimal\n                        |0[0-7]*           # octal\n                        |0x[0-9a-f]+       # hex\n                )?\n                \)$
2056	    # mere offset\n                ^\n                &?                                          # possible ampersand\n                (       0                                       # just zero\n                |       [1-9]{1,1}[0-9]*        # decimal\n                |       0[0-7]+                         # octal\n                |       0x[0-9a-f]+                     # hex\n                )\n                $\n                
2057	  
2058	 DELETED ---$
2059	"(.*?)"
2060	"([^"]*)",?
2061	"([^"]+)"|(\S+)
2062	"|\\
2063	#(\d+)
2064	#+$
2065	#.*$
2066	#define\WDB_VERSION_PATCH\W(\d+)
2067	#egg=(.*)$
2068	%%HiResBoundingBox: .*
2069	%(..?)%
2070	%(?:(?P<cn>[0-9]+)\$)?(?P<width>[0-9]+)?(?:.(?P<pres>[0-9]+))?(?P<size>[hL]|(?:ll?))?(?P<type>[dciouxXefgpCSsn])
2071	%(@|d|f|lld|\d+\.?f|\d+\.\d+f|\d+d)
2072	%.*coding[:=]\s*([-\w\.]+)
2073	%[^%]|%$
2074	&#([xX]?[0-9a-fA-F]+)[^0-9a-fA-F]
2075	&(?:#((?:\d+)|(?:[xX][0-9a-fA-F]+));?|(\w+);)
2076	&(\w+?);
2077	&\w+;
2078	&quot;
2079	(""")\s*$
2080	(#.*)?$
2081	(&&)
2082	((?:\w|-)*)
2083	(([^-/]+)-?([^/]+)?)/?.*
2084	(([^:]+::)*)
2085	((^|[^%])(%%)*%s)
2086	(-)(\d+)$
2087	(-[a-zA-Z])([0-9]*)
2088	(.*)-(?:>?)(.*)
2089	(.*)//(.*)
2090	(.*):(<.*)
2091	(.*):\t?........ (.) (.*)$
2092	(.*)\.([0123456789]+)\.([0123456789]+)\.([0123456789]+)$
2093	(.*)\[(.*)\](.*)
2094	(.*)_\+?wg_.*_(h.*?)_o(\d*).*
2095	(.*){(.*)}(.*)
2096	(.*?)([1aAiI])(.*)
2097	(.*[Jj]amfile\.v2)|(.*[Bb]uild\.jam)
2098	(.+):<(.+)
2099	(.+)=(.+)
2100	(.+?)\.lproj
2101	(.+\.db)\r\n?(.+)(?=sh-3.00# cat /tmp/netshare)
2102	(..)
2103	(/status$)
2104	(<[^>]*>)(.*)
2105	(?:")?Dup(?:licate)?(?:d)?(?:")? of .*?(\d+)
2106	(?:(?:\n\r?)|^)( *)\S
2107	(?:(?P<jarfile>[\w\d.\-\_\\/]+).jar\:)|(?:\s*(\#.*)?)\s*$
2108	(?:.*\()?(?P<name>[-\w*\.]+)(?:,|\)?.*)?
2109	(?:[^:]*\.)?([^:]*:)
2110	(?:[^\s])(\s*)(?:[-+*/|!<=>%&^]+)(\s*)
2111	(?:\[(\d+)\:)|\]
2112	(?:\s*|((?:\\\\)+))\\\n\s*
2113	(?:py.*-)?([\d\.]+)(?:-(\w+))?
2114	(?<![\\\=\:])(\s)
2115	(?<![\\])(\s)
2116	(?<!\\)(\s*\=)|(?<!\\)(\s*\:)
2117	(?<!\\);
2118	(?<!\\)\s+
2119	(?<!\n)\n(?!\n)
2120	(?<=\W)\w
2121	(?<=\W)\w+\W*$
2122	(?P<address>.*?)(?:(?: \(.*?@)|$)
2123	(?P<class>OpenLayers\..*?)\(
2124	(?P<error>.+?) at .+? line (?P<line>\d+)(, near "(?P<near>.+?)")?
2125	(?P<first>\d+)(?:-(?P<last>\d+))?(?:/(?P<step>\d+))?$
2126	(?P<key>[A-Z]+)="(?P<val>[^"]+)
2127	(?P<lhs>(\s*)([\w\.]+)((\s*,\s*[\w\.]+)*))\s*=\s*!\s*(?P<cmd>.*)
2128	(?P<lhs>(\s*)([\w\.]+)((\s*,\s*[\w\.]+)*))\s*=\s*%\s*(?P<cmd>.*)
2129	(?P<name>[\w-]+)\s*\(\s*(==\s*)?(?P<ver>[^)]+)\)$
2130	(?P<option>[^:=\s][^:=]*)\s*(?:(?P<vi>[:=])\s*(?P<value>.*))?$
2131	(?P<replace>(?P<type>[\^](?:(?:!?@?)|\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\((?P<is_array>\s*\[?)(?P<content>.*?)(\]?)\))
2132	(?P<time>\d+)\.M(?P<M>\d{1,6})P(?P<P>\d+)Q(?P<Q>\d+)\.(?P<host>[^:/]+)
2133	(?P<year>\d{4})-(?P<month>\d{1,2})-(?P<day>\d{1,2})(?: (?P<hour>\d{1,2}):(?P<minute>\d{1,2}):(?P<second>\d{1,2})(?:\.(?P<microsecond>\d{1,6}))?)?
2134	(?P<year>\d{4})-(?P<month>\d{1,2})-(?P<day>\d{1,2})[T ](?P<hour>\d{1,2}):(?P<minute>\d{1,2})(?::(?P<second>\d{1,2})(?:\.(?P<microsecond>\d{1,6})\d{0,6})?)?(?P<tzinfo>Z|[+-]\d{2}:?\d{2})?$
2135	(?i)([ -](regular|plain|italic|oblique|(semi)?bold|(ultra)?light|extra|condensed))+$
2136	(?x)\n        ^ OPDEF \( (JSOP_\w+),         \s*  # op\n                   ([0-9]+),           \s*  # val\n                   ("[^"]+" | [\w_]+), \s*  # name\n                   ("[^"]+" | [\w_]+), \s*  # image\n                   (-1|[0-9]+),        \s*  # len\n                   (-1|[0-9]+),        \s*  # uses\n                   (-1|[0-9]+),        \s*  # defs\n                   ([0-9]+),           \s*  # prec\n                   ([\w_| ]+)          \s*  # format\n                \) \s* $
2137	(?x)\n    ^\n    (?: (\w+):                     )?  # optional label at start of line\n        \s* (\.?\w+)                   # optional spaces, (pseudo-)opcode\n    (?: \s+ ([+-]?\w+ | \([^)]*\)) )?  # optional first immediate operand\n    (?: \s+ ([\w,-]+  | \([^)]*\)) )?  # optional second immediate operand\n    (?: \s* (?:\#.*)               )?  # optional spaces and comment\n    $
2138	(Jamfile<.*>)%(.*)
2139	(TARGET_XPCOM_ABI|OS_TARGET|MOZ_DEBUG)\s*=\s*(.*)
2140	([ ]+)\t
2141	([-0-9.]+)([a-zA-Z]+)
2142	([0-9A-F]{1,2}:){5}[0-9A-F]{1,2}
2143	([0-9]+) INFO TEST-START . Shutdown.*
2144	([0-9]+)([DdHhMm]|[sS]?)
2145	([0-9]+):([0-9]+)
2146	([=!]=|is|is\s+not)\s*type(?:s\.(\w+)Type|\(\s*(\(\s*\)|[^)]*[^ )])\s*\))
2147	([A-Z0-9]+) \/\* Frameworks \*\/
2148	([A-Z0-9]+) \/\* Resources \*\/
2149	([A-Z]+)\s+:\s+(.*)$
2150	([A-Z][a-z]+)
2151	([A-Z][a-z]+[A-Z][^ ]+)
2152	([A-Za-z]+)([0-9]+)
2153	([\.,])
2154	([\[\]#$%&_{}^~\\])
2155	([\d.]+) ([\d.]+) ([\d.]+) (\d+)/(\d+)
2156	([\d\.]+)
2157	([\s\\])
2158	([\w-]+):(.+)
2159	([\x00-\x1f\x7f])
2160	([\n\r\t\x08\x07])
2161	([^ ]+) ([^ ]+)(( HTTP/([0-9.]+))$|$)
2162	([^-]*)-
2163	([^.]*).*
2164	([^/\\]+)\.xcodeproj
2165	([^/]+)\.a$
2166	([^/]+)\.so$
2167	([^:#]*)\s*:?\s*([^#]*?)(\s+#.*|$)
2168	([^;?#]*)(;[^?#]*)?(\?[^#]*)?(#.*)?
2169	([^<>= ]+)(?:\s*([<>=]{1,2})\s*(.*))?$
2170	([^\(]*)(\((.*)%(.*)\))?
2171	([^\(]*)(\(.*\))?
2172	([a-zA-Z0-9]*)$
2173	([sh]db)\s
2174	([}{])
2175	(\'[^\']*\'|"[^"]*"|::|//?|\.\.|\(\)|[/.*:\[\]\(\)@=])|((?:\{[^}]+\})?[^/\[\]\(\)@=\s]+)|\s+
2176	(\"|\\')
2177	(\.cpp)?$
2178	(\.c|\.cpp)?$
2179	(\/+[a-z]*\/[a-z]*$)
2180	(\S+): (\S+)
2181	(\S+);.*
2182	(\S+);\s*filename="([^"]+)"
2183	(\S+)\s+(..+$)
2184	(\S.+):$
2185	(\\+)\Z
2186	(\d)
2187	(\d+(\.\d+)?) (K|M|G|T)b?$
2188	(\d+) bytes \(\d+\.*\d* \w*\) copied, (\d+\.*\d*) s, \d+\.*\d* \w./s
2189	(\d+)(\s+\d){3,}\s+([TF])
2190	(\d+)(\s+\d+){2}\s+([TF])
2191	(\d+)(st|nd|rd|th)
2192	(\d+),\s*(.+),\s*(.+),\s*(.+)
2193	(\d+),\s*(\d+),\s*(\d+),\s*(\d+),\s*(\d+)
2194	(\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)(?:\.(\d+))?
2195	(\d+):(\d+):(\d+)(?:\.(\d{0,6}))?
2196	(\d+)\+(\d+) records in
2197	(\d+)\+(\d+) records out
2198	(\d+)\+\d records out
2199	(\d+)\.(\d+)
2200	(\d+)\.(\d+)(?:\.(\d+))?
2201	(\d+)\s+(\d+)\s+(\d+)
2202	(\d{4})-(\d{2})-(\d{2})\s+(\d{2}):(\d{2}):(\d{2})(\.\d+)?
2203	(\s*\=)|(\s*\:)
2204	(\s*def\s+\w+\s*)\[(html|plain)\](.*)
2205	(\w+) as (\w+)
2206	(\w+)(?:\[(\w+)\])?
2207	(\w+)(\(.*?\))?
2208	(\w+)-(\w+)\ : (.*)
2209	(\w+)\|(\w+)
2210	(\w{,3}), (\d{,4})/(\d{,2})/(\d{2}) (\d{,2}):(\d{2}):(\d{2}) (\w{,3})
2211	(\x01?\x1b\[[0-9;]*m\x02?)
2212	(\x01?\x1b\[[0-9;]+m\x02?)
2213	(^\s+Invalid read of size )\d+
2214	(^\s+Invalid write of size )\d+
2215	(^|/)Change[Ll]og$
2216	(^|[\W_])sample\d*[\W_]
2217	(^|\n)\d+-\d+-\d+[ \t]+((\w|[.-])+[ \t]+)+<[^\n>]+>(?=$|\n)
2218	(^|\n)svn path=[^\n]+revision=\d+(?=$|\n)
2219	(_F2PY_STRING_CONSTANT_\d+_|F2PY_EXPR_TUPLE_\d+)
2220	(driver|source|address)
2221	(js_Execute|CallHook) ([^ ]+) ([^ ]+ )?([^ ]+ms)
2222	(subroutine|function)\s*(?P<name>\w+)\s*\(
2223	(x*)
2224	,.*$
2225	--- NOTE: IN THIS TESTCASE, WE EXPECT EXIT CODE ((?:-|\d)+) ---
2226	---
2227	----gnatsweb-attachment----\n
2228	--test-config=(.*)$
2229	--user-config=(.*)$
2230	-arch\s+(\w+)
2231	-netdev\s
2232	.* = (.*);\n
2233	.*(\.ipy|\.py[w]?)$
2234	.*(\.so|\.py[cod]?)$
2235	.*(\d\.\d) \d+ \(experimental\).*
2236	.*<(.*)>.*
2237	.*?(?:Bcast:|broadcast )([\d\.]+)
2238	.*?(?:HWaddr|ether) ([0-9a-fA-F:]+)
2239	.*?(?:Mask:|netmask )(?:(0x[0-9a-fA-F]{8})|([\d\.]+))
2240	.*?(?:inet addr:|inet )(.*?)\s
2241	.*?(?:inet6 addr: (.*?)/|inet6 )([0-9a-fA-F:]+)
2242	.*?(?:inet6 addr: [0-9a-fA-F:]+/(\d+)|prefixlen (\d+)).*
2243	.*?(\d+)
2244	.*?href\s*=\s*[\\'"](?P<href>.*?)[\\'"].*?
2245	.*OOM max count: (\d+).*
2246	.*[0-9]$
2247	.*\((.*)\).*
2248	.*\.dmg
2249	.*\.exe
2250	.*\.py$
2251	.*\.tar\.bz
2252	.*\.tar\.gz
2253	.*\.zip
2254	.*\[(.*)\].*
2255	.*\\
2256	.*\n.*f_edx:(.*)\n.*f_ecx:(.*)\n.*extf_edx:(.*)\n.*extf_ecx:(.*)
2257	.*\s(\d+).*
2258	.*\s=\s(\d+)\s;
2259	.*_runfac(\d*\.?\d*).*
2260	.*brick_.*?(n?)_wg.*
2261	.*error.*
2262	.*https:\/\/aus2.mozilla.org.*
2263	.*lib(stdc\+\+|gcc_s).* => (.*) \(.*\)
2264	.*libessqlsrv.*\.so
2265	.*libtdsodbc.*\.so
2266	.*node(\d+)
2267	.*note:.*is clipping its content
2268	.*public static final class id {.*
2269	.*}.*
2270	/(tools|libs)/(.*)$
2271	/(tools|libs)/(.*)/(test|example)
2272	//+
2273	/\*(.*?)\*/
2274	/\*(?:\s|.)*?\*/
2275	/_ah/upload/(.*)
2276	/dev/cdrom-\w+|/dev/cdrom\d*
2277	0 INFO SimpleTest START.*
2278	00000000 <(v8dbg_.*)>:
2279	0D
2280	220.*\r\n$
2281	:<
2282	:\s+\(.*?\)\s+[-0-9x+]+\s+[-0-9+]+$
2283	:day
2284	:filename
2285	:month
2286	:title
2287	:uuid
2288	<!-- PlaceholderNode: (.+?) -->
2289	<![^<>]*>
2290	<(.*):(.*)>
2291	<(.*)>
2292	</*key>
2293	</dict>
2294	<H[13]
2295	<TCHAR=(.*?)>
2296	<a href="/nodes/(?P<key>[\w.]+)">(?P<count>[\d.]+)</a>
2297	<a u="([A-F0-9]{4})" b="([0-9A-F ]+)"/>
2298	<a\s*href="(.*)"\s*>(.*)</a>
2299	<ci.*</ci>
2300	<dict>
2301	<doctest (?P<name>.+)\[(?P<examplenum>\d+)\]>$
2302	<files>\s*</files>
2303	<h1>.*</h1>
2304	<key>(.*?)</key>
2305	<key>.*?</key>
2306	<li>(.*?)</li>
2307	<link(?P<linkinner>.*?)>
2308	<path.+?d="M -88 -88 (.+?)"/>
2309	<path\[(\d+)\]>(.*)
2310	<tchar=(.*?)>
2311	<title>(.+?)</title>
2312	<toolset.*version>(\d+)[.](\d*)
2313	<type>boost::(lazy_)?(enable|disable)_if
2314	<type_convert=(.*?)>
2315	= *([0-9]*.+[0-9]*) ([a-zA-Z]*)
2316	==\d+==\s+(?:definitely|indirectly)\s+lost:\s+([0-9,]+)\s+bytes
2317	==\d+==\s+I\s+refs:\s+([0-9,]+)
2318	==\d+==\s+malloc/free:\s+[0-9,]+\s+allocs,\s+[0-9,]+\s+frees,\s+([0-9,]+)\s+bytes allocated.
2319	==\d+==\s+possibly\s+lost:\s+([0-9,]+)\s+bytes
2320	==\d+==\s+still\s+reachable:\s+([0-9,]+)\s+bytes
2321	=[a-fA-F0-9]{2}
2322	>([^<]+)</TITLE
2323	AC(.*)
2324	AMD64
2325	Accelerate
2326	Active connections: (?P<conn>\d+)
2327	BUG:.*---\[ end trace .* \]---
2328	CPU #(\d+)
2329	Change (\d+) submitted.
2330	Change \d+ by (?P<who>\S+)@\S+ on (?P<when>.+)$
2331	Committed revision (\d+)\.
2332	DD>([^<]+)
2333	DOCTYPE\s+(?P<name>[^\s]*)( PUBLIC "(?P<publicId>.*)" "(?P<systemId1>.*)"| SYSTEM "(?P<systemId2>.*)")?
2334	DOCTYPE\s+(?P<name>[^\s]*)(\s*PUBLIC\s*"(?P<publicId>.*)"\s*"(?P<systemId1>.*)"|\s*SYSTEM\s*"(?P<systemId2>.*)")?
2335	ELEMENT FACE INTERCONNECTIVITY DATA
2336	END
2337	ERROR
2338	ERROR[: ]|failed: 
2339	FAIL Exited
2340	FAIL
2341	Fail(ed|ure in) example:
2342	Failure
2343	Firefox builddate: (?P<ffdate>.*)\n
2344	Firefox version: (?P<ffver>.*)\n
2345	From .*?([\w.]+@[\w.]+)
2346	From .*?([\w.]+\@[\w.]+)
2347	HTTP/1.[01] ([0-9]+)
2348	HTTP\((\.\.(\/\.\.)*)\)
2349	L -(\d+) -\d+
2350	LIST OF EDGES
2351	LIST OF FACES
2352	MatplotlibBox:\(([\d.]+)pt\+([\d.]+)pt\)x([\d.]+)pt
2353	MemFree:\s+(\d+).*
2354	Microsoft SQL Server.*? - (\d+).(\d+).(\d+).(\d+)
2355	Microsoft Visual C\+\+ Toolkit 2003
2356	Microsoft Visual Studio 10
2357	Microsoft Visual Studio 11
2358	Microsoft Visual Studio 8
2359	Microsoft Visual Studio 9
2360	No space
2361	Number of elements
2362	Number of nodes
2363	Operation not permitted
2364	PM
2365	PROCESS_CHECK
2366	Reading: (?P<reading>\d+) Writing: (?P<writing>\d+) Waiting: (?P<waiting>\d+)
2367	Received: From yyy.com \(\[.*\]\) by localhost;
2368	Registering archive: (\S+)\s*$
2369	Send buffer size: (\d+)
2370	Sync version: (?P<syncversion>.*)\n
2371	TREEVIS ([^ ]+) (.*)$
2372	Traceback (most recent call last):
2373	UP
2374	UpdateAmbiguousList\(\[(.*?)\]\)
2375	Usage
2376	VERSION\s*=\s*\((.*?)\)
2377	VmRSS:[\t ]*(\d+) kB
2378	VmSwap:[\t ]*(\d+) kB
2379	[ \t]
2380	[ \t]*\n[ \t]*
2381	[ \t]+
2382	[ \t]+(?=\n)
2383	[ \t]+([A-Z0-9]+) \/\* (.+) \*\/,\n
2384	[ \t]+([A-Z0-9]+) \/\* PBXTargetDependency \*\/,\n
2385	[ ]+\t
2386	[%\\]
2387	[+-]?(\d*)(.*)
2388	[,;]
2389	[-+]?(\d+(\.\d*)?|\d*\.\d+)([eE][-+]?\d+)?
2390	[-/.: ]+
2391	[./\\]
2392	[./]
2393	[0-9]+\.[0-9]+
2394	[0-9a-fA-F]{2}
2395	[;,]
2396	[Tt ].*$
2397	[Vv]ersion .*?,
2398	[[*?]
2399	[\+-]?[0-9\.]*
2400	[\/][^\/]+[\/]?$
2401	[\0\n\r\032\\'\"\\]
2402	[\W]*
2403	[\[\]]
2404	[\s\{\}\[\]\(\)]
2405	[\s]
2406	[\x00-\x1f]
2407	[\n ]+$
2408	[\n\t\r}]
2409	[\t ]+\n
2410	[\x00-\x06\x0e-\x1f]
2411	[\x00-\x08\x0b-\x0c\x0e-\x1f]
2412	[\x00-\x08\x0e-\x1f\x7f]
2413	[^ -~\n]
2414	[^!-~]
2415	[^.]*\.(.*)
2416	[^0-9, ]
2417	[^A-Za-z0-9 ]
2418	[^\d]
2419	[^\w.-]
2420	[^a-z0-9]
2421	[^a-zA-Z.0-9]
2422	[a-f0-9]{8}(-[a-f0-9]{4}){3}-[a-f0-9]{12}
2423	[a-zA-Z]+
2424	[a-zA-Z_][0-9a-zA-Z_+-]*|[0-9+-][0-9a-zA-Z_.+-]*|"([^"\n\\]|\\.)*("|\\?$)|\'([^\'\n\\]|\\.)*(\'|\\?$)
2425	[a-zA-Z_][a-zA-Z_0-9]*
2426	[eE]
2427	[kK]ey
2428	[pP]ython
2429	\ +\n
2430	\ \ +
2431	\$\$.*
2432	\$\(([a-zA-Z_][a-zA-Z0-9_]*)\)
2433	\$\S+\$
2434	\$\{([^\d}][^}:]*)(?::([^}]*))?\}
2435	\$\{\D
2436	\${(\w+)}
2437	\%\s+(.*)$
2438	\(([^()]+)\)$
2439	\((\w+)\)
2440	\([^)]+\)
2441	\(\n
2442	\)\s*$
2443	\*(?:/(?P<step>\d+))?$
2444	\*([^,]+)(?:,(.*))?
2445	\*\s[^:]+:
2446	\+
2447	\.(\d)+$
2448	\.(title|a|dd|h[0-9])$
2449	\..*
2450	\.\d+
2451	\.git$
2452	\.jar?$
2453	\.|\\
2454	\.|_
2455	\/\* BEGIN LOOP \*\/
2456	\/\* Begin PBXBuildFile section \*\/\n
2457	\/\* Begin PBXBuildFile section \*\/\n((?:.|\n)+?)\/\* End PBXBuildFile section \*\/
2458	\/\* Begin PBXFileReference section \*\/\n
2459	\/\* END LOOP \*\/
2460	\:(\w+)\:`~?\.?(.+?)`
2461	\<[a-zA-Z0-9\-\_\.\="\'\/\\%\!\@\#\$\^\&\*\(\) ]*\>
2462	\A#[a-fA-F0-9]{6}\Z
2463	\A\s\s\S+,
2464	\S+\s(\S+)\t(.+)
2465	\[(?P<type>[WE])(?P<remainder>.*?)\]
2466	\[.*\]
2467	\[LOC(.*?)\]
2468	\[MAP(.*?)\]
2469	\[SQLCode\: (\d+)\]
2470	\[[^]]+]$
2471	\[\]
2472	\[|\]|\n+|\s+
2473	\\(?! )
2474	\\(?!\s$)
2475	\\([0-3][0-7][0-7])
2476	\\([0-9a-fA-F]{1,6})\s?
2477	\\*\#
2478	\\*\n
2479	\\?(gettext|_)\(
2480	\\?[()]
2481	\\u([0-9a-fA-F]{4})
2482	\\x0([0-7])(?=[^0-7]|$)
2483	\^timerConfirmation\^=\^no\^
2484	\b(E?TSM?_(ASSERT[A-Z_]*|FAIL))\s*\(
2485	\b(std\s*::|CXXTEST_STD|using\s+namespace\s+std\b|^\s*\#\s*include\s+<[a-z0-9]+>)
2486	\b(throw|try|catch|TSM?_ASSERT_THROWS[A-Z_]*)\b
2487	\bCXXTEST_CODE\s*\(
2488	\bCXXTEST_SUITE\s*\(\s*(\w*)\s*\)
2489	\bKVM_TEST_CDKEY\b
2490	\bKVM_TEST_MEDIUM\b
2491	\bPROCESS_CHECK\b
2492	\bclass\s+(\w+)\s*:\s*public\s+((::)?\s*CxxTest\s*::\s*)?TestSuite\b
2493	\bnot\s+\S+?\s+i[sn]\s\S+
2494	\bstatic\s+\w+\s*\*\s*createSuite\s*\(\s*(void)?\s*\)
2495	\bstatic\s+void\s+destroySuite\s*\(\s*\w+\s*\*\s*\w*\s*\)
2496	\d+ (\d+):
2497	\d+-\d+
2498	\d+\s\d+:
2499	\d;\s*url=
2500	\n\n
2501	\n\n+
2502	\n\s*ACCEPTS:\s*((?:.|\n)*?)(?:$|(?:\n\n))
2503	\s*"((\\.|.)+?)"\s*=\s*"(.+?)";
2504	\s*(-?\d+)\s*$
2505	\s*(-?\d+)\s*-\s*(-?\d+)\s*$
2506	\s*(.+)\s*:\s*([-a-zA-Z]+)\s*$
2507	\s*([0-9a-fA-F]+)\s+([0-9a-fA-F]+)\s+([0-9a-fA-F]+)
2508	\s*(\#.*)?$
2509	\s*(\d+)\s*
2510	\s*(\d+)\s*,\s*(\d+)\s*
2511	\s*,?\s*new Array\(
2512	\s*/[/*]\s*
2513	\s*=?\s*
2514	\s*\#\s*include\s+<cxxtest/
2515	\s*\|\s*
2516	\s*define|\s*endef
2517	\s+#
2518	\s+(-\S+):\s+(.*)$
2519	\s+(-\S+)\s+(.*)$
2520	\s+(\r?\n)$
2521	\s+Flags for (\S.+):$
2522	\s+Flags from (\S.+):$
2523	\s+\((.*)\)$
2524	\s?((["][^"]*["]|[\'][^\']*[\'])\s+dluohs)
2525	\s?([a-zA-Z_\d]+tset)\s+fed
2526	\sfile:\s+"([^"]*)"
2527	\w*:\w*:\w*:\w*:\w*:\w*
2528	\w+:
2529	\w+\(
2530	\w+\.erb
2531	\w+\.feature
2532	\w+\.rb
2533	\w+\_spec.rb
2534	\w+\_test.rb
2535	\w+\s+\[?(\w+)\]?
2536	\x1b\[[^h]+h
2537	\{
2538	\{([^}]*)\}
2539	\{\{|\}\}
2540	\n                            \s* ([^\s;]+) \s*            #content-coding\n                            (;\s* q \s*=\s* ([0-9\.]+))? #q\n                            
2541	\n      ^\s*   # Start of a new line and whitespace\n      /\*    # Opening "/*"\n      .*?    # Non greedy match of any characters (including newlines)\n      \*/    # Closing "*/
2542	\n    (?:\n        ([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*list\(\n            (\n                (?:\n                    \s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\s\)][^,\)]*?)  # unquoted\n                    )\n                    \s*,\s*\n                )*\n                (?:\n                    (?:".*?")|              # double quotes\n                    (?:\'.*?\')|              # single quotes\n                    (?:[^\'",\s\)][^,\)]*?)  # unquoted\n                )?                          # last one\n            )\n        \)\n    )\n
2543	\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\s*=\s*list\(\n                    (?:\n                        \s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\s\)][^,\)]*?)       # unquoted\n                        )\n                        \s*,\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\s\)][^,\)]*?)       # unquoted\n                    )?                              # last one\n                \)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\s*=\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\s*,\s*)|(?:\s*$)            # comma\n        )\n    )\n    
2544	\n    (?P<escape_hex>\{\#x(?P<escape_hex_val>[0-9a-fA-F]+)\})\n  | (?P<escape_dec>\{\#(?P<escape_dec_val>[0-9]+)\})\n  | (?P<escape_lbrace>\{\{)\n  | (?P<escape_rbrace>\}\})\n  | (?P<attr>\{\n        (?P<attr_name>[^ \{\}]+)\s+\n        (?P<attr_val>[^\}]+)\})\n  | (?P<nl_hard1>\n(?=[ \t]))\n  | (?P<nl_hard2>\{\}\n)\n  | (?P<nl_soft>\n(?=\S))\n  | (?P<nl_para>\n\n+)\n  | (?P<text>[^\{\}\n]+)\n    
2545	\n    (\n        (?:".*?")|              # double quotes\n        (?:\'.*?\')|              # single quotes\n        (?:[^\'",\s=][^,=]*?)       # unquoted\n    )\n    (?:\n    (?:\s*,\s*)|(?:\s*$)            # comma\n    )\n
2546	\n$
2547	\n(Contents of the|The section) 
2548	\n\n
2549	\n\n\n+
2550	\n__com.redhat_drive_add
2551	\ndevice_add
2552	\ndrive_add
2553	\npci_add
2554	\r?\n(?=\S)
2555	\r|\n
2556	\tobjectVersion = ([0-9]+);
2557	\x00
2558	\x01?\x1b\[([0-9;]*)m\x02?
2559	\x01?\x1b\[([0-9;]+)m\x02?
2560	^ *(.*) *( *) *$
2561	^"""(.+?)"""
2562	^#!(.*)
2563	^##AGENT-WARNING##.*
2564	^#.*coding[:=]\s*([-\w.]+)
2565	^#T (gmake |pymake )?([a-z-]+)(?:: (.*))?$
2566	^#[0-9A-Fa-f]{6}$
2567	^#define ([A-Z]+)\s+(\d+)$
2568	^#define ASYNC_PROTOCOL_MAJOR\t*(.*)
2569	^#define.*ENGINE_VERSION\t*"DOOM (.*)"
2570	^$|^\s*#
2571	^((?:|sh\S*?|\w+\S+[@:]\S+(?:\s+\S+)?|\[\S+[@:][^\n]+\].+)[$#%])(.*\n?)
2572	^(.*)<(.*)>(.*)$
2573	^(.*)\[(.*)\](.*)$
2574	^(.*)`(.*)`(.*)$
2575	^(.*){(.*)}(.*)$
2576	^(.*)~([+-][0-9]{2})00$
2577	^(.*?)(-dev|-\d.*)
2578	^(.*?)(?:-dev|-\d.*)$
2579	^(.*?)\s*<(?:URI:|URL:)?([^<>]+)>$
2580	^(.*?)\s?((?:ssh\-|ecds).+)$
2581	^(.*?)test phase (?P<matchphase>\d+): (?P<matchstatus>.*)$
2582	^(.+)(\[[^\]]+\])$
2583	^(.+)[ \._\-]([0-9]{1})([0-9]{2})[\._ -][^\/]*$
2584	^(.+)[ \._\-]([0-9]{2})([0-9]{2,3})[\._ -][^\/]*$
2585	^(.+)[:(]\d+[:)]
2586	^(.+)\.([^\.])*
2587	^(?:!|&|\*)$
2588	^(?:<<)$
2589	^(?:=)$
2590	^(?:\s*)([0-9]+):(?:\s*)(?P<rx_bytes>\d+)(?:\s*)(?P<rx_packets>\w+)(?:\s*)(?P<rx_errors>\d+)(?:\s*)(?P<rx_drop>\d+)(?:\s*)(?P<rx_fifo>\d+)(?:\s*)(?P<rx_frame>\d+)(?:\s*)(?P<rx_compressed>\d+)(?:\s*)(?P<rx_multicast>\d+)(?:\s*)(?P<tx_bytes>\d+)(?:\s*)(?P<tx_packets>\w+)(?:\s*)(?P<tx_errors>\d+)(?:\s*)(?P<tx_drop>\d+)(?:\s*)(?P<tx_fifo>\d+)(?:\s*)(?P<tx_frame>\d+)(?:\s*)(?P<tx_compressed>\d+)(?:\s*)(?P<tx_multicast>\d+)(?:.*)$
2591	^(?P<chunk>[^\r\n]+)|(?P<newline>\n|\r\n?)
2592	^(?P<prefix>(\d+\.)*\d+)(?P<c>[ab])(?P<suffix>\d+)$
2593	^(?P<timestamp>\d+) (?P<name>\S+): (?P<metrics>.*)$
2594	^(?P<version>(?P<major>\d+)\.(?P<minor>\d+)\.(?P<subminor>\d+))((rc(?P<release_candidate>\d+))|dev)?-CAPI-(?P<capi_version>\d+\.\d+\.\d+)( r\d+)?$
2595	^(?P<year>\d{4})-(?P<month>\d{2})-(?P<day>\d{2}).*?$
2596	^(MemTotal|MemFree|Buffers|Cached|SwapCached|Active|Inactive|SwapTotal|SwapFree|Dirty|VmallocTotal|VmallocUser|VmallocChunk):\s*(\d+)\s*kB
2597	^([ \t]*>>> |^[ \t]*\.\.\. )
2598	^([ \t]*In \[\d+\]: |^[ \t]*\ \ \ \.\.\.+: )
2599	^([ \|0-9-]*)
2600	^([ \t]*class +[a-zA-Z0-9_]+) *( *) *((=.*)?):
2601	^([ ]*)
2602	^([,;/%?]|!!?|\s*)\s*([\w\.]+)(\s+.*$|$)
2603	^([0-9.]+)
2604	^([0-9\.]+)\s*([0-9\.]+)\s*([0-9\.]+)\s*([0-9]+)\/([0-9]+)
2605	^([0-9]{4})~([01][0-9])~([0-9]{2})$
2606	^([0-9]{4})~([01][0-9])~([0-9]{2})~([0-9]{1,2})~([0-9]{2})~([0-9]{2})$
2607	^([0-9a-f]+)-([0-9a-f]+)\s+[-r][-w][-x][-p]\s+(?:\S+\s+){3}\[heap\]$
2608	^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$
2609	^([01]?[0-9])~([0-9]{2})~([0-9]{4})~([0-9]{1,2})~([0-9]{2})~([0-9]{2})$
2610	^([>\w\-]+)\s*:\s*(.*)\s*$
2611	^([A-Za-z]+):\s+(.+)$
2612	^([MACDRUG_ ][MACDRUG_ ])(.)(.)   .   [^0-9-]+(\d+|-)(.{23})(.+)
2613	^([MAGCUD_ ][MAGCUD_ ]) (.+)
2614	^([^ ]+)
2615	^([^.]+)[.]([^.]+)[.]?([^.]*)
2616	^([^/]|/[^/])*\bvoid\s+([Tt]est\w+)\s*\(\s*(void)?\s*\)
2617	^([^:]+)$
2618	^([^:]+): (\w+) \(([\w\.]+)\)
2619	^([^<]*)(/(<.*))?$
2620	^([^<]+)[<]?(.*)[>]?$
2621	^([a-zA-z0-9]+)=([\S\s]*)$
2622	^([a-z\._]*) = ([0-9]*)$
2623	^(\d+(\.\d+)*)
2624	^(\d+)\.(\d+)(?:\.(\d+))?
2625	^(\d+\.|[-*|]|\[\d+\]) .
2626	^(\s*)()(\S+)(.*$)
2627	^(\s*)(\S*\s*)(.*$)
2628	^(\s*)(def|class)(\s.*)?$
2629	^(\w+)=([a-f0-9]+)
2630	^(\w+)\s+(.+)
2631	^(cpu[0-9]*)\s+(?P<user>\d+)\s+(?P<nice>\d+)\s+(?P<system>\d+)\s+(?P<idle>\d+)\s+(?P<iowait>\d+).*$
2632	^(pgpgin|pgpgout|pswpin|pswpout)\s(\d+)
2633	^(syn keyword vimCommand contained|syn keyword vimOption contained|syn keyword vimAutoEvent contained)\s+(.*)
2634	^--- NEW FILE
2635	^--\d+-- run: /usr/bin/dsymutil \"shell/js\"$
2636	^--out-xml=(.*)$
2637	^-?\d
2638	^.*-copy(?:-(\d)*)?$
2639	^.*:\$
2640	^.*<(()/[\d\w_\+\.\-/]*)>.*$
2641	^.*\(\s*(.*)\s*\).*\](.*)$
2642	^.*\{\{
2643	^.+\:.+(\d+)
2644	^/?[a-zA-Z0-9_-]+(/[a-zA-Z0-9_-]+)?/?$
2645	^/?[a-zA-Z0-9_.-]+(/[a-zA-Z0-9_.-]+)*/?$
2646	^/[-\w/]*$
2647	^/dev/
2648	^6\.
2649	^<(.*)>$
2650	^<\?xml[^>]*?>
2651	^<type [\'"](.+)[\'"]>$
2652	^=+$
2653	^==\d+==
2654	^>(.*)$
2655	^@(.*)
2656	^@@ -([0-9]*)(?:,([0-9]*))? \+([0-9]*)(?:,([0-9]*))? @@
2657	^@@ -([0-9]*),([0-9]*) \+([0-9]*),([0-9]*) @@
2658	^@[Aa][Tt][Tt][Rr][Ii][Bb][Uu][Tt][Ee]\s*(..*$)
2659	^@[Dd][Aa][Tt][Aa]
2660	^@[Rr][Ee][Ll][Aa][Tt][Ii][Oo][Nn]\s*(\S*)
2661	^@\S*
2662	^BLOCK (.*)
2663	^Error:.*$
2664	^I+
2665	^RADIO/radio[.](.+[.])?img$
2666	^Status against revision:\s+(\d+)
2667	^Transmitting
2668	^[ \t]*from[ \t]+([^ \t]+)[ \t]+
2669	^[ \t]*import[ \t]+([^#]+)
2670	^[ \t]+def +[a-zA-Z0-9_]+ *( *self *, *(( *(.*) *)) *) *:
2671	^["<].*[>"]$
2672	^[+/0-9A-Za-z]*=*$
2673	^[0-9A-Za-z+/]*[0-9A-Za-z+/=]{,2}$
2674	^[0-9A-Za-z._-]{0,100}$
2675	^[0-9]+[Ee]$
2676	^[0-9]{4}-[0-9]{2}-[0-9]{2}$
2677	^[0-9a-f]{20,40}$
2678	^[67]
2679	^[67]\.
2680	^[78]\.
2681	^[\'"](.*)[\'"]$
2682	^[\w\.\-\/]*$
2683	^[^ ]*/([^ ]+)( .*)?
2684	^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
2685	^[a-z0-9][a-z0-9_]{2,}$
2686	^[a-z0-9_\-]+$
2687	^[a-zA-Z0-9\.\-:+"]+$
2688	^[a-zA-Z0-9_-]{3,20}$
2689	^[a-zA-Z0-9_=.\\/-]+$
2690	^[a-zA-Z]+(\s|$)
2691	^[a-zA-Z_][a-zA-Z0-9_]*$
2692	^[a-zA-Z_][a-zA-Z0-9_]*(\(.*?\))
2693	^[ab]$
2694	^[cC](\:[\\\/]+)
2695	^[http|file|chrome|about].*
2696	^\$\d+
2697	^\${\d+[:}]
2698	^\${\d+\/
2699	^\(?(?P<re>[\+\-]?\d*\.?\d*(e[\+\-]?\d+)?)??(?P<im>[\+\-]?\d*\.?\d*(e[\+\-]?\d+)?j)?\)?$
2700	^\*\*\d+\*\*
2701	^\.\.(/\.\.)*$
2702	^\.\.\. (?P<path>[^#]+)#\d+ \w+$
2703	^\/\w\/
2704	^\[.*\]
2705	^\d+(?:px|%)$
2706	^\d+(\.\d+)*$
2707	^\d+\.\d+(\.\d+)?$
2708	^\d+px$
2709	^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+$
2710	^\s*#\s*define\s+OPENSSL_VERSION_NUMBER\s+(0x[0-9a-fA-F]+)
2711	^\s*#\s*include\s*<(gtest/.+)>
2712	^\s*#define SSH_([A-Z_]+)\s+([0-9x]*)\s*$
2713	^\s*(([A-Z][a-z]*)+) = (\d+)
2714	^\s*(([A-Z][a-z]*)+),?\s*# (\d+)$
2715	^\s*([A-Z_]+) = (\d+)$
2716	^\s*([A-Z_]+): (\d+)
2717	^\s*<CxxTest\s+preamble>\s*$
2718	^\s*<CxxTest\s+world>\s*$
2719	^\s*@
2720	^\s*\d+\s+(?P<name>\S+)\s+(?P<size>-?\d+)\s+(?P<bytesLeaked>-?\d+)\s+-?\d+\s+(?P<numLeaked>-?\d+)
2721	^\s*blocktrans(\s+.*context\s+(?:"[^"]*?")|(?:\'[^\']*?\'))?(?:\s+|$)
2722	^\s*finally:\s*(#.*)?$
2723	^\s*public static final int ([A-Z_]+) = (\d+);$
2724	^\s*trans\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\s+.*context\s+(?:"[^"]*?")|(?:\'[^\']*?\'))?\s*
2725	^\s+(?P<conn>\d+)\s+(?P<acc>\d+)\s+(?P<req>\d+)
2726	^\s+.*
2727	^\s+File .* in runUntilCurrent
2728	^\s+File .*erroneous\.py", line \d+, in go
2729	^\s+File .*erroneous\.py., line \d+, in setUp$
2730	^\s+File .*erroneous\.py., line \d+, in testHiddenException$
2731	^\s+File .*erroneous\.py., line \d+, in test_fail$
2732	^\s+at 0x[0-9A-Fa-f]+: 
2733	^\s+by 0x[0-9A-Fa-f]+: 
2734	^\s+raise RuntimeError\(self.hiddenExceptionMsg\)
2735	^\s+self\.fail\("Deliberate failure to mask the hidden exception"\)$
2736	^\s+self\.fail\("I fail"\)$
2737	^\t*
2738	^\w+(?:-\w+)?(?:,\w+(?:-\w+)?)*$
2739	^\w+:
2740	^\n    (?:\n        (\n            (?:\n                [a-zA-Z_][a-zA-Z0-9_]*\s*=\s*list\(\n                    (?:\n                        \s*\n                        (?:\n                            (?:".*?")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'",\s\)][^,\)]*?)       # unquoted\n                        )\n                        \s*,\s*\n                    )*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\s\)][^,\)]*?)       # unquoted\n                    )?                              # last one\n                \)\n            )|\n            (?:\n                (?:".*?")|              # double quotes\n                (?:\'.*?\')|              # single quotes\n                (?:[^\'",\s=][^,=]*?)|       # unquoted\n                (?:                         # keyword argument\n                    [a-zA-Z_][a-zA-Z0-9_]*\s*=\s*\n                    (?:\n                        (?:".*?")|              # double quotes\n                        (?:\'.*?\')|              # single quotes\n                        (?:[^\'",\s=][^,=]*?)       # unquoted\n                    )\n                )\n            )\n        )\n        (?:\n            (?:\s*,\s*)|(?:\s*$)            # comma\n        )\n    )\n    *
2741	^_+
2742	^_ZThn[0-9]+_
2743	^`!p\s
2744	^`!v\s
2745	^a+$
2746	^begin [0-7]{3}
2747	^const int ASYNC_PROTOCOL_MINOR\t*= (.*);
2748	^content-range: bytes ([0-9]+)-([0-9]+)/([0-9]+)$
2749	^content-type: (.*)$
2750	^flags\s*:(.*)
2751	^https?://github.com/([^/]+)/([^/]+)($|/.*$)
2752	^https?://github.com/([^/]+)/?$
2753	^https?://github.com/[^/]+/[^/]+/tree/([^/]+)/?$
2754	^js\(\d+,0x[0-9a-f]+\) malloc: \*\*\* error for object 0x[0-9a-f]+: pointer being freed was not allocated\n\*\*\* set a breakppoint in malloc_error_break to debug\n$
2755	^multipart/byteranges; boundary="(.*)"$
2756	^pull .*$
2757	^push .*$
2758	^quit.*
2759	^rebt
2760	^rebt.*
2761	^struct +[a-zA-Z_][a-zA-Z0-9_]* *{$
2762	^struct\[([a-zA-Z_][a-zA-Z0-9_]*)\]$
2763	^the 
2764	^uninst .*$
2765	_+
2766	_F2PY_STRING_CONSTANT_\d+_
2767	__(\w+)__
2768	__(\w+?)__\s*=\s*(.*)
2769	__FAIL(.*)__FAIL
2770	__start_page_load_report(.*)__end_page_load_report
2771	__start_tp_report(.*)__end_tp_report
2772	__startuptime,(\d*)
2773	`
2774	`(.+?)`
2775	``
2776	and
2777	available: (\d+) nodes
2778	ba
2779	browser.search.order.([1-9])
2780	browser\.contentHandlers\.types\.([0-5])\.title
2781	browser\.contentHandlers\.types\.([0-5])\.uri
2782	chrome\/help\/images\/[A-Za-z-_]+\.png
2783	connect1 =
2784	coord =
2785	crash|assert
2786	defines.inc
2787	easy_install(-\d\.\d)?$
2788	else[ \f\t]+if
2789	enabled
2790	error:
2791	errors=(\d+)
2792	expectedFailures=(\d+)
2793	failures=(\d+)
2794	filename="([^"]+)"
2795	function (?:\s|.)*?end function.*
2796	get_ipython\(\)\.magic\(u?["\\']%?autopx
2797	goog\.provide\s*\(\s*[\'"]([^\)]+)[\'"]\s*\)
2798	goog\.require\s*\(\s*[\'"]([^\)]+)[\'"]\s*\)
2799	graph(?P<graphNumber>\d+)_(?P<res>.*?)_?(?P<optNumber>\d+)?$
2800	h[23]$
2801	href\s*=\s*"([^>"]*)"[^>]*title\s*=\s*"View larger image"
2802	http://
2803	http://example.com/login\?next=http%3A%2F%2Flocalhost%3A[0-9]+%2Fabsolute
2804	id:(\d{1}):initdefault:
2805	if.*?==\s+(None|False|True)\b
2806	index
2807	ip(engine|controller)z-\d+\.(log|err|out)
2808	join_mcast_pid:(\d+)
2809	ks\=[\w\d\:\.\/]+
2810	label(\s*)=(\s*)"\s%tmp(.\w*)*(\s*)"
2811	length (\d*):
2812	lib(.*)\.so
2813	lsi53c895a
2814	macaddr=(\S+)
2815	md[0-9]$|sd[a-z]+$
2816	md[0-9]$|sd[a-z]+$|xvd[a-z]+$
2817	mobile-l10n.js
2818	multipart/byteranges; boundary="[^"]*"\Z
2819	name=[\'"]{0,1}([-\w\.]*?)[\'"]
2820	ntpdate
2821	ntpdate|w32tm
2822	num_dim.*=
2823	num_elem.*=
2824	num_nodes.*=
2825	o b
2826	o
2827	o:(.*)s
2828	offset (.*) sec
2829	or
2830	pid
2831	pip(\d(\.\d)?)?$
2832	project-root.jam
2833	project.pbxproj$
2834	released on (\w+\s+\d+\w+\s+\d+)(?:, codename (.*))?(?i)
2835	requestContext, 
2836	return code \[([0-9]+)\]
2837	sd\w
2838	set\s+([-a-zA-Z0-9]+)\s+(.+)\s*$
2839	skips=(\d+)
2840	sources.redhat.com
2841	sqlalchemy/([a-z_]+/){0,2}[a-z_]+\.py
2842	src (.+)
2843	subroutine (?:\s|.)*?end subroutine.*
2844	successes=(\d+)
2845	tag
2846	tap,id=(.*?),
2847	undefined symbol: (.*)\t\((.*)\)
2848	unexpectedSuccesses=(\d+)
2849	unit(?:2|test2?/)
2850	unknown operand
2851	unzip: exiting
2852	user_pref\("(.*)",\s(.*)\)
2853	ustar *\x00|[ \x00]*$
2854	vecLib
2855	vport[0-9]p[0-9]+
2856	wg_(lech03fig.*?)_h(\d*).*
2857	wg_hcyl_pin_(\d*).*_h(\d*).*
2858	window.location.replace\("(.*)"\);
2859	wrong|error
2860	x86_64
2861	xvd
2862	{(..+)}
2863	{([^}]+)}
2864	{markers: (?P<markers>\[.*?\]),\s*polylines:
2865	^((?:'[^']*'|[^'])*?)--.*$
2866	&.*?;|<.*?>|(\w[\w-]*)
2867	(([a-zA-Z0-9\_\-\.\+]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?))(\?subject=\S+)?
2868	(.*)\s*(?://.*|/\*.*\*/\s*)$
2869	(?:(\w+)=)?(.+)
2870	(?:^|(?<=[\.\?\!] ))([a-z])
2871	(?x)\n        (?P<expression>.*)              # Everything up to the line separator\n        (?P<separator>[,;+\-/*%^&|=\\]) # The line separator\n        \s*                             # Optional whitespace after\n        $                               # End of expression\n    
2872	(?x)\n        (?P<indent>\s*)         # indent before a var keyword\n        (?P<var>var\s+)         # var keyword and whitespace after\n        (?P<identifier>[a-zA-Z_$]\w*)\s*\n        (?:\n            (?P<assignment>=)\s*\n            (?P<expression>.*)\n            |\n            (?P<separator>[,;+\-/*%^&|=\\])\n        )\n    
2873	(?x)\n        \s*((continue|do|for|function|if|else|return|switch|while|with)\b|\[+\s*[a-zA-Z_$]\w*\s+[a-zA-Z_$]\w*\s*[:\]])\n    
2874	([^,]+),\s+(\d{2})\s+([^\s]+)\s+(\d{4})\s+(\d{2}):(\d{2}):(\d{2})\s+([^\s]+)
2875	([^\t -~])
2876	(\(|\)|\s+)
2877	(\(|\)|\s+|-)
2878	(\(|\)|\s+|\+)
2879	(\.|\s)
2880	(\.|\s|/|-)
2881	(\d{4})-([^-]+)-(\d{,2})T(\d{,2}):(\d{2})((\+|-)(\d{,2}:\d{2}))
2882	(\w+)_(\d+)_(\d+)_(\w+)$
2883	(^[^\.]+)\.
2884	.*
2885	.*?\*/
2886	.{1,2047}
2887	0{6,}\d
2888	<(/?)\s*b\s*>
2889	<(/?)\s*i\s*>
2890	<img [^>]*\bid="plugin_obj_(\d+)"[^>]*/?>
2891	<option value="">
2892	API|TOKEN|KEY|SECRET|PASS|PROFANITIES_LIST|SIGNATURE
2893	[-/\.]
2894	[-\.]
2895	[-]
2896	[0-9]+
2897	[\-\s\(\)]
2898	[\-\s]
2899	[\s.]
2900	[\s\-]+
2901	[\t]
2902	\.models$
2903	\.py$
2904	\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}(?:\.\d+)?
2905	\r\n|\r|\n
2906	\s*(?:/\*.*\*/\s*|//.*)$
2907	\s*/\*.*(?!\*/\s*)$
2908	\s*function\s*(?P<name>[a-zA-Z_$]\w*)?\(.*\)\s*\{?
2909	\w*
2910	\{\{ plugin_object (\d+) \}\}
2911	^(25[0-5]|2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3}$
2912	^(?:(?:00|\+)386|0)(\d{7,8})$
2913	^(?:1-?)?(\d{3})[-\.]?(\d{3})[-\.]?(\d{4})$
2914	^(?:852-?)?(\d{4})[-\.]?(\d{4})$
2915	^(?:SI)?([1-9]\d{7})$
2916	^(?:[78]-?)?(\d{3})[-\.]?(\d{3})[-\.]?(\d{4})$
2917	^(?:\s*[-+]\s*\([a-zA-Z_$]\w*\)|@implementation)\s*[a-zA-Z_$][\w]*.*?\s*(\{)\s*(?:$|//.*$)
2918	^(?P<area>\d{3})[-\ ]?(?P<group>\d{2})[-\ ]?(?P<serial>\d{4})$
2919	^(?P<birth>\d{6})/?(?P<id>\d{3,4})$
2920	^(?P<century>\d{2})?(?P<year>\d{2})(?P<month>\d{2})(?P<day>\d{2})(?P<sign>[\-+])?(?P<serial>\d{3})(?P<checksum>\d)$
2921	^(?P<idnumber>\w{8})(?P<pos9>(\d{1}|<))(?P<checksum>\d{1})$
2922	^(?P<initial>\d{1})(?P<yy>\d\d)(?P<mm>\d\d)(?P<dd>\d\d)(?P<mid>\d{4})(?P<checksum>\d{1})
2923	^(?P<number>\d{1,8})-?(?P<check>\d)$
2924	^(?P<number>\d{7})(?P<check>\d)$
2925	^(?P<residence>\d{10})(?P<origin>\w{1,3})[-\ ]?(?P<birthday>\d{7})[-\ ]?(?P<validity>\d{7})[-\ ]?(?P<checksum>\d{1})$
2926	^(?P<yy>\d\d)(?P<mm>\d\d)(?P<dd>\d\d)(?P<mid>\d{4})(?P<end>\d{3})
2927	^([ABCEGHJKLMNPRSTVXY]\d[ABCEGHJKLMNPRSTVWXYZ]) *(\d[ABCEGHJKLMNPRSTVWXYZ]\d)$
2928	^([a-z0-9.-]+|\[[a-f0-9]*:[a-f0-9:]+\])(:\d+)?$
2929	^(\+385|00385|0)(?P<prefix>\d{2})(?P<number>\d{6,7})$
2930	^(\+62|0)[2-9]\d{7,10}$
2931	^(\+90|0)? ?(([1-9]\d{2})|\([1-9]\d{2}\)) ?([2-9]\d{2} ?\d{2} ?\d{2})$
2932	^(\d{10})$
2933	^(\d{2})(\d{2})(\d{3})(\d{2})(\d{3})(\d)$
2934	^(\d{2})[-\.]?(\d{4})[-\.]?(\d{4})$
2935	^(\d{3})-(\d{3})-(\d{3})$
2936	^(\d{3})\s(\d{3})$
2937	^(\d{4})[ -]?(\d{4})[ -]?(\d{2})[ -]?(\d{10})$
2938	^(\d{9}|(00|\+)\d*)$
2939	^.*(\s+)$
2940	^0([1-9]{1})\d{8}$
2941	^0\d(\s|\.)?(\d{2}(\s|\.)?){3}\d{2}$
2942	^601983(?P<copy>\d{1})1(?P<jmbag>\d{10})(?P<k>\d{1})$
2943	^[-a-zA-Z0-9_]+$
2944	^[1-9]\d{2} ?\d{2}$
2945	^[1-9]\d{4}$
2946	^[A-Z]{,3}$
2947	^[\d,]+$
2948	^[\w.@+-]+$
2949	^[\w/:+-]+$
2950	^\d+(\.\d+)*$
2951	^\d[A-F]\d$
2952	^\d{11}$
2953	^\d{12}$
2954	^\d{15}(\d{2}[0-9xX])?$
2955	^\d{16}$
2956	^\d{4} \d{6}
2957	^\d{4}[A-Z]{2}$
2958	^\d{5}$
2959	^\d{9}$
2960	^\s*(?:(?:else )?if|for|switch|while|with)(\()
2961	^\s*(?:(?:else )?if|for|switch|while|with)\s*\(.+\)\s*(\{)\s*(?://.*|/\*.*\*/\s*)?$
2962	^\s*(?:@outlet\s+)?[a-zA-Z_$]\w*\s+[a-zA-Z_$]\w*\s+@accessors\b
2963	^\s*var\s+[a-zA-Z_$]\w*\s*=\s*function\s+([a-zA-Z_$]\w*)\s*\(
2964	^http://testserver/posted/\?c=(?P<pk>\d+$)
2965	^http://testserver/somewhere/else/\?c=\d+#baz$
2966	^http://testserver/somewhere/else/\?c=\d+$
2967	^http://testserver/somewhere/else/\?foo=bar&c=\d+#baz$
2968	^http://testserver/somewhere/else/\?foo=bar&c=\d+$
2969	foo
2970	x
2971	'(.*?)(?<!\\)',?
2972	'(?P<key>[^:]*)'\:(?P<value>[^,]*),
2973	'[^']*'
2974	((?P<prefix>[$@%\\*&]+)\s*)?(?P<scope>(::)?\b((?!\d)\w*?(::|'))*)(?P<name>(?!\d)\w+)$
2975	(<module 'epydoc_test' from ).*
2976	(?x)\n        # Tokenize the input into keyword, separator, noise\n        ([a-zA-Z0-9_]+)         |   # A keyword is a alphanum word\n        ( \. | \:\: | \-\> )    |   # These are the allowed separators\n        (.)                         # If it doesn't fit, it's noise.\n            # Matching a single noise char is enough, because it\n            # is used to break the tokenization as soon as some noise\n            # is found.\n        
2977	([\\'])
2978	([\w\-\.]+)='([^']+)'
2979	<div class='lyricbox'><div class='rtMatcher'>.*?</div>(.*?)<!--
2980	@'([^']+)'
2981	Devices of vm1:\nmachine\n  aid = __0\n  aobject = pci.0\n  parent_bus = ()\n  child_bus = \[.*QPCIBus.*, .*QStrictCustomBus.*\]\n  params:\ni440FX\n  aid = __1\n  aobject = None\n  parent_bus = ({'aobject': 'pci.0'},)\n  child_bus = \[\]\n  params:\n    driver = i440FX\n    addr = 00\n    bus = pci.0\nPIIX4_PM\n  aid = __2\n  aobject = None\n  parent_bus = ({'aobject': 'pci.0'},)\n  child_bus = \[\]\n  params:\n    driver = PIIX4_PM\n    addr = 01.3\n    bus = pci.0\nPIIX3\n  aid = __3\n  aobject = None\n  parent_bus = ({'aobject': 'pci.0'},)\n  child_bus = \[\]\n  params:\n    driver = PIIX3\n    addr = 01\n    bus = pci.0\npiix3-ide\n  aid = __4\n  aobject = None\n  parent_bus = ({'aobject': 'pci.0'},)\n  child_bus = \[.*QIDEBus.*\]\n  params:\n    driver = piix3-ide\n    addr = 01.1\n    bus = pci.0\nfdc\n  aid = __5\n  aobject = None\n  parent_bus = \(\)\n  child_bus = \[.*QFloppyBus.*\]\n  params:
2982	PREFIX\('.*?'\)(.*?)\(.*
2983	[$^#\\']
2984	[\']([a-zA-Z0-9]+)[\']
2985	[\w']+
2986	\.(\w+)'>
2987	\?\?[=/\'\(\)\!<>\-]
2988	\[(?P<tag>\w+)\]\s*\=\s*\'(?P<value>\w+)\'
2989	\bsub\s+(\w+(::|'))*\w+$
2990	\svalues\s*(\(((?<!\\)'[^\)]*?\)[^\)]*(?<!\\)?'|[^\(\)]|(?:\([^\)]*\)))+\))
2991	\n        ^\n        \s*\n        (?P<operator>(~=|==|!=|<=|>=|<|>|===))\n        (?P<version>\n            (?:\n                # The identity operators allow for an escape hatch that will\n                # do an exact string match of the version you wish to install.\n                # This will not be parsed by PEP 440 and we cannot determine\n                # any semantic meaning from it. This operator is discouraged\n                # but included entirely as an escape hatch.\n                (?<====)  # Only match for the identity operator\n                \s*\n                [^\s]*    # We just match everything, except for whitespace\n                          # since we are only testing for strict identity.\n            )\n            |\n            (?:\n                # The (non)equality operators allow for wild card and local\n                # versions to be specified so we have to define these two\n                # operators separately to enable that.\n                (?<===|!=)            # Only match for equals and not equals\n\n                \s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\.]?\n                    [0-9]*\n                )?\n                (?:                   # post release\n                    (?:-[0-9]+)|(?:[-_\.]?(post|rev|r)[-_\.]?[0-9]*)\n                )?\n\n                # You cannot use a wild card and a dev or local version\n                # together so group them with a | and make them optional.\n                (?:\n                    (?:[-_\.]?dev[-_\.]?[0-9]*)?         # dev release\n                    (?:\+[a-z0-9]+(?:[-_\.][a-z0-9]+)*)? # local\n                    |\n                    \.\*  # Wild card syntax of .*\n                )?\n            )\n            |\n            (?:\n                # The compatible operator requires at least two digits in the\n                # release segment.\n                (?<=~=)               # Only match for the compatible operator\n\n                \s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\.[0-9]+)+   # release  (We have a + instead of a *)\n                (?:                   # pre release\n                    [-_\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\.]?(post|rev|r)[-_\.]?[0-9]*)\n                )?\n                (?:[-_\.]?dev[-_\.]?[0-9]*)?          # dev release\n            )\n            |\n            (?:\n                # All other operators only allow a sub set of what the\n                # (non)equality operators do. Specifically they do not allow\n                # local versions to be specified nor do they allow the prefix\n                # matching wild cards.\n                (?<!==|!=|~=)         # We have special cases for these\n                                      # operators so we want to make sure they\n                                      # don't match here.\n\n                \s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\.]?(post|rev|r)[-_\.]?[0-9]*)\n                )?\n                (?:[-_\.]?dev[-_\.]?[0-9]*)?          # dev release\n            )\n        )\n        \s*\n        $\n        
2992	\n    (?:'[^'\n\r]*')+|\n    <=|>=|=|<|>|\n    :\w+|\n    ,|\n    \*|\n    -?\d+(?:\.\d+)?|\n    \w+|\n    \(|\)|\n    \S+\n    
2993	^.*: Opening '(.*)' for reading$
2994	^\d* *([\w.,'\s]+)$
2995	__([a-z]+)__ = '([^']+)'
2996	download_url:'([^']+)'
2997	invalid literal for long().*: '?0xOoops'?
2998	location\.href='(.*?)'
2999	name '(?P<symbol>[A-Za-z_][A-Za-z0-9_]*)' is not defined
3000	title:'([^']+?)'
3001	user:'([^']+?)'
3002	var ftoken = '(.+?)';
3003	    # A numeric string consists of:\n    (?P<sign>[-+])?          # an optional sign, followed by\n    (?=\d|\.\d)              # a number with at least one digit\n    (?P<int>\d*)             # having a (possibly empty) integer part\n    (?:\.(?P<frac>\d*))?     # followed by an optional fractional part\n    (?:E(?P<exp>[-+]?\d+))?  # and an optional exponent\n    \Z\n
3004	  ([^:]*):  (.*)
3005	  (\S+) \((\d+)\)
3006	  (http://.*)
3007	  File "[^"]+", line \d+\n$
3008	  http://
3009	 (                        # wrap whole match in $1\n                  !\[\n                    (.*?)               # alt text = $2\n                  \]\n                  \(                    # literal paren\n                        [ \t]*\n                        <?(\S+?)>?      # src url = $3\n                        [ \t]*\n                        (               # $4\n                        ([\\'\"])        # quote char = $5\n                          (.*?)         # title = $6\n                          \5            # matching quote\n                          [ \t]*\n                        )?              # title is optional\n                  \)\n                )\n    
3010	 (                       # wrap whole match in $1\n                  !\[\n                    (.*?)               # alt text = $2\n                  \]\n\n                  [ ]?                  # one optional space\n                  (?:\n[ ]*)?           # one optional newline followed by spaces\n\n                  \[\n                    (.*?)               # id = $3\n                  \]\n\n                )\n    
3011	 (                   # wrap whole match in $1\n                  \[\n                    (.*?)          # link text = $2\n                  \]\n                  \(               # literal paren\n                        [ \t]*\n                        <?(.+?)>?  # href = $3\n                        [ \t]*\n                        (          # $4\n                          ([\\'\"]) # quote char = $5\n                          (.*?)    # Title = $6\n                          \5       # matching quote\n                        )?         # title is optional\n                  \)\n                )\n    
3012	 (                 # wrap whole match in $1\n                  \[\n                    (.*?)        # link text = $2 \n                    # [for bracket nesting, see below]\n                  \]\n\n                  [ ]?           # one optional space\n                  (?:\n[ ]*)?    # one optional newline followed by spaces\n\n                  \[\n                    (.*?)        # id = $3\n                  \]\n                )\n    
3013	 (?=-|--|/)
3014	 (SENATOR|REPRESENTATIVE)\([Ss]\) ([^,]+(,[^,]+){0,})
3015	 ([a|b])/
3016	 *"(.*)" *<.*@.*>
3017	 -[HS]J \d+;? ?
3018	 ?(?:,| AND ) ?
3019	 \(Unprocessed\)(?:\[\d+\])?
3020	 \| 
3021	 error: 
3022	 failed: (.*)$
3023	 name="flashvars" value="(.*?)"
3024	 {2,}\n
3025	!!(.*?)\.(.*)
3026	"(.*)"(\s*\[.*\])
3027	"(.*)"\s*->\s*"(.*)"
3028	"([^"]*)"
3029	"(\\\\|\\"|[^"])*"
3030	".*?"
3031	"QOOXDOO_PATH"\s*:\s*"([^"]*)"\s*,?
3032	"mediaURL":"(http.*?)","key":"(.*?)"
3033	# <headingcell level=(?P<level>\d)>
3034	# <nbformat>(?P<nbformat>\d+[\.\d+]*)</nbformat>
3035	# Command: [/\w_]+ (.*)
3036	# Fadvise: ([\w]+)
3037	# Iterations: ([0-9]+)
3038	# Sched features: ([\w]+)
3039	# StopWatch ([\w]+) total/cumulative duration ([0-9.]+). Samples: ([0-9]+)
3040	#!.*\n
3041	#(..)(..)(..)
3042	#([\w-]+)
3043	#(\S+)
3044	#.*?$
3045	#.*?\n
3046	#:([a-zA-Z][a-zA-Z0-9_-]*)
3047	#F([^#]+)
3048	#[ \t]*doctest:.*
3049	#[\s]*?(TODO|FIXME|HACK|XXX)[\s:]?(.+)
3050	#\s*-\*-\s+coding:\s+(\w+)\s+-\*-
3051	#d8e8ff
3052	#define NODE_VERSION_IS_RELEASE
3053	#define\s+ZLIB_VERSION\s+"([^"]*)"
3054	#define\sSET_(\S*)\(
3055	%(.)
3056	%(?:%|(\(\w+\))?([#0 +-]?(?:\d+|\*)?(?:\.\d+)?[hlL]?\w))
3057	%([0-9]+)
3058	%([YmdHMS])
3059	%20
3060	%G|\[m|\[[\d;]+[HJnrm]
3061	%\((.*?)\)
3062	%\s*#.*coding[:=]\s*([-\w.]+)
3063	%e
3064	%i
3065	%module(\s*\(.*\))?\s+("?)(.+)\2
3066	%pi
3067	&#([0-9]+);?
3068	&#(\d+);
3069	&#8211;
3070	&#8212;
3071	&#8216;
3072	&#8217;
3073	&#8220;
3074	&#8221;
3075	&#8230;
3076	&#\d+;
3077	&(#?)(x?)(\w+);
3078	&(#[0-9][0-9]*)(?![0-9;])
3079	&(?![A-Za-z]+;)
3080	&([a-zA-Z][a-zA-Z0-9]*)[^a-zA-Z0-9]
3081	&(\S*)\s*(.*)
3082	&amp;
3083	&lt;.*?&gt;
3084	( +|\n)
3085	(!\S*)(.*)
3086	(%?):([a-zA-Z][a-zA-Z0-9_-]*)%
3087	(%[A-z])
3088	(&#\d+;)
3089	(((verify))) *\(( *)(\d+)
3090	((,|^)\s*[\w\-\.]+)
3091	((.*?){(.*?)})
3092	((?:/|-|--)[-_a-zA-Z0-9]+)(\s*.*?)(?=,\s+(?:/|-|--)|$)
3093	((?:@\S+\.(?:app_)?))(after_request)(\b\s*$)(?m)
3094	((?:DEBUG|INFO|NOTICE|WARNING|ERROR|FATAL|HINT|DETAIL|CONTEXT|LINE [0-9]+):)(.*?\n)
3095	((?:[^{}]?[<>=^])?)([-+ ]?)(#?)(\d*)(,?)((?:\.\d+)?)(.?)$
3096	((?:http|https|git)://github.com/[^/]*/[^/]*)/{0,1}
3097	((?<!(href|.src|data)=[\'"])((http|https|ftp)\://([a-zA-Z0-9\.\-]+(\:[a-zA-Z0-9\.&amp;%\$\-]+)*@)*((25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])|localhost|([a-zA-Z0-9\-]+\.)*[a-zA-Z0-9\-]+\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(\:[0-9]+)*(/($|[a-zA-Z0-9\.\,\?\'\\+&amp;%\$#\=~_\-]+))*))
3098	((?<!{)(?:{{)+|(?:}})+(?!})|{(?:[^{](?:[^{}]+|{[^{}]*})*)?})
3099	((DB|User|Msg|MsgAssertion)Exceptio(n))\(( *)(\d+) *,? *(\S+.+\S) *,?
3100	(([A-Z_][A-Z0-9_]*)|(__.*__))$
3101	(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
3102	(([umsg]asser(t|ted))) *\(( *)(\d+)
3103	(([umsgf]asser(t|ted))) *\(( *)(\d+)
3104	(([wum]asser(t|ted))) *\(( *)(\d+) *,\s*("\S[^"]+\S")\s*,?.*
3105	(([wum]asser(t|ted))) *\(( *)(\d+) *,\s*([\S\s+<\(\)"]+) *,?.*
3106	(([wum]asser(t|ted)))\s*\(([^\d]*)(\d+)\s*,?()
3107	((\d*?)(\d{0,3}?))\d{1,3}$
3108	((\d*?)\d{1,3})$
3109	((^|\n)\s*)-
3110	((^|\n)\s*)@
3111	((^|\n)\s*\d+)\.
3112	((fasser(t|ted))) *\(( *)(\d+)()
3113	((fassertFailed)()) *\(( *)(\d+)
3114	((fassertFailed)()) *\(( *)(\d+)()
3115	((final|abstract)[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?class[ \t]+\w+((implements|extends)\w+)?
3116	((msgasser(t|ted))) *\(( *)(\d+) *, *("\S[^,^"]+\S") *,?
3117	((msgasser(t|ted)))\s*\(([^\d]*)(\d+)\s*,?()
3118	((msgasser(t|ted)NoTrace)) *\(( *)(\d+) *, *("\S[^,^"]+\S") *,?
3119	((msgasser(t|ted)NoTrace))\s*\(([^\d]*)(\d+)\s*,?()
3120	()(  +)
3121	(--|-)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?
3122	(--|-|\+)(?P<option>[A-Za-z0-9_-]+)(?P<arg>=.*)?
3123	(-?\d+)(\d{3})
3124	(-\w*)$
3125	(.*) (<tt class="py-line">.*)\Z
3126	(.*) ([(][^()]*[)])
3127	(.*) <(.*)>
3128	(.*) \(\d\)
3129	(.*) cache:$
3130	(.*)
3131	(.*),\s+((\w+\.?) (\d+), (\d{4}))
3132	(.*): mark as failed$
3133	(.*): reinstated$
3134	(.*)[-_](.*)
3135	(.*)\(
3136	(.*)\(.*?\)
3137	(.*)\(.*\)
3138	(.*)\*$
3139	(.*)\.\[[\w_\.\-]+?\]\.torrent
3140	(.*)\.\w{3,4}$
3141	(.*)\[([^\[\]]+)\](.*)
3142	(.*)\n
3143	(.*//.*?/)
3144	(.*?) (.*?) as (\w+)
3145	(.*?)([\\\{\}\[\]])(.*)
3146	(.*?)(\s*[\]}].*)
3147	(.*?)\s*, (.*)
3148	(.*?\W*)(\w+)(\W.*?)?
3149	(.+)_(\d+)_(\d+)_(.+)
3150	(.+?)\((.*)\)
3151	(.+?)\s*:\s*(.*)
3152	(/[a-zA-Z][a-zA-Z0-9]*)+$
3153	(0x[0-9A-Fa-f]+|0\d*|[1-9]\d*)
3154	(<!DOCTYPE[^]]*]>)
3155	(<(?:\+|\||\$|\d{1,2})>)
3156	(</?(?:ul|li)[^>]*>)
3157	(<[^<>]+(?:href|src)=(["\'])/)
3158	(<\?xml version.*\?>)
3159	(<\w+ object at )0x\w+>
3160	(<function \w+ at )0x\w+>
3161	(="[^"]+")([a-zA-Z])
3162	(>(\s*>)+)(,|\n$)
3163	(?:#|#.*?&)egg=([^&]*)
3164	(?:&([a-zA-Z][-.a-zA-Z0-9]*)|&#(x[0-9a-zA-Z]+|[0-9]+))(;?)
3165	(?:([\w ]+) ([\w.]+) .*\[.* ([\d.]+)\])
3166	(?:<(?:b|em|i|strong)>){2}
3167	(?:</(?:b|em|i|strong)>){2}
3168	(?:\W+File "(?:.*)", line (?:.*)\W+(?:.*)\W+\^\W+)?Syntax(?:Error|Warning): (?:.*)
3169	(?:\d{1,3}\.){3}\d{1,3}
3170	(?:\s+([\w-]+)\s*=\s*(".*?"|\'.*?\'))
3171	(?:\r\n|\r)
3172	(?:^|, )(?P<key>\w+)=(?P<value>[^, ]+)
3173	(?:^|/)(0-9|[a-z])\.json$
3174	(?:^|/)ChangeLog.*$
3175	(?:const-)?([A-Za-z0-9]+)\*?\s+
3176	(?:ed|ble|ous|id)$
3177	(?:https?://)?([^/]*)/.*
3178	(?:is|has)[A-Z_]
3179	(?:require|load)\s+[\\'"](.*?)$
3180	(?<!&)#(\w+)
3181	(?<!&)&(?![&\s])
3182	(?<!;);(?!;)
3183	(?<![\\'\"])require\s*\(\s*[\\'\"]([^\\'\"]+?)[\\'\"]\s*\)
3184	(?<!\$)(?<!\\)\$([^\$]+?)\$
3185	(?<!\\)([aAbBcdDfFgGhHiIjlLmMnNOPrsStTUuwWyYzZ])
3186	(?<!\\)\.
3187	(?<!\w)\d+$
3188	(?<!sympy\.)mpmath
3189	(?<!{)(\\)(?![{}]})
3190	(?<=  \[)(.+)(?=\])
3191	(?<=@)[^.]+\.\w+
3192	(?<=[^a-zA-Z0-9_-])%(?=[^:])
3193	(?<=kernel:)/.*(?:>)
3194	(?=.*\d)(?=.*[a-zA-Z])
3195	(?P<atom>[^\](){%*"\\\x00-\x20\x80-\xff]+)( (?P<rest>.*$)|$)
3196	(?P<before>.*?)[\(]host (?P<host>\S+) (?P<action>[^:]+): (?P<message>.*)[\)]
3197	(?P<code>[ADEFIJ])(?P<width>\d+)(?:\.(?P<prec>\d+))?
3198	(?P<currency>\w+) (?P<amount>[\d.,]+)
3199	(?P<def>\w+)(?P<space>\s+)(?P<name>\w+)
3200	(?P<fence>^~{3,})[ ]*\n(?P<code>.*?)(?P=fence)[ ]*(\{\.(?P<lang>[a-zA-Z0-9_-]*)\})?[ ]*$
3201	(?P<hash_name>sha1|sha224|sha384|sha256|sha512|md5)=(?P<expected>[a-f0-9]+)
3202	(?P<icon>\w+)
3203	(?P<id>.*)\s*[:=]\s*(?P<value>.*)
3204	(?P<key>.*)\s*=\s*u?\[?[\\'\"](?P<value>.*)[\\'\"]\]?
3205	(?P<label>^T[A-Z]*)(?P<num>[1-9][0-9 ]*$)
3206	(?P<lhs>(\s*)([\w\.]+)((\s*,\s*[\w\.]+)*))\s*=\s*!(?P<cmd>.*)
3207	(?P<lhs>(\s*)([\w\.]+)((\s*,\s*[\w\.]+)*))\s*=\s*%(?P<cmd>.*)
3208	(?P<mimetype>[^;]+).*(?:charset=(?P<charset>[^ ]+))?$
3209	(?P<name>[\w .-]+)\s*\(\s*(?P<ver>[^\s)]+)\)$
3210	(?P<name>\w+)=(?P<value>[^ ,]+)
3211	(?P<name>\w+)\s+(?P<type>[A-Za-z]+|\(.*?\))\s+(?P<default>#REQUIRED|#IMPLIED|\w+|(?:#FIXED)?((?:")([^"]*?)(?:")|(?:\')([^\']*?)(?:\')))\s*(?:--(?P<comment>.*?)--)?
3212	(?P<names>\w+[-A-Za-z0-9|]*)?(?P<spec>!|[=:][infs]@?)?
3213	(?P<op>([<>=!~]=)|[<>])\s*(?P<vn>(\w|[.-])+\*?)
3214	(?P<pending_builds>\d) pending
3215	(?P<prefix>[+-])(?P<hours>[0-9]{2}).(?P<minutes>[0-9]{2})
3216	(?P<required>.)(?P<type>.)(?P<multi>@?)
3217	(?P<schema>.+)://.*
3218	(?P<symbol>[^\t]+)\t(?P<filename>[^\t]+)\t(?P<ex_command>.*?);"\t(?P<type>[^\t\r\n]+)(?:\t(?P<fields>.*))?
3219	(?P<title>.+) (\((class in )?(?P<id>[\w\.]+)( (?P<descr>\w+))?\))$
3220	(?P<urlcmd>\s*url\s.*)|(?P<nfscmd>\s*nfs\s.*)
3221	(?P<year>[0-9]{4})(-(?P<month>[0-9]{1,2})(-(?P<day>[0-9]{1,2})((?P<separator>.)(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2})(:(?P<second>[0-9]{2})(\.(?P<fraction>[0-9]+))?)?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?
3222	(?P<year>\d{4})-(?P<month>\d{2})-(?P<day>\d{2})T(?P<hour>\d{2}):(?P<minute>\d{2}):(?P<second>\d{2})(?P<second_float>(\.\d+)?)Z
3223	(?P<year>\d{4})-(?P<month>\d{2})-(?P<day>\d{2})[T ](?P<hr>\d{2}):(?P<min>\d{2}):(?P<sec>\d{2})(?P<fractional_sec>\.\d+)?
3224	(?i)([\. ])and([\. ])
3225	(?i)([a-z]{2})
3226	(?i)<a.*?href.*?="(.+?)".*?>
3227	(?i)<embed.*?src.*?="(.+?)".*?>
3228	(?i)<form[^>]* name="loginForm"
3229	(?i)<img.*?src.*?=.*?"(.+?)".*?>
3230	(?i)^(\d+(?:\.\d+)?)([kMGTPEZY]?)$
3231	(?i)gesch\xc3\xa4fts(.*)mail
3232	(?i)gesch\xc3\xa4fts(.*)nummer
3233	(?i)handy(.*)nummer
3234	(?i)haupt(.*)nummer
3235	(?i)head
3236	(?i)iphone(.*)nummer
3237	(?i)pager(.*)nummer
3238	(?i)privat(.*)mail
3239	(?i)privat(.*)nummer
3240	(?i)videoUrl\\x3d(.+?)\\x26
3241	(?im)<title>(.*) - Video</title>
3242	(?im)^LaTeX\s+Warning:\s+Label\(s\)\s+may\s+have\s+changed.\s+Rerun
3243	(?is)<div class=.+?>.+?</div>
3244	(?is)<p>(.+?)</p>
3245	(?is)<p>([^<>]{0,15}<b>[^<>]+?</b>[^<>]{2,2}.+?)</p>
3246	(?is)\[(?:[0-9]+?|[a-z]+? needed)\]
3247	(?m)&gdaKey=(.*?)&
3248	(?m)&mediaURL=([^&]+)
3249	(?m)(^|[^\\])(%.*$)
3250	(?m)\s+
3251	(?m)^Conf ([^ ]+) \(([^ ]+) ([^ ]+) \[([^\]]+)\]\)$
3252	(?m)^alias.*virtio
3253	(?m)^alias\s+scsi|(?m)^alias\s+eth
3254	(?mi)^[ ]*\:RequireModule:(.*)$
3255	(?ms)By:\s*<a .*?>(.+?)<
3256	(?s)<!--.*?-->
3257	(?s)<error (.*?)>.*?</error>
3258	(?s)<failure (.*?)>.*?</failure>
3259	(?s)>\s+
3260	(?s)\s+<
3261	(?s)^(.*)(\n[ \t]*)\Z
3262	(?sm)\A.*?!( LaTeX Error:)?
3263	(?sm)\s*Type X to quit.*
3264	(?sm)^! Emergency stop.*
3265	(?x)(\n        (?:0|[1-9]\d*)\n        (\.\d+)?\n        ([eE][-+]?\d+)? |\n        (0x[a-fA-F0-9]+)\n    )
3266	(?x)\n    (?P<key>[^=]+)\n    \s*=\s*\n    (?P<val>\n        "(?:[^\\"]|\\.)*" |\n         (?:.*?)\n    )\n    \s*;\n
3267	(?x)\n    \%\n        (?:\(([\w]*)\))?\n        (\n            [-#0\ +]?(?:\*|[\d]+)?\n            (?:\.(?:\*|[\d]+))?\n            [hlL]?\n        )\n        ([diouxXeEfFgGcrs%])\n
3268	(?xs)(\n        \'(?:[^\'\\]*(?:\\.[^\'\\]*)*)\'  |\n        "(?:[^"\\]*(?:\\.[^"\\]*)*)"\n    )
3269	(BlackBerry|HTC|LG|MOT|Nokia|NOKIAN|PLAYSTATION|PSP|SAMSUNG|SonyEricsson)
3270	(ERROR|FATAL):
3271	(H|S)
3272	(I[0-9a-f]{8,40})|([Bb]ug|[Ll][Pp])[\s\#:]*(\d+)|([Bb]lue[Pp]rint|[Bb][Pp])[\s\#:]*([A-Za-z0-9\-]+)
3273	(RHEL.*PC)
3274	(Read-only)|(protected)
3275	(Resolving |Connecting to )
3276	(Saving to:|\s*\d+K)
3277	(WARNING|ERROR|INFO) \(l.(?P<line>[0-9]+), c.(?P<column>[0-9]+)\): (?P<rest>.*)
3278	(Y=.*)
3279	([ \t(]|^)([-a-zA-Z0-9_+]*[\x7f-\xff][-a-zA-Z0-9_+\x7f-\xff]*)(?=[ \t)]|\n)
3280	([#$&%_\${}])
3281	([$\\%&@]+)?(\w+)
3282	([% \t\x80-\xff])
3283	([+-]?[\d\.]+)(\S+)
3284	([+-]\(.*?\)|\(.*?\)[\*\+]|\(.*?\))(?:\s|$)
3285	([+-]\d{4})$
3286	([0-9]+)_([0-9]+)
3287	([0-9]+.[0-9]+)
3288	([0-9]+\.[0-9]+\.[0-9]+)\s*(\(\S*\))?
3289	([:\-\w]*){([^}]+)}
3290	([?*]+/?)
3291	([A-Z])([a-z0-9]+)
3292	([A-Z]+[a-z]*)([A-Za-z0-9]+)
3293	([A-Z][A-Z])([A-Z][0-9a-z])
3294	([A-Za-z0-9_.-]*|"[^"]*")\s+(\S+)\s+(.*)
3295	([A-Za-z]+)(hat|check|dot|breve|acute|ddot|grave|tilde|mathring|bar|vec)
3296	([\"$`])
3297	([\-0-9])|([\-0-9]/[0-9])
3298	([\\'"])(.*?)\1
3299	([\w-]+[\w]+)\s+(\w+)\s+(\w+)
3300	([\w.+]+)\s*\(#?([^,]+),\s*([\w ]+),\s*([\w :]+)\)\s*\[PyPy [^\]]+\]?
3301	([\w\-\.]+)="([^"]+)"
3302	([\w]*)([^:=]*:?=?)([sif]?)
3303	([\x20\x21\x23-\x5B\x5D-\x7E]+)
3304	([\x80-\xFF])
3305	([\x00-\x08\x0b\x0c\x0e-\x1f])
3306	([^#:]*#)(.*)
3307	([^,;]+[,;]?)
3308	([^-]*-).*
3309	([^:]*):\s+scsi([0-9]+)\s+channel=([0-9]+)\s+id=([0-9]+)\s+lun=([0-9]+)
3310	([^<]*)(<[^>]*>)
3311	([^A-Z])([A-Z])
3312	([^[]+)\[([^]]+)\]
3313	([^\(]+)
3314	([^\?\!]*\?)?([^\?\!]*\!)?(.*)
3315	([^\r\n]*)(?:\r\n|\r|\n)
3316	([^aeiouylsz])\1$
3317	([_A-Za-z]\w*)
3318	([a-zA-Z0-9+.-]+)://
3319	([a-zA-Z]):\\(.*)
3320	([a-zA-Z]+)([A-Z][a-z])
3321	([a-z]+://|//).*
3322	([a-z_]+)_total
3323	([aeiouy])y
3324	([idel])|(\d+):|(-?\d+)
3325	([shv]db)\s
3326	([{}])
3327	(\'([^\'\\]*(?:\\.[^\'\\]*)*)\'|"([^"\\]*(?:\\.[^"\\]*)*)")(?ms)
3328	(\'[^\']*\'|"[^"]*"|::|//?|\.\.|\(\)|[/.*:\[\]\(\)@=])|((?:\{[^}]+\})?[^/:\[\]\(\)@=\s]+)|\s+
3329	(\$\{)\d+(:[^}]+\})
3330	(\(|\)|\s+|\+)
3331	(\*\*|__) (?=\S) (.+?[*_]*) (?<=\S) \1
3332	(\*|_) (?=\S) (.+?) (?<=\S) \1
3333	(\.[\d]+)?$
3334	(\.dev\d*).*?$
3335	(\.|::)
3336	(\A[ \n]*\n)|(\n[ \n]*\Z)
3337	(\D)(\d{4})$
3338	(\D)\.(?!\s)
3339	(\D)\.(?!\s)(\D)
3340	(\S*)\s*RHEL\s
3341	(\S+)$
3342	(\S+)
3343	(\S+):(\d+): \[(\S+)(, \S+)?] (.*)
3344	(\S+)?\s*->\s*(\S+)\s*\[(.*?):(.*?)\]$
3345	(\S+)\s(\S+)
3346	(\S+)\s*,\s*
3347	(\S+)\s*->\s*(?:\[([^\]]*)\])?$
3348	(\S+)\s*=\s*("([^"]*)"|\'([^\']*)\')
3349	(\S+[^<|^!|^>])\s*(=+)\s*(\S+)
3350	(\W)
3351	(\[(.+des([0-9]+).htm)\])
3352	(\\|")
3353	(\\|\*|\+|\?|\||\{|\}|\[|\]|\(|\)|\^|\$|\.|\#|\ )
3354	(\d)\.(\d{4})
3355	(\d*)(:?)
3356	(\d+ bytes).*?([\d\.]+ s).*?([\d\.]+ [KkMmGgTt])B/s
3357	(\d+) bytes
3358	(\d+) files? changed, (\d+) insertions?\(\+\), (\d+) deletions?\(\-\)
3359	(\d+) megabytes
3360	(\d+)(.*)
3361	(\d+).(\d+).(\d+)
3362	(\d+):.*virtio\d+-input.\d
3363	(\d+)\.(\d+)\.(\d+)\.(\d+)
3364	(\d+\.\d+\.\d+\.\d+|\W:{2}\d\W):\d+,\d+\s+([\w\.\-:\d]+)
3365	(\d+|\D+)
3366	(\d\.){2}
3367	(\d{1,3}\.\d{2})%
3368	(\d{2,3})
3369	(\d{2})
3370	(\d{4})
3371	(\d{4})\.(\d{2})\.(\d{2})\.(\d{2})\.(\d{2})\.(\d{2})$
3372	(\n)( +)
3373	(\n\s*<\!--)
3374	(\r\n|\n|\r)
3375	(\s*#include\s+<)(.*?\.hpp)?(>\s*)?
3376	(\s*)((BOOST_STATIC_CONSTANT\(\s*\w+,\s*|enum\s*\w*\s*{\s*)value\s*=)(.*?)([}|\)];)$
3377	(\s*)((\s*typedef\s*.*?;)+)\s*$
3378	(\s*)(\\.+?)(\s+)$
3379	(\s*[;,\s]\s*)
3380	(\s*[\w\W]*?\.)(\s|$)
3381	(\s+|(?<=\s)(?::[a-z-]+:)?`\S+|[^\s\w]*\w+[a-zA-Z]-(?=\w+[a-zA-Z])|(?<=[\w\!\"\\'\&\.\,\?])-{2,}(?=\w))
3382	(\s|&nbsp;)(&|&amp;|&\#38;)(\s|&nbsp;)
3383	(\s|,)+
3384	(\w+) as (\w+) in (\w+)
3385	(\w+)(\.|:)\s*(.*)
3386	(\w+)Manifest
3387	(\w+)\s*<((\w|,| |-)+)>
3388	(\w+)\s*\(\)
3389	(\w+)\s+(\w+)\s+(\w+)
3390	(\w+)_new$
3391	(\w+://.*|/.*|\w:\.*|\w:/.*)
3392	(\w+\W*)
3393	(\w+\d+)[:\s]
3394	(\w+|-+>|=+>|"[^"]+"|\'[^\']+\'|\|)
3395	(\w{3}, \d{1,2} \w{3} \d{4} \d\d:\d\d:\d\d) [\+\-]\d{4}
3396	(\{[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}\} |  # GUID\n                   [a-z0-9-\.\+_]*\@[a-z0-9-\._]+)  # Email format
3397	(\r\n)|\r|(\n\r)
3398	(\r\n|\r|\n)\Z
3399	(^/dev/x{0,1}[a-z]{0,1}d{0,1})([a-z]+)[0-9]*$
3400	(^RuntimeError:.* naughty.*){2}
3401	(^TypeError:.* return an int.*){2}
3402	(^[ \t]*In \[\d+\]: |^[ \t]*\ \ \ \.\.\.+: )
3403	(^[ ]*[+]?[\(\)0-9/\/\.\- ]+$)
3404	(^[a-zA-Z]+)([0-9]+)$
3405	(^package:)|\s
3406	(^| )`\w([^`]*?\w)?`($| )
3407	(^|\\n)([^\\]*)$
3408	(abstract[ \t]+)?((public|private|protected)[ \t]+)?(static[ \t]+)?function[ \t]+?\w+\(.*?\)
3409	(at|bl|iz)$
3410	(a|alpha|b|beta|pre|rc)\d*$
3411	(const)?.*::basic_string<.*>\s*(\*|\&)?$
3412	(const)?\s*char\s*\*?$
3413	(const)?\s*double$
3414	(const)?\s*float$
3415	(const)?\s*int$
3416	(const)?\s*long$
3417	(const)\s+((unsigned|signed)?(bool|char|short|int|long))
3418	(const-)?([A-Za-z0-9]+)\*?\s+
3419	(fe80::[^\s|/]*)
3420	(filename = ).*
3421	(grubby version)?(\s)?(\d+)\.(\d+)(.*)
3422	(https?://\S+)
3423	(https?://|git://)github
3424	(h|s)\w*(\d\d\d\d\d)
3425	(id|.+_id)(\d+)((?:-bb)?)
3426	(iex|\.{3})> 
3427	(initrd(.*).img|ramdisk.image.gz)
3428	(interface|) ([^ ]*) : public (.*)$
3429	(mapperprop|mapper|table|column|session|attribute|engine):(.*)
3430	(mapper|table|column|session|attribute|engine):(.*)
3431	(require|define)\s*\(\s*([\\'\"][^\\'\"]+[\\'\"]\s*,)?\s*\[([^\]]+)\]
3432	(virtfn[0-9])
3433	(vmlinu[xz]|kernel.img)
3434	({@link(?:plain)?\s[^}]+})
3435	({[^{}$]*\$[^{}$]*\$[^{}]*})
3436	({[^{}]*})
3437	({[^}]+})?(\w+)
3438	(~?\b[a-zA-Z_][a-zA-Z0-9_]*)\b
3439	, *<
3440	,[ ]*([-]?\d+|n)
3441	,|;
3442	--+.*?--+
3443	--- \w
3444	---\s*$
3445	--.*?--
3446	--\d{4}-\d{2}-\d{2}
3447	--vm-bytes
3448	->\s*(\S+)$
3449	-?\d+(?=\s|\]|,)
3450	-[^-]*$
3451	-\*-\s*(.*?)\s*-\*-
3452	-\d+$
3453	-\d+
3454	-d 192.168.[0-9]{1,3}.[0-9]{1,3} -j
3455	-py(\d\.?\d?)
3456	-t(?:\s|$)
3457	.* FAILED TESTS\n
3458	.*(?:PostgreSQL|EnterpriseDB) (\d+)\.(\d+)(?:\.(\d+))?(?:\.\d+)?(?:devel)?
3459	.*-sdk ([a-zA-Z0-9.]*)
3460	.*/(\d+)
3461	.*6300ESB Watchdog Timer
3462	.*?Error: (?P<error>.+) on line (?P<line>\d+)
3463	.*?Error: Parse error on line (?P<line>\d+): (?P<error>.+)
3464	.*?\n?.*?coding[:=]\s*([-\w.]+)
3465	.*?_([a-z]*)_pid(\d*)$
3466	.*?_([a-z]*)_pid(\d*).log$
3467	.*File exists.*
3468	.*SUSE.*
3469	.*SickBeard\-win32\-alpha\-build(\d+)(?:\.\d+)?\.zip
3470	.*[/\\](.+)(\:\d+|\(\d+\))\:
3471	.*[/\\]bin[.]v2[/\\]
3472	.*[^.]\.\.[^.].*
3473	.*[^aeiouy][aeiouy][^aeiouywxY]$
3474	.*\*$
3475	.*\.(gz|xz|7z|bz2)$
3476	.*\.\.\.\s+\.\.\..*
3477	.*\.htm
3478	.*\?.*token=(.*)(&?)
3479	.*\srelease\s(\d)\.(\d)\s.*
3480	.*_?column_(\d+)_.+
3481	.*foo.*bar
3482	.*gtest_main.*\n
3483	.*lib(n?cursesw?)\.so.*
3484	.*lib2to3.*\.pickle$
3485	.*postgis
3486	.*subject=\w+$
3487	.+@.+\..+
3488	.+[.](?<!log[.])zip
3489	.+\.(html|txt|rst|ical|csv)$
3490	.. code-block:: (.+?)\s*$
3491	.. include:: (.+?)\s*$
3492	..
3493	.\b.
3494	.py[co]$
3495	.py\w$
3496	.py\w?$
3497	.tar.gz
3498	/(.*)
3499	/(?:[^/\\]*(?:\\.[^/\\]*)*)/[a-zA-Z]*(?s)
3500	/(developers/)?apps/
3501	/.*
3502	//.*?$|/\*.*?\*/|\\'(?:\\.|[^\\\\'])*\\'|"(?:\\.|[^\\"])*"
3503	/=?
3504	/\* \[([^\]]*.*?)] \*/[ \t](.*[* ]+)(\w+)(\[ *])?[\),]
3505	/\.svn/?
3506	/b2g\s*$
3507	/bcr/
3508	/cgcc/
3509	/cygdrive/([a-z])/(.*)
3510	/dev/disk([0-9]+)[^s]
3511	/dev/sd
3512	/dev/vd\S+
3513	/dev/vda
3514	/plugin-container\s*$
3515	/projects/([-\w]+)/([-\w]+)/
3516	/pypi\?\:action=doap\&amp;name=[a-zA-Z0-9\.\-\_]+\&amp;version=[a-zA-Z0-9\.\-\_]+
3517	/status/object/([0-9]+)/.*
3518	/usr/bin/qemu-system-x86_64 -machine accel=kvm
3519	00000000
3520	100.*
3521	10[01].*
3522	127.0.0.1:
3523	127.0.0.1:0
3524	:   
3525	: 
3526	:"([0-9]+)"
3527	:( *\n     \|\n)\x02
3528	:(.+?):`(.+?)`
3529	:([a-zA-Z][a-zA-Z0-9_-]*)
3530	:([a-zA-Z_\-]+):(.*)$
3531	:(\s*)\x02
3532	:(\s+)
3533	:(\s|$)
3534	:.{2}-.*$
3535	::(\s*($|\n))
3536	:[0-9]*$
3537	:\s*(#.*)?$
3538	:|\*|\?|"|<|>|\|
3539	;(\s+)
3540	;\s*(--.*?)?$
3541	<!--.*
3542	<![^>]*>
3543	<(.+)>
3544	<(.+?)>
3545	<(/?)([:a-z0-9_\-]*)(.*?)>
3546	<(?![a-z/?\$!])
3547	<([^ ]+)(>| ).*
3548	<([^/!])>\s+</
3549	<([^/!][^>]*[^/])>\s+</
3550	<([^:]+:[^\s"<>]+)>
3551	<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/
3552	<(app)\((\?[a-z][a-z]*)\s*,\s*(\?[a-z][a-z]*)\)>
3553	</?(?:b|em|i)>
3554	</?a.*?>
3555	</?pre.*?>
3556	</?u>
3557	</[<>a-zA-Z]
3558	</[a-z]*>
3559	</p>
3560	<<<(-?\d+?)>>>
3561	<ErrorCode>(.+)</ErrorCode>
3562	<STREAM APP="(http://.*)" FULLPATH="/?(/.*\.flv\?[^"]*)"
3563	<TestThread\(.*, initial\)>
3564	<Timeout>(.+)</Timeout>
3565	<WSSID>(.+)</WSSID>
3566	<[^<]+?>
3567	<[^>]+>|[^\s<]+
3568	<[a-zA-Z][-_.:a-zA-Z0-9]*\s*(\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)(\s*=\s*(\\'[^\\']*\\'|"[^"]*"|[-a-zA-Z0-9./,:;+*%?!&$\(\)_#=~@][][\-a-zA-Z0-9./,:;+*%?!&$\(\)_#=~\\'"@]*(?=[\s>/<])))?)*\s*/?\s*(?=[<>])
3569	<[a-zA-Z][a-zA-Z0-9]*/
3570	<\?xml\n            (   # strict ordering is reqd but we\'ll be liberal here\n                \s+version=[\'"](?P<ver>.*?)[\'"]\n            |   \s+encoding=[\'"](?P<enc>.*?)[\'"]\n            )+\n            .*? # other possible junk\n            \s*\?>\n        
3571	<a href="#">(.*)</a><span class="emaillink js-hidden">(.*?)<span class="i">null</span>(.*)</span>
3572	<a href="#"><span class="emaillink">(.*?)<span class="i">null</span>(.*)</span></a><span class="emaillink js-hidden">(.*?)<span class="i">null</span>(.*)</span>
3573	<a href="([^"]*)"[^>]* id="lookup_id_defendant0"
3574	<a href="([^"]*)"[^>]* id="lookup_id_defendant1"
3575	<a href="function\..*?\.html">(.*?)</a>
3576	<a.*?>(.+)</a>
3577	<a[^>]*\shref
3578	<b title="(.*?)">
3579	<b>Added:</b> (\d{4}-\d\d-\d\d \d\d:\d\d:\d\d)
3580	<body.*?>
3581	<br[^>]*>
3582	<code>(.*)</code><description>(.*)</description>
3583	<div class=\'lyricbox\'><span style="padding:1em"><a href="/Category:Instrumental" title="Instrumental">
3584	<form action="(http://fileshare.+?)"
3585	<form(.*)name="login"(.*)</form>
3586	<graphic.*passwd=.*>
3587	<h2 class="me">(.+?)</h2>.*?<span class="pron">(.+?)</span>.*?<span class="pg">(.+?)</span>.*?<td>(.+?)</td>
3588	<h2 class="ti-5"><a href="http://video\.yahoo\.com/(people|profile)/[0-9]+" beacon=".*">(.*)</a></h2>
3589	<h3>ERROR: .*?</h3>
3590	<id>([^<]+)</id>
3591	<img class=thumbnail-img (?:.* )?src=(http.*)>
3592	<img.*?src="(.+?(?:\.png|\.jpg))".*?>
3593	<link rel="image_src" href="(.*)" />
3594	<link rel="pingback" href="([^"]+)" ?/?>
3595	<link rel="video_src" href=".*\?file=([^"]+)" />
3596	<map id="(.*?)"
3597	<meta name="description" content="(.*)" />
3598	<meta name="description" content="(.*)"(?:\s*/)?>
3599	<meta name="title" content="(.*)" />
3600	<meta name="video_height" content="([0-9]+)" />
3601	<meta name="video_width" content="([0-9]+)" />
3602	<meta[^>]*content\s*=\s*[\'"]?text/html;\s*charset\s*=\s*([^ \'">]+)\s*[\'"]?[^>]*>
3603	<noscript>.*?</noscript>
3604	<param([^<>]+)>
3605	<pre>.*?</pre>
3606	<replaceable>[^<]+</replaceable>
3607	<revision>[a-zA-Z0-9\.\-\_]+</revision>
3608	<span class="boldface">(.+?)</span>
3609	<span class="ital-inline">(.+?)</span>
3610	<span id=short-desc-content>([^<]*)</span>
3611	<td style="text-align: right;">[0-9]{1,}</td>
3612	<title>(.*) video by (.*) - Photobucket</title>
3613	<title>(.*?) Functions</title>
3614	<title>(.*?)<\/title>
3615	<title>(.+?) - Wikipedia, the free encyclopedia</title>
3616	<title>Bug (?P<bug_id>\d+) Submitted</title>
3617	<tt class="[\w+]"></tt>
3618	=...=
3619	==END TEST==
3620	=\s*"(.*)"
3621	>.+?:
3622	>[ \r\n]+<
3623	@"([^"]+)"
3624	@%\(([a-zA-Z][a-zA-Z0-9_-]*)\)s
3625	@((?:\w|-)*)(.*)
3626	@([^\'"\s]+)
3627	@([a-zA-Z0-9_][a-zA-Z0-9_]*)\.route
3628	@(\w+)
3629	@/([^/\\]*(?:\\.[^/\\]*)*)*/[a-z]*(?ms)
3630	@@VERSION(>|>=|!=)(\d.*)@@(.*)
3631	@@VERSION>(.*)@@(.*)
3632	@\w+
3633	@\w+( [^{}:\n]+)?:
3634	@arches=
3635	@dists=
3636	@import url\((?P<filename>.*)\)
3637	AbstractBadgeImpl$
3638	Allocation:\s+(\S+.*)
3639	Audio Files
3640	Available subcommands:
3641	B
3642	Backing store path:\s+(/+.+)
3643	BadgeImpl
3644	Bill Docket
3645	Bill Name:\s+([H|S]F\d+)
3646	Bill Status
3647	Bill Text
3648	BillID=(\d*)
3649	BuildID\s*=\s*"(\d{10})"
3650	CONSTRAINT (\w+) UNIQUE \(([^\)]+)\)
3651	CPU Affinity: +[-y]+
3652	CPU\d+:
3653	CPU\s+.*
3654	Capacity:\s+(\S+.*)
3655	CoSponsor
3656	Components\.[a-zA-Z]
3657	Components\.classes
3658	Components\.interfaces
3659	Components\.manager
3660	Components\.results
3661	Components\.utils
3662	DEFAULT
3663	DISK_CHANGE_SIZE
3664	DOCTYPE|xml
3665	DRIVER_PATH
3666	Debian
3667	Disk*.(\d+)\s+Offline
3668	District (\d+)
3669	District:
3670	Duration: (\d{2}):(\d{2}):(\d{2}.\d{2}),
3671	ERROR FAIL
3672	ERROR TODO WORKED
3673	EXAMPLE
3674	Enforcing
3675	ErrorReturnCode_(\d+)
3676	Existing quips:
3677	FAIL -
3678	FOREIGN KEY \((.*?)\) REFERENCES (?:(.*?)\.)?(.*?)\((.*?)\)
3679	FOREIGN KEY \((.*?)\) REFERENCES (?:(.*?)\.)?(.*?)\((.*?)\)[\s]?(MATCH (FULL|PARTIAL|SIMPLE)+)?[\s]?(ON UPDATE (CASCADE|RESTRICT|NO ACTION|SET NULL|SET DEFAULT)+)?[\s]?(ON DELETE (CASCADE|RESTRICT|NO ACTION|SET NULL|SET DEFAULT)+)?[\s]?(DEFERRABLE|NOT DEFERRABLE)?[\s]?(INITIALLY (DEFERRED|IMMEDIATE)+)?
3680	Fedora
3681	Fennec/([\d.]+)
3682	Files:\n(  .+\n)+
3683	FlashCopy Mapping, id \[([0-9]+)\], successfully created
3684	Forks/Queues \((?P<descendants>\d+)\)
3685	G_CONST_RETURN |const 
3686	HFS\s+(.+)
3687	HOSTNAME=(.*)
3688	HTTP/(\d+).(\d+)
3689	HTTP/(\d\.\d)\s+(\d+)\s+(.*)$
3690	HTTP/1.[0-9]+ 200 OK
3691	Host:\s+(\w+)\s+Channel:\s+(\d+)\s+Id:\s+(\d+)\s+Lun:\s+(\d+)\n\s+Vendor:\s+([a-zA-Z0-9_-]+)\s+Model: 
3692	Host:\s+(\w+)\s+Channel:\s+(\d+)\s+Id:\s+(\d+)\s+Lun:\s+(\d+)\n\s+Vendor:\s+([a-zA-Z0-9_-]+)\s+Model:.*\n.*Type:\s+([a-zA-Z0-9_-]+)
3693	INFO PASS
3694	INPUT *(.*\.aux)
3695	In the (House|Senate)
3696	Index: 
3697	Input #0, ([\w,]+)?, from
3698	Interim result: *(\S+)
3699	KAthJax-[0-9a-f]{32}
3700	LC_ALL.[^\s]\s
3701	LL_CHANNEL\s=\s"(.+)";\s*$
3702	LR Number:
3703	LUN
3704	Last Changed Rev: (\d+)
3705	LayoutTests/platform/(?P<platform>[^/]+)/
3706	Line (?P<line>\d+),\s*E:(?P<errnum>\d+):\s*(?P<message>.+)
3707	Line:(?P<line>\d+)\s*(?P<message>.+)
3708	Linux version ([0-9.]+-[^ ]+)
3709	Loaded: loaded
3710	MIGRATE
3711	MemFree:\s+(.\d+)\s+(\w+)
3712	MemTotal:\s+(\d+)\s+kB
3713	Name:\s+(\S+)
3714	No bootable device.
3715	No open
3716	No such file
3717	Node\s+
3718	Node\s+.*?zone\s+
3719	Node\s+.*?zone\s+\s+([\s\d]+)
3720	None(?=\s|\]|,)
3721	Number of files successfully Verified: ([0-9]*)
3722	OUTPUT *(.*)
3723	Output written on (.+) \(
3724	PATH.[^\s]+\s
3725	Party: 
3726	Please choose another session
3727	Prefiled
3728	ProductVersion:\s+([0-9]+)\.([0-9]+)\.([0-9]+)
3729	QEMU_AUDIO_DRV.[^\s]+\s
3730	QEMU_PID
3731	Red Hat
3732	Report time: (.*)
3733	Resigned
3734	Return code
3735	Revision: ([0-9]+)
3736	Roll Calls
3737	S(\s+0.0+){2}.*vhost-\d+[\d|+]
3738	SNIPPET::([A-Za-z0-9_\-\/\.]+)
3739	SUSE
3740	Scheduler
3741	Skipping \d+ byte
3742	Status
3743	Status: (\S+)
3744	Stream #0.*?(\d+)x(\d+)
3745	Subversion Revision:
3746	TIME
3747	TOTEM_INFO_DURATION=(\d+)
3748	TOTEM_INFO_VIDEO_CODEC=([\w]+)
3749	Target\s+(\d+)
3750	This is file for test of copy-in.
3751	This is file for test of copy-out.
3752	This is file for test of tar-in.
3753	This is file for test of tar-out.
3754	This is file for test_formatted_disk.
3755	This is file for test_formatted_part.
3756	Tools and libraries NOT available at test time:\n\s*(.*?)\n
3757	Total
3758	Type:\s+(\S+)
3759	UNEXPECTED
3760	UNSEEN (\d+)
3761	URL: (\S+)
3762	Ubuntu
3763	Usage:
3764	Username="(\w+)"
3765	UsernameToken Username="([^"]+)", PasswordDigest="([^"]+)", Nonce="([^"]+)", Created="([^"]+)"
3766	VERSION\s*=\s*"([^"]+)"
3767	Vector<(.+)>
3768	Versi&oacute;n (.+) ([0-9]+).([0-9])+ megabytes
3769	Versi.+n (.+) ([0-9]+).([0-9])+ megabytes
3770	Virtual Disk, id \[([0-9]+)\], successfully created
3771	Volume\s+\d+\s+(\w).*?(\d+)\s+\w+
3772	WINUTILS
3773	WIN_UTIL
3774	WIN_UTILS
3775	WIN_VIRTIO
3776	YEAS -?\s?(\d+)(.*)NAYS -?\s?(\d+)(.*)ABSENT( OR NOT VOTING)? -?\s?(\d+)(.*)
3777	[ ,]
3778	[ -]
3779	[ -~]*$
3780	[ \t:]+
3781	[ \t]*
3782	[ \t]*\.[ \t]*
3783	[ ]*(?P<arg>.*?=(?:(?:[^"\']*?)|(?:"[^"]*")|(?:\'[^\']*\')))[ ]*[,\r\n]
3784	[ _]
3785	["!|@]
3786	["\'](.+)["\']\s*:\s*(.*)
3787	["\'](.+-div)[\'"]
3788	[$><;[{~`|&()]
3789	[$][{]\d+:([^}]+)[}]
3790	[&<>\"\n\r\x80-\xff]+
3791	[&<]|]]>
3792	[&?]acl($|=|&)
3793	[&?]location($|=|&)
3794	[&?]logging($|=|&)
3795	[&?]requestPayment($|=|&)
3796	[&?]torrent($|=|&)
3797	[&?]versionId=([^&]+)($|=|&)
3798	[&?]versioning($|=|&)
3799	[&?]versions($|=|&)
3800	[+-]?\d+
3801	[,\s]+
3802	[-+]?\d+
3803	[-\s]
3804	[. -]
3805	[/*?]|\[[^]]*/[^]]*\]
3806	[/,-]
3807	[/]+
3808	[0-9]*$
3809	[0-9]+(?:\.[0-9]+){3}
3810	[0-9]+\s+[+-][0-9]+
3811	[0-9][} ]*$
3812	[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
3813	[1-9][0-9]*
3814	[:"<>|?]
3815	[:;, ] *
3816	[:;,] *
3817	[:@/]
3818	[<>=]
3819	[=?\x7f-\xff]
3820	[=\x7f-\xff]
3821	[@]
3822	[A-F0-9]{2}:[A-F0-9]{2}:[A-F0-9]{2}:[A-F0-9]{2}:[A-F:0-9]{2}:[A-F:0-9]{2}
3823	[A-Z0-9$-_.]{3,20}
3824	[A-Z]*_API 
3825	[A-Z]+
3826	[A-Z]\w*(?:::[A-Z]\w*)*$
3827	[A-Z_][a-zA-Z0-9]+$
3828	[A-Za-z]
3829	[A-Za-z_][A-Za-z0-9_]*$
3830	[A-Za-z_][A-Za-z0-9_]*
3831	[EWN]\d{3}
3832	[N|n]ame
3833	[Vv]irtio block
3834	[Vv]irtio memory
3835	[Vv]irtio network
3836	[\'"\\]
3837	[\*\?]
3838	[\.\-\ ]
3839	[\.\-\/\!\@\#\$\%\^\&\*\(\)\+\-"\'\,\;\:\[\]\{\}\<\>\=\_]
3840	[\.\-\/\_]
3841	[\.\-\/]
3842	[\.\-\_]
3843	[\.\-_ ]?[Ee](\d+)
3844	[\._-]
3845	[\?#&](?P<name>[^&=]+)=(?P<value>[^&=]+)
3846	[\D]*(\d+)\w*$
3847	[\W_]
3848	[\[\]\*\?]
3849	[\\"]
3850	[\\/\*]
3851	[\\]
3852	[\d\.]+
3853	[\n\r]{0,1}$
3854	[\r\n\t]
3855	[\s\{\}\[\]\(\)\= ,:]
3856	[\s\{\}\[\]\(\)\=]
3857	[\t !"#$%&\\'()*\-/<=>?@\[\\\]^_`{|},.]+
3858	[\t\b\r\f#]
3859	[\w ]+
3860	[\n]+
3861	[\r\n]
3862	[\x00-\x1f\x7f()<>@,;:\[\]={} \t\\"]
3863	[\x00-\x1f\x7f-\xff]
3864	[\x01-\x1f]
3865	[\x02\x1f\x16\x0f\x03]
3866	[\x7f-\xff]
3867	[^ \t]
3868	[^%]+%[^.]+[.](compile)
3869	[^%]+%[^.]+[.](link|archive)
3870	[^%]+%testing[.](capture-output)
3871	[^%]+%testing[.](expect-failure|expect-success)
3872	[^-._\w]+$
3873	[^/\\,{]\*\*|\*\*[^/\\,}]
3874	[^0-9:\.]
3875	[^0-9A-Za-z]
3876	[^A-Z]
3877	[^A-Za-z0-9]?(?:file|source)=(http[^\\'"&]*)
3878	[^V_]
3879	[^[]+\[(\d+/[A-Za-z]+/\d+):[^\d]*
3880	[^\'"]*
3881	[^\w.-]+
3882	[^\w\-\.\/]+
3883	[^\w\.\- ]
3884	[^\w\d_]
3885	[^_\w]
3886	[^a-zA-Z0-9.]
3887	[^a-zA-Z0-9\_\.]
3888	[^aeiouy]*[aeiouy]+[^aeiouy](\w*)
3889	[_\s]+
3890	[a-f0-9]+$
3891	[a-fA-F0-9]{1,4}
3892	[a-z,_]*_u:[a-z,_]*_r:([a-z,_]*_t)(?:\:[s,\-,0-9,:[c,\,,0-9]*]*)?
3893	[a-z,_]*_u:[a-z,_]*_r:[a-z,_]*_t(?:\:[s,\-,0-9,:[c,\,,0-9]*]*)?
3894	[a-zA-Z0-9]+\.[0-9]+
3895	[a-zA-Z0-9_-]+
3896	[a-zA-Z][a-zA-Z0-9]*
3897	[a-zA-Z]\w*$
3898	[a-zA-Z_]\w*$
3899	[a-z]::[^=]|:[a-z]+:|`|\.\.\s*\w+:
3900	[a-z][A-Z]{3}([a-z])[A-Z]{3}[a-z]
3901	[a-z_]
3902	[a-z_][a-z0-9_]{2,30}$
3903	[aeiou]
3904	[aeiouy]
3905	[aeiouy].
3906	[filesystem|fs] type
3907	[gG]
3908	[infINF]
3909	[kK]
3910	[mM]
3911	[uU][rR]?[\\'\"]
3912	[vhs]d[a-z]*[\d]+
3913	[x-](\d+)
3914	[xh]vc0
3915	[{ ]*[-+0-9]
3916	\$([^\$]+)\$
3917	\$?(\d+):\$?(\d+)
3918	\$VersionInfo\$
3919	\$\((\w+)\)
3920	\$\{(.*)\}
3921	\$\{(.+?)\}
3922	\%(-?\w+)
3923	\("id", "([0-9]+)"\);
3924	\("vid", "([0-9]+)"\);
3925	\((.*)\)$
3926	\((.*?(\d+))\)
3927	\((H|S)\)
3928	\(.*\)$
3929	\(CVS\) ([\d\.]+) 
3930	\([^)]+\)\s*(([A-Za-z0-9_][A-Za-z0-9_]*))
3931	\(\s*(?P<dims>(?:\d+,\s*)+\s*\d+)\s*\)\s*
3932	\(live[^\)]*\)
3933	\(used in test (.+)\)
3934	\(used in test .+\) 
3935	\*(\S+)
3936	\*\*([0-9]+)
3937	\*\*\* Error compiling (?:.*)
3938	\*\S
3939	\+(\w+)
3940	\-
3941	\-\:(?P<line>\d+): (?P<error>.+)
3942	\-|\s|T|t|:|\.|Z
3943	\. \. \.
3944	\.(?!\s)(\D)
3945	\.(\d+)$
3946	\.(js|java)(?:\.in)?$
3947	\.1$
3948	\.[0-9]+
3949	\.\. (.+?)::(.*)$
3950	\.\.*
3951	\.\.\.
3952	\.\.\.+
3953	\.\.|^\./|\.$|/\./|^-
3954	\.\w
3955	\.repeat\d+
3956	\/(?P<icon>\w+)
3957	\/\*[\s\S]*?\*\/
3958	\/\/[^\n\r]*
3959	\:
3960	\<(\d+)\>(.*)
3961	\<\!\-\-\#\s?[A-z0-9_-]*\s?\:s?[A-z0-9\s_-]*\s?\-\-\>
3962	\?(.*)
3963	\@(\w+)
3964	\A#!.*(tclsh|wish|expect).*$
3965	\A#!.*/\bbash\b$
3966	\A#!.*/\bsh\b$
3967	\A#!.*^exec [^\r\n|\n|\r]*?(tclsh|wish|expect)
3968	\A#!.*node.*$
3969	\A#!.*perl.*$
3970	\A#!.*php.*$
3971	\A#!.*python(?!3).*$
3972	\A#!.*python3.*$
3973	\A#!.*ruby.*$
3974	\A@charset "(?P<encoding>[\w-]+)";
3975	\A[ \t]*\Z
3976	\A\d+(l|L)?\Z
3977	\A\s*\Z
3978	\S* *\d*-\d*-\d* \d*:\d*:\d* [+-]\d* \w*
3979	\S*
3980	\S+
3981	\S+\s\((\d+)\s\S+\)
3982	\S\s
3983	\W%\W
3984	\W*File "(.*)", line ([0-9]+)
3985	\W+$
3986	\W_\(
3987	\W|^(?=\d)
3988	\[(?P<pbp>.+)\] (?P<error>.+?) at line (?P<line>\d+), column (?P<column>\d+).+?
3989	\[(?P<section>.*)\]
3990	\[([^:]+?)\]
3991	\[(\w+)\] (.*?) ::.*::.*::\s*(.*)
3992	\[.* test environment .*\n
3993	\[.*?\]
3994	\[.*\d+ tests.*\n
3995	\[.+\] (.+)
3996	\[0\:0\] -A .* -j ACCEPT -p icmp -m icmp --icmp-type 8 -s 192.168.11.0/24
3997	\[0\:0\] -A .* -j ACCEPT -p icmp -s 192.168.11.0/24
3998	\[0\:0\] -A .* -j ACCEPT -p tcp --dport 80:81 -s 192.168.10.0/24
3999	\[0\:0\] -A .* -j ACCEPT -p tcp -m multiport --dports 80:81 -s 192.168.10.0/24
4000	\[0\:0\] -A .* -j ACCEPT -p udp --dport 200:299 -s 192.168.99.0/24
4001	\[=+\] \d+ tests .* ran.*
4002	\[\[([^\]^!][^\]]*)\]\]
4003	\[\[\!\!([^\]]*)\]\]
4004	\[\d+ depth=(-?\d+)\]
4005	\[\d\]\s+=
4006	\[_POSITION\]
4007	\[tag:\s*([\S]+)\s*]
4008	\[title:(.+?)\]
4009	\[user:([^\]]+?)\]
4010	\\"
4011	\\(.*?) (.*)
4012	\\([.(){}[\]"\\])
4013	\\(\\'|\"|\\|[abfnrtv]|x.{0,2}|[0-7]{1,3}|u[0-9a-fA-F]{0,4}|U[0-9a-fA-F]{0,8}|N\{.+?\})
4014	\\(t|n|r|"|\\)
4015	\\-
4016	\\?(loc)\(.*?\)
4017	\\[\s.-]
4018	\\[^ntrab]
4019	\\[ntrab]
4020	\\\$
4021	\\\.
4022	\\\?([^\.]+)\.(.*)
4023	\\`
4024	\\u([0-9A-F]{4})|\\U([0-9A-F]{8})
4025	\\u.{4}|\\.
4026	\\usepackage(\[.*?\])?{(.*?)}
4027	\\x([0-9a-fA-F]{2}|[0-9a-fA-F])
4028	\^@
4029	\^phoneCallContactId\^=\^urn:ace:(?P<identifier>.*)
4030	\b(([\w-]+://?|www[.])[^\s()<>]+(?:\([\w\d]+\)|([^[:punct:]\s]|/)))
4031	\b((http|ftp)://[^ \t\n\r\f\v<\'"]+|RFC[- ]?(\d+)|PEP[- ]?(\d+))
4032	\b(public|private|protected)\b
4033	\b400\b
4034	\bKVM_TEST_LOGGING\b
4035	\b\d+\b
4036	\b\d{4,6}\b
4037	\bcsc\b
4038	\bdef\s+\w+$
4039	\bexpand\b
4040	\bexpires=([^;]+)(?i)
4041	\bfloat\b
4042	\binf\b
4043	\bminf\b
4044	\bminus\b
4045	\bproduct\b
4046	\bratsimp\b
4047	\bsec\b
4048	\bsum\b
4049	\btrigexpand
4050	\d*(\S)
4051	\d+ failur.*\d+ librar
4052	\d+(\.)?\d*[eE]-?\d+
4053	\d+(\.\d*)?
4054	\d+-\d+-\d+([\s|T|t]\d+:\d+:\d+.\d+(Z|(\s?[\-|\+]\d+:\d+)))?
4055	\d+: (eth\d+):
4056	\d+\.\d*(?!\d*d)
4057	\d+\.\d+\.\d+\.\d+
4058	\d+\|[^|]+(?:\|[^|]+)*
4059	\d\.htm$
4060	\d\d-[a-zA-Z]{3,3}-\d\d\d\d \d\d:\d\d
4061	\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\dZ
4062	\d{1,2}/\d{1,2}/\d{4,4}
4063	\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}
4064	\d{2}/\d{2}/\d{4}
4065	\d{4}-\d{2}-\d{2}
4066	\n +
4067	\n(.+\S+)\ +\S+
4068	\n(.+\S+)\ +\S+\ +(.+\S+)
4069	\n+$
4070	\n+|\r+|\f+
4071	\n[\t ]*$
4072	\n[\t ]*\n[\t ]*$
4073	\n\r?[\t ]*$
4074	\n\s*(\n|$).*
4075	\n\s*\n*
4076	\n{2,}\Z
4077	\n{3,}
4078	\s*#(.*)$
4079	\s*#*\s*pylint:(.*)
4080	\s*#+.*coding[:=]\s*([-\w.]+)
4081	\s*#.*$
4082	\s*#define\s+([a-zA-Z][a-zA-Z_0-9]*)\s+([a-zA-Z_0-9]+)
4083	\s*(<=?|>=?|===?|!=|~=)\s*((\w|[-.*_!+])+)
4084	\s*(?P<name>.+?)\s*=\s*(?P<module>[\w.]+)\s*(:\s*(?P<attr>[\w.]+))?\s*(?P<extras>\[.*\])?\s*$
4085	\s*([-\+])
4086	\s*([^=:]+)(=|:)\s*(.*)
4087	\s*([^\s\(\)"\\'=,\[\]/\?]+)\s*
4088	\s*([^\s\(\)"\\'\-=,\[\]/\?]*)\s*\[
4089	\s*([a-zA-Z_][-:.a-zA-Z_0-9]*)[$]?(\s*=\s*(\\'[^\\']*\\'|"[^"]*"|[][\-a-zA-Z0-9./,:;+*%?!&$\(\)_#=~\\'"@]*))?
4090	\s*(\S.*?\S)\s*=\s*(.*)
4091	\s*(\d+)  (.*)$
4092	\s*(\w*(\s*\w+)+)\s*<\s*(\S*(\s*\S+)+)\S*>
4093	\s*(\w*)\s*::
4094	\s*,\s
4095	\s*,\s*|\s+
4096	\s*-
4097	\s*->\s*
4098	\s*-\s*at\s*-\s*
4099	\s*-{10}
4100	\s*.*#\s*.*define\s.*SQLITE_VERSION\W*"(.*)"
4101	\s*/\s*
4102	\s*:?\s*([\w\.]+\s*,?\s*)*
4103	\s*<((?:\w|-)*)>
4104	\s*</table>
4105	\s*<AccessControlList>\s*<Entries>\s*<Entry>\s*<Scope type="GroupById"><ID>[0-9a-fA-F]+</ID></Scope>\s*<Permission>FULL_CONTROL</Permission>\s*</Entry>\s*<Entry>\s*<Scope type="GroupById"><ID>[0-9a-fA-F]+</ID></Scope>\s*<Permission>FULL_CONTROL</Permission>\s*</Entry>\s*<Entry>\s*<Scope type="GroupById"><ID>[0-9a-fA-F]+</ID></Scope>\s*<Permission>READ</Permission></Entry>\s*</Entries>\s*</AccessControlList>\s*
4106	\s*<entry><token>([^<]+)</token></entry>\s*<entry>([^<]+)</entry>
4107	\s*<entry><type>([^<]+)</></entry>
4108	\s*<table id="datatype-pseudotypes-table">
4109	\s*@((?:\w|-)*):
4110	\s*[^\s]+\s*=
4111	\s*\((\d+)\)\s*
4112	\s*\(.*\)\s*$
4113	\s*\*\/\s*$
4114	\s*\*\s*G_CONST_RETURN\s*\*\s*
4115	\s*\[.*$
4116	\s*\[auto-props\]
4117	\s*\{\s*
4118	\s*\}\s*$
4119	\s*\}\s*
4120	\s*\n      (?P<mnemonic>JMP|JRP|LDN|STOP|STO|SUB|CMP)  \n       \s* \n      (?P<arg>\d+)        # numeric argument
4121	\s*\n\s*\n\s*
4122	\s*]\s*
4123	\s*__version__\s*=\s*(("([^"]|\\")*"|\'([^\']|\\\')*\'))
4124	\s*import\s+(\S+)\.([^\s.]+)\s+as\s+(\S+)(\s+for\s+(\S+))?
4125	\s*modtime:\s*(.*)
4126	\s*set\s+default\s*=\s*"+(\d+)"+
4127	\s*{
4128	\s+(.*?\.inf)
4129	\s+([A-Z])\s+.*CDFS.*\n
4130	\s+([a-z0-9-]+)\s+
4131	\s+([a-zA-Z]+)\s+
4132	\s+(\S+\s*)$
4133	\s+\Z
4134	\s+at\s(?:new\s)?(?P<func>.+)\s\((?P<file>[^:]+):?(?P<row>\d+)?:?(?P<col>\d+)?\)
4135	\s+at\s(?:new\s)?(?P<func>.+)\s\((?P<file>[^\)]+)\)
4136	\s+at\s(?P<file>[^:]+):?(?P<row>\d+)?:?(?P<col>\d+)?
4137	\s+inet6\s+([0-9a-f:]+)/\d+\s+scope\s+link
4138	\s+|(?:\s*,\s*)
4139	\s-drive\s[^\s]+
4140	\s.*
4141	\s?["\']([a-zA-Z_"\'\s\d]+)["\']\s+tset
4142	\smarkdown(=[\\'"]?[^> ]*[\\'"]?)?
4143	\s|,
4144	\t(\S*)\s+(\S*.*)
4145	\t+
4146	\w([A-Z])\.
4147	\w+(Class|Iface)
4148	\w+@(\w+)(\.\w+)*
4149	\w\w*\d\d\d\d\d.htm
4150	\w{12}
4151	\w{2}:\s*"(.*?)"
4152	\x1b\[[^m]*m
4153	\xf6
4154	\{([-\w]+)\}
4155	\{(http:\/\/[A-Za-z0-9_\.\/]+\/nzb)\}file
4156	\{\%[ \t]+(block\b.*?)\%\}
4157	\{\%[ \t]+(load\b.*?)\%\}
4158	\{\%[ \t]+\b(block|if)\b.*?\%\}
4159	\|(.*)\|
4160	\|(\S+)\|
4161	\}
4162	\n                \'.*?(?<!\\)\' |    # single quoted strings or\n                ".*?(?<!\\)" |    # double quoted strings or\n                \w+          |    # identifier\n                \S                # other characters\n                
4163	\n            ^\n            \s*\n            (={1,5})\n            \s*\n            (?P<name>(?:!=+|\n                        [^=!]+|\n                        !)+?\n            )\n            \s*\n            \1\n            (?:\s|\#|$)\n         
4164	\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n            (?:\n           [ ]*  \.\.\. .*)*   # PS2 lines\n          \n?)\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*>>>)  # Not a line starting with PS1\n                     .*$\n?       # But any other line\n                  )*)\n        
4165	\n        (<meta\n        (?:\s+[\w-]+\s*=\s*(?:".*?"|\'.*?\'))+  # attributes\n        \s*/?>)\n        
4166	\n        <!DOCTYPE\n        \s+(?P<name>[a-zA-Z_:][\w:.-]*)\n        \s+(?:\n            SYSTEM\s+(["\'])(?P<system_id_a>.*?)\2\n            |\n            PUBLIC\n            \s+(["\'])(?P<public_id_b>.*?)\4\n            # HTML 3.2 and 2.0 doctypes don\'t include a system-id.\n            (?:\s+(["\'])(?P<system_id_b>.*?)\6)?\n        )\n        (\s*\[.*?\])?        \n        \s*>\n        
4167	\n        ^\n        \s*\n        (?P<operator>(==|!=|<=|>=|<|>))\n        \s*\n        (?P<version>\n            [^\s]* # We just match everything, except for whitespace since this\n                   # is a "legacy" specifier and the version string can be just\n                   # about anything.\n        )\n        \s*\n        $\n        
4168	\n      <\n      (?:mailto:)?\n      (\n         [-.\w]+\n         \@\n         [-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+\n      )\n      >
4169	\n    (\n)?                            # leading line = $1\n    (^[ \t]*)                        # leading whitespace = $2\n    ([*+-]|\d+[.]) [ \t]+            # list marker = $3\n    ((?:.+?)                         # list item text = $4\n    (\n{1,2}))\n    (?= \n* (\Z | \2 ([*+-]|\d+[.]) [ \t]+))\n    
4170	\n    (`+)            # $1 = Opening run of `\n    (.+?)           # $2 = The code block\n    (?<!`)\n    \1              # Matching closer\n    (?!`)\n    
4171	\n    ^\n    [ \t]*\n    (?: if\n    |   for\n    |   while\n    |   else\n    |   def\n    |   return\n    |   assert\n    |   break\n    |   class\n    |   continue\n    |   elif\n    |   try\n    |   except\n    |   raise\n    |   import\n    )\n    \b\n
4172	\n([ \t]*)$
4173	\n.*cloud-stack-version=.*
4174	\nVersion (.+), ([0-9]+).([0-9])+ MBs
4175	\n[ \t]*
4176	\n[ ]+\n
4177	\n\s*\n
4178	\r*\n
4179	\r?\n\r?\n
4180	\r\n|\r+|\n
4181	\r|\n|\r\n
4182	\t+
4183	\x01
4184	\x03[0-9]{1,2}(,[0-9]{1,2})?
4185	\x1b
4186	\x1b\[(\d\d;){0,2}\d\dm
4187	\x1b\]((?:.|;)*?)(\x07)
4188	\x1b]0;(.*?)\x07
4189	^     Page [1-9][0-9]*[ \t]+\|^.*Last change:.*[1-9][0-9]*\n
4190	^ (.*)$
4191	^ *(0x[0-9a-f]+) +0x([0-9a-f]+): +eax=0x([0-9a-f]+) ebx=0x([0-9a-f]+) ecx=0x([0-9a-f]+) edx=0x([0-9a-f]+)$
4192	^ *([0-9]+)
4193	^"
4194	^"(.*)"$
4195	^### 
4196	^#(ifndef|define|endif\s*//)\s*[\w_]+\s*$
4197	^#\s*next_offset=(\S+)\s*$
4198	^#format \w*\n
4199	^#include\s
4200	^%Q.(.*).$
4201	^%q.(.*).$
4202	^
4203	^(%feature\S+\s+\S+\s*?)"\s+(\S)
4204	^((?:\(\S+\))?(?:|sh\S*?|\w+\S+[@:]\S+(?:\s+\S+)?|\[\S+[@:][^\n]+\].+)[$#%])(.*\n?)
4205	^((?P<retval>[^=]+?)\s*=|class)?\s*(?P<head>[\w\.]+\s?\(.*?\))\s*(?P<sep>[:<>=-]*)\s*(?P<tail>.*)$
4206	^(([^:/?#]+):)?(//([^/?#]*):([^/?#]*))?
4207	^((http[s]?):\/)#?\/?([^:\/\s]+)((\/[\w\-\.]+)*\/)*([\w\-\.]+[^#?\s]+)
4208	^((unit)?test.*|smoketest)\.py$
4209	^((x?v|s)d)
4210	^()( +)
4211	^(.*) ?\[([^ ]*) \+(0x[0-9A-F]{1,8})\](.*)$
4212	^(.*)(ed|ing)$
4213	^(.*)\*(\d+)\*$
4214	^(.*)\.(.*)\.(\d+)\.(\d+)\.(\d+)$
4215	^(.*)\.(diff|patch)$
4216	^(.*)\.stgit$
4217	^(.*)\[(zero|one|two|few|many|other)\]$
4218	^(.*)\s*<(.*)>\s*$
4219	^(.*)\s*<(.*)>\s*(.*)\s*$
4220	^(.*)\s*\((.*)\)\s*$
4221	^(.*)\|(-?[0-9]+)$
4222	^(.*?)(?:-dev|-\d.*)
4223	^(.*?)([\[\*\?].*)$
4224	^(.*?)\s*<(.*)>$
4225	^(.*[/#])([^/#]+)$
4226	^(.+)&sig=(\w{32})$
4227	^(.+)<(.+)>(.*)$
4228	^(.+?)(\d*)$
4229	^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$
4230	^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$
4231	^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$
4232	^(.+?)(s|t)(ion)$
4233	^(.+?)[ \._\-][Ss]([0-9]+)((?:[\.\-_ ]?[Ee]\d+)+)[^\/]*$
4234	^(.+?)[ \._\-]\[?([0-9]+)((?:[x-]\d+)+)[^\/]*$
4235	^(.+?)[ \._\-]\[[Ss](\d+)\]((?:_\[[Ee]\d+\])+)[^\/]*$
4236	^(.+?)_(.+)$
4237	^(.+?)e$
4238	^(..[^\(:]+)?[\(:](\d+)[\):]:?\s*(.*)
4239	^(/\*.*?\*/\s*)
4240	^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
4241	^(<=|>=|<|>|!=|==)?\s*([^\s,]+)$
4242	^(<=|>=|<|>|!=|={2,3}|~=)?\s*([^\s,]+)$
4243	^(?:(\s*\(.*\)\s*)*:)
4244	^(?:852-?)?(\d{4})[-\.]?(\d{4})$
4245	^(?:\s*\.\.\s+automodapi::\s*)([A-Za-z0-9_.]+)\s*$((?:\n\s+:[a-zA-Z_\-]+:.*$)*)
4246	^(?:cb|callback|done|next|fn)$
4247	^(?:get|set)_(.*)$
4248	^(?:if |elif |else |for |py:)
4249	^(?:if |elif |for |def |inherit |default |py:)
4250	^(?P<date>\d{4}-\d{2}-\d{2})\s+(?P<name>.+?)\s+<(?P<email>[^<>]+)>$
4251	^(?P<filetype>.)(?P<perms>.{9})\s+(?P<nlinks>\d*)\s*(?P<owner>\S+)\s+(?P<group>\S+)\s+(?P<size>\d+)\s+(?P<date>...\s+\d+\s+[\d:]+)\s+(?P<filename>([^ ]|\\ )*?)( -> (?P<linktarget>[^\r]*))?\r?$
4252	^(?P<major>[0-9]+)\.(?P<minor>[0-9]+)\.(?P<patch>[0-9]+)(\-(?P<prerelease>[0-9A-Za-z]+(\.[0-9A-Za-z]+)*))?(\+(?P<build>[0-9A-Za-z]+(\.[0-9A-Za-z]+)*))?$
4253	^(?P<mark>\s*)\^$
4254	^(?P<menu_pk>[-\w]+)/items/(?P<menu_item_pk>[-\w]+)$
4255	^(?P<menu_pk>[-\w]+)/items/(?P<menu_item_pk>[-\w]+)/delete$
4256	^(?P<menu_pk>[-\w]+)/items/(?P<menu_item_pk>[-\w]+)/history$
4257	^(?P<menu_pk>[-\w]+)/items/(?P<menu_item_pk>[-\w]+)/move_down$
4258	^(?P<menu_pk>[-\w]+)/items/(?P<menu_item_pk>[-\w]+)/move_up$
4259	^(?P<message_id>[A-Z0-9]+): (?P<postfix_message>.*)
4260	^(?P<name>.*?)=(?P<value>.*)
4261	^(?P<path>.*\.java):(?P<line>\d+): (?P<warning>warning: )?(?:\[\w+\] )?(?P<error>.*)
4262	^(?P<type>[1-3])=(?P<count>\d+)$
4263	^(?P<x>[a-zA-Z]{1,2})(?P<y>\d+)$
4264	^(FF|GF)\((\d+)\)$
4265	^(I|E)/(stdout|stderr|GeckoConsole)\s*\(\s*\d+\):\s*(.*)$
4266	^(Mozilla.*(Gecko|KHTML|MSIE|Presto|Trident)|Opera).*$
4267	^(None or|optional) ([\w\.]+)$|^([\w\.]+) or None$
4268	^(PPC|Intel) Mac OS X
4269	^(Q|QQ)\<(.+)\>$
4270	^(Win|Linux|PPC Mac OS X)
4271	^(Win|PPC Mac OS X)
4272	^(Win|PPC Mac OS X|Linux(?! x86_64))
4273	^(X|A)$
4274	^(Y|X|A|N) ([\S ]+)$
4275	^(Z|ZZ|Q|QQ)\((.+)\)$
4276	^(Z|ZZ|Q|QQ)\[(.+)\]$
4277	^([ \|0-9-]*)(.*) ?\[([^ ]*) \+(0x[0-9A-F]{1,8})\](.*)$
4278	^([+-]) (.*)$
4279	^([+-])(\d{2}):?(\d{2})$
4280	^([-]+BEGIN CERTIFICATE[-]+[\r]*\n.*[\r]*^[-]+END CERTIFICATE[-]+)$
4281	^([0-7]{6}) ([a-z]+) ([0-9a-f]{40})\t(.*)$
4282	^([0-9]+)$
4283	^([0-9]+)((?:a|b|c|rc)[0-9]+)$
4284	^([0-9]{1,3}\.){0,3}[0-9]{1,3}(/[0-9]{1,2}){1}$
4285	^([0-9]{4})\.([0-9]+)\.([0-9]+)$
4286	^([0-9a-f]{40})\s+(\S+)$
4287	^([A-Z])([A-Z])
4288	^([A-Z].*?\.(?:\s|$))
4289	^([A-Z][^A-Z]*?\.\s)
4290	^([A-Z]\w+::[a-z0-9-]+)\s*:?(\s*\(.*\)\s*){0,2}\s*$
4291	^([A-Z]\w+:[a-z0-9-]+)\s*:?(\s*\(.*\)\s*){0,2}\s*$
4292	^([A-Za-z ]+):\s+(.+)$
4293	^([\w\.]+) \.\.\. \[([^\]]+)\]$
4294	^([\w\.]+)$
4295	^([^/]+)/([^/]+)$
4296	^([^: \t\n]+):([1-9][0-9]*):
4297	^([^:]*):([^@]*)@([^:]*):([^/]*)/([^/]*)/?(.*)$
4298	^([^:]*):([^@]*)@([^:]*):([^/]*)/([^/]*)/?(.*)
4299	^([^:]*):[^:]*$
4300	^([^<]*)<([^>]*)>\s+(\d+\s+[+-]\d{4})$
4301	^([^\t]*)\t\t
4302	^([a-zA-Z-]+\.[0-9]+)\.[0-9]+.log$
4303	^([a-zA-Z0-9_]+):( |$)
4304	^([a-zA-Z]:[^(]*)\(([0-9]+)\)
4305	^([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.*)$
4306	^([a-zA-Z_][a-zA-Z_0-9]*)(?:-([0-9]+))?$
4307	^([a-zA-Z_]\w*)(\.[a-zA-Z_]\w*)*$
4308	^([a-z]\w*)\s*:?(\s*\(.*\)\s*){0,2}\s*$
4309	^(\#{1,6})[ \t]*(.+?)[ \t]*\#*\n+
4310	^(\+2|\+{2})$
4311	^(\+[3-9]{1,}|\+{3,}|\+[1-9][0-9]+)$
4312	^(\-2|\-{2})$
4313	^(\-[3-9]{1,}|\-{3,}|\-[1-9][0-9]+)$
4314	^(\S+ \S+ \S+ \S+: )?(.*)$
4315	^(\S+) \(in ([^)]+)\) \((.+)\)$
4316	^(\S+):?
4317	^(\S+)\s+(\S+)\s+(\S+)\s+(\d+.\d+\s\S+)\s+(\d+.\d+.*)
4318	^(\S+)\s+\D*(\d+)
4319	^(\S.*?)??[=\-\(\$\\'\"][#>]
4320	^(\[.*?[Pp][Aa][Tt][Cc][Hh].*?\])?\s*(.*)$
4321	^(\d*)\.(\d*)\[(\d+)\]$
4322	^(\d+)L?:|^\((\d+)L?,
4323	^(\d+)\s+([+-]\d\d:?\d\d)$
4324	^(\d+\.\d+(\.\d+)*)((a|b|c|rc)(\d+))?(\.(post)(\d+))?(\.(dev)(\d+))?$
4325	^(\d+\.\d+)\.\d+(.*)
4326	^(\d\d)
4327	^(\s*#!("[^"]+"|\S+))\s+(.*)$
4328	^(\s*)(, | {2})((\s*(\w+)(\s+|::)\w+\s*.*?,?)+)\s*$
4329	^(\s*)<.+> 
4330	^(\s*template\s*<\s*.*?|\s*(private|public):\s*)$
4331	^(\s+(,|:\s+)?|struct\s+)(\w+)\s*<((\s*(typename\s+)?\w+\s*(=\s*.*|<(\s*\w+\s*,?)+>\s*)?,?)+)\s*>\s+((struct|class).*?)?$
4332	^(\s+\(c-name\s+)([^\s]+)(\s*\))$
4333	^(\s+\(copy-func\s+)(\w+)(.*)$
4334	^(\s+\(implements\s+)([^\s]+)(\s*\))$
4335	^(\s+\(in-module\s+)(\w+)(.*)$
4336	^(\s+\(of-object\s+)(\w+)(\s+\((\w+)\))?(.*)$
4337	^(\s+\(parent\s+)(\w+)(\s+\((\w+)\))?(.*)$
4338	^(\s+\(release-func\s+)(\w+)(.*)$
4339	^(\s+\(return-type\s+)([^\s]+)(\s*\))$
4340	^(\s+typedef\s+.*?;|\s*(private|public):\s*|\s*{\s*|\s*(\w|\d|,)+\s*)$
4341	^(\w*)
4342	^(\w+):\d+\s\((\d+).+$
4343	^(\w+)\s*:\s+(\d+)
4344	^(\w+)\s*:\s+(\d+)\s\w+
4345	^(\w+)\s*:\s+(\d+.\d+)
4346	^(\w+)\s*=\s*(.+)$
4347	^(\w+)\s+(\w+)\s+(\w+)\s+(\S+)\s+(([a-fA-F0-9]{2}:?){6})
4348	^(\w+|/|\.|\(|\"|\\')
4349	^(\w+|/|\.|\*|\"|\\')
4350	^(\w{3})\-(\d\d)\s*(\d\d)\:(\d\d):(\d\d)\s*([A-Z]+)\s*(.+?)\s*\:\:\s*(.*)$
4351	^(application/(asx|x-(mplayer2|ms-wmp))|video/x-ms-(asf(-plugin)?|wm(p|v|x)?|wvx)|audio/x-ms-w(ax|ma))$
4352	^(application/(sdp|x-(mpeg|rtsp|sdp))|audio/(3gpp(2)?|AMR|aiff|basic|mid(i)?|mp4|mpeg|vnd\.qcelp|wav|x-(aiff|m4(a|b|p)|midi|mpeg|wav))|image/(pict|png|tiff|x-(macpaint|pict|png|quicktime|sgi|targa|tiff))|video/(3gpp(2)?|flc|mp4|mpeg|quicktime|sd-video|x-mpeg))$
4353	^(dict|dictionary|map|mapping) from ([\w\.]+) to ([\w\.]+)$
4354	^(dict|dictionary|map|mapping) from ([\w\.]+) to (list|set|sequence|tuple|collection) of ([\w\.]+)$
4355	^(fails|needs-focus|random|skip|asserts|fuzzy)
4356	^(https://nodeload.github.com/[^/]+/[^/]+/)zipball(/.*)$
4357	^(list|set|sequence|tuple|collection) of ([\w\.]+)$
4358	^(unit)?tests?$
4359	^(}|struct\s+\w+);\s*$
4360	^-+
4361	^--([^\n]+)\n(.*?)\n--\1$
4362	^.(.*).$
4363	^.*##(.*)##.*$
4364	^.*?(\d+)([\w\s]+)?$
4365	^.*?(v[\d\.]+).*?$
4366	^.*?:\s+(.*)$
4367	^.*Abstract.*
4368	^.*ERROR org\.apache\.hadoop\.streaming\.StreamJob \(main\): (.*)$
4369	^.*\*/\s*$
4370	^.*\/
4371	^.*\\
4372	^.*_test.py$
4373	^.+$
4374	^.+(?P<line>\d+):\s+(?P<error>.+)
4375	^.+\@(\[?)[a-zA-Z0-9\-\.]+\.([a-zA-Z]{2,3}|[0-9]{1,3})(\]?)$
4376	^.+\b(.+)$
4377	^..\s+(.+?)//(.+?)(\s*\|\s*(\d+))?\s*$
4378	^/(artist|release|track|label|release-group)/([^/]*)$
4379	^/(usr/|)(bin|sbin)/
4380	^// Copyright .*$
4381	^// See .* for documentation.$
4382	^/admin
4383	^/dev/[a-z]+$
4384	^0*(?=[01])
4385	^0+$
4386	^<!-- ##### (\w+) (\w+) ##### -->$
4387	^<([\w\.]+)>$
4388	^<p( [^>]+)?>
4389	^== Rolled over to ChangeLog-\d{4}-\d{2}-\d{2} ==$
4390	^==+$
4391	^@(\S+)\s*:(.*\n?)$
4392	^@(\w+)
4393	^@@ -(\d+),(\d+) \+(\d+),(\d+) @@.*
4394	^@@ -\d+,\d+ \+(\d+),(\d+) @@.*$
4395	^Attached scsi disk (.+) at scsi(.+), channel (.+), id (.+), lun (.+)$
4396	^Gui
4397	^META\-INF/(\w+)\.(rsa|sf)$
4398	^N$
4399	^P(\d)
4400	^Parse error:\s*(?:\w+ error,\s*)?(?P<error>.+?)\s+in\s+.+?\s*line\s+(?P<line>\d+)
4401	^Parse error:\s*syntax error,\s*(?P<error>.+?)\s+in\s+.+?\s*line\s+(?P<line>\d+)
4402	^Pull: (.*)\n$
4403	^SCSI error : <(.+)> return code = (.+)$
4404	^SESSIONID-
4405	^SET_(\S*)\(
4406	^VPATH\s*=
4407	^Vendor:
4408	^Working file: (.*)$
4409	^Y$
4410	^You have \d+ new
4411	^[ \t]*Traceback \(most recent call last\):.*
4412	^[ \t]*[Xv!_][Xv!_ \t]*\n
4413	^[ \t]*\n
4414	^[#/;]
4415	^[-+]?(0|[1-9][0-9,]*)$
4416	^[-+]?([0][0-7,]*)$
4417	^[-+]?0x[0-9a-fA-F,]+$
4418	^[-+]?[0-9]+$
4419	^[-+]?[0-9]+(\.[0-9]*)?[eE][-+][0-9]+$
4420	^[-+]?[0-9][0-9,]*\.[0-9]*$
4421	^[-+]?[a-zA-Z0-9_]+$
4422	^[-_A-Za-z0-9]+$
4423	^[-_a-zA-Z0-9.]+:(//[^/]*)?/[^/]*$
4424	^[0-9/]+$
4425	^[0-9A-Za-z-_. ]+$
4426	^[0-9]
4427	^[0-9]+-(.*)$
4428	^[0-9]+.[0-9]*$
4429	^[0-9]{2}$
4430	^[0-9]{4}$
4431	^[0-9a-f]{40} refs/heads/(.+)$
4432	^[0-9a-f]{40}$
4433	^[A-Z]
4434	^[A-Z][A-Z_0-9]*$
4435	^[A-Z_]*$
4436	^[A-Za-z0-9_-]*$
4437	^[Mm]akefile.*$
4438	^[\"\[`\\']|[\"\]`\\']$
4439	^[\\'\"][^\\'\"]+[\\'\"]$
4440	^[\d ]+$
4441	^[\n\r]{0,1}
4442	^[\s\t\n]*([^\n]*)
4443	^[\w.\*]+([\s,:;]\s*[\w.\*]+)*$
4444	^[^:]*:([^:]*)$
4445	^[^:]+
4446	^[^{]*\}|\{[^}]*$
4447	^[a-zA-Z0-9+-.]+$
4448	^[a-zA-Z0-9._%-+]+@[a-zA-Z0-9._%-]+.[a-zA-Z]{2,6}$
4449	^[a-zA-Z0-9/_^\-\.:=]+$
4450	^[a-zA-Z0-9\-]+$
4451	^[a-zA-Z0-9]+$
4452	^[a-zA-Z0-9_-]{1,500}$
4453	^[a-zA-Z0-9_:\.\-,]+$
4454	^[a-zA-Z0-9_\.]+$
4455	^[a-zA-Z]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\.[a-zA-Z]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*$
4456	^[a-zA-Z_]\w*(\.[a-zA-Z_]\w*)*$
4457	^[a-z][a-z0-9_$()+-/]*$
4458	^[aeiouy][^aeiouy]$
4459	^[hs]d[a-p]$
4460	^[modprobe|insmod].*xen-vbd.*
4461	^[~a-zA-Z_]
4462	^\"|\"$
4463	^\#([0-9a-fA-F]{6})$
4464	^\$\w+:\s+(.*)\s+\$$
4465	^\${VISUAL[:}/]
4466	^\(\s*\*\s*(.*?)\s*\)$
4467	^\.
4468	^\./site-packages
4469	^\?\w+$
4470	^\S
4471	^\S+\s+
4472	^\[([^]]+)\](.*)$
4473	^\\(section|subsection|subsubsection|paragraph|subparagraph){(numpy|scipy)\.
4474	^\d*:\s+([\w.]+)(?:@)?(\w+)?:\s+<(.+)>
4475	^\d*:\s+(\w+)(?:@)?(\w+)?:\s+<(.+)>
4476	^\d+\.\d+\.\d+\.\d+$
4477	^\d{10}[\.\d]+$
4478	^\d{10}\.\d$
4479	^\n?namespace\s+\w+\s*{\s*\n?$
4480	^\s
4481	^\s*#.*
4482	^\s*#\s*([0-9]+).*
4483	^\s*#\s*include\s*"(gmock/.+)"
4484	^\s*(#|//[^/]|////).*$
4485	^\s*(>>> )?(\.\.\. )?from .* import .*\*
4486	^\s*(>>> )?(\.\.\. )?raise((\s*\(\s*)|\s+)\w+\s*,
4487	^\s*(>>> )?(\.\.\. )?raise(\s+(\\'|\")|\s*(\(\s*)+(\\'|\"))
4488	^\s*(>>> )?(\.\.\. )?raise(\s+Exception|\s*(\(\s*)+Exception)
4489	^\s*(>>>|...) (.*)$
4490	^\s*(GType|GtkType)\s+\n([a-z]\w+_get_type)\s*(\(void\)|\(\)).*$
4491	^\s*([0-9]+:[0-9]+)\s*(.+)
4492	^\s*([0-9]+:[0-9]+)\s*\|\s*(.+?)(\s+\(([0-9]+:[0-9]+)\))?\s*$
4493	^\s*([0-9]+:[0-9]+)\s*\|\s*([0-9]+:[0-9]+)\s*\|\s*(.+)
4494	^\s*([\w\s\*]+)\(\s*\*\s*(\w+)\s*\)\s*\(([^()]*)\);
4495	^\s*(\S+)\s*$
4496	^\s*(\w+)\s*:
4497	^\s*(\w|\d)+\s*$
4498	^\s*(\n\r|\r\n|\r|\n)
4499	^\s*(if|try|elif|while|for)
4500	^\s*(if|try|elif|while|for|with)
4501	^\s*(typedef|struct|static)\s+.*?$
4502	^\s*//\s*$
4503	^\s*/\*.*
4504	^\s*/\*\*\s
4505	^\s*:internal:\s*$(?m)
4506	^\s*@([a-zA-Z]+)
4507	^\s*@method\s+((?P<citdl>\w+)\s+)?(?P<name>\w+)(\(\))?(?P<doc>.*?)$
4508	^\s*@param\s+(?P<type>\w+)\s+\$(?P<name>\w+)(?:\s+?(?P<doc>.*?))?
4509	^\s*@property(-(?P<type>read|write))?\s+((?P<citdl>\w+)\s+)?(?P<name>\$\w+)(?:\s+(?P<doc>.*?))?
4510	^\s*@return\s+(?P<type>\w+)(?:\s+(?P<doc>.*))?
4511	^\s*@var\s+(\$(?P<variable>\w+)\s+)?(?P<type>\w+)(?:\s+(?P<doc>.*?))?
4512	^\s*\# DEBUG\(filename=(?P<filename>.*?), lineno=(?P<lineno>\d+)\)$
4513	^\s*\#+\s*
4514	^\s*\(\s*(.*?)\s*\)\s*
4515	^\s*\*
4516	^\s*\**\s*$
4517	^\s*\*+/
4518	^\s*\*\s*
4519	^\s*\.\.\s+(current)?module::\s*([a-zA-Z0-9_.]+)\s*$
4520	^\s*\.\.\s+automodule::\s*([A-Za-z0-9_.]+)\s*$
4521	^\s*\/\*
4522	^\s*\/\/
4523	^\s*\]\s*$
4524	^\s*\n+\s*\n+\s*$
4525	^\s*from flask import\s+
4526	^\s*using boostbook
4527	^\s*using doxygen.*$
4528	^\s*using fop.*$
4529	^\s*using xsltproc.*$
4530	^\s+(~?[_a-zA-Z][a-zA-Z0-9_.]*)\s*.*?
4531	^\s+:template:\s*(.*?)\s*$
4532	^\s+\(c-name\s+([^\s]+)\s*\)$
4533	^\s+\(field\s+\(type-and-name\s+([^\s]+)\s+([^\s]+)\s*\)\s*\)$
4534	^\s+\(parameter\s+\(type-and-name\s+([^\s]+)\s+([^\s]+)\s*\)(\s*.*)\)$
4535	^\s+\(value\s+\(name\s+([^\s]+)\)\s+\(c-name\s+([^\s]+)\s*\)\s*\)$
4536	^\s+color:\s*#4D926F;$
4537	^\s+raise FoolishError, .I am a broken setUp method.$
4538	^\s+typedef\s+.*?;$
4539	^\w
4540	^\w+:\/\/
4541	^\w{22}$
4542	^\|\s*
4543	^\n
4544	^\n\s*((?:-|\w|\&|\*)+)   # return type\n\s*                    # skip whitespace\n\(\s*\*\s*             # opening (\n([a-z]\w+)\)           # match the function name until the closing )\n\s*\(\s*([^)]*)\).*      # group the function arguments\n$
4545	^_
4546	^_[_A-Za-z0-9]*$
4547	^__[A-Za-z0-9]+[A-Za-z0-9_]*__$
4548	^__[_A-Za-z0-9]*[A-Za-z0-9]+_?$
4549	^application/x-java-((applet|bean)(;jpi-version=1\.5|;version=(1\.(1(\.[1-3])?|(2|4)(\.[1-2])?|3(\.1)?|5)))?|vm)$
4550	^audio
4551	^bob
4552	^class ([^,]*), addr (\d\d:\d\d.\d+), pci id (\w{4}:\w{4}) \(sub (\w{4}:\w{4})\)
4553	^compile
4554	^de
4555	^dmd-(\d+)-(\d+).
4556	^end_request: I/O error, dev (.*), sector .*$
4557	^ephemeral(\d|[1-9]\d+)$
4558	^file://
4559	^file:///[a-z]:
4560	^for\s+((?:\(?)\s*[A-Za-z_][A-Za-z_0-9]*(?:\s*,\s*(?:[A-Za-z_][A-Za-z0-9_]*),??)*\s*(?:\)?))\s+in\s+(.*):
4561	^get_bill_text?
4562	^gui
4563	^h\d+$
4564	^hadoop.*streaming.*\.jar$
4565	^http(s)?://
4566	^http://([^/]+).sourceforge
4567	^http://build.mozilla.org/talos/
4568	^https://
4569	^https?://\w
4570	^id(\d+)$
4571	^initialize\(
4572	^line\s(?P<line>\d+)\scolumn\s\d+\s-\s(?P<error>.+)
4573	^link
4574	^lsr: Cannot access .*: No such file or directory.
4575	^major
4576	^md5=([a-f0-9]+)$
4577	^modules\/(\w+)\/(.*)$
4578	^pull with (\w+).*?$
4579	^r(?P<revision>\d+) 
4580	^redo\s+(\d+)$
4581	^refs/heads/
4582	^restorecon reset (.+) context (.+)->(.+)
4583	^rmr: hdfs://.*$
4584	^run
4585	^run(.*)Test$
4586	^s(\d+)(-c)?
4587	^sd (.+):(.+):(.+):(.+): Attached scsi disk (.+)$
4588	^template\s*<\s*$
4589	^undo\s+(\d+)$
4590	^v([0-9]+|[0-9]+\.[0-9]+)(/.*|$)
4591	^v?(\d+!)?(\d+(\.\d+)*)((a|b|c|rc)(\d+))?(\.(post)(\d+))?(\.(dev)(\d+))?(\+([a-zA-Z\d]+(\.[a-zA-Z\d]+)?))?$
4592	^v[0-9]
4593	^var _0x[a-f0-9]+ ?\= ?\[
4594	^www\.|^(?!http)\w[^@]+\.(com|edu|gov|int|mil|net|org)$
4595	^x?vd[a-p]$
4596	^yt-(.*)$
4597	_.*
4598	_:([A-Za-z][A-Za-z0-9]*)
4599	_\[[Ee](\d+)\]
4600	_\d+$
4601	__.*__
4602	__\w+__$
4603	__metrics(.*)__metrics
4604	__start_report(.*)__end_report
4605	__u\d+$
4606	_bio\.cfm\?id=
4607	_flymake\.cpp$
4608	`([^`]+`)
4609	a.*
4610	addr:(.*)\ *Bcast:(.*)\ *Mask:(.*)
4611	aki-[0-9a-f]{8}
4612	alloc_sleep_millisecs:(\d+)
4613	an open
4614	ari-[0-9a-f]{8}
4615	as (\w+)
4616	attachment.cgi\?id=\d+&action=review
4617	attempt model run (.*?) one more 
4618	autoyast\=[\w\d\:\.\/]+
4619	available:\s+(\d+)\s+nodes\s+.*
4620	b2g-l10n.js
4621	backing file
4622	backing file:
4623	bill=SB|SCR|SJR\d+
4624	biltxt
4625	blocked
4626	bot|http|\.com|crawl|spider|python|curl|yandex
4627	builders/(?P<builder_name>.*)/builds/(?P<build_number>\d+)
4628	by ([^;(\n]+;?|\w+)
4629	c.*
4630	call.*mount.*first
4631	call\slaunch\sbefore
4632	cirrus
4633	class (\w+)
4634	class[ \t]+\w+.*?:
4635	clocksource=.*?\s
4636	clocksource=[a-z \-_]+
4637	clocksource=[a-z\- ]+
4638	coding[:=]\s*(?P<encoding>[-\w.]+)
4639	columns\s+(?P<columns>\d+);
4640	commit [\da-f]{40}$
4641	const char \* const LL_CHANNEL = "(.+)";
4642	content
4643	count
4644	date
4645	def[ \t]+\w+\(.*?\)
4646	default
4647	default:.*off
4648	descr\s+(\S+?):\s*(.*)$
4649	diff -
4650	diff: (.+)% (passed|failed)
4651	disable.*=.*yes
4652	disk size:\s+(\S+.*)
4653	django_compressor\.\w{12}
4654	doctype\s+: (\w+)
4655	dot version ([\d\.]+)
4656	e
4657	e1000|^ide
4658	ecap\s+(.\w+)
4659	el6
4660	enum\s*{([^}]*)}\s*([A-Z][A-Za-z]*)(\s|;)
4661	eval\(\w+\(\w+\((\w+)\)\)\);
4662	fail
4663	fail:(\d+).*?fail:(\d+).*fail:(\d+)
4664	failed:
4665	fd\d+
4666	file format:\s+(\S+)
4667	file=
4668	filename = .*
4669	files? changed
4670	flags\s+:\s+([\w\s]+)\n
4671	flashvars: [\\'"](?:.*&)?file=(http[^\\'"&]*)
4672	foo.*bar
4673	fourth commit
4674	from django.*import
4675	from($|\s+\.+)
4676	ftp://.*$
4677	gl.*Program(s|)NV
4678	glGetVertexAttribfvNV
4679	glWindowPos.*MESA
4680	h$
4681	h(e)l[A-Z]lo.*th[^e]*e(r)e
4682	hdc
4683	href="(\S*)"
4684	href="/pypi/([^/"]*)
4685	href\="((?:\w|[.-])*)"
4686	href\s*=\s*[\'"]?<([\w\.]+)>[\'"]?\s*(,?)
4687	http(s)?\://([\w\.-]*)(\:(\d+))?(/.*)?
4688	http://([^/]+)(/\S*)\s*
4689	http://(\S+)\s*
4690	https://(github.com)/([^/]+)/([^/]+)(?:/tree/([^/]+))?$
4691	https://(github.com|bitbucket.org)/([^/]+)/([^/]+)(?:/tree/([^/]+))?$
4692	https://github.com/([^/]+)$
4693	https?://
4694	https?://.*
4695	hwclock
4696	hwidcmd
4697	i686-apple-darwin[0-9]*-llvm-gcc-4.2
4698	idle
4699	image/(gif|p?jpeg|(x-)?png)
4700	image:\s+(\S+)
4701	import (?P<name>.*)
4702	import django
4703	importScripts\([\\'"]([^\\'"]+)[\\'"]\)
4704	index of (.*?) assigned to node at working
4705	initrd-(\d+)\.(\d+)\.(\d+)-(.*).img
4706	interface[ \t]+\w+
4707	irb\([a-zA-Z_][a-zA-Z0-9_]*\):\d{3}:\d+[>*] 
4708	libs/([^/]+)
4709	line \d+
4710	locate-root\s+"(.*)"
4711	lost
4712	lost: 0 bytes in 0 blocks.
4713	mac=
4714	mac=00:00:00:00:00:00
4715	mapper/
4716	messages -> ([A-Za-z_0-9]+) {
4717	method "(.*)" is not supported
4718	mode=readline
4719	model run (.*?) commencing on node
4720	model run (.*?) completed on node
4721	model run failure on node (.*?); will
4722	monitor_result
4723	n( mod \d+)? (is|in|within|(not in))( not)? ([^\s]+)
4724	ovs-vswitchd \(Open vSwitch\) (.+)
4725	p\s*cnf\s*(\d*)\s*(\d*)
4726	pages_to_scan:(\d+)
4727	part_end
4728	part_num
4729	part_size
4730	part_start
4731	pip \d(\.[\d])+(\.?(rc|dev|pre|post)\d+)? from (.*) \(python \d(.[\d])+\)$
4732	postfix-(?P<queue>[^/]+)/(?P<process>[^[]+)\[\d+\]:
4733	processor
4734	processor\s*:
4735	processor\s+:\s*(\d+)\n
4736	projects/([^/]+)/?$
4737	r
4738	r(?P<revision>\d+) \((?P<build_number>\d+)\)
4739	range\([ ]*([-]?\d+|n).*\)
4740	rc_view
4741	refs/(heads|remotes)/
4742	refundInfoList.refundInfo\((\d+)\).(.*)
4743	register_module
4744	rel=[\\'"](\w+)[\\'"]
4745	repeat\d+
4746	repo\=[\:\w\d\/]*
4747	repo\=cdrom[\:\w\d\/]*
4748	request\.module
4749	reset \w+ speed USB device
4750	resource out of date
4751	revision="(?P<revision>\d+)"
4752	rundll32.*?(\d+)
4753	running
4754	s$
4755	s
4756	s3n://.*\.elasticmapreduce/libs/state-pusher/[^/]+/fetch
4757	scan_sleep_millisecs:(\d+)
4758	second commit
4759	sessionToken
4760	set
4761	shell:
4762	show_bug.cgi\?id=(?P<bug_id>\d+)
4763	shut off
4764	start
4765	stopped
4766	swfConfig.*?"(http:\\/\\/.*?watch.*?-.*?\.swf)"
4767	tag:.*\[(.*)\]
4768	tap
4769	tenants/(.+?)/(.+)\.(json|xml)$
4770	test2
4771	test3
4772	test4
4773	test_(.+)\.[json|yaml]
4774	test_file_commit0
4775	test_file_commit1
4776	test_file_commit2
4777	the LaTeX files are in (.*)\.
4778	thread_id=(\d+)
4779	time="\d+\.\d+"
4780	timestamp="(.*)"
4781	timestamp="[^"]+"
4782	title:"([^"]+?)"
4783	total
4784	transaction\[(?P<number>\d+)\]\.(?P<name>\w+)
4785	tray.*open
4786	type=(B|R|)
4787	ubuntu
4788	unconverted data remains: \.([0-9]+)$
4789	unrecognized
4790	url\(([^\)]+)\)
4791	use\s+encoding(?:::source)?\s+([\'"])(?P<encoding>[\w-]+)\1
4792	user:"([^"]+?)"
4793	v=(.*)$
4794	var (_0x[a-f\d]+) ?\= ?\[(.*?)\];
4795	varchar\((\d+)\)
4796	vendor_id\s+:\s+(\w+)
4797	version *= *([\'"][^\'"]*[\'"])
4798	virtio
4799	virtual (/\*.*?\*/ )?(.*?) (.*?) (.*?)\(\w?
4800	virtual size:\s+(\S+.*)
4801	virtualenv_version = "(.*?)"
4802	vmlinuz-(\d+)\.(\d+)\.(\d+)-(.*)
4803	vport_ops
4804	x86\s+\[?(\w+)\]?
4805	xen
4806	zip$
4807	{%\W*block content\W*%}.*?{%\W*endblock\W*%}
4808	{(.*?)}(.*)
4809	{(.+?)}
4810	{([^}]*)}
4811	{.+?}
4812	{[^}]*}
4813	{\s*"name"\s*:\s*"([^"]+)"\s*}
4814	{\w+}
4815	'
4816	%(?![0-9A-Fa-f]{2})
4817	(?<!\\)/.*?[^\\]/[gims]*
4818	--cols=[0-9]+
4819	--rows=[0-9]+
4820	.*?\S\.\s
4821	.*\$\{.+\}.*
4822	/\*.*?\*/
4823	Robot.*
4824	Spider.*
4825	[/<>:"\|\?\*]
4826	[<>:"\?\*\|]
4827	[A-Za-z0-9][A-Za-z0-9\-_]*
4828	[\\/]
4829	[\x00-\x1f]
4830	[^A-Za-z0-9_.:;\-]
4831	[^A-Za-z0-9_.;\-]
4832	[^a-zA-Z0-9]
4833	[uU][rR]?[\\'\"]
4834	\$\{.+\}
4835	\.$
4836	\[\s*~([A-z_][A-z_0-9.]+?)\s*\]
4837	\d+
4838	\s*,?\s*
4839	\s+$
4840	\{\{\s*~([A-z_][A-z_0-9.]+?)\s*\}\}
4841	\n            ([a-zA-Z]+        #Tag\n            \s?[0-9]+):       #Tag number\n            \s+[+-]           #Temp signed\n            ([0-9]+\.[0-9]+)  #Temp value\n            (\xc2\xb0         #\xb0 match\n            [CF])             #Celsius or Fahrenheit\n            
4842	\x1b\[[0-9]+m
4843	^(?P<value>"Plural-Forms.+?\\n")\s*$
4844	^([0-9]+x)*[0-9]*[*]?(s\W)?$
4845	^(\s*def\s)|(.*(?<!\w)lambda(:|\s))|^(\s*@)
4846	^[ -~]*$
4847	^[ -~]{0,200}[!-~]$
4848	^[FE]?[0-9]+$
4849	^[JB]?[0-9]+([.][0-9]*)?$
4850	^\.
4851	^\s*(?:(?:else )?if|for|switch|while|with)\s*\((\s+)?.+?(\s+)?\)\s*(?:(?:\{|//.*|/\*.*\*/)\s*)?$
4852	^\s*(?:(?:else )?if|for|switch|while|with)\s*\(.+\)\s*(?:[\w_]|\[).+(;)\s*(?://.*|/\*.*\*/\s*)?$
4853	cms/page/(\d+)
4854	 *(?P<key>'.+') *=> *
4855	# Invalid object specification: '(?P<t>.+)'
4856	#([^']+?)# \(qv\)
4857	#prefs.add\('python_path', '~/python/'\)
4858	'''(.+?)'''
4859	''(.*?)''
4860	''(.+?)''
4861	''(?P<t>[^\s']+( +[^\s']+)*)''
4862	''(?P<t>[^\s']+(?: +[^\s']+)*)''
4863	''|\\([0-7]{1,3}|.)
4864	'((?:[^']|(?:''))*)'
4865	'(.*)'
4866	'(.*)'$
4867	'(?:[^']|'')*'$
4868	'([0-9.]+)'
4869	'([^']+?)' \(qv\)
4870	'.*?'
4871	':false,
4872	':true,
4873	'>$
4874	'?([^']*)'?!((\$([A-Za-z]+))?\$([0-9]+)(:(\$([A-Za-z]+))?(\$([0-9]+)))?)$
4875	'Page\$(\d*)
4876	'\.\./([^']*)'
4877	'file'\s*:\s*'(.*)'
4878	('(?:[^']|(?:''))*')
4879	('.')\s*(.*)
4880	('[{}]')
4881	('|\x00|%)
4882	((?<=\()[A-Za-z][A-Za-z0-9\+\.\-]*:([A-Za-z0-9\.\-_~:/\?#\[\]@!\$&'\(\)\*\+,;=]|%[A-Fa-f0-9]{2})+(?=\)))|([A-Za-z][A-Za-z0-9\+\.\-]*:([A-Za-z0-9\.\-_~:/\?#\[\]@!\$&'\(\)\*\+,;=]|%[A-Fa-f0-9]{2})+)|\bmailto:\S*[^\s\W]|\b\S+@\S+\.\S*[^\s\W]|((?<=\()(www|ftp)\.([A-Za-z0-9\.\-_~:/\?#\[\]@!\$&'\(\)\*\+,;=]|%[A-Fa-f0-9]{2})+(?=\)))|((www|ftp)\.([A-Za-z0-9\.\-_~:/\?#\[\]@!\$&'\(\)\*\+,;=]|%[A-Fa-f0-9]{2})+\.([A-Za-z0-9\.\-_~:/\?#\[\]@!\$&'\(\)\*\+,;=]|%[A-Fa-f0-9]{2})+)
4883	(.*?)','
4884	(?i)(.)('ll|'re|'ve|n't|'s|'m|'d)\b
4885	(?i)\b(D)('ye)\b
4886	(?i)\b(Mor)('n)\b
4887	(?im)^what's new in (.*?)\??$
4888	(?mx) ([^';]* (?:'[^']*'[^';]*)*)
4889	(['])
4890	([,']\s)
4891	([0-9]+)'
4892	([\w.!~*'|;:&=+$,-]+@)?(([A-Za-z0-9]+[A-Za-z0-9\-]*[A-Za-z0-9]+\.)*([A-Za-z0-9]+\.)*)*([A-Za-z]+[A-Za-z0-9\-]*[A-Za-z0-9]+)\.?(:\d*)*$
4893	([\w.!~*'|;:&=+$,-]+@)?\d+\.\d+\.\d+\.\d+(:\d*)*$
4894	([a-z_]+) '(.*)'\t(.*)\tLoc=<(.*):(.*):(.*)>
4895	(\'\'(?P<txt>.*?)\'\')
4896	(\'\'\'(?P<txt>.*?)\'\'\')
4897	(\'\'\'\'\'(?P<txt>.*?)\'\'\'\'\')
4898	(\\*)(['`:*~\\[\]{}@\$+\-.#])
4899	(\w+)\'(m|re|d|ve|s|ll|t)?
4900	(^[A-Za-z\' ]+$)
4901	(^[A-Za-z\' ]+)$
4902	(^|[^'])'''(.+?)'''($|[^'])
4903	(cimport +([0-9a-zA-Z_.]+)\b)|(from +([0-9a-zA-Z_.]+) +cimport)|(include +'([^']+)')|(cdef +extern +from +'([^']+)')
4904	.*'(.*)'.*'(.*)'.*
4905	.*?'''
4906	.*Access denied for user '[\w\*\!\@\#\^\&]*'@'[\w\.]*'.*
4907	.*Host '[\w\.]*' is not allowed to connect to this MySQL server.*
4908	.*thumbnail:\s*'(http://[^/]+/ThumbnailServer2[^']+)'.*
4909	.*window\.location\.href='(?P<href>.*)'.*
4910	.+conffile-prompt : '(.+)' '(.+)'
4911	<[fF][oO][nN][tT][ ]*[sS][iI][zZ][eE][ ]*='2'[ ]*>
4912	<\w+[^>]*>|</\w+>|[\w\']+|\s+|[^\w\'\s<>/]+
4913	<a href='(?P<link>proxylist_full_[_a-zA-Z0-9]+.html)'>
4914	<a href='anon/(?P<n>[0-9]+).html'>anon #
4915	<a href='elite/(?P<n>[0-9]+).html'>elite #
4916	<a href='nonanon/(?P<n>[0-9]+).html'>nonanon #
4917	<class '([A-Za-z0-9.]+)'>(\..+)?
4918	<class \'sympy[\w.]*?.([\w]*)\'>$
4919	<link rel=\'image_src\' href=\'(http://is[0-9].myvideo\.de/de/movie[0-9]+/[a-f0-9]+)/thumbs/[^.]+\.jpg\' />
4920	<tr><td>([A-Za-z ]+)</td><td class='number'>\$([\d,]+)</td><td class='number'>\$([\d,]+)</td><td class='number'>\$([\d,]+)</td></tr>
4921	<|&|'
4922	@import '([a-zA-Z0-9_-]+)';
4923	APACHEPATH.'([^']*?)'
4924	Can't connect to local MySQL server through socket
4925	Couldn't find index page for '[^']+' \(maybe misspelled\?\)\n
4926	Couldn't start forwarder server for port spec: (\d+):(\d+)
4927	File '([^\n]*)'.*?:creating '([^\n]*)'
4928	I couldn't open style file
4929	INFO: T.* (has been created by T.* at this point|is program's main thread)
4930	LOCALROOT.'([^']*?)'
4931	ProtEOnlineLoad\((.*), 'false'\);
4932	This module \'\w+\' is auto-generated with f2py
4933	USINGXAMPP.'([^']*?)'
4934	Unused options for buildout: 'eggs' 'scripts'\.
4935	VERSION = '([^']*)'
4936	VERSION = '([^']+)'
4937	VERSION.*'(.+)'
4938	Warning--I didn't find a database entry
4939	XAMPPPATH.'([^']*?)'
4940	[- \n\t\ra-zA-Z0-9'()+,./:=?;!*#@$_%]*
4941	[/!:?\-,\']
4942	[A-Za-z0-9;/?:@&=+$,\-_\.!~*'\(\)%#]+$
4943	[Ee]rr(or)?: (?P<error>.+?(Syntax error at \'(?P<near>.+?)\'; expected \'.+\')) at /.+?:(?P<line>\d+)?
4944	[[\s $({?*\`#~';<>&|]
4945	[\s'\\]
4946	[\w!\#$%&'*+-\/=?^_`{|}~]+
4947	[\w\-\'_/&]+
4948	[^ ']*::[^ ']*
4949	[^']*
4950	[^']*('[^']*'[^']*)*\:(?P<clob>CLOB\('([^']+|'')*'\))
4951	[^']+
4952	[^<']*
4953	[^A-Za-z\-0-9 $&\.\,:;/'\!\(\)]
4954	[a-z\-' \n\t]
4955	[uU]('.*?')
4956	\\(['`:*~\\[\]{}@\$+\-.#])
4957	\`(Tr|IX)\' not defined|No such file or directory|(can\'t break|cannot adjust) line
4958	\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3} (\d|\.)+  players: \['(?P<player1>\w+)', '(?P<player2>\w+)', '(?P<player3>\w+)', '(?P<player4>\w+)'\] winner (?P<winner>\w+)
4959	\s*<?xml\b.*\bencoding='([^']+)'
4960	\s*SELECT\s+.+?\s+FROM\s+[']?(\w+)
4961	\s*index.append\('(.+)'\)\s*
4962	\{([a-zA-Z\']+)\}
4963	\n        ^(?!\.)                            # name may not begin with a dot\n        (\n          [-a-z0-9!\#$%&'*+/=?^_`{|}~]     # all legal characters except dot\n          |\n          (?<!\.)\.                        # single dots only\n        )+\n        (?<!\.)                            # name may not end with a dot\n        @\n        (\n          localhost\n          |\n          (\n            [a-z0-9]                         # [sub]domain begins with alphanumeric\n            (\n              [-\w]*                         # alphanumeric, underscore, dot, hyphen\n              [a-z0-9]                       # ending alphanumeric\n            )?\n          \.                               # ending dot\n          )+\n          [a-z]{2,}                        # TLD alpha-only\n       )$\n    
4964	\n        ^\n        (?:\n          # Dotted variants:\n          (?:\n            # Decimal 1-255 (no leading 0's)\n            [3-9]\d?|2(?:5[0-5]|[0-4]?\d)?|1\d{0,2}\n          |\n            0x0*[0-9a-f]{1,2}  # Hexadecimal 0x0 - 0xFF (possible leading 0's)\n          |\n            0+[1-3]?[0-7]{0,2} # Octal 0 - 0377 (possible leading 0's)\n          )\n          (?:                  # Repeat 0-3 times, separated by a dot\n            \.\n            (?:\n              [3-9]\d?|2(?:5[0-5]|[0-4]?\d)?|1\d{0,2}\n            |\n              0x0*[0-9a-f]{1,2}\n            |\n              0+[1-3]?[0-7]{0,2}\n            )\n          ){0,3}\n        |\n          0x0*[0-9a-f]{1,8}    # Hexadecimal notation, 0x0 - 0xffffffff\n        |\n          0+[0-3]?[0-7]{0,10}  # Octal notation, 0 - 037777777777\n        |\n          # Decimal notation, 1-4294967295:\n          429496729[0-5]|42949672[0-8]\d|4294967[01]\d\d|429496[0-6]\d{3}|\n          42949[0-5]\d{4}|4294[0-8]\d{5}|429[0-3]\d{6}|42[0-8]\d{7}|\n          4[01]\d{8}|[1-3]\d{0,9}|[4-9]\d{0,8}\n        )\n        $\n    
4965	\n    (                       # Wrap whole match in $1\n     (\n       ^[ \t]*&gt;[ \t]?       # '>' at the start of a line\n       .+\n                 # rest of the first line\n       (.+\n)*              # subsequent consecutive lines\n       \n*                  # blanks\n      )+\n    )
4966	\n    (                       # Wrap whole match in $1\n     (\n       ^[ \t]*>[ \t]?       # '>' at the start of a line\n       .+\n                 # rest of the first line\n       (.+\n)*              # subsequent consecutive lines\n       \n*                  # blanks\n      )+\n    )
4967	\nUnused options for buildout: '(distribute|setuptools)\-version'\.
4968	^     Sources: '
4969	^    version='(...+)',$
4970	^ \s+ return \s+ '([0-9.]+)';
4971	^'(.+)'@
4972	^'.*'
4973	^(FFLAGS\s*=').*-m64 (.*)
4974	^([0-9a-f-]{36}) maps to '(.+)' ([0-9a-f]{32}) \((.+)\)$
4975	^([A-Za-z '\(\)]+) (\([0-9A-F]+,[0-9A-F]+\)) (.*)$
4976	^([A-Za-z '\(\)]+) (\([0-9A-F]+,[0-9A-F]+\)) ([0-9C]+) (.*)$
4977	^([\w\!\#$\%\&'\*\+\-\/\=\?\^\`{\|\}\~]+\.)*[\w\!\#$\%\&'\*\+\-\/\=\?\^\`{\|\}\~]+@((((([a-z0-9]{1}[a-z0-9\-]{0,62}[a-z0-9]{1})|[a-z])\.)+[a-z]{2,6})|(\d{1,3}\.){3}\d{1,3}(\:\d{1,5})?)$
4978	^([a-zA-Z'\-]+)$
4979	^(\S+) == (u?'[^']*'|\([0-9, ]+\))$
4980	^<type '
4981	^Comdat:\s+(.+)\s+SEGMENT NONE '(\w+)'\s+([0-9a-fA-F]+)\s+bytes$
4982	^File '([^\n]*)'$
4983	^Function.*has unrooted.*of type.*live across GC call ('?)(.*?)('?) at \S+:\d+$
4984	^Latest checkpoint's REDO location:\s+([0-9A-F]+)/([0-9A-F]+)
4985	^Latest checkpoint's TimeLineID:\s+(\d+)
4986	^[A-Za-z '\(\)]+ +\([0-9A-F]+,[0-9A-F]+\) +(.*)$
4987	^[A-Za-z0-9\' -]+$
4988	^[A-Za-z0-9\xc2\xb5 /()'>-]+\s+\([0-9A-Fx]+,[0-9A-F]+\)\s+[1-3][C]*\s+(.*)$
4989	^\$db\s*=\s*'\w+'
4990	^\$host\s*=\s*'\w+'
4991	^\$pass\s*=\s*'\w+'
4992	^\$user\s*=\s*'\w+'
4993	^\s*([A-Za-z0-9 '/-]+)\s+\(([0-9]+),([0-9A-Fa-fx]+)\)\s+([1-3])\s+.*$
4994	^\s*([A-Za-z0-9'./> -]+)\s+\(?([0-9A-F]+),([0-9A-FxXY]+)\)?\s+([A-Z][A-Z])\s+([1-3C]+)?,?.*\s*$
4995	^\s*.*?\s*(\S+)=\'(.*)\'\s*.*$
4996	^\s*archive_mode\s*=\s*'?([a-zA-Z01]+)'?\s*#?.*$
4997	^\s*synchronous_standby_names\s*=\s*'([^']*)'\s*#?.*$
4998	^\s*wal_level\s*=\s*'?([a-z_]+)'?\s*#?.*$
4999	^area_at\(([0-9]+),([0-9]+),([0-9]+),([0-9]+)\).should_contain_text '(.*)'
5000	arch='.*'
5001	dbname='(.+)'
5002	devmo_url\(_\('(?P<path>[\w/_]+)'\)\)
5003	documentSelected\(\'(\w*)\',\'([\w\d-]*)\',\'([\w\.\-]*)\',\'([\w\d/]*)\',\'([\w\d]*)\',\'([\w\s]*)\'
5004	document\.write\('(\w+)'\)
5005	domain type='.*'
5006	encoding='([^']+)'
5007	err: (?P<error>.+?(Syntax error at \'(?P<near>.+?)\'; expected \'.+\')) at /.+?:(?P<line>\d+)?
5008	hideTxt\('(?P<txt>.+)'\);
5009	invalid literal for int().*: s?'?0xOoops'?
5010	jsclassref='([^']*)'
5011	machine type='.*'
5012	name='csrfmiddlewaretoken' value='([^']*)'
5013	package: .*name=\'(\S*)\'
5014	parent\.edit_bt_list\((\{.*\}),''\)
5015	pretty-date'>on ([\w]+ [\d]+, [\d]+ \d+:\d+)</abbr></h2>
5016	queryUrl\(-1,'([^']{40})
5017	releaseDate.*=.*'(?P<date>.*)';
5018	replace\(':',\s*','\)
5019	same instance as 0x[0-9a-fA-F]+ 'abc'
5020	trailerTitle.*=.*'(?P<name>.*)';
5021	u?'(.*)' != u?'(.*)'
5022	version\s*=\s*'(\d+)\.(\d+)\.(\d+)([a-zA-Z0-9]*)'
5023	voteSelected\(\'(\d*)\',\'(\d*)\',\'(\d*)\',\'(.*)\',\'(\d*)\'
5024	was 0x[0-9a-fA-F]+ 'hi'
5025	{'(.*':.*)'}
5026	        Log text 1 \(issue 321\).
5027	     # A numeric string consists of:\n#    \s*\n    (?P<sign>[-+])?           # an optional sign, followed by either...\n    (\n        (?=\d|\.\d)           # ...a number (with at least one digit)\n        (?P<int>\d*)          # consisting of a (possibly empty) integer part\n        (\.(?P<frac>\d*))?    # followed by an optional fractional part\n        (E(?P<exp>[-+]?\d+))? # followed by an optional exponent, or...\n    |\n        Inf(inity)?           # ...an infinity, or...\n    |\n        (?P<signal>s)?        # ...an (optionally signaling)\n        NaN                   # NaN\n        (?P<diag>\d*)         # with (possibly empty) diagnostic information.\n    )\n#    \s*\n    $\n
5028	    (\S+)
5029	    <setting id="(.*?)" value="(.*?)"
5030	   
5031	  (NIST|BLEU) score using \d+-grams = ([0-9.]+) for system "(.*)" on segment (\d+) of document "(.*)" \((\d+) words\)
5032	  *
5033	  </node>
5034	  <node .*? cat="(\w+)".*>
5035	  <node .*? pos="(\w+)".*? word="([^"]+)".*/>
5036	  [ ]*
5037	  \* (.*)
5038	  \S
5039	  \n    (?P<SN>.*?)         # Named Group (SN) non greedily capturing show name\n    s                   # Letter S representing season\n    (?P<S>\d{1,2})      # Named Group (S) capturing 1/2 digits for season no\n    [\W_]?              # Single Optional Non Alpha-Num char\n    e                   # Letter E representing Episode\n    (?P<E>\d{1,2})      # Named Group (E) Capturing 1/2 digits for episode no\n    [\W_]*?             # Non greedy optional Non Alpha-Num char\n    (?P<EN>.*)          # Named Group (EN) greedily trying to grab episode name
5040	 $
5041	 ( " ( "" | [^"]+ )* " ) | ( [a-z_][a-z0-9_]* ) | [.] | (?P<err> .)  
5042	 ( +)|^ 
5043	 (Allocated at|Reported( again)? at)
5044	 *([0-9]+)x(?: \(leaked .*\))?: (.*)
5045	 *Member\("
5046	 *[0-9]+ *=> *(?P<value>.+)
5047	 *[0-9]+ + [0-9]+
5048	 *[0-9]+: +[1-9][0-9a-z]{3,3}
5049	 *[;#!]
5050	 *[^$]+
5051	 *\)(?P<comma>,?)
5052	 *\bservicefp="([^"]*)"
5053	 *\w*
5054	 *array *\(
5055	 +([0-9]+) , ([0-9]+) *([0-9]+) *(.+)
5056	 +<
5057	 +\n
5058	 - (.*),?
5059	 - [0-9]+
5060	 -
5061	 . 
5062	 .*
5063	 ?([^=]+)="(.*?)"
5064	 ?\[([^\[\]]+)\]
5065	 ID
5066	 Locus: (.+)
5067	 P=|R=|CRC=
5068	 Pack$
5069	 \([0-9]+\)
5070	 \([=<>]* [^ )]*\)
5071	 \* (.*)
5072	 \+(\d+)$
5073	 \:\s?
5074	 \d+.\d+ tb\(r\)
5075	 \nVersion (.+), ([0-9]+).([0-9])+ MBs
5076	 a/(.*?) b/(.*?)( (copy|rename) from .*)?$
5077	 at -?0x[^>]+
5078	 at 0x[0-9a-f]{6,}(>+)$
5079	 b=(.+)
5080	 border-color : #e7d796;margin-bottom : 1em; color : #9a8c59;">Article note: (.*)</div>
5081	 color="#(?:6666CC|333366)"[^>]*>
5082	 for ([0-9.]+)\Z
5083	 load averages?: ([0-9.]+),? ([0-9.]+),? ([0-9.]+)$
5084	 name: (?P<CN>.*)
5085	 sslmode=.+
5086	 validUntil=".*?"
5087	 xmlns:xi="http://www.w3.org/2001/XInclude"
5088	 {3}
5089	 |,|"|=|[|]
5090	 |/|\|\.|-
5091	!=
5092	!?((((2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?)\.){3}(2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?))(/(3[012]|[12]?[0-9])))
5093	"""
5094	"((?:\\"|[^"])+)"|([^ \t"]+)
5095	"(.*)"$
5096	"(.*)".*PRIMARY KEY( AUTOINCREMENT)?$
5097	"(.+[a-zA-Z])"
5098	"(?:[^"]|\\")*"
5099	"(?P<heading>.*)"
5100	"(?P<phrase>.*?)"
5101	"(?P<phrase>[^"]+)"
5102	"(?P<value>[^@&]*)"(?:@(?P<lang>[^&]*))?(?:&<(?P<datatype>.*)>)?
5103	"([^ ]+?)"
5104	"([^"]+)"\s*(0x[0-9a-fA-F]+)
5105	"([^\\"]+|\\.)*"
5106	"(png|jpeg|csv|netcdf|tiff)"
5107	", .*
5108	".*"
5109	".+"\."(.+)"
5110	".+?"
5111	"?([a-zA-Z0-9_-]+)"?
5112	"?Content-Type:.+? charset=([\w_\-:\.]+)
5113	"VTK_DATA_ROOT/
5114	"[\s]*"
5115	"[^"]*"|\'[^\']*
5116	"[^"]+"|\\'[^\\']+\\'
5117	"[^=]*=\s*"([^"]*)";
5118	"[^\n]*Q_OBJECT[^\n]*"
5119	"[a-zA-Z0-9]+"
5120	"file" ?: ?"(.*?)",
5121	"title":"(.*?)",
5122	"uid":"([\w\d]+?)".*?stream_token=([\w\d]+)
5123	"v8_revision": "123455"
5124	"volume" ?: ?([0-9]{1,3})
5125	"{(\S+-\S+-\S+-\S+-\S+)}"
5126	"|(/\*)|(\*/)|(//)|\n|\r
5127	"|\'|<\?|<!--|\]|<!\[
5128	"}
5129	# (?P<t>\w+) (?P<r>\d+) created.
5130	# (?P<t>\w+) (?P<r>\d+) does not exist.
5131	# *KNOWN-ISSUE
5132	# -\*- (?P<codec>.*) -\*-
5133	# <nbformat>(?P<nbformat>\d+)</nbformat>
5134	# Configurations
5135	# Could not create (?P<t>\w+).
5136	# No (?P<t>\w+) named (?P<r>\w+) exists.
5137	# Objects of type (?P<t>\w+) must be specified by numeric id.
5138	# Suppression for Error #([0-9]+)
5139	# TBPL EXCEPTION #
5140	# TBPL FAILURE #
5141	# TBPL RETRY #
5142	# TBPL WARNING #
5143	# Unknown object type: (?P<t>.+)
5144	# Updated on:.*
5145	# You are not allowed to modify (?P<t>\w+) (?P<r>\w+).
5146	# of (.*)\t(\d+)
5147	## +ALIGNMENTS
5148	## +EQUIVALENCES
5149	## +SUMMARY
5150	### .*
5151	### f90: Note: LD_RUN_PATH\s*= (?P<lib_paths>[^\s.]*).*
5152	###
5153	##(?P<key>.+)=(?P<val>.+)
5154	##(?P<key>.+?)=(?P<val>.+)
5155	##.+=<
5156	##DASHVERSION##
5157	##DEFAULT_INSTALL_DIR##
5158	##DOTLESSVERSION##
5159	##UNDERSCOREVERSION##
5160	##VERSION##
5161	##\s*(\S+)\s+(\S*)
5162	#([0-9a-zA-Z][0-9a-zA-Z])([0-9a-zA-Z][0-9a-zA-Z])([0-9a-zA-Z][0-9a-zA-Z])
5163	#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$
5164	#([\w\-]+)
5165	#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])
5166	#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})
5167	#([a-fA-F0-9]{4})([a-fA-F0-9]{4})([a-fA-F0-9]{4})
5168	#(\w+)
5169	#(\w+)\s+(.*)
5170	#(\w+)|\[(.+)\]
5171	#={69}
5172	#?\d+$
5173	#EXTINF:
5174	#REQUIRED|#IMPLIED
5175	#[0-9a-fA-F]+\Z
5176	#[0-9a-fA-F]{3,6}
5177	#[0-9a-fA-F]{6}
5178	#\d+\Z
5179	#\s*(\w*)\s*=([^#]*)#
5180	#\s*define\s+(?P<key>\w+)(?P<value>\s+[\w"]*)?
5181	#\s*endif
5182	#\s*if(n?def\s+(?P<ifdef>\w+)|\s+(?P<if>.+))
5183	#\s*include\s*<libintl.h>
5184	#\s*pragma\s+FLIP\s*
5185	#\s*wxGlade:\s*([\w:]+)::(\w+) <event_handler>\s*$
5186	#\s+User@Host:\s+(?:([\w\d]+))?\s*\[\s*([\w\d]+)\s*\]\s*@\s*([\w\d\.\-]*)\s*\[\s*([\d.]*)\s*\]
5187	#\s+User@Host:\s+(?:([\w\d]+))?\s*\[\s*([\w\d]+)\s*\]\s*@\s*([\w\d]*)\s*\[\s*([\d.]*)\s*\]
5188	#\sQuery_time:\s(\d*\.\d{1,6})\s*Lock_time:\s(\d*\.\d{1,6})\s*Rows_sent:\s(\d*)\s*Rows_examined:\s(\d*)
5189	#\w
5190	#\{([^}]*)\}
5191	#\t(.+)
5192	#alias\s+(.*)
5193	#date(\s+(\S+))?\s+(\d\d\d\d[-/]\d\d[-/]\d\d)
5194	#define BUILD_NUMBER\s+5
5195	#define BUILD_NUMBER\s+6
5196	#define IS_CANDIDATE_VERSION\s+0
5197	#define JAXER_BUILD_ID "([0-9]+)\.([0-9]+)\.([0-9]+)\.([x0-9]+)(.*)"
5198	#define MINOR_VERSION\s+22
5199	#define PATCH_LEVEL\s+0
5200	#define PATCH_LEVEL\s+1
5201	#define PYSQLITE_VERSION "(.*)"
5202	#define Py_([a-z_]+) ([0-9]+)
5203	#define __NR_(\w*)\s*\(__NR_Linux\s*\+\s*([0-9]*)\)
5204	#define[ \t]+([A-Za-z0-9_]+)
5205	#define[^\n]+
5206	#define\s+(\S+)\s+(\S+)
5207	#define\s+(\w+?)\s+([a-fA-F0-9\-]+?)\s*$
5208	#define\s+UJSON_VERSION\s+"(\d+\.\d+(?:\.\d+)?)"
5209	#define\s+\w+\(.+
5210	#define\swxMAJOR_VERSION\s+(\d+)
5211	#define\swxMINOR_VERSION\s+(\d+)
5212	#define\swxRELEASE_NUMBER\s+(\d+)
5213	#ifdef __cplusplus(?P<code>.*)#endif(\s*//\s*!?\s*__cplusplus)*
5214	#include "([^"]+)"
5215	#include *["<](.*)[">]
5216	#include \<boost\/for\_each.hpp\>
5217	#include\s+"(.+)"
5218	#include\s+<([^>]+)>
5219	#loadfactor(\s+(\S+))?\s+(\d+\.?\d*)
5220	#o3d\s+PixelShaderEntryPoint\s+(\w+)
5221	#o3d\s+VertexShaderEntryPoint\s+(\w+)
5222	#slipfactor\s+(\d+\.?\d*)
5223	${(\w+)}
5224	%%([a-zA-Z0-9\-]+)%%
5225	%%.*?\n
5226	%%BoundingBox:\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)
5227	%%\w+\?
5228	%(..)
5229	%(?:hook|ctor|init|c\()
5230	%([A-Z]), +%([A-Z])
5231	%([A-Z]), +@([A-Z])
5232	%([A-Z]), +[$](0|[1-9][0-9]*)
5233	%(\w)
5234	%({.+?})
5235	%.
5236	%20Heapcheck
5237	%20Mac%20|mac_valgrind
5238	%PDF
5239	%[^0-9A-Fa-f]{2}|%[^0-9A-Fa-f][0-9A-Fa-f]|%[0-9A-Fa-f][^0-9A-Fa-f]|%$|%[0-9A-Fa-f]$|%[^0-9A-Fa-f]$
5240	%\((.+?)\)
5241	%\((.+?)\)s
5242	%\((?P<name>[^\)]+)\)s
5243	%\((\w+)?\)s
5244	%\((\w+)\)(?:s|[\d]*d|\d*.?\d*[fg])
5245	%\([^\)]+\)
5246	%\(line *([\+-]) *(\d+)\)
5247	%\(line\)
5248	%\S+
5249	%\d
5250	%\w+%
5251	%d|%f|%H|%j|%m|%M|%S|%w|%W|%Y|%C|%z|%Z|%h|%%
5252	%d|%f|%H|%m|%M|%S|%W|%Y|%C|%%|%P|%p
5253	%include\s+(\S+)
5254	%module(\s*\(.*\))?\s+("?)(\S+)\2
5255	%module\s+(.+)
5256	%search_string%
5257	%u([0-9a-fA-F]{4})
5258	%{msg}
5259	%{watch_name}
5260	%|&#
5261	&#(?:[0-9]+|[xX][0-9a-fA-F]+);
5262	&#(\d+|x[0-9a-fA-F]+);
5263	&#(x\w\w|\d{3});
5264	&#?[A-Za-z0-9]+;
5265	&#[0-9]+;
5266	&#[xX]([a-fA-F0-9]+);
5267	&#[xX][a-fA-F0-9]+;
5268	&#[x]*(?P<name>[0-9]+);*
5269	&(#?[xX]?(?:[0-9a-fA-F]+;|\w{1,32};?))
5270	&(#?\w+);
5271	&(.+?)=(.+?)
5272	&(?!([#\w]*;))
5273	&(?![^a-zA-Z0-9_#]{1,5};)
5274	&(?!amp|gt|lt|apos|quot)
5275	&([^;\s]+);
5276	&([a-zA-Z]+);
5277	&([a-zA-Z][-.a-zA-Z0-9]*);
5278	&([a-zA-Z][-.a-zA-Z0-9]*|#[0-9]*)?
5279	&(\w+)(?:->(\w+))?$
5280	&(amp;)+
5281	&.*$
5282	&?hash=\w+
5283	&[A-Za-z0-9#]+;
5284	&[a-zA-Z0-9#]+;
5285	&_(uniq|salt|dc)=[0-9.]+
5286	&apos;
5287	&g=([A-F0-9]{40})&
5288	&gt;
5289	&lt;
5290	&lt;(http://[^\s\'"\]\)]+)&gt;
5291	(  +)
5292	( ?\$|URL: |Rev:)
5293	( {2,})
5294	( |\n)
5295	(! Emergency stop|Error:)
5296	(!?)\[(?P<caption>.*?)\]\(/?files/(?P<location>.*?)\)
5297	("(\\.|[^"\\])*")
5298	(")
5299	(".*?")
5300	(".*?")|(\'.*?\')|(\s+)
5301	("[^"]*")
5302	("[^"]*"|0x[0-9A-Fa-f]{1,4}|\d+)
5303	("[^"]*?")|(\'[^\']*?\')
5304	("\w+ .*?HTTP/[\d\.]+"\s)(\d+)(\s\d+\s".*?")
5305	(#+)\s*(.*)
5306	(#[a-zA-Z_][a-zA-Z0-9_]*)$
5307	(#\tmodified:\s+|#\tnew file:\s+|#\tdeleted:\s+)
5308	(#\trenamed:\W{4})(.*?)\W->\W(.*)
5309	(#\trenamed:\s+)(.*?)\s->\s(.*)
5310	(#include\s*".+?")
5311	(%(\([^\)]+\))?([\d\.]+)?[a-zA-Z])
5312	(%(\([^\s\)]*\))?[sd])
5313	(%23\d+">)
5314	(%?\d+\$)
5315	(%\w)
5316	(%\w+%)
5317	(&#x202a;|&#x202c;|&rlm;|\n|\s{5})
5318	(((?P<name1>.+?)(\s*,\s*)((".*")|(left|right)|([0-9]{1,2}%)))|(?P<name2>.+))
5319	(((?P<py>python)|(?P<fr>fakeroot))\s*)*(?P<func>[\w\.\-\+\{\}\$]+)?\s*\(\s*\)\s*{$
5320	(((http|https)://)|(www\.))+(([a-zA-Z0-9\._-]+\.[a-zA-Z]{2,6})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(/[a-zA-Z0-9\&amp;%_\./-~-]*)?
5321	((,([\s\r\n]*)(\]))|(,([\s\r\n]*)(\})))|("(?:\\.|[^"\\])*"|\'(?:\\.|[^\'\\])*\'|.[^,"\']*)
5322	((--reject-with) *(\S+))
5323	((.+)\@)?([^:]+)(:(\d+))?
5324	((.+)\@)?([^:]+):(\d+)
5325	((/\*.*?\*/)|(//.*?$))
5326	((25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)\.){3}(25[0-5]|2[0-4]\d|1\d\d|[1-9]\d|\d)
5327	((2[0-5]|1[0-9]|[0-9])?[0-9]\.){3}((2[0-5]|1[0-9]|[0-9])?[0-9])
5328	((<property\s+name="(?P<name>[^>]+)">(?P<text>.+?)</property>)|(?P<display><display\s+call="(?P<command>[^"]+)">))
5329	((?!.*::.*::)(?:(?!:)|:(?=:))(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)){6}(?:[0-9a-f]{0,4}(?:(?<=::)|(?<!::):)[0-9a-f]{0,4}(?:(?<=::)|(?<!:)|(?<=:)(?<!::) :)|(?:25[0-4]|2[0-4]\d|1\d\d|[1-9]?\d)(?: \.(?:25[0-4]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))(?:\:(\d+))?(?:\:([\/\\w+.\w+.\-]+))?
5330	((?:"[^"\s]+")+)$
5331	((?:"[^"]+"|[^,"]+)+)\s*,?
5332	((?:(?:(?:(?!-)(?:[\w\d-])*[A-Za-z](?:[\w\d-])*(?:(?<!-))){1,63})(?:(?:\.)?(?:(?!-)[\w\d-]{1,63}(?<!-)))*|(?:[\d]{1,3}(?:\.[\d]{1,3})(?:\.[\d]{1,3})(?:\.[\d]{1,3}))))(?:\:(\d+))?(?:\:([\/\\w+.\w+.\-]+))?
5333	((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))(?![\d])
5334	((?:(?:25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(?:25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d))))
5335	((?:(?:HTTP/1\.[0-2] [0-9]* [a-zA-Z ]*)|(?:(?:GET|POST)[a-zA-Z0-9\./\\\-_~%# ]*)).*?\r\n\r\n)
5336	((?:<br />)+)(</(?:font|span)>)
5337	((?:[^ \t\.#]|\.\.)+)(.*)
5338	((?:[^,{}]|(?:{[^{}]*}))+),?\s*
5339	((?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)$
5340	((?:\[|&lt;)[a-z0-9]+?(?:\]|>))
5341	((?:\w+\.)*\w+)\.
5342	((?:^[\\'].*[\\'])|(?:^[\"].*[\"]))(?:\:(\d+))?(?:\:([\/\\w+.\w+.\-]+))?
5343	((?:^| +)\|(?: +|$))
5344	((?:|.*/)distribution/extensions/.*)/
5345	((?<=>)\s+)*\n*(\s+(?=<))*
5346	((?<=[\\'"\s/])[^\s/>][^\s/=>]*)(\s*=+\s*(\\'[^\\']*\\'|"[^"]*"|(?![\\'"])[^>\s]*))?(?:\s|/(?!>))*
5347	((?<=[a-z])[A-Z]|(?<!\A)[A-Z](?=[a-z]))
5348	((?<=\s)\d{4}|^\d{4})
5349	((?<=\n)\n)?zip_safe flag not set; analyzing archive contents...\n
5350	((?P<day>\d+)d)
5351	((?P<h>[0-9]+))([^0-9 ]+(?P<m>[0-9 ]+))?([^0-9ap ]+(?P<s>[0-9]*))?((?P<d>[ap]m))?
5352	((?P<hour>\d+) hour(s|))? ?((?P<min>\d+) min)? ?((?P<sec>\d+) sec)? ?((?P<ms>\d+) ms)?
5353	((?P<hquote>[\\'"])(?P<htext>.+?)(?P=hquote))|
5354	((?P<minutes>\d[\d.]*)mn)?\s*((?P<seconds>\d[\d.]*)s)?
5355	((?P<protocol>[^:]+)://)?((?P<username>[^:]+)(:(?P<password>.+))?@)?(?P<server>[^/]+)(/(?P<mailbox>.+))?$
5356	((?P<title>.+)(-)?)?\s+(?P<season>\d)(?P<episode>\d\d)(?!\d)\s*
5357	((?P<title>.+?)(-)?)?(\s*)(s|(season\s)|\s)(?P<season>\d+)\s*(e|(episode\s)|x)(?P<episode>\d+)
5358	((?P<url>\w{3,6}://\S+)|(?P<email>[-+=%/\w\.]+@[\w\.\-]+)|(?P<item>(?P<class>[A-Za-z_]+)(\s*)(?P<id>\d+)))
5359	((?P<user>[^:]+)(:(?P<pass>.+))?@)?(?P<server>.+)
5360	(([0-9]{1,3}\.){3}[0-9]{1,3})
5361	(([^/]*)(/.*)?)
5362	(([^@]+)@)?([^:]+)(:([0-9]+))?
5363	(([a-zA-Z_]+[0-9_]*)|([\)\]])+)((\.)|(->))$
5364	(([a-z]+)Version[\s]+=[\s]+)(\d+);
5365	((\([^\)]+\))?([\d\.]+)?[a-zA-Z])(.*)
5366	((\[\w*|[0-9]+\.)(\:|)).*(\]|\.[0-9]+)
5367	((\\.|[^#])*)(#.*)?
5368	((\d){1,3}\.){3}(\d){1,3}
5369	((\d+)(\.\d+)?)C?
5370	((\d+)\+)
5371	((\d+)\.\.(\d+))
5372	((^|\n)[^%]*?)(\\input|\\include)\{([\w /\.\-]+)\}
5373	((^|\n)[^%]*?)\\begin\{document\}
5374	((^|\n)[^%]*?)\\usepackage(\[[\w, \-]+\])?\{([\w,\-]+)\}
5375	((_workers)?$)
5376	((https?):((//)|(\\\\))+[\w\d:#@%/;$()~_?\+-=\\\.&]*)
5377	((jump)|(jcnd))=([0-9]+)\s(?P<lineno>[0-9]+)
5378	((the|a|an)\s+)?[0-9]+
5379	(,"[^,"]+),([^,"])
5380	(,\n|[^\n-])+
5381	(-)?(?:"([^"]*)"|\\'([^\\']*)\\'|([^\s]+))
5382	(--(?P<key>\S*)[=](?P<value>\S*))|(--(?P<option>\S*))
5383	(-----BEGIN CERTIFICATE-----\n.+?\n-----END CERTIFICATE-----)
5384	(-----BEGIN \w*\s*CERTIFICATE-----(\w|\W)+-----END \w*\s*CERTIFICATE-----)
5385	(-----BEGIN \w*\s*PRIVATE KEY-----(\w|\W)+-----END \w*\s*PRIVATE KEY-----)
5386	(--|/)
5387	(-?[0-9]+\.?[0-9]*(?:e-?[0-9]*)?)
5388	(-?\d+):(-?\d+)
5389	(-devel)|(-debuginfo)|(-static)|(-libs)
5390	(-devel)|(-dgb)|(-static)
5391	(.)([A-Z])
5392	(.)*{$
5393	(.).\1
5394	(.)\s*$
5395	(.*(\s+|[*]))(\w+)$
5396	(.*) - (.*) \((.*) - (.*)\).*$
5397	(.*) <(.+?)>
5398	(.*) = (.*)
5399	(.*) [^ ]
5400	(.*) \([0-9]+\)
5401	(.*)#(.*)
5402	(.*)(?P<rating>(explicit|questionable|safe))
5403	(.*)(DEFAULT_DB_PREFIX="\$\(echo ~\)/)intel(.*)
5404	(.*)(NONRPM_DB_PREFIX="\$HOME/)intel(.*)
5405	(.*)([\(\[]([0-9]+)[\]\)])$
5406	(.*)(pop=&|&pop=|pop=|pop&|&pop|pop)(.*)
5407	(.*),REV=(.*)
5408	(.*)-(debug(info)?|devel|headers|source|static)$
5409	(.*)-----*(.*)
5410	(.*)-.*$
5411	(.*)-[0-9_]+(.*[.]a)
5412	(.*)-[0-9_]+(.*[.]dll[.]a)
5413	(.*)-[0-9_]+(.*[.]dylib)
5414	(.*)-[0-9_]+(.*[.]lib)
5415	(.*)-[0-9_]+(.*[.]so)[.0-9]*
5416	(.*).css$
5417	(.*).js$
5418	(.*): [0-9]
5419	(.*): line (\d+),(.*)
5420	(.*):([0-9]+):
5421	(.*):(\d+): .*
5422	(.*):-(.*)
5423	(.*):\+(.*)
5424	(.*)=(.*)
5425	(.*)@(.*?)(?: -> (file\:\/\/\/\S*))?\:(\d*)$
5426	(.*)[\r\n](.*)[\r\n](.*)[\r\n](.*)
5427	(.*)\(\d+\) :
5428	(.*)\(\w+\)$
5429	(.*)\*\*STRONG_LINE\*\*
5430	(.*)\s(ASC|DESC)(.*)
5431	(.*)\s\((.*)\)$
5432	(.*)\t([0-9\.]+)\t([0-9]+)\n
5433	(.*)\t(.*)\n
5434	(.*)_(.*)
5435	(.*)_(\d\d\d\d-\d\d-\d\d(?:\.\d+)?)$
5436	(.*)artist:(?P<artist>[^,]+)
5437	(.*)callsign\=(.*)$
5438	(.*)derpiboo((.ru)|(ru.org))(/images)?/(?P<id>[0-9]*)/?
5439	(.*)show/(?P<id>[0-9]*)/?
5440	(.*/)?report-(.*)\.html
5441	(.*//*)*(.*)\..*
5442	(.*?) Thump thump - (.*)
5443	(.*?) \(.*\)
5444	(.*?) and (.*?) as (\w+)
5445	(.*?) trace output
5446	(.*?)(<\%(?!\%).*?(?<!\%)\%>)(?sm)
5447	(.*?)(?:@2x|~iphone|~ipad)*\.png
5448	(.*?)(?:\.(\d+))?(([-+]\d{1,2}):(\d{2}))?$
5449	(.*?)([?*]|$)
5450	(.*?)([^.]*?)(_?id)
5451	(.*?)(\(.*\))?$
5452	(.*?)(\s*<br\s*/?>\s*)*\Z
5453	(.*?)(_\d\d){1,2}
5454	(.*?)/(.*?)/(.*?)/(.*)$
5455	(.*?):(.*?)@(.*)
5456	(.*?)</manifest:manifest>
5457	(.*?)=(.*)
5458	(.*?)[,(:].*
5459	(.*?)\$(\$?[\w\.]+)
5460	(.*?)\s+([a-z]+)\s*$
5461	(.*?)\s+<(.*)>
5462	(.*?)\t(.*)
5463	(.*?)_res_div
5464	(.*?)_settings_div
5465	(.*?)name="numa"
5466	(.*?)user (.*?)system (.*?)elapsed
5467	(.*?\(.*?\)).*
5468	(.*?\+.*?)x(.*?)
5469	(.*[*?[\\]|ignorecase\:)
5470	(.*[.]so[.0-9]+)(.*[.]dylib)(.*[.]a)
5471	(.*\.zip)/?(.*)$|
5472	(.*\s*)(<terms>)(\s*\n\s*)(<locale [^>]+>)(.*)(</locale>)(\s*\n\s*)(</terms>)(.*)
5473	(.+) -- (.+)
5474	(.+) VERBATIM$
5475	(.+) \(([0-9]+)\)\: .+
5476	(.+)
5477	(.+)((19|2\d)\d\d)
5478	(.+)(?:(?<!<br>)|(?<!<br />))\n(?![#*\s|])
5479	(.+), Version: (\d+)\.(\d+)\.(\d+)(?:-(\S+))?
5480	(.+):(.+):[0-9]+:.+ error .+
5481	(.+):([0-9]+)[:]{0,1}.*
5482	(.+):(\d+): (.+)$
5483	(.+);\s*(.*)
5484	(.+);\s*([0-9\-\.]+)?\s*(.*)
5485	(.+)=(".*")\n
5486	(.+)?\s+(.+)$
5487	(.+)[-_]([0-9a-fA-F]{40,40})
5488	(.+)[-_](\d+)\.(\d+)(\w?)
5489	(.+)[-_](\d+)\.(\d+)\.(\d+)(\w?)
5490	(.+)[-_](\d+)\.(\d+)\.(\d+)\.(\d+)
5491	(.+)[-_](\d+)_(\d+)_(\d+)
5492	(.+)[-_](\d\d\d\d)-?(\d\d)-?(\d\d)
5493	(.+)[-_]r?(\d+)
5494	(.+)[.](proto|impl|init|cleanup)$
5495	(.+)\.(sum|sum_sq|count|stdev|lower|upper|mean)$
5496	(.+)\[(.+)\]$
5497	(.+)\s{5,15}
5498	(.+)__init__\.py
5499	(.+){{{(\d+)}}}
5500	(.+?) \|\|\| (.+?) \|\|\|
5501	(.+?),\s+(.+)$
5502	(.+?):(.*)
5503	(.+?)=(.+?):(.+)
5504	(.+?)\.strings
5505	(.+\n.+\n.+)\s\S+\n[\s\S]+(?!$)
5506	(.+_id|id)([mp]?\d+)((?:-bb)?)
5507	(..):..:..:..
5508	(....)-(..)-(..)T(..):(..):(..)....([+-])(..):(..)
5509	(....)-(..)-(..)T(..):(..):(..)....Z
5510	(............................................................)
5511	(.cp\(tt[0-9{7}]+\))
5512	(.{,70})\s
5513	(.{50})
5514	(.{8})(.{4})(.{4})(.{4})(.{12})
5515	(/)?[*]$
5516	(/.*?)(\(([0-9]+)\)|):.*(Error|Warning):\s*(.*)$
5517	(/.*?):(\d+):\s*(.*)$
5518	(/:[a-zA-Z]\w*)
5519	(/[/0-9A-Za-z_.-]+)
5520	(/[\w/]*)|([^/ ][^: ]*)(:(\d+)){,1}
5521	(/\*([^*]|(\*+[^*/]))*\*+/)|(//.*)
5522	(/\*.*?\*/)
5523	(/dev/loop\d+)
5524	(/fastool && \$\(MAKE\))\s*$
5525	(/rsem && \$\(MAKE\))\s*$
5526	(/s/https?:)/+
5527	(0x\w+)\s*(.*)
5528	(0|-?[1-9][0-9]*)$
5529	(0|-?[1-9][0-9]*)e
5530	(0|[1-9][0-9]*):
5531	(0|[1-9]\d*)$
5532	(0|[1-9]\d*)(:)
5533	(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)
5534	(:devel)
5535	(:pserver:)([a-zA-Z0-9]*)(@.*)
5536	(:scale:\s+)(\d+):(\d+):(\d+)
5537	(<!--.*-->|<[^>]*>)
5538	(<(?:style|script)[^>]*>.+</(?:style|script)>)
5539	(<([a-z0-9\:\-_]+)\s+>)
5540	(<([a-z0-9\:\-_]+)\s+[^>]+>)
5541	(<.*?>)
5542	(</SCR.*?)...(.*?IPT>)
5543	(</body>)
5544	(</head>)
5545	(</literallayout>\s*)(<simpara)
5546	(</table>\n</div>\s+)</div>
5547	(</variablelist>\s*)(<simpara)
5548	(<[\s]*script[^>]*>[\s\S]*?<\/[\s]*script[\s]*>)
5549	(<[^<]*snum=)([^">]+)>
5550	(<[^>]*?href=["\']|http://[^"\' \t]+)
5551	(<\s*[a-z]+\s*[\w"=\.]+>)
5552	(<a href="/character/ch[0-9]{7}")>(.*?)</a>
5553	(<a name="history">)\s*(<table .*?</table>)
5554	(<br/>\n?)+
5555	(<div id="tn15bot">)
5556	(<font face=arial size=2>)(.*)(<\/font><br></td><td*)
5557	(<h(\d+?).*?>(.+?)</h\d>)\s?(.+)?
5558	(<h5><a name="?akas"?.*</table>)
5559	(<li>.*? \.\.\.\. )(.*?)(</li>|<br>)
5560	(<p class="find-aka">.*?</p>)
5561	(<p>\.fx:\s?(.*?)</p>\n?)
5562	(<p>\s*(?P<para>.+?)\s*</p>?)+
5563	(<pre.+?>(<code>)?\s?!(\w+?)\n(.*?)(</code>)?</pre>)
5564	(<pre><code>!(.+?)\n(.+?)</code></pre>)
5565	(<pre>\s*)<br />
5566	(<s>\s*(?P<sent>.+?)\s*</s>)+
5567	(<script.*?/script>)|(<style.*?/style>)
5568	(<span class="k">[^<>]+</span>\s*)<br />(<span class="k">)
5569	(<td class="char">)(.*?)(</td>)
5570	(<title>Lyrics: )([^<]*)
5571	(<tr><td bgcolor="#BBBBBB".*)(More Songs &gt)
5572	(<|^)(sip|sips|tel):(?P<phoneno>\+?\d+)
5573	(>>>|\.\.\.) 
5574	(?!\\)(\\\\)*"
5575	(?!__init__).*\.py$
5576	(?!__init__)[0-9a-zA-Z_]*(\.py)?$
5577	(?!__init__)[0-9a-zA-Z_]*(\.pyc?)?$
5578	(?: \d{5}| \d{5}-\d{4})$
5579	(?:(-?)(\d+))?,(?:(-?)(\d+))?$
5580	(?:(?:(?:http://)?(?:\w+\.)?youtube.com/user/)|ytuser:)([A-Za-z0-9_-]+)
5581	(?:(?:,\s*)|\s+)
5582	(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)-){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)
5583	(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)
5584	(?:(?:\w|-)+\.){2,}\w+
5585	(?:(?P<format>[AIJ])(?P<width>[0-9]+)?)|(?:(?P<formatf>[FED])(?:(?P<widthf>[0-9]+)\.(?P<precision>[0-9]+))?)
5586	(?:(?P<proto>[a-zA-i0-9]+)://)?(?P<host>[a-zA-Z0-9.-]+)(?:[:](?P<port>[0-9]+))?/?
5587	(?:([0-9a-f]+):)?(.*)
5588	(?:(\w+):)?(.*)
5589	(?:-rpath|Wl,-R)\b
5590	(?:.*(/|\\))?(?P<albumartist>.*) - (?P<album>.*)(/|\\)(?P<tracknum>\d{2})_(?P<artist>.*)_-_(?P<title>.*)\.(?:\w{2,5})$
5591	(?:.*(/|\\))?(?P<albumartist>.*)(/|\\)(?P<album>.*)(/|\\)(?P<artist>.*) - (?P<tracknum>\d{2}) - (?P<title>.*)\.(?:\w{2,5})$
5592	(?:.*(/|\\))?(?P<albumartist>.*)(/|\\)(?P<album>.*)(/|\\)(?P<artist>.*)-(?P<tracknum>\d{2})-(?P<title>.*)\.(?:\w{2,5})$
5593	(?:.*(/|\\))?(?P<albumartist>.*)(/|\\)(?P<album>.*)(/|\\)(?P<tracknum>\d{2}) - (?P<artist>.*) - (?P<title>.*)\.(?:\w{2,5})$
5594	(?:.*(/|\\))?(?P<albumartist>.*)(/|\\)(?P<album>.*)(/|\\)(?P<tracknum>\d{2})\. (?P<artist>.*) - (?P<title>.*)\.(?:\w{2,5})$
5595	(?:.*(/|\\))?(?P<albumartist>.*)(/|\\)(?P<album>.*)(/|\\)(?P=album)-(?P<tracknum>\d{2})-(?P<artist>.*)-(?P<title>.*)\.(?:\w{2,5})$
5596	(?:.*(/|\\))?(?P<artist>.*) - (?P<album>.*)(/|\\)(?P<tracknum>\d{2}) (?P<title>.*)\.(?:\w{2,5})$
5597	(?:.*(/|\\))?(?P<artist>.*) - (?P<album>.*)(/|\\)(?P<tracknum>\d{2}) - (?P<title>.*)\.(?:\w{2,5})$
5598	(?:.*(/|\\))?(?P<artist>.*) - (?P<album>.*)(/|\\)(?P<tracknum>\d{2})-(?P<title>.*)\.(?:\w{2,5})$
5599	(?:.*(/|\\))?(?P<artist>.*) - (?P<album>.*)(/|\\)(?P<tracknum>\d{2})\. (?P<title>.*)\.(?:\w{2,5})$
5600	(?:.*(/|\\))?(?P<artist>.*)(/|\\)((?P<year>\d{4}) - )(?P<album>.*)(/|\\)(?P<tracknum>\d{2})-(?P<title>.*)\.(?:\w{2,5})$
5601	(?:.*(/|\\))?(?P<artist>.*)(/|\\)(?P<album>.*)(/|\\)(?P<tracknum>\d{2}) (?P<title>.*)\.(?:\w{2,5})$
5602	(?:.*(/|\\))?(?P<artist>.*)(/|\\)(?P<album>.*)(/|\\)(?P<tracknum>\d{2}) - (?P<title>.*)\.(?:\w{2,5})$
5603	(?:.*(/|\\))?(?P<artist>.*)(/|\\)(?P<album>.*)(/|\\)(?P<tracknum>\d{2})\. (?P<title>.*)\.(?:\w{2,5})$
5604	(?:.*(/|\\))?(?P<artist>.*)(/|\\)(?P<album>.*)(/|\\)(?P=album)-(?P<tracknum>\d{2})-(?P<title>.*)\.(?:\w{2,5})$
5605	(?:.*(/|\\))?(?P<artist>.*)(/|\\)(?P=artist) - (?P<album>.*) - (?P<tracknum>\d{2}) - (?P<title>.*)\.(?:\w{2,5})$
5606	(?:0|[1-9][0-9]*)\Z
5607	(?:::)?MySmartPointer<\s*(\w+)\s*>
5608	(?:::)?PointerHolder<\s*(\w+)\s*>
5609	(?:<FONT SIZE="-1">|<font face="arial,helvetica" size=2><(?:B|I)>)([^<]*?)/([^<]*?)(?:</(?:B|I)></font>|</FONT>)
5610	(?:<param name="movie" value="|var url = ")(http://media.mtvnservices.com/([^"]*episode.*?:.*?))"
5611	(?:@?[a-zA-Z0-9_$]+(?:://|::|->|:|/|@|\.))+
5612	(?:Default-Start|chkconfig):\s*[2345]
5613	(?:FROM|JOIN) `(?P<table>\w+)`
5614	(?:ResultBody"><br /><br />(.*?)&nbsp;)|(?:<b>(.*?)</b>)
5615	(?:Ver )(\d)\.(\d)
5616	(?:["\'])(.*)(?:["\'])$
5617	(?:[.~]|/[a-zA-Z_0-9]+)/
5618	(?:[=!]=|is(?:\s+not)?)\s*type(?:s.\w+Type|\s*\(\s*([^)]*[^ )])\s*\))
5619	(?:[\d]{1,3}(?:\.[\d]{1,3})(?:\.[\d]{1,3})(?:\.[\d]{1,3}))
5620	(?:[\da-f]){2}
5621	(?:[^,\s])(\s*)(?:[-+*/|!<=>%&^]+)(\s*)
5622	(?:[^\n]*\n){0,2}
5623	(?:[~#]|\.py[co]|\.o)$
5624	(?:\:|\d)
5625	(?:\d[ \-\)\(\dx\.]{0,2}(?!\n)){6,12}
5626	(?:\d{2}:\d{2}:\d{2}) (.*)
5627	(?:\n|^)(# file: (.*?))\n
5628	(?:\n|^)(File (.*?))\n
5629	(?:\r\n|\r|\n|\Z)
5630	(?:\{.+\})?(?:\([:, \w]+\))?$
5631	(?:^|/)Makefile$
5632	(?:^|[^%])%([\w-]+)
5633	(?:aka) <em>"(.*?)(<br>|<\/td>)
5634	(?:aka|birth name) (<em>")(.*?)"(<br>|<\/em>|<\/td>)
5635	(?:codename (.*),\s*)?released on (\w+\s+\d+\w+\s+\d+)(?i)
5636	(?:definitely|indirectly|possibly) lost: \d+ bytes in \d+ blocks.
5637	(?:firebird|postgres(?:ql)?)_returning
5638	(?:ftp|http)s?://
5639	(?:http://)?(?:[a-z0-9]+\.)?photobucket\.com/.*[\?\&]current=(.*\.flv)
5640	(?:http://)?(?:[a-z]+\.)?video\.yahoo\.com/(?:watch|network)/([0-9]+)(?:/|\?v=)([0-9]+)(?:[#\?].*)?
5641	(?:http://)?(?:\w+\.)?youtube.com/(?:(?:view_play_list|my_playlists|artist)\?.*?(p|a)=|user/.*?/user/|p/|user/.*?#[pg]/c/)([0-9A-Za-z]+)(?:/.*?/([0-9A-Za-z_-]+))?.*
5642	(?:http://)?(?:www\.)?imdb.com/title/tt\d+
5643	(?:http://)?(?:www\.)?metacafe\.com/watch/([^/]+)/([^/]+)/.*
5644	(?:http://)?video\.google\.(?:com(?:\.au)?|co\.(?:uk|jp|kr|cr)|ca|de|es|fr|it|nl|pl)/videoplay\?docid=([^\&]+).*
5645	(?:int|char)(?:\s+\*?\s*|\s*\*?\s+)([a-zA-Z_].*)
5646	(?:is|has)($|[A-Z_])
5647	(?:set|add)($|[A-Z_])
5648	(?:string:\$\{portal_url\}/([^."]+.js)")|(?:\<link href="([^."]*.css)")
5649	(?:www\.)?flickr\.com
5650	(?<![0-9a-zA-Z_.])(\d+\.\d+)(e[+-]?\d+)?(?![0-9a-zA-Z_.])
5651	(?<![\(\[])(http://[^\s\'"\]\)]+)
5652	(?<![\n\*])\*{2,}
5653	(?<!\")(?<!\\.)(?:[a-z|A-Z]+[0-9]+:?(?:[a-z|A-Z]+[0-9]+\:?)?)(?:(?=[+\-*/% \,)])|(?!.))
5654	(?<!\:)//(?P<a>.*)
5655	(?<!\\)%
5656	(?<!\\)&
5657	(?<!\\)(`)
5658	(?<!\\),|\s
5659	(?<!\\):
5660	(?<!\\):([a-zA-Z_][a-zA-Z_0-9]*)?(?:#(.*?)#)?
5661	(?<!\\)=
5662	(?<!\\)[^"\]\[\$]+
5663	(?<!\\)\$[a-zA-Z]\w*
5664	(?<!\\)\$anything
5665	(?<!\\)\\([0-9]+)
5666	(?<!\\)\\n
5667	(?<!\\)\\u([dD][0-9a-fA-F]{3,3})
5668	(?<!\\)\|
5669	(?<!\\)_
5670	(?<!\n)\n(?!\n)
5671	(?<!\w)[a-zA-Z_]\w*
5672	(?<!\w|\<|/|:)/[^\s/]([^/]*[^\s/])?/(?!\w|/|:)|(?<!\w)_[^\s_]([^_]*[^\s_])?_(?!\w)
5673	(?<!\|)\|(?!\|)
5674	(?<!`)(werkzeug\.)([a-zA-Z_][a-zA-Z0-9_]+)
5675	(?<!http:)(?<!https:)(?<!ftp:)//
5676	(?<= line )\d+
5677	(?<="v8_revision": ")([0-9]+)(?=")
5678	(?<=/)[a-z,0-9,A-Z]*.nii
5679	(?<=/)\d+$
5680	(?<=Authority: ).+
5681	(?<=BYTSRCVD\()\w+
5682	(?<=BYTSSENT\()\w+
5683	(?<=MSGS\()\w+
5684	(?<=Mono JIT compiler version ).+(?= \(tarball)
5685	(?<=NodeName=)\S+
5686	(?<=Package name: ).+
5687	(?<=STATUS\()\w+
5688	(?<=\()(?:[^()]+|\([^)]+\))*(?=\))
5689	(?<=\()\w*\,?\s*
5690	(?<=\(|\))?[a-z|A-Z|0-9]*(?=\()
5691	(?<=\(|\))[a-z|A-Z]*(?=\()
5692	(?<=\))#.*$
5693	(?<=\-)\d+
5694	(?<=\\u)([0-9a-f]{4})|(?<=\\U)([0-9a-f]{8})
5695	(?<=\n)[ ]+(?!\s)
5696	(?<=\n)\.\.\s+[^:]+:\s+(https?://.+)$
5697	(?<=\n)\[.*?\]:\s?(https?://.+)$
5698	(?<=\n)--\n
5699	(?<=^<span class="..">)-\+|(?<=^<span class="..">)-|(?<=^<span class="..">)\+
5700	(?<=^<span\sclass="..">@@\s-)\d+,\d+|\d+,\d+(?=\s@@</span>$)
5701	(?<=content-type:\s).*?(?=\r\n|$)
5702	(?<=nm|tt|ch)([0-9]{7})\b
5703	(?<=source\.)[\w+#]+
5704	(?<=tcp://).+?(?=/)
5705	(?<={)[a-zA-Z_ 0-9]+(?=})
5706	(?<=})\w+
5707	(?=-)([^>]*)(?=.tar)
5708	(?=.*?\b/\b)(?=.*?\bdisk0)((?!Volume).)*
5709	(?=.ht).+
5710	(?=/)(.*?)\s
5711	(?=[\"])
5712	(?=[^a-zA-Z0-9_.\/\-\x7F-\xFF\n])
5713	(?=^[.]{1}.*)
5714	(?=qtonpi)([^>]*)(?=-)
5715	(?P<NCName>[a-zA-Z_](\w|[_.-])*)
5716	(?P<a>[\<\>\!\=])\s+(?P<b>[\<\>\!\=])
5717	(?P<all>\{\{\s*include\s+[\'"](?P<name>[^\'"]*)[\'"]\s*\}\})
5718	(?P<aname>[^\s=]+)\s*(=\s*(?P<qt>"?)(?P<aval>.+)(?P=qt))?
5719	(?P<argkey>[^=]+)=(?P<argvalue>[^&]*)
5720	(?P<asset>[\w_.:/]+)(?:\#(?P<defname>[\w_]+))?(\.(?P<ext>.*))
5721	(?P<availBlocks>\d+) free blocks
5722	(?P<base>.*?)(?P<keyword>_append|_prepend)(_(?P<add>.*))?
5723	(?P<calls>\d+) calls in (?P<time>\d+\.\d+) s \((?P<ns_per_call>\d+\.\d+) ns/call\)
5724	(?P<caption>.+)\,\s(?P<the_rest>.*)
5725	(?P<cf>[\S]+)+-(?P<tmp>tmp-)?[\S]+-(?P<suffix>[a-zA-Z.]+)
5726	(?P<cl>\w+)(?P<id>[-\d]+)
5727	(?P<clause>\d+)_(?P<field>.+)$
5728	(?P<code>\w+)\s+(?P<status>ACCEPTED|DECLINED|COMPLETED)
5729	(?P<comment>/\*\*[^{}]*?\*/)?\s*message\s*{\s*(?P<type>\w*)\s*,\s*(?P<subtype>\w*)\s*,\s*(?P<subtypecode>\w*)\s*,\s*(?P<datatype>\w*)\s*}\s*;\s*
5730	(?P<constr>CHECK \(.*\))(?P<any>.*)(?P<default>DEFAULT [0|1])
5731	(?P<day>\d\d)/(?P<month>\d\d)/(?P<year>\d\d\d\d)$
5732	(?P<dayname>[a-zA-Z]{3}), (?P<day>[0-9]{1,2}) (?P<month>[a-zA-Z]{3}) (?P<year>[0-9]{2,4}) (?P<hour>[0-9]{2}):(?P<min>[0-9]{2})(:(?P<sec>[0-9]{2}))?( )?(?P<tz>[A-Z]{2,3}|(?P<tzdirec>[-+])(?P<tzhour>[0-9]{2})(?P<tzmin>[0-9]{2}))?
5733	(?P<directory>.*)/(?P<filename>.*?)\.js$
5734	(?P<directory>.*)/(?P<filename>.+)
5735	(?P<dtype>[AIJFED])(?P<width>[0-9]*)
5736	(?P<exp>export\s*)?(?P<var>[a-zA-Z0-9\-_+.${}/]+)(\[(?P<flag>[a-zA-Z0-9\-_+.]+)\])?\s*((?P<colon>:=)|(?P<lazyques>\?\?=)|(?P<ques>\?=)|(?P<append>\+=)|(?P<prepend>=\+)|(?P<predot>=\.)|(?P<postdot>\.=)|=)\s*(?P<apo>[\'\"]?)(?P<value>.*)(?P=apo)$
5737	(?P<exp>export\s*)?(?P<var>[a-zA-Z0-9\-_+.${}/]+)(\[(?P<flag>[a-zA-Z0-9\-_+.]+)\])?\s*((?P<colon>:=)|(?P<ques>\?=)|(?P<append>\+=)|(?P<prepend>=\+)|(?P<predot>=\.)|(?P<postdot>\.=)|=)\s*(?P<apo>[\'\"]?)(?P<value>.*)(?P=apo)$
5738	(?P<fence>^(?:~{3,}|`{3,}))[ ]*(\{?\.?(?P<lang>[a-zA-Z0-9_+-]*)\}?)?[ ]*\n(?P<code>.*?)(?<=\n)(?P=fence)[ ]*$
5739	(?P<file>[-/\.\w<>]+):((?P<line>\d+):)?(\d+:)? warning: (?P<msg>[^ ].*)$
5740	(?P<fn>.*)\..*
5741	(?P<full>[0-9]+\.(?P<decimal>[0-9]+?)0)(?P<type>[Dd])
5742	(?P<group>[^,]+?)[.](?P<name>.+?):(?P<value>\d+)
5743	(?P<head>.*?abstract repository common_branches\s*{\s*branches\s*{\s*\n)(?P<branches>.*?)^\s*}\s*tags\s*{\s*(?P<tags>.*?)(?P<tail>^\s*}.*)
5744	(?P<heading>^\s*(?P<hmarker>=+)(\s)*.*(\s)*(?P=hmarker)( )*$)
5745	(?P<hostname>https?://(\w|\.|:)+)/projects/p/(?P<project>(\w|-)+)/
5746	(?P<hour>\d\d):(?P<minute>\d\d):(?P<second>\d\d)$
5747	(?P<id>\d+)
5748	(?P<id>^.*?) @
5749	(?P<iface>\w+)\s+
5750	(?P<indent>^\s*)(?P<entity>(class|def)\s+)(?P<name>[a-zA-Z0-9_]+)(?P<args>.*:.*$)
5751	(?P<indent>^\s*)(?P<entity>(class|module|def)\s+)(?P<name>.*)(?P<args>\s*$)
5752	(?P<indent>^\s*)(?P<visibility>(final|abstract)?\s?(public|private|protected)?\s?(static)?\s*)(?P<entity>(function|class|interface)\s+)(?P<name>[^$]+[&a-zA-Z0-9_]+)(?P<args>.*$)
5753	(?P<index>\d+)(\s+)(?P<probA>[0-9\.e\-\+]+)(\s+)(?P<probC>[0-9\.e\-\+]+)(\s+)(?P<probG>[0-9\.e\-\+]+)(\s+)(?P<probU>[0-9\.e\-\+]+)\n
5754	(?P<intDigits>\d*)(?P<dot>\.)(?P<fracDigits>\d+)
5755	(?P<integer>[-+]?[0-9]+)(?P<decimal>\.[0-9]+)?(?P<exponent>e[-+]?[0-9]+)?
5756	(?P<key>\w+)=(?P<value>[^\s]+)\s*(?:\((?P<data>.*)\))*
5757	(?P<line>([^"]*["][^"]*["][^"!]*|[^\\']*\\'[^\\']*\\'[^\\'!]*|[^!\\'"]*))!{1}(?P<rest>.*)
5758	(?P<line>.*)&\s*\Z
5759	(?P<lineno>[0-9]+)(\s[0-9]+)+
5760	(?P<link>(?:http(|s):\/\/)?(?:www.)?(facebook|fb).com\/?)*(?P<nome>[\w\.\-]*)
5761	(?P<link>(?:http(|s):\/\/)?(?:www.)?(twitter).com\/?)*(?P<nome>[\w\.\-]*)
5762	(?P<locale>.+)?/themes/update-check/(?P<id>\d+)$
5763	(?P<location>.*)
5764	(?P<major>\d)\.(?P<minor>\d)\.(?P<build>\d+)
5765	(?P<name>%%\(name\)(?:\-(?P<digits>[\d]+))?s)
5766	(?P<name>.*)_dmesg\.txt$
5767	(?P<name>.*)_ftrace\.txt$
5768	(?P<name>[^:]+):(?P<value>[^,]*),?
5769	(?P<name>[^=]+)="(?P<value>[^"]*)" *
5770	(?P<name>[^\s]*)( PUBLIC "(?P<publicId>.*)" "(?P<systemId1>.*)"| SYSTEM "(?P<systemId2>.*)")?
5771	(?P<name>[^\s]*)(\s*PUBLIC\s*"(?P<publicId>.*)"\s*"(?P<systemId1>.*)"|\s*SYSTEM\s*"(?P<systemId2>.*)")?
5772	(?P<name>[^{]+)({(?P<attrs>[^}]+)})?
5773	(?P<name>[a-zA-Z0-9_*]+)(?P<default>=.*?)?, 
5774	(?P<name>\S*) \((?P<relation><<|<=|=|>=|>>) (?P<version>\S*)\)
5775	(?P<nick>.*?)!(?P<ident>.*?)@(?P<host>.*)
5776	(?P<nick>[^!].*)!(?P<ident>.*)@(?P<host>.*)
5777	(?P<nonterminal>(\.|[^:])*)(:(?P<rule>.*))
5778	(?P<not_null>NOT NULL) (?P<default>DEFAULT.+)
5779	(?P<num>\d+) logs discarded\s*\Z
5780	(?P<num>\d+)(?P<unit>[wdhms])
5781	(?P<number>[\d]+)(?P<ord>st|nd|rd|th)
5782	(?P<option>[^:=\s][^:=]*)\s*(?P<vi>[:=]?)\s*(?P<value>.*)$
5783	(?P<pagename>.+?)\t
5784	(?P<pbs>\\*)(?P<escChar>\\[iIcC])
5785	(?P<pbs>\\*)(?P<escSeq>(?P<inv>[\^])?\\(?P<pP>[pP]){(?P<id>[^}]*)})
5786	(?P<pid>\d+)(?P<body>.*)<unfinished ...>$
5787	(?P<pid>\d+)\s+\<\.\.\..*\>(?P<body>.*)
5788	(?P<pid>\d+)\s+chdir\("(?P<cwd>[^"]*)"\)
5789	(?P<pid>\d+)\s+execve\("(?P<name>[^"]*)", .*
5790	(?P<pid>\d+)\s+exit_group\((?P<status>.*)\).*
5791	(?P<pid>\d+)\s+killed by.*
5792	(?P<pid>\d+)\s+mkdir\("(?P<name>[^"]*)", .*
5793	(?P<pid>\d+)\s+open\("(?P<name>[^"]*)", (?P<mode>[^,)]*)
5794	(?P<pid>\d+)\s+rename\("[^"]*", "(?P<name>[^"]*)"\)
5795	(?P<pid>\d+)\s+stat64\("(?P<name>[^"]*)", .*
5796	(?P<pid>\d+)\s+stat\("(?P<name>[^"]*)", .*
5797	(?P<pid_clone>\d+)\s+(clone|fork|vfork)\(.*\)\s*=\s*(?P<pid>\d*)
5798	(?P<pixels>\d{1,4}) pixel
5799	(?P<pre>.*)/ephox/(?P<package>.+)
5800	(?P<pre>.*)/ephox/(?P<package>.+)/(?P<module>.+?)\.js$
5801	(?P<prefix>^[\s]*)(?P<main>([\*\s]+(html|body)\s+)?[a-zA-Z_\.,#]+[\sa-zA-Z_\.,#\{:]*)(?P<suffix>[^;]+)$
5802	(?P<prefix>^\s*function\s+)(?P<main>[^$]+[&a-zA-Z0-9_]+)(?P<suffix>.*$)
5803	(?P<prefix>^diff(\s-[a-z]{1})?(\s-[a-z]{1})?(\s-[a-z]{1})?)(?P<main>.*)(?P<suffix>$)
5804	(?P<proc_pname>\w+)=(?P<proc_pval>".*?"|\'.*?\'|\w+)
5805	(?P<protocol>PYROLOC|PYROLOCSSL)://(?P<hostname>[^\s:]+):?(?P<port>\d+)?/(?P<name>\S*)
5806	(?P<protocol>PYRONAME|PYRONAMESSL)://(((?P<hostname>[^\s:]+):(?P<port>\d+)/)|((?P<onlyhostname>[^\s:]+)/))?(?P<name>\S*)
5807	(?P<protocol>[^\s:/]+)://(?P<hostname>[^\s:]+):?(?P<port>\d+)?/(?P<id>\S*)
5808	(?P<protocol>[a-z]+)://(?P<token>.+)
5809	(?P<protocol>[a-z]+)://(?P<token>[0-9:]+)
5810	(?P<protocol>^gedit:\/\/)(?P<file>.*?)\?line=(?P<line>.*?)$
5811	(?P<quantity>\d[\d.]*)+\s*(?P<units>[GgMmKk]?(?P<multiplier_style>[Ii])?[Bb])?\s*(?P<fraction>\(\d+%\))?
5812	(?P<quantity>\d[\d.]*)+\s*(?P<units>\D+)?
5813	(?P<rate>\d*(\.\d*))
5814	(?P<remote_ip>[^ ]+) (?P<user>[^ ]+) (?P<user2>[^ ]+) \[(?P<date>[^\]]+)\] "(?P<request>[^ ]+) (?P<url>[^ ]+) (?P<http_protocol>[^ ]+)" (?P<init_retcode>[^ ]+) (?P<size>[^ ]+)
5815	(?P<repeat> *[(]?[ ,0-9]*[)]? *)(?P<dtype>[A-Za-z0-9.]*)
5816	(?P<repeat>\d+)?P(?P<dtype>[A-Z])(?:\((?P<max>\d*)\))?
5817	(?P<repeat>^[0-9]*)(?P<dtype>[A-Za-z])(?P<option>[!-~]*)
5818	(?P<replace>(?P<type><((!?@?)|\|)?)\((?P<is_array>\s*\[?)(?P<content>.*?)(\]?)\))
5819	(?P<replace>(?P<type>>((!?@?)|\|)?)\((?P<is_array>\s*\[?)(?P<content>.*?)(\]?)\))
5820	(?P<revision>\d+)
5821	(?P<root>https?://[^/]+)(?P<path>/.*)
5822	(?P<rtn>\S+)\s+(?P<fname>[^\s\(\){}]+({[^{}]*})?)\s*\((?P<args>(({[^{}]*})+|(\([^\(\)]*\))+|[^\(\)]+)*)\)
5823	(?P<rule>(\\.|[^#])*)(?P<comment>#.*)?
5824	(?P<signal>[+-]?)(?P<relative>[\d]?)(?P<weekday>[\w]{2})$
5825	(?P<slug>[a-z0-7_]+)(?P<suffix>.*)
5826	(?P<source>.+) \((?P<version>.*)\) (?P<dist>.+); urgency=(?P<urgency>.+)
5827	(?P<source_filename>.+)_(?P<x>\d+)x(?P<y>\d+)(?:_(?P<options>\w+))?_q(?P<quality>\d+)(?:.[^.]+)?$
5828	(?P<spaces>^\s*)
5829	(?P<state>\w+)/(?:(?P<pk>\d+)/)?$
5830	(?P<table>.*?)\.(?P<field>.*?)\..*
5831	(?P<table>[\w\-]+)\.(?P<field>[\w\-]+)\.(?P<uuidkey>[\w\-]+)\.(?P<name>\w+)\.\w+$
5832	(?P<tag></.+?>)(?P<value>[\d\.]+)
5833	(?P<tag>\#\w+)
5834	(?P<test_method>[a-z_]+) \((?P<path_and_class>[a-zA-Z_.]+)\)
5835	(?P<text>(\w|[-])*[*?](\w|[-*?])*)
5836	(?P<type>[ACMD]) (?P<file>.*) (?P<revspec>rev:revid:[-\d]+) (?P<parentrevspec>rev:revid:[-\d]+) src:(?P<srcpath>.*) dst:(?P<dstpath>.*)$
5837	(?P<type>[^:]*)://((?P<user>.+)@)?(?P<location>[^;]+)(;(?P<parm>.*))?
5838	(?P<tzname>(Z|(?P<tzsign>[+-])(?P<tzhour>[0-9]{2})(:(?P<tzmin>[0-9]{2}))?)?)
5839	(?P<unsupported> \.)? (?P<match> ((?P<scope> (\w+\.)* \w+) \.)? (?P<complete>\w*) $)
5840	(?P<user>[^:]+)(:?(?P<pswd>.*))
5841	(?P<username>@\w+)
5842	(?P<whitespace>[ \n]*)(?P<entry>[^ \n]+)
5843	(?P<who>[ugo]+)(?P<op>[-+])(?P<what>[rwx]+)$
5844	(?P<width>\d+)x(?P<height>\d+)
5845	(?P<wikilink>(^|(?<=[^A-Za-z]))[!]?[A-Z][a-z/]+(?:[A-Z][a-z/]+)+)
5846	(?P<word>[^\s]*)\s+(?P<count>\d*)
5847	(?P<ws>[ \t]*)
5848	(?P<year>[0-9]{4})(?P<month>[0-9]{2})(?P<day>[0-9]{2})$
5849	(?P<year>[0-9]{4})([-/.])(?P<month>[0-9]{2})\2(?P<day>[0-9]{2})$
5850	(?P<year>[0-9]{4})-(?P<month>[0-9]{1,2})-(?P<day>[0-9]{1,2}).(?P<hour>[0-9]{2}):(?P<min>[0-9]{2})(:(?P<sec>[0-9]{2}))?( )?(?P<tz>Z|(?P<tzdirec>[-+])(?P<tzhour>[0-9]{1,2})(:)?(?P<tzmin>[0-9]{2})?)?
5851	(?P<year>[0-9]{4})-(?P<month>[0-9]{1,2})-(?P<day>[0-9]{1,2}).(?P<hour>[0-9]{2}):(?P<min>[0-9]{2})(:(?P<sec>[0-9]{2}))?(?P<tz>Z|(?P<tzdirec>[-+])(?P<tzhour>[0-9]{1,2})(:)?(?P<tzmin>[0-9]{2})?)?
5852	(?P<year>[12]{1}[0-9]{3})
5853	(?P<year>\d+)/(?P<month>\d+)/(?P<day>\d+)
5854	(?P<year>\d{4}) (?P<month1>[A-Za-z]{3})-(?P<month2>[A-Za-z]{3})
5855	(?P<year>\d{4})( (?P<month>[A-Za-z]{3})( (?P<day>\d+))?)?$
5856	(?P<year>\d{4})(?P<days>\d{3})
5857	(?P<year>\d{4})-(?P<month>\d{1,2})-(?P<day>\d{1,2})[T ](?P<hour>\d{1,2}):(?P<minute>\d{1,2})(?::(?P<second>\d{1,2})(?:\.(?P<microsecond>\d{1,6})\d{0,6})?)?(?P<tzinfo>Z|[+-]\d{2}(?::?\d{2})?)?$
5858	(?P<year>\d{4})-(?P<month>\d{2})-(?P<day>\d{2})
5859	(?P<year>\d{4})-(?P<month>\d{2})-(?P<day>\d{2})[T ](?P<hr>\d{2}):(?P<min>\d{2}):(?P<sec>\d{2})(?P<sec_frac>\.\d+)?
5860	(?P<year>\d{4})-(?P<month>\d{2})-(?P<day>\d{2})[T_ ](?P<hour>\d{2}):(?P<minute>\d{2}):(?P<second>\d{2})(?P<subsecond>\.\d+)?Z?
5861	(?i) s\.a\.
5862	(?i)(<.*>)
5863	(?i)(?:.+?://)?(?:www[\d]*\.)?([^#]*[^#/])/?
5864	(?i)(?:.+?://)?(?:www[\d]*\.)?([^/:#?]*)
5865	(?i)(?:https?://)?(?:www\.)?dailymotion\.[a-z]{2,3}/video/([^_/]+)_([^/]+)
5866	(?i)(?<![A-Z])E([ABCD]X|[SD]I)(?![A-Z])
5867	(?i)(I|Bli|Pi)nkie(Pie)?(Bot)?, is (?P<pony>.*)( the)? best pony(\?)?
5868	(?i)([+-]\d+):00 from
5869	(?i)([0-9a-f]{2})
5870	(?i), ltd
5871	(?i).+\.mp3$
5872	(?i).+\.nfo$
5873	(?i)<A NAME=results>(.*?)</A>
5874	(?i)<[a-z\.&_0-9\@\-]+>
5875	(?i)<b>([^<]*)</b>
5876	(?i)<br[^>]*>
5877	(?i)<i>([^<]*)</i>
5878	(?i)<li>(.*?)</li>
5879	(?i)[a-z\.&_0-9\@\-]+\.[a-z\.&_0-9\@\-]+
5880	(?i)[a-z_]\w*$
5881	(?i)\&([0-9a-fklmnor])
5882	(?i)\<(?:link)\s.*?rel\s*\=\s*[\"\\']shorturl[\"\\'].*?href\s*\=\s*[\"\\'](.*?)[\"\\'].*?\>
5883	(?i)\b(Gim)(me)\b
5884	(?i)\b(Gon)(na)\b
5885	(?i)\b(Got)(ta)\b
5886	(?i)\b(Lem)(me)\b
5887	(?i)\b(T)(is)\b
5888	(?i)\b(T)(was)\b
5889	(?i)\b(Wan)(na)\b
5890	(?i)\b(Wha)(t)(cha)\b
5891	(?i)\b(Whad)(dd)(ya)\b
5892	(?i)\b(can)(not)\b
5893	(?i)^cd[1-3]$
5894	(?i)^sub(s|(titles?))?$
5895	(?i)addVariable\(\"sequence\"\s*,\s*\"([^\"]+?)\"\)
5896	(?i)addVariable\(\"video\"\s*,\s*\"([^\"]*)\"\)
5897	(?i)all rights reserved+
5898	(?i)author\s*=\s*(.*)$
5899	(?i)content-encoding:
5900	(?i)editor\s*=\s*(.*)$
5901	(?i)fec\s*-\s*(\d+)(\.?$|\s+|\*BD[0-9a-f]{4}$)
5902	(?i)filename="*(?P<filename>[^\s"]*)"*
5903	(?i)incorporated|(?i)inc.
5904	(?i)true
5905	(?i)year\s*=\s*(.*)$
5906	(?im)(x-eyeconnect-token *: *([0-9a-fA-F]{32,32}))
5907	(?im)<Attribute name="owner">(.+?)</Attribute>
5908	(?im)<span class="owner[^\"]+?">[^<]+?<a [^>]+?>([^<]+?)</a></span>
5909	(?im)<title>Dailymotion\s*[\-:]\s*(.+?)</title>
5910	(?ims)(.*ENTITY.*?(?P<entity_key>\b[a-z09].*?\b) .*\"(?P<entity_value>.*)\").*
5911	(?ims).*DOCTYPE.*\[.*\]\>
5912	(?ims)</p>\n</div>.*?<!-- end content -->
5913	(?ims)<dd[^>]*>.*?</dd>
5914	(?ims)<li>.*?</li>
5915	(?ims)<p[^>]*>.*?</p>|<li(?!n)[^>]*>.*?</li>
5916	(?ims)<title[^>]*>(.*?)</title\s*>
5917	(?ims)<tr[^>]*>.*?</tr>
5918	(?ims)<ul>.*?</ul>
5919	(?ims)^.*DOCTYPE.*\[.*\]\>
5920	(?ims)class=.redirectText.>\s*<a\s*href=./wiki/([^"/]+)
5921	(?is)<(script|style).*?>.*?(</\1>)
5922	(?is)</font>(.*?)(?:</UL>|</p>)
5923	(?is)<td [^>]*>(.*?)</td>
5924	(?is)<tr [^>]*>.*?</tr>
5925	(?m)(?:^[ \t]*\n){1,}
5926	(?m)(?s).*<terms.*<locale[^>]*xml:lang="([^"]+)"[^>]*>.*
5927	(?m)(?s)</locale>.*</terms>
5928	(?m)(?s)<terms.*<locale[^>]+>
5929	(?m).*([0-9a-fA-F]{32,32}).*
5930	(?m)\n\s*
5931	(?m)^(.)
5932	(?m)^(\/\*.*?\*\/)$
5933	(?m)^.*#o3d\s+MatrixLoadOrder\b.*$
5934	(?m)^>+
5935	(?m)^Conf ([^ ]+) \(([^ ]+) ([^ ]+)(?: \[([^\]]+)\])?\)$
5936	(?m)^Failed [Ee]xample:
5937	(?m)^[\t ]*/\* *\.\. .*?\n
5938	(?m)^\s*
5939	(?m)^\s*>>>
5940	(?m)^\s+
5941	(?m)^attribute (?:\w+) (\w+)
5942	(?m)^uniform (?:\w+) (\w+)
5943	(?m)^uniform vec(\d) (\w+)\[\1\];
5944	(?m)^vendor_id\s*:\s*(\S+)\s*$
5945	(?mx) (?:^\s*$)|(?:--.*$)
5946	(?s)(?<=\n)([|][|].*?[|][|])(?=\n[^|]|\n[|][^|])
5947	(?s)(?<=\|\|)(.*?)(?=\|\|)
5948	(?s)<!--(.*?)-->[\n]?
5949	(?s)<!.*?>
5950	(?s)<!DOCTYPE .*?>
5951	(?s)<.*?>
5952	(?s)<li id="dMT-00">(.*)</li>
5953	(?s)<script>.*?</script>
5954	(?s)\S.*?/\.
5955	(?s)\[\[code( +format=".*?")?\]\](.*?)\[\[code\]\]
5956	(?s)\[\[math( +format=".*?")?\]\](.*?)\[\[math\]\]
5957	(?s)\n?\[\[code( +format=".*?")?\]\](.*?)\[\[code\]\]\n?
5958	(?s)__(.*?)__
5959	(?s)id="SUBJECT_PH".*?>(.*?)</span>
5960	(?s)id="SUB_TITLE_PH".*?>(.*?)</span>
5961	(?s)id="TEXT_PH">(.*?)</span>
5962	(?s){{(.*?)}}
5963	(?si)<\s*?(script|style|noscript)\b.*?</\1>
5964	(?sm).*version="([.0-9a-z]+)".*
5965	(?sm).*}\s*else\s+if\s*\(true\)\s*{
5966	(?sm)//SNIP-START.*
5967	(?sm)^\s*//.*?$
5968	(?sm)^\s*//SNIP-START.*?^\s*//SNIP-END
5969	(?sm)^\s*\/\*.*?^\s*\*\/
5970	(?sm)^\s*\n
5971	(?sm)^\s*load.*?$
5972	(?sm)^^(/\*.*?^\s*\*/\n*)(.*)
5973	(?sm)}\s*else\s*{.*
5974	(?x)(.+?)\s+(\S*:\S*)\s+(\S+)\s+(\S+)\s+(.*)
5975	(?x)\n            [\r\n]+(\S+)\ \n            (\S+)\ +!\ Time\ domain.\ *[\r\n]+\n            (\S+)\ +!\ Number\ of\ tiers.\ *[\r\n]+"\n
5976	(?x)\n            [\r\n]+(\S+)\n            [\r\n]+(\S+)\n            [\r\n]+.+[\r\n]+(\S+)\n
5977	(?x)\n            xmin\ =\ (.*)[\r\n]+\n            xmax\ =\ (.*)[\r\n]+\n            [\s\S]+?size\ =\ (.*)[\r\n]+ \n
5978	(?x)\n        (?P<major>[0-9]+)\n        \.(?P<minor>[0-9]+)\n        \.(?P<patch>[0-9]+)\n        (?:\-(?P<prerelease>(?:[0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*)?))?\n        (?:\+(?P<build>(?:[0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*)?))?
5979	(?x)\n        \[\s*\]\n    |   \(\s*\)\n    |   [!<>=/*%+|&^-]=?\n    |   \+\+ | --\n    |   (<<|>>)=? | ~ | && | \| | \|\|\n    |   ->\*? | \,\n
5980	(?x)\n        \[\s*\]\n    |   \(\s*\)\n    |   \+\+ | --\n    |   ->\*? | \,\n    |   (<<|>>)=? | && | \|\|\n    |   [!<>=/*%+|&^~-]=?\n
5981	(?x)\n        \\.           |  # Backslashed character\n        \(\?P<[^>]*>  |  # Named group\n        \(\?          |  # Extension group\n        \(               # Grouping parenthesis
5982	(?x)^\n        (?P<op>[<>]=?|~>?=?)?\n        (?:(?P<major>\d+)\n         (?:\.(?P<minor>\d+)\n          (?:\.(?P<patch>\d+)\n           (?P<other>[-+][a-zA-Z0-9-+.]*)?\n          )?\n         )?\n        )?$
5983	(?x)^\n        (?P<op>[<>]=?|~>?=?)?\n        (?:(?P<major>\d+|[xX*])\n         (?:\.(?P<minor>\d+|[xX*])\n          (?:\.(?P<patch>\d+|[xX*]))?\n         )?\n        )\n        (?P<other>.*)$
5984	(?xms)\n(?:\${(\d+):(.*?)})|   # A simple tabstop with default value\n(?:\$(\d+))           # A mirror or a tabstop without default value.\n
5985	(@)(\w+)
5986	(@|<|>|-|!)
5987	(ACTION|DEVPATH|KERNELS?|NAME|SYMLINK|SUBSYSTEMS?|DRIVERS?|TAG|RESULT|TEST)\s*(?:=|!)=\s*"([^"]*)"$
5988	(AIX version: .*) TCP
5989	(ALLOWED_EXTENSIONS|SKIPED_DIRS|KNOWN_MARKS|SKIPED_FILES|SHOW_EMPTY_MARKS|REQUIRE_COLON|MARK_COLORS)=+(.*?)$
5990	(ATOM|HETATM)
5991	(ATTRS?|ENV|TEST){([a-zA-Z0-9/_.*%-]+)}\s*(?:=|!)=\s*"([^"]*)"$
5992	(ATTR|ENV|IMPORT|RUN){([a-zA-Z0-9/_.*%-]+)}\s*(=|\+=)\s*"([^"]*)"$
5993	(AVERAGE|MIN|MAX|LAST)
5994	(AppKit|Foundation)\.doc
5995	(Artist:.*html">)([^<]*)
5996	(BUG:.*---\[ end trace .* \]---)
5997	(CONECT|MASTER)
5998	(DN)[0-9]{4,}
5999	(E?%0?E(?![._]?N))
6000	(ErrorReturnCode|SignalException)_((\d+)|SIG\w+)
6001	(GAUGE|COUNTER|DERIVE|ABSOLUTE)
6002	(HWPREDICT|SEASONAL|DEVSEASONAL|DEVPREDICT|FAILURES)
6003	(Input \#.*)\n(Must|At\sleast)
6004	(Invalid alias name \[)(?P<index>.*?)(\])
6005	(MODEL|ENDMDL)
6006	(NAME|SYMLINK|OWNER|GROUP|MODE|TAG|PROGRAM|RUN|LABEL|GOTO|WAIT_FOR|OPTIONS|IMPORT)\s*(?:\+=|:=|=)\s*"([^"]*)"$
6007	(NIST|BLEU) score using\s+\d+-grams = ([0-9.]+) for system "(.*)" on document "(.*)" \((\d+) segments, (\d+) words\)
6008	(NS\S+)Pointer
6009	(Notification|Undelivered Message|Delivery Report)
6010	(Numeric/arrayobject.h)
6011	(Ratification|Accession|Succession|Acceptance)
6012	(References|Bibliography)
6013	(SW)?TWIW?=W?{.*?};
6014	(Senator|Representative) (.*)
6015	(TICKET_[^\<]+)
6016	(VIOS version: .*) TCP
6017	([ \"\'\\\$])
6018	([!<>=]+)
6019	([!=]=\s*(True|False))|((True|False)\s*[!=]=)
6020	([!=]=\s*None)|(None\s*[!=]=)
6021	([# ]*?)([a-zA-Z0-9_]+)( +)([a-zA-Z0-9_\?\!<>\+=\.]+)(.*)
6022	([# ]*?)([a-zA-Z0-9_]+)( +)([a-zA-Z0-9_]+)(.*)
6023	([$]{[^}]*})
6024	([$`\\])
6025	([&|() ])
6026	([()| ])
6027	([(]+)
6028	([)]+)
6029	([*]|[:])
6030	([+*/\%^\&|-]|<<|>>|\*\*|//)=
6031	([+-])(\d\d):?(\d\d?)?
6032	([+-])?(?:(?:(\d?\d):)?(\d?\d):)?(\d?\d)\Z
6033	([+-])?(\d+[dwhms])+
6034	([+-]?\d*\.?\d+)$
6035	([+-]?\d+)
6036	([-+]?((?:\d+(?:\.\d*)?|\d*\.\d+))[eE]((?:[-+]?\d+)?)|(\d+\.\d*))
6037	([-+]?(?:\d+(?:\.\d*)?|\d*\.\d+))[dD]((?:[-+]?\d+)?)
6038	([-,])
6039	([-:. ])
6040	([-a-z]*)_.*
6041	([.#])((?:[^ \t\.#]|\.\.)+)
6042	([.*]+)
6043	([.\w]+)[.]
6044	([.]flat(\s*?[[=]))
6045	([/ 0-9.]+)
6046	([/.~\\])
6047	([/_%])
6048	([0-9,a-f]+)-([0-9,a-f]+)
6049	([0-9\-]+)
6050	([0-9\.]+) (fps|tb)
6051	([0-9])\.([0-9])\.([0-9]).*
6052	([0-9]*\.[0-9]*)
6053	([0-9]+) INFO TEST-UNEXPECTED-FAIL.*
6054	([0-9]+) as (\w+)
6055	([0-9]+) jobs currently running.*
6056	([0-9]+)(.[0-9]+)?
6057	([0-9]+).*?([0-9]+)
6058	([0-9]+).flv
6059	([0-9]+):(.+?)( \(([0-9]{4})\)\n|\n)
6060	([0-9]+)>{1}
6061	([0-9]+)[ \t]*([<>][=]?|=)[ \t]*([0-9]+)
6062	([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)
6063	([0-9]+)\s+day
6064	([0-9]+)\s+min
6065	([0-9]+)\t[+-][0-9]+\t([0-9]+)\t([0-9]+)
6066	([0-9]+)x([0-9]+)
6067	([0-9]+\.)+[0-9]+:
6068	([0-9]+\.[0-9]+\.[0-9]+).*
6069	([0-9]+\s+\-\s+)(.+)
6070	([0-9][0-9.]*)$
6071	([0-9]{0,4})(?:_sp\d*)?\.([0-9][0-9.]*)$
6072	([0-9]{2})([0-9]{2})([0-9]{4})
6073	([0-9]{3})\-([0-9]{3})\-([0-9]{4})$
6074	([0-9]{3})\.(.*)\.sh$
6075	([0-9]{4}) - ([0-9]{4})
6076	([0-9]{4}) \(([0-9]{2})\.([0-9]{2})\.\)
6077	([0-9]{4})-([0-1][0-9])-([0-3][0-9]) ([0-2][0-9]):([0-5][0-9])
6078	([0-9a-fA-F][0-9a-fA-F][:-]){2}[0-9a-fA-F][0-9a-fA-F]
6079	([0-9a-fA-F]{8}|[0-9a-fA-F]{16}) <(.*)>:
6080	([0-9a-f]+)\W(.*)
6081	([0-9a-zA-Z])([A-Z])
6082	([0-9a-zA-Z_.]+)-([0-9a-zA-Z_.]+)-py(\d[.]\d).egg$
6083	([1-9][0-9]*)([DdHhMm]|[sS]?)
6084	([1-9][0-9]*)*(.*)
6085	([1IiAa])
6086	([:\w]+)\s+(\w+);
6087	([:][ ]*)([/])(.*)([/][ismx]*)
6088	([;,\s]+)
6089	([<>&])
6090	([<>])
6091	([>}])(?=[<{])
6092	([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])
6093	([A-Z0-9])at([A-Z0-9])
6094	([A-Z0-9])dot([A-Z0-9])
6095	([A-Z0-9]+)([a-z0-9]*)
6096	([A-Z0-9][a-z]+|[A-Z0-9]+(?![a-z])|[a-z]+)
6097	([A-Z]+)(?=[a-z0-9])
6098	([A-Z]+_[a-z0-9]+\.txt)
6099	([A-Z][0-9]{2})([0-9]{3})
6100	([A-Z][A-Z]) \d\d\d\d\d
6101	([A-Z][A-Z][a-z])|([a-z][A-Z])
6102	([A-Z][a-z]+[A-Z][a-z]*)
6103	([A-Z]\w*)\s+=\s+([A-Z]\w*)
6104	([A-Z]{2}[0-9]{2,3}-[0-9]{2})
6105	([A-Z]{2}\w{8})\w{24}
6106	([A-Z_]*) = (.*)
6107	([A-Z_]+):(.+);$
6108	([A-Za-z0-9-]+): ([^\r\n]+)
6109	([A-Za-z0-9_*&]+\s+)+([&*~A-Za-z0-9_:]+)\s*\([^)]*\)\s*(const)*\s*\{
6110	([A-Za-z0-9_:]*)
6111	([A-Za-z0-9_]*)
6112	([A-Za-z0-9_]+)
6113	([A-Za-z0-9_]+\s+)+([*A-Za-z0-9_::]+)\s*\([^)]*\)
6114	([A-Za-z0-9_]+\s+)+([A-Za-z0-9_:]+)\s*\([^)]*\){0,1}\s*
6115	([A-Za-z])([A-Za-z0-9])*
6116	([A-Za-z]+(?:\[[A-Za-z,]+\])?)(.*)
6117	([A-Za-z]+)(\[[A-Za-z,]+\])?
6118	([A-Za-z]+://)?(([A-Za-z0-9]+)(:[^:@]+)?@)?([^:/]+)(:[0-9]+)?(/.*)?
6119	([A-Za-z]|-?[0-9]+\.?[0-9]*(?:e-?[0-9]*)?)
6120	([A-Za-z_0-9]+)\((.*?)\)(?:(?:\s+->\s+)\((.*?)\)(?:\s+(.*))?)?
6121	([A-Za-z_0-9]+)\((.*?)\)(?:(?:\s+->\s+)\((.*?)\))?(?:\s+(.*))?
6122	([A-Za-z_]+)\s*(::|[-=]+>)\s*(.+)
6123	([IOB])-?(\S+)?
6124	([Ii])ssue #([0-9]+)
6125	([NS])(\d\d)_(\d{6})([EW])(\d\d\d)_(\d{6})
6126	([[ ~^:?*]|\.\.)
6127	([\'"#%*?])
6128	([\'"][^\'"]*[\'"])
6129	([\"\'\s])
6130	([\$\^\*\+\.\?\{\}\[\]\(\)\|\\])
6131	([\+-].\d+.\d+,[\+-].\d+.\d+)
6132	([\+\-\^]+)
6133	([\+\?\(\)\[\]\*\.\\])
6134	([\-0-9]*)([ADIP])
6135	([\-]?\d*)\s*([A-Za-z]+([\-@]\d*[A-Za-z]+)?)
6136	([\-]\s+)(.+)
6137	([\.\d]+) ([GMK])B
6138	([\S]+)=([\S]+)
6139	([\W\-]+)
6140	([\[\]\(\)\{\}])
6141	([\[\]]+)
6142	([\\'"])[^\1]*\1
6143	([\\"\\'])
6144	([\\"])
6145	([\\/])([.,]?)([.,]?)(.*)
6146	([\\\"\\' ])
6147	([\\{}])
6148	([\d.]*%) are below the poverty line
6149	([\d.]+)([^\s]+)
6150	([\d.]+)\s*(\D.*)
6151	([\d\.]*)user ([\d\.]*)system (\d*):([\d\.]*)elapsed (\d*)%CPU
6152	([\d\:]+ (PM|AM)) ([\w ]+)
6153	([\d\D_\.\-]*:?[\d\D_\.\-]+)=(.*)
6154	([\d]+) ([\d]+)
6155	([\d]+) BP
6156	([\d]+) bp
6157	([\s\S]+) feat.([\s\S]+)
6158	([\s\xa0]+|&nbsp;)
6159	([\s]+)
6160	([\t\n])
6161	([\w ]+)(\(.*?\))?
6162	([\w-]+)\s*([\d]+):.*$
6163	([\w.+]+)\s*.*\(#?([^,]+),\s*([\w ]+),\s*([\w :]+)\)\s*\[([^\]]+)\]?
6164	([\w._-]+)
6165	([\w\-\.]+@[\w\-\.]+)
6166	([\w\-]+\s*:)\s*
6167	([\w\.-]+)\s+([^(]+).*
6168	([\w\d]+)
6169	([\w\d_\.\-])+\@(([\w\d\-])+\.)+([\w\d]{2,4})+
6170	([\w\d_]+)\Z
6171	([\w_:]+)<
6172	([\x00-\x08\x0B-\x0C\x0E-\x1F\x80-\x9F])
6173	([\x0D])
6174	([\x7F])
6175	([\x80-\xff])
6176	([\{-\~\[-\` -\&\(-\+\:-\@\/])
6177	([\{\}])
6178	([\|\{\}\\\.\+\[\]\(\)])
6179	([\r\n.]*)\r\n# 
6180	([\r]?\n)+[ \t]{1}
6181	([\x00-\x7f]+)
6182	([\xc0-\xc3])([\x80-\xbf])
6183	([^ \t\n\r\x0c\x0b\{\}]+)\s
6184	([^ ]+)=(?:(?:"([^"]+)")|(?:\'([^"]+)\')|([^ >]+))
6185	([^!])=?\|\|
6186	([^!]*)!?([^@]*)@?(.*)
6187	([^!]+)(?:!([^+-]+)?([+-]\S+)?)?
6188	([^"])%\((.+)\)s([^"])
6189	([^#]*)(?:#.*)?
6190	([^%]|^)\\makeindex(\[([\w]+)\])?
6191	([^() ]+)
6192	([^*]+)\*(\d+)
6193	([^,(\s]+[.]spacesaver[(][)])
6194	([^,]+)
6195	([^-_a-zA-Z0-9!@#%&=,/\'";:~`\$\^\*\(\)\+\[\]\.\{\}\|\?\<\>\]+|[^\s]+)
6196	([^.()]+\.){5}
6197	([^/]+)/
6198	([^0-9]*)
6199	([^: \t\n]*)\s*:\s*(".*"|[^ \t\n]*)
6200	([^:]*):(.*)
6201	([^:]*):(\d+): (Emergency stop)
6202	([^:]*):(\d+): Emergency stop
6203	([^:]*):(\d+): LaTeX Error:(.*)
6204	([^:]*)\:(.*)
6205	([^:]+):(\S+)
6206	([^:]+)://
6207	([^:]+):\s*(.*)
6208	([^<]*)<([\w]*|/)>
6209	([^<]+) (<[^>]*>)$
6210	([^= ]+)=(?:"([^"]*)"|([^,]+)),?
6211	([^=]+)=(.+)
6212	([^=]+)=(\w+(?:[.]\w+)*):(\w+(?:[.]\w+)*)$
6213	([^@#:]*)[@:]([^#:]+)?(?::(\d+(?:-\d+)?(?:,\d+(?:-\d+)?)*))?
6214	([^@]+)@(.+)
6215	([^A-Za-z0-9\._-])
6216	([^\([]+)
6217	([^\-\.]*)-([\d+.\-]+)$
6218	([^\.\/\\]+)\.py
6219	([^\.])+\..*$
6220	([^\/]+)$
6221	([^\:])\:([a-zA-Z_0-9]*)(\s*)=\>(\s*)
6222	([^\\\/]+)$
6223	([^\\])\$
6224	([^\d]+)(\d+)
6225	([^\r\n]*)(?:\r\n|\n\r|\n|\r)
6226	([^\s]*)\s*(\t|  )\s*([^\s]*)
6227	([^\s]+)\s*<->\s*([^\s]+)
6228	([^\s].*?)(\s|$)
6229	([^\w.@+-/]|[,;?!])*
6230	([^\x00-\x7f])
6231	([^\{])<
6232	([^\n])\n([^\n])
6233	([^_]|^)___(.+?)___([^_]|$)
6234	([^a-z0-9\.-])
6235	([^a-zA-Z0-9]*)([a-zA-Z0-9]+)([^a-zA-Z0-9]*)
6236	([^a-zA-Z_0-9])
6237	([^a-z]+)\s*([a-z]+)?
6238	([`$\\"])
6239	([a-fA-F0-9]{2}:){5}[a-fA-F0-9]{2}
6240	([a-fA-F0-9]{2}[:|\-]?){6}
6241	([a-z ]+)(\([0-9]+\))?
6242	([a-z()!]+)\s*(.*)
6243	([a-z0-9])AT([a-z0-9])
6244	([a-z0-9])DOT([a-z0-9])
6245	([a-zA-Z-]+)\s*\((.*)\)
6246	([a-zA-Z0-9/]*Command.java)
6247	([a-zA-Z0-9]+)
6248	([a-zA-Z0-9_.]+)
6249	([a-zA-Z\d-]+)\(([a-zA-Z\d]+)\)
6250	([a-zA-Z]+[.]? \d+\, \d\d\d\d at \d+(\:\d+)? [ap]\.m\. [A-Z]{1,5})|( \((\d+ hour(s)?(, )?)?(\d+ minute(s)?(, )?)?(\d+ second(s)?(, )?)?\))
6251	([a-zA-Z][a-zA-Z]|[iIxX]-([a-zA-Z])+)(-[a-zA-Z])*
6252	([a-zA-Z]|[0-9])(([a-zA-Z]|[0-9]|-)*([a-zA-Z]|[0-9]))?$
6253	([a-zA-Z_.]+)\(([0-9]+)\):.*
6254	([a-zA-Z_]+)
6255	([a-zA-Z_]+)=:([a-zA-Z0-9_\./:,-]+)
6256	([a-zA-Z_][a-zA-Z0-9_.]*\.[a-zA-Z0-9_.]+)
6257	([a-zA-Z_][a-zA-Z0-9_]*)$
6258	([a-zA-Z_][a-zA-Z0-9_]*)
6259	([a-zA-Z_][a-zA-Z0-9_]*)((?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)$
6260	([a-zA-Z_]\w*)\s*(.*)
6261	([a-zA-z_]+)@
6262	([a-z])([A-Z])(?=[a-z])
6263	([a-z]*) ([\d-]+) ([a-z]*) - ([a-z]*) ([\d-]+) ([a-z]*) / (\d+)[\s\t]*([0-9:, -]+)
6264	([a-z]*) ([\d-]+) ([a-z]*) - ([a-z]*) ([\d-]+) ([a-z]*) [\s\t]*([0-9:, -]+)
6265	([a-z]*) ([\d-]+) ([a-z]*)[\s\t]*([0-9:, -]+)
6266	([a-z]*) ([\d-]+) - ([\d-]+) / (\d+)[\s\t]*([0-9:, -]+)
6267	([a-z]*) ([\d-]+) - ([\d-]+)[\s\t]*([0-9:, -]+)
6268	([a-z]*) ([\d-]+) - ([a-z]*) ([\d-]+) / (\d+)[\s\t]*([0-9:, -]+)
6269	([a-z]*) ([\d-]+) - ([a-z]*) ([\d-]+)[\s\t]*([0-9:, -]+)
6270	([a-z]*) ([\d-]+)[\s\t]+([0-9:, -]+)
6271	([a-z]*)[\s\t]+([0-9:, -]+)
6272	([a-z]*)_.*
6273	([a-z]+)([A-Z])
6274	([a-z]+)(\([0-9]+\))?
6275	([a-z]+)=(".*?"|[^,]*)(?:\Z|, *)
6276	([a-z]+|[A-Z]+)\n
6277	([a-z][a-z0-9]*)\+$
6278	([a-z]\d?)=\s+(\d+\.\d+)
6279	([abc|rc])[\-\.](\d+)$
6280	([bB]ug#?\D#?(\d+))
6281	([d-]  )?(setuptools|distribute)-\S+-py
6282	([hsv]d[a-z]+3)$
6283	([zZ])|([\-\+][0-9]{2}:[0-9]{2})
6284	([{}_#%&$])
6285	([|&])
6286	(\'[^\']*\'|"[^"]*"|//?|\(\)|==?|[/.*\[\]\(\)@])|([^/\[\]\(\)@=\s]+)|\s+
6287	(\'[^\']\'|[-=]+>|"[^"]+"|\'[^\']+\'|\|)
6288	(\'\'|"")$
6289	(\'|")
6290	(\'|")(.+)(\'|")
6291	(\"|\\'|\\)
6292	(\$)
6293	(\$?)([A-I]?[A-Z])(\$?)(\d+)
6294	(\$[\$\(\)]|\$[_a-zA-Z][\.\w]*|\${[^}]*}|\s+|[^\s\$]+|\$)
6295	(\$[^ ]+)\b
6296	(\$\([^\)]*\))
6297	(\$|\\\()\\alpha(\$|\\\)) latex math
6298	(\(.{3}\):\d+)
6299	(\([0-9\?]{4}(?:/[IVXLCDM]+)?\)(?: \(mini\)| \(TV\)| \(V\)| \(VG\))?)
6300	(\*)$
6301	(\*\*)(?=\S)([^\r]*?\S[*_]*)\1
6302	(\*|[0-9])
6303	(\+|-)?(\d|\.)+
6304	(\+|\s|%20)+
6305	(\-)\s*\d{1,2}
6306	(\.?)(\s*)(.*)(\s*)
6307	(\.\. )|(\d+.)|(-   )
6308	(\.\d*)?Z
6309	(\.pc|/bin/.+-config)$
6310	(\.py)$
6311	(\.|\?|!)$
6312	(\/app\/views|controllers|helpers|test|spec)\/(.*)
6313	(\/display[^"]*)
6314	(\/display[^>]*)([^<]*)
6315	(\:[_a-zA-Z]\w*)
6316	(\<.*\@*\>)
6317	(\<.*\@.*\>)
6318	(\<div[^\>]+\>)|(\</div\>)
6319	(\A|\s)#(\w+)
6320	(\A|\s)@(\w+)
6321	(\A|^)module\s+(?P<name>\w+)\s*(!.*|)$
6322	(\D*)(\d*)
6323	(\D*)(\d*)(.*)
6324	(\D+)
6325	(\D[123])_D
6326	(\D|^)\d{1,2}\W*\d00
6327	(\S)
6328	(\S)\s+\)
6329	(\S*)[-](\d+\.\d+\.*\d*)\S*
6330	(\S*)\s*-\*-
6331	(\S+) Version (\S+)
6332	(\S+)([ \t]*?)(.*)
6333	(\S+)(\s+)(\S+)
6334	(\S+)/$
6335	(\S+):\s*(.*)
6336	(\S+):\s*(.+)
6337	(\S+)\s*=\s*(\S+)
6338	(\S+)\s*[.]\s*info\s*[(]\s*[)]
6339	(\S+)\s*[.]\s*is_c_array\s*[(]\s*[)]
6340	(\S+)\s*[.]\s*is_f_array\s*[(]\s*[)]
6341	(\S+)\s*[.]\s*isbyteswapped\s*[(]\s*[)]
6342	(\S+)\s*[.]\s*new\s*[(]\s*(\S+)\s*[)]
6343	(\S+)\s*[.]\s*repeat\s*[(]\s*(\S+)\s*[)]
6344	(\S+)\s*[.]\s*setimag\s*[(]\s*(\S+)\s*[)]
6345	(\S+)\s*[.]\s*setimaginary\s*[(]\s*(\S+)\s*[)]
6346	(\S+)\s*[.]\s*setreal\s*[(]\s*(\S+)\s*[)]
6347	(\S+)\s*[.]\s*setshape\s*[(]\s*(\S+)\s*[)]
6348	(\S+)\s*[.]\s*togglebyteorder\s*[(]\s*[)]
6349	(\S+)\s*[.]\s*type\s*[(]\s*[)]
6350	(\S+)\s+(\S+)(,| )( .*)?
6351	(\S+)\s+(\S+)\s+([BIO])-?(\S+)?
6352	(\S+)\s+(\S+)\s+([IOB])-?(\S+)?
6353	(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(.+)
6354	(\S+)\s+(\S+)\s+(\S+)\s+(\d+)/(\d+)\s+
6355	(\S+)\s+(\d)\s+\d+\s+\S+$
6356	(\S+)\s\((.*)\)$
6357	(\S+?)\s*=\s*(.)
6358	(\S+[.]savespace[(].*[)])
6359	(\S+\s*)[.]shape\s*=[^=]\s*(.+)
6360	(\S+\s*[(].+),\s*savespace\s*=.+\s*[)]
6361	(\S+\s+\S+)\s+(\S+)\s+:
6362	(\W)all\( *(\S+) *(\S+) *(.*?) *\)(\W)
6363	(\W)any\( *(\S+) *(\S+) *(.*?) *\)(\W)
6364	(\W)len\( *(\S+) *\)(\W)
6365	(\[(?P<link>[^\] ]+)( )+(?P<txt>([^\]])+)\])
6366	(\[(?P<link>[^\]]+(.jpg|.jpeg|.gif|.png))\])
6367	(\[(?P<link>[^\]]+)\])
6368	(\[.*?\])
6369	(\[.*\])
6370	(\[.+?\])
6371	(\[.{16,16}[^,)]*?),.*?\]\)
6372	(\[[^]]*\])
6373	(\[\"(?P<wikilink>([^\]\"]+))\" (?P<txt>([^\]]+))\])
6374	(\[\"(?P<wikilink>[^\]\"]+)\"\])
6375	(\[\[)([^$]+)(\]\])
6376	(\[\])*
6377	(\\")
6378	(\\)((@\d:)?[\w @\-\./\(\),\[\]]*)(\t*:) *(.*)
6379	(\\*)("""|\'\'\')
6380	(\\*)\n
6381	(\\.|[^#])*(#.*)?
6382	(\\\*)([\w ]+)
6383	(\\x[a-zA-Z0-9]{2}|\\[0-7]{1,3}|\\.)
6384	(\b[^ ,=]+)="?([^",]+)"?
6385	(\d).(\d)-RELEASE
6386	(\d).(\d+) \((\d+)\)
6387	(\d)/10
6388	(\d)Q(\d\d)
6389	(\d)Q(\d\d\d\d)
6390	(\d)\/10
6391	(\d*):?(.*)-(.*)-(.*)\.(.*)$
6392	(\d*)\.
6393	(\d*.?\d+).(h|hr|hrs|mins|min)+
6394	(\d*.?\d+).(sec|hour|day|week|month|year)+
6395	(\d+(_\d+)+)
6396	(\d+) - (\d+)$
6397	(\d+) bytes @(0x[0-9,a-f]+)
6398	(\d+) bytes were allocated in (\d+) allocations
6399	(\d+) calls to (.{20}) required (\d+) cycles.
6400	(\d+) leaks? excluded
6401	(\d+) of (\d+) tests passed
6402	(\d+) seconds
6403	(\d+)( *\* *)\(
6404	(\d+)(.*)\s+/.*
6405	(\d+)(\s*-\s*(\d+))?(\s*([a-zA-Z]+))?
6406	(\d+)-(\d+) (\w+)
6407	(\d+)-(\d+)
6408	(\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)
6409	(\d+)-(\d+)-(\d+)(?: (\d+):(\d+):(\d+)(?:\.(\d+))?)?
6410	(\d+)-(\d+)/(\d+)
6411	(\d+)-(\d+):(\d+):(\d+)
6412	(\d+)->(.*)
6413	(\d+)-\s*(\d+)-\s*(\d+)
6414	(\d+).(\d+).(\d+).(\d+)
6415	(\d+).html
6416	(\d+)/(\d+)/(\d+) (\d+):(\d+):(\d+)
6417	(\d+)0+(\d\d+)
6418	(\d+):(\d+)
6419	(\d+):(\d+):(\d+)
6420	(\d+):(\d\d)\Z
6421	(\d+)Undefined=(\d+) Submitted=(\d+) Waiting=(\d+) Ready=(\d+) Scheduled=(\d+) Running=(\d+) Done=(\d+) Cleared=(\d+) Aborted=(\d+) Cancelled=(\d+) Unknown=(\d+) Purged=(\d+)
6422	(\d+)\((\d+)\)
6423	(\d+)\.(\d+)(.+\d+)
6424	(\d+)\.(\d+)(\.\d+)?
6425	(\d+)\.(\d+).(\d+).*
6426	(\d+)\s(\D+)\s(\d{4})
6427	(\d+)\s(\d+)\sR[^a-zA-Z]
6428	(\d+)\s*
6429	(\d+)\s+\w+\s+(\w+).*
6430	(\d+)\s+\w+\s+(\w+)\s+(\w+)\s+\w+\s+(\w+).*
6431	(\d+)x(\d+)$
6432	(\d+)x(\d+)
6433	(\d+.*?)/
6434	(\d+.\d+.\d+.\d+)"
6435	(\d+/\d+\/\d+)\s+(\w+):\s+(.*)
6436	(\d+:)*(.*)(_.*)*
6437	(\d+[dwhms])
6438	(\d+\.?\d*)\s*(second|minute|hour|day|week|month|year|[hdwmy])s?\s*(?:ago)?$
6439	(\d+\.\d+(\.\d+)?)
6440	(\d+\.\d+).*
6441	(\d+\.\d+\.\d+)[T\.](\d+(\.\d+)*)$
6442	(\d+\/\d+\/\d+\s+\d+:\d+)
6443	(\d+\s)?(\w+?\.?\s\d+:\d+)(.\d+)?(\d+(.\d+)?)*
6444	(\dQ)|(Q[:.]?\d)
6445	(\d[.]\d)([.].*\d)?$
6446	(\d[Aa])|(A[:.]?\d)
6447	(\d\.\d)
6448	(\d\.\d\.?\d*)
6449	(\d\d)/(\d\d)/(\d\d\d\d)
6450	(\d\d)Q(\d)
6451	(\d\d)\s(\D+)\s(\d\d\d\d)
6452	(\d\d:\d\d)
6453	(\d\d?)
6454	(\d\d?):(\d\d)(:(\d\d))? *([aApP]\.?[mM]\.?)?$
6455	(\d\d\d\d)$
6456	(\d\d\d\d)
6457	(\d\d\d\d)-(\d\d)-(\d\d)
6458	(\d\d\d\d)Q(\d)
6459	(\d\d\d\d-\d\d-\d\d \d\d:\d\d:\d\d)
6460	(\d_\w{6})
6461	(\d{0,3}\.\d{0,3}\.\d{0,3}\.\d{0,3})\.(\d+)
6462	(\d{1,2}) (\d{1,2})[ ]?(\d{4})
6463	(\d{1,2}/\d{1,2}/\d{4,4})
6464	(\d{1,3}(\,\d{3})*|\d+)(\.\d+)?
6465	(\d{10})
6466	(\d{1}) (\d{2}) (\d{3}) (\w{3})
6467	(\d{2})(\d{2})(\w{3})\Z
6468	(\d{2}).(\d{2})
6469	(\d{2})/(\d{2})/(\d{4})
6470	(\d{2}):(\d{2})
6471	(\d{3})
6472	(\d{3})\s*(\[not run\])\s*(.*)
6473	(\d{4,4})[\.|\s](\d+)[\.|\s](\d+)
6474	(\d{4}(?:\.\d{2}){2})\.(\d{2}(?:\.\d{2}){3})$
6475	(\d{4})-(\d{2})-(\d{2}) - (\d{4})-(\d{2})-(\d{2}) / (\d+)[\s\t]*([0-9:, -]+)
6476	(\d{4})-(\d{2})-(\d{2}) - (\d{4})-(\d{2})-(\d{2})[\s\t]*([0-9:, -]+)
6477	(\d{4})-(\d{2})-(\d{2}) / (\d+)[\s\t]*([0-9:, -]+)
6478	(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d+)?)(?:(Z)|([+-])(\d{2}):(\d{2}))
6479	(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})(.(\d{2}))?Z
6480	(\d{4})-(\d{2})-(\d{2})[\s\t]*([0-9:, -]+)
6481	(\d{4}):(\d\d):(\d\d) (\d\d):(\d\d):(\d\d)
6482	(\d{4}-\d{2}-\d{2} |)(\d{2}:\d{2}:\d{2}) \[([A-Z]+)\] (?:\[Minecraft\] )?(.*)
6483	(\d{4}-\d{2}-\d{2})-(.*).markdown
6484	(\d{4}s?|\d{2}s)
6485	(\d{8}-\d{6})
6486	(\d|\.)+
6487	(\n|\n__doc__\s*=(\s*|\s*\\\s*\n))("""([^"]*)"""|\\'\\'\\'([^\\']*)\\'\\'\\'|"([^"]*)"|\\'([^\\']*)\\')
6488	(\n|\r\n|\r|[ \t]+|\S+)
6489	(\n|^)%
6490	(\n|^)--- *(\n|$)
6491	(\r\n|\r|\n)
6492	(\r| |\n|\t)+
6493	(\s)*#begin-fold:
6494	(\s)*File "(.*?)", line \d.+
6495	(\s)*class(\s)+(\w)+.*
6496	(\s)*class(\s)+|:|\(
6497	(\s)*class.+\:$
6498	(\s)*def |(\s)*class |(\s)*#begin-fold:|(.)*{$
6499	(\s)*def(\s)+(\w)+(\s)*\(.*
6500	(\s)*except\s*.*\:$
6501	(\s)+
6502	(\s)+self\.(\w)+\(\)
6503	(\s)--
6504	(\s)---
6505	(\s*"float_value": -?\d+)\.[^\d]
6506	(\s*&|)(?P<line>.*)
6507	(\s*(>>>|\.\.\.)?\s*)from werkzeug import\s+
6508	(\s*)#\!([\w+-][\w+-/]*)
6509	(\s*)(.*)$
6510	(\s*)(File "(.*))\n
6511	(\s*)([A-F0-9]*) /\* ([^ ]+) \*/
6512	(\s*DRI_CONF_DESC\s*\(\s*)([a-z]+)(\s*,\s*)(gettext\s*\(\s*")(.*)("\s*\))(\s*\)[ \t]*\\?)$
6513	(\s*DRI_CONF_DESC_BEGIN\s*\(\s*)([a-z]+)(\s*,\s*)(gettext\s*\(\s*")(.*)("\s*\))(\s*\)[ \t]*\\?)$
6514	(\s*DRI_CONF_ENUM\s*\([^,]+,\s*)(gettext\s*\(\s*")(.*)("\s*\))(\s*\)[ \t]*\\?)$
6515	(\s*[\w\W]*?(?:\.(\s|$)|[\n][\t ]*[\n]))
6516	(\s*\t*location)\=(.*)
6517	(\s*\t*max_filesize)\=(\d+[kKMmGgTt]?)
6518	(\s*\t*num_files)\=(.*)
6519	(\s*\t*num_files)\=(\d+)
6520	(\s*configuration:)(.*)\n
6521	(\s*templates_path\s*=\s*\[)(.*)
6522	(\s+$| +\t)
6523	(\s+(</span>)?$| +\t)
6524	(\s+)(.*)
6525	(\s+)(\w+)(\s+)--(\s+)([\w*])
6526	(\s+)(\w+)(\s+)---(\s+)([\w*])
6527	(\s+)\&(\s+)
6528	(\s+)exit 1
6529	(\s+.*)|(^$)
6530	(\s+|\A)#([a-zA-Z0-9\-_]*)\b
6531	(\s+|\A)@([a-zA-Z0-9\-_]*)\b
6532	(\s\#[^\n]+\n)
6533	(\s\/\/[^\n]+\n)
6534	(\s|$)
6535	(\s|_)+
6536	(\w*)(\[.*])
6537	(\w*)=(\w*)
6538	(\w+ \d+) was adopted by \(Record (\d+)\): (\d+) Yeas, (\d+) Nays, (\d+) Present
6539	(\w+ \d{1,2}, \d{4,4})
6540	(\w+(?:/\w+)?|[-=]+>|"[^"]+"|\'[^\']+\'|\|)
6541	(\w+(?:/\w+)?|\[[01]?\.\d+\]|[-=]+>|"[^"]+"|\'[^\']+\'|\|)
6542	(\w+(?:\+\d)?)(?:\s*\((.*)\))?
6543	(\w+(?:\+\d)?)\s*\((.*)\)
6544	(\w+(?:\.\w+)*)$
6545	(\w+) (\d+), (\d+) @ (\d+):(\d+) (am|pm)
6546	(\w+) (\w)\. (\w+)
6547	(\w+) = {
6548	(\w+)(?:=([^\s;]+))?
6549	(\w+)(?:\:(\d+))?(?:\:([\/\\w+.\w+.\-]+))?
6550	(\w+)(?:\:(\w+))?
6551	(\w+)(?:\:(\w+))?@([\w-]+(?:%)?(?:\.[\w-]+)*|%)
6552	(\w+)([.#])(\w+)
6553	(\w+).py$
6554	(\w+)/../\1
6555	(\w+): 
6556	(\w+):(.*$)
6557	(\w+)::\1(\s*)\((.*)\)(\s*):(\s*)Expression\(EXPRESSION_CONSTRUCTOR_PARAMETER_VALUES\)
6558	(\w+):\s+(\d+)
6559	(\w+)="(.*?)"
6560	(\w+)="([^"]+)"
6561	(\w+)=(\w+)
6562	(\w+)[ ]+- ([\w /,]+)
6563	(\w+)[^>]*>
6564	(\w+)\(
6565	(\w+)\((-?\d+.?\d*),(-?\d+.?\d*)\)
6566	(\w+)\(.*
6567	(\w+)\.(\d+)\:\s*(.*)
6568	(\w+)\.(\w+)\.(\w+)\.(\w+)
6569	(\w+)\s
6570	(\w+)\s([A-Z])\.$
6571	(\w+)\s*(.*)
6572	(\w+)\s*District\s*(\d+)
6573	(\w+)\s*\(
6574	(\w+)\s+(.*)
6575	(\w+)\s+(\d+)
6576	(\w+)\s+(\w+)\s+(\d+)\s+(\d\d:\d\d:\d\d)\s+(\d\d\d\d)
6577	(\w+)by.*group
6578	(\w+://)(.+)
6579	(\w+://)?([\w\.]+)
6580	(\w+;)
6581	(\w+?)\(
6582	(\w+\()
6583	(\w+\d+-cd\d+)
6584	(\w+\d+-cd\d+): .*
6585	(\w+|-+>|=+>|"[\w ]+"|\\'[\w ]+\\'|\|)
6586	(\w+|-+>|=+>|"[\w\\' ]+"|\\'[\w ]+\\'|\|)
6587	(\w+|[-\.\d]+| |\n|.|,|:|!|\?)
6588	(\w:)?(\w*)-?(\w*)
6589	(\w:[/\\])(.*)
6590	(\w\w:\w\w.\w) "[^"]+ \[\w{4}\]" "[^"]+ \[(\w{4})\]" "[^"]+ \[(\w{4})\].*
6591	(\w{1,4}\s+\d{1,2}\s+\d\d:\d\d:\d\d)(\s+[\w\d\.\/\@]+)
6592	(\x0d\x0a|[\x0d\x0a])$
6593	(\{.+\})
6594	(\{[_a-zA-Z][^{}]*(?:\{[^{}]*\}[^{}]*)*\})
6595	(\{\})*$
6596	(\{\})*
6597	(\|\|\|)
6598	(\n?)-  ([a-zA-Z_.-]+)-script.py\n-  \2.exe\n
6599	(\n\[\[[a-z][a-z][\w-]*:[^:\]]+\]\])+$
6600	(\n\s*)(built on.*)(\n)
6601	(\n\r)|(\r\n)
6602	(\n|^)\s*\*\s*
6603	(\xd0\xb0\xd0\xb2\xd1\x82\xd0\xbe\xd0\xb2\xd0\xbe)
6604	(\xd0\xb0\xd0\xba\xd0\xb0\xd0\xb4\xd0\xb5\xd0\xbc\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6605	(\xd0\xb1\xd0\xb0\xd0\xbb\xd1\x82\xd0\xb8\xd0\xb9\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6606	(\xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80|\xd0\xb1-\xd1\x80\.?)\s?(\xd0\xb0\xd0\xb4\xd0\xbc.|\xd0\xb0\xd0\xb4\xd0\xbc\xd0\xb8\xd1\x80\xd0\xb0\xd0\xbb\xd0\xb0) \xd1\x83\xd1\x88\xd0\xb0\xd0\xba\xd0\xbe\xd0\xb2\xd0\xb0
6607	(\xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80|\xd0\xb1-\xd1\x80\.?)\s?(\xd0\xb4\xd0\xbc\.?|\xd0\xb4\xd0\xbc\xd0\xb8\xd1\x82\xd1\x80\xd0\xb8\xd1\x8f) \xd0\xb4\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe
6608	(\xd0\xb1\xd1\x83\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f|\xd0\xb1\xd1\x83\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb0\xd0\xbb\xd0\xbb\xd0\xb5\xd1\x8f)
6609	(\xd0\xb2 \xd1\x86\xd0\xb5\xd0\xbd\xd1\x82\xd1\x80)
6610	(\xd0\xb2\xd0\xb0\xd1\x81\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6611	(\xd0\xb2\xd0\xb5\xd1\x82\xd0\xb5\xd1\x80\xd0\xb0\xd0\xbd\xd0\xbe\xd0\xb2)
6612	(\xd0\xb2\xd0\xbb\xd0\xb0\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6613	(\xd0\xb2\xd1\x8b\xd0\xb1\xd0\xbe\xd1\x80\xd0\xb3\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6614	(\xd0\xb3\xd0\xbe\xd1\x80\xd1\x8c\xd0\xba\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6615	(\xd0\xb3\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xb2\xd0\xbe\xd1\x80)
6616	(\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\.)
6617	(\xd0\xb4\xd0\xb5\xd0\xb2\xd1\x8f\xd1\x82\xd0\xba\xd0\xb8\xd0\xbd\xd0\xbe)
6618	(\xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6619	(\xd0\xb4\xd1\x8b\xd0\xb1\xd0\xb5\xd0\xbd\xd0\xba\xd0\xbe)
6620	(\xd0\xb5\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6621	(\xd0\xb7\xd0\xb2\xd0\xb5\xd0\xb7\xd0\xb4\xd0\xbd\xd0\xb0\xd1\x8f|\xd0\xb7\xd0\xb2\xd0\xb5\xd0\xb7\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb9|\xd0\xb7\xd0\xb2\xd1\x91\xd0\xb7\xd0\xb4\xd0\xbd\xd0\xb0\xd1\x8f|\xd0\xb7\xd0\xb2\xd1\x91\xd0\xb7\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb9)
6622	(\xd0\xba\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xbe\xd0\xb4)
6623	(\xd0\xba\xd1\x83\xd0\xbf\xd1\x87\xd0\xb8\xd0\xbd\xd0\xbe)
6624	(\xd0\xbb\xd0\xb0\xd0\xb4\xd0\xbe\xd0\xb6\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6625	(\xd0\xbb\xd0\xb5\xd1\x81\xd0\xbd\xd0\xb0\xd1\x8f)
6626	(\xd0\xbb\xd0\xbe\xd0\xbc\xd0\xbe\xd0\xbd\xd0\xbe\xd1\x81\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6627	(\xd0\xbb\xd1\x8e\xd0\xb1\xd0\xbe\xd0\xb9|\xd0\xbb\xd1\x8e\xd0\xb1\xd0\xbe\xd0\xbc)
6628	(\xd0\xbc\xd0\xb0\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6629	(\xd0\xbc\xd0\xbe\xd1\x81\xd0\xba\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6630	(\xd0\xbc\xd0\xbe\xd1\x81\xd0\xba\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xb2\xd0\xbe\xd1\x80\xd0\xbe\xd1\x82\xd0\xb0)
6631	(\xd0\xbd\xd0\xb0\xd1\x80\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6632	(\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x80\xd0\xb5\xd0\xb2\xd0\xbe|\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x80\xd0\xb5\xd0\xb5\xd0\xb2\xd0\xbe)
6633	(\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd1\x87\xd0\xb5\xd1\x80\xd0\xba\xd0\xb0\xd1\x81\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6634	(\xd0\xbe\xd0\xb1\xd1\x83\xd1\x85\xd0\xbe\xd0\xb2\xd0\xbe)
6635	(\xd0\xbe\xd0\xb7\xd0\xb5\xd1\x80\xd0\xba\xd0\xb8)
6636	(\xd0\xbf\.?|\xd0\xbf\xd0\xb0\xd1\x80\xd0\xba) \xd0\xbf\xd0\xbe\xd0\xb1\xd0\xb5\xd0\xb4\xd1\x8b
6637	(\xd0\xbf\xd0\xb0\xd1\x80\xd0\xbd\xd0\xb0\xd1\x81)
6638	(\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6639	(\xd0\xbf\xd0\xb8\xd0\xbe\xd0\xbd\xd0\xb5\xd1\x80\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6640	(\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xb0\xd0\xbb\xd0\xb5\xd0\xba\xd1\x81\xd0\xb0\xd0\xbd\xd0\xb4\xd1\x80\xd0\xb0|\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xb0.|\xd0\xbf\.?\s?\xd0\xb0\.?|\xd0\xbf\.?\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xba\xd1\x81\xd0\xb0\xd0\xbd\xd0\xb4\xd1\x80\xd0\xb0)\s?\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe
6641	(\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xb2\xd0\xbe\xd1\x81\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f|\xd0\xbf\.?\s?\xd0\xb2\xd0\xbe\xd1\x81\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f|\xd0\xbf\xd0\xbb\.?\s?\xd0\xb2\xd0\xbe\xd1\x81\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f)
6642	(\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xbd\xd0\xb0|\xd0\xbf\.?\s?\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xbd\xd0\xb0)
6643	(\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xbc\xd1\x83\xd0\xb6\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0|\xd0\xbf\.?\s?\xd0\xbc\xd1\x83\xd0\xb6\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0)
6644	(\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6645	(\xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x80\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6646	(\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xb0\xd1\x80\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6647	(\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82|\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf|\xd0\xbf|\xd0\xbf\xd1\x80\xd1\x82|\xd0\xbf\xd1\x80-\xd1\x82)\.?\s?\xd0\xb1\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb5\xd0\xb2\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2
6648	(\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6649	(\xd1\x80\xd1\x8b\xd0\xb1\xd0\xb0\xd1\x86\xd0\xba\xd0\xbe\xd0\xb5)
6650	(\xd1\x81\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f)
6651	(\xd1\x81\xd0\xbd\xd0\xb8\xd0\xbc\xd1\x83|\xd1\x81\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbc|\xd1\x81\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x82|\xd0\xb0\xd1\x80\xd0\xb5\xd0\xbd\xd0\xb4\xd1\x83\xd0\xb5\xd0\xbc|\xd0\xb8\xd1\x89\xd0\xb5\xd0\xbc|\xd0\xb8\xd1\x89\xd1\x83 \d-?\xd0\xba|\xd0\xb8\xd1\x89\xd1\x83 \xd0\xbe\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xba|\xd0\xb8\xd1\x89\xd1\x83 \xd0\xba\xd0\xb2\xd0\xb0\xd1\x80\xd1\x82\xd0\xb8\xd1\x80\xd1\x83|\xd0\xb8\xd1\x89\xd1\x83 \xd1\x82\xd1\x80\xd0\xb5\xd1\x85\xd0\xba)
6652	(\xd1\x81\xd0\xbf\xd0\xb0\xd1\x81\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6653	(\xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd1\x82\xd0\xb5\xd1\x85\.?\s?\xd0\xb8\xd0\xbd\xd1\x81\xd1\x82\xd0\xb8\xd1\x82\xd1\x83\xd1\x82|\xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\.?\s?\xd0\xb8\xd0\xbd\xd1\x82\xd1\x81\xd1\x82\xd0\xb8\xd1\x82\xd1\x83\xd1\x82|\xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xba\xd0\xb0)
6654	(\xd1\x83\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f)
6655	(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xb3\xd0\xbe\xd1\x80\xd1\x87\xd0\xb0\xd0\xba\xd0\xbe\xd0\xb2\xd0\xb0
6656	(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd0\xbf\xd0\xbe\xd0\xb4\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe
6657	(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd1\x81\xd0\xba\xd0\xbe\xd0\xb1\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
6658	(\xd1\x83\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0|\xd1\x83\xd0\xbb.|\xd1\x83\xd0\xbb) \xd1\x81\xd1\x82\xd0\xb0\xd1\x80\xd0\xbe\xd0\xba\xd0\xb0\xd1\x87\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
6659	(\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6660	(\xd1\x85\xd0\xbe\xd0\xb7\xd1\x8f\xd0\xb8\xd0\xbd\xd0\xb0|\xd1\x85\xd0\xbe\xd0\xb7\xd1\x8f\xd0\xb8\xd0\xbd|\xd0\xb1\xd0\xb5\xd0\xb7 \xd0\xba\xd0\xbe\xd0\xbc\xd0\xb8\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8|\xd0\xb1\xd0\xb5\xd0\xb7 \xd0\xb0\xd0\xb3\xd0\xb5\xd0\xbd\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0|\xd0\xb0\xd0\xb3\xd0\xb5\xd0\xbd\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0 \xd0\xbd\xd0\xb5|\xd1\x87\xd0\xb0\xd1\x81\xd1\x82\xd0\xbd\xd0\xbe\xd0\xb5|\xd0\xb0\xd0\xb3\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb0\xd0\xbc \xd0\xbd\xd0\xb5|\xd0\xb1\xd0\xb5\xd0\xb7 \xd0\xbf\xd0\xbe\xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2|\xd0\xbd\xd0\xb5 \xd0\xb0\xd0\xb3\xd0\xb5\xd0\xbd\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe)
6661	(\xd1\x87\xd0\xb5\xd1\x80\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd1\x87\xd0\xba\xd0\xb0|\xd1\x87\xd1\x91\xd1\x80\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd1\x87\xd0\xba\xd0\xb0)
6662	(\xd1\x87\xd0\xb5\xd1\x80\xd0\xbd\xd1\x8b\xd1\x88\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f)
6663	(\xd1\x8d\xd0\xbb\xd0\xb5\xd0\xba\xd1\x82\xd1\x80\xd0\xbe\xd1\x81\xd0\xb8\xd0\xbb\xd0\xb0|\xd1\x8d\xd0\xbb\xd0\xb5\xd0\xba\xd1\x82\xd1\x80\xd0\xbe-\xd1\x81\xd0\xb8\xd0\xbb\xd0\xb0)
6664	(^#[0-9]+$|^#[0-9]+\s|\s#[0-9]+\s|\s#[0-9]+$|\s#[0-9]+.|\s#[0-9]+\?$)
6665	(^(\x00|\n|\r| |:|<)|[\x00\n\r\x80-\xff]+|[ ]+$)
6666	(^.*[^a-z0-9\n])?setprop +.*
6667	(^.+)\s+\([^\)]+\)$
6668	(^.|\b(?:[iv]+|dci)\b)
6669	(^0x[\da-f]{8})\s*=\s*([\da-f]{32})
6670	(^==$)|(^!=$)|(^>=$)|(^<=$)|(^\&\&$)|(^\|\|$)
6671	(^True$|^False$)
6672	(^[\d].*) \n
6673	(^[\w\s]{1,20}?):(.*$)
6674	(^[^a-zA-Z\._]+)|([^a-zA-Z\._0-9]+)
6675	(^\(?(\d{3})\)?[- .]?(\d{3})[- .]?(\d{4})$)
6676	(^\d*)\s*(.*)
6677	(^\d{5}$)|(^\d{5}-\d{4}$)
6678	(^\s*)\*
6679	(^\s*)\+
6680	(^\s*)\-
6681	(^\s*\d*)\.
6682	(^\w+:)?.*/
6683	(^build|[^/]+\.egg-info|.*.py[co]$)
6684	(^| )-{1,2}(?P<opt>\S+) ?(?P<value>(\! )?\S+)?
6685	(^|.*[^\\])(?P<obr>\[)[^\]]*\Z
6686	(^|/)/+
6687	(^|[\W_])fanart|backdrop\d*[\W_]
6688	(^|[\W_])trailer\d*[\W_]
6689	(^|\W)@
6690	(^|\\\/)\\\*\\\*$
6691	(^|\\\/)\\\*\\\*\\\/
6692	(^|\s)#.*$
6693	(^|\s)(::)
6694	(^|\s)([\w]+)(\++)($|\s|\,)
6695	(^|\s)(or|and|not|OR|AND|NOT)($|\s)
6696	(^|\s)+#.*$
6697	(^|\s)-
6698	(^|\s)M\d?(\s)
6699	(^|\s+|[^\\])@
6700	(^|\s+|[^\\])@([a-zA-Z_][a-zA-Z0-9_]*)
6701	(_)(?=\S)([^\r]*?\S)\1
6702	(_0x[a-z0-9]{32})
6703	(_controller|_test|_controller_test)?\.(rb|yml)$
6704	(`(?:[^`]|``)+`|\w+)(?:(?:\.)(`(?:[^`]|``)+`|\w+))?
6705	(`(?:[^`]|``)+`|\w+)(?:(?:\.)(`(?:[^`]|``)+`|\w+))?(?:\:)(`(?:[^`]|``)+`|\w+)(?:(?:\.)(`(?:[^`]|``)+`|\w+))?
6706	(`(?:[^`]|``)+`|\w+)(?:(?:\:)(`(?:[^`]|``)+`|\w+))?
6707	(ajax)\d+
6708	(align|valign|border|width|height|alt|margin(?:-(?:left|right|top|bottom))?|title|longdesc|class|id|usemap)=(.+)
6709	(app\/views|app\/controllers|app\/helpers|app\/models|app\/assets|test|spec)
6710	(appcfg|bulkloader)
6711	(autotest_args:).*
6712	(bin|\.sh)
6713	(block|unblock) (\d+) (\d+)$
6714	(browser|test)_.+\.(xul|html|js|xhtml)
6715	(build_git_sha = ")(\w)*
6716	(case\s+.+|default)\:
6717	(commands/[a-zA-Z0-9/]*Command.java)
6718	(d  ((ext)?demo(needed)?|other)-\d[.]\d-py)\d[.]\d(-\S+)?[.]egg
6719	(failed|delayed|delivered|relayed|expanded)
6720	(fasta_[0-9a-z]+\.fasta)
6721	(fasta_[a-z0-9]+\.fasta)
6722	(fe80.*?)"
6723	(file|http|ftp|gopher):(.+)
6724	(file|id)=([^,\s]+)
6725	(from|import)\s+werkzeug
6726	(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?
6727	(gr|usrp2|trellis)_.*
6728	(http://(?:www\.)?s[ia]mplecd\.\w+/)(id|entry)/
6729	(http://)?([-_\.A-Za-z]+):(\d+)
6730	(http://)?localhost([:/]|$)
6731	(http://[^/]+):80
6732	(http://\S{3,})
6733	(http://|https://|ftp://)(\S*)
6734	(http\:\/\/(\w+\.)+\w+)
6735	(https?\:\/\/[(\w|\d|+|-|_|\.|\/)]+)
6736	(http|ftp|nfs):
6737	(ht|f)tp(s)?://.*.(jpg|png|gif|jpeg)
6738	(id|driver|mac|drive)=([^,\s]+)
6739	(ir|res|webdav)(\W|$)
6740	(ir|res|workflow|webdav)(\W|$)
6741	(module|def|class) (\w*)
6742	(nodev)?\s*
6743	(ns3::|::ns3::|)Ptr<([^>]+)>\s*$
6744	(numarray/libnumarray.h)
6745	(parent.*)
6746	(prot_[a-z0-9]+\.fasta)
6747	(public|private|protected)\s([A-Za-z0-9_]+\s+)+([A-Za-z0-9_]+)\s*\([^)]*\)
6748	(public|private|protected)\s*\:
6749	(qt)|(gtk)
6750	(qu|[^aeiou])y$
6751	(r\:\s\w+)$
6752	(remote: )?([\w\s]+):\s+()(\d+)()(.*)
6753	(remote: )?([\w\s]+):\s+(\d+)% \((\d+)/(\d+)\)(.*)
6754	(request|response|session|cache|redirect|local_import|HTTP|TR|XML|URL|BEAUTIFY|A|BODY|BR|B|CAT|CENTER|CODE|COL|COLGROUP|DIV|EM|EMBED|FIELDSET|LEGEND|FORM|H1|H2|H3|H4|H5|H6|IFRAME|HEAD|HR|HTML|I|IMG|INPUT|LABEL|LI|LINK|MARKMIN|MENU|META|OBJECT|OL|ON|OPTION|P|PRE|SCRIPT|SELECT|SPAN|STYLE|TABLE|THEAD|TBODY|TFOOT|TAG|TD|TEXTAREA|TH|TITLE|TT|T|UL|XHTML|IS_SLUG|IS_STRONG|IS_LOWER|IS_UPPER|IS_ALPHANUMERIC|IS_DATETIME|IS_DATETIME_IN_RANGE|IS_DATE|IS_DATE_IN_RANGE|IS_DECIMAL_IN_RANGE|IS_EMAIL|IS_EXPR|IS_FLOAT_IN_RANGE|IS_IMAGE|IS_INT_IN_RANGE|IS_IN_SET|IS_IPV4|IS_LIST_OF|IS_LENGTH|IS_MATCH|IS_EQUAL_TO|IS_EMPTY_OR|IS_NULL_OR|IS_NOT_EMPTY|IS_TIME|IS_UPLOAD_FILENAME|IS_URL|CLEANUP|CRYPT|IS_IN_DB|IS_NOT_IN_DB|DAL|Field|SQLFORM|SQLTABLE|xmlescape|embed64)(?![a-zA-Z0-9_])
6755	(run\s+)([^\s]*)(\s*)
6756	(screendump\S*_[0-9]+)
6757	(setenv WIEN_MPIRUN\s*).*
6758	(setuptools|distribute)-\S+-
6759	(setuptools|pkg_resources|distutils)(\.|$)
6760	(slando.spb.ru|slando.ru)
6761	(slap|kick|smack|hit|beat|poke|push|hurl|backhand|punch)
6762	(sobid|\xd0\xb0\xd0\xb3\xd0\xb5\xd0\xbd\xd1\x82\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9|\xd0\xb0\xd0\xb3\xd0\xb5\xd0\xbd\xd1\x82\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5|\xd1\x81\xd0\xba\xd0\xb8\xd0\xb4\xd0\xba\xd0\xb8|\xd0\xb0\xd0\xb3\xd0\xb5\xd0\xbd\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe|\xd1\x80\xd0\xb8\xd1\x8d\xd0\xbb\xd1\x82\xd0\xbe\xd1\x80\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5|\xd0\xb2\xd0\xbe\xd0\xb7\xd0\xbd\xd0\xb0\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb4|\xd0\xb0\xd0\xb3\xd0\xb5\xd0\xbd\xd1\x82\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe|\xd0\xba\xd0\xbe\xd0\xbc\xd0\xb8\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f|\xd0\xba\xd0\xbe\xd0\xbc\xd0\xbc\xd0\xb8\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f|\xd0\xba\xd0\xbe\xd0\xbc\xd0\xb8\xd1\x81\xd1\x81\xd0\xb8\xd0\xbe\xd0\xbd|\xd0\xba\xd0\xbe\xd0\xbc\xd0\xbc\xd0\xb8\xd1\x81\xd0\xb8\xd1\x8f|\xd0\xba\xd0\xbe\xd0\xbc\xd0\xbc\xd0\xb8\xd1\x81\xd0\xb8\xd1\x8f|\xd1\x81\xd0\xba\xd0\xb8\xd0\xb4\xd0\xba\xd0\xb0 \xd0\xbf\xd0\xbe \xd0\xba\xd0\xbe\xd0\xbc\xd0\xb8\xd1\x81|\xd1\x81\xd0\xba\xd0\xb8\xd0\xb4\xd0\xba\xd0\xb8 \xd0\xbf\xd0\xbe \xd0\xba\xd0\xbe\xd0\xbc\xd0\xb8\xd1\x81|\xd0\xba\xd0\xbe\xd0\xbc\xd0\xb8\xd1\x81\xd1\x81\xd0\xb8\xd1\x8e|\xd0\xba\xd0\xbe\xd0\xbc\xd0\xb8\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xb0\xd0\xb3\xd0\xb5\xd0\xbd\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0)
6763	(sqlite-amalgamation.*?\.zip)
6764	(src|href)\=([\\'"]?)/?files/
6765	(string.)|(comment.)
6766	(takes [\w ]+ )(\d+)( arguments? \()(\d+)( given\))
6767	(takes [\w ]+ )(\d+)[\w ]*( arguments? \()(\d+)( given\))
6768	(tel:(//)?)?\+?[0-9]{4,}
6769	(test_\S+)\.py$
6770	(this|last)\s*(second|minute|hour|day|week|month|year)$
6771	(title/tt|name/nm|character/ch|company/co)([0-9]+)
6772	(to*)
6773	(triangulo|trapecio): (.*)
6774	(tt\d{7})
6775	(v=)([A-Za-z0-9_]+)
6776	(varchar|char)\((\d+)\)
6777	(vote|vote:|topic|topic:)(\s)
6778	(vtk.*\.h)
6779	(warning:)?(?:.*:)?\s*([-0-9]+)\s*:\s*([-0-9]+)\s*:\s*(.*)
6780	(writes in|writes:|wrote:|says:|said:|^In article|^Quoted from|^\||^>)
6781	(www\.(?!\.)|[a-z][a-z0-9+.-]*://)[^\s<>\'\"]+[^!,\.\s<>\)\'\"\]]
6782	(x|i[3-6])86
6783	(zc.buildout|setuptools)( version)? \d+[.]\d+\S*
6784	(zc.buildout|setuptools)-\d+[.]\d+\S*-py\d.\d.egg
6785	({)(.+)(})(.+)
6786	({.*?})
6787	(|.*/)applications/(?P<a>[^/]+)
6788	(|.*/)applications/(?P<appname>[^/]+)
6789	(|__doc__\s*=(\s*|\s*\\\s*\n))("""([^"]*)"""|\\'\\'\\'([^\\']*)\\'\\'\\'|"([^"]*)"|\\'([^\\']*)\\')
6790	(~|\#[^/]+\#|\.orig|\.rej)$
6791	, "t": "([^"]+)"
6792	, ([0-9]+\.[0-9]+) fps
6793	, (\w*?)\.|(I+)$
6794	, +
6795	, \w*?\.|(I+)$
6796	, |,| 
6797	,([0-9.]+),(\d+),(\d+),([0-9.]+),(\d+)
6798	,*\s*
6799	,+
6800	,\ ?
6801	,\"sdURL\"\:\"([^\"]+?)\",
6802	,\[\]
6803	,\d+:\d
6804	,\s*(\S)
6805	,uid=(\d+),
6806	,|$
6807	- *\(
6808	- waiting for device -
6809	-(0\.0*$)
6810	-(0\.0*\D)
6811	-*(.+)
6812	-*\d+\.\d+
6813	-+ END -+
6814	-+ end suppression -+
6815	-+ suppression -+
6816	-+$
6817	-- Remote UNIX connection
6818	--([_A-Z]+)--
6819	--(\s|)all
6820	--- \d+ ---\n
6821	-------
6822	----------------------------
6823	-----BEGIN\sRSA\sPRIVATE\sKEY-----
6824	---[ \t]*\n
6825	---\s.+\s+\(revision\s\d+\)
6826	-->(.*)
6827	--?\w+|=?"[^"]*"|=?\'[^\']*\'|=?[^\s]+
6828	--[ \t\n]*>
6829	--[ \t\r\n]*>
6830	--[0-9]+-- ([^(:]*) \((0x[0-9a-f]+)\)
6831	--help|help
6832	--install-scripts=
6833	--root
6834	--root=
6835	->\s*[^\)]*$
6836	-?%>
6837	-?([0-9]+(\.[0-9]*)?|\.[0-9]+)%
6838	-?([0-9]+(\.[0-9]*)?|\.[0-9]+)((cm)|(mm)|(in)|(pt)|(pc)|(px))
6839	-?(\d*)([.]?\d*)?
6840	-?(\d+\.(\d+)?|\.?\d+)
6841	-?[0-9]+
6842	-?[0-9]+([ ]+-?[0-9]+){3}$
6843	-?[0-9]+,-?[0-9]+([ ]+-?[0-9]+,-?[0-9]+)*
6844	-?[0-9]+\.[0-9e+-]*
6845	-?\d+
6846	-?\d+(?:\.\d+)?(?:[eE]\d+)?
6847	-D([A-Za-z0-9_]*)=([A-Za-z0-9_]*)
6848	-I(\S+)
6849	-L(\S+)
6850	-Wl,[^,]*,
6851	-[ \t]*\n[ \t\r]+
6852	-[>-]* 
6853	-[rwx-]{9} +(\d+) (\d{4}/\d\d/\d\d \d\d:\d\d:\d\d) (.*)
6854	-[th]l
6855	-\.
6856	-actual\..*$
6857	-autotest$
6858	-autotest
6859	-c\x00(\d+)
6860	-clone[1-9]*$
6861	-debug(info)?$
6862	-expected\..*$
6863	-l(\S+)
6864	-l\S+
6865	-lang*
6866	-nc
6867	-part[0-9]+$
6868	-py2[.][0-35-9][.]
6869	-py\d[.]\d(-\S+)?.egg
6870	-q develop -mxN -d "/sample-buildout/develop-eggs
6871	-rc\d+$
6872	-t ([/\w]+)
6873	-t
6874	-vf crop=([0-9]+:[0-9]+:[0-9]+:[0-9]+)
6875	. \(msg (?P<msg_dict>{.+})
6876	.* (FATAL|ERROR|WARN|INFO|DEBUG|TRACE)
6877	.* \(based on bleeding_edge revision r(\d+)\)$
6878	.* line (?P<line>\d+), col (?P<near>.+?)?, (?P<error>.+?)\.
6879	.*"([^"]+)"
6880	.*((\.textile$)|(\.markdown$)|(\.org$)|(\.html$))
6881	.*((\.textile$)|(\.markdown$)|(\.org$)|(\.html$)|(\.txt$)|(\.rst$))
6882	.*(-mm[0-9]+|-git[0-9]+)\.(bz2|gz)$
6883	.*(?<=}<!>)
6884	.*(?P<code1>[sS][0-9]{2}[eE][0-9]{2})(-(?P<code2>[0-9]{2}))?.*
6885	.*(?P<line>\d+)\) (?P<file>.*)
6886	.*(?P<urn>urn\:nbn\:.*?)\<
6887	.*(Currently defined functions:)(.*)$
6888	.*(DMD.cpp)
6889	.*(Reader|Tribune).*
6890	.*(Rep|Sen). (.+)$
6891	.*([-.*?]|\[.+\]).
6892	.*([a-z][a-z]).*
6893	.*([sS][0-9]{2}[eE][0-9]{2}).*
6894	.*(\([A-Z]\)).*
6895	.*(\.ipy|\.ipynb|\.py[w]?)$
6896	.*(\d).*(\d).*
6897	.*(\d+_\d+).*
6898	.*(\d\d\d\d)(\d\d)(\d\d)(\d\d)(\d\d)
6899	.*(dev|HEAD).*
6900	.*--> (.*)
6901	.*->
6902	.*.csv
6903	.*/([^?#]*)
6904	.*/(\w+).kcm
6905	.*/analytics/v3/data/ga.*
6906	.*/discovery/v1/apis/analytics/.*
6907	.*/index/([^/]+).*
6908	.*/python27.zip$
6909	.*/video/([^/?#]+).*
6910	.*/video/([a-zA-Z0-9]+)/.*
6911	.*/video/([a-zA-Z0-9]+)_.*
6912	.*/videos/([^/]+)/.*
6913	.*/videos/view/[A-Za-z-9-]+/([0-9]+).*
6914	.*/vote_history.pdf
6915	.*/watch/([^/]+)/.*
6916	.*: (.+):([0-9]+):.*
6917	.*:
6918	.*:(.*)
6919	.*:(?P<line>\d+)[ \t]+(?P<message>.*)
6920	.*:([0-9]+):([0-9]+):  *error:(.*)
6921	.*://(?P<namespace>.+)
6922	.*:ERROR:(.*)
6923	.*:\s*
6924	.*<([^@]+)@[^@]+>\s*|([^@]+)@[^@]+
6925	.*<.*?>.*
6926	.*<\s*a\s*href\s*=.*
6927	.*<body>(?P<section>.*).*</body>
6928	.*=\(([^)]+)\) already exists.
6929	.*>(.+)</a>
6930	.*?(?:(private|protected) +)?function +(\w+)(\(.*\)) *\{$
6931	.*?(?=(\?format=.+?(?=\?|&|$)|\&format=.+?(?=\?|&|$)))
6932	.*?([0-9]*)\.xml
6933	.*?/(.*)
6934	.*?/(app|config|db)/.*?\.rb
6935	.*?/spec/.*?\.rb
6936	.*?/video/films$
6937	.*?/video/films/Short Films(/.*?)?
6938	.*?/video/tv/(.+?)/season (\d{1,2}) \[720p\]$
6939	.*?/video/tv/(.+?)/season (\d{1,2})$
6940	.*?/video/tv/(.+?)/season (\d{1,2})/extras$
6941	.*?/video/tv/Misc
6942	.*?: 
6943	.*?: (.*)
6944	.*?AMD-K6
6945	.*?AMD-K7
6946	.*?Athlon HX\b
6947	.*?Athlon\(tm\) 64\b
6948	.*?Athlon\(tm\) MP\b
6949	.*?Celeron
6950	.*?Core\(TM\)2\b
6951	.*?Hammer\b
6952	.*?Itanium\b
6953	.*?Opteron\b
6954	.*?Pentium III\b
6955	.*?Pentium II\b
6956	.*?Pentium IV\b
6957	.*?Pentium
6958	.*?Pentium.*?(IV|4)\b
6959	.*?Pentium.*?III\b
6960	.*?Pentium.*?II\b
6961	.*?Pentium.*?MMX\b
6962	.*?Pentium.*?M\b
6963	.*?PentiumPro\b
6964	.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\d+) seconds. Killing!"
6965	.*?TASK_STATUS="FAILED".*?ERROR=".*?failed to report status for (\d+) seconds.*?"
6966	.*?XEON\b
6967	.*?[^a-zA-Z0-9_]_\(
6968	.*?\b3dnow\b
6969	.*?\b3dnowext\b
6970	.*?\blm\b
6971	.*?\bmmx\b
6972	.*?\bpni\b
6973	.*?\bsse2\b
6974	.*?\bsse3\b
6975	.*?\bsse\b
6976	.*?\bssse3\b
6977	.*?\|\s*(.*)
6978	.*?_([a-z]*)_pid\d*$
6979	.*?_([a-z]*)_pid\d*.log$
6980	.*?_info
6981	.*?application/vnd.openstack.reddwarf(\+.+?)?;version=(?P<version_no>\d+\.?\d*)
6982	.*@example\.com$
6983	.*AST_TYPE(LOC)?_TRAVERSE_MATCHER\(\n                       \s*([^\s,]+\s*),\n                       \s*(?:[^\s,]+\s*),\n                       \s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\(([^)]*)\)\n                     \)\s*;\s*$
6984	.*AST_TYPE_MATCHER\(\n                       \s*([^\s,]+\s*),\n                       \s*([^\s,]+\s*)\n                     \)\s*;\s*$
6985	.*AppleWebKit/([0-9+\.]*)\w*.*
6986	.*Audio: ([^,]+),.*
6987	.*Audio: .+, (.+) (?:Hz).*
6988	.*Audio: .+, (.+) (?:kb/s).*
6989	.*Backups|.*Backup.*|.*devfs.*|.*map.*
6990	.*BillStatus.*DocTypeID
6991	.*Build successful\..*
6992	.*CDFS.*?Healthy.*\n
6993	.*CDFS.*?\n
6994	.*CentOS.*
6995	.*Chrome/(\d*).*
6996	.*DCHECK\(.*args\.length\(\) == (\d+)\);
6997	.*DESC:\s+(.*)\n
6998	.*DocTypeID=(.+?)&.*
6999	.*Duration: (.{2}):(.{2}):(.{2})\.(.),
7000	.*Fedora.*
7001	.*Firefox/(\d*).*
7002	.*GA=(\d+)&?.*
7003	.*IDENT=(\d+)
7004	.*INTFACE\s*=\s*-D(\S+)\s*
7005	.*MonoDevelop$
7006	.*No packages found matching.*
7007	.*PKGINST:\s+(.*)\n
7008	.*Pop: (.+) Locus: (.+)
7009	.*Received new cluster view.*\|([0-9]+). \[(.*)\].*
7010	.*Red Hat Enterprise Linux.*
7011	.*SPARCstation-5
7012	.*Scientific Linux.*
7013	.*Short Description.*
7014	.*Sun-Fire
7015	.*Test.(java|scala)
7016	.*UTS_RELEASE\s+"([^"]+)".*
7017	.*UTS_VERSION\s+"([^"]+)".*
7018	.*Ultra
7019	.*Ultra-1
7020	.*Ultra-2
7021	.*Ultra-250
7022	.*Ultra-30
7023	.*Ultra-4
7024	.*Ultra-5
7025	.*Ultra-5_10
7026	.*Ultra-60
7027	.*Ultra-80
7028	.*Ultra-Enterprise
7029	.*Ultra-Enterprise-10000
7030	.*VERSION:\s+(.*)\n
7031	.*Variadic(?:DynCast)?AllOfMatcher\s*<\n                       \s*([^\s,]+)\s*(?:,\n                       \s*([^\s>]+)\s*)?>\n                       \s*([^\s;]+)\s*;\s*$
7032	.*Video codec ([\w-]+) width (\d+) height (\d+) profile (\d+) fps ([\d.]+).*
7033	.*Video: (.+), (\d+)x(\d+), (.+) fps.*
7034	.*Video: ([^,]+),.*
7035	.*Video: .+, (.+) (?:fps|tb).*
7036	.*Video: .+, (\d+)x(\d+)[, ].*
7037	.*Video: .+PAR ([0-9]+):([0-9]+) DAR [0-9:]+.*
7038	.*View Special Session.*
7039	.*Why is My App Over Quota
7040	.*[ :\+\-,\.\*\?\[\]]
7041	.*[0-9]+_srcCol([0-9]+).*
7042	.*[0-9]_srcCol[0-9].*
7043	.*[0-9]{6}$
7044	.*[<]KILLLINE[>].*(\n|$)
7045	.*[Cc]aptcha.*
7046	.*[Ll][Ss]-120.*
7047	.*[\*,\[,\],\{,\},\?].*
7048	.*[\/]
7049	.*[a-z]
7050	.*[sS][0-9]{2}[eE][0-9]{2}.*\.(mkv|avi|mpg|mp4)$
7051	.*\$\>\x00
7052	.*\(
7053	.*\((.*)(\s*Format*\s*)\).*?
7054	.*\((.*\.tex)
7055	.*\((.+)\)\r?$
7056	.*\((\.\/.*\.tex)
7057	.*\((\d+)\)
7058	.*\(.*\).*
7059	.*\([+]{0,1}\d{3,15}\)$
7060	.*\(\d+\)$
7061	.*\): \t?(.*)
7062	.*\.
7063	.*\.(CR2|JPG|MOV)$
7064	.*\.([0-9]+)$
7065	.*\.(\d{10})\.log\n
7066	.*\.CR2$
7067	.*\.[^/.]+$
7068	.*\.arm
7069	.*\.bin
7070	.*\.fw
7071	.*\.imdb\.com\/title\/tt\d+\/
7072	.*\.mp3
7073	.*\.txt$
7074	.*\/([^?#]*)
7075	.*\/\/.*
7076	.*\<use (.*?)\>
7077	.*\?ptr=(.*)$
7078	.*\[(.+)  ;  (.+)\]
7079	.*\[([0-9]+):[0-9]*:.*\]$
7080	.*\bin\b(?!\b.+ing)
7081	.*\bin\b(?!\b.+ing\b)
7082	.*\brequire\s*\(?([\\'\"])([\w._-]+)\1\)?
7083	.*\d$
7084	.*\n.*\n\s+(.*)\n
7085	.*\n?
7086	.*\n\s*\n
7087	.*\n\s+\w+ \((\w+)\s
7088	.*\r(?=[^\n])
7089	.*\s+internal::(Bindable)?Matcher<([^>]+)>$
7090	.*\s.*
7091	.*\serror\:.*
7092	.*\stest_([:\w]+)\s.*
7093	.*\swarning\:.*
7094	.*\ttimestamp=(\d+)\t.*$
7095	.*\{\s*(.*?)\s*\}
7096	.*_
7097	.*_wrapper
7098	.*app_id=
7099	.*asf.*
7100	.*audio streams (\d+) video streams (\d+) chapters (\d+) subtitles (\d+).*
7101	.*bitrate: (.+) (?:kb/s).*
7102	.*centos.*
7103	.*chromeframe/(\d*).*
7104	.*class +(\w+)(?: +extends +(\w+))? *\{$
7105	.*clock (\d+)\s(\w+).*\n
7106	.*command\snot\sfound
7107	.*debian.*
7108	.*elf
7109	.*fedora.*
7110	.*film source: 29.97.*
7111	.*frame rate differs from container frame rate: 29.97.*
7112	.*fulltext.asp.*
7113	.*grplist.*
7114	.*hpwOS/([0-9+\.]*)\w*.*
7115	.*http://.*?(/\S*/)
7116	.*i=([a-zA-Z0-9_]+).*
7117	.*imdb.com/title/tt(?P<imdb_id>\d+)/?.*
7118	.*int\d+_t.*
7119	.*line="(?P<line>\d+)" column="(?P<column>\d+)" severity="(?P<severity>\w+)" message="(?P<message>.*)" source
7120	.*link/ether
7121	.*mandriva.*
7122	.*metis.*
7123	.*minimr.*
7124	.*mozilla\.(org|net|ru|co|it|me|de|hu|pt|at|uk|rs|la|tv)$
7125	.*pdfTeX warning.*
7126	.*perl.*/(\.packlist|perllocal\.pod)$
7127	.*pion_session_id="([^"]+)".*
7128	.*ri\/.*\.ri$
7129	.*scientific.*
7130	.*stderr$
7131	.*suse.*
7132	.*takes .* ([0-9]*) arguments? \(([0-9]*) given\)
7133	.*test_.*\.py$
7134	.*ubuntu.*
7135	.*used_suppression:\s+(\d+) (.*)$
7136	.*v=([A-Za-z0-9-_]+).*
7137	.*video:(\d+).*
7138	.*videoId=(\d+).*
7139	.*videoplay\?docid=([A-Za-z0-9-_]+).*
7140	.*videos/(\d+)/.*
7141	.*webos/([0-9+\.]*)\w*.*
7142	.+ (?P<path1>[\w/.]+(\.cpp|\.cxx|\.c))(?P<path2>\w+/[\w/.]+).+
7143	.+ \(in paml version (\d+\.\d+[a-z]*).*
7144	.+ at (.+) line ([0-9]+)[,\.].*
7145	.+(?<=afisha/afisha_)
7146	.+(?<=archives/)
7147	.+(?<=id=)
7148	.+(?<=spektakl/)
7149	.+(?<=vk.com/)
7150	.+/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
7151	.+::\(.+\) \[None\].*
7152	.+::\[None\].*
7153	.+?"(?P<caption>.+)"
7154	.+?(diff --git a)
7155	.+?/Misc
7156	.+?>(.+)
7157	.+?Filter=(.+?)$
7158	.+@.+\..{2,}
7159	.+Bill Status for (.+)$
7160	.+\((.*)\)
7161	.+\.(flac|mp3|ogg)
7162	.+\.py
7163	.+\.zip
7164	../SBA/
7165	..:(..):..:..
7166	..:..:(..):..
7167	..:..:..:(..)
7168	..:..:..:..:..:..
7169	..?.?
7170	.?<\?xml[^<>]+encoding="(.+)"
7171	.?A[\W0-9_]*$
7172	.PD( \d+)
7173	.\d+\.\d+\.\d+\.\d+
7174	.aux$
7175	.eserv.*
7176	.esour.*
7177	.git
7178	.htm
7179	.html
7180	.http:
7181	.lloca.*
7182	.nii
7183	.pdf
7184	.py$
7185	.txt
7186	.{3,20}
7187	/ (?=[\*&,])/
7188	/(.*)/hod-logs/(.*)/.*-.*-([0-9][0-9][0-9][0-9])([0-9][0-9])([0-9][0-9]).*$
7189	/(?<=,)(?! )/
7190	/(?P<id>\d+)/
7191	/(?P<locationID>[A-z0-9_]+).html
7192	/(?P<tenant_id>.*?)/.*
7193	/(?P<url>[\w/]+)/(?P<resource_name>\w+)/(?P<pk>\d+)/(?P<child_resource_name>\w+)/(?P<child_pk>\d+)/?$
7194	/(E|e|((E|e|)(mail|mailAddress|mailaddress|MAIL|MAILADDRESS)))=
7195	/(QGIS(_\d\.\d-dev)?)\.app
7196	/(UserId|USERID|userId|userid|uid|Uid)=
7197	/([^/]*)/([^/]+)/
7198	/(\S+)
7199	/(\S+)=
7200	/(\d+)
7201	/(\d+)/
7202	/(en-US|es)/firefox/addon/(\d+)/$
7203	/(en-US|es-ES)/firefox/addon/(\d+)/$
7204	/(export|browser|file)(/.*)?$
7205	/(login|logout)/?$
7206	/(raw-)?attachment/([^/]+)(?:/(.*))?$
7207	/(release|recording)/([0-9a-z\-]{36})
7208	/*
7209	/+\s?
7210	/.*?/\.\./?
7211	/./(.+?)/season (\d{1,2})$
7212	/./(.+?)/season (\d{1,2})/extras$
7213	// IWYU pragma: 
7214	//#TPT-Directive\s+([^\r\n]+)
7215	//(.*?)((/.*?)?)$
7216	//.*$
7217	//.*:.*@
7218	//.*\r?\n
7219	//.\.thumbs\.4chan\.org/\w+/thumb/\d+s\.(?:jpg|gif|png|jpeg)
7220	//\s*\|(.*?)\|\s*(.*?)\s*(--\s*(.*))?$
7221	//\s+FaketimeFlags:(.*)
7222	//\s+libuv-broken
7223	//\s?[\-]*\s(?P<desc>.*?)\*/\W*?struct\s(?:ASSIMP_API\s)?(?P<name>[a-z][a-z0-9_]\w+\b)[^{]*?\{(?P<code>.*?)\}\s*(PACK_STRUCT)?;
7224	//\w+\.4chan\.org/\w+/src/
7225	//\w+\.4chan\.org/\w+/src/\d+\.(?:jpg|gif|png|jpeg)
7226	//|\s*$
7227	/>
7228	/>\s*<img
7229	/?>
7230	/?\w+/\w+[.]xsd
7231	/?schemas/.*/.*\.xsd
7232	/?v[0-9\.]+
7233	/CVS/[^/]+$|/\.(bzr|cvs|git|hg)ignore$|/\.hgtags$|/\.(bzr|git|hg|svn)/|/(\.arch-ids|{arch})/
7234	/[ ]*[\d.]+[ ]*kg
7235	/[*]+(?:[^*]+|[*]+[^/*])*[*]+/
7236	/[*]\s*f2py\s.*[*]/
7237	/[.]svn
7238	/[.]svn|.*26.*
7239	/\'""
7240	/\(.*\)/
7241	/\* ".*/mtrand.pyx":
7242	/\* Begin PBXBuildFile section \*/\n
7243	/\* Begin PBXFileReference section \*/\n
7244	/\* IWYU pragma: 
7245	/\*(.*)
7246	/\*(.*)\*/
7247	/\*.*?\*/\s*|[()]
7248	/\*[^\n]*-- translated
7249	/\*\s*\|(.*?)\|\s*(.*?)\s*(--\s*(.*))?\*/
7250	/\.[^/]*$
7251	/\.[^\.]|\\\.[^\.]
7252	/\\|\/|\||\:|\?|\*/
7253	/\d+
7254	/\d+/
7255	/^http:\/\/github.com/
7256	/_ah/img/([-\w:]+)([=]*)([-\w]+)?
7257	/_ah/img/([-\w]+)([=]*)([-\w]+)?
7258	/about(?:_trac)?(?:/.+)?$
7259	/admin(?:/([^/]+)(?:/([^/]+)(?:/(.+))?)?)?$
7260	/browser(/.*|$)
7261	/buildbot/builder(?:/(.+))?$
7262	/changeset(?:/([^/]+)(/.*)?)?$
7263	/channels/(\d+)
7264	/chrome/(?P<prefix>[^/]+)/+(?P<filename>.+)
7265	/color/(\w+)/
7266	/committees/heb/CommitteeHistoryByCommittee.asp\?com
7267	/dev/([\w_]+)/([\w_]+)
7268	/dev/hidraw([0-9]+)
7269	/dev/loop\d+$
7270	/devices/.*/([0-9a-fA-F]{4}):17EF:6009\.([0-9a-fA-F]{4})
7271	/gs/[a-z0-9\.\-_]{3,}$
7272	/gs/[a-z0-9\.\-_]{3,}
7273	/index.html
7274	/lib(64)?/(.+/)?lib[^/]+\.so$
7275	/lib/
7276	/lib/dramatis/
7277	/lib/dramatis/actor/name/
7278	/lib/dramatis/deadlock.py
7279	/lib/dramatis/error/
7280	/lib/modules/[^/]+/updates/DD/(?P<moduledir>.*/)?(?P<modulename>[^/.]+).ko.*
7281	/libedit[\.\d+]*\.dylib\s
7282	/log(/.*)?$
7283	/login$
7284	/logout$
7285	/maps/feeds/features/(?P<user_id>\w+)/(?P<map_id>\w+)/(?P<feature_id>\w+)$
7286	/maps/feeds/maps/(?P<user_id>\w+)/(?P<map_id>\w+)$
7287	/milestone(?:/(.+))?$
7288	/mk/heb/mk\.asp\?mk_individual_id_t=(\d+)
7289	/mysql-(.+)/[^.]+\.sock$
7290	/name/nm([0-9]{7})
7291	/newticket/?
7292	/photos/(?:[^/]+)/(\d+)
7293	/posters/archive/main/.*
7294	/posts/([\d]{4})/([\d]{2})/([\d]{2})
7295	/prefs(?:/([^/]+))?$
7296	/project(s)?|//.+
7297	/projects/+([^/]+)
7298	/pygments/(\w+)\.css
7299	/python(\d+)\.(\d+)$
7300	/release/
7301	/replies/(-?\d+)
7302	/report(?:/(?:([0-9]+)|-1))?$
7303	/robots.txt
7304	/root
7305	/search
7306	/search(?:/opensearch)?$
7307	/testing/.*
7308	/threading.py$
7309	/ticket/([0-9]+)$
7310	/title/tt\d+
7311	/url\?q=(http[^&]+)&
7312	/v(?P<version_no>\d+\.?\d*)
7313	/v/([^?]+)
7314	/verify/(?P<addon_id>\d+)$
7315	/vote/(up|down)/(.*)
7316	/wiki(?:/(.+))?$
7317	/{1,2}.*?(?=/{1,2}|$)
7318	/|-
7319	/|\\
7320	/~([^/]+)(.*)
7321	0 %
7322	00:00:[0-9][0-9]
7323	01((-[0-9a-f]{2}){6})$
7324	0x([a-zA-Z0-9]+)\s*0x([a-zA-Z0-9]+)
7325	0x([a-zA-Z0-9]+)\s*0x([a-zA-Z0-9]+)\s*0x([a-zA-Z0-9]+)
7326	0x0(\d)(\d\d)
7327	0x[0-9a-fA-F]+|[+-]?\d+(\.\d+)?([eE][+-]\d+)?|\d+
7328	0x[0-9a-f]+
7329	0x[0-9a-f]{7,9}
7330	1..4
7331	1.8
7332	1.\d
7333	12,12,12,12
7334	1234567890
7335	150 .* \((\d+) bytes\)
7336	1905 \xd0\xb3\xd0\xbe\xd0\xb4\xd0\xb0
7337	1999\-04\-05: Version 3\.22\.4
7338	1gs.ru
7339	2012.*cc.csv
7340	20[0-9]{2}-[0-9]{2}-[0-9]{2}_
7341	20\d\d
7342	24\.124\.4\.220
7343	2\.3
7344	38;5;(\d+)
7345	404 (Not Found|error)
7346	404 Not Found
7347	480p|720p|1080p
7348	86
7349	9(?:\d[ \-\)\(\dx\.]{0,2}){6,10}
7350	9(?:\d[ \-\)\(\dx\.]{0,2}){6,12}
7351	99[.]99
7352	: (\S+\.[^\.]+):(\d+)
7353	: *
7354	:"(["|\{])
7355	:$
7356	:(.+)!(.+)@.+ PRIVMSG ([^:]+) :(.+)$
7357	:(?![\\/])
7358	:(?://)?
7359	:(?P<chain>[A-Z]+) +(?P<policy>[A-Z]+)
7360	:([^:()|]+):([^:()|]+)
7361	:(\d+) (\d+) (\w+) (\w+) ([A-Z])(\d+)?\t(.*?)((\t(.*))|$)
7362	:(\d+):initdefault:
7363	:(\w+)
7364	:.*:\s*(.*)
7365	:.*\.(\d+)
7366	://
7367	:[0-9A-F]{10,}
7368	:[0-9]+:
7369	:[\s]*$
7370	:[\s]+
7371	:[^:()|]+:([^:()|]+)
7372	:[^\s]+\s*
7373	:[^`]+:`([^`]+)`
7374	:\s
7375	:\s*
7376	:\s+
7377	:\w+
7378	:\w+@
7379	:\n(\s{8,10})
7380	:blog_path
7381	:exclude:
7382	:ext:([^@]+@)?(?P<hostname>[^:/]+)
7383	:hour
7384	:minute
7385	:second
7386	:|=
7387	:|\.
7388	;?\s*end(?:\s*$|\s+(?:while|until))
7389	;?\s*end(\.|,|&|\||\s|$)
7390	;\s*Description:\s*(.*?)\s*;\s*Expect:\s*(.*)
7391	;\s+/\*
7392	;|&|-r
7393	<!-- ([^#]+)#([^\s]+) -->
7394	<!-- BUG([^ ]*) (.*) -->
7395	<!-- REPORTBUG id="report-(.*)\.html" -->
7396	<!-- REPORTBUGCOL -->
7397	<!-- REPORTHEADER -->
7398	<!-- REPORTPROBLEM (.*?)-->
7399	<!-- REPORTSUMMARYEXTRA -->
7400	<!-- Ref -->\s*<TD WIDTH=14>[^C]*?(Closed)?[^C]*?</TD>\s*<TD ALIGN="CENTER" VALIGN="TOP">\s*<font face="arial,helvetica" size=2><FONT SIZE="-1">\s*<B>(.*?)</B>\s*</FONT>\s*</TD>\s*<!-- Motion Title -->\s*<TD ALIGN="LEFT" VALIGN="TOP">\s*<font face="arial,helvetica" size=2><FONT COLOR="#0000DD">\s*<A HREF="(/weblink/html/motion.html/ref=.*?)" TARGET="_top">\s*(.*?)</A>\s*</FONT>\s*</TD>\s*<!-- Sponsor -->\s*<TD ALIGN="LEFT" VALIGN="TOP">\s*<A HREF="/weblink/html/member.html/mem=.*?" TARGET="_top" >\s*<font face="arial,helvetica" size=2>.*?/.*?</A>\s*</TD>\s*<!-- Count of signatures -->\s*<TD ALIGN="RIGHT" VALIGN="TOP">\s*<font face="arial,helvetica" size=2><FONT SIZE="-1">(\d+)</FONT>&nbsp;&nbsp;&nbsp;\s*</TD>
7401	<!-- START_DECL_MATCHERS.*END_DECL_MATCHERS -->
7402	<!-- START_NARROWING_MATCHERS.*END_NARROWING_MATCHERS -->
7403	<!-- START_TRAVERSAL_MATCHERS.*END_TRAVERSAL_MATCHERS -->
7404	<!-- SUMMARYENDHEAD -->
7405	<!-- Search-Engine-Total-Number-Of-Results: (\d+) -->
7406	<!-- \*\*\* Reference number \*\*\* -->.*?<font face="arial,helvetica" size=2>(<[BI]>)?(.*?)</FONT>.*?<!-- \*\*\* Motion title \*\*\* -->.*?<A HREF="(.*?)" TARGET="_parent">\s*<font face="arial,helvetica" size=2>(?:<[BI]>)?([^<]*?)</font></A>\s*</TD>\s*<!-- \*\*\* Signatures -->.*?(?:<font face="arial,helvetica" size=2>(?:<[BI]>)?(\d+) &nbsp;&nbsp;</font>\s*)?</TD>\s*<!-- \*\*\* Motion date \*\*\* -->.*?<font face="arial,helvetica" size=2>(?:<[BI]>)?(\d\d)\.(\d\d)\.(\d\d)</FONT>(?s)
7407	<!--(.*?)-->
7408	<!--.*?-->
7409	<!--.*cut.*-->
7410	<!--[^>]*-->|<!>
7411	<!DOCTYPE[^>]*>
7412	<!ELEMENT\s+([^\s]+)
7413	<![ \r\n\t]*(--([^\-]|[\r\n]|-[^\-])*--[ \r\n\t]*)>
7414	<!\[|\]\]>
7415	<%[\=\-\#]?(?!.*%>)
7416	<&\w+ \.>
7417	<(![^-\[]|\?)
7418	<(.)*?>
7419	<(.*?)(?<!-)>
7420	<(.*?)>; rel="(.*?)"
7421	<(.*?)>; rel="(.*?)",?
7422	<(.+)>; rel="next"
7423	<(/?)div>?
7424	<(?!!)[^>]+>
7425	<(?!/?TEXT)[^>]+>
7426	<(?:/|)(\w+).*(?:/|)>
7427	<(?P<tag>(input|meta|link|hr|br|img|param))(?P<any>[^\>]*)\s*(?<!/)>
7428	<(@|/?p)>
7429	<(ENAMEX|NUMEX|TIMEX)\s+[^>]*?TYPE="(?P<type>\w+)"
7430	<([\w ]+(,\s*[\w]+)+)>
7431	<([\w]*)=([, \w]*)>
7432	<([\w]*)>
7433	<([^"]*)>
7434	<([^>]*)/([^>]*)@(\d+)>
7435	<([^>]*?)>
7436	<([^\s"<>]+)>
7437	<([a-zA-Z]).*\s
7438	<([a-zA-Z]+)/>
7439	<([a-z]).*\s
7440	<([wc](?: [^>]*){0,1}>)(.*?)</[wc]>
7441	<([~\^])>
7442	<(\&\w+;)>
7443	<(\/?)(!\[CDATA\[[\s\S]*?\]\]|[a-zA-Z:0-9]+|\{[^{}]*\})\s*([a-zA-Z:0-9]+=(\{[^{}]*\}|"[^"]*"|\'[^\']*\')\s*)*(\/?)\s*>
7444	<(\d+)$
7445	<(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w (\d\d):(\d\d)-(\d\d):(\d\d)>
7446	<(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w (\d\d):(\d\d)>--<(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w (\d\d):(\d\d)>
7447	<(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w (\d{1,2}):(\d\d)>
7448	<(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w>
7449	<(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w>--<(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w>
7450	<(\w+)(?: [^>]+)?>([^<>]*)</\1>
7451	<(\w+)(\s.*)?[^/]?>
7452	<(hr|br)[^>]*?/>
7453	<--\s+.*?-->
7454	<.* at remote 0x-?[0-9a-f]+>
7455	<.*>|</.*>
7456	<.+>
7457	<.+>(?P<content>.*)</.+>
7458	<.?H2>|<.?p>|<.?A.*>|<.?P.*>|<.?HR.*>
7459	</(ENAMEX|NUMEX|TIMEX)>
7460	</*string>
7461	</?(ins|del).*?>
7462	</?TIMEX2.*?>
7463	</?\s*[a-zA-Z0-9]+
7464	</?\w+[^>]*>
7465	</?alpino_ds.*>
7466	</?b>
7467	</BODY.*?>
7468	</COREF>
7469	</TEXT>[\s\S]*
7470	</[a-z]+:
7471	</body
7472	</div>\n
7473	</style
7474	</table>&#13;([\w\W]+)<div
7475	</table>.*?<table
7476	<1st_axis>
7477	<2nd_axis>
7478	<<<<NAME>>>>
7479	<=
7480	<=(\d+)$
7481	<=|<|==|!=|>=|>
7482	<?xml.*encoding=\W*([\w_-]+)
7483	<AssemblyName>([^"]*)</AssemblyName>
7484	<BODY.*?>
7485	<CHECKHERE>
7486	<COREF\s+[^>]*?ID="(?P<id>\w+)"(\s+TYPE="(?P<type>\w+)")?(\s+REF="(?P<ref>\w+)")?
7487	<Cflip (.*?)>
7488	<City>([\w ]+)<
7489	<Compile Include="([^"]*)"*
7490	<Count>(-?\d+)</Count>
7491	<CountryName>([\w ]+)<
7492	<Directory (".*?")>
7493	<EMAIL>(.*?)</EMAIL>
7494	<EMAIL>[^<]*(<\/EMAIL>|$)
7495	<ERROR>([^>]+)</ERROR>
7496	<EmbeddedResource Include="([^"]*)">
7497	<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>The status of this EDM is (CLOSED|SUSPENDED).&nbsp;&nbsp;Reason: (.*?).</B></font>
7498	<FONT SIZE=-1>(\d+) EDMs and Amendments
7499	<FRAME SRC="(.*?)" NAME="CONTENT"
7500	<FRAME\s+SRC="(.*?)"\s+NAME="CONTENT"
7501	<FRAME\s+SRC="(.*?)"\s+NAME="TEXT"
7502	<Foo\(an_attr=<Foo\(an_attr=<\.\.\.>\) at remote 0x-?[0-9a-f]+>\) at remote 0x-?[0-9a-f]+>
7503	<Foo\(an_attr=<\.\.\.>\) at remote 0x-?[0-9a-f]+>
7504	<Foo\(an_int=42\) at remote 0x-?[0-9a-f]+>
7505	<HEAD.*?>
7506	<HEAD[\W\w\n]*?</HEAD>
7507	<Hostip>\s*<gml:name>(\w+)</gml:name>
7508	<Id>(\d+)</Id>
7509	<Latitude>([\d\-\.]+)</Latitude>\s*<Longitude>([\d\-\.]+)<
7510	<MEMBER name="\??([^"]+)" wn="([^"]*)"[^>]+>|<VNSUBCLASS ID="([^"]+)"/?>
7511	<OutputType>([^"]*)</OutputType>
7512	<PATH>(.*)</PATH>
7513	<ProgrammeId>(.+?)</ProgrammeId>\r\n      <ProgrammeTitle>(.+?)</ProgrammeTitle>\r\n      <ProgrammeMediaId>.+?</ProgrammeMediaId>\r\n      <ProgrammeMediaUrl>(.+?)</ProgrammeMediaUrl>\r\n      <LastUpdated>.+?</LastUpdated>\r\n      <Url>.+?</Url>\r\n      <EpisodeCount>(.+?)</EpisodeCount>
7514	<QueryKey>(\d+)</QueryKey>
7515	<TD COLSPAN="2"><font face="arial,helvetica" size=2>\s*(.*?)</TD>
7516	<TD>(?:<font face="arial,helvetica" size=2>|<FONT SIZE="-1"><font face="arial,helvetica" size=2><B>)\s*(.*?)(?:</font>|</B></font></FONT>)</TD>
7517	<TITLE>(.+?)</TITLE><REF href="(.+?)" />
7518	<TITLE>([^<]*)</TITLE>
7519	<Term>([^<]+)</Term>
7520	<TestThread\(.*, \w+ -?\d+\)>
7521	<TestThread\(.*, stopped -?\d+\)>
7522	<Top10CatchUps>
7523	<VideoID>(.*)</VideoID>\s*.*\s*.*\s*.*\s*.*<ProgrammeName>(.*)</ProgrammeName>\s*.*\s*.*\s*<EpisodeTitle>(.*)</EpisodeTitle>\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*.*\s*<ItemMediaUrl>(.*)</ItemMediaUrl>
7524	<WebEnv>([^>]+)</WebEnv>
7525	<[A-Za-z_:]
7526	<[Bb][Rr]/>
7527	<[Bb][Rr][^>]*>
7528	<[Tt]d class=AgendaText>([^<]+)</[Tt]d>
7529	<[\s]*script(?P<attributes>[^>]*)>[\s]*(?P<data>[\s\S]*?)<\/[\s]*script[\s]*>
7530	<[^!][^>]*?>
7531	<[^/?!]?\w+
7532	<[^<]*?/?>
7533	<[^<]*?>
7534	<[^>]* alt=[\'"]([^\'"]*)[\'"].*?>
7535	<[^>]* label=[\'"]([^\'"]*)[\'"].*?>
7536	<[^>]* term=[\'"]([^\'"]*)[\'"].*?>
7537	<[^>]* title=[\'"]([^\'"]*)[\'"].*?>
7538	<[^>]*?id\s*=\s*("|\')(.*?)("|\')[^>]*?>
7539	<[^>]+?>
7540	<[a-zA-Z0-9\[\]_]*>
7541	<[a-zA-Z\/][^>]*>
7542	<[a-zA-Z\/][^>]*?>
7543	<[a-z]+ [\w"=\.]+>
7544	<[a-z]+:
7545	<[wc](?: [^>]*){0,1}>(.*?)</[wc]>
7546	<\&I[^>]*>
7547	<\&frasl>\s*<p[^>]*>
7548	<\/strong><br>([^<]*)
7549	<\?
7550	<\?.+?\?>
7551	<\?xml .*?\?>
7552	<\?xml version="[^"]*" encoding="([^"]*)"\?>
7553	<\S+.*?>
7554	<\[\/?[^>]+\]*>
7555	<\s*((.*?))\s*>
7556	<\s*(\w[\w\d]*)\s*=\s*(.*?)\s*>
7557	<\s*(\w[\w\d]*)\s*>
7558	<\s*/?\s*([^\s>]+)
7559	<\s*[a-z]+\s*[\w"=\.]*>
7560	<\s*a id\="CURRENT"\s*href="(.*?)"[^>]*>.*?<\s*/a\s*>
7561	<\s*script.*?<\s*/script\s*>
7562	<\s*span id\="VERSION"[^>]*>(.*?)<\s*/span\s*>
7563	<\w
7564	<_Helper at remote 0x-?[0-9a-f]+>
7565	<a [^>]*?title="Play" href=".+?vodcrid=crid://itv.com/(.+?)&DF=0">(.+?)</a>
7566	<a [^>]*?title="Play" href=".+?vodcrid=crid://itv.com/(.+?)&DF=0"><img\s* src="(.*?)" alt="(.*?)"
7567	<a [^>]*href="([^"]+)"[^>]*>.*?</a>
7568	<a class="check_in" href="(.*?)">
7569	<a href="(.*?)" title="\xd7\xa7\xd7\xa8\xd7\x90 \xd7\x91\xd7\x94\xd7\xa8\xd7\x97\xd7\x91\xd7\x94"
7570	<a href="(.+?)"><img class="thumbnail_image" src="(.+?)" alt="(.+?)"
7571	<a href="(?!http|ftp|mailto|/).*</a>
7572	<a href="(CoursePage.php\?[^"]+)">
7573	<a href="(VideoPage.php\?[^"]+)">
7574	<a href="(\w+)/">([\w /]+)<\/a>
7575	<a href="(http://\w+.craigslist.org/)">([\w ]+)</a>
7576	<a href="(http://\w+.craigslist.org/)">([\w ]+)\W*[/-]+\W*([\w ]+)</a>
7577	<a href="(http://\w+.craigslist.org/)"><b>([\w ]+)</b></a>
7578	<a href="(http://geo.craigslist.org/iso/us/\w+)">([\w ]+)</a>
7579	<a href="/(\w+)/" title="([\w ]+)">
7580	<a href="/cgi-bin/personals.cgi\?category=(\w+)">([\w ]+)</a>
7581	<a href="/tasklist/index/(\d+)">
7582	<a href="?([^\s^"]+)
7583	<a href="http://ad.doubleclick.net.*?;id=(co[0-9]{7});
7584	<a(.*?)href="(.*?)"(.*?)\xd7\x94\xd7\x91\xd7\x90(.*?)</a>
7585	<a.*?\s*href=\"(.*?)\".*?>(.*?)</a>
7586	<applet 
7587	<applet
7588	<b>([^<]+)</b>
7589	<b>.?BLAST
7590	<b>Party<\/b><br \/>\s*(\w+)\s*<
7591	<b_\w+\s+[^>]*?type="(?P<type>\w+)"
7592	<blockquote><H1>.*</H1>(.*)<p></blockquote>|<H1>.*</H1>(.*)</BODY>
7593	<body>(.*)</body>
7594	<body>(.+)<\/body>
7595	<br />(<span class="k">(IN|LIKE)</span>)
7596	<br />\s*([^<]+)<br />\s*([^<]+)<
7597	<br/>(.*)
7598	<br>
7599	<br>(\.\.\.|   ).+?</li>
7600	<br><br>
7601	<br\s*/?>
7602	<built-in method readlines of _io.TextIOWrapper object at remote 0x-?[0-9a-f]+>
7603	<code> \[implementation\]</code>
7604	<code>([^<]+)</code>
7605	<countryName>([\w ,\.]+)</countryName>
7606	<dd>(.*?)</dd>
7607	<description>(.*?)</description>
7608	<description>([^<]+)</description>
7609	<description>\S+</description>
7610	<director>(.*?)</director>
7611	<div class="context" id="(?P<id>[^"]+)">
7612	<div class="cover-art">\s*<img src="(?P<url>[^"]+)"
7613	<div class="filmo-episodes">.*?</div>
7614	<div class="idh">(\xe5\xb7\xb2\xe8\xbf\x9e\xe7\xbb\xad\xe7\xad\xbe\xe5\x88\xb0\d+\xe5\xa4\xa9)</div>
7615	<div class="m">(.*),
7616	<div class="pginfo">.*?</div>
7617	<div class="published">\D+\s*(\d+)\s(\D+)\s(\d{4}).*</span>
7618	<div id="letra">
7619	<div id="result"><div style="padding:0.6em;">([^<]*)
7620	<div.*?>(.*?)</
7621	<div.*?>\n
7622	<dt class="quote">(.*)<\/dt><dd class="author">(.*)<\/dd>
7623	<em [^<>]*id="speed\d+">([^<>]*)</em>
7624	<em class="loadnum"[^<>]*>([^<>]*)</em>
7625	<entry>
7626	<false/>
7627	<field>((?:[^<]|<(?!/))*)</field>
7628	<font.*>.*</font>
7629	<genre>(.*?)</genre>
7630	<h1>([^<]+)</h1>
7631	<h1[^>]*>(.+?)</h1>
7632	<h2>(.*)<\/h2>
7633	<h2><a\shref="(.*?#([0-9]+))".*?>(.*?)</a></h2>
7634	<h3>
7635	<h3>(.+) tests failed.
7636	<h3><a href="([^"]+)"
7637	<h5>also known as:</h5>.*?</div>
7638	<h\d[^>]*>presenter notes</h\d>
7639	<h\d\>(.*)\<\/h\d>
7640	<head.*?>
7641	<head>
7642	<hostname name="([^"]*)"
7643	<hr class=".*?" />\n
7644	<hr.+>
7645	<html>.*?<body.*?>.*?</body>.*?</html>
7646	<id>.*?</id>
7647	<if\s+(.+?)\s*>(.+?)</if\s+\1\s*>
7648	<img .*?src="([^"]*)"
7649	<img [\W\w\n]*?/>
7650	<img src="(http://images.craigslist.org/[\S]*\.jpg)" alt
7651	<img src="data:image/jpeg;base64,(.+?)"/>
7652	<img src="file://.*?/monkey.jpg" */>
7653	<img src="file://.*?/monkey.jpg" />
7654	<img.*?>
7655	<img.*?src="(?!http://)(.*?)".*/?>
7656	<img.+?src="(?P<filename>[^"]+?)"
7657	<img[^>]*?>
7658	<img[^>]*src="(?P<url>http://[^"]*)"
7659	<img\s.*?src="(.+?)"\s?.*?/?>
7660	<include_file=(.*?)>
7661	<indexentry>[\s\S]*?</indexentry>
7662	<info>(.*?)</info>
7663	<input id="authenticator" name="authenticator" type="hidden" value="(\w+)" />
7664	<input type="hidden" name="crumb" value="([^"]*)" />
7665	<input type="hidden" name="monthSMS" value="(\d+)">
7666	<input type="hidden" name="todaySMS" value="(\d+)">
7667	<input value=\\042(.*?) \(.*?@(-?\d+\.\d+,-?\d+\.\d+)
7668	<input[^<>]+/>
7669	<ipython\-input\-(\d+)-[a-z\d]+>$
7670	<item>(.*)</item>
7671	<key>system.privilege.taskport</key>\s*\n\s*<dict>\n\s*<key>allow-root</key>\n\s*(<[^>]+>)
7672	<large[^>]*>(.*?)</large>
7673	<li class="next"><a href="([^"]+)">[^<>]*</a></li>
7674	<li><a href="(.+?)"><img src=".+?" alt=".+?"></a><h4><a href=".+?">(.+?)</a></h4>
7675	<li><a href="([^"]+)/"
7676	<li><a title=\'.*\' href="(?P<n>/html/books/.*)" target="_blank">
7677	<link .*?>
7678	<link href="(.*?)"
7679	<link\s*rel=[\'"]stylesheet[\'"]\s*href=[\'"]([^=>]*)[\'"]>
7680	<location>(.*?)</location>
7681	<lrc id="(.*?)" artist="(.*?)" title="(.*?)"></lrc>
7682	<lrcid>(.+?)</lrcid>
7683	<meta http-equiv="Content-Type".*?>
7684	<meta name="description" content="([^"]*)"
7685	<meta name="mtv_an" content="([^"]+)"/>
7686	<meta name="mtv_vt" content="([^"]+)"/>
7687	<meta name="mtvn_uri" content="([^"]+)"/>
7688	<meta name="videoMetadata" content="(.+?)">
7689	<meta name="videoVodCrid" content="crid://itv.com/(.+?)">
7690	<meta property="og:image" content="([^"]*)"
7691	<meta property="og:title" content="(?P<title>[^"]*)" />
7692	<meta property="og:video" content="([^"]*)"
7693	<meta.*charset\W*=\W*([\w_-]+)
7694	<movieinfo id="(.*?)"><title>(.*?)</title><quality>(.*?)</quality><runtime>(.*?)</runtime><releasedate>(.*?)</releasedate><mpaa>(.*?)</mpaa><genre>(.*?)</genre><studio>(.*?)</studio><director>(.*?)</director><cast>(.*?)</cast><plot>(.*?)</plot><thumb>(.*?)</thumb>
7695	<movieinfo id="(.+?)">(.*?)</movieinfo>
7696	<name>(.*?)</name>
7697	<name>.*</name>
7698	<name>\S+</name>
7699	<name>mapred.job.tracker</name>\s*.*</value>
7700	<nobr>\((\d+)/(\d+)/(\d+)\)</nobr>
7701	<noindex\/?>
7702	<object object at 0x[0-9a-fA-F]+>
7703	<option value="(\d+)">([\w /-]+)
7704	<p(?: [^>]*){0,1}>(.*?)</p>
7705	<p.*?begin="(...........)" end="(...........)".*?">(.*?)</p>
7706	<p>
7707	<p>(?:\s|<br\s*/?>)*\x07(\d+)\x07(?:\s|<br\s*/?>)*</p>|\x07(\d+)\x07
7708	<p>(?:\s|<br\s*/?>)*\x07/sf\x07(?:\s|<br\s*/?>)*</p>|\x07/sf\x07
7709	<p><hr
7710	<p>Raw output: <a href="(.*)">(.*)</a>
7711	<p>\.notes:\s?(.*?)</p>
7712	<p>\.qr:\s?(\d*?)\|(.*?)</p>
7713	<poster>(.*?)</poster>
7714	<pre><a name="foo-1">
7715	<pre><a name="foo-5">
7716	<pre><span
7717	<pre>\s+1\s+2\s+3
7718	<pre>\s+5\s+6\s+7
7719	<pre\s*[^>]*id="paste-debug-prints".*?>
7720	<preview>(.*?)</preview>
7721	<property\s+name="([^>]+)">
7722	<published.*?</published>
7723	<rating>(.*?)</rating>
7724	<releasedate>(.*?)</releasedate>
7725	<runtime>(.*?)</runtime>
7726	<s(?: [^>]*){0,1}>(.*?)</s>
7727	<script .*?</script>
7728	<script [\W\w\n]*?</script>
7729	<script.*?</script>
7730	<script.*?>.*?</script>
7731	<script>.*?</script>
7732	<script>document\.domain="xunlei\.com";var btResult =(\{.*\});</script>
7733	<script\s*src=[\'"](.*)\.js[\'"]>\s*</script>
7734	<sentence>.*</sentence>
7735	<skipped>
7736	<source src="([^"]+)"
7737	<source>.*?</source>
7738	<span class="c_1">.*?</span>
7739	<span class="c_addtime">([^<>]*)</span>
7740	<span class="p">,</span>
7741	<span class="pro-link".*?</span>
7742	<span id="clip-date" style="display:none">[^:]*: (.*?)( \([^\(]*\))?</span>
7743	<status>100</status>
7744	<string>(.*?)</string>
7745	<strong id="sms_left" name="sms_left">\s?(\d+)\s?/\s?(\d+)\s?</strong>
7746	<studio>(.*?)</studio>
7747	<style [\W\w\n]*?</style>
7748	<sync start="(\d+)">([^<]*)</sync>
7749	<table id="emuleFile">.*?</table>
7750	<table id="showall" .*?</table>
7751	<table
7752	<td class="Day" bgcolor="#990000" >\s+\xf1\xe3\xf8 \xe4\xe9\xe5\xed \xec(.+), <span style=color:#c0c0c0>
7753	<td class="Day" bgcolor="#990000" >\s+\xf1\xe3\xf8 \xe4\xe9\xe5\xed \xec.+, <span style=color:#c0c0c0>
7754	<td class="LawText1">(.*)
7755	<td class="checkbox"
7756	<td v[^>]+>([^<]*)</td>
7757	<textarea name="text"[\W]*rows="25"[\W]id="text"
7758	<th[^>]*>Elapsed time \(sec\)</th>\n\s*<td[^>]*>([^<]*)
7759	<th[^>]*>Tests failed</th>\n\s*<td[^>]*>([^<]*)
7760	<th[^>]*>Tests passed</th>\n\s*<td[^>]*>([^<]*)
7761	<title>
7762	<title>(.*)</title>|<TITLE>(.*)</TITLE>
7763	<title>(.*?)\s+-\s+XVID
7764	<title>([^<]+)</title>
7765	<title>.*</title>
7766	<title>.*Bug ([0-9]+) Submitted</title>
7767	<title>.*Log in to Bugzilla</title>
7768	<title>Changes Submitted</title>
7769	<tr valign
7770	<tr(.*?)tr>
7771	<tr><td bgcolor="#BBBBBB"
7772	<tr><td class="tresults"><a href="/karaoke/([0-9]+).htm">(.*?)</td><td class="tresults">(.*?)</td>
7773	<tr>\s*<td><a href="lookup2\.php\?strID=(C\d+)">[^<]+</a>\s*</td><td>\s*<a href="/politicians/summary\.php\?cid=(N\d+)&cycle=2008">
7774	<tr[^>]*id\s*=\s*"task_(\d+)"
7775	<tr[^>]*status\s*=\s*"not%20done"
7776	<tt>\s*(.*?)\s*<\/tt>
7777	<uid>(\w+)</uid>
7778	<updatecheck Version="\d+\.\d+\.(\d+)\.\d+"
7779	<updated.*?</updated>
7780	<url>.*?</url>
7781	<uuid.*?uuid>\n  
7782	<uuid>.*</uuid>
7783	<viewer version_major="(\d+)" />
7784	<viewer version_minor="(\d+)" />
7785	<viewer version_patch="(\d+)" />
7786	<viewer version_test="(.*)" />
7787	<watts>[0-9]{5}</watts>
7788	<xi:include href="(.*?)".*/>
7789	<xlarge>(.*?)</xlarge>
7790	<xnat:Subject\sID="(.*?)"\s
7791	<{([^}]+)}>
7792	<|&|"
7793	<|><|>
7794	=(.*?)SlAsHcOdEsTrInG(.*)
7795	=([a-fA-F0-9]{2})
7796	=.*$
7797	== (.*) ==
7798	==== .* -=-==
7799	==== Subject Name: (.*)
7800	======+\s*$
7801	============================
7802	==[0-9]+==\s*[#0-9]+\s*([0-9A-Fa-fx]+):(?:[^ ]* )*([^ :\n]+)
7803	=\s*
7804	=item
7805	={"pv" : "(?P<n>[0-9]+)"}
7806	={10,}
7807	> ([0-9]*):([0-9]*)-([0-9]*) ([+-]) (.*)
7808	> +
7809	> <
7810	>(.+)
7811	>(?!\})
7812	>([^<]*)<
7813	>([^<]+)</a>
7814	>(\d+)$
7815	>=
7816	>=(\d+)$
7817	>\s*(\S+)\s*(.*)
7818	>\s*<
7819	>exe<
7820	>rRNA_([A-Z]+[0-9]+)\.([0-9]+)_([0-9]+)-([0-9]+)_DIR([-\+]) /molecule=(.*)_rRNA /score=([0-9]+.?[0-9]*)
7821	>|%
7822	@(?:end|implementation|protocol)
7823	@([A-Z]), +%([A-Z])
7824	@([\w]+)@
7825	@([a-zA-Z0-9_]+)@
7826	@([a-zA-Z_]+)@
7827	@([a-z_]+)@
7828	@(\w+):\s(.+)
7829	@(\w+)\(([^;]+)\)
7830	@(\w+)\s([^#\n]*)(\s+#\s*([^\n]*)|$)
7831	@(\w+)\s(\w+):\s(.+)
7832	@(\w+)\s\{(\w+)\}\s(\w+):\s(.+)
7833	@(interface|protocol)\s+(\w+)
7834	@(short|no)changelog
7835	@.+?(\.|$)
7836	@/(?P<a>\w*)/(?P<c>\w*)/(?P<f>\w*(\.\w+)?)(/(?P<args>[\w\.\-/]+))?
7837	@?[a-zA-Z0-9_$]+
7838	@?[a-zA-Z0-9_$]+(?:(?:://|::|->|:|/|@|\.)@?[a-zA-Z0-9_$]+)+
7839	@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@(.*)
7840	@[a-z]+:
7841	@\(#\) Patch NRX2_ROM_VERSION_(?P<release>\w+).*
7842	@\d+@
7843	@\w*
7844	@\w+{([^,]+),$
7845	@\w+{.*
7846	@\{(?P<a>[\w\-\.]+?)(\:(?P<b>.*?))?\}
7847	@oplist.push\("(.*)"\)
7848	@param\s+[a-zA-Z0-9_]+:
7849	@requires (.*)\n
7850	@requires:? (.*)\n
7851	@requires?:? (.*)\n
7852	@requires?:?\s+(\S*)\s*\n
7853	A \/tags\/([^\s]+) \(from \/branches\/bleeding_edge\:(\d+)\)
7854	A(.*)\Z
7855	AAAA0123
7856	AC_INIT[(][^,]*,\s+([^)]*)[)]
7857	AIRBASE_NG_PATH=
7858	AJS =(.|\n)*\n}\n
7859	AJS.Class =(.|\n)*\n};//End class
7860	AJSDeferred =(.|\n)*\n};//End deferred
7861	AJS\.([\w_$]*?)(?:\(|,|\.)
7862	ALT=[\'"]?([\w\d\s]*)[\'"]?
7863	AME
7864	APACHE_DIRECTORY=
7865	APACHE_SERVER=ON
7866	ARG(?P<id>\d+)
7867	ARG\d
7868	ARRAY
7869	ATLAS version (?P<version>\d+[.]\d+[.]\d+)
7870	ATLAS_(?P<version>\d+[.]\d+[.]\d+)_
7871	AUTO_DETECT=OFF
7872	AUTO_DETECT=ON
7873	AUTO_MIGRATE=
7874	AWSAccessKeyId=(.*)
7875	AWSSecretKey=(.*)
7876	About\((.*)\).should
7877	About\((.*)\).should_be_in\((.*)\)
7878	About\((.*)\).should_be_same\((.*)\)
7879	About\((.*)\).should_include\((.*)\)
7880	About\((.*)\).should_not_be_in\((.*)\)
7881	About\((.*)\).should_not_be_same\((.*)\)
7882	About\((.*)\).should_not_include\((.*)\)
7883	AbstractAuthConsumer$
7884	Active Players
7885	Add files to archive
7886	Address:
7887	Ali1:\s+(\S+)\s+Ali2:\s+(\S+)\s+
7888	Android; Mobile; rv:([\d.]+)
7889	Android; Tablet; rv:([\d.]+)
7890	Andy
7891	Apple
7892	AppleWebKit/.*Mobile/
7893	Area Size: .*? ([\d,]*) square miles
7894	Area of Discusion
7895	Assertion failed: 
7896	Assistant\((?P<deviceType>.*)/(?P<deviceVersion>.+); (?P<clientOSType>.*)/(?P<clientOSVersion>.*)/(?P<clientOSbuildNumber>.*)\) Ace/(?P<protocolVersion>.*)
7897	Audio codec (\w+) channels (\d+) samplerate (\d+) bitspersample (\d+).*
7898	Audio: \w+
7899	Auth=(.*)
7900	Auth=[^\n]+
7901	AuthConsumer$
7902	AuthContext$
7903	AuthenticAMD
7904	Author: +([^<]+) <([^>]+)>
7905	AuthorDate: +(.+)
7906	B(\d{2})(\d{2})(\d{2})(\d{2})(\d{5})([NS])(\d{3})(\d{5})([EW])
7907	B(\d{2})(\d{2})(\d{2})(\d{2})(\d{5})([NS])(\d{3})(\d{5})([EW])([AV])(\d{5})(\d{5}).*\Z
7908	B(\d{2})(\d{2})(\d{2})(\d{2})(\d{5})([NS])(\d{3})(\d{5})([EW])([AV])(\d{5})(\d{5})\d*\Z
7909	BACKEND_MESSAGE
7910	BASEML \(in paml version (\d+\.\d+[a-z]*).*
7911	BB01
7912	BENDING RESIDUES:(.*)
7913	BIT((?: VARYING)?)\(([0-9]+)\)
7914	BITESHERE
7915	BODY=
7916	BOOST
7917	BREAKHERE
7918	BTN([0-9]+)
7919	BUG=(.*)$
7920	BUG=v8:(.*)$
7921	BUNDLE_ID\s*=\s*"([^"]*)"
7922	BYTE
7923	Basic (\S+)
7924	Beautiful is better than ugly
7925	BillLookUp\.pl
7926	BoundingBox:\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)
7927	Breakpoint (\d+)
7928	C(\d{2})(\d{5})([NS])(\d{3})(\d{5})([EW])(.*)\Z
7929	CALIFORNIA CONSTITUTION\nPREAMBLE
7930	CC01
7931	CDATA|IDREFS|IDREF|ID|ENTITY|ENTITIES|NMTOKENS|NMTOKEN
7932	CDFS
7933	CDFS.*Healthy
7934	CDLABEL\=([a-zA-Z0-9_\.-]+)
7935	CKEditor=(\w+)
7936	CKEditorFuncNum=(\d+)
7937	COMMAND_CENTER=ON
7938	COMMAND_CENTER_INTERFACE=
7939	COMMAND_CENTER_PORT=
7940	COMMAND_ID\s*=\s*([0-9]+)\s*;
7941	CONFDEFS
7942	CONFIGEDITORHERE
7943	CONSTRAINT `(\w+)` FOREIGN KEY \(`(\w+)`\) REFERENCES `(\w+)` \(`(\w+)`\)
7944	CPU \d+ - CPU \d+ =\s+-*\d+
7945	CPU/event = [0-9\.]+
7946	CREATE TABLE .(\S+). \(
7947	CUSTOM_EXE=
7948	C\s.*
7949	Callback returned the Deferred it was attached to
7950	Calling finish
7951	Catchable\\? fatal\\? error\\?:.*
7952	Cert\s+\d+:\s+(.*)$
7953	Chakana server listening on port (\d+).
7954	Chan Extension
7955	Change\s+(\d+)\s+
7956	Children see throughput for[\s]+([\d]+)\s+([-\w]+[-\w\s]*)\=[\s]+([\d\.]*) KB/sec
7957	Chrome|Gecko|Microsoft|Mozilla|Safari|WebKit
7958	Clusters::[a-z0-9]+::1
7959	Clusters::[a-z0-9]+::2
7960	Codon frequenc[a-z\s]{3,7}:\s+(.+)
7961	Comments
7962	Commit: +([^<]+) <([^>]+)>
7963	CommitDate: +(.+)
7964	Committed revision ([0-9]+)\.
7965	Confirmed a race|unexpected race
7966	Conflicts:$
7967	Connection refused
7968	Connection reset by peer
7969	Connection timed out
7970	Connection to the other side was lost in a non-clean fashion
7971	Content-Encoding: ?([a-zA-Z0-9\-/]*)
7972	Content-Length: ?([0-9]*)
7973	Content-Type: ?([a-zA-Z0-9\-/]*)
7974	Coord
7975	Copying (.*?) to (.*?)\n
7976	Copyright [\d-]*200[8-9] the V8 project authors. All rights reserved.
7977	Copyright
7978	Core\(s\) per socket:\s+(\d+)
7979	CoresPerSocket=(\S+)
7980	Counter is: (\d+)\n
7981	Created task ([0-9]+)
7982	Creating main pack (.*) \.\.\.
7983	Current Chromium DEPS revision \d+ is newer than \d+\.
7984	Current DJ: </span>\n(.+?)<
7985	Current thread 0x[0-9a-f]+
7986	Customer:[^\s]+
7987	CyrixInstead
7988	DBAPI2_PLACEHOLDER
7989	DD01
7990	DEBUG DATE (\d\d)(\d\d)(\d\d)\Z
7991	DEBUG:.*
7992	DEFINE_PROPERTYKEY\(PKEY_(\w+), ([0-9A-Fx, ]+)\)
7993	DIGITAL_SIGNATURE_STEAL=
7994	DISTRIB_CODENAME=(.*)
7995	DISTRIB_DESCRIPTION=\"(.*)\"
7996	DNSSPOOF_PATH=
7997	DOMAIN NUMBER: *(\d+) \(coloured (\w+)
7998	DOT
7999	DOUBLE
8000	DP=(\d+)
8001	DSNIFF=ON
8002	DTSTART:(.*)
8003	DTSTART;TZID=(.*):(.*)
8004	DURATION:(.*)
8005	Data(\s|$)
8006	DataText2?(\s|$)
8007	DataText4>([^<]*)</a>
8008	DataText4>([^<]*)</td>
8009	Database
8010	Database: (.+)$
8011	Date
8012	Def.Context
8013	Description:\s*(.*?)\s*Expect:\s*(.*)\s*-->
8014	Details for test_debug.Foo object at
8015	Difference maps.*:\s*(\S*)
8016	Discourse
8017	Disk\s+(/dev/sd.*\s+GiB),
8018	Disp. SEDE:\s\d+
8019	DocTypeID=(.+?)&
8020	DocumentRoot (".*?")
8021	Downloading.*setuptools.*egg\n
8022	Duration: N\/A
8023	Duration: \d+:\d+:\d+.\d+
8024	Duration:\s*([0-9\:\.]+),
8025	E(\d{2})(\d{2})(\d{2})(\w{3})(.*)\Z
8026	E-mail:
8027	E@
8028	EASY-INSTALL(?:-ENTRY)?-SCRIPT|This file was generated by RubyGems
8029	EEEEEE012345
8030	EMAIL_PROVIDER=
8031	ENCOUNT=
8032	ENDMDL
8033	EOS|\*|\#|\+
8034	EPSG:900913|EPSG:3857|EPSG:102100
8035	EPSG\:(3857|102100|102113)
8036	ERP_unk_svc
8037	ERROR 1049
8038	ERROR \| Test Failure\: (.*)
8039	ERROR in BUILD
8040	ESXi (\d)+\.(\d)+\.(\d)+ \[Releasebuild-([\d]+)\]
8041	ESXi (\d)+\.(\d)+\.(\d)+[ ]+build-([\d]+)
8042	ETTERCAP=ON
8043	ETTERCAP_INTERFACE=
8044	ETTERCAP_PATH=
8045	EXPORT_FUNCTIONS\s+(.+)
8046	EXPR 
8047	EXTRA\s*=\s*"([^"]*)"
8048	Email|email|login|logon|Logon|Login|user|username|Username
8049	End run of OMNeT
8050	Episode dated (\d+) (\w+) (\d+)
8051	Error .* "(.+)" on line ([0-9]+) 
8052	Error \d+ in (.*.tex) line (\d+):(.*)
8053	Error occured:([^<]+)
8054	Error
8055	Error: unable to free
8056	Error: |ERROR: 
8057	Explicit is better than implicit
8058	Exported revision (\d+)
8059	FAIL:
8060	FILE:
8061	FLOAT
8062	FPKM \"([\d\s\w\.]+)\"
8063	Failed \d+ of \d+ tests
8064	Failures: (\d+)
8065	Fatal\\? error\\?:.*
8066	File "(.+)", line (.+), characters .+:
8067	File "(.+)", line ([0-9]+)
8068	File "([^"]*)", line (\d+)
8069	File "\S+one.py"
8070	File (.*) changed from revision (.*) to (.*)
8071	File (.*) is new; current revision (.*)
8072	File (.*) is removed;
8073	File exists
8074	Firefox/([\d.]+)
8075	Firefox|Thunderbird
8076	FocusedApplication(.+)/
8077	Foo: 0\..s, 0\.0min\nFoo: 0\..s, 0.0min\nFoo: .\..s, 0.0min\n
8078	FooDeathTest\.\n  Test1\nFoo\.\n  Bar1\n  Bar2\n  DISABLED_Bar3\nAbc\.\n  Xyz\n  Def\nFooBar\.\n  Baz\nFooTest\.\n  Test1\n  DISABLED_Test2\n  Test3\nTypedTest/0\.  # TypeParam = (VeryLo{245}|class VeryLo{239})\.\.\.\n  TestA\n  TestB\nTypedTest/1\.  # TypeParam = int\s*\*\n  TestA\n  TestB\nTypedTest/2\.  # TypeParam = .*MyArray<bool,\s*42>\n  TestA\n  TestB\nMy/TypeParamTest/0\.  # TypeParam = (VeryLo{245}|class VeryLo{239})\.\.\.\n  TestA\n  TestB\nMy/TypeParamTest/1\.  # TypeParam = int\s*\*\n  TestA\n  TestB\nMy/TypeParamTest/2\.  # TypeParam = .*MyArray<bool,\s*42>\n  TestA\n  TestB\nMyInstantiation/ValueParamTest\.\n  TestA/0  # GetParam\(\) = one line\n  TestA/1  # GetParam\(\) = two\\nlines\n  TestA/2  # GetParam\(\) = a very\\nlo{241}\.\.\.\n  TestB/0  # GetParam\(\) = one line\n  TestB/1  # GetParam\(\) = two\\nlines\n  TestB/2  # GetParam\(\) = a very\\nlo{241}\.\.\.\n
8079	FooDeathTest\.\n  Test1\nFoo\.\n  Bar1\n  Bar2\n  DISABLED_Bar3\nFooBar\.\n  Baz\nFooTest\.\n  Test1\n  DISABLED_Test2\n  Test3\n
8080	ForAll(?=\s)
8081	Form F3
8082	Forwarding device port (\d+) to host (\d+):
8083	Foto:
8084	Fringes
8085	Funcname|Classless_Function
8086	G(.*)\Z
8087	G00X(.*)Y(.*)Z(.*)
8088	G00Z(.*)
8089	G01Z(.*)
8090	GATEWAY=(\S+)
8091	GG
8092	GL(_ES)?_VERSION(_ES_C[ML])?_\d_\d
8093	GL_RENDERER=(.+)
8094	GL_VENDOR=(.+)
8095	GL_VERSION=(.+)
8096	GNTP/([^ ]+) (-OK|-ERROR|-CALLBACK) NONE
8097	GNTP/1.0 (-OK|-ERROR|-CALLBACK) NONE
8098	GNU Fortran
8099	GNU Fortran.*?([0-9-.]+)
8100	GNU Fortran\s+95.*?([0-9-.]+)
8101	GPU\s([\d.-]+)
8102	GREENLET_VERSION "(.*)"
8103	GROUP
8104	Game
8105	Gene\s+([0-9]+)\s+.+
8106	GenuineIntel
8107	GenuineTMx86
8108	GlueCEInfoContactString: (.*)
8109	GlueForeignKey: GlueClusterUniqueID=(.*)
8110	GlueForeignKey: GlueSiteUniqueID=(.*)
8111	Google Web Toolkit (.*)
8112	GoogleDMToken token=(\w+)
8113	GoogleLogin auth=(\w+)
8114	Got (setuptools|distribute) \S+
8115	Governor on (.*)$
8116	Greenplum[a-zA-Z\s]*(\d+\.\d+)
8117	H(F)(DTE)(\d\d)(\d\d)(\d\d)\Z
8118	H(F)(FXA)(\d+)\Z
8119	H([FOP])([A-Z]{3}).*?:(.*)\Z
8120	H([FOP])([A-Z]{3})[A-Z]*:(.*)\Z
8121	HB\d{1,4}.htm
8122	HEADER
8123	HTTP
8124	HTTP/(\d\.\d)\s+(\d+)(?:\s+(.*))?$
8125	HTTP/1.1 
8126	HTTP/1.[01] ([0-9]+) ([^\r]*)
8127	HTTP/\d+.\d+ (\d+)
8128	HTTP/\d.\d (\d+)
8129	Hadoop ([0-9]+)\.([0-9]+).*
8130	Hello
8131	Helpers
8132	Hewlett-Packard
8133	Host: (.+)$
8134	Href="(.*?)">
8135	I found no \\\w+ command
8136	ID=[^,]+,?|Number=[^,]+,?|Type=[^,]+,?|Description="[^"]+",?
8137	ID_AUDIO_ID=([0-9]*)
8138	ID_LENGTH=([0-9]*)
8139	IMG_\d+.JPG
8140	IMP_VERSION_MAJOR\s=\s([0-9]+)
8141	IMP_VERSION_MINOR\s=\s([0-9]+)
8142	IMP_VERSION_PATCH\s=\s([0-9]+)
8143	INFO Passed: [^0]
8144	INSTALLED: +([0-9.\w]+)
8145	INT
8146	INTEGER: [0-9]+
8147	IOError: request data read error
8148	IPADDR
8149	If this is blank, SET did not get a successful attempt on the website, sorry hoss..
8150	Ignore tracebacks: (.*)
8151	In \[\{\\color\{incolor\}(.*)\}\]:
8152	In&nbsp;\[(.*)\]:
8153	Input \#\d+\,\s*(\S+),\s*from
8154	Intel(\(R\))? (.*) processor [\d]+MHz
8155	Invalid reference to ItemList: (.+) in ItemRef
8156	Iteration 0, pseudo-likelihood = -?(\d)+(\.\d+)?
8157	I{1000}
8158	Job (.*?) set to execute immediately
8159	Job <(\d+)> is being terminated
8160	Job <(\d+)> is not found
8161	Job <(\d+)> is submitted.*<(\w+)>
8162	Job <(\d+)>: Job has already finished
8163	Job not submitted.*<(\w+)>
8164	Job submitted with jobid: +(\w+://([a-zA-Z0-9.-]+)(:\d+)?(/.*)?/\d+)
8165	KEY `(\w+)` \((.*)\)
8166	KEY
8167	KEYBOARD
8168	KEYBOARDTYPE
8169	KEYTABLE
8170	KSM_PATH
8171	KVM_TEST_VIRTIO_NETWORK_INSTALLER
8172	L"\\0(\d)" L"([^"]*)"
8173	L(.*)\Z
8174	L([0-9]+)
8175	LAPW1\s+END
8176	LATEST: +([0-9.\w]+)
8177	LGA
8178	LINUX_METERPRETER_MULTI_COMMANDS=
8179	LINUX_METERPRETER_MULTI_SCRIPT=
8180	LL_VERSION_BUILD\s=\s([0-9]+)
8181	LL_VERSION_MAJOR\s=\s([0-9]+)
8182	LL_VERSION_MINOR\s=\s([0-9]+)
8183	LL_VERSION_PATCH\s=\s([0-9]+)
8184	LSID=[^\n]+
8185	L\$(\d+)
8186	LaTeX Font Warning:.*
8187	LaTeX Warning.*?input line (\d+).$
8188	LaTeX Warning:.*
8189	LaTeX Warning:.*?input line (\d+)(\.|$)
8190	LatLng\(([-\d\.]+),([-\d\.]+)
8191	LawText1">(.*?)</
8192	Leaks: (\d+) bytes, (\d+) allocations
8193	Library Persistent ID
8194	Lieutenant Governor
8195	Line ([0-9]*) of "([^"]*)".*
8196	Local
8197	Locus: (.+)
8198	M&uacute;sica n&atilde;o encontrada
8199	MAIN=
8200	MAINPAYLOAD=
8201	MAJOR\s*=\s*(\d+)
8202	MARIONETTE_CONTEXT(\s*)=(\s*)[\'|\"](.*?)[\'|\"];
8203	MARIONETTE_HEAD_JS(\s*)=(\s*)[\'|\"](.*?)[\'|\"];
8204	MARIONETTE_INACTIVITY_TIMEOUT(\s*)=(\s*)(\d+);
8205	MARIONETTE_TIMEOUT(\s*)=(\s*)(\d+);
8206	MESSAGES\s+(\d+)
8207	METASPLOIT_DATABASE=
8208	METASPLOIT_IFRAME_PORT=
8209	METASPLOIT_PATH=
8210	METERPRETER_MULTI_COMMANDS=
8211	METERPRETER_MULTI_SCRIPT=
8212	MINOR\s*=\s*(\d+)
8213	MLITM_PORT=
8214	MOZ_OBJDIR=@TOPSRCDIR@/(.+)
8215	MSIE [1-7]\b
8216	MTVN.Player.defaultPlaylistId = ([0-9]+);
8217	MVI_\d+.AVI
8218	MZ
8219	Matcher&lt;([^\*&]+)&gt;
8220	Max Jobs per Minute (\d+)
8221	Maximum Heap Size: (\d+) bytes
8222	Mean frequency of private alleles p\(1\)= ([.0-9]+)
8223	Mean sample size: ([.0-9]+)
8224	Measure Number Breakdown
8225	Median Household Income: .*?\$([0-9,.]*)
8226	MemTotal:\s+(\d+)
8227	Member Data Documentation
8228	Member Function Documentation
8229	Member\(".*", .*RunTimeEnvironment
8230	Merge to: (?P<branch>[\w\-]+): (?P<type>[A-Z]+)
8231	Merge: +([0-9a-f]+ *){2,}
8232	Microsoft \(R\) (32-bit |)C/C\+\+ Optimizing Compiler
8233	Microsoft
8234	Mobile; rv:([\d.]+)
8235	Model (\d+):\s+(.+)
8236	Model name:\s+(.*)
8237	Model:\s+(.+)
8238	Moderator
8239	Mop/s total\s*=\s*(.*)\n
8240	Mop/s/thread\s*=\s*(.*)\n
8241	More Games
8242	Mozilla (Firefox|Iceweasel) ((\d+)\.\S*)
8243	Mozilla (Firefox|Iceweasel|Fennec) ((\d+)\.\S*)
8244	Mozilla (Firefox|Iceweasel|Fennec)\b[^ ]* ((\d+)\.\S*)
8245	MythFrontend Network Control.*
8246	N+$
8247	N=10: ([.0-9]+)
8248	N=25: ([.0-9]+)
8249	N=50: ([.0-9]+)
8250	NAME
8251	NAME\s*=\s*"([^"]*)"
8252	NERD_tree_\d+
8253	NE|NN
8254	NIPAP database - schema version: ([0-9]+)
8255	NIST score = ([0-9.]+)\s+BLEU score = ([0-9.]+)\s+for system "(.*)"
8256	NOTIFY (\d{1,3})
8257	NPY_NO_EXPORT\s+(.*)$
8258	NUMA node\(s\):\s+(\d+)
8259	Name: (.*)$
8260	Name="(\S+)"
8261	Name=([\w\.]+)
8262	Namespaces are one honking great idea
8263	Next nothing is (\d*)
8264	No \#ifndef header guard found\, suggested CPP variable is\: ([A-Z_0-9]+) 
8265	No \#ifndef header guard found\, suggested CPP variable is\: ([A-Za-z_0-9]+) 
8266	No matching results.
8267	No more addresses.
8268	No space left on device
8269	No such command
8270	Node \#(\d+)
8271	Node
8272	Not Found
8273	Not Found(?i)
8274	Note: node (\d+) is root.
8275	Notice\\?:.*
8276	Nseqs1=(\S+)\s+Neff1=(\S+)\s+Nseqs2=(\S+)\s+Neff2=(\S+)
8277	Number of threads: (\d+)
8278	Number of variables:\s*(\d+)
8279	Number\s*of\s*fields\s*with\s*differences\s*=\s*0\D
8280	OK
8281	OK\s*\Z
8282	ONMOUSEOUT
8283	ORIGIN=
8284	OS=(\w+\s+[^A-Z]+)\s+[A-Z]
8285	OS=(\w+\s+\w+)\s
8286	OUT FLIGHT_KM (\d+\.\d+)\Z
8287	OUT FLIGHT_POINTS (\d+\.\d+)\Z
8288	OUT TYPE (\S+)\Z
8289	OUT p\d+ (\d\d):(\d\d):(\d\d) ([NS])\s*(\d+):(\d+\.\d+) ([EW])\s*(\d+):(\d+\.\d+)
8290	OUTPUT *(.*\.aux)
8291	OUTPUT *(.*\.bcf)
8292	ObjectType:([0-5]) ID:(\d+) ObjectState:([0-3]) PosX:([0-9\.e\-]+) PosY:([0-9\.e\-]+) Area:([0-9\.e\-]+) Width:([0-9\.e\-]+) Height:([0-9\.e\-]+) Orientation:([0-9\.e\-]+)
8293	Out\[(.*)\]:
8294	Out\[\{\\color\{outcolor\}(.*)\}\]:
8295	Overfull.*wide
8296	P(\d+)Y(\d+)M?(\d?\d?)D?
8297	P=\(.*?\)
8298	PACKAGE_VERSION *= *[\'"]([0-9.]+)["\'].*
8299	PARAM:
8300	PASSED in (\d+) ms
8301	PATCH\s*=\s*(\d+)
8302	PEM_CLIENT=
8303	PEM_SERVER=
8304	PID:
8305	PLPYTHON_LIBDIR
8306	PRIMARY KEY \((.*)\)
8307	PRIMARY
8308	PROP
8309	PSQ([0-9])
8310	Page size:\s*([0-9]+) x ([0-9]+) pts
8311	Parent sees throughput for[\s]+([\d]+)\s+([-\w]+[-\w\s]*)\=[\s]+([\d\.]*) KB/sec
8312	Parse error.* on line (\d+)
8313	PartitionName=(\S+).*?Nodes=(\S+)
8314	Passed all 0 tests
8315	Passed all \d+ tests
8316	Passwd=[^&]+
8317	PathChannelLink.*?>(\d+)
8318	Percent owned
8319	Perforce Server starting...
8320	Phase
8321	Picked: (\S+) = \S+
8322	Picked: (setuptools|distribute) = \S+
8323	Player
8324	Playstring="file:(.+)"
8325	Population in (\d{4})( \(est\))?.*?([\d,.]+)
8326	Possible data race
8327	PostgreSQL (\d+)\.(\d+)(?:\.(\d+))?(?:devel)?
8328	PostgreSQL (\d+)\.(\d+)\.(\d+)
8329	PostgreSQL[a-zA-Z\s]*(\d+\.\d+)
8330	Postponed
8331	Present|Absent
8332	Privilege:
8333	Property changes on: (.*)
8334	Protected Attributes
8335	Public Member Functions
8336	PyObject\s*\*
8337	Python Software Foundation
8338	QEMU PC emulator version ([0-9\.]+),.*
8339	QtGui\.QApplication.translate\(.*?, (.*?), None, QtGui\.QApplication\.UnicodeUTF8\)
8340	Qual (\d+\.\d+)
8341	Query: (\d+)\s*(.+) \d
8342	REFTEST INFO \| (Successful|Unexpected|Known problems): (\d+) \(
8343	REMARK   2 RESOLUTION.
8344	REPLACEHEREDUDE
8345	RESIDUE NUMBERS :(.*)
8346	RRULE:(.*)
8347	RT[\d\w]+_Firmware.*
8348	RT\s+(?P<username>@\w+)
8349	RX bytes:(\d+)
8350	RX packets:(\d+)
8351	RX\s+bytes:?\s*(?P<c>\d+)
8352	Reading specs from (.*)/specs
8353	Real/event = [0-9\.]+
8354	Recent Games
8355	Ref1\=(http.*)\s
8356	RegExp\b|\/[^\/]
8357	Release (?P<release>\w+).*\(BB=(?P<bb>[a-zA-Z0-9:]+),RF=(?P<radio>[a-zA-Z0-9:]+)(?P<var>[^)]*)\)
8358	Release (?P<release>\w+).*\(HW=(?P<radio>\d+):(?P<bb>\d+)(?P<var>[^)]*)\)
8359	Release:</th><td class="field-body">(.*)</td>\n
8360	Remote Device Error
8361	Repairing file:  </td>\n<td width="102">([^<]+)
8362	ReportCrash
8363	Representative ([\w\s\.\,\"\-]+)\s*<br
8364	Resolution: (?<=\dx)\d{1,4}|(?<=\d\dx)\d{1,4}|(?<=\d\d\dx)\d{1,4}|(?<=\d\d\d\dx)\d{1,4}
8365	Resolution: \d{1,4}(?=\d{1,4})
8366	Resolution: \d{1,4}x\d{1,4}
8367	Resolved
8368	Resources_(?P<locale>[^\.]+).properties
8369	Response:
8370	Responses during feed: (\w+)
8371	Restarting glance-[a-z]+ with
8372	Results (\d+) - (\d+) of (?:about )?(\d+)
8373	Reviewed by NOBODY \(OOPS!\)\.
8374	Revision: (\d+)
8375	RollCallVoteTranscript
8376	Routine +Invokes
8377	Run number
8378	Runaway argument
8379	Running bibtex
8380	Running job: job_(?P<timestamp>\d+)_(?P<step_num>\d+)
8381	Running makeindex
8382	S(?P<season>[0-9]*)E(?P<episode>[0-9]*)
8383	SB\d{1,4}.htm
8384	SCHEMA_PLACEHOLDER
8385	SCRAM_PROJECTVERSION=(\S*)
8386	SC_\(([-\d\.e]+)\)
8387	SD.*
8388	SEDE clienti:\s\d+
8389	SEDE filiali:\s\d+
8390	SELF_SIGNED_APPLET=ON
8391	SELF_SIGNED_CERT=ON
8392	SENDMAIL=
8393	SENDMAIL=ON
8394	SEQUENCE_WAVEFORM_NAME_CH_(\d)_(\d+)
8395	SERVER|CLIENT\_JOB\.[\d]
8396	SET_INTERACTIVE_SHELL=
8397	SET_INTERACTIVE_SHELL=OFF
8398	SET_INTERACTIVE_SHELL=ON
8399	SID=
8400	SID=[^\n]+
8401	SMfunctions\[\d+\] = Array \("(?:public )?([^,]+)",".+"\);
8402	SNAPSHOT_TMPFILE
8403	SQLITE|HTTP|SPDY|CACHE|DNS
8404	STRING
8405	STRING: [0-9,.]+
8406	STRUCT\(
8407	SUBDATASET_(\d+)_
8408	SUBJECT=
8409	SUCCESS COMPLETE WRF
8410	SUNW
8411	SUPPRESSIONS USED:
8412	SWEEP
8413	Sat *Feb *2 *03:04:.. 1980
8414	Scaled Residual \[[0-9.e-]+\]
8415	Scan
8416	Scheduled ([0-9]*) items in [0-9.]* = ([0-9.]*) match \+ ([0-9.]*) place
8417	Schwanksta pushed to (?P<branch>(.*)) at (?P<repository>(.*))
8418	Senator ([\w\s\.\,\"\-]+)\s*\-\s*District
8419	Senator
8420	Send::[a-z0-9]+::43
8421	Send::[a-z0-9]+::44
8422	Send::[a-z0-9]+::45
8423	Set TRANSCOMM\s*=\s*(.*)$
8424	Shots
8425	Signed_Update.jar
8426	Simple_1Of_1unk_host
8427	Simple_1Of_1unk_svc
8428	Site-class models:\s*([^\s]*)
8429	Size (?P<size>.+),
8430	Size: (\d+)<
8431	Smith-Waterman score = (\S+)\s+Evalue = (\S+)
8432	Socket\(s\):\s+(\d+)
8433	Sockets=(\S+)
8434	Source/WebKit2/UIProcess/API/gtk/WebKit(?!.*Private\.h).*\.h$
8435	SourceMod v\.<b>([\d\.]+)</td>
8436	Sp.
8437	Spanish Inquisition
8438	Sparse is better than dense
8439	Species
8440	Start_time
8441	Starting Device Forwarder.
8442	Starting glance-[a-z]+ with
8443	State
8444	State\s+(?:Senator|Representative)\n(.*?)\n([R|D]).*?[\n]*(\d+)(?:st|nd|rd|th)
8445	Static Public Member Functions
8446	Stream\s*(.*?)[,|:|\(|\[].*?\s*Audio:\s*(.*?),\s*([0-9\.]*) (\w*),\s*([a-zA-Z:]*)
8447	Stream\s*(.*?)[,|:|\(|\[].*?\s*Video:\s*(.*?),\s*(.*?),\s*(\d*)x(\d*)
8448	Stream\s*(.*?)[,|:|\(|\[].*?\s*Video:\s*(.*?),\s*(\d*)x(\d*)
8449	Summary in:\s*(\S*)
8450	Summary
8451	SupportedFeatures:\s*(?P<features_string>.*)\s*
8452	System
8453	SystemName="([A-Fa-f0-9]{16})",DeviceID="([A-Fa-f0-9]{40})".*InstanceID="(.{56})"
8454	TA
8455	TEMPLATE=
8456	TER
8457	TERMINAL=
8458	TEST-(PASS|FAIL|RESULT.*?):\s+(.*?)\s+(.*?)\r*\n
8459	TEST-PASS
8460	TEST-START \| ([^\n]+)\n
8461	TEST-START \| ([^\s]*)
8462	TEST-UNEXPECTED-
8463	TEST-UNEXPECTED-FAIL \| .* \| (Browser crashed \(minidump found\)|missing output line for total leaks!|negative leaks caught!|leaked \d+ bytes during test execution)
8464	TEST-UNEXPECTED-FAIL \| .* \| (missing output line for total leaks!|negative leaks caught!|leaked \d+ bytes during test execution)
8465	TFORM[0-9]+
8466	TIME_UTC
8467	TM-score\s*=\s*(\d*\.\d*)
8468	TORINO2:\s\d+
8469	TOTAL\s+(\d+)\s+[\-\d\.]+\%\s+(\d+)
8470	TRACE
8471	TX bytes:(\d+)
8472	TX packets:(\d+)
8473	TX\s+bytes:?\s*(?P<c>\d+)
8474	TYPE
8475	TYPE: (\d) X: (\d+) Y: (\d+)
8476	Tablet; rv:([\d.]+)
8477	Target: ([a-zA-Z0-9_\-]*)
8478	Tcp port:\s*(\d+)\s+Unix socket:\s+(.*)
8479	Telephone:
8480	The following optional packages could not be found
8481	The git commit ID used was [a-f0-9]+
8482	The key fingerprint is:\s+(\S+)\s+
8483	The question being
8484	The style
8485	This is (pdfTeXk|latex2e|latex|XeTeXk)
8486	This is BibTeX
8487	This is file for test of virt-copy-in.
8488	This is file for test of virt-copy-out.
8489	This is file for test of virt-tar-in.
8490	This is file for test of virt-tar-out.
8491	This is file for test_blockdev_rw.
8492	This is makeindex
8493	This job was only very recently submitted
8494	Thread\(s\) per core:\s+(\d+)
8495	Threshold of effective gap content in columns: (\S+)
8496	Throughput (.*?) MB/sec (.*?) procs
8497	Time in seconds\s*=\s*(.*)\n
8498	Timeout=([0-9\.]+)
8499	TimeoutError: Request timed out after 5.000000 seconds
8500	TimeoutScale:([0-9]+)
8501	Title2(\s|$)
8502	TitleCommittee
8503	To[A-Z0-9]
8504	Too many open files
8505	Topic
8506	Totaal
8507	Total Votes:
8508	Total threads\s*=\s*(.*)\n
8509	Total times\s*cpu:.*wall:.*
8510	Town
8511	Trans Opt (\d+) \[(\d+)\.\.(\d+)\]:((?: \[\d+\.\.\d+\]=\S+  )+): (\S+) ->((?:\S+ )+):((?:\d+-\d+ )*): pC=
8512	Transcript written on (.*).$
8513	Transcript written on (.*)\.$
8514	Trusted
8515	U ().*\/([\w\.]+):(\d+)$
8516	UID (\d+)
8517	UKUPNO:\s([\d.]*)
8518	UNC_EMBED=
8519	UNSEEN\s+(\d+)
8520	UPX_ENCODE=
8521	UPX_PATH=
8522	UP\s+(?:[0-9]{1,3}\.){3}[0-9]{1,3}
8523	URL=
8524	URLHERE
8525	USAGE:
8526	USE (\w+);?
8527	Unable to access jarfile
8528	Underfull.*badness
8529	Unknown format
8530	Unlocking a non-locked lock|accessing an invalid lock|which did not acquire this lock
8531	Usable as:\s*$
8532	Used memory:\s+(\d+)
8533	User Serial:([0-9]+)
8534	User:
8535	V ([\d\.]+)
8536	V :\s*([\d.]+).*
8537	V \[([\w \.]+)\] \(([\d\.]+) V/LSB\) ([-\d\.]+)
8538	V(\d*)_
8539	VALUE
8540	VARCHAR\(([0-9]+)\)
8541	VERSION\s*=\s["\\'](.*?)["\\']
8542	VG
8543	VIP
8544	VISITORSHERE
8545	VO-cms-
8546	VO-cms-CMSSW_
8547	VTK_DATA_ROOT/
8548	Verbosity is
8549	Version ([0-9]+\.[0-9]+\.[0-9]+)
8550	Video: \w+
8551	Village
8552	Vote_Bord
8553	W (\d{1,3}) ([10PX])
8554	WARN: [\w.]+/\w+/[0-9.]+[ab][0-9]+/.*release.* exists
8555	WARN: target directory .* exists
8556	WARNING: unrecognized options
8557	WAVEFORM_NAME_(\d+)
8558	WEBATTACK_EMAIL=ON
8559	WEBATTACK_SSL=ON
8560	WEBJACKING_TIME=
8561	WEB_PORT=
8562	WMS|OWS
8563	Warning \d+ in (.*.tex) line (\d+):(.*)
8564	Warning\\?:.*
8565	We have a develop egg: (\S+) (\S+)
8566	We have a develop egg: zc.buildout (\S+)
8567	Week (\d{1,2}) ending (January|February|March|April|May|June|July|August|September|October|November|December) (\d{1,2}), (\d{4})
8568	Windows%20
8569	WindowsError
8570	WordNet (\d+\.\d+) Copyright
8571	WordPress
8572	Working file: (?P<filename>.*)
8573	Working file: ([a-zA-Z0-9_./]*)
8574	X(.*)Y(.*)
8575	X+
8576	X-Transmission-Session-Id:\s*(\w+)
8577	Xcode ([a-zA-Z0-9.]+)
8578	Y(\d+) N(\d+)\s*(?:\w(\d+))*\s*(?:\w(\d+))*\s*(?:\w(\d+))*
8579	Yeas
8580	You have received (a|\d+) .*new response.*
8581	Your SMS was sent
8582	Your job (\d+) .* has been submitted
8583	Z(.*)
8584	Zip [0-9]\.*[0-9]*\.*[0-9]*
8585	Zoom to fit
8586	[   \r\n]+
8587	[ ?]
8588	[ T]
8589	[ \*]*(.+)
8590	[ \.\[\]=}(\)\,0-9"]
8591	[ \[(\n\t]([a-zA-Z0-9\-.]{4,70}\.(?:ac|com\.ac|edu\.ac|gov\.ac|net\.ac|mil\.ac|org\.ac|ad|nom\.ad|ae|co\.ae|net\.ae|org\.ae|sch\.ae|ac\.ae|gov\.ae|mil\.ae|aero|accident-investigation\.aero|accident-prevention\.aero|aerobatic\.aero|aeroclub\.aero|aerodrome\.aero|agents\.aero|aircraft\.aero|airline\.aero|airport\.aero|air-surveillance\.aero|airtraffic\.aero|air-traffic-control\.aero|ambulance\.aero|amusement\.aero|association\.aero|author\.aero|ballooning\.aero|broker\.aero|caa\.aero|cargo\.aero|catering\.aero|certification\.aero|championship\.aero|charter\.aero|civilaviation\.aero|club\.aero|conference\.aero|consultant\.aero|consulting\.aero|control\.aero|council\.aero|crew\.aero|design\.aero|dgca\.aero|educator\.aero|emergency\.aero|engine\.aero|engineer\.aero|entertainment\.aero|equipment\.aero|exchange\.aero|express\.aero|federation\.aero|flight\.aero|freight\.aero|fuel\.aero|gliding\.aero|government\.aero|groundhandling\.aero|group\.aero|hanggliding\.aero|homebuilt\.aero|insurance\.aero|journal\.aero|journalist\.aero|leasing\.aero|logistics\.aero|magazine\.aero|maintenance\.aero|marketplace\.aero|media\.aero|microlight\.aero|modelling\.aero|navigation\.aero|parachuting\.aero|paragliding\.aero|passenger-association\.aero|pilot\.aero|press\.aero|production\.aero|recreation\.aero|repbody\.aero|res\.aero|research\.aero|rotorcraft\.aero|safety\.aero|scientist\.aero|services\.aero|show\.aero|skydiving\.aero|software\.aero|student\.aero|taxi\.aero|trader\.aero|trading\.aero|trainer\.aero|union\.aero|workinggroup\.aero|works\.aero|af|gov\.af|com\.af|org\.af|net\.af|edu\.af|ag|com\.ag|org\.ag|net\.ag|co\.ag|nom\.ag|ai|off\.ai|com\.ai|net\.ai|org\.ai|al|gov\.al|edu\.al|org\.al|com\.al|net\.al|am|an|com\.an|net\.an|org\.an|edu\.an|ao|ed\.ao|gv\.ao|og\.ao|co\.ao|pb\.ao|it\.ao|aq|ar|e164\.arpa|in-addr\.arpa|ip6\.arpa|uri\.arpa|urn\.arpa|as|gov\.as|asia|at|gv\.at|ac\.at|co\.at|or\.at|priv\.at|au|act\.edu\.au|nsw\.edu\.au|nt\.edu\.au|qld\.edu\.au|sa\.edu\.au|tas\.edu\.au|vic\.edu\.au|wa\.edu\.au|act\.gov\.au|nsw\.gov\.au|nt\.gov\.au|qld\.gov\.au|sa\.gov\.au|tas\.gov\.au|vic\.gov\.au|wa\.gov\.au|aw|com\.aw|ax|az|com\.az|net\.az|int\.az|gov\.az|org\.az|edu\.az|info\.az|pp\.az|mil\.az|name\.az|pro\.az|biz\.az|ba|org\.ba|net\.ba|edu\.ba|gov\.ba|mil\.ba|unsa\.ba|unbi\.ba|co\.ba|com\.ba|rs\.ba|bb|com\.bb|edu\.bb|gov\.bb|net\.bb|org\.bb|bd|be|ac\.be|bf|gov\.bf|bg|a\.bg|b\.bg|c\.bg|d\.bg|e\.bg|f\.bg|g\.bg|h\.bg|i\.bg|j\.bg|k\.bg|l\.bg|m\.bg|n\.bg|o\.bg|p\.bg|q\.bg|r\.bg|s\.bg|t\.bg|u\.bg|v\.bg|w\.bg|x\.bg|y\.bg|z\.bg|0\.bg|1\.bg|2\.bg|3\.bg|4\.bg|5\.bg|6\.bg|7\.bg|8\.bg|9\.bg|bh|com\.bh|bi|co\.bi|com\.bi|edu\.bi|or\.bi|org\.bi|biz|bj|bm|com\.bm|edu\.bm|gov\.bm|net\.bm|org\.bm|bn|bo|com\.bo|edu\.bo|gov\.bo|gob\.bo|int\.bo|org\.bo|net\.bo|mil\.bo|tv\.bo|br|adm\.br|adv\.br|agr\.br|am\.br|arq\.br|art\.br|ato\.br|bio\.br|blog\.br|bmd\.br|can\.br|cim\.br|cng\.br|cnt\.br|com\.br|coop\.br|ecn\.br|edu\.br|eng\.br|esp\.br|etc\.br|eti\.br|far\.br|flog\.br|fm\.br|fnd\.br|fot\.br|fst\.br|g12\.br|ggf\.br|gov\.br|imb\.br|ind\.br|inf\.br|jor\.br|jus\.br|lel\.br|mat\.br|med\.br|mil\.br|mus\.br|net\.br|nom\.br|not\.br|ntr\.br|odo\.br|org\.br|ppg\.br|pro\.br|psc\.br|psi\.br|qsl\.br|rec\.br|slg\.br|srv\.br|tmp\.br|trd\.br|tur\.br|tv\.br|vet\.br|vlog\.br|wiki\.br|zlg\.br|bs|com\.bs|net\.bs|org\.bs|edu\.bs|gov\.bs|bt|bw|co\.bw|org\.bw|by|gov\.by|mil\.by|com\.by|bz|com\.bz|net\.bz|org\.bz|edu\.bz|gov\.bz|ca|ab\.ca|bc\.ca|mb\.ca|nb\.ca|nf\.ca|nl\.ca|ns\.ca|nt\.ca|nu\.ca|on\.ca|pe\.ca|qc\.ca|sk\.ca|yk\.ca|gc\.ca|cat|cc|cd|gov\.cd|cf|cg|ch|ci|org\.ci|or\.ci|com\.ci|co\.ci|edu\.ci|ed\.ci|ac\.ci|net\.ci|go\.ci|asso\.ci|a\xc3\xa9roport\.ci|int\.ci|presse\.ci|md\.ci|gouv\.ci|ck|cl|gov\.cl|gob\.cl|cm|gov\.cm|cn|ac\.cn|com\.cn|edu\.cn|gov\.cn|net\.cn|org\.cn|mil\.cn|\xe5\x85\xac\xe5\x8f\xb8\.cn|\xe7\xbd\x91\xe7\xbb\x9c\.cn|\xe7\xb6\xb2\xe7\xb5\xa1\.cn|ah\.cn|bj\.cn|cq\.cn|fj\.cn|gd\.cn|gs\.cn|gz\.cn|gx\.cn|ha\.cn|hb\.cn|he\.cn|hi\.cn|hl\.cn|hn\.cn|jl\.cn|js\.cn|jx\.cn|ln\.cn|nm\.cn|nx\.cn|qh\.cn|sc\.cn|sd\.cn|sh\.cn|sn\.cn|sx\.cn|tj\.cn|xj\.cn|xz\.cn|yn\.cn|zj\.cn|hk\.cn|mo\.cn|tw\.cn|co|arts\.co|com\.co|edu\.co|firm\.co|gov\.co|info\.co|int\.co|mil\.co|net\.co|nom\.co|org\.co|rec\.co|web\.co|com|ar\.com|br\.com|cn\.com|de\.com|eu\.com|gb\.com|hu\.com|jpn\.com|kr\.com|no\.com|qc\.com|ru\.com|sa\.com|se\.com|uk\.com|us\.com|uy\.com|za\.com|coop|cr|cu|com\.cu|edu\.cu|org\.cu|net\.cu|gov\.cu|inf\.cu|cv|cx|gov\.cx|cy|cz|de|dj|dk|dm|com\.dm|net\.dm|org\.dm|edu\.dm|gov\.dm|do|dz|com\.dz|org\.dz|net\.dz|gov\.dz|edu\.dz|asso\.dz|pol\.dz|art\.dz|ec|com\.ec|info\.ec|net\.ec|fin\.ec|k12\.ec|med\.ec|pro\.ec|org\.ec|edu\.ec|gov\.ec|mil\.ec|edu|ee|edu\.ee|gov\.ee|riik\.ee|lib\.ee|med\.ee|com\.ee|pri\.ee|aip\.ee|org\.ee|fie\.ee|eg|er|es|com\.es|nom\.es|org\.es|gob\.es|edu\.es|et|eu|fi|aland\.fi|fj|fk|fm|fo|fr|com\.fr|asso\.fr|nom\.fr|prd\.fr|presse\.fr|tm\.fr|aeroport\.fr|assedic\.fr|avocat\.fr|avoues\.fr|cci\.fr|chambagri\.fr|chirurgiens-dentistes\.fr|experts-comptables\.fr|geometre-expert\.fr|gouv\.fr|greta\.fr|huissier-justice\.fr|medecin\.fr|notaires\.fr|pharmacien\.fr|port\.fr|veterinaire\.fr|ga|gd|ge|com\.ge|edu\.ge|gov\.ge|org\.ge|mil\.ge|net\.ge|pvt\.ge|gf|gg|co\.gg|org\.gg|net\.gg|sch\.gg|gov\.gg|gh|com\.gh|edu\.gh|gov\.gh|org\.gh|mil\.gh|gi|com\.gi|ltd\.gi|gov\.gi|mod\.gi|edu\.gi|org\.gi|gl|gm|ac\.gn|com\.gn|edu\.gn|gov\.gn|org\.gn|net\.gn|gov|gp|com\.gp|net\.gp|mobi\.gp|edu\.gp|org\.gp|asso\.gp|gq|gr|com\.gr|edu\.gr|net\.gr|org\.gr|gov\.gr|gs|gt|gu|gw|gy|co\.gy|com\.gy|net\.gy|hk|com\.hk|edu\.hk|gov\.hk|idv\.hk|net\.hk|org\.hk|\xe5\x85\xac\xe5\x8f\xb8\.hk|\xe6\x95\x99\xe8\x82\xb2\.hk|\xe6\x95\x8e\xe8\x82\xb2\.hk|\xe6\x94\xbf\xe5\xba\x9c\.hk|\xe5\x80\x8b\xe4\xba\xba\.hk|\xe4\xb8\xaa\xe4\xba\xba\.hk|\xe7\xae\x87\xe4\xba\xba\.hk|\xe7\xb6\xb2\xe7\xbb\x9c\.hk|\xe7\xbd\x91\xe7\xbb\x9c\.hk|\xe7\xbb\x84\xe7\xb9\x94\.hk|\xe7\xb6\xb2\xe7\xb5\xa1\.hk|\xe7\xbd\x91\xe7\xb5\xa1\.hk|\xe7\xbb\x84\xe7\xbb\x87\.hk|\xe7\xb5\x84\xe7\xb9\x94\.hk|\xe7\xb5\x84\xe7\xbb\x87\.hk|hm|hn|com\.hn|edu\.hn|org\.hn|net\.hn|mil\.hn|gob\.hn|hr|iz\.hr|from\.hr|name\.hr|com\.hr|ht|com\.ht|shop\.ht|firm\.ht|info\.ht|adult\.ht|net\.ht|pro\.ht|org\.ht|med\.ht|art\.ht|coop\.ht|pol\.ht|asso\.ht|edu\.ht|rel\.ht|gouv\.ht|perso\.ht|hu|co\.hu|info\.hu|org\.hu|priv\.hu|sport\.hu|tm\.hu|2000\.hu|agrar\.hu|bolt\.hu|casino\.hu|city\.hu|erotica\.hu|erotika\.hu|film\.hu|forum\.hu|games\.hu|hotel\.hu|ingatlan\.hu|jogasz\.hu|konyvelo\.hu|lakas\.hu|media\.hu|news\.hu|reklam\.hu|sex\.hu|shop\.hu|suli\.hu|szex\.hu|tozsde\.hu|utazas\.hu|video\.hu|id|ie|gov\.ie|il|im|co\.im|ltd\.co\.im|plc\.co\.im|net\.im|gov\.im|org\.im|nic\.im|ac\.im|in|co\.in|firm\.in|net\.in|org\.in|gen\.in|ind\.in|nic\.in|ac\.in|edu\.in|res\.in|gov\.in|mil\.in|info|int|eu\.int|io|com\.io|iq|gov\.iq|edu\.iq|ir|ac\.ir|co\.ir|gov\.ir|id\.ir|net\.ir|org\.ir|sch\.ir|is|net\.is|com\.is|edu\.is|gov\.is|org\.is|int\.is|it|gov\.it|edu\.it|agrigento\.it|ag\.it|alessandria\.it|al\.it|ancona\.it|an\.it|aosta\.it|aoste\.it|ao\.it|arezzo\.it|ar\.it|ascoli-piceno\.it|ascolipiceno\.it|ap\.it|asti\.it|at\.it|avellino\.it|av\.it|bari\.it|ba\.it|barlettaandriatrani\.it|barletta-andria-trani\.it|belluno\.it|bl\.it|benevento\.it|bn\.it|bergamo\.it|bg\.it|biella\.it|bi\.it|bologna\.it|bo\.it|bolzano\.it|bozen\.it|balsan\.it|alto-adige\.it|altoadige\.it|suedtirol\.it|bz\.it|brescia\.it|bs\.it|brindisi\.it|br\.it|cagliari\.it|ca\.it|caltanissetta\.it|cl\.it|campobasso\.it|cb\.it|caserta\.it|ce\.it|catania\.it|ct\.it|catanzaro\.it|cz\.it|chieti\.it|ch\.it|como\.it|co\.it|cosenza\.it|cs\.it|cremona\.it|cr\.it|crotone\.it|kr\.it|cuneo\.it|cn\.it|enna\.it|en\.it|fermo\.it|ferrara\.it|fe\.it|firenze\.it|florence\.it|fi\.it|foggia\.it|fg\.it|forli-cesena\.it|forlicesena\.it|fc\.it|frosinone\.it|fr\.it|genova\.it|genoa\.it|ge\.it|gorizia\.it|go\.it|grosseto\.it|gr\.it|imperia\.it|im\.it|isernia\.it|is\.it|laquila\.it|aquila\.it|aq\.it|la-spezia\.it|laspezia\.it|sp\.it|latina\.it|lt\.it|lecce\.it|le\.it|lecco\.it|lc\.it|livorno\.it|li\.it|lodi\.it|lo\.it|lucca\.it|lu\.it|macerata\.it|mc\.it|mantova\.it|mn\.it|massa-carrara\.it|massacarrara\.it|ms\.it|matera\.it|mt\.it|messina\.it|me\.it|milano\.it|milan\.it|mi\.it|modena\.it|mo\.it|monza\.it|napoli\.it|naples\.it|na\.it|novara\.it|no\.it|nuoro\.it|nu\.it|oristano\.it|or\.it|padova\.it|padua\.it|pd\.it|palermo\.it|pa\.it|parma\.it|pr\.it|pavia\.it|pv\.it|perugia\.it|pg\.it|pescara\.it|pe\.it|pesaro-urbino\.it|pesarourbino\.it|pu\.it|piacenza\.it|pc\.it|pisa\.it|pi\.it|pistoia\.it|pt\.it|pordenone\.it|pn\.it|potenza\.it|pz\.it|prato\.it|po\.it|ragusa\.it|rg\.it|ravenna\.it|ra\.it|reggio-calabria\.it|reggiocalabria\.it|rc\.it|reggio-emilia\.it|reggioemilia\.it|re\.it|rieti\.it|ri\.it|rimini\.it|rn\.it|roma\.it|rome\.it|rm\.it|rovigo\.it|ro\.it|salerno\.it|sa\.it|sassari\.it|ss\.it|savona\.it|sv\.it|siena\.it|si\.it|siracusa\.it|sr\.it|sondrio\.it|so\.it|taranto\.it|ta\.it|teramo\.it|te\.it|terni\.it|tr\.it|torino\.it|turin\.it|to\.it|trapani\.it|tp\.it|trento\.it|trentino\.it|tn\.it|treviso\.it|tv\.it|trieste\.it|ts\.it|udine\.it|ud\.it|varese\.it|va\.it|venezia\.it|venice\.it|ve\.it|verbania\.it|vb\.it|vercelli\.it|vc\.it|verona\.it|vr\.it|vibo-valentia\.it|vibovalentia\.it|vv\.it|vicenza\.it|vi\.it|viterbo\.it|vt\.it|je|co\.je|org\.je|net\.je|sch\.je|gov\.je|jm|jo|com\.jo|org\.jo|net\.jo|edu\.jo|sch\.jo|gov\.jo|mil\.jo|name\.jo|jobs|jp|ac\.jp|ad\.jp|co\.jp|ed\.jp|go\.jp|gr\.jp|lg\.jp|ne\.jp|or\.jp|aichi\.jp|akita\.jp|aomori\.jp|chiba\.jp|ehime\.jp|fukui\.jp|fukuoka\.jp|fukushima\.jp|gifu\.jp|gunma\.jp|hiroshima\.jp|hokkaido\.jp|hyogo\.jp|ibaraki\.jp|ishikawa\.jp|iwate\.jp|kagawa\.jp|kagoshima\.jp|kanagawa\.jp|kawasaki\.jp|kitakyushu\.jp|kobe\.jp|kochi\.jp|kumamoto\.jp|kyoto\.jp|mie\.jp|miyagi\.jp|miyazaki\.jp|nagano\.jp|nagasaki\.jp|nagoya\.jp|nara\.jp|niigata\.jp|oita\.jp|okayama\.jp|okinawa\.jp|osaka\.jp|saga\.jp|saitama\.jp|sapporo\.jp|sendai\.jp|shiga\.jp|shimane\.jp|shizuoka\.jp|tochigi\.jp|tokushima\.jp|tokyo\.jp|tottori\.jp|toyama\.jp|wakayama\.jp|yamagata\.jp|yamaguchi\.jp|yamanashi\.jp|yokohama\.jp|ke|kg|org\.kg|net\.kg|com\.kg|edu\.kg|gov\.kg|mil\.kg|kh|ki|edu\.ki|biz\.ki|net\.ki|org\.ki|gov\.ki|info\.ki|com\.ki|km|org\.km|nom\.km|gov\.km|prd\.km|tm\.km|edu\.km|mil\.km|ass\.km|com\.km|coop\.km|asso\.km|presse\.km|medecin\.km|notaires\.km|pharmaciens\.km|veterinaire\.km|gouv\.km|kn|net\.kn|org\.kn|edu\.kn|gov\.kn|kr|ac\.kr|co\.kr|es\.kr|go\.kr|hs\.kr|kg\.kr|mil\.kr|ms\.kr|ne\.kr|or\.kr|pe\.kr|re\.kr|sc\.kr|busan\.kr|chungbuk\.kr|chungnam\.kr|daegu\.kr|daejeon\.kr|gangwon\.kr|gwangju\.kr|gyeongbuk\.kr|gyeonggi\.kr|gyeongnam\.kr|incheon\.kr|jeju\.kr|jeonbuk\.kr|jeonnam\.kr|seoul\.kr|ulsan\.kr|kw|ky|edu\.ky|gov\.ky|com\.ky|org\.ky|net\.ky|kz|org\.kz|edu\.kz|net\.kz|gov\.kz|mil\.kz|com\.kz|la|int\.la|net\.la|info\.la|edu\.la|gov\.la|per\.la|com\.la|org\.la|c\.la|com\.lb|edu\.lb|gov\.lb|net\.lb|org\.lb|lc|com\.lc|net\.lc|co\.lc|org\.lc|edu\.lc|gov\.lc|li|lk|gov\.lk|sch\.lk|net\.lk|int\.lk|com\.lk|org\.lk|edu\.lk|ngo\.lk|soc\.lk|web\.lk|ltd\.lk|assn\.lk|grp\.lk|hotel\.lk|com\.lr|edu\.lr|gov\.lr|org\.lr|net\.lr|ls|co\.ls|org\.ls|lt|gov\.lt|lu|lv|com\.lv|edu\.lv|gov\.lv|org\.lv|mil\.lv|id\.lv|net\.lv|asn\.lv|conf\.lv|ly|com\.ly|net\.ly|gov\.ly|plc\.ly|edu\.ly|sch\.ly|med\.ly|org\.ly|id\.ly|ma|co\.ma|net\.ma|gov\.ma|org\.ma|ac\.ma|press\.ma|mc|tm\.mc|asso\.mc|md|me|co\.me|net\.me|org\.me|edu\.me|ac\.me|gov\.me|its\.me|priv\.me|mg|org\.mg|nom\.mg|gov\.mg|prd\.mg|tm\.mg|edu\.mg|mil\.mg|com\.mg|mh|mil|mk|com\.mk|org\.mk|net\.mk|edu\.mk|gov\.mk|inf\.mk|name\.mk|ml|mm|mn|gov\.mn|edu\.mn|org\.mn|mo|com\.mo|net\.mo|org\.mo|edu\.mo|gov\.mo|mobi|mp|mq|mr|gov\.mr|ms|mt|mu|com\.mu|net\.mu|org\.mu|gov\.mu|ac\.mu|co\.mu|or\.mu|museum|academy\.museum|agriculture\.museum|air\.museum|airguard\.museum|alabama\.museum|alaska\.museum|amber\.museum|ambulance\.museum|american\.museum|americana\.museum|americanantiques\.museum|americanart\.museum|amsterdam\.museum|and\.museum|annefrank\.museum|anthro\.museum|anthropology\.museum|antiques\.museum|aquarium\.museum|arboretum\.museum|archaeological\.museum|archaeology\.museum|architecture\.museum|art\.museum|artanddesign\.museum|artcenter\.museum|artdeco\.museum|arteducation\.museum|artgallery\.museum|arts\.museum|artsandcrafts\.museum|asmatart\.museum|assassination\.museum|assisi\.museum|association\.museum|astronomy\.museum|atlanta\.museum|austin\.museum|australia\.museum|automotive\.museum|aviation\.museum|axis\.museum|badajoz\.museum|baghdad\.museum|bahn\.museum|bale\.museum|baltimore\.museum|barcelona\.museum|baseball\.museum|basel\.museum|baths\.museum|bauern\.museum|beauxarts\.museum|beeldengeluid\.museum|bellevue\.museum|bergbau\.museum|berkeley\.museum|berlin\.museum|bern\.museum|bible\.museum|bilbao\.museum|bill\.museum|birdart\.museum|birthplace\.museum|bonn\.museum|boston\.museum|botanical\.museum|botanicalgarden\.museum|botanicgarden\.museum|botany\.museum|brandywinevalley\.museum|brasil\.museum|bristol\.museum|british\.museum|britishcolumbia\.museum|broadcast\.museum|brunel\.museum|brussel\.museum|brussels\.museum|bruxelles\.museum|building\.museum|burghof\.museum|bus\.museum|bushey\.museum|cadaques\.museum|california\.museum|cambridge\.museum|can\.museum|canada\.museum|capebreton\.museum|carrier\.museum|cartoonart\.museum|casadelamoneda\.museum|castle\.museum|castres\.museum|celtic\.museum|center\.museum|chattanooga\.museum|cheltenham\.museum|chesapeakebay\.museum|chicago\.museum|children\.museum|childrens\.museum|childrensgarden\.museum|chiropractic\.museum|chocolate\.museum|christiansburg\.museum|cincinnati\.museum|cinema\.museum|circus\.museum|civilisation\.museum|civilization\.museum|civilwar\.museum|clinton\.museum|clock\.museum|coal\.museum|coastaldefence\.museum|cody\.museum|coldwar\.museum|collection\.museum|colonialwilliamsburg\.museum|coloradoplateau\.museum|columbia\.museum|columbus\.museum|communication\.museum|communications\.museum|community\.museum|computer\.museum|computerhistory\.museum|comunica\xc3\xa7\xc3\xb5es\.museum|contemporary\.museum|contemporaryart\.museum|convent\.museum|copenhagen\.museum|corporation\.museum|correios-e-telecomunica\xc3\xa7\xc3\xb5es\.museum|corvette\.museum|costume\.museum|countryestate\.museum|county\.museum|crafts\.museum|cranbrook\.museum|creation\.museum|cultural\.museum|culturalcenter\.museum|culture\.museum|cyber\.museum|cymru\.museum|dali\.museum|dallas\.museum|database\.museum|ddr\.museum|decorativearts\.museum|delaware\.museum|delmenhorst\.museum|denmark\.museum|depot\.museum|design\.museum|detroit\.museum|dinosaur\.museum|discovery\.museum|dolls\.museum|donostia\.museum|durham\.museum|eastafrica\.museum|eastcoast\.museum|education\.museum|educational\.museum|egyptian\.museum|eisenbahn\.museum|elburg\.museum|elvendrell\.museum|embroidery\.museum|encyclopedic\.museum|england\.museum|entomology\.museum|environment\.museum|environmentalconservation\.museum|epilepsy\.museum|essex\.museum|estate\.museum|ethnology\.museum|exeter\.museum|exhibition\.museum|family\.museum|farm\.museum|farmequipment\.museum|farmers\.museum|farmstead\.museum|field\.museum|figueres\.museum|filatelia\.museum|film\.museum|fineart\.museum|finearts\.museum|finland\.museum|flanders\.museum|florida\.museum|force\.museum|fortmissoula\.museum|fortworth\.museum|foundation\.museum|francaise\.museum|frankfurt\.museum|franziskaner\.museum|freemasonry\.museum|freiburg\.museum|fribourg\.museum|frog\.museum|fundacio\.museum|furniture\.museum|gallery\.museum|garden\.museum|gateway\.museum|geelvinck\.museum|gemological\.museum|geology\.museum|georgia\.museum|giessen\.museum|glas\.museum|glass\.museum|gorge\.museum|grandrapids\.museum|graz\.museum|guernsey\.museum|halloffame\.museum|hamburg\.museum|handson\.museum|harvestcelebration\.museum|hawaii\.museum|health\.museum|heimatunduhren\.museum|hellas\.museum|helsinki\.museum|hembygdsforbund\.museum|heritage\.museum|histoire\.museum|historical\.museum|historicalsociety\.museum|historichouses\.museum|historisch\.museum|historisches\.museum|history\.museum|historyofscience\.museum|horology\.museum|house\.museum|humanities\.museum|illustration\.museum|imageandsound\.museum|indian\.museum|indiana\.museum|indianapolis\.museum|indianmarket\.museum|intelligence\.museum|interactive\.museum|iraq\.museum|iron\.museum|isleofman\.museum|jamison\.museum|jefferson\.museum|jerusalem\.museum|jewelry\.museum|jewish\.museum|jewishart\.museum|jfk\.museum|journalism\.museum|judaica\.museum|judygarland\.museum|juedisches\.museum|juif\.museum|karate\.museum|karikatur\.museum|kids\.museum|koebenhavn\.museum|koeln\.museum|kunst\.museum|kunstsammlung\.museum|kunstunddesign\.museum|labor\.museum|labour\.museum|lajolla\.museum|lancashire\.museum|landes\.museum|lans\.museum|l\xc3\xa4ns\.museum|larsson\.museum|lewismiller\.museum|lincoln\.museum|linz\.museum|living\.museum|livinghistory\.museum|localhistory\.museum|london\.museum|losangeles\.museum|louvre\.museum|loyalist\.museum|lucerne\.museum|luxembourg\.museum|luzern\.museum|mad\.museum|madrid\.museum|mallorca\.museum|manchester\.museum|mansion\.museum|mansions\.museum|manx\.museum|marburg\.museum|maritime\.museum|maritimo\.museum|maryland\.museum|marylhurst\.museum|media\.museum|medical\.museum|medizinhistorisches\.museum|meeres\.museum|memorial\.museum|mesaverde\.museum|michigan\.museum|midatlantic\.museum|military\.museum|mill\.museum|miners\.museum|mining\.museum|minnesota\.museum|missile\.museum|missoula\.museum|modern\.museum|moma\.museum|money\.museum|monmouth\.museum|monticello\.museum|montreal\.museum|moscow\.museum|motorcycle\.museum|muenchen\.museum|muenster\.museum|mulhouse\.museum|muncie\.museum|museet\.museum|museumcenter\.museum|museumvereniging\.museum|music\.museum|national\.museum|nationalfirearms\.museum|nationalheritage\.museum|nativeamerican\.museum|naturalhistory\.museum|naturalhistorymuseum\.museum|naturalsciences\.museum|nature\.museum|naturhistorisches\.museum|natuurwetenschappen\.museum|naumburg\.museum|naval\.museum|nebraska\.museum|neues\.museum|newhampshire\.museum|newjersey\.museum|newmexico\.museum|newport\.museum|newspaper\.museum|newyork\.museum|niepce\.museum|norfolk\.museum|north\.museum|nrw\.museum|nuernberg\.museum|nuremberg\.museum|nyc\.museum|nyny\.museum|oceanographic\.museum|oceanographique\.museum|omaha\.museum|online\.museum|ontario\.museum|openair\.museum|oregon\.museum|oregontrail\.museum|otago\.museum|oxford\.museum|pacific\.museum|paderborn\.museum|palace\.museum|paleo\.museum|palmsprings\.museum|panama\.museum|paris\.museum|pasadena\.museum|pharmacy\.museum|philadelphia\.museum|philadelphiaarea\.museum|philately\.museum|phoenix\.museum|photography\.museum|pilots\.museum|pittsburgh\.museum|planetarium\.museum|plantation\.museum|plants\.museum|plaza\.museum|portal\.museum|portland\.museum|portlligat\.museum|posts-and-telecommunications\.museum|preservation\.museum|presidio\.museum|press\.museum|project\.museum|public\.museum|pubol\.museum|quebec\.museum|railroad\.museum|railway\.museum|research\.museum|resistance\.museum|riodejaneiro\.museum|rochester\.museum|rockart\.museum|roma\.museum|russia\.museum|saintlouis\.museum|salem\.museum|salvadordali\.museum|salzburg\.museum|sandiego\.museum|sanfrancisco\.museum|santabarbara\.museum|santacruz\.museum|santafe\.museum|saskatchewan\.museum|satx\.museum|savannahga\.museum|schlesisches\.museum|schoenbrunn\.museum|schokoladen\.museum|school\.museum|schweiz\.museum|science\.museum|scienceandhistory\.museum|scienceandindustry\.museum|sciencecenter\.museum|sciencecenters\.museum|science-fiction\.museum|sciencehistory\.museum|sciences\.museum|sciencesnaturelles\.museum|scotland\.museum|seaport\.museum|settlement\.museum|settlers\.museum|shell\.museum|sherbrooke\.museum|sibenik\.museum|silk\.museum|ski\.museum|skole\.museum|society\.museum|sologne\.museum|soundandvision\.museum|southcarolina\.museum|southwest\.museum|space\.museum|spy\.museum|square\.museum|stadt\.museum|stalbans\.museum|starnberg\.museum|state\.museum|stateofdelaware\.museum|station\.museum|steam\.museum|steiermark\.museum|stjohn\.museum|stockholm\.museum|stpetersburg\.museum|stuttgart\.museum|suisse\.museum|surgeonshall\.museum|surrey\.museum|svizzera\.museum|sweden\.museum|sydney\.museum|tank\.museum|tcm\.museum|technology\.museum|telekommunikation\.museum|television\.museum|texas\.museum|textile\.museum|theater\.museum|time\.museum|timekeeping\.museum|topology\.museum|torino\.museum|touch\.museum|town\.museum|transport\.museum|tree\.museum|trolley\.museum|trust\.museum|trustee\.museum|uhren\.museum|ulm\.museum|undersea\.museum|university\.museum|usa\.museum|usantiques\.museum|usarts\.museum|uscountryestate\.museum|usculture\.museum|usdecorativearts\.museum|usgarden\.museum|ushistory\.museum|ushuaia\.museum|uslivinghistory\.museum|utah\.museum|uvic\.museum|valley\.museum|vantaa\.museum|versailles\.museum|viking\.museum|village\.museum|virginia\.museum|virtual\.museum|virtuel\.museum|vlaanderen\.museum|volkenkunde\.museum|wales\.museum|wallonie\.museum|war\.museum|washingtondc\.museum|watchandclock\.museum|watch-and-clock\.museum|western\.museum|westfalen\.museum|whaling\.museum|wildlife\.museum|williamsburg\.museum|windmill\.museum|workshop\.museum|york\.museum|yorkshire\.museum|yosemite\.museum|youth\.museum|zoological\.museum|zoology\.museum|\xd7\x99\xd7\xa8\xd7\x95\xd7\xa9\xd7\x9c\xd7\x99\xd7\x9d\.museum|\xd0\xb8\xd0\xba\xd0\xbe\xd0\xbc\.museum|mv|mw|ac\.mw|biz\.mw|co\.mw|com\.mw|coop\.mw|edu\.mw|gov\.mw|int\.mw|net\.mw|org\.mw|mx|com\.mx|org\.mx|gob\.mx|edu\.mx|net\.mx|my|com\.my|net\.my|org\.my|gov\.my|edu\.my|mil\.my|name\.my|mz|na|info\.na|pro\.na|name\.na|school\.na|or\.na|dr\.na|us\.na|mx\.na|ca\.na|in\.na|cc\.na|tv\.na|ws\.na|mobi\.na|co\.na|com\.na|org\.na|name|nc|ne|net|gb\.net|se\.net|uk\.net|nf|com\.nf|net\.nf|per\.nf|rec\.nf|web\.nf|arts\.nf|firm\.nf|info\.nf|other\.nf|store\.nf|ac\.ng|com\.ng|edu\.ng|gov\.ng|net\.ng|org\.ng|ni|nl|no|fhs\.no|vgs\.no|fylkesbibl\.no|folkebibl\.no|museum\.no|idrett\.no|priv\.no|mil\.no|stat\.no|dep\.no|kommune\.no|herad\.no|aa\.no|ah\.no|bu\.no|fm\.no|hl\.no|hm\.no|jan-mayen\.no|mr\.no|nl\.no|nt\.no|of\.no|ol\.no|oslo\.no|rl\.no|sf\.no|st\.no|svalbard\.no|tm\.no|tr\.no|va\.no|vf\.no|gs\.aa\.no|gs\.ah\.no|gs\.bu\.no|gs\.fm\.no|gs\.hl\.no|gs\.hm\.no|gs\.jan-mayen\.no|gs\.mr\.no|gs\.nl\.no|gs\.nt\.no|gs\.of\.no|gs\.ol\.no|gs\.oslo\.no|gs\.rl\.no|gs\.sf\.no|gs\.st\.no|gs\.svalbard\.no|gs\.tm\.no|gs\.tr\.no|gs\.va\.no|gs\.vf\.no|akrehamn\.no|\xc3\xa5krehamn\.no|algard\.no|\xc3\xa5lg\xc3\xa5rd\.no|arna\.no|brumunddal\.no|bryne\.no|bronnoysund\.no|br\xc3\xb8nn\xc3\xb8ysund\.no|drobak\.no|dr\xc3\xb8bak\.no|egersund\.no|fetsund\.no|floro\.no|flor\xc3\xb8\.no|fredrikstad\.no|hokksund\.no|honefoss\.no|h\xc3\xb8nefoss\.no|jessheim\.no|jorpeland\.no|j\xc3\xb8rpeland\.no|kirkenes\.no|kopervik\.no|krokstadelva\.no|langevag\.no|langev\xc3\xa5g\.no|leirvik\.no|mjondalen\.no|mj\xc3\xb8ndalen\.no|mo-i-rana\.no|mosjoen\.no|mosj\xc3\xb8en\.no|nesoddtangen\.no|orkanger\.no|osoyro\.no|os\xc3\xb8yro\.no|raholt\.no|r\xc3\xa5holt\.no|sandnessjoen\.no|sandnessj\xc3\xb8en\.no|skedsmokorset\.no|slattum\.no|spjelkavik\.no|stathelle\.no|stavern\.no|stjordalshalsen\.no|stj\xc3\xb8rdalshalsen\.no|tananger\.no|tranby\.no|vossevangen\.no|afjord\.no|\xc3\xa5fjord\.no|agdenes\.no|al\.no|\xc3\xa5l\.no|alesund\.no|\xc3\xa5lesund\.no|alstahaug\.no|alta\.no|\xc3\xa1lt\xc3\xa1\.no|alaheadju\.no|\xc3\xa1laheadju\.no|alvdal\.no|amli\.no|\xc3\xa5mli\.no|amot\.no|\xc3\xa5mot\.no|andebu\.no|andoy\.no|and\xc3\xb8y\.no|andasuolo\.no|ardal\.no|\xc3\xa5rdal\.no|aremark\.no|arendal\.no|\xc3\xa5s\.no|aseral\.no|\xc3\xa5seral\.no|asker\.no|askim\.no|askvoll\.no|askoy\.no|ask\xc3\xb8y\.no|asnes\.no|\xc3\xa5snes\.no|audnedaln\.no|aukra\.no|aure\.no|aurland\.no|aurskog-holand\.no|aurskog-h\xc3\xb8land\.no|austevoll\.no|austrheim\.no|averoy\.no|aver\xc3\xb8y\.no|balestrand\.no|ballangen\.no|balat\.no|b\xc3\xa1l\xc3\xa1t\.no|balsfjord\.no|bahccavuotna\.no|b\xc3\xa1hccavuotna\.no|bamble\.no|bardu\.no|beardu\.no|beiarn\.no|bajddar\.no|b\xc3\xa1jddar\.no|baidar\.no|b\xc3\xa1id\xc3\xa1r\.no|berg\.no|bergen\.no|berlevag\.no|berlev\xc3\xa5g\.no|bearalvahki\.no|bearalv\xc3\xa1hki\.no|bindal\.no|birkenes\.no|bjarkoy\.no|bjark\xc3\xb8y\.no|bjerkreim\.no|bjugn\.no|bodo\.no|bod\xc3\xb8\.no|badaddja\.no|b\xc3\xa5d\xc3\xa5ddj\xc3\xa5\.no|budejju\.no|bokn\.no|bremanger\.no|bronnoy\.no|br\xc3\xb8nn\xc3\xb8y\.no|bygland\.no|bykle\.no|barum\.no|b\xc3\xa6rum\.no|bo\.telemark\.no|b\xc3\xb8\.telemark\.no|bo\.nordland\.no|b\xc3\xb8\.nordland\.no|bievat\.no|biev\xc3\xa1t\.no|bomlo\.no|b\xc3\xb8mlo\.no|batsfjord\.no|b\xc3\xa5tsfjord\.no|bahcavuotna\.no|b\xc3\xa1hcavuotna\.no|dovre\.no|drammen\.no|drangedal\.no|dyroy\.no|dyr\xc3\xb8y\.no|donna\.no|d\xc3\xb8nna\.no|eid\.no|eidfjord\.no|eidsberg\.no|eidskog\.no|eidsvoll\.no|eigersund\.no|elverum\.no|enebakk\.no|engerdal\.no|etne\.no|etnedal\.no|evenes\.no|evenassi\.no|even\xc3\xa1\xc5\xa1\xc5\xa1i\.no|evje-og-hornnes\.no|farsund\.no|fauske\.no|fuossko\.no|fuoisku\.no|fedje\.no|fet\.no|finnoy\.no|finn\xc3\xb8y\.no|fitjar\.no|fjaler\.no|fjell\.no|flakstad\.no|flatanger\.no|flekkefjord\.no|flesberg\.no|flora\.no|fla\.no|fl\xc3\xa5\.no|folldal\.no|forsand\.no|fosnes\.no|frei\.no|frogn\.no|froland\.no|frosta\.no|frana\.no|fr\xc3\xa6na\.no|froya\.no|fr\xc3\xb8ya\.no|fusa\.no|fyresdal\.no|forde\.no|f\xc3\xb8rde\.no|gamvik\.no|gangaviika\.no|g\xc3\xa1\xc5\x8bgaviika\.no|gaular\.no|gausdal\.no|gildeskal\.no|gildesk\xc3\xa5l\.no|giske\.no|gjemnes\.no|gjerdrum\.no|gjerstad\.no|gjesdal\.no|gjovik\.no|gj\xc3\xb8vik\.no|gloppen\.no|gol\.no|gran\.no|grane\.no|granvin\.no|gratangen\.no|grimstad\.no|grong\.no|kraanghke\.no|kr\xc3\xa5anghke\.no|grue\.no|gulen\.no|hadsel\.no|halden\.no|halsa\.no|hamar\.no|hamaroy\.no|habmer\.no|h\xc3\xa1bmer\.no|hapmir\.no|h\xc3\xa1pmir\.no|hammerfest\.no|hammarfeasta\.no|h\xc3\xa1mm\xc3\xa1rfeasta\.no|haram\.no|hareid\.no|harstad\.no|hasvik\.no|aknoluokta\.no|\xc3\xa1k\xc5\x8boluokta\.no|hattfjelldal\.no|aarborte\.no|haugesund\.no|hemne\.no|hemnes\.no|hemsedal\.no|heroy\.more-og-romsdal\.no|her\xc3\xb8y\.m\xc3\xb8re-og-romsdal\.no|heroy\.nordland\.no|her\xc3\xb8y\.nordland\.no|hitra\.no|hjartdal\.no|hjelmeland\.no|hobol\.no|hob\xc3\xb8l\.no|hof\.no|hol\.no|hole\.no|holmestrand\.no|holtalen\.no|holt\xc3\xa5len\.no|hornindal\.no|horten\.no|hurdal\.no|hurum\.no|hvaler\.no|hyllestad\.no|hagebostad\.no|h\xc3\xa6gebostad\.no|hoyanger\.no|h\xc3\xb8yanger\.no|hoylandet\.no|h\xc3\xb8ylandet\.no|ha\.no|h\xc3\xa5\.no|ibestad\.no|inderoy\.no|inder\xc3\xb8y\.no|iveland\.no|jevnaker\.no|jondal\.no|jolster\.no|j\xc3\xb8lster\.no|karasjok\.no|karasjohka\.no|k\xc3\xa1r\xc3\xa1\xc5\xa1johka\.no|karlsoy\.no|galsa\.no|g\xc3\xa1ls\xc3\xa1\.no|karmoy\.no|karm\xc3\xb8y\.no|kautokeino\.no|guovdageaidnu\.no|klepp\.no|klabu\.no|kl\xc3\xa6bu\.no|kongsberg\.no|kongsvinger\.no|kragero\.no|krager\xc3\xb8\.no|kristiansand\.no|kristiansund\.no|krodsherad\.no|kr\xc3\xb8dsherad\.no|kvalsund\.no|rahkkeravju\.no|r\xc3\xa1hkker\xc3\xa1vju\.no|kvam\.no|kvinesdal\.no|kvinnherad\.no|kviteseid\.no|kvitsoy\.no|kvits\xc3\xb8y\.no|kvafjord\.no|kv\xc3\xa6fjord\.no|giehtavuoatna\.no|kvanangen\.no|kv\xc3\xa6nangen\.no|navuotna\.no|n\xc3\xa1vuotna\.no|kafjord\.no|k\xc3\xa5fjord\.no|gaivuotna\.no|g\xc3\xa1ivuotna\.no|larvik\.no|lavangen\.no|lavagis\.no|loabat\.no|loab\xc3\xa1t\.no|lebesby\.no|davvesiida\.no|leikanger\.no|leirfjord\.no|leka\.no|leksvik\.no|lenvik\.no|leangaviika\.no|lea\xc5\x8bgaviika\.no|lesja\.no|levanger\.no|lier\.no|lierne\.no|lillehammer\.no|lillesand\.no|lindesnes\.no|lindas\.no|lind\xc3\xa5s\.no|lom\.no|loppa\.no|lahppi\.no|l\xc3\xa1hppi\.no|lund\.no|lunner\.no|luroy\.no|lur\xc3\xb8y\.no|luster\.no|lyngdal\.no|lyngen\.no|ivgu\.no|lardal\.no|lerdal\.no|l\xc3\xa6rdal\.no|lodingen\.no|l\xc3\xb8dingen\.no|lorenskog\.no|l\xc3\xb8renskog\.no|loten\.no|l\xc3\xb8ten\.no|malvik\.no|masoy\.no|m\xc3\xa5s\xc3\xb8y\.no|muosat\.no|muos\xc3\xa1t\.no|mandal\.no|marker\.no|marnardal\.no|masfjorden\.no|meland\.no|meldal\.no|melhus\.no|meloy\.no|mel\xc3\xb8y\.no|meraker\.no|mer\xc3\xa5ker\.no|moareke\.no|mo\xc3\xa5reke\.no|midsund\.no|midtre-gauldal\.no|modalen\.no|modum\.no|molde\.no|moskenes\.no|moss\.no|mosvik\.no|malselv\.no|m\xc3\xa5lselv\.no|malatvuopmi\.no|m\xc3\xa1latvuopmi\.no|namdalseid\.no|aejrie\.no|namsos\.no|namsskogan\.no|naamesjevuemie\.no|n\xc3\xa5\xc3\xa5mesjevuemie\.no|laakesvuemie\.no|nannestad\.no|narvik\.no|narviika\.no|naustdal\.no|nedre-eiker\.no|nes\.akershus\.no|nes\.buskerud\.no|nesna\.no|nesodden\.no|nesseby\.no|unjarga\.no|unj\xc3\xa1rga\.no|nesset\.no|nissedal\.no|nittedal\.no|nord-aurdal\.no|nord-fron\.no|nord-odal\.no|norddal\.no|nordkapp\.no|davvenjarga\.no|davvenj\xc3\xa1rga\.no|nordre-land\.no|nordreisa\.no|raisa\.no|r\xc3\xa1isa\.no|nore-og-uvdal\.no|notodden\.no|naroy\.no|n\xc3\xa6r\xc3\xb8y\.no|notteroy\.no|n\xc3\xb8tter\xc3\xb8y\.no|odda\.no|oksnes\.no|\xc3\xb8ksnes\.no|oppdal\.no|oppegard\.no|oppeg\xc3\xa5rd\.no|orkdal\.no|orland\.no|\xc3\xb8rland\.no|orskog\.no|\xc3\xb8rskog\.no|orsta\.no|\xc3\xb8rsta\.no|os\.hedmark\.no|os\.hordaland\.no|osen\.no|osteroy\.no|oster\xc3\xb8y\.no|ostre-toten\.no|\xc3\xb8stre-toten\.no|overhalla\.no|ovre-eiker\.no|\xc3\xb8vre-eiker\.no|oyer\.no|\xc3\xb8yer\.no|oygarden\.no|\xc3\xb8ygarden\.no|oystre-slidre\.no|\xc3\xb8ystre-slidre\.no|porsanger\.no|porsangu\.no|pors\xc3\xa1\xc5\x8bgu\.no|porsgrunn\.no|radoy\.no|rad\xc3\xb8y\.no|rakkestad\.no|rana\.no|ruovat\.no|randaberg\.no|rauma\.no|rendalen\.no|rennebu\.no|rennesoy\.no|rennes\xc3\xb8y\.no|rindal\.no|ringebu\.no|ringerike\.no|ringsaker\.no|rissa\.no|risor\.no|ris\xc3\xb8r\.no|roan\.no|rollag\.no|rygge\.no|ralingen\.no|r\xc3\xa6lingen\.no|rodoy\.no|r\xc3\xb8d\xc3\xb8y\.no|romskog\.no|r\xc3\xb8mskog\.no|roros\.no|r\xc3\xb8ros\.no|rost\.no|r\xc3\xb8st\.no|royken\.no|r\xc3\xb8yken\.no|royrvik\.no|r\xc3\xb8yrvik\.no|rade\.no|r\xc3\xa5de\.no|salangen\.no|siellak\.no|saltdal\.no|salat\.no|s\xc3\xa1l\xc3\xa1t\.no|s\xc3\xa1lat\.no|samnanger\.no|sande\.more-og-romsdal\.no|sande\.m\xc3\xb8re-og-romsdal\.no|sande\.vestfold\.no|sandefjord\.no|sandnes\.no|sandoy\.no|sand\xc3\xb8y\.no|sarpsborg\.no|sauda\.no|sauherad\.no|sel\.no|selbu\.no|selje\.no|seljord\.no|sigdal\.no|siljan\.no|sirdal\.no|skaun\.no|skedsmo\.no|ski\.no|skien\.no|skiptvet\.no|skjervoy\.no|skjerv\xc3\xb8y\.no|skierva\.no|skierv\xc3\xa1\.no|skjak\.no|skj\xc3\xa5k\.no|skodje\.no|skanland\.no|sk\xc3\xa5nland\.no|skanit\.no|sk\xc3\xa1nit\.no|smola\.no|sm\xc3\xb8la\.no|snillfjord\.no|snasa\.no|sn\xc3\xa5sa\.no|snoasa\.no|snaase\.no|sn\xc3\xa5ase\.no|sogndal\.no|sokndal\.no|sola\.no|solund\.no|songdalen\.no|sortland\.no|spydeberg\.no|stange\.no|stavanger\.no|steigen\.no|steinkjer\.no|stjordal\.no|stj\xc3\xb8rdal\.no|stokke\.no|stor-elvdal\.no|stord\.no|stordal\.no|storfjord\.no|omasvuotna\.no|strand\.no|stranda\.no|stryn\.no|sula\.no|suldal\.no|sund\.no|sunndal\.no|surnadal\.no|sveio\.no|svelvik\.no|sykkylven\.no|sogne\.no|s\xc3\xb8gne\.no|somna\.no|s\xc3\xb8mna\.no|sondre-land\.no|s\xc3\xb8ndre-land\.no|sor-aurdal\.no|s\xc3\xb8r-aurdal\.no|sor-fron\.no|s\xc3\xb8r-fron\.no|sor-odal\.no|s\xc3\xb8r-odal\.no|sor-varanger\.no|s\xc3\xb8r-varanger\.no|matta-varjjat\.no|m\xc3\xa1tta-v\xc3\xa1rjjat\.no|sorfold\.no|s\xc3\xb8rfold\.no|sorreisa\.no|s\xc3\xb8rreisa\.no|sorum\.no|s\xc3\xb8rum\.no|tana\.no|deatnu\.no|time\.no|tingvoll\.no|tinn\.no|tjeldsund\.no|dielddanuorri\.no|tjome\.no|tj\xc3\xb8me\.no|tokke\.no|tolga\.no|torsken\.no|tranoy\.no|tran\xc3\xb8y\.no|tromso\.no|troms\xc3\xb8\.no|tromsa\.no|romsa\.no|trondheim\.no|troandin\.no|trysil\.no|trana\.no|tr\xc3\xa6na\.no|trogstad\.no|tr\xc3\xb8gstad\.no|tvedestrand\.no|tydal\.no|tynset\.no|tysfjord\.no|divtasvuodna\.no|divttasvuotna\.no|tysnes\.no|tysvar\.no|tysv\xc3\xa6r\.no|tonsberg\.no|t\xc3\xb8nsberg\.no|ullensaker\.no|ullensvang\.no|ulvik\.no|utsira\.no|vadso\.no|vads\xc3\xb8\.no|cahcesuolo\.no|\xc4\x8d\xc3\xa1hcesuolo\.no|vaksdal\.no|valle\.no|vang\.no|vanylven\.no|vardo\.no|vard\xc3\xb8\.no|varggat\.no|v\xc3\xa1rgg\xc3\xa1t\.no|vefsn\.no|vaapste\.no|vega\.no|vegarshei\.no|veg\xc3\xa5rshei\.no|vennesla\.no|verdal\.no|verran\.no|vestby\.no|vestnes\.no|vestre-slidre\.no|vestre-toten\.no|vestvagoy\.no|vestv\xc3\xa5g\xc3\xb8y\.no|vevelstad\.no|vik\.no|vikna\.no|vindafjord\.no|volda\.no|voss\.no|varoy\.no|v\xc3\xa6r\xc3\xb8y\.no|vagan\.no|v\xc3\xa5gan\.no|voagat\.no|vagsoy\.no|v\xc3\xa5gs\xc3\xb8y\.no|vaga\.no|v\xc3\xa5g\xc3\xa5\.no|valer\.ostfold\.no|v\xc3\xa5ler\.\xc3\xb8stfold\.no|valer\.hedmark\.no|v\xc3\xa5ler\.hedmark\.no|np|nr|biz\.nr|info\.nr|gov\.nr|edu\.nr|org\.nr|net\.nr|com\.nr|nu|nz|om|org|ae\.org|pa|pe|edu\.pe|gob\.pe|nom\.pe|mil\.pe|org\.pe|com\.pe|net\.pe|pf|com\.pf|org\.pf|edu\.pf|pg|ph|com\.ph|net\.ph|org\.ph|gov\.ph|edu\.ph|ngo\.ph|mil\.ph|i\.ph|pk|com\.pk|net\.pk|edu\.pk|org\.pk|fam\.pk|biz\.pk|web\.pk|gov\.pk|gob\.pk|gok\.pk|gon\.pk|gop\.pk|gos\.pk|info\.pk|pl|aid\.pl|agro\.pl|atm\.pl|auto\.pl|biz\.pl|com\.pl|edu\.pl|gmina\.pl|gsm\.pl|info\.pl|mail\.pl|miasta\.pl|media\.pl|mil\.pl|net\.pl|nieruchomosci\.pl|nom\.pl|org\.pl|pc\.pl|powiat\.pl|priv\.pl|realestate\.pl|rel\.pl|sex\.pl|shop\.pl|sklep\.pl|sos\.pl|szkola\.pl|targi\.pl|tm\.pl|tourism\.pl|travel\.pl|turystyka\.pl|6bone\.pl|art\.pl|mbone\.pl|gov\.pl|uw\.gov\.pl|um\.gov\.pl|ug\.gov\.pl|upow\.gov\.pl|starostwo\.gov\.pl|so\.gov\.pl|sr\.gov\.pl|po\.gov\.pl|pa\.gov\.pl|med\.pl|ngo\.pl|irc\.pl|usenet\.pl|augustow\.pl|babia-gora\.pl|bedzin\.pl|beskidy\.pl|bialowieza\.pl|bialystok\.pl|bielawa\.pl|bieszczady\.pl|boleslawiec\.pl|bydgoszcz\.pl|bytom\.pl|cieszyn\.pl|czeladz\.pl|czest\.pl|dlugoleka\.pl|elblag\.pl|elk\.pl|glogow\.pl|gniezno\.pl|gorlice\.pl|grajewo\.pl|ilawa\.pl|jaworzno\.pl|jelenia-gora\.pl|jgora\.pl|kalisz\.pl|kazimierz-dolny\.pl|karpacz\.pl|kartuzy\.pl|kaszuby\.pl|katowice\.pl|kepno\.pl|ketrzyn\.pl|klodzko\.pl|kobierzyce\.pl|kolobrzeg\.pl|konin\.pl|konskowola\.pl|kutno\.pl|lapy\.pl|lebork\.pl|legnica\.pl|lezajsk\.pl|limanowa\.pl|lomza\.pl|lowicz\.pl|lubin\.pl|lukow\.pl|malbork\.pl|malopolska\.pl|mazowsze\.pl|mazury\.pl|mielec\.pl|mielno\.pl|mragowo\.pl|naklo\.pl|nowaruda\.pl|nysa\.pl|olawa\.pl|olecko\.pl|olkusz\.pl|olsztyn\.pl|opoczno\.pl|opole\.pl|ostroda\.pl|ostroleka\.pl|ostrowiec\.pl|ostrowwlkp\.pl|pila\.pl|pisz\.pl|podhale\.pl|podlasie\.pl|polkowice\.pl|pomorze\.pl|pomorskie\.pl|prochowice\.pl|pruszkow\.pl|przeworsk\.pl|pulawy\.pl|radom\.pl|rawa-maz\.pl|rybnik\.pl|rzeszow\.pl|sanok\.pl|sejny\.pl|slask\.pl|slupsk\.pl|sosnowiec\.pl|stalowa-wola\.pl|skoczow\.pl|starachowice\.pl|stargard\.pl|suwalki\.pl|swidnica\.pl|swiebodzin\.pl|swinoujscie\.pl|szczecin\.pl|szczytno\.pl|tarnobrzeg\.pl|tgory\.pl|turek\.pl|tychy\.pl|ustka\.pl|walbrzych\.pl|warmia\.pl|warszawa\.pl|waw\.pl|wegrow\.pl|wielun\.pl|wlocl\.pl|wloclawek\.pl|wodzislaw\.pl|wolomin\.pl|wroclaw\.pl|zachpomor\.pl|zagan\.pl|zarow\.pl|zgora\.pl|zgorzelec\.pl|gda\.pl|gdansk\.pl|gdynia\.pl|sopot\.pl|gliwice\.pl|krakow\.pl|poznan\.pl|wroc\.pl|zakopane\.pl|pn|gov\.pn|co\.pn|org\.pn|edu\.pn|net\.pn|pr|com\.pr|net\.pr|org\.pr|gov\.pr|edu\.pr|isla\.pr|pro\.pr|biz\.pr|info\.pr|name\.pr|est\.pr|prof\.pr|ac\.pr|pro|aca\.pro|bar\.pro|cpa\.pro|jur\.pro|law\.pro|med\.pro|eng\.pro|ps|edu\.ps|gov\.ps|sec\.ps|plo\.ps|com\.ps|org\.ps|net\.ps|pt|net\.pt|gov\.pt|org\.pt|edu\.pt|int\.pt|publ\.pt|com\.pt|nome\.pt|pw|co\.pw|ne\.pw|or\.pw|ed\.pw|go\.pw|belau\.pw|py|qa|re|com\.re|asso\.re|nom\.re|ro|com\.ro|org\.ro|tm\.ro|nt\.ro|nom\.ro|info\.ro|rec\.ro|arts\.ro|firm\.ro|store\.ro|www\.ro|rs|co\.rs|org\.rs|edu\.rs|ac\.rs|gov\.rs|in\.rs|ru|ac\.ru|com\.ru|net\.ru|org\.ru|pp\.ru|int\.ru|adygeya\.ru|altai\.ru|amur\.ru|arkhangelsk\.ru|astrakhan\.ru|bashkiria\.ru|belgorod\.ru|bir\.ru|bryansk\.ru|buryatia\.ru|cbg\.ru|chel\.ru|chelyabinsk\.ru|chita\.ru|chukotka\.ru|chuvashia\.ru|dagestan\.ru|dudinka\.ru|e-burg\.ru|grozny\.ru|irkutsk\.ru|ivanovo\.ru|izhevsk\.ru|jar\.ru|joshkar-ola\.ru|kalmykia\.ru|kaluga\.ru|kamchatka\.ru|karelia\.ru|kazan\.ru|kchr\.ru|kemerovo\.ru|khabarovsk\.ru|khakassia\.ru|khv\.ru|kirov\.ru|koenig\.ru|komi\.ru|kostroma\.ru|krasnoyarsk\.ru|kuban\.ru|kurgan\.ru|kursk\.ru|lipetsk\.ru|magadan\.ru|mari-el\.ru|marine\.ru|mari\.ru|mordovia\.ru|mosreg\.ru|msk\.ru|murmansk\.ru|nalchik\.ru|nnov\.ru|novosibirsk\.ru|nov\.ru|nsk\.ru|omsk\.ru|orenburg\.ru|oryol\.ru|palana\.ru|penza\.ru|perm\.ru|pskov\.ru|ptz\.ru|rnd\.ru|ryazan\.ru|sakhalin\.ru|samara\.ru|saratov\.ru|simbirsk\.ru|smolensk\.ru|spb\.ru|stavropol\.ru|stv\.ru|surgut\.ru|tambov\.ru|tatarstan\.ru|tom\.ru|tomsk\.ru|tsaritsyn\.ru|tsk\.ru|tula\.ru|tuva\.ru|tver\.ru|tyumen\.ru|udm\.ru|udmurtia\.ru|ulan-ude\.ru|vladikavkaz\.ru|vladimir\.ru|vladivostok\.ru|volgograd\.ru|vologda\.ru|voronezh\.ru|vrn\.ru|vyatka\.ru|yakutia\.ru|yamal\.ru|yaroslavl\.ru|yekaterinburg\.ru|yuzhno-sakhalinsk\.ru|amursk\.ru|baikal\.ru|cmw\.ru|fareast\.ru|jamal\.ru|kms\.ru|k-uralsk\.ru|kustanai\.ru|kuzbass\.ru|magnitka\.ru|mytis\.ru|nakhodka\.ru|nkz\.ru|norilsk\.ru|oskol\.ru|pyatigorsk\.ru|rubtsovsk\.ru|snz\.ru|syzran\.ru|tagil\.ru|vdonsk\.ru|zgrad\.ru|rw|gov\.rw|net\.rw|edu\.rw|ac\.rw|com\.rw|co\.rw|int\.rw|mil\.rw|gouv\.rw|sa|sb|com\.sb|edu\.sb|gov\.sb|net\.sb|org\.sb|sc|com\.sc|gov\.sc|net\.sc|org\.sc|edu\.sc|sd|com\.sd|net\.sd|org\.sd|edu\.sd|med\.sd|gov\.sd|info\.sd|se|a\.se|ac\.se|b\.se|bd\.se|brand\.se|c\.se|d\.se|e\.se|f\.se|fh\.se|fhsk\.se|fhv\.se|g\.se|h\.se|i\.se|k\.se|komforb\.se|kommunalforbund\.se|komvux\.se|l\.se|lanbib\.se|m\.se|n\.se|naturbruksgymn\.se|o\.se|org\.se|p\.se|parti\.se|pp\.se|press\.se|r\.se|s\.se|sshn\.se|t\.se|tm\.se|u\.se|w\.se|x\.se|y\.se|z\.se|sg|com\.sg|net\.sg|org\.sg|gov\.sg|edu\.sg|per\.sg|sh|si|sk|sl|com\.sl|net\.sl|edu\.sl|gov\.sl|org\.sl|sm|sn|sr|st|gov\.st|saotome\.st|principe\.st|consulado\.st|org\.st|edu\.st|net\.st|com\.st|store\.st|mil\.st|co\.st|su|sv|sy|edu\.sy|gov\.sy|net\.sy|mil\.sy|com\.sy|org\.sy|sz|co\.sz|ac\.sz|org\.sz|tc|td|tel|tf|tg|th|ac\.th|co\.th|go\.th|in\.th|mi\.th|net\.th|or\.th|tj|ac\.tj|biz\.tj|com\.tj|co\.tj|edu\.tj|int\.tj|name\.tj|net\.tj|org\.tj|web\.tj|gov\.tj|go\.tj|mil\.tj|tk|tl|gov\.tl|tm|tn|com\.tn|ens\.tn|fin\.tn|gov\.tn|ind\.tn|intl\.tn|nat\.tn|net\.tn|org\.tn|info\.tn|perso\.tn|tourism\.tn|edunet\.tn|rnrt\.tn|rns\.tn|rnu\.tn|mincom\.tn|agrinet\.tn|defense\.tn|turen\.tn|to|com\.to|gov\.to|net\.to|org\.to|edu\.to|mil\.to|tr|travel|tt|co\.tt|com\.tt|org\.tt|net\.tt|biz\.tt|info\.tt|pro\.tt|int\.tt|coop\.tt|jobs\.tt|mobi\.tt|travel\.tt|museum\.tt|aero\.tt|name\.tt|gov\.tt|edu\.tt|tv|com\.tv|net\.tv|org\.tv|gov\.tv|tw|edu\.tw|gov\.tw|mil\.tw|com\.tw|net\.tw|org\.tw|idv\.tw|game\.tw|ebiz\.tw|club\.tw|\xe7\xb6\xb2\xe8\xb7\xaf\.tw|\xe7\xb5\x84\xe7\xb9\x94\.tw|\xe5\x95\x86\xe6\xa5\xad\.tw|ac\.tz|co\.tz|go\.tz|ne\.tz|or\.tz|ua|com\.ua|edu\.ua|gov\.ua|net\.ua|org\.ua|cherkassy\.ua|chernigov\.ua|chernovtsy\.ua|ck\.ua|cn\.ua|crimea\.ua|cv\.ua|dn\.ua|dnepropetrovsk\.ua|donetsk\.ua|dp\.ua|if\.ua|ivano-frankivsk\.ua|kh\.ua|kharkov\.ua|kherson\.ua|khmelnitskiy\.ua|kiev\.ua|kirovograd\.ua|km\.ua|kr\.ua|ks\.ua|kv\.ua|lg\.ua|lugansk\.ua|lutsk\.ua|lviv\.ua|mk\.ua|nikolaev\.ua|od\.ua|odessa\.ua|pl\.ua|poltava\.ua|rovno\.ua|rv\.ua|sebastopol\.ua|sumy\.ua|te\.ua|ternopil\.ua|vinnica\.ua|vn\.ua|zaporizhzhe\.ua|zp\.ua|uzhgorod\.ua|zhitomir\.ua|zt\.ua|ug|co\.ug|ac\.ug|sc\.ug|go\.ug|ne\.ug|or\.ug|uk|sch\.uk|us|dni\.us|fed\.us|isa\.us|kids\.us|nsn\.us|ak\.us|al\.us|ar\.us|as\.us|az\.us|ca\.us|co\.us|ct\.us|dc\.us|de\.us|fl\.us|ga\.us|gu\.us|hi\.us|ia\.us|id\.us|il\.us|in\.us|ks\.us|ky\.us|la\.us|ma\.us|md\.us|me\.us|mi\.us|mn\.us|mo\.us|ms\.us|mt\.us|nc\.us|nd\.us|ne\.us|nh\.us|nj\.us|nm\.us|nv\.us|ny\.us|oh\.us|ok\.us|or\.us|pa\.us|pr\.us|ri\.us|sc\.us|sd\.us|tn\.us|tx\.us|ut\.us|vi\.us|vt\.us|va\.us|wa\.us|wi\.us|wv\.us|wy\.us|uy|uz|com\.uz|co\.uz|va|vc|com\.vc|net\.vc|org\.vc|gov\.vc|mil\.vc|edu\.vc|ve|vg|vi|com\.vi|org\.vi|edu\.vi|gov\.vi|vn|com\.vn|net\.vn|org\.vn|edu\.vn|gov\.vn|int\.vn|ac\.vn|biz\.vn|info\.vn|name\.vn|pro\.vn|health\.vn|vu|ws|com\.ws|net\.ws|org\.ws|gov\.ws|edu\.ws|ye|yu|za|zm|zw))[ \[(\n\t]
8592	[ \f\t]*(?:\r\n|\r|\n)
8593	[ \n\r\t]+
8594	[ \n\t\r]$
8595	[ \t\n\r]$
8596	[ \t\r\n]*(?:(?:#[^\n]*)?\r?(?:$|\n))?
8597	[ \t]*#
8598	[ \t]*#indent[ \t]*(?P<args>.*)
8599	[ \t]*(#)
8600	[ \t]*(#[^\n]*)?$
8601	[ \t]*(#[^\n]*)?\r?\n
8602	[ \t]*([^<>\s]+?)[ \t]*<p="([^"]*"?)"/>
8603	[ \t]*// @(\w+): (.*)
8604	[ \t]*\n([^\r\n])
8605	[ \t]+\n
8606	[ \t]+sss[ \t]*
8607	[ \n]
8608	[ \r\n\t]+
8609	[ \r\t]*\n[ \r\t]*
8610	[ \t:;,+/\"\'`]+
8611	[ \t\n\r]+
8612	[ \t\n]*([a-zA-Z_][-.a-zA-Z_0-9]*)([ \t\n]*=[ \t\n]*(\\'[^\\']*\\'|"[^"]*"|[^ \t\n]*))?
8613	[ \t\r\n]*([a-zA-Z_][-.a-zA-Z_0-9]*)([ \t\r\n]*=[ \t\r\n]*(\\'[^\\']*\\'|"[^"]*"|[-a-zA-Z0-9./:+*%?!\(\)_#=~]*))?
8614	[ \t\r\x0c\x0b]*\n[ \t\r\x0c\x0b\n]*|^[ \t\r\x0c\x0b]+|[ \t\r\x0c\x0b]+$
8615	[ \t\r\x0c\x0b]*\n[ \t\r\x0c\x0b]*\n[ \t\r\x0c\x0b]*
8616	[ \t\r]+\n
8617	[ \t]
8618	[ \t]*File.*line (\d+)
8619	[ \t]*\[[\w]+ $
8620	[ \t]+(?P<a>\S.+?){
8621	[ \t]+([A-Z0-9]+) \/\* .+ \*\/,\n
8622	[ \t]+(modified|deleted|new file): +.+
8623	[ \t]+|\n
8624	[ ]*%\(.*?\)s
8625	[ ]*(/\*\*\s|\*/|\B\*\s|//!)(?P<line>.*?)
8626	[ ]*\*color([0-9]*):[ ]*(#[A-Za-z0-9]*)
8627	[ ]+(?P<t>[,;\.])
8628	[ ]+\n
8629	[ ]{0,3}\[\^([^\]]*)\]:\s*(.*)
8630	[ _.\[\]]+
8631	[ _\.-]+cd[ _\.-]*([0-9a-d]+)
8632	["\']
8633	["\'`\(\) /.,\-\xa0]
8634	["\(\) ,-]
8635	["\*<>\|]|^\.|\.$|\s+$
8636	["\*\/:<>\?\\|]
8637	["\\'{},]
8638	["]
8639	[#/%\[\]()<>{}\s]
8640	[#\n]*#\s+Copyright\s+\d*
8641	[#]
8642	[#][\dA-F]{3}
8643	[#][\dA-F]{6}
8644	[#][\dA-F]{8}
8645	[$.a-zA-Z0-9\-]+
8646	[$]([A-Z_][A-Z0-9_]*)
8647	[$][^$]
8648	[$]{.+?}
8649	[$_]?(?:is|has)($|[A-Z_])
8650	[$_]?(?:set|add)($|[A-Z_])
8651	[&"<]
8652	[&<>"\']|]]>
8653	[&<\'"]
8654	[().]
8655	[()=]
8656	[()[\]:&"]
8657	[()\134]
8658	[(](.*?)[)]
8659	[(]([^)]*)[)]\*(\d+)
8660	[*,]+
8661	[*?!]
8662	[*?]|\[.+\]
8663	[*\/:."\' ]
8664	[*][*]([0-9]*)
8665	[*]|--|[^+*-]+
8666	[*{}?+]|\[.+\]
8667	[+-](\d+\.\d+)
8668	[+-]?\d*\.\d*|[+-]?\d+
8669	[+-][0-9]+
8670	[+-][0-9]{4}$
8671	[+\-]{0,1}\b\d+\b
8672	[, ]
8673	[,.]*$
8674	[,;:\(\)\[\]\{\}<>]+
8675	[,;:].
8676	[,\s]
8677	[,\|]
8678	[,\n]
8679	[,]?([^,=]+)=
8680	[,|;]?\s?
8681	[- \n\t\ra-zA-Z0-9()+,./:=?;!*#@$_%]*
8682	[- \t:;,!+/\"\'`]+
8683	[- ]
8684	[-!"#$%&\\'\(\)\*\+,\./:;<=>^\?@\[\]\\\_`{\|}~]
8685	[-+*!&|^~/%\=<>\[\]{}(),.:]
8686	[-+*!|&^~/%\=<>\[\]{}(),.:]
8687	[-+*/!@$%^&=.?a-zA-Z0-9_]+
8688	[-+*/!@$%^&=.a-zA-Z0-9_]+
8689	[-+\d.]
8690	[-+]?(?:\d+(?:\.\d*)?|\d*\.\d+)(?:[eE][-+]?\d+)?
8691	[-+]?(\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?
8692	[-+]?[0-9]+
8693	[-+]\s*\(
8694	[-+]\s*\(.*?\)\s*(\w+)
8695	[-./:# ]
8696	[-./]
8697	[-.\d]+
8698	[-:]
8699	[-\d.]
8700	[-\d\.]
8701	[-][-]((f(77|90)(flags|exec)|opt|arch)=|(debug|noopt|noarch|help[-]fcompiler))
8702	[-][-]((f(90)?compiler([-]exec|)|compiler)=|help[-]compiler)
8703	[-][-]((no[-]|)(wrap[-]functions|lower)|debug[-]capi|quiet)|[-]include
8704	[-][-](verbose)
8705	[-][-]compiler[=]
8706	[-][-]link[-]
8707	[-_0-9a-zA-Z][-\._0-9a-zA-Z]*\.dmp$
8708	[-a-zA-Z0-9 ._]+$
8709	[-d]  (setuptools|distribute)
8710	[-d]  (setuptools|distribute)-[^-]+-
8711	[-d]  (setuptools|distribute)-\S+[.]egg
8712	[-d]  setuptools-\S+[.]egg
8713	[-|\+]\d+$
8714	[.:, !?+=\(\)/]+
8715	[.:,\s!?+=\(\)/-]+
8716	[.:-]
8717	[.:]
8718	[.;] 
8719	[._-]
8720	[/ \t\r\n]
8721	[/ ]
8722	[/:()<>|?*\ ]|(\\)
8723	[/\\?\*:]
8724	[/\s]
8725	[0-7]
8726	[0-9$]
8727	[0-9-]* [0-9:\.]* [+-][0-9]*\r?\n
8728	[0-9.E+-]+
8729	[0-9.]*
8730	[0-9.]+
8731	[0-9\- \(\)]{14}
8732	[0-9\.\-]+
8733	[0-9\.]+
8734	[0-9]*-[0-9]*\.[0-9]*[\.0-9]*\:[\.0-9]*$
8735	[0-9]*[nN]{1,1}
8736	[0-9]*n[wW]{1,1}
8737	[0-9]+(%|px)?$
8738	[0-9]+(?:\.[0-9]+)?|[^0-9]+
8739	[0-9]+(\.[0-9]*)?|[0-9]*\.[0-9]+$
8740	[0-9]+,[0-9]*
8741	[0-9]+:
8742	[0-9]+[a-zA-Z]
8743	[0-9]+\.
8744	[0-9]+\.[0-9]+\.[0-9]+
8745	[0-9]+\.[0-9]+\.[0-9a-zA-Z]+
8746	[0-9]\.[0-9]\.[0-9]
8747	[0-9]{1,3}
8748	[0-9]{10}$
8749	[0-9]{20}:[0-9]:[0-9]
8750	[0-9]{3}
8751	[0-9]{4}-[0-9]{2}-[0-9]{2}
8752	[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}_cc.csv
8753	[0-9]{4}/[0-9]{4}\([A-Z]{3}\)
8754	[0-9]{4}/[10]?[0-9]/[0-3]?[0-9]
8755	[0-9]{5}
8756	[0-9]{6}
8757	[0-9]{7}
8758	[0-9a-fA-F]
8759	[0-9a-fA-F]+
8760	[0-9a-fA-F]{0,64}\Z
8761	[0-9a-fA-F]{2}|.
8762	[0-9a-fA-F]{3}
8763	[0-9a-fA-F]{40}
8764	[0-9a-fA-F]{6,64}\Z
8765	[0-9a-fA-F]{6}
8766	[0-9a-f]{12}\+?
8767	[0-9a-f]{32}
8768	[0-9a-zA-Z_]+:[0-9a-zA-Z._\-]+
8769	[0-9a-z]$
8770	[0-9abcdefABCDEF]{6}
8771	[01]+
8772	[1-9A-HJ-NP-Za-km-z]{26,}\Z
8773	[1-9A-HJ-NP-Za-km-z]{6,}\Z
8774	[1-9]
8775	[1-9]+$
8776	[1-9]?\d\.?
8777	[1-9][0-9]*$
8778	[1-9][0-9]*-
8779	[1-9][0-9]*[.][0-9]+
8780	[123 ]*H.*
8781	[:*?"<>\|\n]+
8782	[:/\\]
8783	[:/]
8784	[:@]
8785	[;,/-]
8786	[;,\s]+
8787	[;\s,]+
8788	[;\s\/\+]$|^$|(?=: ).
8789	[<&]
8790	[<=>!]
8791	[<>:/]
8792	[<>{}]
8793	[=*/+\-^()]|[\w.]+
8794	[=*/+\-^]{1,2}|[\w.]+
8795	[=,]
8796	[?/]+
8797	[?\&|!{}+~^()":*-]+
8798	[@:]error_message
8799	[@:]number
8800	[@:]ok_message
8801	[@:]template
8802	[@:]type
8803	[A-Fa-f0-9]{24}
8804	[A-Z0-9_]{0,8} *=
8805	[A-Z]*
8806	[A-Z]+$
8807	[A-Z]+[0-9]+.[0-9]
8808	[A-Z]?[:;.A-Z]
8809	[A-Z][A-Za-z]+\(
8810	[A-Z][^A-Z]*
8811	[A-Z][a-z0-9 ]+:
8812	[A-Z][a-z]+$
8813	[A-Z][a-z][a-z]
8814	[A-Z][a-z]\s
8815	[A-Z]\w+
8816	[A-Z]{([^}<]*)(<[^>}]*>)?}
8817	[A-Z]{2}[0-9]{6}.[0-9]
8818	[A-Z_]+
8819	[A-Za-z.-]
8820	[A-Za-z0-9_.-]*[.][d][e][b]
8821	[A-Za-z0-9_.-]*[.][r][p][m]
8822	[A-Za-z][-A-Za-z0-9._]*
8823	[A-Za-z]|\b\s
8824	[A-Za-z_]+
8825	[A-Za-z_][A-Za-z0-9_]*(\.[A-Za-z_][A-Za-z0-9_]*)*$
8826	[A-z\*]
8827	[A-z]+.*\_[0-9]+
8828	[Ee]rr(or)?: (?P<error>.+?(Could not match (?P<near>.+?))?) at /.+?:(?P<line>\d+)?
8829	[Ee]rror
8830	[Ff]ile(\d+)=(.+)
8831	[INFO|FILTER|FORMAT]
8832	[IV]+$|\bJr\b\.$|\b(Sr)\b\.$
8833	[Ll]ength(\d+)=(\d+)
8834	[MAD][\t ]+
8835	[MAD][\t ]+ChangeLog.txt
8836	[MPK]+\d+
8837	[Oo]pera [Mm]ini
8838	[QA]?[:.]?\d?\d[:;.]\d\d[:;.]\d\d
8839	[QA]?[:;.]?\d\d
8840	[QA]?[:;.]?\d\d[:;.]\d\d
8841	[RL]\{(.+)\}
8842	[SW]
8843	[Tt]itle(\d+)=(.+)
8844	[Ww]atchpoint (\d+):
8845	[Yy]
8846	[Yy][Ee][Ss]
8847	[\'"\s;]+
8848	[\'"]
8849	[\'"]+
8850	[\"\']
8851	[\()\[\]"]
8852	[\(\)\s,]+
8853	[\(\)\s]+
8854	[\(\)]
8855	[\(\[\{<]
8856	[\(\[]\s?(\d+)\s?,\s?(\d+)\s?,\s?(\d+)\s?[\)\]]
8857	[\(]
8858	[\)\]\}>]
8859	[\)]
8860	[\+-]
8861	[\-: ]
8862	[\-]{5}END CERTIFICATE[\-]{5}
8863	[\-]{5}END( RSA| DSA)? PRIVATE KEY[\-]{5}
8864	[\-a-zA-Z0-9\x80-\xff_\.\@\!\#\%\:]
8865	[\.,:;"\'/?\[\]\d\+=\-_\{\}<>]+
8866	[\.:]
8867	[\.\?!\t\n\r\f\v]+
8868	[\._ ]+
8869	[\/\\]
8870	[\/]*\.\.[\/]*
8871	[\000-\037&<>()"\042\047\134\177-\377]
8872	[\>:]+$
8873	[\?%]>$
8874	[\?\&=:]
8875	[\W]
8876	[\W_]*
8877	[\W_]+
8878	[\[\]\(\);]
8879	[\[\{]
8880	[\\"]|[\x00-\x1f]
8881	[\\*?:/\[\]]
8882	[\\/:*?"<>|]
8883	[\\/\:*?"<>|\x00]
8884	[\\/\?"]|^\.
8885	[\\\"\$`]
8886	[\\\r\n\"]
8887	[\\][\n]
8888	[\\{}]
8889	[\]\}]
8890	[\d+.\-]+$
8891	[\d-]
8892	[\d.]+[ ]*\n
8893	[\d]+(-|/)[\d]+(((-|/)[\d]+)*)
8894	[\d]+\:([e\+\-\d\.]+)
8895	[\d]{2}[ ][\d]{2}
8896	[\n,]+
8897	[\n\r]+
8898	[\n\r]+?
8899	[\n]*[\-]{5}BEGIN CERTIFICATE[\-]{5}
8900	[\n]*[\-]{5}BEGIN( RSA| DSA)? PRIVATE KEY[\-]{5}
8901	[\r\n\t ]+[\r\n]+
8902	[\r\n]
8903	[\r\n]*$
8904	[\r\n]+\s*[\r\n]+
8905	[\r\n^<>|;&"\\'%$]
8906	[\s().]
8907	[\s(]
8908	[\s+\n\t]
8909	[\s,;:]
8910	[\s,\(](?:_([0-9]+))(?=$|[\s,\)])
8911	[\s-]
8912	[\s.,;_-]+
8913	[\s:/_]
8914	[\s:]
8915	[\s\.()\"\',-:;/\\?!@]+
8916	[\s\.]
8917	[\s\S]*(exception|error)[\s\S]*
8918	[\s\S]*<TEXT>
8919	[\s\S]*root[\s]*([\d]+)[\s]*(?:[\w]*[\s]*){6}/system/b2g/b2g
8920	[\s\{\}\[\]\(\)\'"]
8921	[\s\n\r]*\Z
8922	[\s]*
8923	[\s|\[]*(\w+)(?:\s*=\s*.*)
8924	[\t !"#$%&\\'()*\-/<=>?@\[\\\]^_`{|},.:]+
8925	[\t ]+\n
8926	[\t\n\r\f\v;=%&,]
8927	[\t\n\r\v\f]
8928	[\t\n]
8929	[\t\r\n ]+
8930	[\t\s]+
8931	[\w-]+
8932	[\w-]+\..+
8933	[\w.]+\(
8934	[\w/]+
8935	[\w0-9\.\_\-]+
8936	[\w\-:]+(\.[\w\-]+)*\.?
8937	[\w\-][\w\-\.]+@[\w\-][\w\-\.]+[a-zA-Z]{1,4}
8938	[\w\.\-]+@[\w\.\-]+\.\w\w\w
8939	[\w\.]+
8940	[\w\W\|\-\s\d,]*nova-guest --flagfile=/etc/nova/nova.conf nova[\W\w\s]*
8941	[\w\W\|\-\s]*/usr/bin/nova-guest --flagfile=/etc/nova/nova.conf[\W\w\s]*
8942	[\w\W\|\-\s]*apt-get[\w\W\|\-\s]*
8943	[\w\d.]+
8944	[\w\d\-_\.]+
8945	[\w\d]*
8946	[\w\d]+
8947	[\w\d_\.\-]+
8948	[\w]+="[^"]+"
8949	[\w_]+\.[\w_]+
8950	[\w|\W]*financial.*
8951	[\w|\W]*quarter.*
8952	[\x00-\x08\x0B-\x0C\x0E-\x1F\x7F-\xFF]
8953	[\x00-\x08\x0E-\x1F\x7F]
8954	[\x00-\x1F\\/"]
8955	[\x00-\x1f\\"\b\f\n\r\t\\'&<>]
8956	[\x00:\*\?\"<>\|]
8957	[\x00\/\\:\*\?\"<>\|]
8958	[\{\}<>]+
8959	[\n ]{2,}
8960	[\n,]
8961	[\n\ ]+
8962	[\n\r\t ]+
8963	[\n]
8964	[\r\n]*
8965	[\t ]
8966	[\t ]*\n[\t ]*
8967	[\t ]+
8968	[\t\r\n]+$
8969	[\t\r\n]+
8970	[\x00-\x08\n-\x1f\x7f",:;]
8971	[\x00-\x08\n-\x1f\x7f"]
8972	[\x00-\x08\n-\x1f]
8973	[\x00-\x1f]
8974	[\x01-\x08\x0b-\r\x0e-\x1f\x80-\xff]
8975	[\x80-\xff /&]
8976	[][ (){}?:<>#!|"\';]
8977	[][\()"]
8978	[][\()<>@,:;".]
8979	[^ -~]
8980	[^ \t\n\r\f\v"\\']+
8981	[^ \t\n\r\f\v"\\']+\s*\=\s*"[^"]*"
8982	[^ \t\n\r\f\v"\\']+\s*\=\s*[^ \t\n\r\f\v"\\']*
8983	[^ \t\n\r\f\v"\\']+\s*\=\s*\\'[^\\']*\\'
8984	[^ \t\n\r\f\v\\]+
8985	[^ ]
8986	[^ ]*\.DLL
8987	[^ ]*\.[A-Z]{3}
8988	[^ ]+ \(([0-9]+\.[0-9]+\.[0-9]+)-[0-9]+\) [^ ]+; urgency=[^ ]+
8989	[^"]*
8990	[^"]+
8991	[^#]*(\S+)([ \*]+)(\S+)\s*\([^\)]*
8992	[^#]*(\S+)([ \*]+)(\S+)\s*\([^\)]*\);
8993	[^#]*?(<.+>).*(<.+>).*
8994	[^#]*\s+\bdo\b(\s*|(\s+\|.+\|\s*))|\s*(\bif\b\s+.*|\belsif\b.*|\belse\b.*|\bdo\b(\s*|\s+.*)|\bcase\b\s+.*|\bwhen\b\s+.*|\bwhile\b\s+.*|\bfor\b\s+.*|\buntil\b\s+.*|\bloop\b\s+.*|\bdef\b\s+.*|\bclass\b\s+.*|\bmodule\b\s+.*|\bbegin\b.*|\bunless\b\s+.*|\brescue\b.*|\bensure\b.*)+
8995	[^%]*%
8996	[^(]+[(]([^)]+)[)]
8997	[^+0-9]
8998	[^-*+]*
8999	[^-A-Za-z0-9.:_]
9000	[^-]{8}-
9001	[^-_a-z.0-9]
9002	[^-a-zA-Z_\.0-9:]+
9003	[^.]*\.\..*
9004	[^/]*$
9005	[^0-9 :-]
9006	[^0-9.]
9007	[^0-9.]+
9008	[^0-9A-Za-z_]
9009	[^0-9\.\-]+
9010	[^0-9]+
9011	[^0-9a-zA-Z._]
9012	[^0-9a-zA-Z\xc3\xa6\xc3\xb8\xc3\xa5\xc3\x86\xc3\x98\xc3\x85.?!\n\r]
9013	[^0-9a-zA-Z]
9014	[^0-9a-zA-Z]+
9015	[^0-9a-zA-Z_]
9016	[^0-9a-z_.%&=()<>*/+-]
9017	[^10]
9018	[^:]+
9019	[^:]+:(?P<line>\d+):\d+: error: (?P<error>.+)
9020	[^:]+://(.*)/([^/]*)$
9021	[^:]//
9022	[^<"]*
9023	[^=]+=([^,]+)
9024	[^A-Z]+(.*)
9025	[^A-Za-z0-9\,\.\/\;\:\'"\+\-\s\r\n]
9026	[^A-Za-z0-9\-_ \(\).]+
9027	[^A-Za-z0-9\.]
9028	[^A-Za-z0-9]+
9029	[^A-Za-z0-9_\-\.:\/\+]+
9030	[^A-Za-z0-9_\.\-]
9031	[^A-Za-z]
9032	[^A-Za-z_]
9033	[^[]*\[(.*)\].*
9034	[^\(\)]*\((.*?)\)[^\(\)]
9035	[^\.a-zA-Z0-9]
9036	[^\?]*//
9037	[^\[\]]
9038	[^\\]\$([a-z]+)\b
9039	[^\d.]*
9040	[^\d]+ (\d+)\.(\d+)\.(\d+)\s*\((?P<datetime>.+?)\)\s*(?P<type>[a-z]+)?
9041	[^\d]+
9042	[^\n]*(\n|$)
9043	[^\r\n\t ,;]+
9044	[^\s,;]+
9045	[^\s,]+
9046	[^\s0-9a-fA-F]
9047	[^\s]*?[\'|"].*?[\'|"]|[^\s]+
9048	[^\s]+
9049	[^\t]
9050	[^\t]*\t([^\t]*)\t([^\t]*)\t[^\t]*\t[^\t]*\t([^\t]*)\t[^\t]*\n
9051	[^\t]*\t([^\t]*)\t[^\t]*\t[^\t]*\t[^\t]*\t([^\t]*)\t[^\t]*\n
9052	[^\w, ]+
9053	[^\w-]+
9054	[^\w\-.]
9055	[^\w\-]
9056	[^\w\-]+
9057	[^\w\.\-]+
9058	[^\w\.]+
9059	[^\w\._]
9060	[^\w\s@+.-]
9061	[^\w\s]+
9062	[^\w_]+
9063	[^\{\}]+
9064	[^\r\n\t ]?([^\r\n\t ]| [^\r\n\t ])*[^\r\n\t ]?$
9065	[^_]+_toy-([\w-]*)-x86
9066	[^a-fA-F\d]
9067	[^a-z0-9\-]+
9068	[^a-z0-9_]
9069	[^a-z0-9_]|^[0-9]
9070	[^a-zA-Z-]
9071	[^a-zA-Z0-9,]
9072	[^a-zA-Z0-9-]+
9073	[^a-zA-Z0-9-_,.$ ]
9074	[^a-zA-Z0-9.: ^*$@!+_?-]
9075	[^a-zA-Z0-9.:^*$@!+_?-|]
9076	[^a-zA-Z0-9._-]+
9077	[^a-zA-Z0-9\./_:-]
9078	[^a-zA-Z0-9\._:-]
9079	[^a-zA-Z0-9_ -]
9080	[^a-zA-Z0-9_\. ]+
9081	[^a-zA-Z0-9_\.]
9082	[^a-zA-Z0-9_]+
9083	[^a-zA-Z0-9~$]+
9084	[^a-zA-Z\d\-_]
9085	[^a-zA-Z\xc3\xa6\xc3\xb8\xc3\xa5\xc3\x86\xc3\x98\xc3\x85]
9086	[^a-zA-Z]
9087	[^a-z]([a-z]+)[^a-z]
9088	[^a-z]+
9089	[^aeioudgkprt]h$
9090	[^c0-9]
9091	[^{}]
9092	[^{}]*{[^{}]*}[^{}]*
9093	[_-]rc\d+
9094	[_.,\[\]\(\):]
9095	[_A-Za-z][_A-Za-z1-9]*
9096	[_a-zA-Z][\w-]*$
9097	[_a-zA-Z][_a-zA-Z\d]*$
9098	[a-f0-9]+
9099	[a-f0-9]{40}
9100	[a-fA-F0-9]{32}$
9101	[a-fA-F0-9]{40}$
9102	[a-fA-F0-9]{8}[-]([a-fA-F0-9]{4}[-]){3}[a-fA-F0-9]{12}$
9103	[a-z ]+
9104	[a-z%]+$
9105	[a-z,0-9,A-Z]*.nii
9106	[a-z,A-Z,.]+@[a-zA-Z_]+?\.[a-zA-Z]{2,6}
9107	[a-z0-9+.-]+://
9108	[a-z0-9_-]+
9109	[a-zA-Z.;?<>-]+
9110	[a-zA-Z0-9 !@#$%^&*()\-_=+\\|`[\]{};:\'\",\.<>]
9111	[a-zA-Z0-9-]+=.*
9112	[a-zA-Z0-9.+_\-]+$
9113	[a-zA-Z0-9\-]+
9114	[a-zA-Z0-9\.\_\%\-\+]+@[a-zA-Z0-9\.\_\%\-]+.[a-zA-Z]{2,6}
9115	[a-zA-Z0-9]
9116	[a-zA-Z0-9]+
9117	[a-zA-Z0-9]+(-[a-zA-Z0-9]+)?
9118	[a-zA-Z0-9_\-]+$
9119	[a-zA-Z0-9_\.]+/[a-zA-Z0-9_\.]+
9120	[a-zA-Z0-9_]+
9121	[a-zA-Z0-9_]+:[a-zA-Z0-9_\.\-\s]+
9122	[a-zA-Z0-9_]+:\d+$
9123	[a-zA-Z0-9_]{2,10}
9124	[a-zA-Z\.\-\?\*_]+
9125	[a-zA-Z\d]+(\.[a-zA-Z\d]+)+
9126	[a-zA-Z]+ error: .* in (.+) on line ([0-9]+).*
9127	[a-zA-Z]+://[\S]+
9128	[a-zA-Z]+=
9129	[a-zA-Z]+|\d+
9130	[a-zA-Z]:(/|\\)
9131	[a-zA-Z]:\\\\foo\\\\bar
9132	[a-zA-Z][.][a-zA-Z]
9133	[a-zA-Z][^\t\n\r\x0c />\x00]*
9134	[a-zA-Z][a-zA-Z0-9_-]*$
9135	[a-zA-Z][a-zA-Z0-9_]*$
9136	[a-zA-Z][a-zA-Z0-9_]*
9137	[a-zA-Z][a-zA-Z0-9_]*}.*
9138	[a-zA-Z]{2}\-\d{2}
9139	[a-zA-Z_:][\w\.\-_:]*\Z
9140	[a-zA-Z_]
9141	[a-zA-Z_]+
9142	[a-zA-Z_]+(@[0-9]+)?|[0-9]+(\.[0-9]+)?|[^ \n]
9143	[a-zA-Z_][-a-zA-Z0-9_]*
9144	[a-zA-Z_][\w\.\-_]*\Z
9145	[a-zA-Z_][a-zA-Z0-9_-]*
9146	[a-zA-Z_][a-zA-Z0-9_.-]*
9147	[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-])?
9148	[a-zA-Z_][a-zA-Z0-9_.-]*(:[a-zA-Z_][a-zA-Z0-9_.-]*)?
9149	[a-zA-Z_][a-zA-Z0-9_.-]*:\*
9150	[a-z\*]
9151	[a-z]*.example.com
9152	[a-z]*[^A-Z]
9153	[a-z]+$
9154	[a-z]+:0x[0-9a-f]+
9155	[a-z]+:[a-zA-Z]+
9156	[a-z]+\([a-z]+\)\.$
9157	[a-z]+|\d+
9158	[a-z][\.\!\?][\"\\']?\Z
9159	[a-z]{2}
9160	[a-z|A-Z]+
9161	[a-z|A-Z]+[0-9]+\:*[a-z|A-Z]+[0-9]+\:*
9162	[abc]
9163	[abc]+
9164	[abcdef0-9]{40}
9165	[acgt][acgt]+
9166	[actg]{3}
9167	[aeouiAEOUI]
9168	[dSNwrho]{1,3} =.{7,8}?
9169	[d|D](ebu|b)g
9170	[igpv\-][fpn\-][pob\-][3\-][ap\-]$
9171	[nN]ew (.*)
9172	[name|class]="([^"]*)"
9173	[pP]ylot
9174	[r][g][b][(]\d{1,3}[,][ ]*\d{1,3}[,][ ]*\d{1,3}[)]
9175	[r][g][b][a][(]\d{1,3}[,][ ]*\d{1,3}[,][ ]*\d{1,3}[,][ ]*(\d+|\d*\.\d+)[)]
9176	[sS]ignal
9177	[sxz]$
9178	[uU]?[rR]?([\'"])
9179	[uU]?[rR]?(\"\"\"|\\'\\'\\'|\"|\\')
9180	[uU][\'"]
9181	[x+]
9182	[x\d]Q
9183	[{}]
9184	[|&]$
9185	[~$]
9186	\ +
9187	\ //(.*)
9188	\ \(.*$
9189	\! LaTeX Error:
9190	\!.*
9191	\!\s*(.*)
9192	\"[a-z0-9]{32}\"
9193	\"hostname\": \"[a-zA-Z0-9-_\.]*\"
9194	\"|\\'
9195	\# On branch (.*)$
9196	\#!\S+\bpython\S*
9197	\#.*\r?\n
9198	\#?([0-9a-fA-F]{3}([0-9a-fA-F]{3})?){1}$
9199	\#?\s?(\d+)
9200	\#[\s]*include[\s]*[<"](\S+)[">]
9201	\#\d+ *0x.* in spam\(\) at .*codefile\.pyx:22
9202	\#access_token=([^&]*)
9203	\$$
9204	\$((Id|File|Log).*?)\$
9205	\$(?:([^\$\}\{]+)|\{([^\$\}]+)\})
9206	\$([0-9]+)
9207	\$([@\^\$])
9208	\$(\d+)
9209	\$(\d+)|\$\{(\d+):[^\}]+\}
9210	\$(\w*)\$
9211	\$(\w+|{[^}]+})
9212	\$.+?/
9213	\$?([A-I]?[A-Z]):\$?([A-I]?[A-Z])
9214	\$?([A-I]?[A-Z]\$?\d+)
9215	\$?([A-I]?[A-Z]\$?\d+):\$?([A-I]?[A-Z]\$?\d+)
9216	\$?([a-z]+)_\{*(\d)\}*\$?
9217	\$Revision:\s*([0-9]*)\s*\$
9218	\$[0-9A-Za-z_]+
9219	\$[0-9]+\,?\.?[0-9]*
9220	\$[^ ]+
9221	\$[^/]+(/|$)
9222	\$[a-zA-Z_][:a-zA-Z0-9_.-]*
9223	\$\$
9224	\$\$(?P<latex>.*?)\$\$
9225	\$\$([^\$]*)\$\$
9226	\$\$qtLibraryTarget\(([^\)]+)\)
9227	\$\(([^\$]|\$[^\(])*?\$\)
9228	\$\((\w+?)\)
9229	\$\([^ ]* \$<\)
9230	\$\(call\s+moa_load\s*,\s*(\S*)\s*\)
9231	\$\d
9232	\$\d+ = None\n
9233	\$\d+ = \[0\]
9234	\$\d+\s+=\s+
9235	\$\{([_a-zA-Z][_a-zA-Z0-9]+)(\?[^}]+)?\}
9236	\$\{([a-zA-Z0-9_-]+)\}
9237	\$\{[^\}]+\}
9238	\$file
9239	\$repeat_n
9240	\$slash
9241	\${(?P<var>\b\w+\b)}
9242	\${([^}]+)}
9243	\${(\d+)(?::(.*?))?}
9244	\${(\d+)/(.*?)/(.*?)/([a-zA-z]*)}
9245	\${(\d+)[:}]
9246	\${@.+?}
9247	\${[-a-zA-Z0-9 ._]*:[-a-zA-Z0-9 ._]+}$
9248	\${[^{}]+}
9249	\${\W*next.body\(\)\W*}
9250	\${folder:(?P<file>.*)}
9251	\${project_path:(?P<file>[^}]+)}
9252	\%(\w*)
9253	\%.+
9254	\%\([a-zA-Z0-9]+\)
9255	\%\{watch_name\}
9256	\((.)\)
9257	\((.*)/(.*)/(.*)\)
9258	\((.*)\);
9259	\((.*?)\)\s{1,}"(.*?)"\s"(.*?)"$
9260	\((.+)\)
9261	\((.+)\)\s*;
9262	\((?P<flags>.*)\) "(?P<sep>.*)" ".*/(?P<mbx>.*)"
9263	\((DEBUG|INFO|WARNING|ERROR|SEVERE)/[0-4]\)
9264	\(([0-9\.]*),([0-9\.]*),([0-9\.]*)\)
9265	\(([0-9\?]{4}(/[IVXLCDM]+)?)\)
9266	\(([0-9]+) genes: separate data\)
9267	\(([0-9]{3})\)\ ([0-9]{3})\-([0-9]{4})$
9268	\(([:, \w]+)\)$
9269	\(([IVXLCDM]+)\)
9270	\(([\d\.]+),\s*([\d\.]+)\)
9271	\(([\d\.]+)\)
9272	\(([^()]+)\)
9273	\(([^,\)]+),([^,\)]+)\)
9274	\(([^\s()]+) ([^\s()]+) [^\s()]+\)
9275	\(([^\s()]+) ([^\s()]+)\)
9276	\((\d+),(\d+)\)
9277	\((\d+)-(\d+)-(\d+)\)
9278	\((\d+)\)$
9279	\((\d+)\)\Z
9280	\((\w+) - ([\w]+)
9281	\((\w+)
9282	\((e\.c\.)*\d+\.\d+\.\d+\.\d+\)
9283	\(*[Vv]ol.*[1-9]+\)*
9284	\(+
9285	\(.*$
9286	\(.*
9287	\(?(\w:)?(-?\w*)-?(-?\w*)\)?(.*)
9288	\(?[a-zA-Z0-9.-]+@[a-zA-Z,.-]+\)?
9289	\(CVS[NT]*\) ([\d.]+)
9290	\(C\)
9291	\([ ]*-?([0-9]+(\.[0-9]*)?|\.[0-9]+)([ ]+-?([0-9]+(\.[0-9]*)?|\.[0-9]+)){2}[ ]*\)
9292	\([01,]+\)
9293	\([:, \w]+\)
9294	\([A-Z]\) 
9295	\([Dd]isc *[1-9]+\)
9296	\([\d,]+\)
9297	\([\d:, ]+\)$
9298	\([^\(]*$
9299	\([^\)]*\)$
9300	\([^\s()]+ ([^\s()]+)\)
9301	\([a-z]+_[A-Z]+\)
9302	\(\(+
9303	\(\?P<([^>]+)>[^()]+\)
9304	\(\d+\)
9305	\(\d\)
9306	\(\s*([*]|[:])\s*\)
9307	\(\s*;
9308	\(\s+(\S)
9309	\(\w*\)$
9310	\(applications/\(.*
9311	\(c\)
9312	\(file "(.+)" line ([0-9]+)\)
9313	\(function (.+)\n
9314	\(pid (\d+)\)
9315	\(pymacs-(defun|python) [0-9]*
9316	\(pymacs-(defun|python) \. [0-9]*\)
9317	\(version ([0-9.]+)\)
9318	\) (.*)
9319	\)$
9320	\).*$
9321	\);
9322	\)\.$
9323	\)\s*:
9324	\* ([A-Z]\w+):\s(\w+)
9325	\*(.*?)\*
9326	\*(?P<table>[a-z]+)
9327	\*(\.[a-z]{1,5})
9328	\*(fore|back)ground:[ ]*(#[A-Za-z0-9]*)
9329	\*/\s+/\*
9330	\*?\*?\w+\s:\s*
9331	\*END\*?\s*THE\s*SMALL\s*PRINT
9332	\*[LR][CRS]B\*
9333	\*\*(?P<t>[^\s*]+( +[^\s*]+)*)\*\*
9334	\*\*(?P<t>[^\s\*]+( +[^\s\*]+)*)\*\*
9335	\*\w*$
9336	\*|\\
9337	\+?"[^"\\]*(?:\\.[^"\\]*)*"|\[[^]\\]*(?:\\.[^]\\]*)*\]|\S+
9338	\+\+\+\s.+\s+\((working copy|revision \d+)\)
9339	\+\d{10}
9340	\+vot\+
9341	\+|\-
9342	\+|\\|\*|\?|\(|\)|\[|\]
9343	\,( )*?(?P<alignment>(right)|(left))( )*?(\,){0,1}
9344	\,(\s)*?(?P<size>[0-9]+)(\s)*?(\,){0,1}
9345	\-  demoneeded
9346	\-Copy\d*\.
9347	\-\-test\-name=(.*)
9348	\-\s*\>
9349	\-\s*\[\[(?P<t>\S+)\]\]
9350	\. *(\n|$)
9351	\.((dll)|(DLL)|(drv)|(DRV))$
9352	\.(.)I
9353	\.(?!\\(\\\\)*($|[^\\]))
9354	\.(?P<e>\w{1,5})$
9355	\.([\w\-]+)
9356	\.([^/]+)$
9357	\.([a-zA-Z]+) instance
9358	\.([a-z]+)\.t$
9359	\.([a-z]{2,3})(?:\?|$)
9360	\.(\d*)
9361	\.(anno|txt)$
9362	\.(a|cmxa?|mli?)$
9363	\.(bin|out)$
9364	\.(gz|z|Z|zip|bz2|lzma|xz)$
9365	\.(js|jsm|java)(?:\.in)?$
9366	\.(mp3|ogg)$
9367	\.(txt|anno)$
9368	\.0*$
9369	\.?\.?\.\.\.\.$
9370	\.HOST$
9371	\.IX.*
9372	\.JPG$
9373	\.[0-9]+$
9374	\.[0-9]+\.[0-9]+$
9375	\.[a-z0-9]+$
9376	\.[a-zA-Z0-9]{2,4}
9377	\.[a-zA-Z]{2,4}$
9378	\.[a-z]+-\d{2}[mud]{0,3}$
9379	\.\.+$
9380	\.\.\. ([^#]+)#(\d+) (add|edit|delete|integrate|branch|move/add|move/delete)
9381	\.\.\.$
9382	\.\.\s*doctest-ignore::?\s*$
9383	\.\d\d\dZ
9384	\.\w+$
9385	\.\w+
9386	\.\w{2,20}
9387	\._.*?
9388	\._V1\._SX(\d+)_SY(\d+)_
9389	\.bc$
9390	\.bmp$
9391	\.cc
9392	\.cfg$
9393	\.cgi$
9394	\.conf$
9395	\.cpp$
9396	\.cpp$|\.c$
9397	\.discovery$
9398	\.egg$
9399	\.egg(?:-info)?(?:/|$)
9400	\.egg-info$
9401	\.egg-info/installed-files.txt$
9402	\.in ([0-9]+(?:\.[0-9]+)?)\s?((?:)\b)?:?\s?(.*)
9403	\.ini$|\.xml$
9404	\.jpg$
9405	\.less$
9406	\.mar$
9407	\.mp4
9408	\.ops$
9409	\.php$
9410	\.php
9411	\.pkl$
9412	\.pl$
9413	\.pyc$|~$
9414	\.set$
9415	\.so\.[0-9.]*$
9416	\.sublime-package$
9417	\.tar\.bz2
9418	\.tar\.gz$
9419	\.template$
9420	\.tgz
9421	\.vec$|\.sca
9422	\.{2,}
9423	\.|-
9424	\.|/
9425	\.|\\|\/|\||\:|\?|\*
9426	\/
9427	\/(\w+)\.htm
9428	\/+
9429	\/.*
9430	\/Gannet\/
9431	\/MapServer\/*(f=json)*
9432	\/\* Begin PBXHeadersBuildPhase section \*\/\n((?:.|\n)+?)\/\* End PBXHeadersBuildPhase section \*\/
9433	\/\* Begin PBXSourcesBuildPhase section \*\/\n((?:.|\n)+?)\/\* End PBXSourcesBuildPhase section \*\/
9434	\/\* Begin PBXTargetDependency section \*\/\n((?:.|\n)+?)\/\* End PBXTargetDependency section \*\/
9435	\/\* End PBXSourcesBuildPhase section \*\/\n
9436	\/\*.*\*\/
9437	\/\*Universe: (.+)*\*\/
9438	\/\*[^*]*\*+([^/][^*]*\*+)*\/
9439	\/\*\*(.*?)\*\/
9440	\/\/\[(.*)\]:(\d*)
9441	\/app\/views\/
9442	\/title\/tt
9443	\/wms\/?$
9444	\033\[(\d|;)+?m
9445	\:([^/]+)?
9446	\;.*
9447	\;\s*\Z
9448	\;\s*\}
9449	\;|\(
9450	\<%inherit file="([^"]+)" /\>
9451	\<%namespace file="([^"]+)" import="[^"]+" /\>
9452	\<(.*)\>\; rel\=shorturl
9453	\<(\w+?)\>\s*\</\1\>
9454	\<(and|for|of|s|set|the|vs)\>
9455	\</?strong\>
9456	\<[^\>]+\>
9457	\<\<\s*(?P<var_name>.*?):(?P<var_type>.*?)\s*\>\>
9458	\<\?[^\>]*\?\>
9459	\<\s*([a-zA-Z][a-zA-Z0-9]*)
9460	\<a(?P<a>( .+)?)\>\s+(?P<b>[\w\s\(\)\/]+?)\s+\</a\>
9461	\<b(?P<a>( .+)?)\>\s+(?P<b>[\w\s\(\)\/]+?)\s+\</b\>
9462	\<coordinates\>(?P<la>[^,]*),(?P<lo>[^,]*).*?\</coordinates\>
9463	\<div(?P<a>( .+)?)\>\s+\</div\>
9464	\<doctest (.*\.rst)\[(.*)\]\>
9465	\<i(?P<a>( .+)?)\>\s+(?P<b>[\w\s\(\)\/]+?)\s+\</i\>
9466	\<link [^>]*rel="stylesheet"[^>]*\${portal_url}/([^"]*)"
9467	\<opt.*
9468	\<script [^>]*\${portal_url}/([^"]*)"
9469	\<span(?P<a>( .+)?)\>\s+(?P<b>[\w\s\(\)\/]+?)\s+\</span\>
9470	\<td\>(.+?)\</td\>
9471	\=+|\!\=|\<\=|\<|\>\=|\>
9472	\=[\s]+([\d\.]*) KB
9473	\=[\s]+([\d\.]*) KB/sec
9474	\>(?P<a>\s+)(?P<b>[\.\,\:\;])
9475	\>Yarn\<.*?\<\/a\>
9476	\?(.+?)=(.+?)
9477	\?+$
9478	\?P<([a-z\d_]+)>
9479	\?Page=(\d+)
9480	\?[\w\.\-/]*\=
9481	\?[a-zA-Z_][a-zA-Z0-9_]*$
9482	\?[a-zA-Z_][a-zA-Z0-9_]*
9483	\?protocol=
9484	\?rb-local-site-name=([A-Za-z0-9\-_.]+)
9485	\?| 
9486	\A#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])\Z
9487	\A#([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])\Z
9488	\A#([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])\Z
9489	\A#([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])\Z
9490	\A( *\n)+
9491	\A(.*\.)(\d+)(\.html)?\Z
9492	\A(?:(\w+)-)?(\w+)(?:/([^\@/]+))?(?:@([^\@/]+))?\Z
9493	\A(?:\..*|cylc-suite\.db.*|log(?:\..*)*|state|share|work)\Z
9494	\A(?:\[([^\]]+)\])?([^=]+)?(?:=(.*))?\Z
9495	\A(?P<head>.*?)(?P<escape>\\*)(?P<symbol>\$\{(?P<name>[A-z_]\w*)\})(?P<tail>.*)\Z
9496	\A(\w+)://([^ *?[]*)\Z
9497	\A<[^>]*?href=["\']\Z
9498	\AJRNL
9499	\AREMARK   1 REFERENCE
9500	\AREMARK   1
9501	\ASRC\s*=.*
9502	\A[\+\-]?\d+(?:W\d+)?(?:T\d+(?:Z|[+-]\d+)?)?\Z
9503	\A[\t ]*([\w\.\/]+)\:(([0-9]+))?(\:([0-9]+))?\:?
9504	\A[^*]*\* \* \*[^*]*\* \* \*
9505	\A[a-zA-Z0-9_]+\Z
9506	\A\S
9507	\A\[
9508	\A\\(?P<index>\d+)\Z
9509	\A\d+\Z
9510	\A\s*
9511	\A\s*(?:\.\..*\n)*\s*----+[ ]*\n(.*)\n----+[ ]*\n
9512	\A\s*(\w[\w\d]*)\s*\Z
9513	\A\s*----+[ ]*\n(.*)\n----+[ ]*\n
9514	\A\s*@deprecated:
9515	\A\s*\.START\s*
9516	\A\n(?:\n   (?P<fill>.)?\n   (?P<align>[<>=^])\n)?\n(?P<sign>[-+ ])?\n(?P<alt>\#)?\n(?P<zeropad>0)?\n(?P<minimumwidth>(?!0)\d+)?\n(?P<thousands_sep>,)?\n(?:\.(?P<precision>0|(?!0)\d+))?\n(?P<type>[eEfFgGn%])?\n\Z\n
9517	\Anamelist:(\w+).*\Z
9518	\Argb:([0-9a-fA-F]{1,4})/([0-9a-fA-F]{1,4})/([0-9a-fA-F]{1,4})\Z
9519	\B([A-Z])
9520	\D+(?P<name>\d+)\D+
9521	\S+$
9522	\S+@\S+\.\S*[^\s)?]
9523	\S+\.a
9524	\S+\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)%
9525	\S+\s+\S+
9526	\S+buildout.py
9527	\S{1,10}
9528	\W*
9529	\W*@\W*|\W+at\W+
9530	\W*\.\W*|\W+dot\W+|\W+d0t\W+
9531	\W+(\w)
9532	\W+|_
9533	\W\xd0\xb2\xd0\xb0\xd0\xbe\W
9534	\W\xd0\xb7\xd0\xb0\xd0\xbe\W
9535	\W\xd0\xb7\xd0\xb5\xd0\xbb\xd0\xb0\xd0\xbe\W
9536	\W\xd1\x81\xd0\xb0\xd0\xbe\W
9537	\W\xd1\x81\xd0\xb2\xd0\xb0\xd0\xbe\W
9538	\W\xd1\x81\xd0\xb7\xd0\xb0\xd0\xbe\W
9539	\W\xd1\x86\xd0\xb0\xd0\xbe\W
9540	\W\xd1\x8e\xd0\xb0\xd0\xbe\W
9541	\W\xd1\x8e\xd0\xb2\xd0\xb0\xd0\xbe\W
9542	\W\xd1\x8e\xd0\xb7\xd0\xb0\xd0\xbe\W
9543	\[       OK \] ?(.*)\r\n
9544	\[       OK \] ?(.*?) .*\r\n
9545	\[  FAILED  \] ?(.*)\r\n
9546	\[  PASSED  \] ?(.*)\r\n
9547	\[ CRASHED      \](.*)\r\n
9548	\[ RUN      \] ?(.*)\r\n
9549	\[ RUNNER_FAILED \] ?(.*)\r\n
9550	\[!([bcgmryBCGMRY])?\]
9551	\[".*?\]+?.*?\[/".*?\]+?
9552	\[((\d+(\.\d*)?)([wdhms]?)/)?(\d+(\.\d*)?)([wdhms])\]$
9553	\[(.*?)\][^\:]+\:\s+(\-?\d+)
9554	\[(.+?)\]
9555	\[(?P<escapeopen>\[?)(?P<name>[\w\d\_-]+)\b(?P<arguments>[^\]\/]*(?:\/(?!\])[^\]\/]*)*?)(?:(?P<selfclosing>\/)\]|\](?:(?P<content>[^\[]*(?:\[(?!\/(?P=name)\])[^\[]*)*)\[\/(?P=name)\])?)(?P<escapeclose>\]?)
9556	\[(?P<from>[0-9]+)-(?P<to>[0-9]+)\]
9557	\[(?P<name>.*)=(?P<num>[0-9]+)\]
9558	\[(ERROR|FAIL)\]
9559	\[([0-9]{8})\]\)?$
9560	\[([\.0-9a-f:]+)\](?::(\d+))?
9561	\[([\w\-\:]+)=(.*?)\]
9562	\[([^\[\]]+)\]
9563	\[([^]]*)\]:(\d*)$
9564	\[(\d+):(\d\d)([\.:]\d+|)\]
9565	\[(\d+):(\d\d)(\.\d+|)\]
9566	\[(\d+)\.\.(\d+)\]=(\S+)
9567	\[(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w (\d{1,2}):(\d\d)\]
9568	\[(\d\d\d\d)-(\d\d)-(\d\d) [A-Z]\w\w\]
9569	\[(\w+)\]
9570	\[.+?:(\d+?)\](.+)
9571	\[/sourcecode\]
9572	\[Error 17\] Cannot create a file when that file already exists: 
9573	\[Error \d+\] Cannot create a file when that file already exists: 
9574	\[FIXED ([^\]]+)\]
9575	\[I\] (.*) \((.*)@([0-9]+)/([0-9]+)/([0-9]+)\): (.*)
9576	\[Ordinal/Name Pointer\] Table
9577	\[[0-9]+\]
9578	\[[a-z]+?:.*\]\s
9579	\[\[(.*)\]\]
9580	\[\[(.*?)\]\]
9581	\[\[(.+)\]\]
9582	\[\[(.+?)\]\]
9583	\[\[(?:[^|\]]*\|)?([^\]]+)\]\]
9584	\[\[(?P<t>[^\]]*?) +(?P<k>\S+) +(?P<p>left|right|center) +(?P<w>\d+px)\]\]
9585	\[\[(?P<t>[^\]]*?) +(?P<k>\S+) +(?P<p>left|right|center)\]\]
9586	\[\[(?P<t>[^\]]*?) +(?P<k>\S+)\]\]
9587	\[\[(?P<t>\S+)\]\]
9588	\[\[(?P<text>.*?)\]\]
9589	\[\[([A-Za-z0-9\-_ ]+?)\]\]
9590	\[\[([A-Za-z0-9\-_ ]+?)\|(.+?)\]\]
9591	\[\[([\w ]+)\]\]
9592	\[\[([^\]]+)\]\]
9593	\[\[([^][|:]*)\]\]
9594	\[\[([^]|[:]*)\|([^][]*)\]\]
9595	\[\[(\d+)\]\]
9596	\[\[(ftp://[^|\]]*)\]\]
9597	\[\[(ftp://[^|\]]*)\|([^\]]*)\]\]
9598	\[\[(https?://[^|\]]*)\]\]
9599	\[\[(https?://[^|\]]*)\|([^\]]*)\]\]
9600	\[\[Category:(?:[^|\]]*\|)?([^\]]+)\]\]
9601	\[\[Image:.*\]\]
9602	\[\[Page \d+\]\]
9603	\[\[[Ii]mage:([^.]*)(.*?)\]\]
9604	\[\[file:([^|\]]*)\]\]
9605	\[\[file:([^|\]]*)\|([^\]]*)\]\]
9606	\[\[image:([^ ]*)
9607	\[\[image:[^\]]+
9608	\[\[include page="([^"]*?)"[^\]]*?\]\]
9609	\[\d+ refs\]$
9610	\[\d+ refs\]
9611	\[\d+m
9612	\[\n|\?>
9613	\[\s*([^\]]+?)?\s*\]
9614	\[\s*[a-zA-Z_][a-zA-Z0-9_]*\s+(?:[a-zA-Z_][a-zA-Z0-9_]*\s*\]|(?:[a-zA-Z_][a-zA-Z0-9_]*)?:)
9615	\[\s*expr ([^\]]+)\]
9616	\[caption (.*?)\](.*?)\[/caption\]
9617	\[caption[^\]]*\]
9618	\[color\s*([a-z]+)\](.*)\[\/color\]
9619	\[commit=(\d\d\d\d[-/]\d\d[-/]\d\d)\]
9620	\[err\]|\[error\]|\[warn\]
9621	\[hwid:([^\]]*)\]
9622	\[info\] Set current project to (.+) \(in build file:
9623	\[info\] The current project is built against Scala ([\d\.]+)
9624	\[info\] This is sbt ([\d\.]+)
9625	\[ip:([0-9_]*)\]
9626	\[new branch\]\s+(\S+)
9627	\[new tag\]\s+(\S+)
9628	\[sourcecode( language="(?P<lang>[a-z]+)")?\]
9629	\[test.cp?p?:
9630	\[|\]
9631	\[|\]|[^\[\]\s]+
9632	\\#
9633	\\((?![enr\d]))
9634	\\(.)?
9635	\\(0\d\d)
9636	\\(?![nrt])
9637	\\(?P<char>[/@:\\])
9638	\\([ \tn\\]|[0-7]{3,3})
9639	\\([0-3][0-7][0-7]|.)
9640	\\([0-7]{1,3}|.)
9641	\\([1-9][0-9]*)
9642	\\([\\{}%])
9643	\\(\$|/|\^|\\)
9644	\\(\W)
9645	\\(u[dD][89aAbB][0-9a-fA-F]{2}\\u[0-9a-fA-F]{4}|u[0-9a-fA-F]{4}|.|$)
9646	\\.?
9647	\\.|"""|\\'\\'\\'|"|\\'|\(|\)|\[|\]|\{|\}|\#
9648	\\.|\(\?P=
9649	\\@
9650	\\[\\]?
9651	\\[^\s]+\s+
9652	\\[natbv"]?
9653	\\\\([^ \\/?:]+\\)+
9654	\\\s*$
9655	\\\w+ 
9656	\\\n
9657	\\_\w*\.(eps|png|jpg|gif)
9658	\\begin{sidewaystable}
9659	\\begin{table}
9660	\\begin{tabularx}
9661	\\begin{tabular}
9662	\\c ([^ ,;\.]+)
9663	\\centering
9664	\\end\{itemize\}\s+\\begin\{itemize\}
9665	\\end{tabularx}
9666	\\end{tabular}
9667	\\g<([a-zA-Z_][a-zA-Z_]*)>
9668	\\n|\\\\
9669	\\s*$
9670	\\textbackslashzzz
9671	\\u
9672	\\u([0-9a-zA-Z]{4})
9673	\\x
9674	\\x([a-fA-F0-9]{1,4})
9675	\\{1,2}x([a-fA-F0-9]{2})
9676	\\|/
9677	\^headers\^$
9678	\^smsConfirmation\^=\^(?P<answer>.*)\^
9679	\b(?:20|19)\d{2}\b
9680	\b(?:directory|file)\b
9681	\b(?P<name>\S+?)/(?P<version>[^\(\s]+)(?P<default>\(default\))?(?:\s|$)
9682	\b(?P<name>playerc_\w+)_t\b
9683	\b(?P<word>\w+)\b
9684	\b(Mc)(\w)
9685	\b([0-9]{1,3}\.){3}[0-9]{1,3}\b
9686	\b([0-9a-fA-F]{1,4}::?){3,}[0-9a-fA-F]{1,4}\b
9687	\b([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}\b
9688	\b([A-Z])[A-Z]
9689	\b([A-Z]\w+[A-Z]+\w+)
9690	\b(\d+)\.(\d+)
9691	\b(\w+)=(?:\'([^\']*)\'|"([^"]*)")
9692	\b(nm|tt|ch|co)([0-9]{7})\b
9693	\b,\ \b
9694	\b0[0-9]
9695	\b0x[0-9a-f]+\b
9696	\bLCOV_EXCL_END\b
9697	\bLCOV_EXCL_LINE\b
9698	\bLCOV_EXCL_START\b
9699	\b[A-Z](\.[A-Za-z])+\b
9700	\b[A-Z]\d{3}\b
9701	\b[\-_]\b
9702	\b\ \b
9703	\b\w{2,25}\b
9704	\bab[nx]
9705	\babl
9706	\bap
9707	\bat
9708	\bc[cs]
9709	\bcd
9710	\bconst\b
9711	\bd[^-+]*
9712	\bex
9713	\bgl_Position\b([^;]*);
9714	\bgl_Vertex\b
9715	\bhostname="([^"]*)"
9716	\bhtml|js|css|xml|haml\b
9717	\bin
9718	\bj[^-+]*
9719	\blibefence
9720	\bm[^-+]*
9721	\bmethod=text\b
9722	\bnn
9723	\bnp
9724	\bnr
9725	\bod
9726	\boperator\b.*
9727	\bp[^-+]*
9728	\bplural\s*=\s*([^;]+)
9729	\bq[^-+]*
9730	\br[^-+]*
9731	\breturn\b
9732	\broad\b
9733	\bs\b
9734	\bsource\.([a-z+\-]+)
9735	\bsource\.([a-z+]+)
9736	\bto
9737	\btxout_value txout_approx_value\b
9738	\buh
9739	\bvb
9740	\bvbd
9741	\bvbg
9742	\bvbn
9743	\bw[^-+]*
9744	\d*$
9745	\d*ubuntu\d*
9746	\d+    def join\(
9747	\d+ Hz
9748	\d+ \((.+)\) ... \d+ \((.+)\)
9749	\d+ \((.+)\) vs. \d+ \((.+)\)
9750	\d+ kb/s
9751	\d+ loops, best of \d+: (?P<time>[0-9.]+) msec per loop
9752	\d+ loops, best of \d+: (?P<time>[0-9.]+) sec per loop
9753	\d+(.\d*)?|.\d+
9754	\d+(?=\-)
9755	\d+([a-zA-Z]+)\.wma
9756	\d+,\d+
9757	\d+-way clustering
9758	\d+/\d+\/\d+\s+([\x08House\x08|\x08Senate\x08])
9759	\d+/apache2
9760	\d+/python
9761	\d+:\d+
9762	\d+:\d+\.0 Ethernet
9763	\d+[/-]\d+[/-]\d+ \d+:\d+:\d+\.\d+
9764	\d+\.(?:jpg|gif|png|jpeg)
9765	\d+\.\.$|\.{4}$
9766	\d+\.\d+(?:\.\d+)?
9767	\d+\.\d+\.\d+
9768	\d+\/\d+(\/\d+)?
9769	\d+_\d+_[0-9A-Fa-f]+
9770	\d+s\.(?:jpg|gif|png|jpeg)
9771	\d+x\d+
9772	\d+|>>|<<|[<>!=]=|&&|\|\||[-+*/%^&<>?:|!()n]
9773	\d+|\D+
9774	\d.\d.\d
9775	\d[.\d]+\d$
9776	\d\.(\d\d)
9777	\d\.(\w+):(\w+)
9778	\d\d%
9779	\d\d-\w\w\w-\d\d
9780	\d\d/\d\d/\d\d\d\d
9781	\d\d\d
9782	\d\d\d\d-\d\d-\d\d \d\d:\d\d:\d\d
9783	\d\d\d\d-\d\d-\d\d$
9784	\d{1,2}\.\d{1,2}\.\d{4}
9785	\d{1,3}\.\d{5}
9786	\d{1,} (minutes|minute|hours|hour|day|days) ago
9787	\d{10}
9788	\d{2,5}
9789	\d{2}
9790	\d{3}
9791	\d{3}-\d{4}
9792	\d{4,4}
9793	\d{4}
9794	\d{4}(/\d\d(/\d\d)?)?$
9795	\d{4}-\d{4}|\d{4} - \d{4}|\d{4}
9796	\d{4}\.\d{1,2}\.\d{1,2}
9797	\d{5}
9798	\d{5}-\d{4}
9799	\n(.)
9800	\n(?:[ \t]*\n)+
9801	\n(?=-+\n.+\n-+\n)
9802	\n([^\n])
9803	\n--=---{0,2}\n
9804	\n:\n
9805	\n?\[\[toc(\|flat)?\]\]
9806	\nTotal time = ([0-9.]+)s\n
9807	\n[ \t]*\n
9808	\n[^ \t]+:
9809	\n\[\d+\]\s
9810	\n\n\n\n+
9811	\n\r?
9812	\n\s*[^!]\s*<include_file=(.*?)>
9813	\n\s*\*?
9814	\n\s*\n
9815	\n\s+
9816	\n\s+\*
9817	\nimport subprocess\n
9818	\nliteral 0\n
9819	\nliteral 256\n
9820	\n|\\
9821	\n|\t
9822	\r(\r?\n)?
9823	\r\n(?P<rv>[0-9]{1,})\r\n
9824	\r\n|\r
9825	\s(?=days?|months?|years?|weeks?)
9826	\s([^\s\(\)]+)
9827	\s(\d+\.\.\d+)
9828	\s*!important
9829	\s*"(([^"]|(\\"))*)(?<!\\)"
9830	\s*"\s*<p=\\'"\\'/>
9831	\s*#\s*(elif|else)\b
9832	\s*#\s*(if|ifdef|ifndef)\b
9833	\s*#\s*define (\S+) (.*)
9834	\s*#\s*endif\b
9835	\s*#\s*include\s+"([^"]*)"
9836	\s*#\s*include\s+<([^>]*)>
9837	\s*("[^"]*"|.*?)\s*,
9838	\s*(((if|while)\s*\(|else\s*|else\s+if\s*\(|for\s*\(.*\))[^{;]*)
9839	\s*(((if|while|else\s*(if)?|for(each)?|switch|declare)\s*\(.*\)[^{:;]*)|(do\s*[^\({:;]*))
9840	\s*(([\\'"])(.*?[^\\])\2)\s*([},=]|$)
9841	\s*(([\\'"])\2)\s*([},=]|$)
9842	\s*(([^,]|(,\s*\d))+)
9843	\s*((const|mutable)\s+)?(char|(short(\s+int)?)|int|long(\s+(long|int))?)\s+[a-zA-Z_][a-zA-Z0-9_]*\s*:\s*\d+\s*;
9844	\s*(,)\s*
9845	\s*(-?\w+:\w+)+,*
9846	\s*(;)
9847	\s*(<!>=)
9848	\s*(?:\((\d+)\)\s*)?(\??[\w-]+)?(\[)
9849	\s*(?:\((\d+)\)\s*)?(\??[\w-]+\s*)()
9850	\s*(?P<a>,|:)\s*
9851	\s*(?P<a>[\+\-\*/\=]+)\s*
9852	\s*(?P<name>.+);(?P<code>[A-Z]{2})\s*$
9853	\s*(?P<name>[+\w. -]+?)\s*=\s*(?P<module>[\w.]+)\s*(:\s*(?P<attr>[\w.]+))?\s*(?P<extras>\[.*\])?\s*$
9854	\s*(?P<option>[^:=\s][^:=]*)\s*(?P<vi>[:=])\s*(?P<value>.*)$
9855	\s*(CREATE|ALTER|DROP)\s+
9856	\s*([+-]?)([^\s\(\)<>"\\'\-=\[\],]+)\s*
9857	\s*([A-Za-z][A-Za-z0-9_]*)
9858	\s*([REWCF]):\s*([0-9]+):.*
9859	\s*([^#]\S+)\s*=\s*(\S+)\s*
9860	\s*([^()]+)\s*
9861	\s*([^,;]+?)\s*[,;]
9862	\s*([^;# \t\n\r\f\v]+)
9863	\s*([^\\'"\s{},=][^{},=]*?)\s*([},=]|$)
9864	\s*([^\s\(\)"\\'\-=,\[\]/]*)\s*(\[|/)
9865	\s*([^\s\(\)"\\'\-=,\[\]/]+)\s*
9866	\s*([^\s\(\)"\\'\-=,\[\]]*)\s*\[
9867	\s*([^\s\(\)"\\'\-=,\[\]]+)\s*
9868	\s*([^\s\(\)"\\'\-=\[\]]+)\s*
9869	\s*([^\s\(\)]*)\s*
9870	\s*([^\s\=]+)[\s=]+(.*)
9871	\s*([a-f0-9]+):.*
9872	\s*([a-zA-Z0-9_]+)\s+([a-zA-Z0-9_]+)=([0-9]+)\(([ a-zA-Z0-9_]*),([ a-zA-Z0-9_]*),*\)
9873	\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\s*=\s*(\\'[^\\']*\\'|"[^"]*"|[^\s"\\'=<>`]*))?
9874	\s*([a-zA-Z_][-.a-zA-Z_0-9]*)(\s*=\s*(\\'[^\\']*\\'|"[^"]*"|[^ \t\n<>]*))?
9875	\s*([bB]asic|[dD]igest)\s+(?:[\w]+="[^"]+",?\s*)?
9876	\s*(\+?=)\s*
9877	\s*(\S+)
9878	\s*(\S+)\s+/(.*)/\s*$
9879	\s*(\d*) (.*)
9880	\s*(\d+)\s*(\d+)\s*$
9881	\s*(\d+)\s+([A-Y])\s+([-.0-9]+)\s
9882	\s*(\d+)\s+job\(s\) submitted to cluster\s+(\d+)*
9883	\s*(\n|$)
9884	\s*(\w+)\s*=?(.*)\n
9885	\s*(class|def)\s+[a-zA-Z_][a-zA-Z0-9_]*
9886	\s*(not\s+set)?\s*\Z
9887	\s*({|}|\[|]|//|/|\.|\\\\|\\|<==|==>|<=|=>|<--|-->|<-|->|@|or|and|not|\(|\)|>=|=|<>|like|_|\*|\+|\?)\s*
9888	\s*-\s*
9889	\s*.*#\s*.*define\s.*SQLITE_VERSION\W*"([\d\.]*)"
9890	\s*//.*\n
9891	\s*//\s*#(include|define|if|ifdef|elif|ifndef|endif|else)(?:\s+(.*)\s*$|($))
9892	\s*/?>
9893	\s*:.*
9894	\s*</TestFunction>\s*
9895	\s*<<start>>
9896	\s*<?([^@\s]+\@[a-zA-Z0-9-.]+)>?\s*
9897	\s*<?xml\b.*\bencoding="([^"]+)"
9898	\s*<DOC>\s*\n     (\s*(<DOCID>\s*(?P<docid>.+?)\s*</DOCID>|\n           <STORYID\s+[^>]*?>\s*.+?\s*</STORYID>|      \n           <SLUG\s+[^>]*?>\s*.+?\s*</SLUG>|          \n           <DATE>\s*(?P<date>.+?)\s*</DATE>|         \n           <NWORDS>\s*.+?\s*</NWORDS>|                    \n           <PREAMBLE>\s*.+?\s*</PREAMBLE>)\s*)*\n     <TEXT>\s*(?P<text>.+?)\s*</TEXT>\s*(<TRAILER>\s*(?P<trailer>.+?)\s*</TRAILER>\s*)?</DOC>\s*
9899	\s*<DOC>\s*\n     (\s*(<DOCNO>\s*(?P<docno>.+?)\s*</DOCNO>|\n          <CODER>\s*.+?\s*</CODER>|\n          <DD>\s*.+?\s*</DD>|\n          <AN>\s*.+?\s*</AN>|\n          <HL>\s*(?P<headline>.+?)\s*</HL>|\n          <SO>\s*.+?\s*</SO>|\n          <CO>\s*.+?\s*</CO>|\n          <IN>\s*.+?\s*</IN>|\n          <GV>\s*.+?\s*</GV>|\n          <DATELINE>\s*(?P<dateline>.+?)\s*</DATELINE>)\s*)*\n     <TXT>\s*(?P<text>(<p>\s*(<s>\s*.+?\s*</s>)+\s*</p>)+)\s*</TXT>\s*</DOC>\s*
9900	\s*<TestFunction name=\s*
9901	\s*<\s*br\s*/?\s*>\s*
9902	\s*<entry><type>([^<]+)</type></entry>
9903	\s*<p>\s*
9904	\s*<p>\s*.+?\s*(<p>\s*.+?\s*?)*\s*
9905	\s*<style\s*
9906	\s*<tr>\n(\s*<td></td>\n){2}\s*(<td></td>){2}<td>&emsp;</td>\n\s*</tr>
9907	\s*=+>\s*
9908	\s*=\s*(.*)
9909	\s*?([a-z]+(?:-[a-z]+)*)(?::[ \t]*(.*?))?;
9910	\s*?([a-z]+(?:-[a-z]+)*):[ \t]*(.*?);
9911	\s*?- Annotation \[L(\S*);\]:$
9912	\s*?- Constant element value.*$
9913	\s*?- Method:\s*(\S*)[(].*$
9914	\s*?- Program class:\s*([\S]+)$
9915	\s*?- \S+? \[(.*)\]$
9916	\s*@(\w+){((\S+),)?(.*)}\s*
9917	\s*@Test.*groups\s*=\s*("unstable|Array\("unstable"\))|@Category\(UnstableTest\.class\).*
9918	\s*Add\(ExternalReference::([^(]+)\(
9919	\s*DRI_CONF_DESC_END
9920	\s*District (\d+)
9921	\s*Option\s+"XkbLayout"\s+"(?P<kt>[a-z-]+)"
9922	\s*Project\("{(\S+)}"\) = "(\S+)", "tools\\\S+.vcproj", "\{(\S+)\}"\s*
9923	\s*The (?P<p>[\w\d]+) processor operates at
9924	\s*XKBLAYOUT="(?P<kt>[a-z-]+)"
9925	\s*[,/&.]\s*|\s+and\s+|\s{2,}|\n
9926	\s*[:_\t]+\s*|\s{2,}|\n
9927	\s*[A-Z]+\s[A-Z ]+$
9928	\s*[^#]{3,}:\s*(#.*)?
9929	\s*[^=]+=
9930	\s*[a-zA-Z_]\w+=
9931	\s*[ur]{0,2}(?:"""[\s\S]*?"""|"[^"\n]+?"|\'\'\'[\s\S]*?\'\'\'|\'[^\'\n]+?\')\s*
9932	\s*\(.*$
9933	\s*\(\s*\(
9934	\s*\(\s*\)\s*$
9935	\s*\*/\s*
9936	\s*\*\s
9937	\s*\,\s*
9938	\s*\.\s*
9939	\s*\:\s*
9940	\s*\;\s*
9941	\s*\S+
9942	\s*\S+\s*\Z
9943	\s*\[(?P<section>.*)\]
9944	\s*\[\s*(\d*)\s*:\s*(\d*)\s*\]\s*"([^"]+)"\s*:\s*"([^"]+)"\s*;\s*
9945	\s*\n\s*\n
9946	\s*\t*\[{1}filesystem(\d+)\]{1}
9947	\s*\w+
9948	\s*\n      <table[^>]*>\s*\n        ((?:<tr[^>]*>)?\n          (.*?)\n        (?:</tr>)?)\s*\n      </table>\s*$\n      
9949	\s*\n\s*
9950	\s*bytes\s*=\s*(\d+)\s*-\s*(\d+)\s*
9951	\s*crt\s*[=]\s*(?P<path>.*)/crt1.o
9952	\s*dfs.*$
9953	\s*eth(\d):(\d+)\s+\d+\s+(\d+)\s+\d+\s+\d+\s+\d+\s+\d+\s+\d+\s+(\d+)\s+\d+\s+(\d+)
9954	\s*from\s*.*?import\s+(.*)
9955	\s*geo\s*
9956	\s*global\s+(.*)
9957	\s*importScripts\((.*)\)
9958	\s*import\s+(.*)
9959	\s*include\s*=\s*(?P<url>.*)
9960	\s*initrd
9961	\s*initrd\s+
9962	\s*kernel
9963	\s*kernel\s+
9964	\s*latitude\s*
9965	\s*libssl.so.0.9.8\s*
9966	\s*longitude\s*
9967	\s*private static final (String (MAJOR|MINOR|MICRO|MODIFIER)|boolean SNAPSHOT)
9968	\s*static ExternalReference ([^(]+)\(
9969	\s*target remote :([0-9]+)$
9970	\s*title
9971	\s*value\s*
9972	\s*wordpress_id:\s*(\d+)\s*
9973	\s*{\s*
9974	\s*}\s*
9975	\s+(([0-9A-F]{2}:){5}[0-9A-F]{2})\s+
9976	\s+((\d+\.){3}\d+)\s+
9977	\s+((\w*?):.*?{(.|\n)*?\n\s*})(,|\n+})\n
9978	\s+(<td align=.*?>)(.*?)(</td>)
9979	\s+(?:public|static|private|final)[\w\s]*?(\w+)\s*\(
9980	\s+(?<!\\)\.\s+
9981	\s+(\d+)\s+(\d+)
9982	\s+(\d+\.\.\d+)[\s+\d+\.\d+]+
9983	\s+(\w+)\s+"(&#\w+;|[^&"]*)"
9984	\s+(eth\d+):(.*)
9985	\s+---?\s+
9986	\s+/.*
9987	\s+<
9988	\s+ANGSTROM.*
9989	\s+ASSERT_EQUALS\(\"(.*)\"
9990	\s+AS\s+(\S+)
9991	\s+\(\d{4}\)$
9992	\s+\(disc (\d+)(?::\s+([^)]+))?\)
9993	\s+\(feat. [^)]*\)
9994	\s+\-(\w+)\s*
9995	\s+\-\-(.*?)\s
9996	\s+\<br(?P<a>.*?)\/\>
9997	\s+\[(?P<section>.*)\]
9998	\s+\w+\s*=\s*models\.
9999	\s+and\s+
10000	\s+background(?:-image)?:\surl\((.+?)\).+;
10001	\s+cdef\s*(?:[\w\.]*?\**\s*)?(\w+)\s*\(
10002	\s+class 
10003	\s+def 
10004	\s+def\s*(\w+)\s*\(
10005	\s+of\s+
10006	\s+src set ".*" \(([0-9.]+) docs, \d+ segs\)
10007	\s+src set ".*" \(\d+ docs, ([0-9.]+) segs\)
10008	\s+}
10009	\s<br/>\s*\S*<br/>
10010	\s?
10011	\s?(?P<option>[^:=\s][^:=]*)\s*(?P<vi>[:=])\s*(?P<value>.*)$
10012	\s?["\']([a-zA-Z_"\'\s\d\-\.#=?!]+)["\']\s+tset
10013	\s\+
10014	\s\Z
10015	\s\d+
10016	\s\s\s\s+.*\Z
10017	\s\s\s\s+[\w]{4}.\s+\d*\Z
10018	\s\s\s\s\s\s\s.*\Z
10019	\sdo(\s+\|.*?\|)?\s*(#|$)
10020	\shan(ds)ome\s
10021	\sinet[6]?\s
10022	\ssubroutine\s(.+)\(.*\)
10023	\ssubroutine\s(.+)\([^()]*\)
10024	\s{2,}|[\t\n\r\x0c\x0b]
10025	\s|$
10026	\s|,|;|:
10027	\s|=|,|:|\((?!.*\))|\[(?!.*\])|\{(?!.*\})
10028	\s|\(
10029	\s|\(.*?\)
10030	\s|\(|\)
10031	\t(.*)\((.*):(.*)\)
10032	\t(\w+)$
10033	\w*\([\w, ]*\)
10034	\w*\s*=\s*\w*
10035	\w+ Y(\d+) N(\d+)
10036	\w+(::\w+)*\s*(\w+::)*::(?P<tag>\w+)::\w+\(const (?P<event>\w+)&
10037	\w+(?=: flags)|eth[0-9](?=\s*Link)
10038	\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*
10039	\w+([.]\w+)*$
10040	\w+(\/|)$
10041	\w+/\w+
10042	\w+:.+;
10043	\w+://|magnet:
10044	\w+Test
10045	\w+[\w\s]*?class (\w*)
10046	\w+\(.*\)\s*
10047	\w+\.[\w\.\-/]*\.\w+
10048	\w+\.\w+
10049	\w+\.haml
10050	\w+\.info
10051	\w+\.js
10052	\w+\.{1}(\w+)
10053	\w+\_spec.js
10054	\w+\_steps.rb
10055	\w+\d+-cd\d+: .*file=(\S*) 
10056	\w+\s
10057	\w+\s*:
10058	\w+\s*:\s*\(.*?\)
10059	\w+\s\d+,?\s\d+
10060	\w+tory
10061	\w+|[\.\!\?]
10062	\w:
10063	\w[^=]*\s*=\>?
10064	\w\.$
10065	\w\.\w\.
10066	\w\w+
10067	\x1b\[33m(.*?)\x1b\[0?m
10068	\{ *\d+\}
10069	\{(.*)\}
10070	\{(.*?)\}
10071	\{(.*?)\}(?!\})
10072	\{([A-Za-z0-9_]+)\}
10073	\{([^}]+)\}(.*)
10074	\{([a-z_-]+)\}
10075	\{(\d+)-(\d+)\}
10076	\{(\w+)\}
10077	\{.*\}
10078	\{.+\}
10079	\{[^}]*\}
10080	\{\{ MEDIA_ROOT \}\}
10081	\{\{ TRANSLOADIT_API \}\}
10082	\{\{
10083	\{\{(?P<comm>.+?)\}\}
10084	\{\{PACKAGE\}\}
10085	\{\}
10086	\|(\w+)(\.\d+)?\|$
10087	\|.*
10088	\|\s*
10089	\|\s+([^\|*])\s+.*
10090	\n                                (?P<pre_sep>[ _.-]*)\n                                ((?:s(?:eason|eries)?\s*)?%0?S(?![._]?N))\n                                (.*?)\n                                (%0?E(?![._]?N))\n                                (?P<post_sep>[ _.-]*)\n                              
10091	\n                 (?x)( # verbose identify URLs within text\n     (http|ftp|gopher) # make sure we find a resource type\n                   :// # ...needs to be followed by colon-slash-slash\n        (\w+[:.]?){2,} # at least two domain groups, e.g. (gnosis.)(cx)\n                  (/?| # could be just the domain name (maybe w/ slash)\n            [^ \n\r"]+ # or stuff then space, newline, tab, quote\n                [\w/]) # resource name ends in alphanumeric or slash\n     (?=[\s\.,>)\'"\]]) # assert: followed by white or clause ending\n                     ) # end of match group\n                       
10092	\n                (?xm)  # verbose identify URLs in text (and multiline)\n             (?=^.{11} # Mail header matcher\n     (?<!Message-ID:|  # rule out Message-ID\'s as best possible\n        In-Reply-To))  # ...and also In-Reply-To\n               (.*?)(  # must grab to email to allow prior lookbehind\n   ([A-Za-z0-9-]+\.)?  # maybe an initial part: DAVID.mertz@gnosis.cx\n        [A-Za-z0-9-]+  # definitely some local user: MERTZ@gnosis.cx\n                    @  # ...needs an at sign in the middle\n         (\w+\.?){2,}  # at least two domain groups, e.g. (gnosis.)(cx)\n    (?=[\s\.,>)\'"\]])  # assert: followed by white or clause ending\n                     ) # end of match group\n                       
10093	\n                <.*>_CODE\n                |\s.*_ID\n        
10094	\n            (?:^[ \t]+)?               # eat spaces, tabs (opt.)\n            (<\n             (?:!--[ ])?               # comment start + space (opt.)\n             /?TMPL_[A-Z]+             # closing slash / (opt.) + statement\n             [ a-zA-Z0-9""/.=:_\\-]*   # this spans also comments ending (--)\n             >)\n            [\n]?                      # eat trailing newline (opt.)\n        
10095	\n            <.*>_CODE\n            |\s.*_ID\n    
10096	\n        # Include these so we can skip them:\n        (?P<COMMENT>        <!--.*?-->                          )|\n        (?P<CDATA>          <![CDATA[.*?]]>                     )|\n        (?P<PI>             <\?.*?\?>                           )|\n        (?P<DOCTYPE>        <!DOCTYPE\s+[^\[]*(\[[^\]]*])?\s*>  )|\n        # These are the ones we actually care about:\n        (?P<EMPTY_ELT_TAG>  <\s*[^>/\?!\s][^>]*/\s*>            )|\n        (?P<START_TAG>      <\s*[^>/\?!\s][^>]*>                )|\n        (?P<END_TAG>        <\s*/[^>/\?!\s][^>]*>               )
10097	\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n            (?:\n           [ ]*  \.\.\. .*)*)  # PS2 lines\n        \n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*>>>)  # Not a line starting with PS1\n                     .+$\n?       # But any other line\n                  )*)\n        
10098	\n        (?:^[^ ].*\n                       # non-blank line\n            (?:[ ]*\n |                    # blank line or\n               [ ]+.*\n)*)                 #   indented line\n        
10099	\n        (?P<decl>typedef\s+struct\s*\w*\s*)  # Declaration\n        {(?P<body>.*?)}(?P<footer>\s*        # Body\n        (?P<name>playerc_\w+?)(_t)?          # Name\n        \s*;)\n    
10100	\n        [^<]*\n        (\n          ((<!--.*?-->)                         |  # comment\n           (<![CDATA[.*?]])                     |  # raw character data\n           (<!DOCTYPE\s+[^\[]*(\[[^\]]*])?\s*>) |  # doctype decl\n           (<[^>]*>))                              # tag or PI\n          [^<]*)*\n        \Z
10101	\n        \(CODE .*\)\n        |\(ID .*\d\)\n    
10102	\n        \s*    \n        ((?P<retval>                  # Capture the return type:\n            \w+\s*?(                  # Type name, is a \n            \** |                     # pointer OR\n            &?  |                     # reference OR\n            (\[\s*[0-9]*\s*\])        # array.\n            )\n        )\s*)?                        # Only one (potential) return value.\n        (?P<name>                     # Capture function name\n            playerc_\w+               # Class name and member function name\n        )\s*\n        (?P<params>\(.*?\))           # Parameters\n        \s*;\n    
10103	\n        \s*\n        (?P<rows>\d+)\n        [ ]\n        (?P<cols>\d+)\n        (?P<grid>.*?)\n        (?P<wrap>WRAP|NO_WRAP)\n        \s+\n        (?P<num_words>\d+)\n        \s\n        (?P<words>.*)\n    
10104	\n        ^[ ]*:\w+:.*\n                     # :option:\n        (.*\S.*)*                          # non-blank lines\n        
10105	\n        ^[ ]*:\w+:.*\n                     # :option:\n        (.*\S.*\n)*                          # non-blank lines\n        
10106	\n        ^\n        \s*                         # Leading whitespace\n        (?!.*::.*::)                # Only a single whildcard allowed\n        (?:(?!:)|:(?=:))            # Colon iff it would be part of a wildcard\n        (?:                         # Repeat 6 times:\n            [0-9a-f]{0,4}           #   A group of at most four hexadecimal digits\n            (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n        ){6}                        #\n        (?:                         # Either\n            [0-9a-f]{0,4}           #   Another group\n            (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n            [0-9a-f]{0,4}           #   Last group\n            (?: (?<=::)             #   Colon iff preceeded by exacly one colon\n             |  (?<!:)              #\n             |  (?<=:) (?<!::) :    #\n             )                      # OR\n         |                          #   A v4 address with NO leading zeros \n            (?:25[0-4]|2[0-4]\d|1\d\d|[1-9]?\d)\n            (?: \.\n                (?:25[0-4]|2[0-4]\d|1\d\d|[1-9]?\d)\n            ){3}\n        )\n        \s*                         # Trailing whitespace\n        $\n    
10107	\n       (^\.\.[ ]*pylisting::.*\n         # directive\n            (?:[ ]*\n|                   # blank line or\n               [ ]+.*\n)*)               #   indented line\n        
10108	\n       (^\.\.[ ]*pylisting::[ ]?\S*\n    # directive\n            (?:[ ]*\n|                   # blank line or\n               [ ]+.*\n)*)               #   indented line\n        
10109	\n     #
10110	\n    
10111	\n    (?:\'[^\'\n\r]*\')+|\n    <=|>=|!=|=|<|>|\n    :\w+|\n    ,|\n    \*|\n    -?\d+(?:\.\d+)?|\n    \w+(?:\.\w+)*|\n    (?:"[^"\s]+")+|\n    \(|\)|\n    \S+\n    
10112	\n    (?P<SN>.*?)         # NG(SN) non greedily capturing show name\n    [\W_]               # non alphanum char\n    (?P<S>\d)           # NG(S) grab 1 digit for season number\n    (?P<E>\d{2})        # NG(E) grab 2 digits for episode number\n    [\W_]               # non alphanum char\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name
10113	\n    (?P<SN>.*?)         # NG(SN) non greedily capturing show name\n    season              # Character literals\n    [\W_]?              # Optional non alphanum char\n    (?P<S>\d{1,2})      # NG(S) capturing 1/2 digits for season no\n    [\W_]?              # Optional non alphanum char\n    episode             # Character literals\n    [\W_]?              # Optional non alphanum char\n    (?P<E>\d{1,2})      # NG(E) capturing 1/2 digits for episode no\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name
10114	\n    ::(?=[^=])|            # two :: (but NOT ::=)\n    :[a-zA-Z][a-zA-Z0-9]+| # :foo\n    `|                     # ` (seldom used by itself)\n    (?<!\.)\.\.[ \t]*\w+:  # .. foo: (but NOT ... else:)\n    
10115	\n    Load\s*Avg:\n     \s*\n    (?P<loadavg_one>[\d\.]+),\n    \s*\n    (?P<loadavg_five>[\d\.]+),\n    \s*\n    (?P<loadavg_ten>[\d\.]+)\n    \s*\n    CPU\s*usage:\n    \s*\n    (?P<usercpu_percent>[\d\.]+)%\n    \s*\n    user,\n    \s*\n    (?P<syscpu_percent>[\d\.]+)%\n    \s*\n    sys,\n    \s*\n    (?P<idlecpu_percent>[\d\.]+)%\n    .*\n    
10116	\n    PhysMem:\n    \s*\n    (?P<wired>[\d\.MGK]+)\s*wired,\n    \s*\n    (?P<active>[\d\.MGK]+)\s*active,\n    \s*\n    (?P<inactive>[\d\.MGK]+)\s*inactive,\n    \s*\n    (?P<used>[\d\.MGK]+)\s*used,\n    \s*\n    (?P<free>[\d\.MGK]+)\s*free\n    .*\n    
10117	\n    Processes:\n    \s*\n    (?P<total>\d+)\s*total,\n    \s*\n    (?P<running>\d+)\s*running,\n    \s*\n    (?P<sleeping>\d+)\n    .*\n    
10118	\n    ^(?P<ending>\w+)\n    (?P<intact>[*]?)\n    (?P<num>\d+)\n    (?P<append>\w*)\n    (?P<cont>[.>])\n    
10119	\n    ^\n    \s*                         # Leading whitespace\n    (?!.*::.*::)                # Only a single wildcard allowed\n    (?:(?!:)|:(?=:))            # Colon iff it would be part of a wildcard\n    (?:                         # Repeat 6 times:\n        [0-9a-f]{0,4}           #   A group of at most four hexadecimal digits\n        (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n    ){6}                        #\n    (?:                         # Either\n        [0-9a-f]{0,4}           #   Another group\n        (?:(?<=::)|(?<!::):)    #   Colon unless preceeded by wildcard\n        [0-9a-f]{0,4}           #   Last group\n        (?: (?<=::)             #   Colon iff preceeded by exacly one colon\n         |  (?<!:)              #\n         |  (?<=:) (?<!::) :    #\n         )                      # OR\n     |                          #   A v4 address with NO leading zeros \n        (?:25[0-4]|2[0-4]\d|1\d\d|[1-9]?\d)\n        (?: \.\n            (?:25[0-4]|2[0-4]\d|1\d\d|[1-9]?\d)\n        ){3}\n    )\n    \s*                         # Trailing whitespace\n    $\n
10120	\n    ep                  # Character Literals\n    (?:isode)?          # Junk group for optional character literals\n    [\W_]?              # Optional non alphanum char\n    (?P<E>\d{1,2})      # NG(E) capturing 1/2 digits for episode no\n    [\W_]               # non alphanum char\n    (?P<EN>.*)          # NG(EN) greedily trying to grab episode name
10121	\n( )+
10122	\n(.)
10123	\n(?P<level>=+) *(?P<title>[^\n]*)\1 *(?=\n)
10124	\n([^\r]*)\r
10125	\n(\s*\*\s*)
10126	\n(\s*\*\s*\n)+
10127	\n(^|\s) # start of string or has whitespace before it\n(https?://[:/.?=&;a-zA-Z0-9_-]+) # the URL itself, http or https only\n(\s|$) # trailing whitespace or end of string\n
10128	\n----
10129	\n.*
10130	\n?(\w*)\:\s(.*)\n
10131	\n@@ -([0-9]+),?([0-9]*) \+([0-9]+),?([0-9]*) @@
10132	\nEND$
10133	\nEl Torito
10134	\nJoliet
10135	\nRock Ridge signatures
10136	\nUID:.*\n
10137	\n\s*Stream.*Audio:.*\n
10138	\n\s*Stream.*Video:.*\n
10139	\n\s+\n
10140	\n\n$
10141	\n\n(?P<t>[a-z])
10142	\n\n*
10143	\n\n+
10144	\n\t\t\t       (?xi)( # allow comments, case insensitive\n\t\t\t        if\s* # begins with an if statement\n\t\t     (.*(and|or)\s*)* # predicates are possible\n\t\t       keycode\s*=\s* # keycode assignment\n\t        (?P<keycode>\w{5})\s* # \n\t  (?P<assign_name>\w+)\s*=\s* #\n(?P<assign_value>[0-9](.[0-9]+)?)\s*) #\n\t\t\t\t      
10145	\n\t\t\t\t\t\t\t\t#^diff[ ]--git\n\t\t\t\t\t\t\t\t\t[ ]a/(?P<a_path>.+?)[ ]b/(?P<b_path>.+?)\n\n\t\t\t\t\t\t\t\t(?:^similarity[ ]index[ ](?P<similarity_index>\d+)%\n\n\t\t\t\t\t\t\t\t   ^rename[ ]from[ ](?P<rename_from>\S+)\n\n\t\t\t\t\t\t\t\t   ^rename[ ]to[ ](?P<rename_to>\S+)(?:\n|$))?\n\t\t\t\t\t\t\t\t(?:^old[ ]mode[ ](?P<old_mode>\d+)\n\n\t\t\t\t\t\t\t\t   ^new[ ]mode[ ](?P<new_mode>\d+)(?:\n|$))?\n\t\t\t\t\t\t\t\t(?:^new[ ]file[ ]mode[ ](?P<new_file_mode>.+)(?:\n|$))?\n\t\t\t\t\t\t\t\t(?:^deleted[ ]file[ ]mode[ ](?P<deleted_file_mode>.+)(?:\n|$))?\n\t\t\t\t\t\t\t\t(?:^index[ ](?P<a_blob_id>[0-9A-Fa-f]+)\n\t\t\t\t\t\t\t\t\t\.\.(?P<b_blob_id>[0-9A-Fa-f]+)[ ]?(?P<b_mode>.+)?(?:\n|$))?\n\t\t\t\t\t\t\t
10146	\n\t\t\t\t\t\t\t\t#^diff[ ]--git\n\t\t\t\t\t\t\t\t\t[ ]a/(?P<a_path>\S+)[ ]b/(?P<b_path>\S+)\n\n\t\t\t\t\t\t\t\t(?:^similarity[ ]index[ ](?P<similarity_index>\d+)%\n\n\t\t\t\t\t\t\t\t   ^rename[ ]from[ ](?P<rename_from>\S+)\n\n\t\t\t\t\t\t\t\t   ^rename[ ]to[ ](?P<rename_to>\S+)(?:\n|$))?\n\t\t\t\t\t\t\t\t(?:^old[ ]mode[ ](?P<old_mode>\d+)\n\n\t\t\t\t\t\t\t\t   ^new[ ]mode[ ](?P<new_mode>\d+)(?:\n|$))?\n\t\t\t\t\t\t\t\t(?:^new[ ]file[ ]mode[ ](?P<new_file_mode>.+)(?:\n|$))?\n\t\t\t\t\t\t\t\t(?:^deleted[ ]file[ ]mode[ ](?P<deleted_file_mode>.+)(?:\n|$))?\n\t\t\t\t\t\t\t\t(?:^index[ ](?P<a_blob_id>[0-9A-Fa-f]+)\n\t\t\t\t\t\t\t\t\t\.\.(?P<b_blob_id>[0-9A-Fa-f]+)[ ]?(?P<b_mode>.+)?(?:\n|$))?\n\t\t\t\t\t\t\t
10147	\n^\ncreate \s+ (?: or \s+ replace \s+ )?\nfunction ( [^(]+ )\n[(] ( [^)]* ) [)]\n
10148	\ndescription:\n
10149	\nid: (\w+)
10150	\nsh: line 1:.*
10151	\n{4,}
10152	\n|,
10153	\n|\r$
10154	\n|\r\n
10155	\r\n?
10156	\r\n|\n|\r
10157	\tDLL Name: (\S+)
10158	\ttimestamp=(\d+)
10159	\x00([^\x00]*libreadline[^\x00]*)\x00
10160	\x01\x12\x00\x03\x00\x00\x00\x01\x00(.)\x00\x00
10161	\x08.
10162	\x12\x01\x03\x00\x01\x00\x00\x00(.)\x00\x00\x00
10163	\x1b[^m]*m
10164	\x1b\[([0-9]+)(;[0-9]+)*m
10165	\x1b\[([^m]*)m
10166	\x1b\[3[0-9]m
10167	\x1b\[[0-9;]*m
10168	\x1b\[[0-9]+m
10169	\x1b\[[0]{0,1}m
10170	\x1b\[[34][0-9];01m
10171	\x1b\[[34][0-9]m*.*?\x1b\[m
10172	\x1b\[\d+m
10173	\xa7.
10174	\xa7.{1}
10175	\xc2([^\xc2])
10176	\xc5\x9b|\xc5\x9a
10177	\xd0\x98\xd0\xb7\xd0\xb1\xd1\x80\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \((.*)\)<\/a>
10178	\xd0\xb0\xd0\xb2\xd0\xb8\xd0\xb0\xd0\xbc\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10179	\xd0\xb0\xd0\xb2\xd1\x82\xd0\xbe\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xbe\xd0\xb4\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10180	\xd0\xb0\xd0\xba\xd0\xb0\xd0\xb4\xd0\xb5\xd0\xbc\xd0\xb8\xd0\xba\xd0\xb0 \xd1\x8f\xd0\xbd\xd0\xb3\xd0\xb5\xd0\xbb\xd1\x8f
10181	\xd0\xb0\xd0\xba\xd0\xb0\xd0\xb4\xd0\xb5\xd0\xbc\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10182	\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xba\xd1\x81\xd0\xb0\xd0\xbd\xd0\xb4\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd1\x81\xd0\xb0\xd0\xb4
10183	\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xba\xd1\x81\xd0\xb5\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10184	\xd0\xb0\xd0\xbb\xd1\x82\xd1\x83\xd1\x84\xd1\x8c\xd0\xb5\xd0\xb2\xd0\xbe
10185	\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xb8\xd0\xbd\xd0\xbe
10186	\xd0\xb0\xd1\x80\xd0\xb1\xd0\xb0\xd1\x82\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10187	\xd0\xb0\xd1\x8d\xd1\x80\xd0\xbe\xd0\xbf\xd0\xbe\xd1\x80\xd1\x82
10188	\xd0\xb1\xd0\xb0\xd0\xb1\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10189	\xd0\xb1\xd0\xb0\xd0\xb3\xd1\x80\xd0\xb0\xd1\x82\xd0\xb8\xd0\xbe\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10190	\xd0\xb1\xd0\xb0\xd0\xbb\xd0\xb0\xd1\x88\xd0\xb8\xd1\x85\xd0\xb0
10191	\xd0\xb1\xd0\xb0\xd1\x80\xd1\x80\xd0\xb8\xd0\xba\xd0\xb0\xd0\xb4\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10192	\xd0\xb1\xd0\xb0\xd1\x83\xd0\xbc\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10193	\xd0\xb1\xd0\xb5\xd0\xb3\xd0\xbe\xd0\xb2(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10194	\xd0\xb1\xd0\xb5\xd0\xbb\xd0\xbe\xd1\x80\xd1\x83\xd1\x81\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10195	\xd0\xb1\xd0\xb5\xd0\xbb\xd1\x8f\xd0\xb5\xd0\xb2\xd0\xbe
10196	\xd0\xb1\xd0\xb8\xd0\xb1\xd0\xb8\xd1\x80\xd0\xb5\xd0\xb2\xd0\xbe
10197	\xd0\xb1\xd0\xb8\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xbe\xd1\x82\xd0\xb5\xd0\xba\xd0\xb0 \xd0\xb8\xd0\xbc. \xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xbd\xd0\xb0
10198	\xd0\xb1\xd0\xb8\xd1\x82\xd1\x86\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xba
10199	\xd0\xb1\xd0\xbe\xd1\x80\xd0\xb8\xd1\x81\xd0\xbe\xd0\xb2\xd0\xbe
10200	\xd0\xb1\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb8\xd1\x86\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10201	\xd0\xb1\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe\xd0\xb5 \xd1\x88\xd0\xbe\xd1\x81\xd1\x81\xd0\xb5
10202	\xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd1\x81\xd0\xb0\xd0\xb4
10203	\xd0\xb1\xd1\x80\xd0\xb0\xd1\x82\xd0\xb5\xd0\xb5\xd0\xb2\xd0\xbe
10204	\xd0\xb1\xd1\x80\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd0\xbb\xd0\xb0\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10205	\xd0\xb2\xd0\xb0\xd1\x80\xd1\x88\xd0\xb0\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10206	\xd0\xb2\xd0\xb0\xd1\x81\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10207	\xd0\xb2\xd0\xb4\xd0\xbd\xd1\x85
10208	\xd0\xb2\xd0\xbb\xd0\xb0\xd0\xb4\xd1\x8b\xd0\xba\xd0\xb8\xd0\xbd\xd0\xbe
10209	\xd0\xb2\xd0\xbe\xd0\xb4\xd0\xbd\xd1\x8b\xd0\xb9 \xd1\x81\xd1\x82\xd0\xb0\xd0\xb4\xd0\xb8\xd0\xbe\xd0\xbd
10210	\xd0\xb2\xd0\xbe\xd0\xb9\xd0\xba\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10211	\xd0\xb2\xd0\xbe\xd0\xbb\xd0\xb3\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb4\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82
10212	\xd0\xb2\xd0\xbe\xd0\xbb\xd0\xb6\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10213	\xd0\xb2\xd0\xbe\xd0\xbb\xd0\xba\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f
10214	\xd0\xb2\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xba\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xbc\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10215	\xd0\xb2\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb1\xd1\x8c\xd0\xb5\xd0\xb2\xd1\x8b \xd0\xb3\xd0\xbe\xd1\x80\xd1\x8b
10216	\xd0\xb2\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe
10217	\xd0\xb2\xd1\x8b\xd0\xb1\xd0\xbe\xd1\x80\xd0\xb3\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10218	\xd0\xb2\xd1\x8b\xd1\x85\xd0\xb8\xd0\xbd\xd0\xbe
10219	\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xb9 \xd1\x86\xd0\xb5\xd0\xbd\xd1\x82\xd1\x80
10220	\xd0\xb4\xd0\xb8\xd0\xbd\xd0\xb0\xd0\xbc\xd0\xbe
10221	\xd0\xb4\xd0\xbc\xd0\xb8\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10222	\xd0\xb4\xd0\xbe\xd0\xb1\xd1\x80\xd1\x8b\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10223	\xd0\xb4\xd0\xbe\xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb4\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10224	\xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10225	\xd0\xb4\xd1\x83\xd0\xb1\xd1\x80\xd0\xbe\xd0\xb2\xd0\xba\xd0\xb0
10226	\xd0\xb7\xd0\xb2\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb3\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f
10227	\xd0\xb7\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb4
10228	\xd0\xb7\xd1\x8f\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe
10229	\xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb0\xd0\xb9\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10230	\xd0\xba\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb8\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10231	\xd0\xba\xd0\xb0\xd0\xbb\xd1\x83\xd0\xb6\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10232	\xd0\xba\xd0\xb0\xd0\xbd\xd1\x82\xd0\xb5\xd0\xbc\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10233	\xd0\xba\xd0\xb0\xd1\x85\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10234	\xd0\xba\xd0\xb0\xd1\x88\xd0\xb8\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10235	\xd0\xba\xd0\xb8\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10236	\xd0\xba\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10237	\xd0\xba\xd0\xb8\xd1\x82\xd0\xb0\xd0\xb9 \xd0\xb3\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb4
10238	\xd0\xba\xd0\xbe\xd0\xb6\xd1\x83\xd1\x85\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10239	\xd0\xba\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10240	\xd0\xba\xd0\xbe\xd0\xbb\xd0\xbf\xd0\xb8\xd0\xbd\xd0\xbe
10241	\xd0\xba\xd0\xbe\xd0\xbb\xd0\xbf\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10242	\xd0\xba\xd0\xbe\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb4\xd0\xb0\xd0\xbd\xd1\x82\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9\s(\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82|\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf|\xd0\xbf|\xd0\xbf\xd1\x80\xd1\x82|\xd0\xbf\xd1\x80-\xd1\x82)
10243	\xd0\xba\xd0\xbe\xd0\xbc\xd1\x81\xd0\xbe\xd0\xbc\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10244	\xd0\xba\xd0\xbe\xd0\xbd\xd1\x8c\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe
10245	\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xb2\xd0\xb0\xd1\x80\xd0\xb4\xd0\xb5\xd0\xb9\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10246	\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xb2\xd0\xb0\xd1\x80\xd0\xb4\xd0\xb5\xd0\xb9\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10247	\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe\xd1\x80\xd1\x81\xd0\xba
10248	\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd0\xbe\xd0\xbf\xd1\x80\xd0\xb5\xd1\x81\xd0\xbd\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10249	\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd0\xbe\xd1\x81\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10250	\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd0\xbe\xd1\x81\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10251	\xd0\xba\xd1\x80\xd0\xb0\xd1\x81\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xb2\xd0\xbe\xd1\x80\xd0\xbe\xd1\x82\xd0\xb0
10252	\xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2
10253	\xd0\xba\xd1\x80\xd0\xb5\xd1\x81\xd1\x82\xd1\x8c\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0
10254	\xd0\xba\xd1\x80\xd0\xbe\xd0\xbd\xd1\x88\xd1\x82\xd0\xb0\xd0\xb4\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10255	\xd0\xba\xd1\x80\xd0\xbe\xd0\xbf\xd0\xbe\xd1\x82\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10256	\xd0\xba\xd1\x80\xd1\x8b\xd0\xbb\xd0\xb0\xd1\x82\xd1\x81\xd0\xba\xd0\xbe\xd0\xb5
10257	\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x86\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xbe\xd1\x81\xd1\x82
10258	\xd0\xba\xd1\x83\xd0\xb7\xd1\x8c\xd0\xbc\xd0\xb8\xd0\xbd\xd0\xba\xd0\xb8
10259	\xd0\xba\xd1\x83\xd0\xbd\xd1\x86\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10260	\xd0\xba\xd1\x83\xd1\x80\xd0\xbe\xd1\x80\xd1\x82\xd0\xbd(\xd1\x8b\xd0\xb9|\xd0\xbe\xd0\xbc)
10261	\xd0\xba\xd1\x83\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10262	\xd0\xba\xd1\x83\xd1\x82\xd1\x83\xd0\xb7\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10263	\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82
10264	\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9\s(\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82|\xd0\xbf\xd1\x80|\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf|\xd0\xbf\.|\xd0\xbf\xd1\x80\xd1\x82|\xd0\xbf\xd1\x80-\xd1\x82)
10265	\xd0\xbb\xd0\xb8\xd0\xb3\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9\s(\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82|\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf|\xd0\xbf|\xd0\xbf\xd1\x80\xd1\x82|\xd0\xbf\xd1\x80-\xd1\x82)
10266	\xd0\xbb\xd0\xb8\xd1\x85\xd0\xbe\xd0\xb1\xd0\xbe\xd1\x80\xd1\x8b
10267	\xd0\xbb\xd1\x83\xd0\xb1\xd1\x8f\xd0\xbd\xd0\xba\xd0\xb0
10268	\xd0\xbb\xd1\x8e\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xbd\xd0\xbe
10269	\xd0\xbc(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)\xd0\xba\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10270	\xd0\xbc\xd0\xb0\xd1\x80\xd0\xba\xd1\x81\xd0\xb8\xd1\x81\xd1\x82\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10271	\xd0\xbc\xd0\xb0\xd1\x80\xd1\x8c\xd0\xb8\xd0\xbd\xd0\xb0 \xd1\x80\xd0\xbe\xd1\x89\xd0\xb0
10272	\xd0\xbc\xd0\xb0\xd1\x80\xd1\x8c\xd0\xb8\xd0\xbd\xd0\xbe
10273	\xd0\xbc\xd0\xb5\xd0\xb4\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe
10274	\xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83\xd0\xbd\xd0\xb0\xd1\x80\xd0\xbe\xd0\xb4\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10275	\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10276	\xd0\xbc\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10277	\xd0\xbc\xd0\xb8\xd1\x82\xd0\xb8\xd0\xbd\xd0\xbe
10278	\xd0\xbc\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10279	\xd0\xbc\xd0\xbe\xd1\x81\xd0\xba\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10280	\xd0\xbc\xd1\x8b\xd1\x82\xd0\xb8\xd1\x89
10281	\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xb0\xd1\x82\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10282	\xd0\xbd\xd0\xb0\xd0\xb3\xd0\xbe\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10283	\xd0\xbd\xd0\xb0\xd1\x80\xd0\xbe-\xd1\x84\xd0\xbe\xd0\xbc\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba
10284	\xd0\xbd\xd0\xb0\xd1\x85\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82
10285	\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10286	\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9\s(\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82|\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf|\xd0\xbf|\xd0\xbf\xd1\x80\xd1\x82|\xd0\xbf\xd1\x80-\xd1\x82)
10287	\xd0\xbd\xd0\xb8\xd0\xba\xd1\x83\xd0\xbb\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10288	\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xba\xd0\xbe\xd1\x81\xd0\xb8\xd0\xbd\xd0\xbe
10289	\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xba\xd1\x83\xd0\xb7\xd0\xbd\xd0\xb5\xd1\x86\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10290	\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xba\xd0\xb8\xd0\xbd\xd0\xbe
10291	\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd1\x81\xd0\xbb\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb4\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10292	\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b\xd0\xb5 \xd1\x87\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd1\x83\xd1\x88\xd0\xba\xd0\xb8
10293	\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba
10294	\xd0\xbe\xd0\xb1\xd0\xb2\xd0\xbe\xd0\xb4\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xba\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb
10295	\xd0\xbe\xd0\xba\xd1\x82\xd1\x8f\xd0\xb1\xd1\x80\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10296	\xd0\xbe\xd0\xba\xd1\x82\xd1\x8f\xd0\xb1\xd1\x80\xd1\x8c\xd1\x81\xd0\xba\xd0\xbe\xd0\xb5 \xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb5
10297	\xd0\xbe\xd0\xbb\xd0\xb8\xd0\xbc\xd0\xbf\xd0\xb8\xd0\xb9\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xb4\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb2\xd0\xbd\xd1\x8f
10298	\xd0\xbe\xd1\x80\xd0\xb5\xd1\x85\xd0\xbe\xd0\xb2\xd0\xbe
10299	\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xba\xd0\xb8\xd0\xbd\xd0\xbe
10300	\xd0\xbe\xd1\x82\xd1\x80\xd0\xb0\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb5
10301	\xd0\xbe\xd1\x85\xd0\xbe\xd1\x82\xd0\xbd\xd1\x8b\xd0\xb9 \xd1\x80\xd1\x8f\xd0\xb4
10302	\xd0\xbf\xd0\xb0\xd0\xb2\xd0\xb5\xd0\xbb\xd0\xb5\xd1\x86\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10303	\xd0\xbf\xd0\xb0\xd1\x80\xd0\xba \xd0\xba\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd1\x83\xd1\x80\xd1\x8b
10304	\xd0\xbf\xd0\xb0\xd1\x80\xd0\xba \xd0\xbf\xd0\xbe\xd0\xb1\xd0\xb5\xd0\xb4\xd1\x8b
10305	\xd0\xbf\xd0\xb0\xd1\x80\xd1\x82\xd0\xb8\xd0\xb7\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10306	\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb2\xd0\xbe\xd0\xbc\xd0\xb0\xd0\xb9\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10307	\xd0\xbf\xd0\xb5\xd1\x80\xd0\xbe\xd0\xb2\xd0\xbe
10308	\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xbe-\xd1\x80\xd0\xb0\xd0\xb7\xd1\x83\xd0\xbc\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10309	\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xb4\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10310	\xd0\xbf\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb4\xd0\xb2\xd0\xbe\xd1\x80\xd1\x86\xd0\xbe\xd0\xb2(\xd1\x8b\xd0\xb9|\xd0\xbe\xd0\xbc)
10311	\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb0\xd1\x82\xd0\xbd\xd0\xb8\xd0\xba\xd0\xb8
10312	\xd0\xbf\xd0\xb8\xd0\xbe\xd0\xbd\xd0\xb5\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10313	\xd0\xbf\xd0\xbb\xd0\xb0\xd0\xbd\xd0\xb5\xd1\x80\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10314	\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd0\xb8\xd0\xbb\xd1\x8c\xd0\xb8\xd1\x87\xd0\xb0
10315	\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd1\x80\xd0\xb5\xd0\xb2\xd0\xbe\xd0\xbb\xd1\x8e\xd1\x86\xd0\xb8\xd0\xb8
10316	\xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xd1\x81\xd1\x83\xd0\xb2\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0
10317	\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb5\xd0\xb6\xd0\xb0\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10318	\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8f\xd0\xbd\xd0\xba\xd0\xb0
10319	\xd0\xbf\xd1\x80\xd0\xb0\xd0\xb6\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10320	\xd0\xbf\xd1\x80\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd0\xb6\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f \xd0\xbf
10321	\xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x80\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10322	\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x82\xd0\xb0\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10323	\xd0\xbf\xd1\x80\xd0\xbe\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10324	\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xb2\xd0\xb5\xd1\x89\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f
10325	\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82 \xd0\xb2\xd0\xb5\xd1\x80\xd0\xbd\xd0\xb0\xd0\xb4\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe
10326	\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82 \xd0\xbc\xd0\xb8\xd1\x80\xd0\xb0
10327	\xd0\xbf\xd1\x80\xd0\xbe\xd1\x84\xd1\x81\xd0\xbe\xd1\x8e\xd0\xb7\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10328	\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd[e .\n]
10329	\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10330	\xd0\xbf\xd1\x83\xd1\x88\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10331	\xd1\x80\xd0\xb0\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba\xd0\xbe\xd0\xb5
10332	\xd1\x80\xd0\xb5\xd1\x83\xd1\x82\xd0\xbe\xd0\xb2
10333	\xd1\x80\xd0\xb5\xd1\x87\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb2\xd0\xbe\xd0\xba\xd0\xb7\xd0\xb0\xd0\xbb
10334	\xd1\x80\xd0\xb8\xd0\xb6\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10335	\xd1\x80\xd0\xb8\xd0\xbc\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10336	\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd0\xbf\xd0\xb5\xd0\xba\xd1\x82
10337	\xd1\x81\xd0\xb0\xd0\xb2\xd0\xb5\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10338	\xd1\x81\xd0\xb0\xd0\xb4\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x8f
10339	\xd1\x81\xd0\xb2\xd0\xb8\xd0\xb1\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xbe
10340	\xd1\x81\xd0\xb5\xd0\xb2\xd0\xb0\xd1\x81\xd1\x82\xd0\xbe\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10341	\xd1\x81\xd0\xb5\xd0\xbb\xd0\xb8\xd0\xb3\xd0\xb5\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10342	\xd1\x81\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10343	\xd1\x81\xd0\xb5\xd1\x80\xd0\xbf\xd1\x83\xd1\x85\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10344	\xd1\x81\xd0\xb5\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xb8\xd1\x86\xd0\xba
10345	\xd1\x81\xd0\xbb\xd0\xb0\xd0\xb2\xd1\x8f\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80
10346	\xd1\x81\xd0\xbc\xd0\xbe\xd0\xbb\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f.
10347	\xd1\x81\xd0\xbe\xd0\xba\xd0\xbe\xd0\xbb
10348	\xd1\x81\xd0\xbe\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb8\xd0\xba\xd0\xb8
10349	\xd1\x81\xd0\xbe\xd0\xbb\xd0\xbd\xd1\x86\xd0\xb5\xd0\xb2\xd0\xbe
10350	\xd1\x81\xd0\xbf\xd0\xbe\xd1\x80\xd1\x82\xd0\xb8\xd0\xb2\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10351	\xd1\x81\xd0\xbf\xd0\xbe\xd1\x80\xd1\x82\xd0\xb8\xd0\xb2\xd0\xbd\xd0\xb0\xd1\x8f
10352	\xd1\x81\xd1\x80\xd0\xb5\xd1\x82\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80
10353	\xd1\x81\xd1\x82\xd0\xb0\xd1\x80\xd0\xb0\xd1\x8f \xd0\xb4\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb2\xd0\xbd\xd1\x8f
10354	\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xb3\xd0\xb8\xd0\xbd\xd0\xbe
10355	\xd1\x81\xd1\x82\xd1\x83\xd0\xb4\xd0\xb5\xd0\xbd\xd1\x87\xd0\xb5\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10356	\xd1\x81\xd1\x83\xd1\x85\xd0\xb0\xd1\x80\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10357	\xd1\x81\xd1\x85\xd0\xbe\xd0\xb4\xd0\xbd\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10358	\xd1\x82\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10359	\xd1\x82\xd0\xb2\xd0\xb5\xd1\x80\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10360	\xd1\x82\xd0\xb5\xd0\xb0\xd1\x82\xd1\x80\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10361	\xd1\x82\xd0\xb5\xd0\xba\xd1\x81\xd1\x82\xd0\xb8\xd0\xbb\xd1\x8c\xd1\x89\xd0\xb8\xd0\xba\xd0\xb8
10362	\xd1\x82\xd0\xb5\xd0\xbf\xd0\xbb\xd1\x8b\xd0\xb9 \xd1\x81\xd1\x82\xd0\xb0\xd0\xbd
10363	\xd1\x82\xd0\xb5\xd1\x80\xd0\xb5\xd1\x88\xd0\xba\xd0\xbe\xd0\xb2\xd0\xbe
10364	\xd1\x82\xd0\xb5\xd1\x81\xd0\xba\xd1\x82\xd0\xb8\xd0\xbb\xd1\x8c\xd1\x89\xd0\xb8\xd0\xba\xd0\xb8
10365	\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd1\x80\xd1\x8f\xd0\xb7\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10366	\xd1\x82\xd1\x80\xd0\xb5\xd1\x82\xd1\x8c\xd1\x8f\xd0\xba\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10367	\xd1\x82\xd1\x80\xd1\x83\xd0\xb1\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10368	\xd1\x82\xd1\x83\xd0\xbb\xd1\x8c\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10369	\xd1\x82\xd1\x83\xd1\x80\xd0\xb3\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10370	\xd1\x82\xd1\x83\xd1\x88\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10371	\xd1\x83\xd0\xbd\xd0\xb8\xd0\xb2\xd0\xb5\xd1\x80\xd1\x81\xd0\xb8\xd1\x82\xd0\xb5\xd1\x82
10372	\xd1\x84\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xb2\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xba
10373	\xd1\x84\xd0\xb8\xd0\xbb\xd0\xb8
10374	\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10375	\xd1\x84\xd1\x80\xd1\x83\xd0\xbd\xd0\xb7\xd0\xb5\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb8\xd0\xb9|\xd0\xbe\xd0\xbc)
10376	\xd1\x85\xd0\xb8\xd0\xbc\xd0\xba\xd0\xb8
10377	\xd1\x86\xd0\xb0\xd1\x80\xd0\xb8\xd1\x86\xd1\x8b\xd0\xbd\xd0\xbe
10378	\xd1\x86\xd0\xb2\xd0\xb5\xd1\x82\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb1\xd1\x83\xd0\xbb\xd1\x8c\xd0\xb2\xd0\xb0\xd1\x80
10379	\xd1\x86\xd0\xb5\xd0\xbd\xd1\x82\xd1\x80\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd(\xd1\x8b\xd0\xb9|\xd0\xbe\xd0\xbc)
10380	\xd1\x87\xd0\xb5\xd1\x80\xd0\xba\xd0\xb8\xd0\xb7\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10381	\xd1\x87\xd0\xb5\xd1\x80\xd1\x82\xd0\xb0\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10382	\xd1\x87\xd0\xb5\xd1\x85\xd0\xbe\xd0\xb2
10383	\xd1\x87\xd0\xb5\xd1\x85\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10384	\xd1\x87\xd0\xb8\xd1\x81\xd1\x82\xd1\x8b\xd0\xb5 \xd0\xbf\xd1\x80\xd1\x83\xd0\xb4\xd1\x8b
10385	\xd1\x87\xd0\xba\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10386	\xd1\x87\xd0\xba\xd0\xb0\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba\xd0\xb0\xd1\x8f
10387	\xd1\x88\xd0\xb0\xd0\xb1\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10388	\xd1\x88\xd0\xb8\xd0\xbf\xd0\xb8\xd0\xbb\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10389	\xd1\x88\xd0\xbe\xd1\x81\xd1\x81\xd0\xb5 \xd1\x8d\xd0\xbd\xd1\x82\xd1\x83\xd0\xb7\xd0\xb8\xd0\xb0\xd1\x81\xd1\x82\xd0\xbe\xd0\xb2
10390	\xd1\x89\xd0\xb5\xd0\xbb\xd0\xba\xd0\xbe\xd0\xb2\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10391	\xd1\x89\xd1\x83\xd0\xba\xd0\xb8\xd0\xbd\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10392	\xd1\x8d\xd0\xbb\xd0\xb5\xd0\xba\xd1\x82\xd1\x80\xd0\xbe\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xbe\xd0\xb4\xd1\x81\xd0\xba(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10393	\xd1\x8e\xd0\xb1\xd0\xb8\xd0\xbb\xd0\xb5\xd0\xb9\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10394	\xd1\x8e\xd0\xb3\xd0\xbe-\xd0\xb7\xd0\xb0\xd0\xbf\xd0\xb0\xd0\xb4\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10395	\xd1\x8e\xd0\xb6\xd0\xbd(\xd0\xb0\xd1\x8f|\xd0\xbe\xd0\xb9)
10396	\xd1\x8f\xd1\x81\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xb2\xd0\xbe
10397	\xd7\x9e\xd7\xa1\xd7\xa4\xd7\xa8 \xd7\x94\xd7\xa6\xd7\x91\xd7\xa2\xd7\x94: </td>[^<]*<[^>]*>([^<]*)<
10398	\xd7\x9e\xd7\xa1\xd7\xa4\xd7\xa8 \xd7\x99\xd7\xa9\xd7\x99\xd7\x91\xd7\x94: </td>[^<]*<[^>]*>([^<]*)<
10399	\xd7\xa2\xd7\x9e\xd7\x95\xd7\x93(.*?)\xd7\x9e\xd7\xaa\xd7\xa4\xd7\xa8\xd7\xa1\xd7\x9e\xd7\xaa \xd7\x91\xd7\x96\xd7\x94
10400	\xd7\xa9\xd7\x9d \xd7\x94\xd7\x97\xd7\x95\xd7\xa7: </td>[^<]*<[^>]*>([^<]*)<
10401	\xd7\xaa\xd7\x90\xd7\xa8\xd7\x99\xd7\x9a: </td>[^<]*<[^>]*>([^<]*)<
10402	\xe1\xf9\xf2\xe4&nbsp;(\d\d):(\d\d)
10403	\xe5\xb7\xb2\xe6\x9c\x89<big>(?P<n>[0-9]+)</big>\xe4\xba\xba\xe8\xaf\xbb\xe8\xbf\x87\xe6\xad\xa4\xe4\xb9\xa6...
10404	\xe7\xbd\x91\xe7\xab\x99\xe7\xb4\xaf\xe8\xae\xa1\xe8\xae\xbf\xe9\x97\xae:<b>(?P<n>[0-9]+)\xe4\xba\xba\xe6\xac\xa1</b>
10405	\xff(?=[\xe0-\xff])
10406	\xff\x00
10407	\xff\x00([\xe0-\xff])
10408	\xff\x00\x00
10409	^    \w(\w)+.*$
10410	^   (\S+)
10411	^  
10412	^  File .*$
10413	^ 
10414	^ ([\w.]*\.)?            # class name(s)\n          ([^\s(]+)  \s*         # thing name\n          (?: \((.*)\)           # optional: arguments\n           (?:\s* -> \s* (.*))?  #           return annotation\n          )? $                   # and nothing more\n          
10415	^ ([\w.]+\.)?            # class name(s)\n          ([^\s(]+)  \s*         # thing name\n          (?: \((.*)\)           # optional: arguments\n           (?:\s* -> \s* (.*))?  #           return annotation\n          )? $                   # and nothing more\n          
10416	^ (\S+) ([0-9a-f]{32})
10417	^ (\S+) (\d+)/(\d+)
10418	^ *L([0-9]+) *: *$
10419	^ *\(.*=.*\) *$
10420	^ *\/\* *(?P<msg>.*) \*\/ *$
10421	^ *\[git-p4: (.*)\]$
10422	^ -- (?P<maintainer>.+) (?P<mail><.+>)  (?P<date>.+) (?P<offset>[-\+][0-9]+)$
10423	^ 0  (?:.*!)?(?:void )?([^\[]+)
10424	^ ==> Fatal error occurred
10425	^ {4}
10426	^! (((2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?)\.){3}(2(5[0-5]|[0-4][0-9])|[01]?[0-9][0-9]?)(/(3[12]|[12]?[0-9])))[\t\s]+([^\t]+)$
10427	^!!NSFW!! -> http://rule34\.xxx/.* <- !!NSFW!!$
10428	^!$
10429	^!(\w+)$
10430	^!-?[0-9]+$
10431	^"(.*)"\s*$
10432	^"(?P<data>.*)"$
10433	^"?(Sch|S)(A|B)
10434	^"I\'m fine" \(es to en, .*\)$
10435	^"[a-zA-Z0-9_]+"$
10436	^"my dog" \(fr to en, .*\)$
10437	^# 
10438	^# (?P<data>.*)
10439	^# dbdump v(\d+) - (\d+) objects$
10440	^#!(?P<markup_filter>\w+)$
10441	^#!/.*python
10442	^#!XRCED:begin-block:(\S+)
10443	^#!XRCED:end-block:(\S+)
10444	^#!\s*(\S+)
10445	^#!\s*/usr/bin/vm(ware|player)
10446	^## (.+)
10447	^### SALT: (\w+)
10448	^##([a-zA-Z]+)\=(.*)$
10449	^##AGENT-WARNING##\ ?(.*)
10450	^#(\s*-DUSE_SSL -I)
10451	^#(\s*-L\$\(SSL\)/lib )
10452	^#+
10453	^#, (?P<data>.*)
10454	^#: (?P<data>.*)
10455	^#?(\d+)-(\d+)$
10456	^#?\d+(/[-.\w\[\],\s*]+)?$
10457	^#?\d+-\d+$
10458	^#?\d+/$
10459	^#?\d{2,}$
10460	^#SSL=.*
10461	^#[ \t\*]*END[ \t]+LICENSE[ \t]+BLOCK[ \t\*]*
10462	^#\. (?P<data>.*)
10463	^#\S+\s
10464	^#\s*cython\s*:\s*((\w|[.])+\s*=.*)$
10465	^#\s+([0-9]+)\s+(.*)$
10466	^#\s+.+$
10467	^#archive_mode\s*=.*$
10468	^#date\s+(.+)$
10469	^#define ([^ ]+)\(([^)]*)\) *([^\\]*)\\?\n$
10470	^#define PACKAGE_VERSION "([^"]*)"
10471	^#define __.*
10472	^#define\s*(FR_\w*)\s*(\w*)(.*)$
10473	^#define\s*(bitno\w*)\s*(\w*)(.*)$
10474	^#define\s*(bm\w*)\s*(\w*)(.*)$
10475	^#include "(Config/.*)"
10476	^#include "(Support/.*)"
10477	^#include "gtest/(.*)"
10478	^#include "llvm/(.*)"
10479	^#include <(.*)>
10480	^#readline readline.c.*
10481	^#synchronous_standby_names\s*=.*$
10482	^#wal_level\s*=.*$
10483	^#~ "(?P<data>.*)"$
10484	^#~ msgid "(?P<data>.*)"$
10485	^#~ msgid_plural "(?P<data>.*)"$
10486	^#~ msgstr "(?P<data>.*)"$
10487	^#~ msgstr\[0\] "(?P<data>.*)"$
10488	^#~ msgstr\[1\] "(?P<data>.*)"$
10489	^$|^-$|[/ \t\r\n]
10490	^%!TEX\s+([\w-]+)\s?=\s?(.*)
10491	^%\w$
10492	^%include\s"([^"]+)"
10493	^%include\s+(.*)
10494	^&[a-zA-Z0-9][a-zA-Z0-9_\.]*$
10495	^(!)$
10496	^(#?\d+)(?:/([-.\w\[\],\s*]+))?$
10497	^(((?P<first_page>\w+)\,)?(?P<per_page>\w+)\s+)?(?P<objects>\w+)(\s+starting\s+from\s+page\s+(?P<number>\w+))?(\s+using\s+(?P<key>[\"\\'\w]+))?(\s+with\s+(?P<override_path>\w+))?(\s+as\s+(?P<var_name>\w+))?$
10498	^((?!\.).)*$
10499	^((?!\.).)*\.(py|sh)$
10500	^((?:(?:m)|(?:col))\d+)
10501	^((?:> ?)+)
10502	^((?:[^-]+|-(?![0-9]))+)-([0-9][^-]*)(?:-(.*))?$
10503	^((?:\[?\S+@[^$#%]+)[$#%])(.*\n?)
10504	^((?:\w|-|_|\.)+)(?:\[(.*)\])?$
10505	^((?P<day>\w{3}),\s*)*(?P<dm>\d{2})\s+(?P<month>\w{3})\s+(?P<year>\d{4})\s+(?P<hour>\d{2}):(?P<min>[0-5][0-9])(:(?P<sec>[0-5][0-9]))*\s((?P<tz>\w{2,3})|(?P<offset>[+\-]\d{4}))$
10506	^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
10507	^(([0-9a-z_]{2,}\.)|\.)*([0-9a-z_]{2,})?$
10508	^(([A-Z])[a-z]+)(([A-Z])[a-z]+)?(([A-Z])[a-z]+)?(([A-Z])[a-z]+)?
10509	^(([^:/?#]+):)?(//(([^:]+)(:(.+))?@)?([^/?#:]*)(:([0-9]+))?)?([^?#]*)(\?([^#]*))?(#(.*))?
10510	^(([^\s\.#]+\.)|\.)*([^\s\.#]+)?$
10511	^(([^}]*?[^;]?)\s*)(?=\})
10512	^(([a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
10513	^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$
10514	^((\d+)(\.\d+)*).*$
10515	^((\d+\.\d+)\.(\d+))
10516	^((\s)\2*)\S
10517	^((cdef +(extern|class))|cimport|(from .+ cimport)|(from .+ import +[*]))
10518	^(-?(0|[1-9][0-9]*)(\.[0-9]*)?([eE][+-]?[0-9]+)?)
10519	^(-?[0-9\.]+)\s*$
10520	^(-?[0-9\.]+)\s*cm$
10521	^(-?[0-9\.]+)\s*in$
10522	^(-?[0-9\.]+)\s*mm$
10523	^(-{3}-*)(?::(?P<c>[a-zA-Z][_a-zA-Z\-\d]*)(?:\[(?P<p>[a-zA-Z][_a-zA-Z\-\d]*)\])?)?$
10524	^(.)(.+?)\1 ([^#]+)#?
10525	^(.):(.)$
10526	^(.*) (\d+) (\d+) (\d+)$
10527	^(.*) <(.*)>$
10528	^(.*) ?\[([^ ]*) \+(0x[0-9A-F]{1,16})\](.*)$
10529	^(.*) ?\[([^ ]*) \+(0x[0-9a-fA-F]{1,8})\](.*)$
10530	^(.*) Transfer Syntax PS ?[0-9].1?[0-9]$
10531	^(.*)"""$
10532	^(.*)#(.*)$
10533	^(.*)#{(\w+)}(.*)$
10534	^(.*)$
10535	^(.*)(#[0-9a-fA-F]{6})$
10536	^(.*)([ \t]+)$
10537	^(.*)([\?#].*)$
10538	^(.*)(\([0-9A-Fx]+,[0-9A-F]+\))\s+([1-3C]+)\s+(.*)\s*$
10539	^(.*)(\.py[oc])$
10540	^(.*)(\stime\selapsed:\s*)(.*)\s*$
10541	^(.*)/__pycache__/(.*)\.(.*)(\.py[oc])$
10542	^(.*):([0-9]*)$
10543	^(.*)=:(.*?)$
10544	^(.*)PS 3.6-2007(.*)$
10545	^(.*)\((.+)\)$
10546	^(.*)\((\d+)\)$
10547	^(.*)\..*$
10548	^(.*, |)([a-zA-Z0-9_*]+)=
10549	^(.*/)?\.git$
10550	^(.*/)?\.svn$
10551	^(.*:.*/(jobmanager|nordugrid|cream)-.*?)-(.*)
10552	^(.*:.*/jobmanager-.*?)-(.*)
10553	^(.*?) - (.*?)$
10554	^(.*?)(\*+)$
10555	^(.*?)(\.|)(\w?[\w\d]*)$
10556	^(.*?)(\d*):(\d+)$
10557	^(.*?)\b(2|R_386_PC16)\s+(__\w+)$
10558	^(.*?\.pyc?):(\d+):\s+(.*)$
10559	^(.*[^a-z0-9\n])?(chown|chmod) +.*
10560	^(.*[^a-z0-9\n])?(sudo|su +-c|system/bin/su) +.*
10561	^(.*[^a-z0-9\n])?am +start[^a-z0-9\n].*
10562	^(.*[^a-z0-9\n])?cp +.+ system/app/.*
10563	^(.*[^a-z0-9\n])?insmod .*
10564	^(.*[^a-z0-9\n])?mount +.* *remount+.*
10565	^(.*[^a-z0-9\n])?pm +install[^a-z0-9\n].*
10566	^(.*\.arc)$
10567	^(.*\n)*def\s+step_init\s*\(\s*\)\s*:
10568	^(.*does not exist.*)$
10569	^(.+) (.+)$
10570	^(.+) => (.+)$
10571	^(.+) \(in ([^)]+)\) \((.+)\)$
10572	^(.+)(\d{3})-(\d{3})-(\d{3}).*$
10573	^(.+)-mail$
10574	^(.+)-time$
10575	^(.+):(\d{1,5})$
10576	^(.+)@(\d+)$
10577	^(.+)[&](.+)$
10578	^(.+)[|](.+)$
10579	^(.+)\((.+?)\)$
10580	^(.+)\(([0-9]+)\,([0-9]+)\)\: (.+)$
10581	^(.+)\b(?:at)\b(.+?)$
10582	^(.+)\t(\S+)\t/\^(.*)\$/;"\t(.*)\n
10583	^(.+?)(?:\=(.+?))?$
10584	^(.+?)(\.muse)?$
10585	^(.+?)(\s|$)
10586	^(.+?)/|/?(.+?)/main/?.*?/([0-9]+|CHECKEDOUT)
10587	^(.+?): .*?(\(attached\))?$
10588	^(.+?)[ \._\-][Ss]([0-9]+)[\.\- ]?[Ee]([0-9]+)[^\/]*$
10589	^(.+?)[ \._\-]\[?([0-9]+)x([0-9]+)[^\/]*$
10590	^(.+?)[ \._\-]\[[Ss]([0-9]+?)\]_\[[Ee]([0-9]+?)\]?[^\/]*$
10591	^(.+?)\(([^)]+)\)$
10592	^(.+?)\=(.+?)$
10593	^(.{2}|.{2}_.{2})$
10594	^(/\S+) \d+ \d+ ([0-9a-f]+) (0\d+) \S+ \S+ \d \d \d (\S+)$
10595	^(/etc/\S+) \d+ \d+ ([0-9a-f]+) (0\d+) \S+ \S+ \d \d \d (\S+)$
10596	^(/usr(/X11R6)?)?/lib(64)?
10597	^(/usr)?/s?bin/\S+/
10598	^(0[xX][0-9a-fA-F]+|[0-9]+)
10599	^(0x[0-9a-fA-F]+)(?:,(ramdisk|ipl|entry|rpm))?$
10600	^(0|[1-9][0-9]*)$
10601	^(0|[1-9]\d*)$
10602	^(192.)|(10.)|(127.)
10603	^(6553[0-5]|655[0-2]\d|65[0-4]\d\d|6[0-4]\d{3}|[1-5]\d{4}|[1-9]\d{0,3}|0)$
10604	^(812|813|811|495|499)
10605	^(<([^ >]*)[^>]*>.*?</\2>)\s*
10606	^(<=|>=|<|>|!=|==|~=)?\s*([^\s,]+)$
10607	^(<[^>]*/>)\s*
10608	^(<stream:stream [^>]*>)\s*
10609	^(=|-|~|`|#|"|\^|\+|\*)+
10610	^(>>>|\.\.\.)( |$)
10611	^(?! {4}|\t).*\w+(?<!_)_\w+_\w[\w_]*
10612	^(?!.*(Win64|x64))Win.*$
10613	^(?!^(PRN|AUX|CLOCK\$|NUL|CON|COM\d|LPT\d|\..*)(\..+)?$)[^\x00-\x1f\\?*:\";|/]+$
10614	^(?!join|order|complement)([^\:]+?):(.*)$
10615	^(?:#|(?:\.(?!\.)))
10616	^(?:(#{1,6}|\.+ |\++ |\++\. |\-+ |\-+\. )\s*)?(.*)$
10617	^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
10618	^(?:(?P<days>-?\d+) )?((?:(?P<hours>\d+):)(?=\d+:\d+))?(?:(?P<minutes>\d+):)?(?P<seconds>\d+)(?:\.(?P<microseconds>\d{1,6})\d{0,6})?$
10619	^(?:(\.+|\++|\-+)(\.)?\s+)?(-{3}-*)$
10620	^(?:.+) (?:[A-Z]+) (?P<x>\d+)x(?P<y>\d+)
10621	^(?:.:)?[^:]+:(\d+): \[([EWRCI]+)[^\]]*\] (.*)$
10622	^(?:Doctest: )?([\w\.]+) \.\.\. \[([^\]]+)\]$
10623	^(?:M|A)(\s+)(?P<name>.*)
10624	^(?:[A-Z]{1}\.{1}|[A-Z]{1}\.{1}[A-Z]{1})+$
10625	^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
10626	^(?:\"|\\|\d\d\d)
10627	^(?:\[([^]]+)\])?(.*)$
10628	^(?:\\(\S+)\s*)?(.*)$
10629	^(?:\d-)?(\d{2})\.? (.*)$
10630	^(?:\d{1,3}\.){3}\d{1,3}$
10631	^(?:\d{4}-\d{2}-\d{2} |)\[?(\d{2}:\d{2}:\d{2})\]? \[?(?:[^\]]+?/|)([A-Z]+)\]:? (.*)
10632	^(?:admin-console)(.*)
10633	^(?:app|lib)\/(.*?)\.rb$
10634	^(?:bt://)?([a-fA-F0-9]{40})$
10635	^(?:chromium:)?(\d+)$
10636	^(?:https?://)?(?:\w+\.)?facebook.com/video/video.php\?(?:.*?)v=(?P<ID>\d+)(?:.*)
10637	^(?:nfs://)?(?P<host>([a-zA-Z][\w\.^-]*|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}))(?::(?P<port>\d*))?(?P<dir>/[\w/]*)?$
10638	^(?:salt|https?|ftp)://
10639	^(?P<Alias>\s\s\-.*?)\s{2,}(?P<Desc>.*?)(?=^\s\s\-)
10640	^(?P<Y>(?:\d\d)?\d\d)?(?P<M>\d\d)(?P<D>\d\d)(?P<h>\d\d)(?P<m>\d\d)(?:\.(?P<s>\d\d))?$
10641	^(?P<_1>[^|]*)\|(?P<_2>[^|]*)(\|(?P<_3>[^|]*))?$
10642	^(?P<area>1\d1|11\d|8\d\d)(?P<area2>\d{3})(?P<station>\d+)$
10643	^(?P<area>[17]\d\d\d)(?P<station>\d+)$
10644	^(?P<area>[235]\d)(?P<area2>\d{4})(?P<station>\d+)$
10645	^(?P<attr>.+?)=(?P<rdn>.+?),(?P<base>.+)$
10646	^(?P<bytes>\d+)(?P<unit>[gmkb]?)$
10647	^(?P<call>.*?): (?P<msg>.*)
10648	^(?P<comp>\D*)(?P<start>\d+)(\.)*(?P<end>\d*).*
10649	^(?P<component>[\w\/-]+)\s*
10650	^(?P<csid>\d+) (?P<user>[^\s]+) (?P<revid>\d+) (?P<file>.*)$
10651	^(?P<d> *)(?P<o>.*)$
10652	^(?P<device>[\S\:]+)\s+Link encap:(?P<link>(\S+ ?\S+))(\s+HWaddr (?P<hwaddr>[0-9a-fA-F:]+))?
10653	^(?P<download_dir>.*/)[^/]*$
10654	^(?P<dsn>.+)$
10655	^(?P<exception>sqlite)://:memory:$|\n                     ^(?P<driver>\w+?)://  # driver\n                     (?:(?:(?P<user>\w+?)(?::(?P<password>\w+?))?@)?  # user and password pattern\n                     (?:(?P<host>[\w\.]+?)(?::(?P<port>\d+))?/|(?P<unix_socket>/(?:\.?\w+?(?:[\.\-]\w+)*/)*?\.?\w+(?:[\.\-]\w+)*):)  # host patterns\n                     (?P<dbname>\w+)|(?P<path>/(?:\.?\w+?(?:[\.\-]\w+)*/)*?\.?\w+(?:[\.\-]\w+)*))$ # database patterns
10656	^(?P<filetype>.)(?P<perms>.{9})\s+(?P<nlinks>\d*)\s*(?P<owner>\S+)\s+(?P<group>\S+)\s+(?P<size>\d+)\s+(?P<date>...\s+\d+\s+[\d:]+)\s+(?P<filename>.{1,}?)( -> (?P<linktarget>[^\r]*))?\r?$
10657	^(?P<from>(?:\d+|\S))-(?P<to>(?:\d+|\S))$
10658	^(?P<h>[0-9]*):(?P<m>[0-9]*):(?P<s>[0-9]*)
10659	^(?P<hostname>.*):(?P<port>\d+)?(?P<path>.*)
10660	^(?P<instance>.*)/(?P<db>.*)$
10661	^(?P<key>[\w]+)=(?P<value>.+)$
10662	^(?P<key>[^ =]+) *= *[\"\']?(?P<value>[^\"\']*)[\"\']?$
10663	^(?P<key>\w+):\s+(?P<usage_kb>\d+) kB$
10664	^(?P<keyword>.*?)\t(?P<remainder>.*\t(?P<kind>[a-zA-Z])(?:\t|$).*)
10665	^(?P<level>\*+)(\s+(?P<title>.*?))?\s*(\s(?P<tags>:[\w_:@]+:))?$
10666	^(?P<localpart>[^@]+)@(?P<domainpart>.+)?$
10667	^(?P<major>[0-9]+)\.(?P<minor>[0-9]+)(\.(?P<patch>[0-9]+))?(\-(?P<prerelease>[0-9A-Za-z]+(\.[0-9A-Za-z]+)*))?(\+(?P<build>[0-9A-Za-z]+(\.[0-9A-Za-z]+)*))?$
10668	^(?P<master>.*?)!(?P<slave>.*?)=(?P<dir>.*)$
10669	^(?P<min>\d+)$
10670	^(?P<month>[0-9]{1,2})[-/](?P<day>[0-9]{1,2})[-/](?P<year>[0-9]{4})$
10671	^(?P<month>\S+)\s+(?P<day>\S+)\s+(?P<time>\S+)\s+(?P<hostname>\S+)\s+(?P<program>\S+):\s+\[(?P<pid>\d+):\d+\]\s+(?P<facility>\S+):\s+server\sstats\sfor\sthread\s(?P<thread>\d+):\s+(?P<queries>\d+)\s+\S+\s+(?P<caches>\d+)\s+\S+\s+\S+\s+\S+\s+(?P<recursions>)\d+
10672	^(?P<n>.*) *\(.*
10673	^(?P<name>[A-Z_]+)_URL$
10674	^(?P<name>[^(]+)(?:\((?P<type>[^)]+)\))?$
10675	^(?P<neg>-?)(?P<Y>\d{4,})(?P<tz>Z|([-+]\d\d:\d\d))?$
10676	^(?P<neg>-?)(?P<Y>\d{4,})-(?P<M>\d\d)(?P<tz>Z|([-+]\d\d:\d\d))?$
10677	^(?P<neg>-?)(?P<Y>\d{4,})-(?P<M>\d\d)-(?P<D>\d\d)(?P<tz>Z|([-+]\d\d:\d\d))?$
10678	^(?P<neg>-?)(?P<Y>\d{4,})-(?P<M>\d\d)-(?P<D>\d\d)T(?P<h>\d\d):(?P<m>\d\d):(?P<s>\d*(\.\d+)?)(?P<tz>(Z|([-+]\d\d:\d\d))?)$
10679	^(?P<neg>-?)(?P<h>\d\d):(?P<m>\d\d):(?P<s>\d*(\.\d+)?)(?P<tz>Z|([-+]\d\d:\d\d))?$
10680	^(?P<neg>-?)--(?P<M>\d\d)-(?P<D>\d\d)(?P<tz>Z|([-+]\d\d:\d\d))?$
10681	^(?P<neg>-?)---(?P<D>\d\d)(?P<tz>Z|([-+]\d\d:\d\d))?$
10682	^(?P<neg>-?)---(?P<M>\d\d)(?P<tz>Z|([-+]\d\d:\d\d))?$
10683	^(?P<neg>-?)P((?P<Y>\d+)Y)?((?P<M>\d+)M)?((?P<D>\d+)D)?(?P<T>T?)((?P<h>\d+)H)?((?P<m>\d+)M)?((?P<s>\d*(\.\d+)?)S)?$
10684	^(?P<npa>[2-9]\d\d)(?P<nxx>[2-9]\d\d)(?P<station>\d\d\d\d)$
10685	^(?P<op>=|[<>!]=?)?(?P<ver>.*)$
10686	^(?P<position>[cj]?(?:ob|fl|fi|fe|fn))=\s*(?:\((?P<id>\d+)\))?(?:\s*(?P<name>.+))?
10687	^(?P<project>[^.]+).(?P<period>[^.]+).runs.list$
10688	^(?P<remote_ip>[^ ]+) (?P<http_user>[^ ]+) (?P<http_user2>[^ ]+) (?P<req_date>[^ ]+) (?P<timezone>[^ ]+) "(?P<request>[^ ]+) (?P<url>[^ ]+) (?P<http_protocol>[^ ]+) (?P<init_retcode>[^ ]+)
10689	^(?P<remote_ip>[^ ]+) (?P<http_user>[^ ]+) (?P<http_user2>[^ ]+) \[(?P<req_date>[^ ]+) (?P<timezone>[^ ]+) "(?P<request>[^ ]+) (?P<url>[^ ]+) (?P<http_protocol>[^ ]+) (?P<init_retcode>[^ ]+)
10690	^(?P<reponame>.*)@(?P<hostname>.*):(?P<port>\d+)$
10691	^(?P<scheme>[a-zA-Z0-9]+)://                         # scheme\n                        ((?P<avatar>[^:@]+)(:(?P<password>[^@]+))?@)?       # avatar name and password (optional)\n                        (?P<host>[^:/]+)(:(?P<port>\d+))?                   # host, port (optional)\n                        (?P<path>/.*)                                       # path\n                       $
10692	^(?P<scheme>http|https|HTTP|HTTPS)\://(?P<host>[^/]*)(?P<uri>.*)
10693	^(?P<server_name>[^ ]+) (?P<local_ip>[^ ]+) (?P<remote_ip>[^ ]+) (?P<user>[^ ]+) (?P<date>[^ ]+) (?P<conn_status>[^ ]+) (?P<init_retcode>[^ ]+) (?P<final_retcode>[^ ]+) (?P<size>[^ ]+) (?P<req_time>[^ ]+) (?P<cookie>[^ ]+) "(?P<referrer>[^"]+)" "(?P<request>[^"]+)" "(?P<user_agent>[^"]+)" (?P<pid>[^ ]+)
10694	^(?P<sign>[+-])?P(?P<years>[0-9]+([,.][0-9]+)?Y)?(?P<months>[0-9]+([,.][0-9]+)?M)?(?P<weeks>[0-9]+([,.][0-9]+)?W)?(?P<days>[0-9]+([,.][0-9]+)?D)?((?P<separator>T)(?P<hours>[0-9]+([,.][0-9]+)?H)?(?P<minutes>[0-9]+([,.][0-9]+)?M)?(?P<seconds>[0-9]+([,.][0-9]+)?S)?)?$
10695	^(?P<start>\s*)(?P<xy>[x|y]\s+)(?P<num>\d+)(?P<end>\s*)$
10696	^(?P<t>\S.*?)?(?:\s+\[(?P<a>.+?)\])?(?:\s+(?P<k>\S+))?(?:\s+(?P<p>popup))?\s*$
10697	^(?P<t>\S.*?)?(?:\s+\[(?P<a>.+?)\])?(?:\s+(?P<k>\S+))?\s+(?P<p>img|IMG|left|right|center|video|audio)(?:\s+(?P<w>\d+px))?\s*$
10698	^(?P<train>[\w\.]+)\s*(\,\s*(?P<test>[\w\.]+))?$
10699	^(?P<train>\d+)\s*(\,\s*(?P<test>\d+))?$
10700	^(?P<type>Error|Warning): (?P<error>.+)
10701	^(?P<type>[\w\s*]+?)(?P<name>\w+)(\[(?P<array>\d+)\])?$
10702	^(?P<unitformat>.+) \((?P<bytes>[0-9\.]+) bytes\)
10703	^(?P<user>[^:@]+)(\:(?P<password>[^@]*))?@(?P<host>[^\:/]+)(\:(?P<port>[0-9]+))?/(?P<db>.+)$
10704	^(?P<user>[^:@]+)(\:(?P<password>[^@]*))?@(?P<host>[^\:/]+)(\:(?P<port>[0-9]+))?/(?P<db>.+?)(\?set_encoding=(?P<charset>\w+))?$
10705	^(?P<user>[^:@]+)(\:(?P<password>[^@]*))?@(?P<host>[^\:/]+)(\:(?P<port>[0-9]+))?/(?P<db>[^?]+)(\?set_encoding=(?P<charset>\w+))?$
10706	^(?P<user>[^:@]+)(\:(?P<password>[^@]*))?@(?P<host>[^\:/]+)(\:(?P<port>[0-9]+))?/(?P<db>[^\?]+)(\?(?P<urlargs>.*))?$
10707	^(?P<user>[^:@]+)(\:(?P<password>[^@]*))?@(?P<host>[^\:@]+)(\:(?P<port>[0-9]+))?/(?P<db>[^\?]+)(\?sslmode=(?P<sslmode>.+))?$
10708	^(?P<user>[^:@]+)(\:(?P<password>[^@]*))?@(?P<path>[^\?]+)(\?set_encoding=(?P<charset>\w+))?$
10709	^(?P<user>[^:]+)(\:(?P<password>[^@]*))?@(?P<host>[^\:@]+)(\:(?P<port>[0-9]+))?$
10710	^(?P<user>[ugo]{0,3})(?P<action>[\+\-])(?P<value>[rwxst]{1,3})$
10711	^(?P<username>[A-Za-z0-9_\.-]+@)?(?P<hostname>[A-Za-z0-9_\.-]+):(?P<path>.*)
10712	^(?P<value>\d+)(?P<unit>%|px)$
10713	^(?P<version>(?P<major>\d+)\.(?P<minor>\d+)\.\d+)(rc(?P<release_candidate>\d+))?-CAPI-(?P<capi_version>\d+\.\d+\.\d+)$
10714	^(?P<version>\d+).*
10715	^(?P<x>\d+)?(?:x(?P<y>\d+))?$
10716	^(?P<y>[0-9]*)-(?P<m>[0-9]*)-(?P<d>[0-9]*)
10717	^(?P<year>[0-9]{4})[-/](?P<month>[0-9]{1,2})[-/](?P<day>[0-9]{1,2})$
10718	^(?P<year>\d{4})-(?P<month>\d{2})-(?P<day>\d{2})T(?P<hour>\d{2}):(?P<minute>\d{2}):(?P<second>\d{2})(\.\d+)?$
10719	^(?P<z>\d+)/(?P<x>\d+)/(?P<y>\d+)\.(?P<e>\w+)$
10720	^(@|<|>|-|!|\.)(\s)*
10721	^(Added |Removed )?(.+Sponsor) (Rep|Sen). (.+)$
10722	^(All tests successful)|(\d+)/(\d+) subtests failed|Files=\d+, Tests=(\d+),
10723	^(BACKEND_PORT\..*|INSTANCE_ID|SERVER_SOFTWARE)$
10724	^(BSS|Routine) Size:
10725	^(BUGFIX|NEW|FEATURE|CHANGE|DEPRECATED): *(.*)
10726	^(CFLAGS_LOCAL.*)(\s-O3)(\s.*)$
10727	^(CHRYSALIS_MAKE_FLAGS\s*=\s*).*$
10728	^(C|CC)(_(\d+))?$
10729	^(ElementArc|ElementLine|Element|Pin|Pad)
10730	^(FCOPTIM.*)(\s-O3)(\s.*)$
10731	^(HEADER|COMPND|REMARK|SEQRES|CRYST1|SCALE|ORIG|TITLE|FORMUL|HELIX|SHEET|DBREF|SEQADV|SOURCE|KEYWDS|EXPDTA|AUTHOR|REVDAT|JRNL)
10732	^(HTTP/1.[0-1]|GET|POST)
10733	^(H|h)yph
10734	^(INCHWORM_CONFIGURE_FLAGS\s*=\s*).*$
10735	^(In \[\d+\]: |\s*\.{3,}: ?)
10736	^(Index|diff).*\s+(.+)$
10737	^(LATIN [A-Z]+ LETTER [A-Z]+) WITH
10738	^(LD_X11\s*)=.*
10739	^(MW|W)\((.*?)\)$
10740	^(N+)
10741	^(R|RR)(_(\d+))?$
10742	^(Sch|S)A
10743	^(T|t)ypo(graphy)?$
10744	^(X|E)$
10745	^([ >]*)(import|from) +nifti
10746	^([ \t]*#*)
10747	^([#*]+)\s.*
10748	^([+\-])?\$([^\$\{\}]+)$
10749	^([-+]?[0-9]+)/([0-9]+)$
10750	^([-+]?[0-9]+)\.([0-9]+)$
10751	^([-\w]+)
10752	^([-_./a-zA-Z0-9]+)\s+(\d+)\s+(\S+?)((?:\s+[-_./a-zA-Z0-9]+=[-_./a-zA-Z0-9]+)*)$
10753	^([-a-zA-Z0-9._]*):([0-9]+)(\.([0-9]+))?$
10754	^([.]*).*$
10755	^([0-1][0-9]|[2][0-3]|[0-9]):[0-5][0-9]$
10756	^([0-9A-Fa-f]{40}) (\d+) (\d+) (\d+)$
10757	^([0-9A-Fa-f]{40}) (\d+) (\d+)$
10758	^([0-9]+)
10759	^([0-9]+)([smhDWMY])
10760	^([0-9]+)-.*$
10761	^([0-9]+)-.+/.+$
10762	^([0-9]+)\.([0-9]+)\.([0-9]+)
10763	^([0-9]+)\.([0-9]+)\.([0-9]+)(.*?)$
10764	^([0-9]+)\..(.*)$
10765	^([0-9]+[.][0-9]+).*
10766	^([0-9]+\.[0-9]+)\.
10767	^([0-9][0-9]?[0-9]?)\.([0-9][0-9]?[0-9]?)\.([0-9][0-9]?[0-9]?)$
10768	^([0-9]\.[0-9])(\.[0-9]+)(.*?)$
10769	^([0-9]{4}) \(ANT\)$
10770	^([0-9]{4})-([0-1][0-9])-([0-3][0-9])(-([0-2][0-9])-([0-5][0-9]))? +(.*)$
10771	^([0-9]{4}):([0-9]{1,2}):([0-9]{1,2}) ([0-9]{1,2}):([0-9]{1,2})(?::([0-9]{1,2}))?
10772	^([0-9a-fA-F]+) ([0-9a-fA-F]+)xx(.*)$
10773	^([0-9a-fA-F]+) xx([0-9a-fA-F]+)(.*)$
10774	^([0-9a-fA-F]{1,2}:){5}[0-9a-fA-F]{1,2}$
10775	^([0-9a-fA-F]{2}(:|$)){6}$
10776	^([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}$
10777	^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$
10778	^([0-9a-fA-F]{2}[:\-]){6}[0-9a-fA-F]{2}$
10779	^([0-9a-f]+) (.*)$
10780	^([0-9a-f]+)
10781	^([0-9a-f]{2}[:]){5}[0-9a-f]{2}$
10782	^([0-9a-f]{40}) (.*)$
10783	^([0-9a-zA-Z_]+)\s+([0-9][0-9a-zA-Z\.-]*)\s
10784	^([0-9a-z]+)\s+<
10785	^([0-9a-z_]{2,}\.)*([0-9a-z_]{2,})?$
10786	^([01]?\d\d?|2[0-4]\d|25[0-5])\.([01]?\d\d?|2[0-4]\d|25[0-5])\.([01]?\d\d?|2[0-4]\d|25[0-5])\.([01]?\d\d?|2[0-4]\d|25[0-5])$
10787	^([1\.\x00\-\+]+)
10788	^([4-9]\.[0-9])\.[0-9]\.(Final|(Alpha|Beta|CR)[1-9][0-9]?)$
10789	^([><])(\d+)
10790	^([><]*\d+)\.\.([><]*\d+)$
10791	^([@+])?.*
10792	^([A-Fa-f0-9]{2,2}){3,4}$
10793	^([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])
10794	^([A-Z0-9a-z()=/:%. -]+),([0-9A-F]+),([A-Za-z0-9. -]+),([0-9A-F][0-9A-F]),([A-Z][A-Z]),([1-9N-]+)$
10795	^([A-Z])/([^\(]+)\(([^\)]+)\): (.*)$
10796	^([A-Z]+)([0-9]+)$
10797	^([A-Z]+)\s+http://([a-zA-Z0-9\-\.]+):?(\d*)(.*) HTTP
10798	^([A-Za-z0-9 -]+) ([0-9A-Z]+),([0-9A-Z]+) VR = ([A-Z][A-Z]), VM = (.*)$
10799	^([A-Za-z0-9 .#(),_/-]+) +\(([0-9A-F]+), ?([0-9A-F]+)\) ([A-Z][A-Z]) ([0-9]+)$
10800	^([A-Za-z0-9 ._>]+) \(([0-9A-F]+),([0-9A-F]+)\) [0-9] ([A-Z][A-Z]) ([0-9]) .*$
10801	^([A-Za-z0-9_-]+)=(.*)$
10802	^([A-Za-z]){2}$
10803	^([Mm]a?c)(\w+)
10804	^([\'"])(.*)\1$
10805	^([\+\-]?)(([0-9]+|[0-9]*[\.][0-9]+))([eE])([\+\-]?)([0-9]+)$
10806	^([\-a-zA-Z0-9]+)-([\.0-9]+)-([\.0-9]+)\.
10807	^([\.\/\w\x7f-\xff]+\.tex):(\d+):.*
10808	^([\.\/\w]+\.tex)(:\d+:.*)
10809	^([\s>]*)([0-9]+),([0-9A-Fx]+)\s+([A-Z][A-Z])\s+([A-Za-z0-9.?(,)> -]+)\s+([0-9n-]+)\s*$
10810	^([\w:\.]+)\s+([A-Z]+):(.*)$
10811	^([\w\-]+/)?[\w\-\.]+$
10812	^([\w\-_]+\.)+[\w]+$
10813	^([\w\_\:]+)
10814	^([\w\d\s\_\-]+):(.*)$
10815	^([\w\d]+[\w\d\-]*[\w\d]+\.?)+$
10816	^([\w\d_]+)
10817	^([^ \t]+)[ \t]*
10818	^([^ ]+) - .*\n
10819	^([^ ]+) = ([0-9\.]+)$
10820	^([^ ]+)[ ]+([^ ]+)[ ]+([^ ]+)
10821	^([^,]), (.*)$
10822	^([^-]*)(?:(-.*))?$
10823	^([^-]*)-(.*)\.tar\.bz2$
10824	^([^-]+)-([^-/]+)(/(.*))?$
10825	^([^-]+)-([^-]+).*\.egg(-info)?$
10826	^([^-]+-[^-]+)-(.*)\.fail$
10827	^([^:]*):(\d+):\s+(pdfTeX warning.*)
10828	^([^:]+):(.*)$
10829	^([^:]+):(\d+): (\w+): (.*) is not documented\.$
10830	^([^:]+):.(.*)$
10831	^([^:]+):.([0-9]+).Watts.*$
10832	^([^:]+):\s+(.+)\s*$
10833	^([^:]+:)\d+:\s*
10834	^([^;]+);([^;]+):(\d{1,5})$
10835	^([^<,]+)\s*(?:<([^>,]+)>)?$
10836	^([^=]*)\{(\w*)\}=(.*)$
10837	^([^=]+)[ ]*=[ ]*(.+)$
10838	^([^\)]+)\((.*)\)$
10839	^([^\.]+)
10840	^([^\.]+)\.(\w{,4})$
10841	^([^\[\]]+|\[[^\[\]]*\])*$
10842	^([^\s\.#]+\.)*([^\s\.#]+)?$
10843	^([^\t]+)\t[^\t]+\t([^\t]+)
10844	^([^_].*)\.py$
10845	^([^e]+)e(.+)$
10846	^([^}{]*?[^;,}{\s])\s*(?=\n|$)
10847	^([_A-Za-z][_A-Za-z0-9]*|\.|\.\.)$
10848	^([a-f0-9]{7,40})
10849	^([a-fA-F0-9]){3}(([a-fA-F0-9]){3})?$
10850	^([a-fA-F0-9]{64})$
10851	^([a-z-]*) +([^ ].*)
10852	^([a-zA-Z0-9 :]*)!(.*)!(.*)!([<>].*)!([0-9]+)!([0-9]+)$
10853	^([a-zA-Z0-9-]-)*force-([a-zA-Z0-9])+[.]cmd$
10854	^([a-zA-Z0-9-_.]+):(-?[0-9.]+)\|([a-z]+)(?:\|@([0-9.]+))?$
10855	^([a-zA-Z0-9\[\]\\^_-{|}*]+)!([a-zA-Z0-9\[\]\\^_-{|}~*]+)@([a-zA-Z0-9*.:-]+)$
10856	^([a-zA-Z0-9]+(\-[a-zA-Z0-9]+)*)(\.([a-zA-Z0-9]+(\-[a-zA-Z0-9]+)*))*$
10857	^([a-zA-Z0-9]+(\-[a-zA-Z0-9]+)*\.)*[a-zA-Z0-9]+(\-[a-zA-Z0-9]+)*\.[a-zA-Z]{2,4}$
10858	^([a-zA-Z0-9]\w+).py$
10859	^([a-zA-Z0-9_\-]+)([\.][a-zA-Z0-9_\-]+)+([:][/][a-zA-Z0-9\~\(\)_\-]*)+([\.][a-zA-Z0-9\(\)_\-]+)*
10860	^([a-zA-Z0-9_\-]+)([\.][a-zA-Z0-9_\-]+)+([:][0-9\~\(\)_\-]*)+([\.][0-9]+)*$
10861	^([a-zA-Z0-9_\\[\]\{\}\^`\|]+)([\+|\-]{2}(?![\+|\-])).*
10862	^([a-zA-Z0-9_]*) *=.*$
10863	^([a-zA-Z0-9_]+)=(\S+)$
10864	^([a-zA-Z]+)(.*)$
10865	^([a-zA-Z]{2})(\-[a-zA-Z]{2})?(\-[a-zA-Z]+)?$
10866	^([a-zA-Z_]+)\.po$
10867	^([a-zA-Z_][a-zA-Z0-9_]*)\((.*)\)
10868	^([a-zA-Z_][a-zA-Z0-9_]*)\.([a-zA-Z_][a-zA-Z0-9_]*)\((.*)\)
10869	^([a-zA-Z_]\w*)(\.|:)([a-zA-Z_]\w*)$
10870	^([a-z]+)(\*?)(\d)([a-z]*)([>\.]?)$
10871	^([a-z]+)-([0-9]+).([0-9]+)$
10872	^([a-z]?[a-z-]*[a-z]).*$
10873	^([a-z_-]+) if (.*)$
10874	^([acguACGU]+)$
10875	^([cku]?)x(.*)
10876	^(\((\w+)\)(-\[(\w*):(\w+)\]->\((\w+)\))?)(\s+(.*))?
10877	^(\()$
10878	^(\(*\d+\s*[<>=!]+\s*\d+\)*\s*(and|or)?\s*)+$
10879	^(\(*time|(.*\s+time))\s+<=\s+(\d+)
10880	^(\(*time|(.*\s+time))\s+<\s+(\d+)
10881	^(\(*time|(.*\s+time))\s+>=\s+(\d+)
10882	^(\(*time|(.*\s+time))\s+>\s+(\d+)
10883	^(\([0-9a-fA-F]+,[0-9a-fA-F]+\))(.*)$
10884	^(\))$
10885	^(\+|\-)\s*(.*)$
10886	^(\-l)
10887	^(\./)?(linden/?)?
10888	^(\:)(.*)$
10889	^(\?+)
10890	^(\S+ +\S+)\s*$
10891	^(\S+)
10892	^(\S+)\s+(.+)$
10893	^(\S+)\t(\S+)\t(\S+)\t(.+)\n$
10894	^(\^C)?(-+\n)|^(  File)(.*)(, line )(\d+\n)
10895	^(\d*)\scalls
10896	^(\d+(?:\.\d+)?)\s?(?:mb)?
10897	^(\d+(\.\d+)*)((a|b|c|rc)(\d+))?(\.(post)(\d+))?(\.(dev)(\d+))?(-(\d+(\.\d+)?))?$
10898	^(\d+) (.*)\((\d+)\.(\d+)\),(.*)\((\d+)\.(\d+)\) > (.*)\((\d+)\.(\d+)\),(.*)\((\d+)\.(\d+)\)$
10899	^(\d+) (\d+) "(.*)"
10900	^(\d+) \. (\d+) (\. (\d+))? ([ab](\d+))?$
10901	^(\d+)$
10902	^(\d+)(.*)$
10903	^(\d+)(?:([yzafpnumcdhkKMGTPEZY])(i)?)?([Bb])?$
10904	^(\d+)([dwm])$
10905	^(\d+)(k|m|g|t|p|kb|mb|gb|tb|pb)$
10906	^(\d+),*(\d*),*(\d*) *of: *(.+)
10907	^(\d+)-(\d+)$
10908	^(\d+).*([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])
10909	^(\d+):(\d+):(\d+),(\d+)\s*-->\s*(\d+):(\d+):(\d+),(\d+).*$
10910	^(\d+):(\d+):(\d+),\d+\s*-->.*
10911	^(\d+):(\d+):(\d+):(.*)
10912	^(\d+):(\d+):(\d+)\.(\d+)\s*\,\s*(\d+):(\d+):(\d+)\.(\d+).*$
10913	^(\d+):(\d+):(\d+)\.\d+\s*\,.*
10914	^(\d+):.*,.*,(\d+)$
10915	^(\d+)[^\d].*
10916	^(\d+)\) (\w+): (.+)( \(Bye: [\?\d]+\))$
10917	^(\d+)\,\s(.*)\n
10918	^(\d+)\W(\w+)\W(\w+)[ \t]+(.*)$
10919	^(\d+)\s(.*)$
10920	^(\d+)\s*$
10921	^(\d+)\s+(\d+)\s+obj\b
10922	^(\d+)x(\d+)\+(\d+),(\d+).*?
10923	^(\d+\.)+[\w.-]+$
10924	^(\d+\.\d+(\.\d+)*).*$
10925	^(\d+\.\d+)
10926	^(\d+\.\d+)\.\d+\.\d+$
10927	^(\d+\.x-)?(\d+)\..*$
10928	^(\d+|\*)$
10929	^(\d\d\d)-.*[^\~]$
10930	^(\d\d\d\d)\-(\d\d)\-(\d\d)$
10931	^(\d{1,2})\.(\d{1,2})\.(\d{1,3})(.*)
10932	^(\d{1,2}|\*)(?:-(\d{1,2}))?(?:/(\d{1,2}))?$
10933	^(\d{1,3}\.\d{1,3}\.\d{1,3}\.)\d{1,3}.*
10934	^(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(\d+)$
10935	^(\d{3,}).*
10936	^(\d{3})\s
10937	^(\d{4,4}-\d{2,2}-\d{2,2}T\d{2,2}:\d{2,2}:\d{2,2})\.\d*Z$
10938	^(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})\.(\d{6})([+|-])(\d{3})
10939	^(\d{4})\D?(0[1-9]|1[0-2])\D?([12]\d|0[1-9]|3[01])$
10940	^(\d{4})\D?(0[1-9]|1[0-2])\D?([12]\d|0[1-9]|3[01])(\D?([01]\d|2[0-3])\D?([0-5]\d)\D?([0-5]\d)?\D?(\d{3})?)?$
10941	^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})(\.\d{1,6})?Z?([\+\-]\d{2}:?\d{2})?$
10942	^(\d{8})(\d{2})(\d{2})(\d{2})\.(\d{6})(:)(000)
10943	^(\d|[0-1]\d|2[0-3]):[0-5]\d(:[0-5]\d)?$
10944	^(\s)*class(\s)+(\w)+.*
10945	^(\s)*def(\s)+(\w)+(\s)*\(.*
10946	^(\s)*from ((\w)+(\.)*(\w)*)+ import
10947	^(\s)*import (\w)+
10948	^(\s*(\[\[flickr((\(.*\))|())\]\])\s*)+$
10949	^(\s*(\[\[image((\(.*\))|())\]\])\s*)+$
10950	^(\s*(\[\[include((\(.*\))|())\]\])\s*)+$
10951	^(\s*) [#\*-] (.*)
10952	^(\s*)"""(.*)"""$
10953	^(\s*)"""(.*)$
10954	^(\s*)#\s*begin\s+wxGlade:\s*([A-Za-z_]+\w*)??[.]?(\w+)\s*$
10955	^(\s*)#\s*begin\s+wxGlade:\s*([a-zA-Z_][\w:]*?)::(\w+)\s*$
10956	^(\s*)(-)?[\w]*
10957	^(\s*)(\*|0|o|-) 
10958	^(\s*)(\d+\.\s+|\-\s+|\+\s+|\*\s+)?(.*)$
10959	^(\s*)//
10960	^(\s*)\.\.\s+autosummary::\s*
10961	^(\s*)\s\*/.*
10962	^(\s*-L\.\s*-l\$\(LIBTARGET\))(\s*;.*)$
10963	^(\s*>[ >]*)
10964	^(\s*LD\s*)=.*
10965	^(\s*\$\(COMPRESSION_LIBS\))(\s*;.*)$
10966	^(\s*\*)
10967	^(\s*\*)\s*$
10968	^(\s*end_date\s*=\s*).*$
10969	^(\s*geog_data_path\s*=\s*).*$
10970	^(\s*iret)\s*=\s*.*CPU THROTTLE.*$
10971	^(\s*lib.*)+
10972	^(\s*set\s*WRF_DIR_PRE\s*=\s*)\${DEV_TOP}(.*)$
10973	^(\s*start_date\s*=\s*).*$
10974	^(\s*terminal .*--timeout)=\d+
10975	^(\s+)[-=]+\s*$
10976	^(\s+)\S+
10977	^(\s+arrayObject\w*\s*=\s*[(])[(]PyObject\s*[*][)]
10978	^(\t*)(.*)$
10979	^(\t*).*$
10980	^(\t*)START\t----\t([^\t]+).*$
10981	^(\w*)\s*\(
10982	^(\w+)$
10983	^(\w+)(\:\w+)*
10984	^(\w+).(?P<name>[a-zA-Z_\-0-9]+).(?P<run>[0-9]+).*$
10985	^(\w+):$
10986	^(\w+):
10987	^(\w+):\s.*<(.*)>\smtu\s(\d+)\s.*
10988	^(\w+)=(.*)$
10989	^(\w+)=(.+)
10990	^(\w+)\([^;]
10991	^(\w+)\+\+$
10992	^(\w+)\-\-$
10993	^(\w+)\.(.*)$
10994	^(\w+)\.(\w+)$
10995	^(\w+)\.(\w+)\.([^.]+)
10996	^(\w+)\s*=\s*(\S*)
10997	^(\w+)\s*=\s*(\S.*)$
10998	^(\w+://)?(.*)
10999	^(\w+\.)+\w+$
11000	^(\w+\:)\s*(.*)$
11001	^(\w+\:)\s*\((.*?)\)\s*(\w+)\s*(.*)$
11002	^(\w+\d):
11003	^(\w\w\w\w)(?:$|\s+|_)(.*)
11004	^(\w{1,4}\s+\d{1,2}\s+\d\d:\d\d:\d\d)
11005	^(\{(\w+)\}->\((\w+)\))(\s+(.*))?
11006	^(\{(\w+)\}->\[(\w+)\])(\s+(.*))?
11007	^(\{[^}]+\})
11008	^(\r\n|\r|\n)+
11009	^(and)|(or)$
11010	^(and|del|from|not|while|as|elif|global|or|with|assert|else|if|pass|yield|break|except|import|print|class|exec|in|raise|continue|finally|is|return|def|for|lambda|try)$
11011	^(author|committer)$
11012	^(author|committer)
11013	^(boot(\.\d+)?$|kernel\.)
11014	^(bp-)?([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$
11015	^(cache type:) (.*)(<b>)(?P<shared_mem>[0-9]+)(</b> bytes, current sessions: <b>)(?P<current_sessions>[0-9]+)(</b><br>subcaches: <b>)(?P<num_subcaches>[0-9]+)(</b>, indexes per subcache: <b>)(?P<indexes_per_subcache>[0-9]+)(</b><br>)(.*)(<br>index usage: <b>)(?P<index_usage>[0-9]+)(%</b>, cache usage: <b>)(?P<cache_usage>[0-9]+)(%</b><br>total sessions stored since starting: <b>)(?P<sessions_stored>[0-9]+)(</b><br>total sessions expired since starting: <b>)(?P<sessions_expired>[0-9]+)(</b><br>total \(pre-expiry\) sessions scrolled out of the cache: <b>)(?P<sessions_scrolled_outof_cache>[0-9]+)(</b><br>total retrieves since starting: <b>)(?P<retrieves_hit>[0-9]+)(</b> hit, <b>)(?P<retrieves_miss>[0-9]+)(</b> miss<br>total removes since starting: <b>)(?P<removes_hit>[0-9]+)(</b> hit, <b>)(?P<removes_miss>[0-9]+)
11016	^(create: )?(mpath\w+)
11017	^(describe|it|before|after)\b
11018	^(dir_last\s*=\${dir_base})/.*$
11019	^(display|border_[a-z]+_(width|color))$
11020	^(ethernet)([0-9]+).
11021	^(fails|needs-focus|random|skip|asserts|slow|require-or|silentfail|pref|test-pref|ref-pref|fuzzy)
11022	^(ftp|http)://
11023	^(given|when|then|and)\s?
11024	^(http://www.youtube.com/v/([_a-zA-Z0-9-]+)).*
11025	^(https?)://([a-z\.0-9]+)(?:\:(\d+))?$
11026	^(https?://)?(?P<host>[^:]+)(:[0-9]+)?$
11027	^(https?|ftp):\/\/
11028	^(http|ftp):\/\/[\w.\-]+\/(\S*)
11029	^(http|ftp):\/\/[\w.]+\/(\S*)
11030	^(http|https)://
11031	^(ip)$
11032	^(ip_tables|iptable_filter|iptable_nat)[ \t]
11033	^(join|order)\((.*)\)$
11034	^(kv|timers|counts|gauges|sets)\.(.+)$
11035	^(lib|.+-libs)
11036	^(local1|local2)$
11037	^(mgmt|nic)\d+$
11038	^(my_gnu\s*=\s*).*$
11039	^(my_installroot\s*=\s*).*$
11040	^(my_r32\s*=\s*).*$
11041	^(my_readonly\s*=\s*).*$
11042	^(news|telnet|nttp|file|http|ftp|https)
11043	^(opensuse[0-9]+)\.([0-9]+)$
11044	^(optimized.)?group(?P<year>[0-9]{2}).(?P<group>[^.]+).mc(?P<prodyear>[0-9]{2})[_]?(?P<energy>[0-9]{1,2})(TeV)?.(?P<run>[0-9]+).(?P<name>).(?P<tag>[^.]+).(?P<suffix>.+)$
11045	^(parameter)$
11046	^(perfdata_spool_dir|perfdata_file|perfdata_spool_filename)\s*=\s*(.*?)\s*$
11047	^(phys|full|para)$
11048	^(platform/.*?/)?(.*)
11049	^(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|hr|hr/|style|li|dt|dd|thead|tbody|tr|th|td|section|footer|header|group|figure|figcaption|aside|article|canvas|output|progress|video)$
11050	^(scsi|ide)([0-9]+):([0-9]+)\.
11051	^(scsi|ide)[0-9]+[^:]
11052	^(started|finished|success|failure|exception|warnings|(success|warnings|exception|failure)To(Failure|Success|Warnings|Exception))$
11053	^(starting\s+from\s+page\s+(?P<number>\w+))?\s*(using\s+(?P<key>[\"\\'\w]+))?\s*(as\s+(?P<var_name>\w+))?$
11054	^(svn\+ssh|http|https|svn)://([-a-zA-Z0-9.]*@)(.*)$
11055	^(test_.+)\.py$
11056	^(test|xen|kvm|vmware)$
11057	^(unsigned)? ?(int|long)$
11058	^(var )?sc_project\=\d+;$
11059	^(variable\w*)$
11060	^(variable\w*|parameter|options|notebook)$
11061	^-(.*)$
11062	^-(?P<perms>[^\s]+)\s+(?P<user>[^\s]+)\s+(?P<group>[^\s]+)\s+(?P<size>[^\s]+)\s+(?P<date>[^\s]+)\s+(?P<time>[^\s]+)\s+(?P<filename>[^\s]+)$
11063	^-([a-z]*)\|--([a-z]*) +([^ ].*)
11064	^--- (.*)$
11065	^--- *
11066	^---
11067	^---\s+.*\s+\(.*\)
11068	^-?[-0-9.e\+]+$
11069	^-?[\.,]?\d[\d,\.-]*\.?$
11070	^-?\d*\.\d+$
11071	^-?\d+(?:\.\d+)?$
11072	^-[LRuYz]$
11073	^-[RL]
11074	^-{1,2}
11075	^.* +resolv.conf.*
11076	^.* - http://search\.vt\.edu/search/person\.html\?person=\d+$
11077	^.* - http://www\.urbandictionary\.com/define\.php\?term=.*$
11078	^.* - ntp1.npl.co.uk$
11079	^.* - tycho.usno.navy.mil$
11080	^.* \(#[0-9]+\)$
11081	^.* \(.*\): .* http://imdb.com/title/[a-z\d]+$
11082	^.* vim: set .*:.*$
11083	^.*"(\d{10})\/".*$
11084	^.*"cat > (?P<filename>.*?)".*$
11085	^.*$(?<!\.zip)
11086	^.*(#-{3})
11087	^.*(#{4})
11088	^.*(?P<number>[0-9]+)$
11089	^.*(HEAD|GET|POST|PATCH|PUT|DELETE)\s+(/[^ \n]*).*$
11090	^.*([^A-Za-z0-9_]()\s*\(|vtkGet.*Macro\s*\(\s*()\s*,|vtkSet.*Macro\s*\(\s*()\s*,).*$
11091	^.*(\d+){(\+|-)(\d+),(\d+),(.)}.*$
11092	^.*(\d+){(\+|-?)(\d+)}.*$
11093	^.*(\d+){(\d+),(\d+),(.)}.*$
11094	^.*(default:\s*|case.*:.*)$
11095	^.*(rc[0-9]*)$
11096	^.*/(?P<step_num>\d+)/(?P<stream>syslog|stderr)$
11097	^.*/?bin/.*.py
11098	^.*/attempt_(?P<timestamp>\d+)_(?P<step_num>\d+)_(?P<node_type>m|r)_(?P<node_num>\d+)_(?P<attempt_num>\d+)/(?P<stream>stderr|syslog)$
11099	^.*/gene\W*\"(?P<gene>\w+)\".*
11100	^.*/steps/(?P<step_num>\d+)/syslog$
11101	^.*/task-attempts/attempt_(?P<timestamp>\d+)_(?P<step_num>\d+)_(?P<node_type>m|r)_(?P<node_num>\d+)_(?P<attempt_num>\d+)/(?P<stream>stderr|syslog)$
11102	^.*: \[Full GC (?P<start_size>[^ ]+)K->(?P<end_size>[^ ]+)K\((?P<heap_size>[^ ]+)\), (?P<gc_time>[^ ]+) secs\]$
11103	^.*: \[GC (?P<start_size>[0-9]+)K\((?P<heap_size>[^ ]+)\), (?P<gc_time>[^ ]+) secs\]$
11104	^.*: \[GC (?P<start_size>[^ ]+)K->(?P<end_size>[^ ]+)K\((?P<heap_size>[^ ]+)\), (?P<gc_time>[^ ]+) secs\]$
11105	^.*<\s*(\S+)\s*>
11106	^.*<\s*html(\s*|>).*$
11107	^.*>(.*)<.*$
11108	^.*? (\d+)\.wav$
11109	^.*?(?P<version>(\d|\.)+).*?$
11110	^.*?([0-9/]{8}\s+[0-9:]{8}):\s+?(.+)\schanged\sthe\sgroup\sicon.*$
11111	^.*?([0-9/]{8}\s+[0-9:]{8}):\s+?(.+)\schanged\sthe\ssubject\sto\s(.*)$
11112	^.*?([0-9/]{8}\s+[0-9:]{8}):\s+?(.+)\sjoined.*$
11113	^.*?([0-9/]{8}\s+[0-9:]{8}):\s+?([^:]+):\s(.*)$
11114	^.*?(\d+(\.\d+)+)\r?$
11115	^.*?/.+?_(?P<mystery_string_1>\d+)_job_(?P<timestamp>\d+)_(?P<step_num>\d+)_hadoop_streamjob(?P<mystery_string_2>\d+).jar$
11116	^.*?/hadoop-hadoop-(jobtracker|namenode).*.out$
11117	^.*?/job_(?P<timestamp>\d+)_(?P<step_num>\d+)_(?P<mystery_string_1>\d+)_(?P<user>.*?)_streamjob(?P<mystery_string_2>\d+).jar$
11118	^.*?/jobs/.+?_(?P<mystery_string_1>\d+)_job_(?P<timestamp>\d+)_(?P<step_num>\d+)_hadoop_streamjob(?P<mystery_string_2>\d+).jar$
11119	^.*?\=(.*)$
11120	^.*?\s+#|;.*
11121	^.*@.*$
11122	^.*ANNEXE.*$
11123	^.*ArgumentAdaptingMatcherFunc<.*>\s*(?:LLVM_ATTRIBUTE_UNUSED\s*)\n              ([a-zA-Z]*)\s*=\s*{};$
11124	^.*BigEndianExplicit.*$
11125	^.*GE Medical Systems HISPEED ADVANTAGE CT/i CONFORMANCE STATEMENT.*$
11126	^.*JPEG2000.*$
11127	^.*JPEGBaseline.*$
11128	^.*JPEGExtended.*$
11129	^.*JPEGLS.*$
11130	^.*JPEGLossless.*$
11131	^.*LittleEndianExplicit.*$
11132	^.*LittleEndianImplicit.*$
11133	^.*MemberID=(\d+).*$
11134	^.*RLELossless.*$
11135	^.*VTK_LEGACY.*$
11136	^.*VariadicOperatorMatcherFunc\s*<\s*([^,]+),\s*([^\s>]+)\s*>\s*\n              ([a-zA-Z]*)\s*=\s*{.*};$
11137	^.*[/\\]koans[/\\].*$
11138	^.*[0-9]dev$
11139	^.*\(
11140	^.*\.html$
11141	^.*\.img$
11142	^.*\.img.gz$
11143	^.*\.sql
11144	^.*\.tar.bz2$
11145	^.*\.xsd$
11146	^.*\.zip$
11147	^.*\] 
11148	^.*\s(.*)\n$
11149	^.*\s*host=\s*([^\s]+)\s*.*$
11150	^.*\s*port=\s*([^\s]+)\s*.*$
11151	^.*\s*user=\s*([^\s]+)\s*.*$
11152	^.*\s+mail exchanger = (?P<priority>\d+) (?P<host>\S+)\s*$
11153	^.*_c_id$
11154	^.*failure.*$
11155	^.*libtool: file: .* has no symbols$
11156	^.*lindenlab.com slapd\[\d+\]: .*(?P<query_status>ACCEPT from IP)
11157	^.*named.*client (?P<client_ip>[0-9\.]+).*query
11158	^.*postfix/local.* status=bounced .*$
11159	^.*postfix/local.* status=sent .*$
11160	^.*postfix/smtpd.*connect from unknown.*$
11161	^.*rate = ([0-9.]+).*$
11162	^.*system/bin/.*
11163	^.+: (?P<type>.+): line (?P<line>\d+), column (?P<column>\d+):\s+(?P<error>.+)
11164	^.+:(?P<line>\d+):(?P<col>\d+): (?P<error>.+)
11165	^.+? (.*) (\d+) ([+-]\d+).*$
11166	^.+? (.*) (\d+) .*$
11167	^.+\.(?P<ext>.+)$
11168	^.+\.py$
11169	^.+\@(\[?)[a-zA-Z0-9\-\.]+\.([a-zA-Z]{2,6}|[0-9]{1,3})(\]?)$
11170	^.+\[.+\]$
11171	^.+num1=(\d+)&.*num2=(\d+)&.+
11172	^....:17EF:6009\.....$
11173	^./
11174	^.__
11175	^.const
11176	^.htaccess$
11177	^.{1,21}$
11178	^.{15}(.+)
11179	^.{15}(\S+)
11180	^.{5,}
11181	^/((usr/)?s?bin|etc/(rc\.d/init\.d|X11/xinit\.d|cron\.(hourly|daily|monthly|weekly)))/
11182	^/(?:usr/(?:s?bin|games)|s?bin)/(.*)
11183	^/(?P<region>[^/]+)/          # region name\n                         (?P<x>\d+)/                 # X position\n                         (?P<y>\d+)/                 # Y position\n                         (?P<z>\d+)                  # Z position\n                    
11184	^/([\w-]+)/
11185	^/([^/]+)
11186	^/([^/]+)(?:/(.*))?
11187	^/(usr/)?(s?bin|games|libexec(/.+)?|(lib(64)?|share)/.+)/[^/]+$
11188	^/*
11189	^/*([^/].*)
11190	^//(.*)
11191	^//(\[.+\])+\n
11192	^//\s*a2x:
11193	^/?(?P<a>\w+)(/(?P<c>\w+)(/(?P<f>\w+))?)?$
11194	^/?(?P<l>\w.+)/(?P<z>\d+)/(?P<x>\d+)/(?P<y>\d+)\.(?P<e>\w+)$
11195	^/?(?P<l>\w.+)/preview\.html$
11196	^/?([^/]+)
11197	^/?old/
11198	^/[^/]+/
11199	^/[a-zA-Z0-9_-]{28}/file1$
11200	^/api/v(?P<version>\d+)/|^/api/
11201	^/blog(?:/(.*)|$)
11202	^/cgi-bin/
11203	^/changeset/([^/]+).*?
11204	^/dev/+
11205	^/domain/(([-\w]+\.)+[\w]+)
11206	^/etc/(bash_completion\.d|profile\.d)/
11207	^/etc/(g?shadow-?|securetty)$
11208	^/etc/logrotate\.d/(.*)
11209	^/etc/security/console\.apps/|/\.nosearch$|/__init__\.py$
11210	^/favicon\.ico$
11211	^/intertrac/(.*)
11212	^/lib/modules/(2\.[23456]\.[0-9]+[^/]*?)/
11213	^/machines/\w+
11214	^/r/([^/]{2,})
11215	^/r/[a-zA-Z0-9_-]+
11216	^/s/
11217	^/search
11218	^/static/[a-z./-]+$
11219	^/tmp/|^(/var|/usr)/tmp/
11220	^/usr(/lib(64)?)?/games/
11221	^/usr(/share|/X11R6)?/(doc|man|info)/
11222	^/usr(?:/share)?/man/man[^/]+/(.+)\.[1-9n]
11223	^/usr/lib(?:64)?/python([.0-9]+)/
11224	^/usr/lib/perl5/(?:vendor_perl/)?([0-9]+\.[0-9]+)\.([0-9]+)/
11225	^/usr/share/doc/perl-.*/MANIFEST(\.SKIP)?$
11226	^/v1/images/([^\/]+)$
11227	^/v2/images/([^\/]+)$
11228	^/v2/images/([^\/]+)/file$
11229	^/var/log/
11230	^/var/log/[^/]+$
11231	^/{2,}
11232	^0 \w+ [01]\.[0-9]* \?\s*$
11233	^0
11234	^0*$
11235	^0000.*1111.*$
11236	^0000\s+(\w+):$
11237	^01$
11238	^01\s*$
11239	^03$
11240	^03\s*$
11241	^0[xX][0-9a-fA-F]+$
11242	^0x([0-9a-z]+)$
11243	^0x[a-fA-F0-9]{6}$
11244	^0{40}$
11245	^1.2.840.10008.[0-9.]+ (.*) PS ?[0-9].1?[0-9]$
11246	^1.2.840.10008.[0-9.]+ (.*) Well-known frame of reference$
11247	^1.2.840.10008.[0-9.]+ (.*) \(Retired\)$
11248	^1.2.840.10008.[0-9.]+ (.*)$
11249	^100
11250	^11111*$
11251	^11111*22222*$
11252	^1900|^1[2-9]\d\d976
11253	^1[2-9]\d\d[2-9]\d{6}$
11254	^254\d*$
11255	^7.11.1$
11256	^:
11257	^:(?P<chain>\S+) (?P<target>\S+)
11258	^:([0-7]+) ([0-7]+) ([0-9a-f]{40}) ([0-9a-f]{40}) R([0-9]*)$
11259	^:.*[MAD]\s*(.+)$
11260	^:.*[MAD]\s+(.+)$
11261	^::comment$
11262	^<(!\[CDATA\[[\s\S]*?\]\]|[a-zA-Z:0-9]+|\{[^{}]*\})\s*([a-zA-Z:0-9]+=(\{[^{}]*\}|"[^"]*"|\'[^\']*\')\s*)*\/?\s*>
11263	^<((?:[a-z0-9.]*))>\s*\n                                     ((?:[a-z0-9_.]*))\s*\n                                     \({0,1}\n                                     ((?:[a-z0-9,= ]*))\n                                     \){0,1}$
11264	^<([\w\-]+(?:\:[\w\-]+)?)((?:\s+[\w\-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:\\'[^\\']*\\')|[^>\s]+))?)*)\s*(\/?)>
11265	^<([a-z][a-z0-9_]*):([a-z]*)>$
11266	^<([a-z][a-z0-9_]*)>$
11267	^</dict>$
11268	^<Actions>(.+)$
11269	^<Actions>/(.+)/(.+)$
11270	^<[\?%](php)?
11271	^<\?xml.* encoding="(.*?)"
11272	^<dict/>$
11273	^<dict>$
11274	^<div(?:\s+class="([^"]+)")?>(.*)</div>$
11275	^== Troubleshooting information ==\n(.*?)^==
11276	^=== ([A-Z_]+)
11277	^==== ([^#]+)#(\d+) ==([AMD])== (.*) ====$
11278	^==== ([^\s]+) \(([^\)]+)\) ==([ACIMR])==$
11279	^==== (\S+) (\S+) ====$
11280	^=\?(?P<charset>[\w\d\-]+)\?(?P<code>[qb])\?(?P<value>.*)\?=$
11281	^=item\sB<(\w+)>\(([^)]+)\)\n\n(?=(.*?)\n\n)
11282	^>*\s*Include [`\'"]*([A-Za-z/ -]*)[\'"]* \(*Table [A-Z0-9a-z-.]+\)*.*$
11283	^>.*([A-N,R-Z][0-9][A-Z][A-Z,0-9][A-Z,0-9][0-9]|[O-Q][0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9])
11284	^>>>( |$)
11285	^@([^\s]+)\s+(.+)$
11286	^@(interface|implementation|class|protocol)
11287	^@@ -([0-9]+),([0-9]+) \+([0-9]+),([0-9]+) @@
11288	^@@ -\d+(?:,\d+)? \+(\d+)(?:,(\d+))? @@.*$
11289	^@@.*\+(\d+)(,(\d+))?
11290	^@[A-Z0-9\_]+$
11291	^@[a-zA-Z0-9][a-zA-Z0-9_\.]*$
11292	^@[a-zA-Z]+$
11293	^@\w+$
11294	^@executable_path/
11295	^API `(.*)`$
11296	^AUTHOR
11297	^AUTOTEST_FETCH_PACKAGE:([^:]*):([^:]*):(.*)$
11298	^AUTOTEST_STATUS:([^:]*):(.*)$
11299	^AUTOTEST_TEST_COMPLETE:(.*)$
11300	^A[0-9]+$
11301	^A[0-9][^ ]+$
11302	^Accession Number:
11303	^Artists
11304	^Attribute Name Tag VR VM$
11305	^Author: (\S+)
11306	^Author:\s+(.+)$
11307	^B
11308	^B.[1-9].*Private .*$
11309	^BLOCKCOUNT 
11310	^BUG[ \t]*=[ \t]*(.+)$
11311	^BUILDTYPE\s*=.*
11312	^BlackBerry
11313	^Bonding Mode:\s*(?P<mode>.+)
11314	^Bytes per WAL segment:\s+(\d+)
11315	^C (0x[0-9a-fA-F]+) (.*)$
11316	^CCD\s*=.*$
11317	^CCP\s*=.*$
11318	^CCS\s*=.*$
11319	^COMMIT$
11320	^COMPND
11321	^CPU.[0-9]:.(.*)$
11322	^Capacity:.(.*)$
11323	^Caps_Lock
11324	^ChkTeX
11325	^Committed r([0-9]+)
11326	^Committed r[0-9]+
11327	^CompositeType\((.+)\)$
11328	^Comware Software, Version (\S+), Release (\S+)$
11329	^Currently Active Slave:\s*(?P<active>eth[0-9]+)
11330	^DATABASE
11331	^DE 
11332	^DJ .* is currently playing: .* by .*$
11333	^Database cluster state:\s+(.*$)
11334	^Date: (.*)$
11335	^Date:
11336	^Document Class
11337	^Driving:
11338	^E1100[01] duplicate key
11339	^E:
11340	^END .*\t----\t----\t.*$
11341	^ENDSEC$
11342	^ENTITIES$
11343	^EXPR 
11344	^Error #([0-9]+): (.*)
11345	^Error
11346	^Error: pdflatex
11347	^Exception:.*
11348	^FAIL.*
11349	^FEATURE\s*
11350	^FINISH
11351	^FTB 
11352	^FUNC ([a-f0-9]+) ([a-f0-9]+) ([a-f0-9]+) (.*)$
11353	^Fan.#([0-9]+).information:$
11354	^Feed The Beast 
11355	^Firmware.Version:.(.*)$
11356	^Function.*has unnecessary root
11357	^Function.*takes unsafe address of unrooted
11358	^G
11359	^GC Function: (.*)
11360	^GE Medical Systems LightSpeed QX/i CONFORMANCE STATEMENT.*$
11361	^GL_?API(CALL)?\s+(?P<return>[\w\s*]+[\w*])\s+(GL)?_?APIENTRY\s+(?P<name>\w+)\s*\((?P<params>[\w\s(,*\[\])]+)\)\s*;
11362	^GNU gdb [^\d]*(\d+)\.
11363	^GNU gdb [^\d]*(\d+)\.(\d)
11364	^GNU gdb [^\d]*(\d+)\.(\d+)
11365	^GROUP:
11366	^Global Variables
11367	^GlueCEInfoContactString: (.*:.*/jobmanager-.*)
11368	^GlueCEInfoHostName: (.*)
11369	^GlueCESEBindGroupCEUniqueID: (.*:.*/jobmanager-.*?)-(.*)
11370	^GlueCEStateStatus: (.*)
11371	^GlueCEStateWaitingJobs: (.*)
11372	^GlueCEUniqueID: (.*)
11373	^GlueChunkKey: GlueClusterUniqueID=(.*)
11374	^GlueClusterUniqueID\s*=\s*(.*)
11375	^GlueForeignKey: GlueCEUniqueID=(.*):
11376	^GlueHostApplicationSoftwareRunTimeEnvironment: (.*)
11377	^GlueSiteDescription: (OSG.*)
11378	^GlueSiteUniqueID: (.*)
11379	^GlueSiteUniqueID=(.*)
11380	^H3C (\S+) uptime is 
11381	^HEADER
11382	^HPHP::(TypedValue|VM::Cell|Variant|VarNR)$
11383	^HTTP/([\d.]+) (\d+) (.+)$
11384	^HTTP/1.[0-1] [0-9]{1,3} OK\r\n
11385	^HTTP/\d\.\d\s+
11386	^HTTP/\d\.\d\s+(\d+)(\s+.*)?$
11387	^HTTP/\d\.\d\s+\d+\s*
11388	^Host (?P<host>.+), plugin (?P<plugin>.+)( \(instance (?P<plugin_instance>.+)\))? type (?P<type>.+)( \(instance (?P<type_instance>.+)\))?: Data source "(?P<ds_name>.+)" is currently (?P<ds_value>.+)\. That is (below|above) the (failure|warning) threshold of (?P<ts_value>[\-0-9\.]+)(?P<percent_flag>%?)\.
11389	^I/(stderr)\s*\(\s*\d+\):\s*((info|warning|error|debug): .*)$
11390	^I/(stdout|stderr)\s*\(\s*\d+\):\s*((info|warning|error|debug): .*)$
11391	^INCLUDE=(.+)$
11392	^INFO: writing frame [0-9]+ \(([0-9.]+)% done\)
11393	^INSTALL_FER_DIR =.*
11394	^INSTALL_LIB =
11395	^IP Address:.(.*)$
11396	^Icon.{1}$
11397	^Imported ([0-9]+) contacts$
11398	^Imported one contact$
11399	^In\-Band.IPv4.Address:.(.*)$
11400	^Item ([^ ]+) depends on missing item ([^ ]+).*
11401	^JSC::Identifier$
11402	^JSC::JSString$
11403	^JSC::UString$
11404	^KEY.*
11405	^KEY_
11406	^L
11407	^LABEL: (.*)$
11408	^LDFLAGS\s*=(?P<ldflags>.*$)
11409	^LIB=(.+)$
11410	^LINE
11411	^LOL|EVOLVE|ASAP|WEB-DL|IMMERSE|PROPER
11412	^Latest checkpoint location:\s+([0-9A-F]+)/([0-9A-F]+)
11413	^Latexmk
11414	^Latexmk: All targets \(.*?\) are up-to-date
11415	^Line (?P<line>\d+) of "(?P<filename>[\w\\/\.\-+:]*)" starts at address\s+0x[0-9a-f]+ <(?P<sym>\w+)\+\d+> and ends at 0x[0-9a-f]+ <(?P<symend>[^+]+)(\+\d+)?>.
11416	^Local Variables +Routines
11417	^M?C?R?$
11418	^MAPADDR 
11419	^MC
11420	^M\d+
11421	^MacOSX(10\.\d+)\.sdk$
11422	^Marked Items
11423	^MemTotal:\s*(\d*)\s*kB
11424	^Member ([a-zA-Z0-9_]+).*\((typedef|define|function|variable|enumeration)\) of (file|class) 
11425	^Memory:.(.*).MB$
11426	^Merge: .*$
11427	^Module:
11428	^Multiple results found; try http://search\.vt\.edu/search/people\.html\?q=.*$
11429	^N+
11430	^NALIGN
11431	^NIC.1.MAC.Address:.(.*)$
11432	^NIC.2.MAC.Address:.(.*)$
11433	^Naked Globals
11434	^Name:[ ]*([^\s]*)
11435	^Name:\s+(\w+)$
11436	^Name\s*:\s*(\S+)
11437	^New Revision: (\d+)
11438	^No contacts detected on SIM to import$
11439	^No contacts detected on SIM to import$|^Imported one contact$|^Imported [0-9]+ contacts$
11440	^No disassembly errors
11441	^No line number information available for address\s+0x[0-9a-f]+ <(?P<sym>\w+)\+\d+>
11442	^Note :.*$
11443	^ORIGIN\s*
11444	^Output written
11445	^P (mappage|pointerpage|datapage) (0x[0-9a-fA-F]+)$
11446	^P(?:(?P<days>\d+(.\d+)?)D)?(?:T(?:(?P<hours>\d+(.\d+)?)H)?(?:(?P<minutes>\d+(.\d+)?)M)?(?:(?P<seconds>\d+(.\d+)?)S)?)?$
11447	^PART :?(#[^ ]+)
11448	^PATH=(.+)$
11449	^PDBID
11450	^PID\s*([0-9]+)
11451	^PING :(.+)
11452	^PMAKE\s*=.*$
11453	^PMC$
11454	^PPid:\s+(\d+)$
11455	^Page [0-9]+$
11456	^Part.Number:.(.*)$
11457	^Power.Supply.#([0-9]+).Information:$
11458	^Primary Slave:\s*(?P<primary>eth[0-9]+)
11459	^Product.Name:.(.*)$
11460	^Product.Ver:.(.*)$
11461	^Properties on .*:$
11462	^QEMU Copy-On-Write disk image version 1
11463	^QEMU Copy-On-Write disk image version 2
11464	^R(?P<num>\d+)$
11465	^R(?P<reps>\d+)/(?P<start>[^P][^/]*)/(?P<end>[^P].*)$
11466	^R(?P<reps>\d+)?/(?P<intv>P.+)/(?P<end>[^P].*)$
11467	^R(?P<reps>\d+)?/(?P<start>[^P][^/]*)/(?P<intv>P.+)$
11468	^RCS file: (.+)$
11469	^REFTEST INFO \| Result summary:
11470	^REFTEST TEST-END
11471	^REFTEST TEST-START
11472	^RELOCATION RECORDS FOR \[(.+)\]
11473	^RPM\s+version\s+(?P<version>[0-9.]+).*
11474	^RT/(?P<v>\d+\.\d+\.\d+)\s+(?P<s>(?P<i>\d+).+)
11475	^RUNTIME_FUNCTION\(Runtime_(\w+)
11476	^Release\s*:\s*(\S+)
11477	^Releases
11478	^Result: (PASS|FAIL)$|Tests: \d+ Failed: (\d+)\)|Files=\d+, Tests=(\d+)
11479	^Review URL: https://codereview\.chromium\.org/(\d+)$
11480	^Routine +is Invoked by:
11481	^Routine: (?P<name>[^ ]+)$
11482	^Run on:
11483	^SEQLENGTH
11484	^SOURCE
11485	^SPM2 (.*) http(.*)$
11486	^START TIME:\s(.*)$
11487	^START WAL LOCATION: [^\s]+ \(file ([0-9A-Z]+)\)$
11488	^Segment:\s+(.+)\s+([0-9a-fA-F]+)\s+bytes$
11489	^Serial Number:.(.*)$
11490	^Serial.Number:.(.*)$
11491	^Server.Blade.#([0-9]+).Information:$
11492	^Server.Blade.Type:.No.Server.Blade.Installed$
11493	^Server.Name:.(.*)$
11494	^Shift
11495	^Signed-[Oo]ff-[Bb]y: (.+)$
11496	^Slave Interface:\s*(?P<slave>eth[0-9]+)
11497	^Spare.Part.Number:.(.*)$
11498	^Status:.(.*)$
11499	^Subject: [^\n]+$(.*)
11500	^Synset\([\'"]([^\)]*)[\'"]\)
11501	^System.Board.Spare.Part.Number:.(.*)$
11502	^TEST-(PASS|EXPECTED-FAIL).*
11503	^TEST-.*\.xml$
11504	^TEST-UNEXPECTED-.*
11505	^TRACE (\d+):$
11506	^T[A-Z0-9][A-Z0-9][A-Z0-9]$
11507	^Table B.1.? .* Private .*$
11508	^TestScanFiles.*\.txt$
11509	^This is
11510	^Time: (.*)
11511	^Tower(\w+)_Infeed(\w+)$
11512	^Traceback.*
11513	^Tracks
11514	^Type:.((Server|Storage|Unknown).*)$
11515	^Uid:\s+(\d+)
11516	^Unit +([01])- \[ *(-?\d+)- *(-?\d+)\] \[(\w+)\]$
11517	^Usage:
11518	^User-mode Linux COW file, version 2
11519	^Version:.(.*)$
11520	^Version:[ ]*([0-9\.]*)
11521	^Version\s*:\s*(\S+)
11522	^W:
11523	^W:\s*[0-9,]*:[A-Za-z0-9_]*.configure: Arguments number differs from overridden method
11524	^W:\s*[0-9,]*:[A-Za-z0-9_]*.make: Arguments number differs from overridden method
11525	^WTF::AtomicString$
11526	^WTF::CString$
11527	^WTF::String$
11528	^WTF::Vector<.*>$
11529	^W[A-Z0-9][A-Z0-9][A-Z0-9]$
11530	^WebCore::KURLGooglePrivate$
11531	^WebCore::QualifiedName$
11532	^[ -/:-@[-`{-\x7f]*$
11533	^[ >]+ +(?P<name>[^ ]+) +(?P<value>[^ ]+)$
11534	^[ MADRCU?!]{1,2}\s+.*
11535	^[ \n\t\r]
11536	^[ \t\*]*END[ \t]+LICENSE[ \t]+BLOCK[ \t]*\*+[ \t]+\*+/
11537	^[ \t\n\r]
11538	^[ \t]*LOG[ \t]*=[ \t]*(?:(?:Y(?:ES)?)|TRUE)
11539	^[ \t]*class \w+$
11540	^[ \t]*def \w+$
11541	^[ \t]*from [\w.]+$
11542	^[ \t]+
11543	^[ \t]*(?i)end script(?i)[ \t]*$
11544	^[ \t]*(?i)script(?i)[ \t]*$
11545	^[ ]*
11546	^[ ]{0,3}((\d+\.)|[*+-])[ ]+(.*)
11547	^[ ]{0,3}:[ ]{1,3}(.*)$
11548	^[ ]{0,3}[*+-][ ]+(.*)
11549	^[ ]{0,3}[^ :]
11550	^[ ]{0,3}\d+\.[ ]+(.*)
11551	^[ ]{4,7}((\d+\.)|[*+-])[ ]+.*
11552	^["\']?/
11553	^["]([^"]+)["]$
11554	^[$]?([A-Z]+)[$]?(\d+)$
11555	^[$]?([A-Z]+)[$]?(\d+)(:[$]?([A-Z]+)[$]?(\d+))?$
11556	^[$_]
11557	^[*]...
11558	^[+/0-9A-Za-z]{21}[AQgw]==$
11559	^[+0-9]+$
11560	^[+]{0,1}\d*$
11561	^[,.?!"()\\']
11562	^[,.]*
11563	^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]+$
11564	^[-+*.\w]{,32}$
11565	^[-+]\s+\([^\)]+\)\s+[A-Za-z0-9_]+[^;]*$
11566	^[-\.\w]+$
11567	^[-\.\w]+=
11568	^[-\\.(),!&^|>=<]*$
11569	^[-_.a-zA-Z0-9]+/[-_.a-zA-Z0-9]+$
11570	^[-_A-Za-z0-9 \.]+$
11571	^[-_A-Za-z0-9 ]+$
11572	^[-a-z0-9_.]+@[-a-z0-9]+\.+[a-z]{2,6}
11573	^[-a-zA-Z0-9]+$
11574	^[./]*resolve[Uu]id/([^/]*)/?(.*)$
11575	^[.0-9\(\)\+\-/\*\s]+\s*=$
11576	^[.\-_A-Za-z0-9]+$
11577	^[.]{1}.*
11578	^[/a-zA-Z0-9_-]+$
11579	^[0-9,-^]*$
11580	^[0-9-\,]*(\.[0-9Ee]*)?$
11581	^[0-9A-Fa-f]{1,4}$
11582	^[0-9A-Fa-f]{4,40}$
11583	^[0-9A-Fa-f]{40}$
11584	^[0-9A-Z\.]{1,10}$
11585	^[0-9A-Za-z.-]*$
11586	^[0-9A-Za-z_-]{64}$
11587	^[0-9A-Za-z_]+$
11588	^[0-9A-z\-\:]+$
11589	^[0-9\+\(\)]+$
11590	^[0-9\+\-\(\)\ ]+$
11591	^[0-9\. ]+$
11592	^[0-9\.]+$
11593	^[0-9]*.jpg$
11594	^[0-9]*\.
11595	^[0-9]+(.[0-9]+)?$
11596	^[0-9]+(\.[0-9]+)*$
11597	^[0-9]+@\S+$
11598	^[0-9]+B$
11599	^[0-9]+[*]
11600	^[0-9]+\.+
11601	^[0-9]+\..+$
11602	^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$
11603	^[0-9]{1,12}$
11604	^[0-9]{1,3}[kKmMgG]$
11605	^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$
11606	^[0-9]{1,5}$
11607	^[0-9]{10}$
11608	^[0-9]{2,4}$
11609	^[0-9]{3,4}$
11610	^[0-9]{3}$
11611	^[0-9]{3}.*.py$
11612	^[0-9]{4}(-[0-9]{2}){0,2}
11613	^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$
11614	^[0-9a-fA-F]+ [0-9a-fA-F]+ [A-Z][A-Z] [0-9n-] .*$
11615	^[0-9a-fA-F]{2} $
11616	^[0-9a-fA-F]{32}
11617	^[0-9a-fA-F]{4}    (([0-9a-fA-F]{2} )+)\s+(.+)$
11618	^[0-9a-fA-F]{4}\s+L\$(\d+):$
11619	^[0-9a-f]+_[0-9a-f]+$
11620	^[0-9a-f]{32}$
11621	^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
11622	^[0-9a-zA-Z- \*]+$
11623	^[0-9a-zA-Z- ]+$
11624	^[0-9a-zA-Z\-.]+$
11625	^[0-9a-zA-Z]+$
11626	^[0-9a-zA-Z_]+$
11627	^[0-9a-z]
11628	^[0-9x]+ [0-9xA-F]+ .* [A-Z][A-Z] [0-9] [A-Z, ]$
11629	^[0-9x]+ [0-9xA-F]+ .* [A-Z][A-Z] [0-9].*$
11630	^[0-9x]+ [0-9xA-F]+ .*$
11631	^[1-9][0-9]+$
11632	^[1|2]$
11633	^[2-9]\d\d[2-9]\d{6}$
11634	^[87]
11635	^[>|\s]*[-_]+\s*$
11636	^[?@]
11637	^[@&]?[a-zA-Z0-9][a-zA-Z0-9_\.]*$
11638	^[@+]
11639	^[@]+|[@]+$
11640	^[@]?[a-zA-Z0-9][a-zA-Z0-9_\.]*$
11641	^[A-F0-9]{24}$
11642	^[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]$
11643	^[A-Z0-9_-]{0,8}$
11644	^[A-Z] 
11645	^[A-Z]+
11646	^[A-Z]+(\.\w+)+$
11647	^[A-Z]+[a-z]
11648	^[A-Z][a-z0-9]*(([0-9]+)|([A-Z][a-z0-9]*))*$
11649	^[A-Z]\d*$
11650	^[A-Z]{3,5}:\d+$
11651	^[A-Za-z0-9 -]+ [0-9A-Z]+,[0-9A-Z]+ VR = [A-Z][A-Z], VM = .*$
11652	^[A-Za-z0-9 .#(),_/-]+ +\([0-9A-F]+, ?[0-9A-F]+\) +(.*)$
11653	^[A-Za-z0-9 .#(),_/-]+ +\([0-9A-F]+, ?[0-9A-F]+\) [A-Z][A-Z] [0-9]+$
11654	^[A-Za-z0-9 ._>]+ \([0-9A-F]+,[0-9A-F]+\) [0-9] [A-Z][A-Z] [0-9] .*$
11655	^[A-Za-z0-9$_]
11656	^[A-Za-z0-9+/]*={0,2}$
11657	^[A-Za-z0-9,._ -]+$
11658	^[A-Za-z0-9-_./]
11659	^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$
11660	^[A-Za-z0-9_-]+[\s\?\#\@]*[A-Za-z0-9_-]+$
11661	^[A-Za-z0-9_]+\(
11662	^[A-Za-z]+$
11663	^[A-Za-z]+(?:/[A-Za-z_]+)*$
11664	^[A-Za-z]:\\
11665	^[A-Za-z][A-Za-z0-9+_-]*$
11666	^[A-Za-z][A-Za-z0-9_]*$
11667	^[A-Za-z][A-Za-z_0-9]*$
11668	^[A-Za-z_][A-Za-z0-9_\.\-]*$
11669	^[A-z0-9!"#$%%&\\'()*+,-./:;<=>?@\[\]^_`{|}~ ]+$
11670	^[MT0]+
11671	^[S7]\s*[T8]\s*[O6]\s*[P7]$
11672	^[\(\[\{]([a-zA-Z])[\]\}\)]
11673	^[\*j.] .*$
11674	^[\-_A-Za-z0-9]+$
11675	^[\< ]+
11676	^[\S]+\[[\S]+\]$
11677	^[\d.:]+$
11678	^[\d\.]+ meV\xe2\x80\xbd .* \- .*$
11679	^[\s\!|"|\#|\$|\(|\)|\*|\+|\-|\;|\<|\=|\>|\@|\|\^|\`|\{|\||\}|\~]
11680	^[\s\S]+?(?=[\\<!\[_*`~$]|https?://| {2,}\n|$)
11681	^[\w ]+$
11682	^[\w,./=-]*$
11683	^[\w-]+(\.[\w-]+)*@([a-z0-9-]+(\.[a-z0-9-]+)*?\.[a-z]{2,6}|(\d{1,3}\.){3}\d{1,3})(:\d{4})?$
11684	^[\w.@+-]+$
11685	^[\w._-]+
11686	^[\w/:\.-]*$
11687	^[\w\-\+\.]+/[\w\-\+\.]+$
11688	^[\w\-\:%]+$
11689	^[\w\-\:]+
11690	^[\w\-\_]+$
11691	^[\w\.\-]+$
11692	^[\w\<][^\n]*(\n+)
11693	^[\w\d\.]+@[\w\d\.]+
11694	^[\w]+://
11695	^[\w]+\.define_table\(\s*[\'"](?P<name>\w+)[\'"]
11696	^[\w][\w\d.]*$
11697	^[\w{@}-]+$
11698	^[\w|\s.]+\(([^)]*)\).*
11699	^[\t ]*
11700	^[\t\r\n]+
11701	^[^ #]+\s+(\S+)\s+\S+\s*$
11702	^[^ :]+:([^ ]+) - .*\n
11703	^[^ :]+:[^ ]+ - 
11704	^[^ ]+ - 
11705	^[^,.:;?!]+
11706	^[^,]+,([0-9A-F]+),.*$
11707	^[^/\\.~][^/\\]*$
11708	^[^0-9A-Za-z]*
11709	^[^0-9]*
11710	^[^:/]+://.*$
11711	^[^:]*://
11712	^[^:]*[\d:]+$
11713	^[^A-Za-z_]$
11714	^[^\'"]*[\'"]([^\'"]*)[\'"]\s*:\s*[\'"]([^\'"]*)[\'"].*$
11715	^[^\$]+$
11716	^[^\(\[]+[^\s](\+|\-|\*|/|%|\^|&|\||=|<|>|>>|<<|\+=|\-=|\*=|/=|%=|\^=|&=|\|=|==|<=|>=|>>=|<<=|!=|<>)[^\s][^\)\]]+$
11717	^[^\.]+
11718	^[^\.]+\.
11719	^[^\\]+\\([^\\$]+)(\$?\\)?([^\\$]+)\$?$
11720	^[^\s/].*\s(\w+)\([^;]*$
11721	^[^\s\}]
11722	^[^\s]*$
11723	^[^^ ].*$
11724	^[^^]
11725	^[^_]{1,1}.*\.py$
11726	^[_0-9]*
11727	^[_@]+|[_@]+$
11728	^[_A-Za-z0-9-]+$
11729	^[_A-Za-z]+$
11730	^[_]+[ -]+
11731	^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$
11732	^[a-df-z]\d*$
11733	^[a-f0-9]+$
11734	^[a-z,0-9]+$
11735	^[a-z0-9-]+$
11736	^[a-z0-9\-._]*[a-z0-9]\.[a-z]{2,}$
11737	^[a-z0-9]$|^minus$|^equal$|^bracketleft$|^bracketright$|^semicolon$|^backslash$|^apostrophe$|^comma$|^period$|^slash$|^grave$
11738	^[a-z0-9]([a-z0-9-]*[a-z0-9])?$
11739	^[a-z0-9][a-z0-9\.\-]{2,}$
11740	^[a-z0-9]{3,24}$
11741	^[a-z0-9]{32}$
11742	^[a-z0-9_$()+-/]+$
11743	^[a-z0-9_-]{8}$
11744	^[a-z0-9_\.]+$
11745	^[a-z0-9_]+$
11746	^[a-zA-Z0-9 .:,-]*$
11747	^[a-zA-Z0-9-]{1,50}$
11748	^[a-zA-Z0-9._%-]+@[a-zA-Z0-9._%-]+.[a-zA-Z]{2,6}$
11749	^[a-zA-Z0-9._-]+$
11750	^[a-zA-Z0-9\-]{1,100}$
11751	^[a-zA-Z0-9\./_-]{1,}@[a-zA-Z0-9\./-]{4,}$
11752	^[a-zA-Z0-9\.\_\%\-\+]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
11753	^[a-zA-Z0-9]
11754	^[a-zA-Z0-9]+\/[a-zA-Z0-9\-]+$
11755	^[a-zA-Z0-9][-_\.0-9a-z]*$
11756	^[a-zA-Z0-9][a-zA-Z0-9\_\.\:\-]{0,251}$
11757	^[a-zA-Z0-9][a-zA-Z0-9_\.]*$
11758	^[a-zA-Z0-9]{14}$
11759	^[a-zA-Z0-9]{40}$
11760	^[a-zA-Z0-9]{8}$
11761	^[a-zA-Z0-9_-]*$
11762	^[a-zA-Z0-9_-]{1,128}$
11763	^[a-zA-Z0-9_-]{1,21}$
11764	^[a-zA-Z0-9_\-.]{1,128}$
11765	^[a-zA-Z0-9_\-\.]+$
11766	^[a-zA-Z0-9_]*$
11767	^[a-zA-Z0-9_][a-zA-Z0-9_\.]*$
11768	^[a-zA-Z\_][a-zA-Z0-9\-\_]*$
11769	^[a-zA-Z\d]+$
11770	^[a-zA-Z]*$
11771	^[a-zA-Z]*
11772	^[a-zA-Z]+:
11773	^[a-zA-Z]+:\/\/
11774	^[a-zA-Z]+=
11775	^[a-zA-Z]+[\w0-9-]*$
11776	^[a-zA-Z]+[\w:.0-9-]*$
11777	^[a-zA-Z][a-zA-Z0-9+.-]*:
11778	^[a-zA-Z][a-zA-Z0-9_]+$
11779	^[a-zA-Z][a-zA-Z\d_]{2,4}$
11780	^[a-zA-Z][a-zA-Z\d_]{2,}$
11781	^[a-zA-Z][a-zA-Z]_
11782	^[a-zA-Z]\w*$
11783	^[a-zA-Z]{2}(-[a-zA-Z]{2})?\.py$
11784	^[a-zA-Z_0-9.-]*
11785	^[a-zA-Z_]+$
11786	^[a-zA-Z_]+[\w-]*(\[\w*\])*$
11787	^[a-zA-Z_]+[\w0-9]*$
11788	^[a-zA-Z_]+[\w:.0-9-]*$
11789	^[a-zA-Z_][a-zA-Z_0-9]*$
11790	^[a-zA-z0-9]+$
11791	^[a-z]
11792	^[a-z]*.[0-9a-f]{32}\.cache\.html$
11793	^[a-z]+://localhost:8088/
11794	^[a-z]+\*?\d[a-z]*[>\.]?$
11795	^[a-z]+_[a-zA-Z0-9]+\.txt$
11796	^[a-z][-_\.0-9a-z]*$
11797	^[a-z][a-z0-9\.\:]{1,12}$
11798	^[a-z][a-z0-9]*(_+(([0-9]+)|([a-z][a-z0-9]*)))*_*$
11799	^[a-z][a-z0-9_]*$
11800	^[a-z][a-z](,[a-z][a-z])*$
11801	^[a-z]\d(?:,\d)*
11802	^[a-z]{1,10}$
11803	^[a-z]{2}_[A-Z]{2}$
11804	^[a-z|A-Z]\w*$
11805	^[ab]/
11806	^[a|b]/
11807	^[ex]\d+$
11808	^[fF]+$
11809	^[hsv]+d
11810	^[tf]lf2.
11811	^[yn]
11812	^[|+` -]+[0-9]+:[0-9]+:[0-9]+:[0-9]+ ([a-zA-Z0-9!/]+)
11813	^[|+` -]+policy
11814	^\!?([^,]+),(.+)$
11815	^\"(.*)\"$
11816	^\# Regexp Chunk Parsing Grammar[\s\S]*F-score:.*\n
11817	^\#!\s?([^\s]+)(?:\s([^\s]+))?
11818	^\$(.+?)\$
11819	^\$?(\d{1,3},?(\d{3},?)*\d{3}(\.\d{0,2})?|\d{1,3}(\.\d{0,2})?|\.\d{1,2}?)$
11820	^\$[\w=]+$
11821	^\$[a-zA-Z0-9_]+ *= *
11822	^\$[a-zA-Z][a-zA-Z0-9_-]*
11823	^\$\d+\.\d{2}
11824	^\(
11825	^\((.*?)\)\s*(.*)$
11826	^\(([0-9a-fA-F]+),([0-9a-fA-F]+) to ([0-9a-fA-F]+)\)(.*)$
11827	^\(([0-9a-fA-F]+)xx,([0-9a-fA-F]+)\)(.*)$
11828	^\(([0-9a-fA-Fx]+),([0-9a-fA-F]+)\)\s+(.*)\s+([A-Z][A-Z])\s+([0-9n-]+)\s*$
11829	^\(([0-9a-fA-Fx]+),([0-9a-fA-F]+)\)\s+(.*)\s+([A-Z][A-Z])\s+([0-9n-]+)\s+(RET)\s*$
11830	^\(([0-9a-f]+),([0-9a-f]+)\)\s+VERS=".*"\s+VR="([A-Z][A-Z])"\s+VM="(.*)"\s+Owner=".*"\s+Keyword=".*"\s+Name="(.*)"$
11831	^\(([0-9a-fx]+),([0-9a-fx]+)\) (.*) (RET|Retired)$
11832	^\(([0-9a-fx]+),([0-9a-fx]+)\) (.*) ([A-Zor ]+) ([1-9n-]+) (RET|Retired)$
11833	^\(([0-9a-fx]+),([0-9a-fx]+)\) (.*) ([A-Zor ]+) ([1-9n-]+)$
11834	^\(([0-9a-fx]+),([0-9a-fx]+)\) (.*) ([US/]+) ([1-9n-]+)$
11835	^\(([0-9a-fx]+),([0-9a-fx]+)\)[ \t]+VERS=.*[ \t]+VR="(.*)"[ \t]+VM="(.*)"[ \t]+Keyword=.*[ \t]+Name="(.*)"$
11836	^\(([A-Z])\) 
11837	^\(([IVXLCDM]+)\)$
11838	^\((\?P<[^>]*>)?$
11839	^\(.*\)$
11840	^\(?(\d{3})\)?[- .]?(\d{3})[- .]?(\d{4})$
11841	^\([0-9a-fA-Fx]+,[0-9a-fA-F]+\) (.*) [A-Z][A-Z] [0-9]$
11842	^\([0-9a-fA-Fx]+,[0-9a-fA-F]+\) (.*)$
11843	^\([0-9a-fA-Fx]+,[0-9a-fA-F]+\)\s+(.*)\s+[A-Z][A-Z]\s+([0-9n-]+)\s*$
11844	^\([0-9a-fA-Fx]+,[0-9a-fA-F]+\)\s+(.*)\s+[A-Z][A-Z]\s+([0-9n-]+)\s+RET\s*$
11845	^\([0-9a-f]+,[0-9a-f]+\)\s+VERS=".*"\s+VR="[A-Z][A-Z]"\s+VM=".*"\s+Owner=".*"\s+Keyword=".*"\s+Name=".*".*$
11846	^\([A-Z]\) 
11847	^\(\[(\S+)\],\[(\S+)\],\[(\S+)\]\)$
11848	^\* (.*): (.*)\n$
11849	^\* \w+$
11850	^\*(/.+)$
11851	^\*(?P<table>[a-z]+)
11852	^\+(.*)$
11853	^\++$
11854	^\+.*VTK_LEGACY\((.*)\).*\n
11855	^\+.*VTK_LEGACY_BODY\((.*),\s*"(.*)"\).*\n
11856	^\+\+\+ (.*)$
11857	^\+\+\+\s+.*\s+\(.*\)
11858	^\+init=epsg:\d+$
11859	^\+proj=.*$
11860	^\-+\+\-+$
11861	^\-?([0-9]+\.?[0-9]*|[0-9]*\.?[0-9]+)((E|e)\-?[0-9]+)?$
11862	^\-?[0-9]*\.?[0-9]*\s?\%$
11863	^\-?\d+$
11864	^\-A (?P<rule>\S+)
11865	^\-{4,}\n(?P<t>.*?)\n\-{4,}(:(?P<c>\w+))?\n
11866	^\.$
11867	^\..*
11868	^\..*\.swp$
11869	^\./|\.\./
11870	^\.\. piston_handlers:: ([\w\.]+)$
11871	^\.\./(.*)
11872	^\.\.\/GannetSocket
11873	^\.\d+$
11874	^\.\w+$
11875	^\.|^\d\.$|\.\.$
11876	^\.|~$|^\$
11877	^\/ranking/p([0-9]?)
11878	^\<.*\>\W*$
11879	^\<\/?([^ >]+)
11880	^\<\/?([^ ]+)
11881	^\>
11882	^\>(.*)\n
11883	^\?+
11884	^\D*
11885	^\S*(/dev/\S+).*\s/\s*$
11886	^\S+ (\S+)@(\S+)$
11887	^\S+$
11888	^\S+
11889	^\S+:(?P<level>\w+):(?P<code>\d+):\s+(?P<msg>.*)$
11890	^\S+\.
11891	^\[(.*)\]$
11892	^\[(.*)\](:(\d+))?$
11893	^\[(.+)\]$
11894	^\[(.+)\]:(\d{1,5})$
11895	^\[([;\d]+)m(.*)$
11896	^\[([^:]+):[^\[]+\[([^:]+):
11897	^\[([^\]]+)\]
11898	^\[BGN\] (Copying|Deleting|Updating) 
11899	^\[BGN\] Copying (?!properties)
11900	^\[BGN\] Copying properties for 
11901	^\[BGN\] Deleting 
11902	^\[BGN\] Updating (file )?
11903	^\[[^][]+\]$
11904	^\[\S+\s+(?:\(root-commit\)\s+)?(\S+)\]
11905	^\[\d+ refs\]
11906	^\[{2}(?P<uri>[^][]*)(\]\[(?P<description>[^][]*))?\]{2}
11907	^\\@input\{([^\}]+)\}
11908	^\\[^\s]+\n
11909	^\\[a-zA-Z]+[ ]?|^\\[^a-zA-Z][ ]?
11910	^\^
11911	^\d+(-\d+)?|\.\w+$
11912	^\d+(?:\.\d+)+(?:(?:[abc]|rc)\d+(?:\.\d+)*)?(?:\.post\d+)?(?:\.dev\d+)?$
11913	^\d+(\.\d+){1,}$
11914	^\d+(_\w+|)$
11915	^\d+,\d{2}\.\d{1,2}$
11916	^\d+-([A-Z]+-\d+)\b
11917	^\d+-\d+
11918	^\d+:(.+)$
11919	^\d+:\d+$
11920	^\d+\) \w+: (.+)( \(Bye: [\?\d]+\))$
11921	^\d+\-\d+\-\d+$
11922	^\d+\.\d+
11923	^\d+\.\d+([ab]\d+)?$
11924	^\d+\.\d+\.\d+
11925	^\d+\.\d+\w*
11926	^\d+\xc2\xb0C\xe2\x80\xbd .* \- .*$
11927	^\d+\xc2\xb0F\xe2\x80\xbd .* \- .*$
11928	^\d\.*\d*\s+\d\.*\d*\s+\d\.*\d*\s+\d\.*\d*\s+cmyk
11929	^\d\d/\d\d/\d\d\d\d$
11930	^\d\d\d\d\-\d+\-\d+: Version 3\.22\.5
11931	^\d\d\d_.*\.py$
11932	^\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3} 
11933	^\d{4}$
11934	^\d{4}-\d{2}-\d{2}$
11935	^\d{4}-\d{2}-\d{2}-\d{6}$
11936	^\d{4}/\d{2}/\d{2}$
11937	^\d{4}\.\d{2}\.\d{2}$
11938	^\d{8}$
11939	^\d{8}T\d{6}\-[a-zA-Z0-9\-]+\.py$
11940	^\s(?P<key>.*?)::\s(?P<val>.*?)(\s*)$
11941	^\s* ([#\*-]) 
11942	^\s*!
11943	^\s*"
11944	^\s*"\s*(?P<arg0>[^"]+)\s*"
11945	^\s*##(.*)$
11946	^\s*#\s*end\s+wxGlade\s*$
11947	^\s*#\s*include\s*["<]([^>"]+)
11948	^\s*#\s*include\s+"([\./\\a-zA-Z0-9]+)"
11949	^\s*#\s*include\s+<([\./\\a-zA-Z0-9]+)>
11950	^\s*#\s*tcollector.(\w+)\s*=\s*(.+)$
11951	^\s*$|^#.*$
11952	^\s*$|^(-+).*(-+)$
11953	^\s*$|^\s*#
11954	^\s*((?P<title>[^\s]*?)\s+)?(?P<tags>:[\w_:@]+:)$
11955	^\s*((public|private|protected|static)\s+)+([a-zA-Z_][a-zA-Z0-9_\.\[\]]*\s+)+?[a-zA-Z_][a-zA-Z0-9_]*\s*\(
11956	^\s*((public|static|private|protected)\s+)*(class|struct)\s+([A-Za-z0-9_])+
11957	^\s*((public|static|private|protected|internal|abstract|partial)\s+)*(class|struct)\s+([A-Za-z0-9_])+
11958	^\s*(- Standard -)\s*
11959	^\s*(.) (\[?[\w\s\.]+\]?)\s+(.+) -> ([/\w_\+\.-]+)(\t \(.*\)?$)?
11960	^\s*(.*)\([0-9A-Fx]+,[0-9A-F]+\)\s+([1-3C]+).*\s*$
11961	^\s*(.*)\s+(include|script)\s+(\S+)$
11962	^\s*(.*?)[\s({\[]
11963	^\s*(?:#.*)?$
11964	^\s*(?://\s+-#-(?P<annotation1>.*)-#-\s*)|(?:/\*\s+-#-(?P<annotation2>.*)-#-\s*\*/)
11965	^\s*(?:[87][- ]?[- \(]?[0-9]{3}[- \)]?[- ]?)?[0-9]{3}[- ]?[0-9]{2}[- ]?[0-9]{2}\s*$
11966	^\s*(?:virtual\s+)?void\s+([A-Za-z_]+\w*)\s*\([A-Za-z_:0-9]+\s*&\s*\w*\)\s*;\s*//\s*wxGlade:\s*<event_handler>\s*$
11967	^\s*(?P<arg0>[^ ]+)
11968	^\s*(?P<hmarker>=+)\s(.*)\s(?P=hmarker)
11969	^\s*(?P<hmarker>=+)\s*(.*)\s*(?P=hmarker)
11970	^\s*(?P<key>\w+)\s*=\s*(?P<value>.*)
11971	^\s*(?P<keyword>[\w-]+)\s+{\s*$
11972	^\s*(?P<new_window>\+?)\s*(?P<dots>\.*)(?P<absolute_path>(?:\w+)?(?:\.\w+)*)\s*$
11973	^\s*(?P<prefix>\\(sub)*section{|\\paragraph{)(?P<main>.*)(?P<suffix>}.*$)
11974	^\s*(?P<prefix>sub\s+)(?P<main>.*)(?P<suffix>\s*$)
11975	^\s*(?P<user>\S+)\s*(?P<name>\S+)\s*(?P<pid>\d+)\s*(?P<usage_bytes>\d+)$
11976	^\s*(?P<word>\S+)\_(?P<tag>\S+)\s*$
11977	^\s*([-_a-zA-Z0-9?.*]+)\s*:\s*(.*)$
11978	^\s*([0-9A-Z]+)\s+([0-9A-Zx]+)\s+([A-Z][A-Z])\s+([1-9SNn-]+)\s+([1-9])\s+([A-Za-z0-9 ()._,/#>-]+)\s*$
11979	^\s*([0-9a-fA-F]+):\s*(?:[0-9a-fA-F][0-9a-fA-F] )+\s*(.+)$
11980	^\s*([0-9a-f]+\.\.[0-9a-f]+)\s+([\S]+)
11981	^\s*([A-Z.a-z -]+[1-2]?)\s+([0-9A-Z]+)\s+([0-9A-Zx]+)\s+([1-3])\s+([A-Z][A-Z])\s+.*$
11982	^\s*([A-Z1-9.-]+)\s*([A-Za-z -]+)\s*$
11983	^\s*([A-Za-z0-9 #()./,_:>-]+)\s+([0-9A-Z]+),\s?([0-9A-ZxX]+)\s+([1-3C]+)\s+([A-Z][A-Z])\s+([0-9Nn-]+)\s*$
11984	^\s*([A-Za-z0-9&{}=+ ;%#\[\]()./,_:<>-]+)\s+\(?([0-9A-Fa-f]+),\s?([0-9A-Fa-fyxX]+)\)?\s+([1-3C]+)\s+([A-Z][A-Z])\s+([0-9Nn-]+)\s*$
11985	^\s*([A-Za-z0-9&{}=+ \xab\xbb%;#()./,_:<>-]+)\s+\(?([0-9A-Fa-fn]+),\s?([0-9A-Fa-fyxX]+)\)?\s+([A-Z][A-Z])\s+([0-9Nn-]+)\s*$
11986	^\s*([A-Za-z0-9()> -]+)\s+([0-9]+),([0-9A-Fx]+)\s+Value Representation = ([A-Z][A-Z]), Multiplicity = ([0-9n-]+)(.*)\s*$
11987	^\s*([A-Za-z0-9()> -]+)\s+\(([0-9]+),([0-9A-Fx]+)\)\s+([A-Z][A-Z])\s+([1-9n-]+)\s+([A-Za-z_0-9. ]+)\s*$
11988	^\s*([A-Za-z0-9> -]+)\s+([0-9]+),([0-9A-Fx]+)\s+VR = ([A-Z][A-Z]), VM = ([0-9n-]+)\s+(.*)\s*$
11989	^\s*([Table ]*[A-Z1-9.:-]+)\s+([A-Za-z -]+)\s+\(([A-Z0-9_]+)\)\s*$
11990	^\s*([^=\s]+)=?\s*(\S.*)$
11991	^\s*([^\s;]+)\s*.*$
11992	^\s*([^\s]+)(?:(?:\s*=\s*)|\s+)(.+)$
11993	^\s*([a-z]+)\s+(.*)
11994	^\s*([tlrbhwxy])\s*([!\?\*])\s*(\d*)\s*$
11995	^\s*([tlrbhwxy])\s*([=%<>^_])\s*([tlrbhwxy]?)\s*(\d*)\s*#(\d+)\s*$
11996	^\s*(\d+).?\s+
11997	^\s*(\s?>)+
11998	^\s*(\w+)\s*=(.*)$
11999	^\s*(\w+)\s*=\s*(.*)\s*$
12000	^\s*(class|function) [A-Za-z0-9_]+
12001	^\s*(def|class) [A-Za-z0-9_]+\s*\(?
12002	^\s*(else.*|end\s*|elsif.*|rescue.*|when.*|ensure.*)$
12003	^\s*(else|elif\s.*|except(\s.*)?|finally)\s*:
12004	^\s*(var\s+)?[A-Za-z0-9_]+\s*[=:]\s*function\s*\(
12005	^\s*-
12006	^\s*--+\s*(.*)
12007	^\s*---
12008	^\s*-\s*[Ee]xit.[Cc]ode\s*=\s*(.*?)\s*$
12009	^\s*//.*|^\s*/\*[^*]*\*/
12010	^\s*//\s*begin\s+wxGlade:\s*(\w*)::(\w+)\s*$
12011	^\s*//\s*end\s+wxGlade\s*$
12012	^\s*//\s*wxGlade:\s*add\s+((?:\w|:)+)\s+event handlers\s*$
12013	^\s*/\*.*?\*/
12014	^\s*0x([0-9a-fA-F]+)\s+0x([0-9a-fA-F]+)\s+([0-9]+)\s*$
12015	^\s*0x([0-9a-fA-F]+)\s+0x([0-9a-fA-F]+)\s+([a-zA-Z])\s+([0-9]+)\s*$
12016	^\s*<(?:div|table)(?:\s+[^>]+)?>
12017	^\s*<(\w+)(/?)>
12018	^\s*<\?xml\s+.*(encoding\s*=\s*"(.*?)").*\?>
12019	^\s*<html.*<style.*?>
12020	^\s*<p.*?begin="(.*?)\.([0-9]+)"\s+.*?end="(.*?)\.([0-9]+)"\s*>(.*?)</p>
12021	^\s*<policy-file-request\s*/>
12022	^\s*=[A-Za-z_]+\w*.*$
12023	^\s*?([*]|/\*\*)(?P<line>.*?)
12024	^\s*@Test
12025	^\s*AST_MATCHER(_P)?(.?)(?:_OVERLOAD)?\(\n                       (?:\s*([^\s,]+)\s*,)?\n                          \s*([^\s,]+)\s*\n                       (?:,\s*([^\s,]+)\s*\n                          ,\s*([^\s,]+)\s*)?\n                       (?:,\s*([^\s,]+)\s*\n                          ,\s*([^\s,]+)\s*)?\n                       (?:,\s*\d+\s*)?\n                      \)\s*{\s*$
12026	^\s*AST_MATCHER_FUNCTION(_P)?(.?)(?:_OVERLOAD)?\(\n                       (?:\s*([^\s,]+)\s*,)?\n                          \s*([^\s,]+)\s*\n                       (?:,\s*([^\s,]+)\s*\n                          ,\s*([^\s,]+)\s*)?\n                       (?:,\s*([^\s,]+)\s*\n                          ,\s*([^\s,]+)\s*)?\n                       (?:,\s*\d+\s*)?\n                      \)\s*{\s*$
12027	^\s*AST_POLYMORPHIC_MATCHER(_P)?(.?)(?:_OVERLOAD)?\(\n                          \s*([^\s,]+)\s*,\n                          \s*AST_POLYMORPHIC_SUPPORTED_TYPES_([^(]*)\(([^)]*)\)\n                       (?:,\s*([^\s,]+)\s*\n                          ,\s*([^\s,]+)\s*)?\n                       (?:,\s*([^\s,]+)\s*\n                          ,\s*([^\s,]+)\s*)?\n                       (?:,\s*\d+\s*)?\n                      \)\s*{\s*$
12028	^\s*Attribute Name\s+Tag\s+Type\s+Attribute Description\s*$
12029	^\s*Attribute [Nn]ame\s+Tag\s+Type\s+Description\s*$
12030	^\s*BEGIN_EVENT_TABLE\s*\(\s*(\w+)\s*,\s*(\w+)\s*\)\s*$
12031	^\s*CONVERT_ARG_CHECKED\((\w+), (\w+), (\d+)\)
12032	^\s*CONVERT_ARG_HANDLE_CHECKED\((\w+), (\w+), (\d+)\)
12033	^\s*CONVERT_BOOLEAN_ARG_CHECKED\((\w+), (\d+)\)
12034	^\s*CONVERT_DOUBLE_ARG_CHECKED\((\w+), (\d+)\)
12035	^\s*CONVERT_NUMBER_ARG_HANDLE_CHECKED\((\w+), (\d+)\)
12036	^\s*CONVERT_NUMBER_CHECKED\(\w+, (\w+), (\w+), args\[(\d+)\]\)
12037	^\s*CONVERT_PROPERTY_DETAILS_CHECKED\((\w+), (\d+)\)
12038	^\s*CONVERT_SMI_ARG_CHECKED\((\w+), (\d+)\)
12039	^\s*CONVERT_STRICT_MODE_ARG_CHECKED\((\w+), (\d+)\)
12040	^\s*DATS_FREE_DISKS\s*=(.*\S)\s*$
12041	^\s*DATS_FREE_PARTITIONS\s*=(.*\S)\s*$
12042	^\s*DECLARE_EVENT_TABLE\s*\(\s*\)\s*;?\s*$
12043	^\s*INITRD_MODULES\s*=(.*\S)\s*$
12044	^\s*NTLM\s+
12045	^\s*Notes:$
12046	^\s*PS 3.3 - 2007\s*
12047	^\s*Package\s*:\s*(\S+)
12048	^\s*Page\s+[0-9]+\s*$
12049	^\s*Private Creator Identification\s*([A-Z0-9_]+)\s*$
12050	^\s*Private Creator Identification\s*\("?(.*)"?\)\)?\s*$
12051	^\s*Tag\s+Name\s+VR\s+VM\s*$
12052	^\s*Version\s*:\s*(\S+)
12053	^\s*[#;]
12054	^\s*[+-]?((\d+(\.\d*)?)|\.\d+)([eE][+-]?[0-9]+)?\s*$
12055	^\s*[A-Z/\s-]+ATTRIBUTES\s*$
12056	^\s*[STUDYSERIES]+\s+\(([0-9]+),([0-9]+)\)\s+([A-Za-z ]+)\s*$
12057	^\s*[\d\.]+\w{0,3}\s*$
12058	^\s*[\w-]+\s*$
12059	^\s*\"(.+)\"\s*,\s*\"(.+)\"\s*$
12060	^\s*\"(.+)\"\s*,\s*\"(.+)\"\s*,\s*\"(.+)\"\s*$
12061	^\s*\#\s*include\s+([\"\<])(.+?)([\"\>])(.*)$
12062	^\s*\$INCLUDE\s*([^;\s]*)\s*
12063	^\s*\%\s*include\s+([\"\<])(.+?)([\"\>])(.*)$
12064	^\s*\(([0-9A-Z]+),([0-9A-Zx]+)\)\s+([A-Za-z0-9./:_ -]+)\s+\|\s+([A-Za-z0-9 ()._,/#>-]+)\s+([A-Z][A-Z]_?O?W?)\s+([0-9n-]+)\s*$
12065	^\s*\*(?P<fromStar>\s*)
12066	^\s*\*(?P<fromStar>\s*@[a-z]+\s+)\S
12067	^\s*\+\+\+\s+(?P<file>\S+)
12068	^\s*\.*\w+(\.\w+)*\s*$
12069	^\s*\.\.\s+autosummary::\s*
12070	^\s*\S*\s*IN\s*AAAA\s*.*
12071	^\s*\S*\s*IN\s*A\s*.*
12072	^\s*\S*\s*IN\s*PTR\s*.*
12073	^\s*\[
12074	^\s*\[(?P<state>!?!?)(?P<section>[^\]]*)\]\s*$
12075	^\s*\[Branch\s+([^]]+)\]
12076	^\s*\[\s*exe\s*\]\s*$
12077	^\s*\d+:/
12078	^\s*\d+\.\d+\.\d+\.\d+\s.+\s(?P<address>\d+\.\d+\.\d+\.\d+)\s+(?P<metric>\d+)\s*$
12079	^\s*\d+\s*$
12080	^\s*\d+\s*(?P<reponame>[^\s]+)\s*.*:.*$
12081	^\s*\d+\s+/\* frame size = (\d+) \*/
12082	^\s*\s*\(([^ )]*)\)
12083	^\s*\w*\s*$
12084	^\s*\{\s*([A-Z_0-9]+),
12085	^\s*\|
12086	^\s*\t*#|^\s*$|^\s*}
12087	^\s*_*version\s*_*\s*=\s*["\\']([^"\\']+)["\\'].*
12088	^\s*blocktrans(\s+.*context\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?(?:\s+|$)
12089	^\s*class\s+([a-zA-Z_]\w*)\s*
12090	^\s*class\s+([a-zA-Z_]\w*)\s*(\([\s\w.,]*\))?:\s*$
12091	^\s*class\s+(\w+)\s*[:\(]
12092	^\s*default.*
12093	^\s*description\s*{(.*?)}[^\n]*\n
12094	^\s*easyblock\s*=(.*)$
12095	^\s*else
12096	^\s*endif
12097	^\s*function [A-Za-z0-9_]+\s*\(
12098	^\s*git-svn-id:\s+(\S+)@(\d+)
12099	^\s*if\s+(\w+)
12100	^\s*include\s+(\w+)
12101	^\s*inet addr:(?P<address>\d+\.\d+\.\d+\.\d+)\s.+$
12102	^\s*msgid\s+"
12103	^\s*msgid_plural\s+"
12104	^\s*msgstr(\[\d\])?\s+"
12105	^\s*package\s+([^\s;]+)\s*;.*
12106	^\s*package\s+([a-zA-Z_][\w:]*)\s*;.*$
12107	^\s*select (.*?) from .*
12108	^\s*sub [A-Za-z0-9_]+
12109	^\s*trans\s+((?:"[^"]*?")|(?:\'[^\']*?\'))(\s+.*context\s+((?:"[^"]*?")|(?:\'[^\']*?\')))?\s*
12110	^\s*var 
12111	^\s*virtual\s*void\s*PrintSelf\s*\(\s*ostream\s*&\s*os*\s*,\s*vtkIndent\s*indent\s*\)
12112	^\s*void\s*PrintSelf\s*\(\s*ostream\s*&\s*os*\s*,\s*vtkIndent\s*indent\s*\)
12113	^\s*void\s*operator\s*=\s*\(\s*const\s*\s*&\s*\)\s*;\s*\/\/\s*Not\s*[iI]mplemented(\.)*
12114	^\s*vtk(Abstract)?Type(Revision)*Macro\s*\(
12115	^\s*vtk(Abstract)?Type(Revision)*Macro\s*\(\s*(vtk[^ ,]+)\s*,\s*(vtk[^ \)]+)\s*\)\s*
12116	^\s*vtkType(Revision)*Macro\s*\(
12117	^\s*vtkType(Revision)*Macro\s*\(\s*(vtk[^ ,]+)\s*,\s*(vtk[^ \)]+)\s*\)\s*;
12118	^\s*};\s*//\s+wxGlade:\s+end class\s*$
12119	^\s+#
12120	^\s+((?P<up>UP)\s+)?((?P<use_bcast>(BROADCAST|LOOPBACK))\s+)?((?P<running>RUNNING)\s+)?((?P<use_mcast>(MULTICAST|NOARP))\s+)?MTU:(?P<mtu>[0-9]+)\s+Metric:(?P<metric>[0-9]+)
12121	^\s+(?P<address>[0-9a-fA-F]+)\s+(?P<symbol>.*)\s+\((?P<module>[^)]*)\)$
12122	^\s+([_a-zA-Z][a-zA-Z0-9_.]*)\s*
12123	^\s+(\S+\-\d+)\s*$
12124	^\s+(\w+) =
12125	^\s+- Standard -\s*$
12126	^\s+-D\s+
12127	^\s+/*\{*\s*SC_
12128	^\s+//
12129	^\s+==>
12130	^\s+Policy\s+OID\s+:\s+SSL
12131	^\s+Result\s+Type\s+:\s+kSecTrustSettingsResultDeny
12132	^\s+Table\s+C.[0-9A-Za-z-.]+\s*$
12133	^\s+Table\s+C.[0-9A-Za-z-]+\s*[-]*\s*([A-Z/\s-]+)\s*$
12134	^\s+Trust\s+Setting\s+\d+:
12135	^\s+[A-Z/a-z\s]+Module Table\s*$
12136	^\s+[A-Z\s]+MACRO\s*$
12137	^\s+[A-Z\s]+MODULE\s*$
12138	^\s+[A-Za-z\s]+Attributes\s*$
12139	^\s+[END|START].*$
12140	^\s+\(from\s([^\s]+)\)$
12141	^\s+\[([\s*[0-9]*)\] ([a-zA-Z0-9_]*)
12142	^\s+commonName=(.*)$
12143	^\s+def ([a-zA-Z0-9_]*)\(self,*(.*)\)
12144	^\s+def\s+([A-Za-z_]+\w*)\s*\(.*\):\s*#\s*wxGlade:\s*(\w+)\.<event_handler>\s*$
12145	^\s+extern.*? dlamch_.*?;$(?m)
12146	^\s+inet (?P<address>\d+\.\d+\.\d+\.\d+)\s.+$
12147	^\s+inet addr:\s*(?P<ipaddr>[0-9\.]+)(\s+Bcast:(?P<bcast>[0-9\.]+))?\s+Mask:(?P<mask>[0-9\.]+)
12148	^\s+inet6 addr:\s*(?P<ipv6addr>[0-9a-fA-F\:\/]+)\s+Scope:(?P<scope>\S+)
12149	^\s+organizationalUnitName=(.*)$
12150	^\s+raise FoolishError..I am a broken setUp method..$
12151	^\s?#
12152	^\s?(<h(\d?)>(.+?)</h\d>)\s?(.+)?
12153	^\s{5}(?P<feat>[a-z_A-Z]+)\s*(?P<rest>\S*)\s*
12154	^\s|\s$|\'|"|;|`|,|/|\\
12155	^\t(.*)$
12156	^\t*(\S[^\t]*\t){3}
12157	^\t*GOOD\t----\treboot\.start.*$
12158	^\t*INFO\t----\t----(.*)\t[^\t]*$
12159	^\w*
12160	^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$
12161	^\w+:/*(\w+:|www\.)?
12162	^\w+Attempt.*?TASK_STATUS="FAILED".*?ERROR="(?P<first_line>[^"]*)$
12163	^\w+[\w\s\*]*?(\w*)\s*\(
12164	^\w+\.\w+$
12165	^\w+_(\d\d[A-Z]{3}\d{4}).\w+$
12166	^\w\w(-\w\w)?$
12167	^\w{128}$
12168	^\w{16}$
12169	^\w{3,}\.?\s\d{4}$
12170	^\w{32}$
12171	^\w{40}$
12172	^\w{64}$
12173	^\x1b\[0m(.*?)\x1b\[0?m[:-](\d+)([:-])(.*)
12174	^\{(\d+)\}\{(\d*)\}\s*(.*)
12175	^\{.+\}
12176	^\n                                    \s*\n                                    ((?:[a-z][a-z0-9_]*))\n                                    \s*\n                                    =\n                                    \s*\n                                    ((?:[a-z0-9_\\/:]*))\n                                    \s*\n                                    (\#.*)?\n                                    $
12177	^\n                                    \s*\n                                    ((?:\[+\s*))\n                                    ((?:[a-z0-9:_\.\s,]*))\n                                    \s*\n                                    ((?:\]+))\s*\n                                    (\#.*)?\n                                    $
12178	^\n                                ((?:\s*\#.*))\n                                $
12179	^\xff+\x00\xff*$
12180	^^(?P<from>(?:\d+|\S))-(?P<to>(?:\d+|\S))$
12181	^_.+__(.*)
12182	^_[A-Z]|__
12183	^_[^_]
12184	^_[_A-Z]+$
12185	^_\(
12186	^__gnu_cxx::_Slist_iterator<.*>$
12187	^__gnu_cxx::__normal_iterator<.*>$
12188	^__gnu_cxx::slist<.*>$
12189	^__gnu_debug::_Safe_iterator<.*>$
12190	^_{2,}.*[^_]+_?$
12191	^```(.*?)\n(.*?)^```$
12192	^added:\s*$
12193	^admin\/
12194	^area_at\(([0-9]+),([0-9]+),([0-9]+),([0-9]+)\).should_be_plain_colored
12195	^area_at\(([0-9]+),([0-9]+),([0-9]+),([0-9]+)\).should_not_be_plain_colored
12196	^ascii\.
12197	^asdf$
12198	^atest-(\w+)$
12199	^attachment; filename="(.*)"$
12200	^attr_\d+$
12201	^bonding_target_dev_select_(?P<dev>eth[0-9]+)
12202	^branch\s*=[^=].*
12203	^bytes=(\d{1,})-(\d*)
12204	^c
12205	^calls=\s*(\d+)\s+((\d+|\+\d+|-\d+|\*)\s+)+$
12206	^candidate
12207	^cert=(?:\w+)
12208	^cert=(?P<nickname>[0-9a-zA-Z_ ]+)
12209	^cert[0-9]+\.db$
12210	^cfg_dir
12211	^cfg_file
12212	^class ([^,]*), addr (\w\w:\w\w.\w+), pci id (\w{4}:\w{4}) \(sub (\w{4}:\w{4})\)
12213	^class ([a-zA-Z0-9_]*)\(*(.*?)\)*:
12214	^class (\w+)
12215	^class .+
12216	^class(\s+[^\s]*_EXPORT)?\s+(vtk[A-Z0-9_][^ :\n]*)\s*:\s*public\s+(vtk[^ \n\{]*)
12217	^class\s*(.*_EXPORT|\s*) (vtk[A-Z0-9_][^ :\n]*)\s*:\s*public\s*(vtk[^ \n\{]*)
12218	^client\.\d+\.DEBUG$
12219	^clientauth=(?P<clientauth>[a-z]+)
12220	^cluster
12221	^cm_
12222	^committer: (.*)$
12223	^complement\((.*)\)$
12224	^config.version\s+=
12225	^control
12226	^convert_file \"([^\"]*)\"
12227	^core = "?(\d+\.x)"?$
12228	^d\d{1,3}:
12229	^data
12230	^date: .* author: ([a-zA-Z]+);.*
12231	^db\.
12232	^def ((?:[a-zA-Z0-9]+_)*[a-zA-Z0-9]+)
12233	^def ([a-zA-Z0-9_]*)\((.*)\)
12234	^def .+
12235	^def\s+(?!(_|test))[^(]*\(\s*\)\s*:$
12236	^def\s+(?P<name>(?:[a-zA-Z0-9]\w*)|(?:_[a-zA-Z0-9]\w*))\(\)\s*:
12237	^define
12238	^deleted file mode (.+)$
12239	^deleted file
12240	^describe \"pdf conversion\"
12241	^dhcp\.dns_server\.\d+$
12242	^dhcp\.option\.ntp_server\.\d+$
12243	^dhcp\.option\.subnet_mask\.\d+$
12244	^dhcp\.option_router\.\d+$
12245	^dhcp\.pool\.allow_booting\.\d+$
12246	^dhcp\.pool\.allow_bootp\.\d+$
12247	^dhcp\.pool\.end$
12248	^dhcp\.pool\.start$
12249	^dhcp\.scope\.end$
12250	^dhcp\.scope\.netmask$
12251	^dhcp\.scope\.start$
12252	^diff --git a
12253	^diff --git a/(\S+) b/(\S+)$
12254	^diff --git
12255	^diff
12256	^dim4\s+
12257	^django\.contrib\.contenttypes\.generic\.GenericRelation
12258	^django\.db
12259	^dl.*_img
12260	^dr[0-9]-[a-z]{4}[0-9]$
12261	^driver\.
12262	^ds\[(\S+)\]\.type
12263	^e\d*$
12264	^ehlo\s*$
12265	^emulator-(\d+)(\s*)(.*)$
12266	^end$
12267	^enum
12268	^eth$
12269	^eth[0-9]$
12270	^eth[0-9]+
12271	^eth|br[0-9]$
12272	^fatal:
12273	^file:///[a-zA-Z]:/
12274	^file\:\/\/[^\?]*
12275	^filename
12276	^fill_bt_list\((.+)\)\s*$
12277	^fish_color_(\S+) ?(.*)
12278	^flf2.
12279	^folder.jpg$
12280	^func_i\d\d\d\d$
12281	^function\("([^"\\]+)"\)$
12282	^function\s*(\w+)\s*\(
12283	^gr_
12284	^group__\w*\..*$
12285	^gstreamer(?P<version>[0-9\.]+)\((?P<kind>.+?)-(?P<data>.+?)\)(\((?P<opt>.*)\))?
12286	^h(\d)
12287	^hd[a-z]$
12288	^height.should be ([0-9]+)
12289	^helo\s*$
12290	^help\s*$
12291	^host\s+(.*)\s+{(.*)}$
12292	^http
12293	^http(?s)://
12294	^http://((?:www\.)?\w+\.\w{2,3})(/.*)?
12295	^http://(?:www.)?(.*?)(?:\:[0-9]+)?/.*/([0-9B][0-9A-Z]{9})(?:[^0-9A-Z]|$)
12296	^http://.+? \(.*\)$
12297	^http://[\S]*\.craigslist.org/[\S]*\.html$
12298	^http://[^.]+\.magnatune\.com/
12299	^http://gatherer[.]wizards[.]com/
12300	^http://instagr\.am/p/[\S]*$
12301	^http://node-todobin\.herokuapp\.com/list/[a-z0-9]+$
12302	^http://soundcloud.com/[a-zA-Z0-9_-]+/([a-zA-Z0-9_-]+)
12303	^http://talos-bundles.pvt.build.mozilla.org/
12304	^http://www.justin.tv/([a-zA-Z0-9_]+)[^/]*$
12305	^http://www\.google\.com/calendar/embed\?[\w&;=\%]+$
12306	^http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+#]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+$
12307	^https?:
12308	^https?://.*$
12309	^https?://[^/]*?(\w+\.\w+)($|/.*$)
12310	^https?://bitbucket.org/([^/]+/[^/]+)/?$
12311	^https?://cdnsecakmi.kaltura.com/p/(?P<partner_id>[\d]+)/sp/(?P<subp_id>[\d]+)/flvclipper/entry_id/(?P<entry_id>[\w]+)/version/0(?:/ext/flv)?
12312	^https?://github.com/
12313	^https?://github.com/[^/]+$
12314	^https?://github.com/[^/]+/[^/]+$
12315	^https?://twitter.com/(?:#!\/)?[a-zA-Z0-9_]+/status(?:es)?/([0-9]+)
12316	^https?:/[^/]
12317	^https?:\/\/
12318	^https?:\/\/(:?localhost|127)
12319	^https?:\/\/.+
12320	^hw\d+$
12321	^index ([0-9A-Fa-f]+)\.\.([0-9A-Fa-f]+) ?(.+)?$
12322	^instance-[0-9]{8}$
12323	^invalid_
12324	^invalid_netmask
12325	^iqn\.(\d{4}-\d{2})\.([^:]+):
12326	^is_dhcp_scope$
12327	^issuer= 
12328	^issuer=\s*
12329	^ja_JP$
12330	^java\.cli\.([^\.]+)\.(.+)$
12331	^jdbc:oracle
12332	^jsonrpc:\/\/(.*):(\d*)$
12333	^kernel(22)?(-)?(smp|enterprise|bigmem|secure|BOOT|i686-up-4GB|p3-smp-64GB)?
12334	^key[0-9]+\.db$
12335	^ko_KR$
12336	^let g:(\w+)\s*=\s*(.*)
12337	^lib(.*).a$
12338	^lib.*\.so$
12339	^lib[^-]+-
12340	^listItem
12341	^location{primary}\[(.*)\]
12342	^logcat_(\w+)_(\d+)$
12343	^m_([0-9]+)
12344	^m_([0-9]+)_([0-9]+)
12345	^mal\.nfo$
12346	^mark2\.format\.(.*)$
12347	^message:\s*$
12348	^mgmt$
12349	^mode-(\S+).js$
12350	^modified:\s*$
12351	^module is a function\s*\nmodule\s*()
12352	^msgid "(?P<data>.*)"$
12353	^msgid_plural "(?P<data>.*)"$
12354	^msgstr "(?P<data>.*)"$
12355	^msgstr\[0\] "(?P<data>.*)"$
12356	^name$
12357	^net_(.*)$
12358	^new file mode (.+)
12359	^new file
12360	^new mode (\d+)
12361	^nic\.(\d+)
12362	^nic\.(\d+).*$
12363	^nic\.(\d+)\.
12364	^nic\.(\d+)\..*\.(\d+)$
12365	^nic\.(\d+)\.ipv4_address
12366	^nic\.\d+.*\.(\d+)$
12367	^nic\.\d+\.(.*)\.\d+$
12368	^nic\.\d+\.adapter_name\.\d+
12369	^nic\.\d+\.dns_auto_build\.\d+$
12370	^nic\.\d+\.dns_auto_hostname\.\d+$
12371	^nic\.\d+\.dns_has_conflict\.\d+$
12372	^nic\.\d+\.hostname\.\d+$
12373	^nic\.\d+\.ipv4_address\.\d+$
12374	^nic\.\d+\.mac_address\.\d+$
12375	^nic\.\d+\.name\.\d+$
12376	^nic\.\d+\.option_hostname\.\d+$
12377	^nodev
12378	^og
12379	^old mode (\d+)
12380	^old mode
12381	^p cnf\s+(?P<vars>\d+)\s+(?P<clauses>\d+)\s*\n
12382	^p
12383	^p4/
12384	^pad\d*
12385	^parent
12386	^parrot_string_t$
12387	^part(\d+)$
12388	^period(?P<period>[A-Z])(?P<subperiod>[0-9]+)$
12389	^pg_control version number:\s+(\d+)
12390	^pixel_at\(([0-9]+),([0-9]+)\).should_be_brighter_than pixel_at\(([0-9]+),([0-9]+)\)
12391	^pixel_at\(([0-9]+),([0-9]+)\).should_be_darker_than pixel_at\(([0-9]+),([0-9]+)\)
12392	^pixel_at\(([0-9]+),([0-9]+)\).should_be_of_color (0x[0-9a-fA-F]+)
12393	^pixel_at\(([0-9]+),([0-9]+)\).should_be_the_same_as pixel_at\(([0-9]+),([0-9]+)\)
12394	^platform/(.*?)/
12395	^plugin\.(.+)\.(.+)$
12396	^plural_rules-[a-zA-Z]{2}(-[a-zA-Z]{2})?\.py$
12397	^private_
12398	^profiles/void$
12399	^project = "(\w+)"$
12400	^pylint\s*
12401	^python(\d+\.\d+)
12402	^queryCid(\(.+\))\s*$
12403	^r(?P<svn_revision>\d+)
12404	^redir=(?P<redirhost>[0-9a-zA-Z_ .]+)
12405	^refs\/heads\/(.+)$
12406	^regex:(?P<regex>.*)
12407	^removed:\s*$
12408	^renamed:\s*$
12409	^reporter:counter:([^,]*),([^,]*),(-?\d+)$
12410	^reporter:status:(.*)$
12411	^require File.dirname
12412	^resource_file
12413	^resource_file=
12414	^results
12415	^revision (\d+.\d+)
12416	^revno: ([0-9.]+)
12417	^rra\[(\d+)\]\.(\S+)
12418	^ruby(?:gems)?(\d+\.\d+(?:\.\d+)?)
12419	^rubygems(\d+\.\d+(?:\.\d+)?)$
12420	^s3://([A-Za-z0-9-\.]+)/(.*)$
12421	^s3n:/|hdfs://(.*?)(/.*?)$
12422	^scores\s*$
12423	^scores\s+(\S+)\s*$
12424	^secmod\.db$
12425	^service_
12426	^settings$
12427	^sites$
12428	^space$
12429	^spam$
12430	^spec\/(.*?)_spec\.rb$
12431	^ssh: connect to host .* port .*: Connection timed out\r$
12432	^ssh://(.*?)(/.*)$
12433	^std::_Deque_const_iterator<.*>$
12434	^std::_Deque_iterator<.*>$
12435	^std::_List_const_iterator<.*>$
12436	^std::_List_iterator<.*>$
12437	^std::_Rb_tree_const_iterator<.*>$
12438	^std::_Rb_tree_iterator<.*>$
12439	^std::__debug::bitset<.*>$
12440	^std::__debug::deque<.*>$
12441	^std::__debug::list<.*>$
12442	^std::__debug::map<.*>$
12443	^std::__debug::multimap<.*>$
12444	^std::__debug::multiset<.*>$
12445	^std::__debug::priority_queue<.*>$
12446	^std::__debug::queue<.*>$
12447	^std::__debug::set<.*>$
12448	^std::__debug::stack<.*>$
12449	^std::__debug::unique_ptr<.*>$
12450	^std::__debug::unordered_map<.*>$
12451	^std::__debug::unordered_multimap<.*>$
12452	^std::__debug::unordered_multiset<.*>$
12453	^std::__debug::unordered_set<.*>$
12454	^std::__debug::vector<.*>$
12455	^std::__norm::_Deque_const_iterator<.*>$
12456	^std::__norm::_Deque_iterator<.*>$
12457	^std::__norm::_List_const_iterator<.*>$
12458	^std::__norm::_List_iterator<.*>$
12459	^std::basic_string<.*>$
12460	^std::bitset<.*>$
12461	^std::deque<.*>$
12462	^std::list<.*>$
12463	^std::map<.*>$
12464	^std::multimap<.*>$
12465	^std::multiset<.*>$
12466	^std::priority_queue<.*>$
12467	^std::queue<.*>$
12468	^std::set<.*>$
12469	^std::shared_ptr<.*>$
12470	^std::stack<.*>$
12471	^std::tr1::shared_ptr<.*>$
12472	^std::tr1::unordered_map<.*>$
12473	^std::tr1::unordered_multimap<.*>$
12474	^std::tr1::unordered_multiset<.*>$
12475	^std::tr1::unordered_set<.*>$
12476	^std::tr1::weak_ptr<.*>$
12477	^std::tuple<.*>$
12478	^std::unique_ptr<.*>$
12479	^std::unordered_map<.*>$
12480	^std::unordered_multimap<.*>$
12481	^std::unordered_multiset<.*>$
12482	^std::unordered_set<.*>$
12483	^std::vector<.*>$
12484	^std::weak_ptr<.*>$
12485	^subject= 
12486	^subject=\s*
12487	^summary
12488	^svn/tags/[\d+\.]+$
12489	^test \xe2\x80\x94 noun: .*$
12490	^test
12491	^test_
12492	^test_([a-zA-Z0-9]+)
12493	^test_.*\.py$
12494	^text/html(;.*)$
12495	^text/plain;\scharset="([\w\-\d]+)"$
12496	^theme-(\S+).js$
12497	^tick_0*([0-9]+)\.sql$
12498	^timeout.*/
12499	^timers\.
12500	^timestamp: [a-zA-Z]{3} (\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) ([-+])(\d{2})(\d{2})$
12501	^translator[-_]credits$
12502	^trellis_
12503	^true$|false$
12504	^try[0-9][0-9]*
12505	^ttp(s?)://\S+\s*$
12506	^u_(.*)_level$
12507	^v
12508	^v(?P<ver>\d+(?:\.\d+)+(?:(?:[abc]|rc)\d+(?:\.\d+)*)?)-(?P<commits>\d+)-g(?P<sha>[\da-f]+)$
12509	^v([0-9]+\.[0-9]+)$
12510	^v(\d+)\.?(\d+)?
12511	^v8:(\d+)$
12512	^v8dbg.*$
12513	^valid_
12514	^valid_netmask
12515	^vendor_id.*
12516	^version = "([^"]+)"$
12517	^which \d+\.\d+\.\d+$
12518	^width.should be ([0-9]+)
12519	^wsj/\d\d/
12520	^wx
12521	^zh_CN$
12522	^zh_TW$
12523	^{(?P<w>[^()[\]][^()[\]]*?)\((?P<n>[^()\[\]]+)\)}$
12524	^{(?P<w>[^[\]()]+)(?:\[(?P<i>\d+)\])?}$
12525	^{.*}$
12526	^{SSHA512}(.*)$
12527	^{[^\.]+\.[^\.]+(\.(lt|gt|le|ge|eq|ne|contains|startswith|year|month|day|hour|minute|second))?(\.not)?}$
12528	^{\s*\"([^\"]+)\",\s*(\S*)\s*}
12529	^|\n
12530	^|\n
12531	^} *\/\* *(?P<n>.*) *\*\/$
12532	_$
12533	_(.)
12534	_(.+?(?: \([0-9\?]{4}(?:/[IVXLCDM]+)?\))?(?: \(mini\)| \(TV\)| \(V\)| \(VG\))?)_ \(qv\)
12535	_(dir|file|path)s?$
12536	_(glsl|vert|frag)$
12537	_480p\.mov$
12538	_CONTACT\w
12539	_FA\.
12540	_HASH_
12541	_HOST\w
12542	_L1\.
12543	_L2\.
12544	_L3\.
12545	_MD\.
12546	_NOT_
12547	_R1
12548	_R2
12549	_R3
12550	_R4
12551	_SERVICE\w
12552	_SO\.
12553	_V1\.
12554	_V2\.
12555	_V3\.
12556	_[0-9]+$
12557	_[^,]*,
12558	_[^_]+$
12559	_\d*$
12560	_\d{4}-\d{2}-\d{2}_\d{2}-\d{2}\Z
12561	_^
12562	__
12563	__IMG__
12564	__[^_]+__
12565	__buildout_signature__ = recipes-\S+
12566	__buildout_signature__ = sample-\S+\s+zc.recipe.egg-\S+\s+(setuptools|distribute)-\S+\s+zc.buildout-\S+\s*
12567	__init__.py(c|o)?$
12568	__metrics(.*)
12569	__pyx_.*b
12570	__title__.*?["\'](.*?)["\']
12571	__version__ = (\(.*?\))
12572	__version__
12573	__version__.*
12574	__version__\s*=\s*(.+?\n)
12575	_authentication_token=(\w+)
12576	_c[0-9]{4,4}$
12577	_test.rb|_spec.rb|.feature
12578	_test\.py$
12579	_{2,}
12580	`([^`]+)`
12581	`([a-z_][a-z0-9_]*)`
12582	`(\w+)`
12583	``(.*)``
12584	`|\xe2\x80\x99
12585	a = (.+), b = (.+)
12586	a([0-9]+)$
12587	a:(link|visited|active|hover|focus)*
12588	ab
12589	abcd
12590	abort: .*: no match found!
12591	abort: Connection reset by peer
12592	abort: HTTP Error 5\d{2}
12593	act=view&id=(\d+)
12594	action="*"
12595	action="[\w\.\-/]*"
12596	action="http?\w://[\w.\?=/&]*/
12597	active IAX channel
12598	active SIP channels
12599	active channels
12600	adapter (\S.+):$
12601	adc #(.*)$
12602	addToSlideshow\((.+?)\);
12603	add_(\d+)$
12604	addhandler\s+(.+)
12605	addtask\s+(?P<func>\w+)\s*((before\s*(?P<before>((.*(?=after))|(.*))))|(after\s*(?P<after>((.*(?=before))|(.*)))))*
12606	affils.ast.\d{8}_\d{4}
12607	agent
12608	alias\s+"(.*?)"
12609	align="(.*?)"
12610	all_FA\.
12611	all_FA_skeletonised\.
12612	alpha
12613	amazon-affiliates""
12614	amp .*?(\d+\.\d+).*?(\d+\.\d+)
12615	amp.*(\d+\.\d+).*(\d+\.\d+)
12616	ana="(.*?)"
12617	ancestor|ancestor-or-self|attribute|child|descendant|descendant-or-self|following|following-sibling|namespace|parent|preceding|preceding-sibling|self
12618	android:versionCode="(\d+)"
12619	android:versionName="([^"]+)"
12620	api_server
12621	api_version:\s*(?P<api_version>[\w.]{1,32})
12622	app(\/|\\)|(lib|extras)$
12623	app_(.*).qm
12624	app_id=([^&]*)
12625	application/json
12626	application:.*
12627	arenda-open.ru
12628	arg
12629	arm.*
12630	arrResume\[\d*\]
12631	artist="([^"]*)"
12632	as\s+[\w.]+
12633	asm-(\w+)
12634	assets|views|vendor
12635	at (0x\w+)
12636	attachment=
12637	attack=
12638	attack=1
12639	attack=2
12640	attack=3
12641	attack=4
12642	attack=5
12643	attack=6
12644	attack=7
12645	attribute *::
12646	auth
12647	author: (?P<name>.*?);
12648	auto(bench|test)_args:
12649	autobench_args:.*
12650	available at
12651	avito.ru
12652	b([0-9]+)$
12653	balloon\s+(\d+)
12654	baltazar
12655	baseUrl>([^<]+)
12656	ber?
12657	bert
12658	bill-actions
12659	billinfo
12660	billtype=\w\w&billno=\d+
12661	bitcoin_(.*).qm
12662	bitrate: ([0-9\.]+)\s*(.*)\s+
12663	blocks_coords[0-9]*.txt
12664	blogs\.com
12665	blogspot\.com
12666	bogomips\s+:\s+(\d+\.?\d*)
12667	bool\s*[(][^)]*[)]
12668	boost::statechart::state<\s*(\w*),\s*(\w*)\s*,?\s*(\w*)\s*>
12669	boost::statechart::state_machine<\s*(\w*),\s*(\w*)\s*>
12670	boost::statechart::transition<\s*([\w:]*)\s*,\s*(\w*)\s*>
12671	branch type (\d)
12672	bridged_handler=
12673	browser=
12674	browser_.+\.js
12675	bug (?P<bug_id>\d+)
12676	bug\d+
12677	build/bdist\.[^/]+/egg/(.*)
12678	build=(.+)
12679	buildSummary.php\?buildid=.+">(.+)</a>
12680	buildout: Running \S*setup.py
12681	bvals
12682	bvecs
12683	byid-(\d+).txt
12684	c$
12685	c\([\d.,\s-]*,\s*(?P<final>-?[0-9.]+)\n?\)
12686	call
12687	call|ret|jmp
12688	caption="(.*?)"
12689	cat=(\d+)
12690	cc_[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.csv
12691	cdef\s*(?:[\w\.]*?\**\s*)?(\w+)\s*\(
12692	cdef\s*class\s*(\w+)\s*[(:]
12693	cfg_dir=
12694	changeset: \[.*\] - (.*)
12695	charging state:\s+(\w+)
12696	charset=(.+);?
12697	charset=([^;\s]+)
12698	charset=([^;]*)
12699	charset\s*=\s*"([^"]+)"
12700	charset\s*=\s*(?P<charset>[a-zA-Z0-9_\-]+)
12701	checksum: \s*(.*)\n
12702	child *::
12703	child$
12704	chromosomes_order
12705	city=
12706	class (\w+?)\(
12707	class |def |u?r?["\\']
12708	class="Agenda"
12709	class="FAILURE">([^<]+)</li>
12710	class="blog">(.*)<\/a>\D*\s*&rarr;\s*\D*\s+<a \D*href="(.*)"\D* class="topic">(.*)<\/a>
12711	class=\"evpill-(.*?)\"
12712	class\s([A-Za-z][A-Za-z0-9_]*)
12713	class\s*(\w+)\s*
12714	cli/job_unittest.py
12715	cloner=
12716	closes:\s*(?:bug)?\#?\s?\d+(?:,\s*(?:bug)?\#?\s?\d+)*
12717	cluster_name:.*
12718	cms/page/(\d+)
12719	code-creation,([^,]+),(0x[a-f0-9]+),(\d+),\"(.*)\"(?:,(\d+))?
12720	code-delete,(0x[a-f0-9]+)
12721	code-info,([^,]+),(\d+)
12722	code-move,(0x[a-f0-9]+),(0x[a-f0-9]+)
12723	coding[:=]\s*"*([-\w.]+)"*
12724	color ([^ ]+) #([a-fA-F0-9]{2,2})([a-fA-F0-9]{2,2})([a-fA-F0-9]{2,2})
12725	colors.tcl
12726	com.plexapp.agents.imdb://(tt[-a-z0-9\.]+)
12727	com.plexapp.agents.thetvdb://([-a-z0-9\.]+)/([-a-z0-9\.]+)/([-a-z0-9\.]+)
12728	comments=
12729	comment|text|processing-instruction|node
12730	common.py
12731	comp=[^&]*
12732	complex\s*[(][^)]*[)]
12733	config/
12734	config=(.*)$
12735	const S32 LL_VERSION_BUILD = (\d+);
12736	const S32 LL_VERSION_MAJOR = (\d+);
12737	const S32 LL_VERSION_MINOR = (\d+);
12738	const S32 LL_VERSION_PATCH = (\d+);
12739	const boost::array\<boost::array\<T, (\d+)\>, (\d+)\> ([a-zA-Z_\d]+)
12740	const char \* const IMP_VERSION_TEST = "(.*)";
12741	const\s+
12742	const\s+([a-zA-Z0-9_]+)\s*=\s*([^;\n]+)[;\n]
12743	content-location:\shttp.?://.*?(?=\r\n|$)
12744	contentTitle = "(.*?)";
12745	control
12746	copy.*from\s+stdin
12747	country=
12748	cpu MHz
12749	cpu MHz\s+:\s+(\d+\.?\d*)
12750	cpu family\s+:\s+(.+)
12751	cpu\d
12752	create_tasks
12753	creating \S*setup.cfg
12754	cross-entropy = ([\.\d\w]+) bits
12755	curpsinfo->pr_dmodel == PR_MODEL_ILP32
12756	d\d+:
12757	da ya
12758	data-i18n-[a-z0-9]+="(.+?)"
12759	data3_(\d)_\d+.txt
12760	data="(.*?)"
12761	data\s+does\s+not\s+exist\s*$
12762	database version (?P<version>.+?)\.?\n
12763	date: ([^; ]*) ([^;]*);  author: ([^;]*);
12764	dbpedia.org/resource
12765	dc_([a-zA-z]*)\.qm
12766	def\s*(\w+)\s*\(
12767	def\s+(\w+).*:
12768	defined\s*\(\s*(\w+)\s*\)
12769	deleted
12770	demerged
12771	detailkey="([^"]+)
12772	developmentRegion = (?P<region>.+);
12773	device_add ([^,\s]+)
12774	device_del ([^,\s]+)
12775	devicemanager.DMError
12776	dhcp.option.dns_server.\d
12777	dhcp.option.domain_name.\d
12778	dhcp.option.ntp_server.\d
12779	dhcp.pool.allow_booting.\d
12780	dhcp.pool.allow_bootp.\d
12781	dhcp.pool.end
12782	dhcp.pool.start
12783	dhcp.scope.end
12784	dhcp.scope.netmask
12785	dhcp.scope.start
12786	diff --git .* b/(.*)\n
12787	diff --git a
12788	dir[\n\r]+(?P<revision>\d+)
12789	disable.*=.*no
12790	distribute
12791	distribute( version)? \d+[.]\d+\S*
12792	distribute-\d+[.]\d+\S*-py\d.\d.egg
12793	distro[\\/]+(.+)
12794	div
12795	dlamch_\("(.*?)"\)
12796	dll_hijack=
12797	dmd 
12798	do
12799	doc
12800	domain type=.kvm
12801	down failures today: (\w+)
12802	down.php
12803	downforeveryoneorjustme
12804	dprint\((.*)\)
12805	drives\/([^/]*)
12806	dti_recon (.*)\n
12807	eau$
12808	ed
12809	ed2k://[^\s<>]+
12810	ed2k://\|file\|([^|]*)\|(\d+)\|([a-fA-F0-9]{32})\|
12811	egent.ru
12812	eggs\\\\demo
12813	emailfrom=
12814	emailfrom_relay=
12815	emailto=
12816	emls.ru
12817	empty
12818	enable_problem_impacts_states_change
12819	enabled\s*=\s*false
12820	encoding="([^"]+)"
12821	encoding=".*"
12822	encoding=
12823	endfacet
12824	endloop
12825	endmacro\s*\n
12826	enum\s+(\w+)\s*\{
12827	enum|\(|\)
12828	epy-(\w+)
12829	err: (?P<error>.+?(Could not match (?P<near>.+?))?) at /.+?:(?P<line>\d+)?
12830	err:
12831	error:([0-9A-F]+):
12832	eth[0-9]*
12833	ettercap_bridge=
12834	ettercap_ip=
12835	event-int ([^ ]+) ([^ ]+) ([0-9]+) ([0-9]+)
12836	event-str ([^ ]+) ([^ ]+) ([^ ]+) ([0-9]+)
12837	event_details
12838	event_teamlist|matchresults
12839	exampleLocalVar.*abcde
12840	exampleLocalVar.*xyzzy
12841	except\s*:
12842	except\s*Exception
12843	exclusions (.+)
12844	exe not registered
12845	exec
12846	exp=(\d+\.\d+)&data=(.+)&digest=(\S*)
12847	export\s+(.+)
12848	extdemo.c\n.+\extdemo.exp\n
12849	extdemo[.]pyd
12850	externalip=
12851	f[lie]=.+
12852	facebook.com
12853	facet
12854	failed = [0-9]+
12855	failures today: (\w+)
12856	fence_(.*)
12857	ff:ff:ff:ff:ff:ff
12858	fid=([^&]+)
12859	file format: (\w+)
12860	file: "(.+?)",
12861	file://[^/]*
12862	filename: \s*(.*)\n
12863	filename=(\S+)
12864	files compare
12865	find-links = http://localhost:\d+/
12866	firstname=
12867	fix_([ew][0-9][0-9][0-9])
12868	fixed:\s+([\w.+~-]+(\s+[\w.+~:-]+)?)
12869	flake8[:=]\s*noqa
12870	float\s*[(][^)]*[)]
12871	flv_url=(.+?)&
12872	fn
12873	fn\(
12874	fold-\d+
12875	for size= ([.0-9]+)
12876	foreach
12877	frame=.*time=([0-9\:\.]+)
12878	frame=\s+\d+
12879	from\s*(.*?)\s*import\s*(.+)
12880	function( .+?)\(
12881	fw-
12882	gaphor-version="[^"]*"
12883	gcc version (\d+\.\d+)
12884	gcc version
12885	gcc-.*
12886	gems/([^/]+)/gems
12887	gene # (\d+)
12888	gene="(.+)"
12889	gene_id \"(.*?)\"
12890	gene_id \"([\w+\.]+)\"
12891	gene_id \"([\w\.]+)\"
12892	gene_name \"([^\"]+)\"
12893	gene_name \"([a-zA-Z-_\/|.0-9]+)\"
12894	geo\.(\w+)
12895	get_ipython\(\)\.magic\(u?"%?autopx
12896	getsatisfaction\.com/(\w*)(?:/products/(\w*))?
12897	gettys are handled by
12898	gettys are handled by|inittab is no longer used when using systemd
12899	gi\|(\w+)\|
12900	gi\|.+\|.+\|([A-Z]+[0-9]+)\.[0-9]+\|\s*(.+)
12901	git version (\d+)\.(\d+)(\.\d+)?(\.\d+)?
12902	git-svn-id: \w+://.+ \w{4,12}-\w{4,12}-\w{4,12}-\w{4,12}-\w{4,12}
12903	github.com/(.+)/(.+)
12904	github.com/(.+)/(.+)(?:\.git){1}
12905	github.com:(.+)/(.+).git
12906	gl_Position
12907	gml:coordinates>([-\d\.]+),([-\d\.]+)<
12908	goog\.provideAll\s*\(\s*([^\)]+)\s*\)
12909	goog\.provide\([\'"]([^\)]+)[\'"]\)
12910	goog\.requireAll\s*\(\s*([^\)]+)\s*\)
12911	goog\.require\([\'"]([^\)]+)[\'"]\)
12912	google
12913	google_sql
12914	got played (?P<last>\w*?)\s
12915	gpp_inc:(.+?):
12916	groovy
12917	gstreamer([0-9\.]+)\((.+?)\)
12918	guest_autotest_results(\d+)
12919	guest_autotest_results\d+
12920	guibg=#*(\w+)
12921	guifg=#*(\w+)
12922	gvsearch(\d+|all)?:[\s\S]+
12923	h[1-6]
12924	hadnot
12925	has deleted job (\d+)
12926	has registered the job (\d+) for deletion
12927	have a nice day.*
12928	hazard
12929	hd.$|sd.$
12930	hde\.co\.jp
12931	hdfs://(.*?:\d+)(.*)
12932	height="(\d+?)"
12933	hello_foo(_.*)?
12934	hello_foo_new(_.*)?
12935	hex\(([^\)]+)\)
12936	hi (\w+) 
12937	hidraw:(.*)
12938	host test_host_9
12939	host:.*
12940	hostname=\"[a-zA-Z0-9-_\.]*\"
12941	href="(.*)"
12942	href="(.*?)"
12943	href="(.+?)"
12944	href="(?P<nfo>.+)" 
12945	href=".+?vodcrid=crid://itv.com/(.+?)&G=.+?&DF=0">(.+?)</a>
12946	href="/
12947	href="?/imgres\?(.*?)[ >]
12948	href="[^"]*.in"
12949	href="[^"]*.py"
12950	href\=\"([^\"]*?)\"
12951	href\s*=\s*"((?!%TWIKIDRAW%).+?)"
12952	http(s)?://(.*).(jpg|jpeg|png|gif|tiff|bmp)
12953	http(s)?://(www.)?((e621)|(e926)).net/post/show/
12954	http(s)?://(www.)?bad-dragon.com/
12955	http(s)?://(www.)?derpiboo((.ru)|(ru.org))(/images)?/
12956	http(s)?://(www.)?facebook.com/
12957	http(s)?://(www.)?fimfiction.net/story/
12958	http(s)?://(www.)?linkedin.com/
12959	http(s)?://(www.)?mozillians.org/
12960	http(s)?://(www.)?twentypercentcooler.net/post/show/
12961	http(s)?://(www.)?youtube.(com|co.uk|ca)?/watch(.*)\?v(.*)
12962	http(s)?://(www\.)?([a-z]*?)\.no
12963	http(s)?://youtu.be/(.*)
12964	http(s)?\://([\w\.]*)(\:(\d+))?(/.*)?
12965	http.+?(?:(?!").)*
12966	http://(.+?):(\d+)?
12967	http://(?:img.*?\.)xvideos.com/videos/thumbs/[a-fA-F0-9]+/[a-fA-F0-9]+/[a-fA-F0-9]+/[a-fA-F0-9]+/([a-fA-F0-9.]+jpg)
12968	http://(?:www.)?theyworkforyou.com/[^\s[\]]+
12969	http://(?:www\.)?redd(?:\.it/|it\.com/(?:tb|(?:r/[\w\.]+/)?comments)/)(\w+)(/.+/)?(\w{7})?
12970	http://(?P<ip>[0-9\.]+):(?P<port>[0-9]+)/.*
12971	http://([^/:]+)(?::(\d+))?(/.*)?$
12972	http://([^:/]+)(:(\d+))?(/.*)
12973	http://*.revision3.com/\S+
12974	http://.*\.qjwm\.com/down(load)?_\d+.html
12975	http://.*imdb\.com/title/tt([0-9]{7})/quotes
12976	http://85\.214\.105\.230/get_nzb\.php\?id=[0-9]*&section=hd
12977	http://85\.214\.105\.230/get_nzb\.php\?id=[0-9]*&section=moovee
12978	http://[^ \n\r]*
12979	http://[^/]*(.*)
12980	http://\S*.youtu(\.be|be\.com)/watch\S*
12981	http://\S*?flickr.com/\S*
12982	http://\S+
12983	http://\S+.viddler.com/\S+
12984	http://\S+.wordpress.com/\S+
12985	http://dbpedia.org/resource/
12986	http://en.wikipedia.org/wiki/
12987	http://localhost:[0-9]{4,5}/
12988	http://qik.com/\S*
12989	http://rapidshare.com/files/\d+/.*\.(?:rar|zip|avi|wmv|part\d+\.rar|\d+)|http://megaupload.com/?d=........|http://megaporn.com/?d=........
12990	http://vimeo.com/\S*
12991	http://www.hulu.com/watch/\S*
12992	http://www.muis.ee/portaal/museaalview/\d+
12993	http://www.polleverywhere.com/\w+/\S+
12994	http://www.slideshare.net/[^\/]+/\S*
12995	http:\/\/
12996	http[s]*:.*flickr.com/.*
12997	http[s]*:.*youtube.com/watch.*
12998	http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+#]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+
12999	http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+
13000	http[s]?://[www\.]?twitter\.com/.+/status/([0-9]+)
13001	http\://webkit\.org/b/(?P<bug_id>\d+)
13002	http\:\/\/([a-zA-Z0-9\.-_]*)
13003	https
13004	https://
13005	https://www.google.com/a/google.com/ServiceLogin
13006	https?://([^/]*?)(/.*)?
13007	https?://?([-\w.]*\.)?digg\.com/\w+\.\w+(/|$)
13008	https?://[-\.\w:]*/console/rest/v1/dev/
13009	https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]
13010	https?://[^/]*(/.*reset_key/\S*)
13011	https?://\S+
13012	https?://bitbucket.org/([^/]+/[^#/]+)/?#tags$
13013	https?://bitbucket.org/([^/]+/[^/]+)/?$
13014	https?://bitbucket.org/([^/]+/[^/]+)/src/([^/]+)/?$
13015	https?://github.com/([^/]+)/?$
13016	https?://github.com/([^/]+/[^/]+)($|/.*$)
13017	https?://github.com/([^/]+/[^/]+)/tags/?$
13018	https?://github.com/[^/]+/[^/]+/tree/([^/]+)/?$
13019	https?:\/\/www.filepicker.io\/api\/file\/.*
13020	https?:|/
13021	hv
13022	i[0-9]86
13023	i[3-9]86
13024	i[3456]86
13025	i[4-9]86
13026	i\d86$
13027	iax2 peers \[
13028	id
13029	id="__EVENTVALIDATION" value="([^"]*)"
13030	id="__VIEWSTATE" value="([^"]*)"
13031	id="cok" value="([^"]+)"
13032	id="video:(?P<internalvideoid>[0-9]+)"
13033	id=(.*?),
13034	id\(([^\)]+)\)
13035	id_.*=(\d+)
13036	if\s*\(
13037	if\s+.*\sthen
13038	ife$
13039	image:url\((.*)\)
13040	images/([^/]*)/(.*)
13041	import numpy as ([A-Za-z0-9_]+)
13042	import urwid
13043	import\b
13044	import\s+(.*)
13045	in stack frame record
13046	in-addr.arpa
13047	include\s+(.+)
13048	index = http://localhost:\d+/index
13049	index.html
13050	inet ([0-9.]*)/
13051	inet (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})
13052	inet addr:((\d{1,3}\.){3}\d{1,3})
13053	inet addr:([\d\.]+)
13054	inet addr:(\d+\.\d+\.\d+\.\d+)
13055	inet6 ([^ ]+)
13056	inet\s(\S+)\snetmask\s(\S+)\sbroadcast\s(\S+)
13057	info.log.[0-9]{4}-[0-9]{2}-[0-9]{2}
13058	inherit\s+(.+)
13059	ini: (.+?)\s+=\s+([\d\.]+)
13060	init.*.rc
13061	initial_token:.*
13062	input: \((\w+)\) \((\w+)\) \((.*)\)
13063	install_dir .+\n
13064	int.* unsigned
13065	int\s*[(][^)]*[)]
13066	interface[\s]*\[[^\]]*Conditional=([\_0-9a-zA-Z&|]*)
13067	internal log
13068	internal::
13069	invalid cidr value: "([^"]+)"
13070	invalid input syntax for type (cidr|inet): "([^"]+)"
13071	ip(engine|controller)-.+\.(log|err|out)
13072	ipaddrhere
13073	irr.ru
13074	is up
13075	is
13076	is_base_of<([^,]+), NodeType>
13077	iso.*?\-
13078	item=("[^"]+"|\'[^\']+\')
13079	j2sdk(.+)/jre/lib/i386/client/libjvm.so
13080	javascript:SndSelf\((\d+),(\d+)\);
13081	javascript:SndSelf\((\d+)\);
13082	jdbc:mysql:\/\/([^:]+):(\d+)\/(.+)$
13083	jdk(.+)/jre/lib/i386/client/libjvm.so
13084	job_(.+)
13085	jobfailures\.jsp|jobtracker\.jsp|jobdetails\.jsp|jobtasks\.jsp
13086	js\/(.*)\.h
13087	key = (\w+)
13088	key
13089	koko\=[a-z,A-Z]*
13090	l([eo])af$
13091	l[eo]af$
13092	langCode=([a-z]{2})
13093	lang_code="([\w\-]+)"
13094	lantern-net-installer_([a-z]+)_(.*)\.[a-z]+
13095	launched child process (\d+)$
13096	layer
13097	lc_1div8_1div1(?:.*?)
13098	lc_1div8_1div2(?:.*?)
13099	lda.b tcc__([rf][0-9]*)
13100	lda.b tcc__(r[0-9]*)
13101	lda.b tcc__r([0-9]*)$
13102	lda.l (.*),x$
13103	ldx #0
13104	leaked (\d+) bytes during test execution
13105	legislator/[SH]\d+\.htm
13106	length1=(\S+)\s+filtered_length1=(\S+)\s+length2=(\S+)\s+filtered_length2=(\S+)
13107	level(\d+)
13108	level.*=
13109	level\d+
13110	lf$
13111	lib(64)?/lib[^/]*\.so\..*
13112	lib/(python[^/]*)/(dist|site)-packages
13113	lib/python[^/]+/(?:dist|site)-packages/easy-install.pth$
13114	libbcc_([A-Z_]+)\s*:=\s*([01])
13115	library\("?(.*?)"?\)
13116	lighttpd-([0-9\.]+) .*
13117	likebox
13118	linden/
13119	line (\d+), col (\d+)
13120	line [0-9]+
13121	line-height:.*?;
13122	link="(.*?)"
13123	link="([^"]*)"
13124	linux-.*
13125	listen_address:.*
13126	lnL\(ntime:\s+\d+\s+np:\s+(\d+)\)
13127	localtime=(.*)\t
13128	logFile$
13129	logstore\(.*\);
13130	lp:\s+\#\d+(?:,\s*\#\d+)*
13131	ltq\":\"(.*?)\"
13132	lyricbox.*?</script>(.*?)<!--
13133	lyricbox.*?div>(.*?)<!--
13134	m=(\d+)
13135	mFocusedApp(.+)/
13136	macro\s+([a-zA-Z0-9_]+)\s*\(([^)]*)\)\s*\n
13137	magnet:
13138	magnet:\?xt=urn:btih:(\w+)
13139	mail-command:(un)?subscribe-member
13140	mailto
13141	mailto:
13142	maintenance|no commits
13143	man$
13144	map\.setCenter\(new GLatLng\(([-0-9.]+), ([-0-9.]+)\), (\d+)\);
13145	mapped\:\s([0-9]+)K\s+writeable/private:\s([0-9]+)K\s+shared:\s+([0-9]+)K
13146	maps.google.com/\?q=loc%3A(.*)">google map<\/a>
13147	mask(?:.*?)
13148	mass .*?(\d+\.\d+).*?(\d+\.\d+)
13149	mass.*(\d+\.\d+).*(\d+\.\d+)
13150	massmailer_file=
13151	max[(](.+),(.+)[)]
13152	mcolc_1div2(?:.*?)
13153	me
13154	mean_FA\.
13155	mean_FA_mask\.
13156	mean_FA_skeleton\.
13157	mean_FA_skeleton_mask\.
13158	medea\._addMod\(.*?,\[(.*?)\]
13159	medealib\.define\(.*?,\[(.*?)\]
13160	medianame=(.*)
13161	mediapath=(.*)
13162	mediatype=(.*)
13163	membase-server-enterprise_x86(_64)?_([.a-zA-Z0-9]*)
13164	member=([^"]+)">([^<]+)<
13165	memcached://([.\w]+:\d+;?)
13166	mess2Dheterodyne_meta_format
13167	message=
13168	method=post
13169	min[(](.+),(.+)[)]
13170	mips.*
13171	miss
13172	mk/images/members/.*?.jpg
13173	mk_individual_id_t=(\d+)
13174	mmap_
13175	mod
13176	mod(?:.*?)
13177	mode=(.*)
13178	model name\s*:\s*
13179	model name\s+:\s+(.+)
13180	model\s+:\s+(.+)
13181	modified:\s+(?P<name>.*\.py)
13182	module.cmake
13183	mom(\d+)
13184	mozilla\.[com|net|org]
13185	msf.exe
13186	msgid "(.*)"
13187	msgid\s"(.*)"
13188	multiattack1=
13189	multiattack2=
13190	multiattack3=
13191	multiattack4=
13192	multiattack5=
13193	multiattack6=
13194	multiattack7=
13195	my business rule is invalid
13196	my_
13197	mycnx
13198	mysql_fetch_array()
13199	myth://((?P<group>.*)@)?(?P<host>[0-9\.]*)(:(?P<port>[0-9]*))?/(?P<file>.*)
13200	myth://((?P<group>.*)@)?(?P<host>[\[\]a-zA-Z0-9_\-\.]*)(:[0-9]*)?/(?P<file>.*)
13201	myth://((?P<group>.*)@)?(?P<host>[a-zA-Z0-9_\.]*)(:[0-9]*)?/(?P<file>.*)
13202	n_(?:.*?)
13203	name,url
13204	name="[\w\.\-/]*"
13205	name="base\.version" value="([0-9.]+)[^"]*"
13206	name=\"(.*)\"
13207	name=\"q\">([^<]*)
13208	name\s+"(.*)",
13209	nameserver_(\d+)
13210	nc
13211	needs (\d+)MB on the (\S+) filesystem
13212	new file:\s+(?P<name>.*\.py)
13213	new(\w+)
13214	newreddit(\d+)
13215	nic\.(\d+)
13216	nic\.(\d+).*
13217	nic\.(\d+)\.mac_address\.0
13218	nic\.\d+\.(.*)\.0
13219	nic\.\d+\.ipv4_address\.\d+
13220	nickname\s*=\s*(.+)
13221	nltk.*
13222	no EDMs
13223	no measured results
13224	no such changelist
13225	nodif_brain\.
13226	nodif_brain_mask\.
13227	nodif_brain_mask\s+does\s+not\s+exist\s*$
13228	nofollow" class="[^"]+" href="(http.*?)">
13229	nonce="([^"]+)"
13230	nopush|no push
13231	not logged in
13232	novoebenevo.ru
13233	oauth_token" value="(.*)"
13234	objectname\=(\d{4}\-\w\w\-\d+-\d+\-\d+)
13235	obsolete
13236	olx.ru
13237	oo
13238	oot$
13239	ooth$
13240	openssl-([^<]+)<
13241	options:
13242	org.mpris.MediaPlayer2
13243	orgname=
13244	orgunit=
13245	os\.environ\[\w+\]\s*=\s*
13246	os\.putenv
13247	osxlinuxtarget
13248	ou=(\S+)[,\n]
13249	ound (\d+) EDMs? signed
13250	outer
13251	output: \((\w+)\) \((\w+)\) \((.*)\)
13252	outputName\s*=\s*(\w*?.yml)
13253	ov_tree(?:.*?)
13254	p=(\d+)
13255	p[0-9]+\$
13256	p[1,2,3]$
13257	p\d+$
13258	package +(.+);
13259	package\s+(.*)
13260	padding:10px[^>]+>([^<]*)
13261	pam
13262	parent
13263	parisc64
13264	passed = [0-9]+
13265	password=
13266	password_relay=
13267	pat_trie(?:.*?)
13268	patch (?P<patch_id>\d+)
13269	patch content
13270	path
13271	payload_selection=
13272	payload_selection_filename=
13273	phish_attack=
13274	pip \d(\.[\d])+(\.(pre|post)\d+)? from (.*) \(python \d(.[\d])+\)$
13275	play ([\w -:]*\w+)[ \r\n]+- ([\w /:,\(\)]+)
13276	player.amri.ca
13277	plink\.(.*)\.assoc\.linear
13278	points_(\d+)
13279	port=
13280	portlin=
13281	portosx=
13282	post
13283	power_(.*).template
13284	ppc
13285	ppc.*
13286	pref\(\"([^\"]+)\"\s*,\s*(\S*)\s*\)
13287	primary
13288	private(.*)\$
13289	private(.*)function
13290	processor \((.*)\)\n
13291	processor\s+: \d
13292	procfs.d
13293	productReference\s*=\s*(\S*)
13294	productType\s*=\s*"([^"]*)"
13295	profile_([0-9]+)_(.+)\.sym
13296	program finished with exit code 80
13297	program_junk
13298	progress on (?P<last>\w*?)\s
13299	project.[^=]*=(.*)$
13300	property="(video:release_date|og:title)" content="([^"]*)"
13301	protected(.*)\$
13302	protected(.*)function
13303	pseudo
13304	pwd|pass|uid|uname|Uname|userid|userID|USER|USERNAME|PIN|pin|password|Password|secret|Secret|Pass
13305	pxei.*
13306	pxem.*
13307	py\(\d+\)
13308	pytftpd.*
13309	python\s*module\s*(\S*)
13310	python\s*module\s*\S*
13311	p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del|hr|hr/|style|li|dt|dd|thead|tbody|tr|th|td|section|footer|header|group|figure|figcaption|aside|article|canvas|output|progress|video
13312	q=(http[^&]+)&
13313	qop="([^"]+)"
13314	qt_(.*).qm
13315	query ([\w ]*\w+)[ \r\n]+- ([\w /,]+)
13316	queryUrl(\(1,.*\))\s*$
13317	r(\d+)
13318	r?u?(\\'\\'\\'|""")
13319	r?u?\\'(.*?)(?<!\\)\\'|"(.*?)(?<!\\)"
13320	rFAILED.*\(failures=(\d+)\)
13321	r\d+\s[|]\s(.*)\s[|]\s200
13322	r\d+c\d+
13323	raise\s+\w+\s*,
13324	range ([^ ]+) ([^ ]+) ([^ ]+) ([0-9]+) ([0-9]+)
13325	rb_tree(?:.*?)
13326	rb_tree_mmap_lu_mtf_set(?:.*?)
13327	rb_tree_mmap_rb_tree_set(?:.*?)
13328	rc([0-9]+)$
13329	rc(\d)
13330	realm="([^"]+)"
13331	red hat
13332	ref:\s*refs/heads/(.+)
13333	refused
13334	rel.*
13335	relativesrcdir\s+(?P<relativesrcdir>.+?):
13336	release-(\d)+-(\d)+\.(\d)+\.(\d)+-(\d)\.
13337	release\s*=\s*False
13338	release\s*=\s*True
13339	ren1
13340	rename from 
13341	rename to 
13342	repomd
13343	reporter:counter:([^,]*),([^,]*),(-?\d+)$
13344	reporter:status:(.*)$
13345	require\("citeproc_js\.([^"]+)"\)
13346	require\("std\.([^"]+)"\)
13347	require\s+(.+)
13348	res/\d+
13349	resources/.*?/
13350	result_qt_WITH_
13351	return\s+transit<\s*(\w*)\s*>()
13352	reversehandler=
13353	revision[ \t]+([^ \t\r\n]+)
13354	revision\s*=.*
13355	rgba?\((.*)\)
13356	rgba?\(([\d, \%\.]+)\)
13357	rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$
13358	rm_filter_\d+_(.+)_(\d+)$
13359	root:x:
13360	root=\S*
13361	rootpw[ ]+--iscrypted[ ]+.*\n
13362	rows\)
13363	ruby
13364	rule: (.+?)\s+=>\s+(\w+)
13365	running sdist
13366	s390x
13367	sChamber=(\w)
13368	sa110
13369	screenshot_(?P<id>[0-9]+)_caption
13370	sd\w+\S
13371	security\s+definer
13372	seed_hosts:.*
13373	seeds:(\s*-.*)*\s*#
13374	self->operator(\+|-|\*|/|<|>=|==|\[\])\s*\(([^\)]*)\)
13375	self\.go\("(.*?)"\)
13376	self|None
13377	service test_host_0/db3
13378	service test_host_0/lvs100
13379	service test_host_0/web100
13380	sessionid=(\w+)&billtype=(\w+)&billno=(\d+)
13381	set (\d+) 0 0 (\d+) noreply\r\n
13382	set SRVPORT 80
13383	set SRVPORT 8080
13384	sfbay
13385	shinken\-specific\.cfg
13386	show/([0-9]+)
13387	silent=(.*)
13388	sip peers \[
13389	sis$
13390	skeins\ \=.*?(?:(?!yards).)*
13391	smallint.* unsigned
13392	sms_so_l_(\d+)
13393	smtp_port_relay=
13394	smtp_relay=
13395	snapshot-pos,(0x[a-f0-9]+),(\d+)
13396	sockets: used \d+\nTCP: inuse (?P<tcp_inuse>\d+) orphan (?P<orphans>\d+) tw (?P<tw_count>\d+) alloc (?P<tcp_sockets>\d+) mem (?P<tcp_pages>\d+)\nUDP: inuse (?P<udp_inuse>\d+)(?: mem (?P<udp_pages>\d+))?\n(?:UDPLITE: inuse (?P<udplite_inuse>\d+)\n)?RAW: inuse (?P<raw_inuse>\d+)\nFRAG: inuse (?P<ip_frag_nqueues>\d+) memory (?P<ip_frag_mem>\d+)\n
13397	sp.
13398	spam
13399	sparc
13400	species
13401	splay(?:.*?)
13402	splay_tree(?:.*?)
13403	src="([^"]*)"
13404	src="http://www.youtube.com/embed/(.+?)?rel=0
13405	src=([\\'"])(.+?)\1
13406	ssh-.*?=+
13407	st([axyz]).b tcc__([rf][0-9]*h?)$
13408	st([xy]).b tcc__([rf][0-9]*h?)$
13409	st_
13410	sta (.*),s$
13411	sta.b (tcc__[fr][0-9]*)$
13412	sta.b (tcc__r[0-9]*)$
13413	sta.b tcc__([rf][0-9]*h?)$
13414	sta.b tcc__r([0-9]*)$
13415	state=
13416	steamcommunity.com/openid/id/(.*?)$
13417	streamtheworld.com
13418	string
13419	subject=
13420	subprocess\.call\(argv, env=environ\)
13421	subroutine( .+?)\(
13422	subsection{
13423	summary\.php\?cid=([A-Z0-9]+)&cycle=\d+\" ?>([^<]+)
13424	sun
13425	sun4u
13426	suppressions.*\.txt$
13427	sys_(.+)
13428	t=.*(\d+) +to +(\d+)
13429	tag=(\w+)
13430	take\s*[(]
13431	target
13432	tcp://([^\s:]+):(\d+)$
13433	td bgcolor=white>([^<]*)
13434	team_details
13435	technorati.com
13436	template=
13437	test_
13438	test_(.*)\.js$
13439	test_(.*)\.py$
13440	test_|LookupTable|Types|SystemConfiguration|gannet|Socket|Timings|cs_
13441	tests\.py$
13442	text id="(.*?)"
13443	text/html; charset="?([^"]+)"?
13444	thread: .+ - (.*)
13445	threads listed
13446	ticket: .+ - (.*)
13447	tid=([^&]+)
13448	time=\d+.\d+
13449	timeleft: (?P<hours>[\d]*):(?P<minutes>[\d]*):(?P<seconds>[\d]*)
13450	title="([^"]*)"
13451	title\+?= *(.*?) *$
13452	tmpl/[^ ]*_js.cs
13453	tmux (\d+).(\d+)
13454	torrent-details
13455	torrent\/\d+\/
13456	total = [0-9]+
13457	tpkbd:([0-9a-fA-F]+):([0-9a-fA-F]+)
13458	track-description-value"><p>(.*?)</p>
13459	tracking_id=[a-f0-9]{32}
13460	transaction abort!
13461	transactions:\s+\d+\s+\((\S+) per sec.\)
13462	transcript_id \"([\w\.]+)\"
13463	transcript_id \"([a-zA-Z-_\/|.0-9]+)\"
13464	tree=
13465	truth:.*
13466	try
13467	try: 
13468	try:
13469	tstat
13470	tt(\d+)/$
13471	type:(\d+)-id:(\d+)
13472	type="(.*?)"
13473	type\b\s*
13474	type\s*[(]([^)]*)[)]\s+(?:is|==)\s+(.*?float)
13475	typecode\s*=
13476	typedef (\S+) (.*)
13477	typedef\s+(?P<from>[\w ]+)\s+(?P<to>\w+);
13478	typepad\.com
13479	u(".*?")|u(\\'.*?\\')
13480	ui_
13481	uid
13482	uk.org.publicwhip/person/
13483	unicode\s*[(][^)]*[)]
13484	up +(?:(?P<days>\d+) days?, +)?(?:(?P<hours>\d+):)?(?P<minutes>\d+)
13485	up failures today: (\w+)
13486	update_(smoke)?test_(.*)\.py$
13487	url
13488	url="
13489	url="(?P<url>.+)"
13490	url\([\'"]?(.*?)[\'"]?[\)\?\#]
13491	url\([\\'"]?([^\s)]+\.[a-z]+)[\\'"]?\)
13492	url\([\\'"]?([^\s)]+\.[a-z]+[\?\#\d\w]*)[\\'"]?\)
13493	url\(__EMBED__(.+?)(\?\d+)?\)
13494	urn:btih:([\w]{32,40})
13495	usage:
13496	use\b
13497	used_suppression:\s+([0-9]+)\s(.*)
13498	user=(\d+)
13499	user_count: (\d+)
13500	userid=(\d+)
13501	username_relay=
13502	v([1-9][0-9]*)([if][1-9][0-9]*)
13503	v1.1\/
13504	v=([0-9a-zA-Z_]*)$
13505	v=([0-9a-zA-Z_]*)&
13506	v=([^&]+)
13507	v\d{2}$
13508	value="([^"]+)"
13509	value="(\w+)"\s+name="selectemule"
13510	value="(ed2k://[^"]+)"
13511	value=[\\'"]([^\\'"]+)[\\'"]
13512	var thunder_url = "([^"]+)";
13513	var x=Math\.round\(Math\.sqrt\((?P<x>[0-9]+)\)\);
13514	var(.*)\$
13515	var-bind=[\'"](.*)["\']
13516	vcard
13517	vendor_id\s+:\s+(.+)
13518	version (\d+)\.(\d+)\.(\d+)
13519	version: (?P<version>.+)
13520	version: \s*(.*)\n
13521	version[ \t]+([^ \t\r\n]+)
13522	version\s*=\s*[\'"](?P<version>[\d\.]+)[\'"]
13523	vertex\s*([\d\-+\.EeDd]+)\s*([\d\-+\.EeDd]+)\s*([\d\-+\.EeDd]+)
13524	videos/(.*)
13525	viewSite.php\?siteid=.+">(.+)</a>
13526	view\.php\?id=(\d+)
13527	vkontakte.ru
13528	w[0-9]*[nN]
13529	was <<object object at 0x[0-9a-fA-F]+>> with id [0-9]+
13530	webapprt_
13531	webattack_account=
13532	webattack_email=
13533	webattack_message=
13534	whoami$
13535	width="(\d+?)"
13536	wifi_interface
13537	win
13538	win32
13539	wireless=
13540	wl_apsta.*
13541	wordpress\.com
13542	world\[(\d+)\]\[(.*)\]
13543	wx_major_version_number=(\d+)
13544	wx_minor_version_number=(\d+)
13545	wx_release_number=(\d+)
13546	x:([0-9]+) y:([0-9]+)
13547	xApMon_(.*)
13548	xlfcmp:(?P<version>\d+([.]\d+)+)
13549	xml
13550	xmlns=".*"
13551	xmlns=[^>]+
13552	xyz
13553	y$
13554	yes|no
13555	ython$
13556	ytsearch(\d+|all)?:[\s\S]+
13557	yvsearch(\d+|all)?:[\s\S]+
13558	z
13559	zc.buildout(-\S+)?[.]egg(-link)?
13560	zc.buildout-\S+-
13561	zc.buildout-\S+[.]egg
13562	zc.buildout[.]egg-link
13563	{$
13564	{(.*)}$
13565	{(.*?)}
13566	{(0x..),\s*"([^"]*)"\s*,\s*"([^"]*)"[^}]*}\s*
13567	{(?P<macro>[a-z][a-z0-9-]*)}
13568	{(?P<s>.+?)}
13569	{([^}^{]*)}
13570	{([a-zA-Z_ 0-9]+)}
13571	{([a-z_]+)}
13572	{(\d+)\}
13573	{(\w+)}(.+)
13574	{*[a-zA-Z_ 0-9]+}
13575	{[^}]+}
13576	{[a-zA-Z0-9_\-\.\/\:]*}
13577	{[a-zA-Z_ 0-9]+}
13578	{[a-z][a-z0-9-]*}
13579	{\$page}
13580	{\s*
13581	{\s*(.+?)?\s?(\([0-9\?]{4}-[0-9\?]{1,2}-[0-9\?]{1,2}\))?\s?(\(#[0-9]+\.[0-9]+\))?}
13582	{ccccccccc}
13583	{ccccc}
13584	{version}
13585	{{(.+?)}}
13586	{{(?P<braced>.*?)}}
13587	{{.+?\|(.+?)}}
13588	{{[ ]?placeholder[ ]?\([ ]?"(?P<placeholder>[a-zA-Z0-9]+)"[ ]?\)[ ]?}}
13589	{{\s*([a-zA-Z0-9_]+)\s*}}
13590	{{context\|(.+?)}}
13591	{{{
13592	{{{([^{]+?)}}}
13593	{}
13594	};
13595	}\s+
13596	}}}
13597	~[^01]
13598	~~!`TEMPLATE_CONTENT_HERE`!~~
13599	~~(?P<t>[^\s*]+( +[^\s*]+)*)~~
13600	'(.*?)'
13601	([a-z]+)([,']*)
13602	Decimal\('(\d+(\.\d*)?)'\)
13603	    geom = models.PolygonField\(([^\)])*\)\n    objects = models.GeoManager\(\)
13604	   \.\.\.+:
13605	 (&|and) 
13606	 Video: 
13607	 [0-9]+_[0-9]+\(
13608	!\w+
13609	"
13610	"(.*?)"
13611	".*"
13612	"id" ([^,]+),
13613	"}
13614	#?}|>|%}
13615	%%HiResBoundingBox: .*
13616	%J\s*([0-9\.]+)\s*([\+\-\.0-9]+)
13617	&#(\d+);
13618	&#?\w+;
13619	&#x(\w+);
13620	&(#(\d+|x[\da-fA-F]+)|[\w.:-]+);?
13621	("""[^"\\]*(?:(?:\\.|"(?!""))[^"\\]*)*""")|("[^"\\]*(?:\\.[^"\\]*)*")
13622	("(?:[^"\\]*(?:\\.[^"\\]*)*)"|\'(?:[^\'\\]*(?:\\.[^\'\\]*)*)\'|[^\s=]+)
13623	((; *if .*)? \{__pyx_filename = .*goto __pyx_L\w+;\})
13624	((?:nm|tt)[\d]{7})
13625	(([a-zA-Z_][a-zA-Z0-9_]*)?:)?([a-zA-Z_][a-zA-Z0-9_-]*)?
13626	((^|[^%])(%%)*%s)
13627	():\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?
13628	(.*)-(.*)
13629	(.*)\((.*)\)
13630	(</SCR.*?)...(.*?IPT>)
13631	(?:(?:\n\r?)|^)( *)\S
13632	(?:[-*/%^&|<>!]=?|&&|\|\||<<|>>>|={1,3}|!==?)\s*(?<!\+)(\+)[\w(\[]
13633	(?:\.svg|\.png|\.jpg)
13634	(?:\s*).+?\.(?:\s+|$)
13635	(?<!&)&(\w)
13636	(?<![\w])(\d+)L(?![\w])
13637	(?<!\\)(["\\'])(.*?)(?<!\\)\1
13638	(?i)([ -](regular|plain|italic|oblique|(semi)?bold|(ultra)?light|extra|condensed))+$
13639	(?i)\/*((@[^\s:]*)|(\u56de\u590d@[^\s:]*:))[:\s\/]*
13640	(?i)\w{0,4}://[\w\d./]*
13641	(?s)<[^>]*>|&#?\w+;
13642	(?x) \( [^()]* \b few \b
13643	(In \[[0-9]+\]: )|(   \.\.\.+:)
13644	(Out\[[0-9]+\]: )|(   \.\.\.+:)
13645	(Py[A-Z][a-z]+_[A-Z][A-Z_]+)\(
13646	(Py[A-Z][a-z]+_[A-Z][a-z][A-Za-z_]+)\(
13647	(Traceback \(most recent call last\):\n(?:  File "[^"\n]+", line \d+, in \w+\n(?:    .+\n)?)+\S.*\n)
13648	(WARNING|ERROR|INFO) \(l.(?P<line>[0-9]+), c.(?P<column>[0-9]+)\): (?P<rest>.*)
13649	([\\"])
13650	([\n\r\t\x08\x07])
13651	([^ ]+) *(\+\+|--)
13652	([idel])|(\d+):|(-?\d+)
13653	(\b|_)([^\b_\s]+?)(\b|_)
13654	(\b|_)(\b|_)
13655	(\d+)
13656	(\d+).*?(\d+)
13657	(\d+)\.(\d+)\.?(\d+)?
13658	(\d?)(\D?)
13659	(\d{1,2})-(\d+)-(\d+)
13660	(\d{1,2})/(\d+)/(\d+)
13661	(\d{1,2})/(\d{1,2})
13662	(\d{1,2}):(\d\d)$
13663	(\d{1,2}):(\d{2})
13664	(\s)
13665	(\w\w\w) (\d{1,2}) (\d{1,2})
13666	(\{|<|%{)$
13667	(\x01?\x1b\[[0-9;]*m\x02?)
13668	(\x01?\x1b\[[0-9;]+m\x02?)
13669	(\xef|\xbb|\xbf)
13670	(__Pyx_X?(GOT|GIVE)REF|__Pyx_RefNanny[A-Za-z]+)
13671	(__Pyx_[A-Z][A-Z_]+)\(
13672	(__Pyx_[A-Z][a-z_][A-Za-z_]+)\(
13673	(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec) (\d{1,2}) (\d{1,4})
13674	(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec) (\d{1,2})
13675	(url\([\'"]{0,1}\s*(.*?)["\']{0,1}\))
13676	(x*)
13677	, \(line:[0-9]+, col:[0-9]+\)
13678	,,+
13679	,:[ _]
13680	-(?=-)
13681	-+
13682	--+
13683	-[^-]*U.*
13684	-d
13685	-h
13686	-w
13687	.*([-.*?]|\[.+\]).
13688	.*/([^?#]*)
13689	.*?\n
13690	.*\.imdb\.com/title/tt\d+/
13691	.+,\s*$
13692	.+?(--.+?)(?:\s|,|$)
13693	/\'""
13694	/data[^ ]*/hphp
13695	/title/tt\d+
13696	/var/cache/dnf/[a-zA-Z0-9_]+/x
13697	/var/tmp/dnf-[a-zA-Z0-9_-]+/[a-zA-Z0-9_]+/x
13698	/var/tmp/dnf-\w+-\w+/locks/8e58d9adbd213a8b602f30604a8875f2
13699	0{6,}[0-9]
13700	3\.1\d+
13701	:\d
13702	:\w+:`(.+?)`
13703	<([^>]+)>
13704	<.*?>|((?:\w[-\w]*|&.*?;)+)
13705	<.*?>|(.)
13706	</tbody>\s*<tbody>
13707	<[^>]*>
13708	<\!--.+?-->
13709	<a href="(.*?)" class="deletelink">Delete</a>
13710	<a href="(.*?)" class="historylink">History</a>
13711	<a href="(.*?)">joepublic</a>
13712	<form enctype="multipart/form-data" action="(.*?)" method="post" id="user_form".*?>
13713	==[^=]+==
13714	==\s*Delta[kg]ere\s*==
13715	API|TOKEN|KEY|SECRET|PASS|SIGNATURE
13716	Apple (?:clang|LLVM) version (\d+\.\d+)
13717	Closure\$\$[0-9a-f]+\$
13718	In \[(\d+)\]:\s?(.*)\s*
13719	MatplotlibBox:\(([\d.]+)pt\+([\d.]+)pt\)x([\d.]+)pt
13720	Name(?:\[([^]]+)\])?\s*=(.*)$
13721	Out\[(\d+)\]:\s?(.*)\s*
13722	Python ([a-z0-9\.]+)
13723	Size ([\.\d]+)\xa0([GMK])iB
13724	UNSEEN (\d+)
13725	[ ,]+
13726	[ \(\)\-_\[\]\.]+
13727	[ \t]*--[ \t]*|__[ \t]*|_[ \t]+(_[ \t]+)*
13728	[ ]{1}([01]{1}[0-9]{1}|[2]{1}[0-3]{1}|[0-9]{1})[-:.]([03]{1}[05]{1})[.,: ]{0,1}
13729	[ ]{1}([01]{1}[0-9]{1}|[2]{1}[0-4]{1}|[0-9]{1})[-:.]([0-6]{1}[05]{1}|\u0447\u0430\u0441\u043e\u0432)[.,: ]{0,1}
13730	[ _]?\(!\)
13731	[&#%?!]
13732	[*?]|\[.+\]
13733	[-+]?[0-9]+(\.[0-9]+)?(e[-+]?[0-9]+)?
13734	[-,^]([.]|$)
13735	[.a-z\xe4\xf6\xfc\xdf\xe7\xe1\xe2\xe0\xe9\xe8\xea\xeb\xed\xf1\xf4\xf3]
13736	[/+\\:=]
13737	[0-9]+,[0-9]*
13738	[0-9]+:
13739	[0-9]\.
13740	[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}(?:\.[0-9]+)?
13741	[;:][ _]
13742	[;]
13743	[<{\[]
13744	[>}\]]
13745	[?!]([."]|$)
13746	[A-Z]+
13747	[\-*:=@]
13748	[\._\(\) ]+
13749	[\000-\037]
13750	[\W_]*
13751	[\W_]+
13752	[\d\.]
13753	[\s\x00-\x1f@,:<>\x7f]
13754	[\t !"#$%&\\'()*\-/<=>?@\[\\\]^_`{|},.]+
13755	[\n]+
13756	[\r\n ]+
13757	[\t ]*\n[\t ]*
13758	[\t\n ]+
13759	[\x00-\x08\x0b\x0c\x0e-\x1f\x7f-\x9f\\]
13760	[^ -~\n]
13761	[^ ]*/debugger(/[^ ]*.php)
13762	[^!-~]
13763	[^0-9]
13764	[^0-9](?P<year>[0-9]{4})(?P<month>[0-9]{2})(?P<day>[0-9]{2})[^0-9]
13765	[^0-9]([0-9]{3,4})[^0-9]
13766	[^0-9]([0-9]{4})[^0-9]
13767	[^0-9]+
13768	[^A-Za-z0-9_\.\-]
13769	[^A-Za-z_]
13770	[^SATB-]+
13771	[^\W0-9_]+
13772	[^\s"]*"[^"]*"[^\s"]*|[^\s"]+
13773	[^\w"\\'`\(\)]
13774	[^\w-]+
13775	[^\w\d_\-]+
13776	[^\r\n\t ]?([^\r\n\t ]| [^\r\n\t ])*[^\r\n\t ]?$
13777	[^a-zA-Z0-9 ]
13778	[^a-zA-Z0-9_\-\. ]
13779	[^a-zA-Z0-9_\-\.]
13780	[_.,\[\]\(\): ]+
13781	[_.,\[\]\(\):]
13782	[a-zA-Z]+
13783	[a-zA-Z_][a-zA-Z0-9_]*
13784	[a-z]+(-[a-z0-9]+)*
13785	[ab]\d+$
13786	[eE\.]
13787	[xy]
13788	\$(\w+)
13789	\$<\d+>[/*]?
13790	\((.*?)\)
13791	\+(\d*) |\+(\d*)$
13792	\+(\d*)d
13793	\+(\d*)y
13794	\+(\d+)m
13795	\+(\d+)w
13796	\-+
13797	\.\.\s+doctest-requires\s*::\s+(.*)
13798	\.\.\s+doctest-skip\s*::
13799	\?[a-zA-Z_][a-zA-Z0-9_]*
13800	\A#[a-fA-F0-9]{6}\Z
13801	\B\w
13802	\[([^]]+)\]
13803	\[[^\]]*\]
13804	\[\[([^:]+):([^|\]]+)
13805	\[\[Bruker:([^\|\]]+)
13806	\[\[Category
13807	\\.|.
13808	\\\\|\\_|_
13809	\\version\s*"(\d+\.\d+(\.\d+)*)"
13810	\^{2}([0-9a-f]{2})
13811	\b((?:([\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\s&()]|&amp;|&quo\nt;)*(?:[^!"#$%&\'()*+,.:;<=>?@\[\]^`{|}~\s]))|(?:\((?:[^\s&()]|&amp;|&quot;)*\)))+)
13812	\b\w
13813	\bimdb.com/title/tt\d+\b
13814	\d+\.\d+(.\d+)?
13815	\n\s*ACCEPTS:\s*((?:.|\n)*?)(?:$|(?:\n\n))
13816	\n\s*\n
13817	\r\n|\r
13818	\s*(#|$)
13819	\s*(.+)\s*:\s*([-a-zA-Z]+)\s*$
13820	\s*\[(?P<section>.*)\]
13821	\s*\n\s*
13822	\s*\n\s*
13823	\s*include\s*=\s*(?P<url>.*)
13824	\s*includeconf\s*=\s*(?P<url>.*)
13825	\s+\(.*\)$
13826	\s+\(\d{4}\)$
13827	\s+\[(?P<section>.*)\]
13828	\s+|(?:\s*,\s*)
13829	\s-[wdhm]?\d+
13830	\s\s+
13831	\s|,
13832	\w
13833	\w+$
13834	\w+
13835	\w{5,}|\w{2,}(?:[:-]\w+)+
13836	\x1b\[[\d;]+m
13837	\xa0
13838	\xa7([0-9a-zA-Z])
13839	\n    ::(?=[^=])|            # two :: (but NOT ::=)\n    :[a-zA-Z][a-zA-Z0-9]+| # :foo\n    `|                     # ` (seldom used by itself)\n    (?<!\.)\.\.[ \t]*\w+:  # .. foo: (but NOT ... else:)\n    
13840	\n    \x00 | # NULL\n\n    # Bidi control characters\n    \u202a | # LRE\n    \u202b | # RLE\n    \u202c | # PDF\n    \u202d | # LRM\n    \u202e   # RLM\n    
13841	\n
13842	\r?\n
13843	\r\n?
13844	\r\n?|\n
13845	\x01?\x1b\[([0-9;]*)m\x02?
13846	\x01?\x1b\[([0-9;]+)m\x02?
13847	\x1b\[([0-9]+)(;[0-9]+)*m
13848	\xa0([^\xa0]|$)
13849	\xa7(.)
13850	^ *
13851	^#.*coding[:=]\s*([-\w.]+)
13852	^#\s*-\*-\s*coding:\s*.*-\*-$
13853	^(\d+):(\d+)$
13854	^(\d{1,2})$
13855	^(display|(border_[a-z]+|outline)_(width|color))$
13856	^(https?|s?ftp)://
13857	^.+\@(\[?)[a-zA-Z0-9\-\.]+\.([a-zA-Z]{2,3}|[0-9]{1,3})(\]?)$
13858	^/var/cache/dnf/[a-zA-Z0-9_]+/[0-9]+$
13859	^/var/tmp/dnf-[a-zA-Z0-9_-]+/[a-zA-Z0-9_]+/[0-9]+$
13860	^/year/\d+
13861	^<gml:Point SrsName="EPSG::4326"><gml:coordinates decimal="\." cs="," ts=" ">-104.609251\d+,38.255001</gml:coordinates></gml:Point>
13862	^<gml:Point srsName="EPSG:4326"><gml:coordinates>-104\.60925\d+,38\.255001</gml:coordinates></gml:Point>
13863	^<gml:Point srsName="SDO:4326" xmlns:gml="http://www.opengis.net/gml"><gml:coordinates decimal="\." cs="," ts=" ">-104.60925\d+,38.25500\d+ </gml:coordinates></gml:Point>
13864	^<html><a href="http://example.com/reset/[\w/-]+/">Link</a></html>$
13865	^Bruker:UKBot/Sandkasse
13866	^VERSION\s*=\s*[\\'"]{1,3}
13867	^Wikipedia:Ukens konkurranse/Ukens konkurranse
13868	^[ ]{0,3}(?P<key>[A-Za-z0-9._-]+):\s*(?P<value>.*)
13869	^[ ]{4,}(?P<value>.*)
13870	^[0-9][A-F][0-9]$
13871	^[012TF\*]{9}$
13872	^[A-Za-z0-9_]+$
13873	^[A-Za-z_]+$
13874	^[A-Za-z_][A-Za-z0-9_\.\-]*$
13875	^[\s]*==([^=]+)==
13876	^[^A-Za-z_]$
13877	^[a-zA-Z0-9_]+$
13878	^[a-zA-Z][a-zA-Z0-9\-_]*$
13879	^[a-zA-Z_][a-zA-Z0-9_]*$
13880	^\d+_
13881	^\s*(>>>|\.\.\.) (.*)$
13882	^attachment; filename="(.*)"$
13883	^d\d{1,3}:
13884	^http://example.com/reset/[\w+/-]
13885	^http://example.com/reset/[\w/-]+
13886	^import (.*)\.\d+[^\s]*$
13887	^last(-\d+)?$
13888	^textedit://(.*?):(\d+):(\d+)(?::\d+)$
13889	^ur\d{7,8}$
13890	__|try\s*:|lambda
13891	_h?480p\.mov$
13892	a
13893	amazon-affiliates""
13894	coding[:=]\s*([-\w.]+)
13895	descargar/torrent/
13896	down.php
13897	download/\d+/.*\.torrent
13898	http://torrentz\.eu/(?P<hash>[a-f0-9]{40})
13899	http://|https://|ftp://|file://|file:\\
13900	https?://[^/]*(/.*reset/\S*)
13901	https?://[^/]*imdb\.com/
13902	mon|tue|wed|thu|fri|sat|sun
13903	name\s?=\s?([^"\s]+)/>
13904	needs (\d+)MB on the (\S+) filesystem
13905	order by (\w+)
13906	s
13907	set\s+([-a-zA-Z0-9]+)\s+(.+)\s*$
13908	tt(\d+)/$
13909	version ([^\+\)]+)
13910	{[{%].*[}%]}
13911	{{[^}]*(?:stubb|spire)[^}]*}}
